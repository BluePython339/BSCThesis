_start
push 0xb344a295
pushad
jmp rwxdata
mov [ esp + 0x20 ] 0x49e8401e
pushad
mov [ esp + 0x14 ] 0x98ef
push ebx
mov [ esp + 0x40 ] 0xae4a2856
push 0xd3d7d8df
mov [ esp + 0x8 ] 0x44
pushfd
pushfd
lea esp [ esp + 0x4c ]
jmp rwxdata
call sub_100951d5
test al 0x80
movzx eax [ esi ]
call sub_10094395
xor al dl
neg al
movzx eax [ esi ]
cmc
call sub_100946e9
sub_10094259
mov [ esp + 0x8 ] esp
pushfd
pop [ esp + 0x34 ]
lea esp [ esp + 0x34 ]
jns rwxdata
jmp rwxdata
pushfd
push 0xdfc97bce
push [ esp + 0x4 ]
push [ esp + 0xc ]
pop [ ebp ]
pushfd
mov [ esp ] bh
mov [ esp ] 0x41eaf442
pushfd
lea esp [ esp + 0x18 ]
jmp rwxdata
pushad
pushad
push [ esp + 0x40 ]
pop [ ebp ]
push 0xeb72378d
mov [ esp ] 0xe745
mov [ esp ] 0x23b9
lea esp [ esp + 0x48 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_10094292
pushad
sub ebp 0x2
jmp rwxdata
bt dx ax
clc
and [ ebp + 0x4 ] ax
push ecx
pushfd
pop [ esp + 0x24 ]
pushfd
push [ esp ]
push [ esp + 0x2c ]
pop [ ebp ]
push eax
pushfd
mov [ esp + 0x4 ] si
lea esp [ esp + 0x38 ]
jmp sub_10094807
sub_1009432b
[ edi ] [ esi ]
ror di 0x6
cmc
btc di ax
mov edi [ esp + 0x50 ]
sar si cl
ror si 0x3
lea esi [ 0xffffffffc6bb040e ]
mov esi [ esp + 0x54 ]
std
stc
std
bt si 0x1
push [ esp + 0x58 ]
popfd
mov [ esp ] dh
mov [ esp + 0x10 ] ah
lea esp [ esp + 0x5c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_10094395
test esi 0xd87c590b
stc
bt bx 0x6
sub al bl
call sub_10094ced
push [ esp ]
add ebp 0x8
pushfd
lea esp [ esp + 0x28 ]
jo rwxdata
jmp sub_10094b6e
push 0xc441deaf
pushfd
mov [ es : eax ] edx
mov [ esp + 0x4 ] bl
lea esp [ esp + 0x8 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_10094468
mov [ esp + 0x24 ] esi
movzx bx cl
setbe bl
not bl
mov [ esp + 0x20 ] ebp
bswap ebp
movsx bx dl
bswap bx
mov [ esp + 0x1c ] edx
seto bh
pushad
xchg ebp ebx
lea ebp [ ecx * 4 + 0x48143fe0 ]
xchg [ esp + 0x38 ] esi
lea ebx [ ebx - 0x799e353c ]
setae al
setge al
mov [ esp + 0x4 ] ebx
xchg [ esp + 0x34 ] edi
lea esp [ esp + 0x34 ]
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_10095284
sub_100944f0
mov [ ss : eax ] dx
push 0x58f05f14
mov [ esp + 0x4 ] 0xa1
push eax
lea esp [ esp + 0x38 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_10094574
mov [ esp + 0x4 ] ebx
push 0x8acc97b2
call sub_10094cae
pushad
mov [ esp + 0x34 ] edx
call sub_100955e8
pushad
aam 0xb3
add al 0xa0
mov eax ebp
pushad
call sub_100968a7
call sub_1009452c
pushfd
pushfd
pop [ esp ]
pushfd
jmp rwxdata
mov [ esp ] 0x28df
pushad
push [ esp + 0x24 ]
pop [ ebp ]
push 0xdd1df9c2
mov [ esp ] 0x70da
lea esp [ esp + 0x2c ]
jmp sub_10094807
sub_100946e9
bt ecx 0xa
xor al bl
mov [ esp ] 0xa0bd6eee
jmp rwxdata
inc al
pushfd
clc
bt esp ebx
add esi 0x1
jmp rwxdata
stc
clc
ror al 0x4
stc
sub esp 0xfffffff8
jae rwxdata
cmp bh 0x24
sub al 0x7
call sub_10094cfb
btr ax bx
dec al
shl al cl
bt ax sp
mov ax [ esi ]
stc
test al bh
add esi 0x2
call sub_10095545
sub bl al
call sub_10094947
call sub_100952e2
sub al 0x7
test ch 0xd
pushad
stc
xor bl al
mov [ esp + 0x8 ] bh
sub ebp 0x2
jmp rwxdata
mov [ esp + 0x4 ] edi
push [ esp ]
mov [ ebp ] ax
mov [ esp + 0x4 ] ah
pushfd
mov [ esp ] bp
pushfd
lea esp [ esp + 0x2c ]
jmp sub_10094807
sub_10094818
push [ esp + 0x30 ]
pop [ ebp ]
mov [ esp + 0x4 ] 0xfec1
lea esp [ esp + 0x34 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_1009482f
call sub_10095f33
push ebp
mov [ ebp ] eax
push eax
mov [ esp ] dl
lea esp [ esp + 0x2c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_10094865
mov [ ebp - 0x4 ] ecx
bt di 0xd
or ecx ecx
mov [ esp ] 0xb
lea esp [ esp + 0x28 ]
je rwxdata
call sub_1009508b
stc
push esp
pushad
pushad
xor eax eax
pushfd
jmp rwxdata
stc
call sub_10095f0a
mov edx 0x1deac136
not dh
mov edx [ ebp ]
pushad
mov eax [ ebp + 0x4 ]
jmp rwxdata
div [ ebp + 0x8 ]
push eax
mov [ ebp + 0x4 ] edx
push esi
mov [ ebp + 0x8 ] eax
push ebp
jmp rwxdata
jmp rwxdata
pushfd
pop [ esp + 0x28 ]
jmp rwxdata
push 0x8df7f7f1
push [ esp + 0x2c ]
pop [ ebp ]
mov [ esp + 0x4 ] 0xbe
pushfd
mov [ esp + 0x4 ] 0x96539eee
push ecx
lea esp [ esp + 0x38 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_10094919
pushfd
lea esp [ esp + 0x40 ]
jo rwxdata
jmp rwxdata
pop [ ebp ]
pushfd
pushad
mov [ esp ] 0x801e
lea esp [ esp + 0x24 ]
jmp rwxdata
pushfd
push ecx
push [ esp + 0x8 ]
pop [ ebp ]
pushfd
mov [ esp ] esi
mov [ esp + 0x4 ] 0x6a
lea esp [ esp + 0x10 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_10094947
dec dh
btc dx cx
or dh 0x42
mov dx [ ebp ]
push ebx
add esi 0x1
mov [ esp ] edx
clc
add ebp 0x2
jmp rwxdata
mov [ eax + edi ] dx
push esi
push edi
mov [ esp + 0x8 ] 0xdd
lea esp [ esp + 0x38 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_100949dc
call sub_100945b4
btc cx 0x8
btr bx bp
cdq
mov esp ebp
btc ebx esp
pop ecx
inc bh
jmp rwxdata
pop ebx
pushfd
rdtsc
shl cx cl
push [ esp + 0x4 ]
popfd
pushad
mov ecx [ esp + 0x28 ]
setl dl
pop edi
call sub_10094e74
sub_10094a9b
call sub_10094fa7
bsr ax bx
neg ax
adc ah 0x3d
not [ ebp ]
dec ah
mov ax [ ebp ]
cmc
call sub_10094292
mov [ ebp ] edx
push ecx
push esp
lea esp [ esp + 0x50 ]
jmp sub_10094807
sub_10094ad8
pushfd
jmp rwxdata
mov [ esp + 0x2c ] esi
mov [ esp + 0x8 ] cx
pushfd
mov [ esp + 0x2c ] edi
push [ esp ]
push eax
push [ esp ]
lea esp [ esp + 0x38 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_10095284
sub_10094ade
mov [ esp ] 0x19e0
mov [ ebp + 0x4 ] ax
pushfd
pushfd
pushfd
pop [ esp + 0x2c ]
jmp rwxdata
pushfd
push [ esp + 0x30 ]
pop [ ebp ]
mov [ esp ] 0x55ed9540
pushfd
mov [ esp + 0xc ] 0x78b5
push [ esp ]
lea esp [ esp + 0x3c ]
jmp sub_10094807
sub_10094b6e
pushfd
pushad
mov [ es : eax ] edx
mov [ esp + 0x8 ] 0xc4ac57b3
push esi
mov [ esp + 0xc ] 0x3a32
lea esp [ esp + 0x28 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_10094b8c
jmp rwxdata
push ebp
mov [ ebp ] eax
push eax
mov [ esp ] dl
lea esp [ esp + 0x2c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_10094bd6
mov [ esp ] cl
pushad
lea esp [ esp + 0x24 ]
cpuid
cmp dl dl
sub ebp 0xc
push 0xa549d8e8
stc
cmp [ ebp + 0xc ] 0x1
push [ esp ]
pushfd
mov [ ebp + 0xc ] eax
push [ esp + 0x4 ]
pushfd
mov [ ebp + 0x8 ] ebx
jmp rwxdata
pushfd
mov [ ebp + 0x4 ] ecx
pushad
jmp rwxdata
mov [ esp ] 0xab
mov [ ebp ] edx
jmp rwxdata
lea esp [ esp + 0x38 ]
jne rwxdata
push ecx
not ebx
bswap bx
setpe bh
mov ebx [ esp + 0x4 ]
pushad
mov [ esp ] 0x5311
lea esp [ esp + 0x28 ]
jmp sub_10094807
or bx dx
jmp rwxdata
or bl 0x4e
call sub_10095961
sub_10094c1e
mov [ esp + 0x28 ] esi
push 0x48eb6052
push 0xd1cc5e1
jmp rwxdata
mov [ esp + 0x2c ] edi
push 0x35ce92b
mov [ esp + 0x4 ] ch
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_10095284
sub_10094c9b
mov [ ebp ] ax
pushad
push 0xd8141621
lea esp [ esp + 0x2c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_10094cae
mov [ esp + 0x8 ] bh
mov [ esp + 0x8 ] esi
pushfd
mov [ esp + 0x8 ] ebp
pushad
mov [ esp + 0x24 ] edx
pushfd
pushfd
jmp rwxdata
mov [ esp + 0x28 ] esi
push 0x8c691dd5
push 0x69e8e5c7
mov [ esp + 0x2c ] edi
mov [ esp ] 0x4c
lea esp [ esp + 0x2c ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_10095284
sub_10094d5a
push 0xd3032c59
mov [ esp + 0x24 ] esi
mov [ esp + 0xc ] ebx
mov [ esp + 0x20 ] ebp
pushfd
mov [ esp + 0x20 ] edx
pushfd
mov [ esp + 0x20 ] esi
call sub_10095298
add [ ebp + 0x4 ] al
call sub_100959ec
bt eax 0x4
shl al cl
sub al ah
mov al [ ebp ]
add cl dh
shr cl cl
add cl 0x3e
mov cl [ ebp + 0x2 ]
cmc
call sub_10094ec5
pushad
mov [ ebp + 0x4 ] eax
call sub_1009559f
mov [ esp ] bp
call sub_10094818
sub_10094db9
mov [ esp + 0x10 ] edi
pushfd
push [ esp ]
pushad
push [ esp ]
lea esp [ esp + 0x3c ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_10095284
sub_10094e1f
pushad
push 0x3a4676f0
mov [ esp + 0x2c ] rwxdata
call sub_10094fe1
cmc
xor dh dh
stc
stc
mov edx [ ebp ]
bt si si
test dh 0x9
stc
add ebp 0x4
pushad
jmp rwxdata
mov [ esp + 0x1c ] rwxdata
jmp rwxdata
mov [ esp + 0x18 ] edx
mov [ esp ] edx
pushad
pushfd
push [ esp + 0x3c ]
retn 0x40
sub_10094e74
mov edi [ esp + 0x2c ]
pushfd
push [ esp ]
mov esi [ esp + 0x38 ]
mov [ esp ] 0x90
mov edx [ esp + 0x3c ]
lea ebp [ ebp * 2 - 0x7847d63a ]
pop ebx
lea eax [ ecx - 0xd98fc0a ]
lahf
mov ebp [ esp + 0x3c ]
pushfd
mov eax [ esp + 0x44 ]
lea eax [ edx + 0x4a99a1d4 ]
xchg bx ax
movsx ebx dl
not al
mov ebx [ esp + 0x48 ]
not ah
mov eax [ esp + 0x4c ]
mov [ esp ] 0x208f4b6
push [ esp + 0x50 ]
retn 0x54
sub_10094ec5
cmp bl 0x9a
bt bp di
sub ebp 0x2
push 0xbf8b5964
push ebp
jmp rwxdata
shl al cl
pushad
mov [ esp ] al
push 0xfd611c72
mov [ esp + 0x4 ] esp
mov [ ebp + 0x4 ] ax
call sub_1009505a
movsx ax cl
btr ax 0x1
ror cl cl
mov eax [ ebp ]
adc cl dh
dec cl
cmp eax ebx
mov cl [ ebp + 0x4 ]
bt edi 0x7
sub ebp 0x2
cmc
test dh 0xaf
shl eax cl
pushfd
jmp rwxdata
call sub_10094668
sub_10094f1e
mov [ esp + 0x48 ] edi
mov [ esp + 0x4 ] dh
push 0x270e5baf
push [ esp ]
mov [ esp ] 0x54
lea esp [ esp + 0x50 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_10095284
sub_10095001
mov [ esp + 0x10 ] 0x41d03457
push 0x88a6cf
mov [ esp + 0x4c ] ebp
push ebp
mov [ esp + 0x14 ] esp
mov [ esp + 0x4c ] edx
pushfd
mov [ esp + 0x4c ] esi
mov [ esp ] 0xc8
mov [ esp + 0x48 ] edi
push 0x84e10a9f
pushfd
mov [ esp + 0x4 ] 0x7
lea esp [ esp + 0x50 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_10095284
sub_1009505a
push edx
lea esp [ esp + 0x38 ]
jpe rwxdata
pushfd
push ebp
push [ esp ]
jmp rwxdata
pushfd
pushfd
pushfd
pushad
jmp rwxdata
pushfd
pop [ esp + 0x8 ]
push 0x7157e63d
jmp rwxdata
push [ esp + 0x28 ]
pop [ ebp ]
mov [ esp + 0x8 ] cl
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp sub_10094807
pushfd
push [ esp + 0x10 ]
pop [ ebp ]
pushad
pushfd
push edi
lea esp [ esp + 0x3c ]
jmp sub_10094807
sub_10095112
ror ax 0x1
mov [ esp + 0xc ] 0x32
jmp rwxdata
cmp sp 0xe560
sub bx ax
push [ esp + 0x4 ]
cmp bx 0x3eae
push esp
cmc
sub ebp 0x2
call sub_10095f4c
push 0x44a6229f
movsx ax cl
pop eax
lea eax [ edx * 8 + 0x69b9da28 ]
push ebx
jmp rwxdata
movzx eax al
lahf
lahf
mov eax [ ebp ]
call j_sub_10094bd6
call sub_1009518f
pushfd
pushad
mov [ esp ] 0x62e7
mov [ esp + 0x20 ] eax
push 0x494ef5fb
mov [ esp + 0x20 ] ebx
jmp rwxdata
push ebp
mov [ esp + 0x20 ] esi
pushfd
push [ esp ]
mov [ esp ] bh
mov [ esp + 0x24 ] ebp
pushad
pushfd
mov [ esp ] ch
mov [ esp + 0x44 ] edx
push 0x64406dd
jmp rwxdata
push [ esp ]
pushfd
mov [ esp + 0x4c ] esi
pushfd
mov [ esp ] 0x77
mov [ esp + 0x4c ] edi
pushfd
mov [ esp ] ecx
mov [ esp + 0x14 ] 0xf09d
lea esp [ esp + 0x50 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_10095284
sub_100951f4
call sub_10095db0
inc al
pushfd
clc
bt esp ebx
add esi 0x1
jmp rwxdata
stc
clc
ror al 0x4
stc
sub esp 0xfffffff8
jae rwxdata
cmp bh 0x24
sub al 0x7
call sub_10094cfb
btr ax bx
dec al
shl al cl
bt ax sp
mov ax [ esi ]
stc
test al bh
add esi 0x2
call sub_10095545
sub bl al
call sub_10094947
call sub_100952e2
sub al 0x7
test ch 0xd
pushad
stc
xor bl al
mov [ esp + 0x8 ] bh
sub ebp 0x2
jmp rwxdata
mov [ esp + 0x4 ] edi
push [ esp ]
mov [ ebp ] ax
mov [ esp + 0x4 ] ah
pushfd
mov [ esp ] bp
pushfd
lea esp [ esp + 0x2c ]
jmp sub_10094807
sub_10095220
push [ esp + 0x8 ]
push ebp
mov [ esp + 0x4 ] 0x8a63
push [ esp + 0x4c ]
pop [ ebp ]
mov [ esp + 0x4 ] ebp
mov [ esp ] 0x70
lea esp [ esp + 0x50 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_10095298
mov [ esp ] 0x5d71
mov [ esp ] sp
push [ esp + 0x4 ]
mov [ esp + 0x24 ] edi
push [ esp + 0x10 ]
lea esp [ esp + 0x28 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_10095284
sub_100952e2
mov [ esp + 0x28 ] edi
mov [ esp + 0x4 ] 0x32a5
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_10095284
sub_10095377
clc
add ax 0x209e
push 0x122f818e
pushfd
clc
neg ax
call sub_10095112
add ebp 0x2
clc
clc
pushad
shrd eax edx cl
push [ esp + 0xc ]
mov [ ebp + 0x4 ] eax
call sub_10094259
sub_100953a0
xchg [ esp + 0x40 ] esi
cld
pop edi
mov esi edx
pushfd
cld
lea edi [ ecx + eax - 0x40 ]
call sub_100951f4
mov [ esp + 0x20 ] ebx
pushad
push edi
push 0xa412fb79
pushfd
mov [ esp + 0x48 ] esi
call sub_10095001
adc al dl
push edx
jmp rwxdata
mov al [ ebp ]
shr cl cl
setle cl
xor cl dl
mov cl [ ebp + 0x2 ]
lea esp [ esp + 0x4 ]
jg rwxdata
test bh dh
pushfd
cmc
jmp rwxdata
pushfd
pushfd
sub ebp 0x2
stc
shr al cl
mov [ esp ] al
mov [ esp ] bl
pushfd
mov [ ebp + 0x4 ] ax
pushfd
pushfd
call j_sub_10094b49
jmp sub_1009526d
sub ebp 0x2
stc
sub esp 0xfffffffc
jo rwxdata
cmp esi 0x157ce5e8
shr al cl
pushfd
mov [ esp ] 0x4c
mov [ ebp + 0x4 ] ax
push ebp
pushfd
pop [ esp + 0x4 ]
call sub_10095a54
cmp al al
neg al
neg edx
add al 0x13
sets dh
xor dx cx
rcr dh 0x2
add bl al
rol dh 0x6
dec dh
add esi 0x1
jmp rwxdata
push 0xadac1c2b
mov [ esp ] ch
shr al cl
pushad
call j_sub_10094ade
pushad
clc
mov edx [ ebp ]
bt eax 0x1b
clc
clc
push 0xcf01aa64
add ebp 0x4
mov [ esp + 0x8 ] 0xad
call sub_1009601a
push 0x8df7f7f1
push [ esp + 0x2c ]
pop [ ebp ]
mov [ esp + 0x4 ] 0xbe
pushfd
mov [ esp + 0x4 ] 0x96539eee
push ecx
lea esp [ esp + 0x38 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_100953d0
mov [ esp + 0x4 ] edx
pushad
call sub_10095d10
pushad
push 0x810889da
pushfd
mov [ esp + 0x4 ] dh
mov [ esp + 0x24 ] edx
push 0xe964e9a4
call sub_10094c1e
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp sub_100964cb
sub_10095473
add ebp 0x2
pushfd
stc
shld eax edx cl
push [ esp ]
mov [ esp ] ecx
pushfd
mov [ ebp + 0x4 ] eax
mov [ esp ] ax
pushfd
push ebp
mov [ esp + 0x4 ] 0xfc
pushfd
pop [ esp + 0x34 ]
push [ esp ]
call sub_10094919
sub_1009549d
pushad
mov [ esp + 0x24 ] eax
push [ esp ]
jmp rwxdata
mov [ esp + 0x24 ] ebx
call sub_100955c2
pushad
mov [ esp + 0x1c ] ebx
call sub_10095ac5
pushfd
push [ esp + 0x30 ]
pop [ ebp ]
mov [ esp ] 0x55ed9540
pushfd
mov [ esp + 0xc ] 0x78b5
push [ esp ]
lea esp [ esp + 0x3c ]
jmp sub_10094807
sub_10095545
call sub_10095c2b
push 0x6c91efce
and [ ebp + 0x4 ] ax
pushad
pushfd
pushfd
pop [ esp + 0x28 ]
lea esp [ esp + 0x28 ]
jns rwxdata
push 0xf563e109
jmp rwxdata
push 0x71ff9f96
pushfd
push [ esp + 0x8 ]
pop [ ebp ]
pushfd
mov [ esp ] ah
lea esp [ esp + 0x10 ]
jmp sub_10094807
mov [ esp ] 0xee52f1b0
push [ esp + 0x4 ]
pop [ ebp ]
pushad
pushfd
push 0xdca92d94
lea esp [ esp + 0x30 ]
jmp sub_10094807
sub_100955c2
mov [ esp + 0x24 ] esi
pushad
jmp rwxdata
mov [ esp + 0x40 ] ebp
pushfd
jmp rwxdata
mov [ esp ] ch
mov [ esp + 0x40 ] edx
mov [ esp + 0x4 ] 0x8
pushfd
jmp rwxdata
mov [ esp + 0x40 ] esi
jmp rwxdata
mov [ esp + 0x3c ] edi
push 0x71cc5b1c
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x40 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_10095284
sub_100955f6
movzx ecx cl
push ecx
inc al
setge ch
ror al 0x4
rcr ch 0x1
cmp si 0x5980
or ecx 0xef98c43d
sub al 0x7
btc cx 0x7
btr cx dx
test bp si
xor bl al
lea esp [ esp + 0xc ]
jpo rwxdata
bswap ecx
call sub_1009605a
call sub_10095b28
push ecx
pushfd
pushfd
push ecx
mov [ esp + 0x8 ] edx
push [ esp + 0xc ]
retn 0x10
lea ecx [ edx * 8 + 0x6a8876eb ]
inc cx
bswap cx
inc esi
rol ch cl
add cx bp
cmc
lea ecx [ edi + 0x2eaa0f29 ]
movzx ecx al
push edi
push [ esp ]
mov [ ebp - 0x4 ] ecx
bt di 0x3
pushfd
call sub_100959be
pushad
clc
mov edx [ ebp ]
bt eax 0x1b
clc
clc
push 0xcf01aa64
add ebp 0x4
mov [ esp + 0x8 ] 0xad
call sub_1009601a
push 0x8df7f7f1
push [ esp + 0x2c ]
pop [ ebp ]
mov [ esp + 0x4 ] 0xbe
pushfd
mov [ esp + 0x4 ] 0x96539eee
push ecx
lea esp [ esp + 0x38 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_1009571d
pushad
xchg [ esp + 0x24 ] ebx
call sub_10094468
push esi
push ebp
mov [ esp ] 0xac
mov [ esp ] 0x2
mov [ esp + 0x4 ] eax
push [ esp ]
mov [ esp + 0x4 ] ebx
push eax
jmp rwxdata
mov [ esp + 0x4 ] dl
mov [ esp + 0x4 ] esi
pushad
mov [ esp + 0x20 ] ebp
push 0xe2ff0f60
mov [ esp ] bh
mov [ esp + 0x18 ] bl
pushfd
mov [ esp + 0x24 ] edx
call sub_100955cc
pushfd
jmp rwxdata
mov [ ebp ] eax
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_1009577b
bt ax 0x6
ror al 0x2
bt esi 0x14
clc
cmp si bx
sub bl al
cmp dl dh
test dh ch
cmc
mov ax [ eax + edi ]
bt bp bx
sub ebp 0x2
jmp sub_10094238
sub_10095852
neg ecx
bt bp 0x4
bt sp 0x3
test sp bp
cmp bl 0x81
add ecx 0x0
push ecx
lea esp [ esp + 0x10 ]
jo rwxdata
push 0x3de28678
push [ esp ]
mov [ esp + 0x4 ] ecx
push [ esp ]
push [ esp + 0x4 ]
pushad
push [ esp + 0x2c ]
retn 0x30
pushad
push 0x7817f2bb
mov [ esp + 0x20 ] ecx
push 0xe14cc384
pushad
pushfd
pushfd
push [ esp + 0x4c ]
retn 0x50
sub_100958ab
pushfd
mov [ esp ] 0x7a
mov [ esp + 0x3c ] edi
mov [ esp ] 0x7b
push [ esp + 0x8 ]
lea esp [ esp + 0x40 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_10095284
sub_100958c5
mov [ esp ] 0x84
pushad
jmp rwxdata
mov [ esp + 0x20 ] ebx
pushad
push edi
push 0xa412fb79
pushfd
mov [ esp + 0x48 ] esi
call sub_10095001
adc al dl
push edx
jmp rwxdata
mov al [ ebp ]
shr cl cl
setle cl
xor cl dl
mov cl [ ebp + 0x2 ]
lea esp [ esp + 0x4 ]
jg rwxdata
test bh dh
pushfd
cmc
jmp rwxdata
pushfd
pushfd
sub ebp 0x2
stc
shr al cl
mov [ esp ] al
mov [ esp ] bl
pushfd
mov [ ebp + 0x4 ] ax
pushfd
pushfd
call j_sub_10094b49
jmp sub_1009526d
sub ebp 0x2
stc
sub esp 0xfffffffc
jo rwxdata
cmp esi 0x157ce5e8
shr al cl
pushfd
mov [ esp ] 0x4c
mov [ ebp + 0x4 ] ax
push ebp
pushfd
pop [ esp + 0x4 ]
call sub_10095a54
cmp al al
neg al
neg edx
add al 0x13
sets dh
xor dx cx
rcr dh 0x2
add bl al
rol dh 0x6
dec dh
add esi 0x1
jmp rwxdata
push 0xadac1c2b
mov [ esp ] ch
shr al cl
pushad
call j_sub_10094ade
pushad
clc
mov edx [ ebp ]
bt eax 0x1b
clc
clc
push 0xcf01aa64
add ebp 0x4
mov [ esp + 0x8 ] 0xad
call sub_1009601a
push 0x8df7f7f1
push [ esp + 0x2c ]
pop [ ebp ]
mov [ esp + 0x4 ] 0xbe
pushfd
mov [ esp + 0x4 ] 0x96539eee
push ecx
lea esp [ esp + 0x38 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_10095927
call j_sub_10094c9b
not dl
bsf dx sp
mov edx [ ebp ]
bt eax 0xd
inc al
add ebp 0x2
pushfd
push 0xbf9ebfb
mov al [ edx ]
lea esp [ esp + 0x8 ]
jpe rwxdata
call sub_10095927
call sub_10094889
pushfd
mov [ ebp ] ax
mov [ esp ] ah
lea esp [ esp + 0x4 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_10095961
mov ebx eax
mov [ esp ] 0xb8
stc
pushfd
test bh 0xcc
and ebx 0xff0
stc
stc
mov [ esp + 0x4 ] dx
stc
cmp ebx 0xfe0
pushfd
push esi
pushfd
lea esp [ esp + 0x14 ]
jne rwxdata
push ecx
not ebx
bswap bx
setpe bh
mov ebx [ esp + 0x4 ]
pushad
mov [ esp ] 0x5311
lea esp [ esp + 0x28 ]
jmp sub_10094807
shl bl 0x5
and bx 0x763d
sete bh
xor [ ebp + 0xc ] 0x20
sub_100959d9
mov [ esp + 0x20 ] esi
jmp rwxdata
push [ esp + 0x10 ]
lea esp [ esp + 0x24 ]
jge rwxdata
pushfd
call sub_10095082
lea esp [ esp + 0x8 ]
jne rwxdata
push edi
mov [ esp ] ebp
call sub_10096828
aam 0xd1
mov eax [ ebp ]
pushfd
seto dl
sub dh 0x76
mov dx [ ebp + 0x4 ]
clc
cmp di ax
pushad
cmp al al
add ebp 0x6
push 0xee791906
pushfd
mov [ esp ] ebp
call sub_100944f0
mov [ esp + 0x20 ] ebx
call sub_10095fac
call sub_10096746
call sub_1009508b
sub_100959ec
pushfd
jmp rwxdata
jmp rwxdata
pushfd
pop [ esp + 0xc ]
call sub_10096554
mov [ ebp + 0x4 ] eax
mov [ esp + 0xc ] si
lea esp [ esp + 0x2c ]
jge rwxdata
pushad
pushfd
pushad
pushfd
pop [ esp + 0x40 ]
call sub_10095220
pushfd
push 0x2dbcf6c9
mov [ esp ] 0xa
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
push 0x13dc31a6
pushfd
push eax
pushfd
push [ esp + 0x10 ]
pop [ ebp ]
pushad
pushfd
pushfd
lea esp [ esp + 0x3c ]
jmp rwxdata
pop [ ebp ]
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_100959fb
bt bx 0xd
clc
test bx di
xchg [ ebp + ecx * 4 ] eax
cmp bh 0x6
mov [ esp ] eax
call sub_100949dc
mov [ esp + 0x8 ] 0x5f
jmp rwxdata
call sub_1009511f
pushfd
mov [ esp + 0x4 ] eax
jmp rwxdata
call sub_10094574
sub_10095ac5
call sub_10094d5a
cmp esi 0x157ce5e8
shr al cl
pushfd
mov [ esp ] 0x4c
mov [ ebp + 0x4 ] ax
push ebp
pushfd
pop [ esp + 0x4 ]
call sub_10095a54
cmp al al
neg al
neg edx
add al 0x13
sets dh
xor dx cx
rcr dh 0x2
add bl al
rol dh 0x6
dec dh
add esi 0x1
jmp rwxdata
pushad
clc
mov edx [ ebp ]
bt eax 0x1b
clc
clc
push 0xcf01aa64
add ebp 0x4
mov [ esp + 0x8 ] 0xad
call sub_1009601a
push 0x8df7f7f1
push [ esp + 0x2c ]
pop [ ebp ]
mov [ esp + 0x4 ] 0xbe
pushfd
mov [ esp + 0x4 ] 0x96539eee
push ecx
lea esp [ esp + 0x38 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_10095b28
mov [ esp ] 0x829f54e7
mov [ esp ] eax
jpe rwxdata
call sub_100958c5
pushfd
mov [ esp ] ebx
pushad
jmp rwxdata
call j_sub_10094de4
push [ esp + 0x10 ]
lea esp [ esp + 0x24 ]
jge rwxdata
pushfd
call sub_10095082
lea esp [ esp + 0x8 ]
jne rwxdata
push edi
mov [ esp ] ebp
call sub_10096828
aam 0xd1
mov eax [ ebp ]
pushfd
seto dl
sub dh 0x76
mov dx [ ebp + 0x4 ]
clc
cmp di ax
pushad
cmp al al
add ebp 0x6
push 0xee791906
pushfd
mov [ esp ] ebp
call sub_100944f0
mov [ esp + 0x20 ] ebx
call sub_10095fac
call sub_10096746
call sub_1009508b
sub_10095c40
mov [ esp + 0x44 ] edi
mov [ esp ] 0x5
push esi
push esp
pushfd
lea esp [ esp + 0x50 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_10095284
sub_10095d10
mov [ esp + 0x24 ] esi
call sub_10095eb3
cmp sp 0xe560
sub bx ax
push [ esp + 0x4 ]
cmp bx 0x3eae
push esp
cmc
sub ebp 0x2
call sub_10095f4c
push 0x44a6229f
movsx ax cl
pop eax
lea eax [ edx * 8 + 0x69b9da28 ]
push ebx
jmp rwxdata
movzx eax al
lahf
lahf
mov eax [ ebp ]
call j_sub_10094bd6
call sub_1009518f
pushfd
pushad
mov [ esp ] 0x62e7
mov [ esp + 0x20 ] eax
push 0x494ef5fb
mov [ esp + 0x20 ] ebx
jmp rwxdata
push ebp
mov [ esp + 0x20 ] esi
pushfd
push [ esp ]
mov [ esp ] bh
mov [ esp + 0x24 ] ebp
pushad
pushfd
mov [ esp ] ch
mov [ esp + 0x44 ] edx
push 0x64406dd
jmp rwxdata
push [ esp ]
pushfd
mov [ esp + 0x4c ] esi
pushfd
mov [ esp ] 0x77
mov [ esp + 0x4c ] edi
pushfd
mov [ esp ] ecx
mov [ esp + 0x14 ] 0xf09d
lea esp [ esp + 0x50 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_10095284
sub_10095d4b
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_100953a0
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_10095db5
mov [ esp ] bl
mov [ esp + 0x24 ] ebp
pushfd
pushfd
mov [ esp + 0x28 ] edx
mov [ esp ] di
mov [ esp + 0x24 ] esi
mov [ esp + 0x18 ] cx
push ebx
mov [ esp ] dx
push edx
mov [ esp + 0x28 ] edi
push [ esp + 0x4 ]
push [ esp ]
mov [ esp + 0x10 ] 0xfad3
lea esp [ esp + 0x30 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_10095284
sub_10095eb3
mov [ esp + 0x24 ] edi
pushfd
mov [ esp ] cl
lea esp [ esp + 0x28 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_10095284
sub_10095ee0
lea esp [ esp + 0x4c ]
jbe rwxdata
pushfd
mov [ ebp ] eax
pushad
pushad
mov [ esp ] di
lea esp [ esp + 0x44 ]
jmp sub_10094807
mov [ ebp ] eax
pushfd
lea esp [ esp + 0x4 ]
jmp sub_10094807
sub_10095f0a
xchg [ ebp + ecx * 4 ] eax
stc
clc
cmp edi 0xfeecfba0
mov [ esp + 0x48 ] eax
bt di bp
mov [ esp + 0x8 ] 0xe2a3
pushfd
sub ecx 0x1
pushfd
mov [ esp + 0x4 ] ch
jmp rwxdata
lea esp [ esp + 0x50 ]
jne rwxdata
call sub_10096746
stc
push edi
stc
sub eax eax
pushfd
call j_sub_10094f7f
mov al [ ebp ]
shr cl cl
setle cl
xor cl dl
mov cl [ ebp + 0x2 ]
lea esp [ esp + 0x4 ]
jg rwxdata
test bh dh
pushfd
cmc
jmp rwxdata
pushfd
pushfd
sub ebp 0x2
stc
shr al cl
mov [ esp ] al
mov [ esp ] bl
pushfd
mov [ ebp + 0x4 ] ax
pushfd
pushfd
call j_sub_10094b49
jmp sub_1009526d
sub ebp 0x2
stc
sub esp 0xfffffffc
jo rwxdata
cmp esi 0x157ce5e8
shr al cl
pushfd
mov [ esp ] 0x4c
mov [ ebp + 0x4 ] ax
push ebp
pushfd
pop [ esp + 0x4 ]
call sub_10095a54
cmp al al
neg al
neg edx
add al 0x13
sets dh
xor dx cx
rcr dh 0x2
add bl al
rol dh 0x6
dec dh
add esi 0x1
jmp rwxdata
push 0xadac1c2b
mov [ esp ] ch
shr al cl
pushad
call j_sub_10094ade
pushad
clc
mov edx [ ebp ]
bt eax 0x1b
clc
clc
push 0xcf01aa64
add ebp 0x4
mov [ esp + 0x8 ] 0xad
call sub_1009601a
push 0x8df7f7f1
push [ esp + 0x2c ]
pop [ ebp ]
mov [ esp + 0x4 ] 0xbe
pushfd
mov [ esp + 0x4 ] 0x96539eee
push ecx
lea esp [ esp + 0x38 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_10095f33
pushfd
lea esp [ esp + 0x3c ]
jpo rwxdata
jmp rwxdata
push ecx
pushad
push [ esp + 0x4 ]
push edx
push [ esp + 0x28 ]
retn 0x2c
push ecx
pushfd
pushfd
push ecx
mov [ esp + 0x8 ] edx
push [ esp + 0xc ]
retn 0x10
sub_10095fac
pushad
mov [ esp + 0x40 ] esi
jmp rwxdata
lea esp [ esp + 0x40 ]
jo rwxdata
jmp sub_1009526d
push ebp
pushfd
mov [ esp ] edx
jmp rwxdata
push esi
push esi
push 0x6b6e5c0
pushad
mov [ esp + 0x24 ] edi
mov [ esp ] 0x22
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_10095284
sub_10096003
mov [ esp + 0x4 ] bh
mov [ ebp ] eax
push esp
pushfd
lea esp [ esp + 0x4c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_1009601a
mov [ eax + edi ] edx
push 0x785cb02a
mov [ esp + 0xc ] 0x90
lea esp [ esp + 0x2c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_1009605a
inc esi
dec cl
movsx cx dl
lea ecx [ esi - 0x9460c38 ]
xor ch ah
movzx ecx al
stc
bt edx esp
pushad
call sub_10094865
mov [ esp + 0x40 ] ebp
pushfd
jmp rwxdata
mov [ esp ] ch
mov [ esp + 0x40 ] edx
mov [ esp + 0x4 ] 0x8
pushfd
jmp rwxdata
mov [ esp + 0x40 ] esi
jmp rwxdata
mov [ esp + 0x3c ] edi
push 0x71cc5b1c
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x40 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_10095284
sub_100964cb
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_10096554
call sub_100956dd
movsx cx bl
bswap cx
mov cx 0xd0c
lea ecx [ esi - 0x5c62891c ]
mov ecx [ ebp - 0x4 ]
js rwxdata
pushad
pushad
lea ebp [ ebp + ecx * 4 ]
mov [ esp + 0x4 ] 0xd80c67b7
jmp rwxdata
pushad
lea ebp [ ebp + ecx * 4 ]
jmp rwxdata
call sub_10096003
call sub_100959d9
movzx eax al
lahf
lahf
mov eax [ ebp ]
call j_sub_10094bd6
call sub_1009518f
pushfd
pushad
mov [ esp ] 0x62e7
mov [ esp + 0x20 ] eax
push 0x494ef5fb
mov [ esp + 0x20 ] ebx
jmp rwxdata
call sub_10094b8c
jmp rwxdata
push ebp
mov [ esp + 0x20 ] esi
pushfd
push [ esp ]
mov [ esp ] bh
mov [ esp + 0x24 ] ebp
pushad
pushfd
mov [ esp ] ch
mov [ esp + 0x44 ] edx
push 0x64406dd
jmp rwxdata
pushfd
mov [ esp + 0x24 ] edi
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
push [ esp ]
pushfd
mov [ esp + 0x4c ] esi
pushfd
mov [ esp ] 0x77
mov [ esp + 0x4c ] edi
pushfd
mov [ esp ] ecx
mov [ esp + 0x14 ] 0xf09d
lea esp [ esp + 0x50 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_10095284
sub_1009661c
mov [ esp + 0x1c ] edx
push [ esp + 0x4 ]
mov [ esp + 0x1c ] esi
push 0x25340325
pushfd
mov [ esp + 0x20 ] edi
push 0x7ee0f402
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_10095284
sub_10096765
push 0xe17256ee
xchg [ esp + 0x4c ] edi
lea edi [ eax * 2 + 0x24e6d209 ]
mov edi eax
mov [ esp + 0x4 ] ah
jmp rwxdata
mov [ esp + 0x4 ] bl
cld
call j_sub_1009432b
jmp rwxdata
pushad
mov [ eax ] dl
push 0xa98555c3
mov [ esp + 0x8 ] dl
lea esp [ esp + 0x30 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_10096840
stc
mov ecx [ eax * 4 + rwxdata ]
pushad
call sub_10095abc
add ebp 0x4
cmp esp 0xe5905a97
cmc
std
push [ esp + 0x4 ]
popfd
push 0x849492a8
lea esp [ esp + 0xc ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_10096883
mov ecx [ eax * 4 + rwxdata ]
stc
call sub_10095852
mov [ ebp ] ax
mov [ esp + 0x4 ] 0x8e
push esp
push [ esp ]
pushad
lea esp [ esp + 0x30 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp sub_100951c6
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_10096883
sub_100968a7
pushfd
stc
sub ebp 0x4
call sub_10095ee0
pushfd
mov [ esp ] esi
jmp rwxdata
pushfd
pushfd
mov [ esp + 0x4 ] edi
pushfd
push 0x86d3befe
push 0xecf66cf3
lea esp [ esp + 0x10 ]
jmp rwxdata
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_10095284
sub_10094238
mov [ ebp ] ax
clc
push [ esp + 0x8 ]
cmc
cmp si sp
add esi 0x1
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp sub_10094807
j_sub_10094d51
jmp sub_10094d51
sub_10094369
mov [ esp + 0x8 ] 0x50
call sub_10095c40
mov cl [ ebp + 0x8 ]
jmp sub_10095473
sub_1009452c
pushfd
pushad
mov ebp [ ebp ]
mov [ esp + 0xc ] dh
pushfd
pushfd
lea esp [ esp + 0x30 ]
jmp sub_10094807
j_sub_100958ab
jmp sub_100958ab
sub_10094555
call sub_10094a76
pushfd
pop [ esp + 0xc ]
pushfd
push [ esp + 0x10 ]
pop [ ebp ]
push [ esp + 0x4 ]
lea esp [ esp + 0x18 ]
jmp sub_10094807
sub_100945b4
sub ecx 0x1
jmp sub_10095e4c
j_sub_10095377
jmp sub_10095377
sub_10094668
mov [ ebp + 0x4 ] eax
jmp sub_10094db4
sub_10094889
mov [ esp + 0x4 ] eax
call sub_1009571d
pushad
push [ esp ]
mov [ esp + 0x2c ] ebp
jmp sub_10094ded
sub_100948fc
call sub_1009670b
push [ esp + 0x30 ]
pop [ ebp ]
push 0xd233971e
push [ esp ]
lea esp [ esp + 0x3c ]
jmp sub_10094807
j_sub_10094c9b
jmp sub_10094c9b
sub_10094a76
pushfd
mov [ esp + 0x28 ] ebp
mov [ esp ] ah
mov [ esp + 0x24 ] edx
pushad
mov [ esp + 0x40 ] esi
call sub_10094369
call sub_1009511f
pushfd
mov [ esp + 0x4 ] eax
jmp rwxdata
call sub_10094574
j_sub_10095d4b
jmp sub_10095d4b
sub_10094b49
pushfd
pop [ esp + 0x14 ]
pushad
mov [ esp ] bl
push [ esp + 0x34 ]
pop [ ebp ]
push 0x150720d6
push ebp
push 0x771a3e89
pushfd
lea esp [ esp + 0x48 ]
jmp sub_10094807
sub_10094c31
stc
bt dx di
sub ebp 0x2
jmp sub_10095258
sub_10094ced
mov [ esp ] eax
inc al
clc
pushfd
neg al
call sub_1009577b
sub_10094cfb
test bl al
xor bl al
test dh 0xf
sub ebp 0x2
mov [ esp ] 0x4d
mov [ ebp ] ax
push [ esp ]
mov [ esp + 0x4 ] 0x4a
lea esp [ esp + 0x8 ]
jmp sub_10094807
sub_10094d51
mov [ esp + 0x24 ] esi
call sub_10095db5
j_sub_10094bd6
jmp sub_10094bd6
sub_10094db4
call sub_10095073
sub_10094de4
mov [ esp + 0x20 ] esi
call sub_10094555
sub_10094ded
pushfd
jmp sub_100967f0
sub_10094f7f
pushfd
xchg [ ebp ] eax
jmp rwxdata
mov [ esp ] 0xeec8
mov [ esp ] 0x20
mov [ esp + 0xc ] rwxdata
pushad
jmp rwxdata
call sub_1009649e
sub_10094fa7
xchg [ ebp ] eax
jmp sub_10094e1f
sub_10094fe1
push esp
pushfd
mov [ esp + 0x34 ] eax
pushfd
push [ esp + 0x38 ]
retn 0x3c
sub_10095073
pushfd
pop [ esp + 0x8 ]
jmp sub_100948fc
sub_10095082
mov [ esp + 0x4 ] ebp
call sub_100953d0
sub_1009508b
cmp cl 0xf3
sub eax eax
call sub_10094a9b
push [ esp + 0x14 ]
pop [ ebp ]
pushfd
pushad
push edi
pushfd
lea esp [ esp + 0x44 ]
jmp sub_10094807
sub_1009511f
inc esi
push ecx
push 0x27e43e74
mov [ ebp ] ax
pushfd
lea esp [ esp + 0x50 ]
jmp sub_10094807
sub_1009518f
bsf ax di
bts ax 0xe
rol ah 0x6
mov eax ebp
jmp sub_10094c31
sub_100951c6
call sub_10096840
mov [ esp + 0x8 ] esi
pushfd
jmp rwxdata
pushad
push [ esp ]
mov [ esp + 0x2c ] ebp
jmp sub_10094ded
sub_100951d5
mov [ esp ] 0xc5
mov [ esp ] eax
pushad
push [ esp ]
mov [ esp + 0x20 ] ebx
pushfd
call j_sub_10094d51
call sub_10095927
call sub_10094889
sub_10095258
push 0x2d3807c7
push ebp
mov [ ebp ] ax
push ebp
pushfd
lea esp [ esp + 0x14 ]
jmp sub_10094807
sub_1009526d
pushad
mov [ esp ] bl
mov [ esp + 0x1c ] ebp
call sub_1009661c
mov [ esp + 0x44 ] esi
push esp
call sub_10094f1e
sub_10095284
dec esi
stc
rcr bl cl
ror di cl
btr ebx 0x2
lea ebp [ esp + 0xc ]
jmp sub_100964af
sub_1009531a
push 0x37daba82
mov [ esp + 0x8 ] edx
pushfd
push 0x177d1823
push 0x1066d885
mov [ esp + 0x10 ] esi
call sub_10094db9
j_sub_1009432b
jmp sub_1009432b
j_sub_10094b49
jmp sub_10094b49
sub_1009559f
push 0x5d3e025
pushfd
pop [ esp + 0x24 ]
pushad
mov [ esp ] al
mov [ esp ] dx
push [ esp + 0x44 ]
pop [ ebp ]
push esp
lea esp [ esp + 0x4c ]
jmp sub_10094807
sub_100955cc
push 0xece3a10a
mov [ esp + 0x28 ] esi
jmp rwxdata
call sub_100952e2
sub_100955e8
push 0xfba30f34
mov [ esp + 0x38 ] esi
call j_sub_100958ab
j_sub_10094ade
jmp sub_10094ade
sub_100956d8
call sub_1009549d
sub_100956dd
mov [ esp + 0xc ] 0x689e
jmp rwxdata
push [ esp + 0x14 ]
pop [ ebp ]
pushfd
pushad
push edi
pushfd
lea esp [ esp + 0x44 ]
jmp sub_10094807
sub_100956e9
mov [ ebp ] eax
push [ esp ]
lea esp [ esp + 0x18 ]
jmp sub_10094807
sub_10095837
xor cx 0x1e18
cmp bh 0x70
xor al bl
call sub_100955f6
btc cx 0x6
mov al [ esi ]
call sub_10095837
sub_100959be
or ecx ecx
mov [ esp + 0xc ] dh
push 0xab652008
pushad
lea esp [ esp + 0x34 ]
je rwxdata
call sub_1009508b
call sub_10096746
sub_10095a3a
cmc
cmc
add ecx 0x0
call sub_1009482f
pushad
pushfd
pushad
pushfd
pop [ esp + 0x40 ]
call sub_10095220
sub_10095a54
push [ esp + 0x8 ]
pop [ ebp ]
pushfd
pushfd
lea esp [ esp + 0x14 ]
jmp sub_10094807
sub_10095abc
pushfd
neg ecx
cmc
call sub_10095a3a
j_sub_10094de4
jmp sub_10094de4
sub_10095c2b
cmp dh 0xd5
sub ax bx
call j_sub_10095377
call sub_100956d8
jmp sub_10094b6e
sub_10095db0
call sub_10096765
sub_10095e4c
jmp rwxdata
lea esp [ esp + 0x8 ]
jne rwxdata
call sub_10096746
call sub_1009508b
sub_10095f4c
mov [ esp + 0x4 ] 0xc39
pushad
mov [ ebp ] ax
push [ esp + 0x10 ]
mov [ esp ] 0x4f17
mov [ esp + 0x1c ] 0x28
lea esp [ esp + 0x48 ]
jmp sub_10094807
j_sub_10094f7f
jmp sub_10094f7f
sub_1009649e
mov [ esp + 0x2c ] eax
push ebx
push [ esp + 0x30 ]
retn 0x34
sub_100964af
neg bx
sub esp 0xb4
movzx edi cl
and di 0x9319
sbb ecx 0xd20889cd
xadd bl al
mov edi esp
sub_1009670b
push [ esp + 0xc ]
pop [ ebp ]
push 0x10870b85
pushad
push edx
mov [ esp ] 0x9d3c
lea esp [ esp + 0x38 ]
jmp sub_10094807
sub_10096746
stc
cmp al 0xd
mov [ esp ] si
sub eax eax
jmp sub_100959fb
sub_100967f0
mov [ esp + 0x2c ] edx
jmp sub_10094ad8
sub_10096828
mov [ esp ] 0xa5
call sub_1009531a
add esi 0x4
push esp
push 0xe554bfa6
pushfd
call sub_100956e9
