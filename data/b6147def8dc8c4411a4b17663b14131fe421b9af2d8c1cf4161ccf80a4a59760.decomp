sub_4010f0
push ebx
push esi
push edi
mov esi ecx
push 0xd
pop ebx
lea edi [ esi + 0x16c ]
sub edi 0x10
mov ecx edi
call sub_405a64
dec ebx
jns r-xdata
lea ecx [ esi + 0x6c ]
call sub_405a64
lea ecx [ esi + 0x28 ]
call sub_405a64
push esi
call j_sub_422ed5#3
pop ecx
pop edi
mov eax esi
pop esi
pop ebx
retn 0x4
sub_40112a
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
push 0x2
pop edi
or [ esi + 0x1c ] 0xffffffff
lea ecx [ esi + 0x28 ]
mov [ esi ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call sub_4077c7
or eax 0xffffffff
mov [ esi + 0x38 ] bx
lea ecx [ esi + 0x6c ]
mov [ esi + 0x3a ] 0x1
mov [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
mov [ esi + 0x54 ] eax
mov [ esi + 0x58 ] eax
mov [ esi + 0x5c ] eax
mov [ esi + 0x60 ] eax
mov [ esi + 0x64 ] eax
call sub_4077c7
push 0xd
mov [ esi + 0x84 ] ebx
mov [ esi + 0x88 ] edi
lea edi [ esi + 0x8c ]
mov [ esi + 0x7c ] 0x55
mov [ esi + 0x80 ] 0x190
pop ebx
mov ecx edi
call sub_4077c7
add edi 0x10
dec ebx
jns r-xdata
or [ esi + 0x18c ] 0xffffffff
xor eax eax
or [ esi + 0x190 ] 0xffffffff
or [ esi + 0x1bc ] 0xffffffff
or [ esi + 0x1c0 ] 0xffffffff
mov [ esi + 0x16c ] eax
mov [ esi + 0x170 ] eax
mov [ esi + 0x174 ] eax
mov [ esi + 0x178 ] eax
mov [ esi + 0x17c ] eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x184 ] al
mov [ esi + 0x188 ] eax
mov [ esi + 0x194 ] eax
mov [ esi + 0x198 ] ax
mov [ esi + 0x19a ] al
mov [ esi + 0x19c ] eax
mov [ esi + 0x1a0 ] eax
mov [ esi + 0x1a4 ] eax
mov [ esi + 0x1ac ] eax
mov [ esi + 0x1b0 ] eax
mov [ esi + 0x1c4 ] eax
mov [ esi + 0x1c8 ] eax
mov [ esi + 0x1cc ] eax
mov eax esi
pop edi
mov [ esi + 0x1a8 ] 0x1
pop esi
pop ebx
retn
sub_401256
push esi
call [ GetForegroundWindow@IAT ]
mov esi rw-data
push eax
mov ecx esi
call sub_402612
cmp eax 0xffffffff
je r-xdata
pop esi
retn 0x10
mov edx [ rw-data ]
mov ecx esi
push 0x2
mov eax [ edx + eax * 4 ]
push [ eax ]
call sub_402344
sub_401290
push ebp
mov ebp esp
sub esp 0x18
mov ecx rw-data
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_402612
mov ecx [ rw-data ]
mov eax [ ecx + eax * 4 ]
mov edi [ eax ]
cmp [ edi + 0x14 ] 0x0
jne r-xdata
push [ edi + 0x10 ]
call sub_48a53c
xor eax eax
inc eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
lea eax [ ebp - 0x18 ]
push eax
push esi
call [ GetClientRect@IAT ]
lea eax [ ebp - 0x8 ]
push eax
call [ GetCursorPos@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push esi
call [ ScreenToClient@IAT ]
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
mov eax [ ebp + 0x14 ]
movzx ecx ax
mov eax [ ebp + 0x10 ]
shl ecx 0x10
movzx eax ax
or ecx eax
push ecx
push [ ebp + 0xc ]
push 0x20
push esi
call [ DefDlgProcW@IAT ]
cmp eax [ ebp - 0x10 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jle r-xdata
jmp r-xdata
sub_4012f3
push ebp
mov ebp esp
sub esp 0xc
push edi
mov edi [ ebp + 0xc ]
cmp edi 0xffffffff
je r-xdata
cmp [ ebp + 0x10 ] 0xfffffffe
pop edi
je r-xdata
push esi
mov esi [ ebp + 0x14 ]
cmp [ rw-data ] edi
je r-xdata
mov esp ebp
pop ebp
retn 0x14
cmp [ ebp + 0x10 ] 0xffffffff
je r-xdata
mov eax [ ebp + 0x18 ]
cmp [ rw-data ] eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
call sub_4022d0
push eax
push [ ebp + 0x8 ]
call [ SelectObject@IAT ]
cmp [ rw-data ] esi
je r-xdata
push eax
call [ DeleteObject@IAT ]
and [ rw-data ] 0x0
jmp r-xdata
mov eax [ ebp + 0x18 ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ rw-data ] eax
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ ebp - 0x8 ] edi
cmp eax 0x1
jne r-xdata
pop esi
jmp r-xdata
or esi 0x10000
jmp r-xdata
push 0x0
push 0x0
lea ecx [ ebp - 0xc ]
push ecx
push eax
push esi
call [ ExtCreatePen@IAT ]
push eax
push [ ebp + 0x8 ]
mov [ rw-data ] eax
call [ SelectObject@IAT ]
cmp [ rw-data ] 0x0
mov [ rw-data ] eax
jne r-xdata
push [ ebp + 0x8 ]
call [ BeginPath@IAT ]
mov [ rw-data ] 0x1
sub_4013b0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ EndPath@IAT ]
cmp [ ebp + 0xc ] 0xfffffffe
mov [ rw-data ] 0x0
je r-xdata
pop ebp
retn 0x8
push eax
push [ ebp + 0x8 ]
call [ SelectObject@IAT ]
push [ rw-data ]
and [ rw-data ] 0x0
call [ DeleteObject@IAT ]
and [ rw-data ] 0x0
or [ rw-data ] 0xffffffff
push [ ebp + 0x8 ]
call [ StrokePath@IAT ]
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call [ StrokeAndFillPath@IAT ]
sub_401424
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0xc ]
xor ecx ecx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push 0xfffffffe
pop edi
inc eax
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x14 ] eax
jmp r-xdata
test ebx ebx
jne r-xdata
and [ ebp - 0xc ] 0x0
push eax
push 0x0
push edi
push ecx
push esi
call sub_4012f3
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push edi
push esi
call sub_4013b0
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ ebx + 0x4 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
lea ecx [ ebx + 0x14 ]
lea eax [ ebx + 0x10 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp + 0xc ] eax
sub eax 0x12
je r-xdata
je r-xdata
push [ ebp - 0x10 ]
push ecx
push edi
push esi
call [ SetPixel@IAT ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov edx [ ebp - 0x14 ]
lea eax [ edx + 0x1 ]
add eax ecx
sub ecx edx
push eax
lea eax [ edx + 0x1 ]
add eax edi
sub edi edx
sub eax 0x8
je r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
je r-xdata
sub eax 0x4
jne r-xdata
cmp [ ebp - 0x10 ] 0xffffffff
mov edi [ ebp - 0x8 ]
je r-xdata
dec eax
dec eax
je r-xdata
mov edi [ eax ]
movzx eax [ ebx + edx + 0x810 ]
mov ecx [ ecx ]
mov [ ebp - 0x18 ] ecx
cmp eax 0x10
jg r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov [ ebp - 0x14 ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0xffffffff
je r-xdata
push edi
push esi
call sub_4013b0
push [ ebp - 0x8 ]
add [ ebp + 0xc ] 0x8
inc edx
add [ ebp + 0x8 ] 0x8
push esi
mov [ ebp - 0xc ] edx
call sub_4013b0
push [ ebp - 0x14 ]
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x10 ]
push esi
call sub_4012f3
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov ecx [ ebp - 0x18 ]
add eax ecx
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
add eax edi
jmp r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
push eax
push ecx
push edi
push esi
call [ Rectangle@IAT ]
jmp r-xdata
push [ ebp - 0x8 ]
add [ ebp + 0xc ] 0x8
inc edx
add [ ebp + 0x8 ] 0x8
push esi
mov [ ebp - 0xc ] edx
call sub_4013b0
push [ ebp - 0x14 ]
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x10 ]
push esi
call sub_4012f3
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov ecx [ ebp - 0x18 ]
add eax ecx
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
add eax edi
push eax
push ecx
push edi
push esi
call [ Ellipse@IAT ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xffffffff
je r-xdata
push [ ebp - 0x14 ]
push 0x0
push edi
push eax
push esi
call sub_4012f3
jmp r-xdata
mov edi [ ecx ]
mov [ ebp - 0x8 ] edi
push 0x0
push ecx
push edi
push esi
call [ MoveToEx@IAT ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
inc [ ebp - 0xc ]
inc [ ebp - 0xc ]
fild [ edx + 0x8 ]
mov eax [ ecx + 0x8 ]
add edx 0x10
add ecx 0x10
mov [ ebp + 0x8 ] edx
push ecx
push ecx
fstp [ ebp - 0x20 ]
fild [ ecx ]
mov [ ebp + 0xc ] ecx
fstp [ ebp - 0x1c ]
fld [ ebp - 0x1c ]
fstp [ esp + 0x4 ]
fld [ ebp - 0x20 ]
fstp [ esp ]
push eax
push [ ebp - 0x18 ]
push edi
push esi
call [ AngleArc@IAT ]
push [ ebp - 0x18 ]
push edi
push esi
call [ LineTo@IAT ]
push esi
call [ CloseFigure@IAT ]
jmp r-xdata
inc [ ebp - 0xc ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
add eax 0x8
mov edx [ ebp - 0xc ]
add ecx 0x8
mov [ ebp + 0xc ] eax
mov [ ebp + 0x8 ] ecx
cmp edx [ ebx + 0xc ]
jl r-xdata
sub_40152e
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0x8 ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] 0xfffffffe
push edi
mov [ ebp - 0x10 ] ebx
call [ BeginPath@IAT ]
mov esi [ ebp + 0xc ]
mov [ rw-data ] bl
jmp r-xdata
test esi esi
jne r-xdata
push [ ebp - 0x10 ]
xor ebx ebx
push ebx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push edi
call sub_4012f3
cmp [ esi + 0xc ] ebx
jle r-xdata
push [ ebp - 0x4 ]
push edi
call sub_4013b0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx esi
lea eax [ esi + 0x810 ]
lea edx [ esi + 0x10 ]
mov [ ebp - 0xc ] eax
neg ecx
mov [ ebp + 0xc ] edx
mov [ ebp + 0x8 ] ecx
mov esi [ esi + 0x4 ]
sub eax ebx
push eax
lea eax [ esi + 0x810 ]
add eax ebx
push eax
lea eax [ ebx + 0x2 ]
lea eax [ esi + eax * 8 ]
push eax
push edi
call [ PolyDraw@IAT ]
add ecx 0xfffff7f0
add ecx eax
cmp ebx ecx
je r-xdata
add edx 0x8
inc eax
mov [ ebp - 0xc ] eax
add eax 0xfffff7f0
add eax ecx
mov [ ebp + 0xc ] edx
cmp eax [ esi + 0xc ]
mov eax [ ebp - 0xc ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
lea ebx [ ecx - 0x80f ]
mov cl [ eax ]
add ebx eax
cmp cl 0x14
je r-xdata
sub ecx ebx
lea eax [ ebx + 0x810 ]
push ecx
add eax esi
push eax
lea eax [ ebx + 0x2 ]
lea eax [ esi + eax * 8 ]
push eax
push edi
call [ PolyDraw@IAT ]
mov eax [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
cmp [ eax ] 0x8
jae r-xdata
mov ecx [ ebp + 0x8 ]
jmp r-xdata
cmp cl 0x8
jne r-xdata
cmp cl 0x18
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx 0xffffffff
je r-xdata
mov ecx [ edx ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0xffffffff
je r-xdata
push [ ebp - 0x4 ]
push edi
call sub_4013b0
mov ecx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov [ ebp - 0x4 ] eax
push [ ebp - 0x10 ]
push 0x0
push eax
push ecx
push edi
call sub_4012f3
mov eax [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
sub_40167d
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_402612
mov ecx [ rw-data ]
mov ecx [ ecx + eax * 4 ]
mov ecx [ ecx ]
push [ ecx + 0x1c ]
push eax
call sub_402327
push 0x0
push [ ebp + 0xc ]
push 0x7
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
pop ebp
retn 0x8
sub_4016b5
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_402612
push eax
call sub_40201b
push 0x0
push 0x0
push 0x2
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
pop ebp
retn 0x4
sub_4016de
push ebp
mov ebp esp
push ecx
push ebx
push esi
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_402612
mov esi [ ebp + 0x10 ]
mov ecx rw-data
push esi
mov [ ebp - 0x4 ] eax
mov ebx esi
call sub_4025db
mov edx eax
cmp edx 0xffffffff
je r-xdata
push esi
call [ GetParent@IAT ]
mov ebx eax
mov ecx rw-data
push ebx
call sub_4025db
mov edx eax
jmp r-xdata
mov ecx [ ebp + 0x14 ]
dec ecx
je r-xdata
cmp edx 0xffffffff
je r-xdata
dec ecx
je r-xdata
push esi
push [ ebp + 0xc ]
push 0x133
mov eax [ rw-data ]
mov eax [ eax + edx * 4 ]
mov eax [ eax ]
mov al [ eax + 0x90 ]
cmp al 0x2
je r-xdata
cmp edx 0xffffffff
je r-xdata
sub ecx 0x4
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push ebx
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call sub_4021a5
cmp al 0x3
je r-xdata
push esi
push [ ebp + 0xc ]
push 0x134
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + edx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0x1
je r-xdata
cmp edx 0xffffffff
je r-xdata
test al al
je r-xdata
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
jmp r-xdata
push esi
push [ ebp + 0xc ]
push 0x138
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + edx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0x12
je r-xdata
cmp [ eax + 0x48 ] 0xffffffff
jne r-xdata
sub_401765
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x5c
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_402612
mov ecx [ rw-data ]
mov eax [ ecx + eax * 4 ]
mov ebx [ eax ]
lea eax [ esp + 0x28 ]
push eax
mov [ esp + 0x10 ] ebx
push [ ebx ]
mov esi [ ebx + 0x1c8 ]
call [ BeginPaint@IAT ]
mov edi eax
lea eax [ esp + 0x28 ]
push eax
push [ ebx ]
call [ EndPaint@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
test [ eax + 0x92 ] 0x10
je r-xdata
movzx eax [ eax + 0x93 ]
cmp eax [ ebx + 0x190 ]
jne r-xdata
cmp [ eax + 0x93 ] 0xff
jne r-xdata
mov esi [ esi ]
jmp r-xdata
jmp r-xdata
and [ rw-data ] 0x0
lea eax [ esp + 0x18 ]
and [ rw-data ] 0x0
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
push eax
mov eax [ esi + 0x8 ]
push [ eax ]
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x10 ]
push eax
push [ ebx ]
call [ ScreenToClient@IAT ]
push 0x0
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push edi
call [ SetViewportOrgEx@IAT ]
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x48 ]
mov eax [ eax + 0x4c ]
test ebx ebx
jns r-xdata
test esi esi
je r-xdata
cmp eax 0xffffffff
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
push 0x1
push 0x0
push ebx
push eax
push edi
call sub_4012f3
mov ecx [ esi + 0x8 ]
movsx eax [ ecx + 0x8e ]
push eax
movsx eax [ ecx + 0x8c ]
push eax
push 0x0
push 0x0
push edi
call [ Rectangle@IAT ]
push ebx
push edi
call sub_4013b0
jmp r-xdata
mov eax ebx
jmp r-xdata
test ebx ebx
jns r-xdata
push esi
push edi
call sub_401424
push esi
push edi
mov bl al
call sub_40152e
test bl bl
jne r-xdata
push esi
push edi
call sub_48bde0
jmp r-xdata
mov ebx [ esp + 0xc ]
sub_40189b
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_402612
mov edx [ ebp + 0xc ]
mov ecx eax
test edx edx
je r-xdata
or [ rw-data ] 0xffffffff
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov [ rw-data ] ecx
jmp r-xdata
mov eax [ ebp + 0x14 ]
push [ ebp + 0x10 ]
movzx ecx ax
shl ecx 0x10
movzx eax dx
or ecx eax
push ecx
push 0x6
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
pop ebp
retn 0x10
sub_4018f4
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ecx rw-data
push edi
push esi
call sub_402612
mov edx [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
cmp eax 0xffffffff
je r-xdata
cmp edx 0x1
je r-xdata
mov edi [ ebp + 0x14 ]
xor ecx ecx
mov ebx [ ebp + 0x10 ]
cmp [ rw-data ] ecx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edx
jmp r-xdata
cmp [ rw-data ] cl
je r-xdata
mov eax [ ebp + 0xc ]
mov edx 0x115
cmp eax edx
ja r-xdata
push esi
call [ DefDlgProcW@IAT ]
mov eax [ rw-data ]
mov [ ebp + 0x14 ] eax
cmp [ rw-data ] edx
je r-xdata
mov edx 0x202
cmp eax edx
ja r-xdata
je r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax ]
cmp [ ecx ] edx
lea ecx [ ebp + 0x14 ]
je r-xdata
mov ecx eax
sub ecx 0x204
je r-xdata
je r-xdata
push ecx
cmp eax 0x2b
ja r-xdata
and [ ebp + 0x14 ] 0x0
push edi
push ebx
push edx
mov [ rw-data ] edx
mov [ rw-data ] 0x1
mov eax [ eax ]
push esi
push ecx
add eax 0x4
push eax
call sub_4711ed
or [ rw-data ] 0xffffffff
mov [ rw-data ] 0x0
dec eax
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_456aca
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0xc ]
jmp r-xdata
push 0x1
jmp r-xdata
dec ecx
je r-xdata
push ecx
jmp r-xdata
mov ecx 0x137
cmp eax ecx
jbe r-xdata
xor eax eax
jmp r-xdata
mov ecx eax
sub ecx 0x4e
je r-xdata
je r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
push esi
mov ecx rw-data
call sub_402612
cmp eax 0xffffffff
je r-xdata
test eax eax
je r-xdata
mov eax edi
shr eax 0x10
push ebx
cwde
push eax
movsx eax di
push eax
push ecx
push esi
call sub_48bf9a
jmp r-xdata
push 0x1
sub ecx 0xc
je r-xdata
mov eax edi
shr eax 0x10
push ebx
cwde
push eax
movsx eax di
push eax
push esi
call sub_48bff6
jmp r-xdata
je r-xdata
mov ecx eax
sub ecx 0x138
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
push edi
push ebx
push esi
call sub_48cb26
jmp r-xdata
sub ecx 0x5
je r-xdata
push edi
push esi
call sub_48c5e7
jmp r-xdata
cmp eax 0x6
jbe r-xdata
push edi
push ebx
push esi
push [ ebp + 0x8 ]
push ecx
call sub_48c8ca
jmp r-xdata
dec ecx
je r-xdata
push ecx
push ecx
push ebx
push esi
call sub_45698e
jmp r-xdata
mov edx eax
sub edx 0x133
je r-xdata
sub ecx 0xc8
je r-xdata
push 0x6
push edi
push ebx
push esi
push [ ebp + 0x8 ]
push ecx
call sub_48c973
jmp r-xdata
sub ecx 0x28
je r-xdata
je r-xdata
cmp eax 0xf
je r-xdata
push edi
push ebx
push esi
push [ ebp + 0x8 ]
push ecx
call sub_48c8f9
jmp r-xdata
sub ecx 0x20
je r-xdata
push 0x1
jmp r-xdata
dec edx
je r-xdata
mov eax edi
shr eax 0x10
push ebx
cwde
push eax
movsx eax di
push eax
push esi
call sub_48c9a8
jmp r-xdata
dec ecx
jne r-xdata
mov eax edi
shr eax 0x10
push eax
movzx eax di
push eax
push ebx
push esi
call sub_48c502
jmp r-xdata
sub ecx 0x9
je r-xdata
mov eax ebx
shr eax 0x10
push eax
push edi
movzx eax bx
push eax
push esi
call sub_40189b
jmp r-xdata
mov ecx eax
dec ecx
je r-xdata
push esi
call sub_401765
cmp eax 0x7
je r-xdata
push edi
push ebx
push esi
push [ ebp + 0x8 ]
push ecx
call sub_48c928
jmp r-xdata
dec ecx
je r-xdata
push edi
push ebx
push esi
call sub_4016de
jmp r-xdata
push 0x2
jmp r-xdata
dec edx
je r-xdata
push edi
push ebx
push eax
push ecx
mov eax edi
shr eax 0x10
cwde
push eax
movsx eax di
push eax
push esi
call sub_48cae6
jmp r-xdata
sub ecx 0x8d
je r-xdata
dec ecx
jne r-xdata
push ebx
push esi
call sub_40167d
jmp r-xdata
cmp eax 0x20
jne r-xdata
push ebx
push esi
call sub_48c668
jmp r-xdata
sub ecx 0xe7
je r-xdata
dec edx
jne r-xdata
mov eax ebx
shr eax 0x10
push eax
push edi
movzx eax bx
push eax
push esi
call sub_48c216
jmp r-xdata
dec ecx
je r-xdata
dec ecx
je r-xdata
push esi
call sub_4016b5
jmp r-xdata
mov eax edi
shr eax 0x10
push eax
movzx eax di
push eax
push ebx
push esi
call sub_401290
jmp r-xdata
call [ IsThemeActive@IAT ]
push edi
push ebx
push 0x31a
push esi
mov [ rw-data ] eax
call [ DefDlgProcW@IAT ]
jmp r-xdata
push esi
mov ecx rw-data
call sub_402612
mov ecx [ rw-data ]
push 0xf
mov eax [ ecx + eax * 4 ]
mov esi [ eax ]
call [ GetSysColor@IAT ]
cmp [ esi + 0x4c ] 0xffffffff
mov edi eax
je r-xdata
mov eax edi
shr eax 0x10
cwde
push eax
movsx eax di
push eax
push ebx
push esi
call sub_48d7f6
jmp r-xdata
dec ecx
dec ecx
jne r-xdata
push ecx
push ecx
push esi
call sub_48ca02
jmp r-xdata
dec ecx
dec ecx
jne r-xdata
push edi
push ebx
call [ SetBkColor@IAT ]
push 0x0
push edi
call sub_4022d0
jmp r-xdata
mov edi [ esi + 0x4c ]
push 0x1
jmp r-xdata
jmp r-xdata
mov eax ebx
shr eax 0x10
cwde
push eax
movzx eax bx
push eax
push edi
push esi
call sub_48d422
jmp r-xdata
mov eax edi
shr eax 0x10
cwde
push eax
movsx eax di
push eax
push ebx
push esi
call sub_48d4a8
jmp r-xdata
sub_401b41
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x1c8 ]
mov ecx esi
mov [ ebp + 0x8 ] ecx
test esi esi
je r-xdata
push 0x1
push 0x0
push [ edi ]
call [ InvalidateRect@IAT ]
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x4 ]
test ebx ebx
jne r-xdata
cmp esi [ eax + 0x80 ]
jne r-xdata
push ebx
mov ebx [ ebx + 0x4 ]
call j_sub_422ed5#3
pop ecx
test ebx ebx
jne r-xdata
mov eax [ edi + 0x1c8 ]
cmp esi eax
jne r-xdata
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
jmp r-xdata
cmp [ ecx ] eax
je r-xdata
mov eax [ esi ]
mov [ edi + 0x1c8 ] eax
mov ecx esi
mov esi [ esi ]
jmp r-xdata
mov esi [ edi + 0x1c8 ]
mov ecx esi
mov eax [ esi ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
mov [ ebp + 0x8 ] ecx
test esi esi
je r-xdata
jmp r-xdata
push esi
call j_sub_422ed5#3
mov eax [ ebp + 0xc ]
pop ecx
test eax eax
je r-xdata
test eax eax
je r-xdata
sub_401bcb
push ebp
mov ebp esp
mov ecx [ ebp + 0x24 ]
cmp ecx 0xffffffff
jne r-xdata
mov eax [ ebp + 0x28 ]
mov edx 0x96
inc eax
neg eax
push ebx
mov ebx [ ebp + 0x1c ]
sbb eax eax
and eax [ ebp + 0x28 ]
push esi
push edi
cmp ebx 0xffffffff
je r-xdata
mov ecx 0x100
mov ebx edx
jmp r-xdata
mov edi [ ebp + 0x20 ]
cmp edi 0xffffffff
je r-xdata
mov edi edx
jmp r-xdata
push 0x1
push ecx
push [ ebp + 0x10 ]
push edi
push ebx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ecx
push r--data
push r--data
push eax
push [ ebp + 0x8 ]
call sub_401d35
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x14 ]
or [ esi + 0x4c ] 0xffffffff
mov [ esi + 0x88 ] ax
mov eax [ ebp + 0x18 ]
push 0x910
mov [ esi + 0x8a ] ax
mov [ esi + 0x8c ] bx
mov [ esi + 0x8e ] di
call sub_420f36
mov edx [ ebp + 0x8 ]
xor edi edi
pop ecx
mov [ eax + 0xc ] edi
mov [ eax + 0x4 ] edi
mov [ esi + 0x80 ] eax
mov [ eax + 0x8 ] esi
mov [ eax ] edi
mov ecx [ edx + 0x1c8 ]
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x24
mov [ edx + 0x1c8 ] eax
jmp r-xdata
cmp [ ecx ] edi
jne r-xdata
mov ecx 0x300
mov al 0x1
or [ esi + 0x86 ] cx
mov ecx [ ecx ]
jmp r-xdata
mov [ ecx ] eax
sub_401cbf
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
xor edi edi
mov esi [ eax + 0x80 ]
mov esi [ eax ]
jmp r-xdata
mov eax [ esi + 0xc ]
add eax [ ebp + 0x18 ]
cmp eax 0x100
jge r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] edi
jne r-xdata
push 0x910
call sub_420f36
pop ecx
mov [ eax + 0xc ] edi
mov [ eax + 0x4 ] edi
mov [ eax ] edi
mov [ esi + 0x4 ] eax
mov esi eax
jmp r-xdata
mov edi [ esi + 0xc ]
mov eax [ ebp + 0xc ]
mov [ edi + esi + 0x810 ] al
cmp eax 0x8
je r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ esi + edi * 8 + 0x10 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + edi * 8 + 0x14 ] eax
lea eax [ edi + 0x1 ]
pop edi
mov [ esi + 0xc ] eax
pop esi
pop ebp
retn 0x14
cmp [ ebp + 0x14 ] 0xffffffff
je r-xdata
lea ecx [ ebp + 0x10 ]
call sub_40322f
lea ecx [ ebp + 0x14 ]
call sub_40322f
jmp r-xdata
sub_401d35
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0xc ]
or ecx 0x50000000
test eax 0x80000
jne r-xdata
and eax 0xfff7ffff
jmp r-xdata
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
push ebx
push [ rw-data ]
push [ ebp + 0x2c ]
push [ edi ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call [ CreateWindowExW@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x30
cmp [ ebp + 0x34 ] bl
je r-xdata
cmp [ edi + 0x18c ] ebx
jge r-xdata
push ebx
push 0x11
call [ GetStockObject@IAT ]
push eax
push 0x30
push esi
call [ SendMessageW@IAT ]
cmp [ edi + 0x198 ] bl
je r-xdata
push ebx
push esi
call [ ShowWindow@IAT ]
jmp r-xdata
sub_401db3
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ esi + 0x3a ] 0x0
jne r-xdata
mov edi [ ebp + 0xc ]
mov ax [ esi + 0x58 ]
cmp [ edi + 0x90 ] 0x7
mov [ edi + 0x88 ] ax
mov ax [ esi + 0x5c ]
mov [ edi + 0x8a ] ax
je r-xdata
mov ebx [ ebp + 0xc ]
movzx eax [ ebx + 0x86 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x34 ]
push eax
push [ esi ]
call [ GetClientRect@IAT ]
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x28 ]
mov edx [ esi + 0x44 ]
mov edi [ esi + 0x48 ]
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0xc ] eax
mov [ ebp - 0x8 ] edx
mov [ ebp + 0x8 ] edi
test ecx ecx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ax [ esi + 0x60 ]
mov [ edi + 0x8c ] ax
mov ax [ esi + 0x64 ]
mov [ edi + 0x8e ] ax
mov [ ebp + 0x10 ] 0x1
test edx edx
je r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
push [ edi ]
call [ GetClientRect@IAT ]
or ebx 0xffffffff
cmp [ esi + 0x58 ] ebx
je r-xdata
jmp r-xdata
mov ax [ ebp - 0x24 ]
mov [ edi + 0x88 ] ax
jmp r-xdata
cmp [ esi + 0x5c ] ebx
je r-xdata
mov [ ebp + 0x10 ] edx
jmp r-xdata
mov [ ebp + 0xc ] 0x1
test edi edi
je r-xdata
cmp [ esi + 0x19c ] 0x0
jne r-xdata
mov ax [ ebp - 0x20 ]
mov [ edi + 0x8a ] ax
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
push [ edi ]
call [ GetWindowRect@IAT ]
cmp [ esi + 0x60 ] ebx
je r-xdata
mov [ ebp + 0xc ] edi
jmp r-xdata
push 0xf
call [ GetSystemMetrics@IAT ]
sub edi eax
mov [ ebp + 0x8 ] edi
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
push [ ebx ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x34 ]
sub eax ecx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x30 ]
sub edx eax
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ esi ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x1c ] ecx
call [ ScreenToClient@IAT ]
mov edi [ ebp - 0x1c ]
mov eax edi
imul eax [ ebp - 0x8 ]
mov esi [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
cdq
idiv [ ebp + 0x10 ]
mov [ ebx + 0x88 ] ax
mov eax esi
imul eax [ ebp + 0x8 ]
cdq
idiv [ ebp + 0xc ]
mov [ ebx + 0x8a ] ax
mov eax [ ebp - 0xc ]
imul eax [ ebp - 0x8 ]
cdq
idiv [ ebp + 0x10 ]
mov [ ebx + 0x8c ] ax
mov eax [ ebp - 0x10 ]
imul eax [ ebp + 0x8 ]
cdq
idiv [ ebp + 0xc ]
mov [ ebx + 0x8e ] ax
test cx cx
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
mov [ edi + 0x8c ] ax
jmp r-xdata
cmp [ esi + 0x64 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
test ecx 0x100
je r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ edi + 0x8e ] ax
jmp r-xdata
cmp [ edi + 0x90 ] 0x0
jne r-xdata
test ecx 0x200
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebx + 0x8c ] ax
test cl 0x6
jne r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
mov [ ebx + 0x8e ] ax
test cl 0x60
jne r-xdata
test cl 0x8
jne r-xdata
mov [ ebx + 0x88 ] di
jmp r-xdata
test cl 0x4
jne r-xdata
test cl cl
js r-xdata
mov eax [ ebp - 0x8 ]
mov ecx edi
sub eax [ ebp + 0x10 ]
cdq
sub eax edx
sar eax 0x1
sub ecx eax
mov [ ebx + 0x88 ] cx
mov ecx [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
cdq
sub eax edx
sar eax 0x1
cmp edi eax
jg r-xdata
test ax ax
je r-xdata
mov eax ecx
and eax 0x20
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx esi
sub eax [ ebp + 0xc ]
cdq
sub eax edx
sar eax 0x1
sub ecx eax
mov [ ebx + 0x8a ] cx
mov ecx [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
cdq
sub eax edx
sar eax 0x1
cmp esi eax
jg r-xdata
mov eax edi
sub eax [ ebp + 0x10 ]
add eax [ ebp - 0xc ]
imul eax [ ebp - 0x8 ]
cdq
idiv [ ebp + 0x10 ]
sub eax [ ebp - 0xc ]
add eax [ ebp - 0x8 ]
mov [ ebx + 0x88 ] ax
jmp r-xdata
sub edi [ ebp + 0x10 ]
sub di [ ebx + 0x8c ]
add di [ ebp - 0x8 ]
add di [ ebp - 0xc ]
mov [ ebx + 0x88 ] di
jmp r-xdata
sub di [ ebx + 0x88 ]
sub di [ ebp + 0x10 ]
add di [ ebp - 0x8 ]
add di [ ebp - 0xc ]
mov [ ebx + 0x8c ] di
jmp r-xdata
mov [ ebx + 0x8a ] si
jmp r-xdata
test cl 0x40
jne r-xdata
mov eax esi
sub eax [ ebp + 0xc ]
add eax [ ebp - 0x10 ]
imul eax [ ebp + 0x8 ]
cdq
idiv [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
sub eax [ ebp - 0x10 ]
add eax edx
mov [ ebx + 0x8a ] ax
jmp r-xdata
test ax ax
je r-xdata
mov eax ecx
and eax 0x2
jne r-xdata
sub si [ ebx + 0x8e ]
sub si [ ebp + 0xc ]
add si dx
add si [ ebp - 0x10 ]
mov [ ebx + 0x8a ] si
jmp r-xdata
sub si [ ebx + 0x8a ]
sub si [ ebp + 0xc ]
add si dx
add si [ ebp - 0x10 ]
mov [ ebx + 0x8e ] si
jmp r-xdata
sub_401fd9
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ ebp + 0x18 ]
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov [ ecx + 0x58 ] eax
mov eax [ ebp + 0xc ]
cmp eax 0xffffffff
je r-xdata
add [ ecx + 0x58 ] eax
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov eax [ ecx + 0x60 ]
add eax [ ebp + 0x8 ]
add [ ecx + 0x58 ] eax
mov eax [ ebp + 0x10 ]
test eax eax
jle r-xdata
mov [ ecx + 0x5c ] eax
add [ ecx + 0x5c ] eax
jmp r-xdata
mov eax [ ecx + 0x64 ]
add eax [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
mov [ ecx + 0x60 ] eax
pop ebp
retn 0x14
mov [ ecx + 0x64 ] eax
sub_40201b
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x0
mov eax [ eax + esi * 4 ]
mov edi [ eax ]
push edi
call sub_401b41
cmp [ edi + 0x18 ] 0x0
jne r-xdata
push [ edi + 0x18 ]
call [ DestroyAcceleratorTable@IAT ]
and [ edi + 0x18 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
push 0x3
pop edx
mov [ ebp - 0x4 ] edx
cmp ecx edx
jl r-xdata
cmp [ edi + 0x20 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + edx * 4 ]
mov esi [ eax ]
test esi esi
je r-xdata
push [ edi + 0x20 ]
call [ DestroyIcon@IAT ]
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
inc edx
mov [ ebp - 0x4 ] edx
cmp edx ecx
jle r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ edi + 0x4 ]
jne r-xdata
push [ edi + 0x24 ]
call [ DestroyIcon@IAT ]
jmp r-xdata
mov edx [ rw-data ]
mov eax [ edx + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov esi [ ebp + 0x8 ]
movzx eax [ esi + 0x90 ]
sub eax 0xa
je r-xdata
mov eax [ edx + esi * 4 ]
and [ eax ] 0x0
mov edx [ rw-data ]
dec edx
mov [ rw-data ] edx
cmp esi [ rw-data ]
jne r-xdata
push ecx
call sub_4010f0
mov edx [ rw-data ]
cmp [ esi + 0x40 ] 0x0
je r-xdata
sub eax 0x6
je r-xdata
mov ecx [ rw-data ]
cmp edx 0x1
je r-xdata
or [ rw-data ] 0xffffffff
cmp [ esi + 0x64 ] 0x0
jne r-xdata
push [ esi + 0x40 ]
call [ ImageList_Destroy@IAT ]
and [ esi + 0x40 ] 0x0
jmp r-xdata
sub eax 0x3
je r-xdata
xor esi esi
test ecx ecx
jle r-xdata
pop edi
pop esi
test edx edx
jne r-xdata
push [ esi + 0x64 ]
call [ DeleteObject@IAT ]
and [ esi + 0x64 ] 0x0
jmp r-xdata
cmp [ esi + 0x68 ] 0x0
jne r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
sub eax 0x8
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
mov edi [ rw-data ]
test ecx ecx
je r-xdata
push [ rw-data ]
push edx
call [ KillTimer@IAT ]
and [ rw-data ] 0x0
push [ esi + 0x68 ]
call [ DestroyIcon@IAT ]
and [ esi + 0x68 ] 0x0
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0x38 ]
call [ ImageList_Destroy@IAT ]
and [ esi + 0x38 ] 0x0
dec eax
dec eax
jne r-xdata
push esi
push edi
call sub_401b41
inc esi
cmp esi ecx
jl r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
push [ esi + 0x44 ]
call [ DeleteObject@IAT ]
and [ esi + 0x44 ] 0x0
jmp r-xdata
cmp [ esi + 0x50 ] 0x0
jne r-xdata
push [ esi + 0x3c ]
call [ ImageList_Destroy@IAT ]
and [ esi + 0x3c ] 0x0
jmp r-xdata
push edi
push esi
mov ecx rw-data
call sub_48a487
jmp r-xdata
mov eax [ edi + esi * 4 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx rw-data
call sub_403532
jmp r-xdata
push [ esi + 0x50 ]
call [ DestroyWindow@IAT ]
and [ esi + 0x50 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
mov ecx [ rw-data ]
push [ ebp - 0x4 ]
mov ecx rw-data
call sub_40246d
mov ecx [ rw-data ]
mov edx [ ebp - 0x4 ]
push [ esi ]
call [ DestroyWindow@IAT ]
and [ esi ] 0x0
sub_4021a5
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
push ebx
push esi
push edi
mov eax [ eax + ecx * 4 ]
mov ecx rw-data
push [ ebp + 0x10 ]
mov ebx [ eax ]
mov [ ebp - 0x4 ] ebx
call sub_4025db
push 0xf
mov esi eax
mov [ ebp + 0xb ] 0x0
call [ GetSysColor@IAT ]
cmp [ ebx + 0x4c ] 0xffffffff
mov edi eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
mov edi [ ebx + 0x4c ]
push edi
push [ ebp + 0xc ]
call [ SetBkColor@IAT ]
push 0x0
push edi
call sub_4022d0
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ebx [ eax ]
mov ecx [ ebx + 0x48 ]
test ecx ecx
jns r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebx + 0x90 ] 0x1b
je r-xdata
movzx eax [ ebx + 0x90 ]
cmp eax 0x1b
ja r-xdata
mov edi ecx
jmp r-xdata
cmp ecx 0xfffffffe
sete [ ebp + 0xb ]
jmp r-xdata
movzx eax [ eax + lookup_table_4022a5 ]
jmp [ eax * 4 + jump_table_402289 ]
cmp [ ebx + 0x93 ] 0xff
jne r-xdata
mov [ ebp + 0xb ] 0x1
push 0x5
jmp r-xdata
cmp [ ebx + 0x93 ] 0xff
je r-xdata
push 0xfffffff0
push [ ebx ]
call [ GetWindowLongW@IAT ]
test eax 0x8000800
je r-xdata
cmp [ ebx + 0x48 ] 0xffffffff
jne r-xdata
cmp [ ebx + 0x4c ] 0xffffffff
jne r-xdata
call [ GetSysColor@IAT ]
mov edi eax
jmp r-xdata
mov esi [ ebp - 0x4 ]
lea eax [ ebp - 0x14 ]
push eax
push [ esi + 0x188 ]
call [ GetClientRect@IAT ]
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x1328
push [ esi + 0x188 ]
call [ SendMessageW@IAT ]
push [ esi + 0x188 ]
call [ GetWindowDC@IAT ]
push [ ebp - 0x10 ]
mov esi eax
push [ ebp - 0x14 ]
push esi
call [ GetPixel@IAT ]
mov edi eax
mov eax [ ebp - 0x4 ]
push esi
push [ eax + 0x188 ]
call [ ReleaseDC@IAT ]
cmp edi 0xffffffff
jne r-xdata
jmp r-xdata
mov al [ ebx + 0x90 ]
cmp al 0x17
je r-xdata
push [ ebx + 0x4c ]
jmp r-xdata
push 0x8
call [ GetSysColor@IAT ]
push eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0xf
mov [ ebp + 0xb ] 0x1
jmp r-xdata
cmp al 0x7
je r-xdata
push [ ebp + 0xc ]
call [ SetTextColor@IAT ]
cmp [ ebp + 0xb ] 0x0
je r-xdata
push 0x1
push [ ebp + 0xc ]
call [ SetBkMode@IAT ]
push 0x5
call [ GetStockObject@IAT ]
cmp al 0x1
je r-xdata
cmp al 0x2
je r-xdata
cmp al 0x3
je r-xdata
test al al
je r-xdata
push [ ebx ]
call [ GetWindowDC@IAT ]
push 0x0
mov esi eax
push 0x0
push esi
call [ GetPixel@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push esi
push [ ebx ]
call [ ReleaseDC@IAT ]
cmp edi 0xffffffff
jne r-xdata
movsx eax [ ebx + 0x8c ]
push 0x0
dec eax
push eax
push esi
call [ GetPixel@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
movsx eax [ ebx + 0x8e ]
dec eax
push eax
push 0x0
push esi
call [ GetPixel@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
movsx eax [ ebx + 0x8e ]
dec eax
push eax
movsx eax [ ebx + 0x8c ]
dec eax
push eax
push esi
call [ GetPixel@IAT ]
mov edi eax
sub_4022d0
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov edi edi
push ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] 0x1
call [ CreateSolidBrush@IAT ]
mov [ ebp - 0x4 ] eax
mov ecx rw-data
lea eax [ ebp - 0xc ]
push eax
call sub_403257
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov edx [ eax ]
cmp [ edx ] ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
add [ edx + 0x4 ] ecx
mov eax [ eax ]
mov eax [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
test eax eax
je r-xdata
sub_402327
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xffffffff
je r-xdata
pop ebp
retn 0x8
push edi
mov edi [ ebp + 0xc ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
push esi
mov eax [ eax + ecx * 4 ]
mov esi [ eax ]
mov eax [ edx + edi * 4 ]
mov ecx [ eax ]
mov eax [ esi + 0x1cc ]
mov [ ebp + 0x8 ] ecx
test eax eax
je r-xdata
pop edi
mov eax [ edx + edi * 4 ]
cmp [ eax ] 0x0
jne r-xdata
push ecx
mov ecx eax
call sub_45bd75
mov edx [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push 0x1
push eax
push 0x28
push [ esi ]
mov [ esi + 0x1c ] edi
mov edi [ PostMessageW@IAT ]
mov [ ebp + 0xc ] eax
call edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x90 ] 0x2
jne r-xdata
or [ esi + 0x1c ] 0xffffffff
jmp r-xdata
pop esi
jmp r-xdata
push [ esi + 0x1c0 ]
push [ esi + 0x1bc ]
push 0xb1
push [ ebp + 0xc ]
call edi
sub_402344
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
mov ebx ecx
mov esi [ edi ]
call [ GetCursorPos@IAT ]
mov eax [ ebp - 0x8 ]
mov [ edi + 0x16c ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x170 ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call [ ScreenToClient@IAT ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
cmp ecx [ edi + 0x174 ]
jne r-xdata
cmp [ ebp + 0xc ] 0x1
mov [ edi + 0x174 ] ecx
mov [ edi + 0x178 ] eax
jl r-xdata
cmp eax [ edi + 0x178 ]
jne r-xdata
push [ ebx + 0x18 ]
mov esi [ GetAsyncKeyState@IAT ]
call esi
push [ ebx + 0x1c ]
movzx eax ax
shr eax 0xf
mov [ ebp + 0x8 ] eax
call esi
movzx esi ax
mov eax [ ebp + 0x8 ]
shr esi 0xf
cmp eax [ edi + 0x17c ]
jne r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jl r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push eax
push ecx
push edi
push 0xfffffff5
mov ecx ebx
call sub_486193
jmp r-xdata
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
cmp esi [ edi + 0x180 ]
jne r-xdata
mov [ edi + 0x17c ] eax
mov ecx ebx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push edi
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x1
jl r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xfffffff8
call sub_486193
cmp [ edi + 0x184 ] 0x0
je r-xdata
push 0xfffffff9
jmp r-xdata
mov ecx ebx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push edi
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ edi + 0x180 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x184 ] 0x0
jmp r-xdata
push 0xfffffff0
push [ edi ]
call [ GetWindowLongW@IAT ]
mov ecx ebx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push edi
test eax 0x1000000
je r-xdata
call sub_486193
push 0xfffffff6
push 0xfffffff7
jmp r-xdata
push 0xfffffff4
push 0xfffffffa
jmp r-xdata
call sub_486193
jmp r-xdata
sub_402402
push ebp
mov ebp esp
mov edx ecx
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
js r-xdata
mov eax [ edx + 0x98 ]
cmp eax 0xffffffff
je r-xdata
cmp ecx 0x3
jl r-xdata
xor al al
jmp r-xdata
mov edi [ edx + 0x94 ]
cmp edi 0xffffffff
je r-xdata
cmp ecx [ edx + 0x84 ]
jg r-xdata
pop edi
pop esi
pop ebp
retn 0xc
mov esi [ ebp + 0x10 ]
mov [ esi ] edi
jmp r-xdata
mov eax [ edx + 0x74 ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov ecx eax
mov eax [ edx + 0x60 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax ] 0x0
je r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ eax + 0x4 ]
mov [ esi ] ecx
mov ecx [ esi ]
cmp ecx 0x3
jl r-xdata
cmp ecx [ edx + 0x84 ]
jg r-xdata
mov eax [ edx + 0x74 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax ] 0x0
je r-xdata
mov al 0x1
sub_40246d
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
cmp edi [ esi + 0x94 ]
je r-xdata
or [ esi + 0x98 ] 0xffffffff
or [ esi + 0x94 ] 0xffffffff
jmp r-xdata
mov eax [ esi + 0x74 ]
mov eax [ eax + edi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x74 ]
mov eax [ eax + edi * 4 ]
and [ eax ] 0x0
dec [ esi + 0x80 ]
cmp edi [ esi + 0x84 ]
jne r-xdata
push ecx
call sub_4032fa
cmp [ esi + 0x78 ] 0x3
jbe r-xdata
cmp edi 0x3
jl r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x78 ]
mov eax [ esi + 0x74 ]
mov eax [ eax + ecx * 4 - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov [ esi + 0x84 ] edi
jmp r-xdata
mov eax [ esi + 0x74 ]
lea ecx [ eax + edi * 4 ]
dec [ esi + 0x78 ]
mov ecx [ esi + 0x78 ]
mov eax [ esi + 0x74 ]
push [ eax + ecx * 4 ]
call j_sub_422ed5#3
mov eax [ esi + 0x74 ]
pop ecx
mov ecx [ esi + 0x78 ]
and [ eax + ecx * 4 ] 0x0
dec edi
sub ecx 0x4
cmp edi 0x3
jge r-xdata
mov eax [ ecx ]
cmp [ eax ] 0x0
jne r-xdata
sub_402519
push ebp
mov ebp esp
push ecx
mov ecx [ rw-data ]
push esi
push edi
cmp [ rw-data ] ecx
jne r-xdata
push 0x3
pop esi
xor edi edi
cmp ecx esi
jle r-xdata
cmp [ rw-data ] 0xffff
je r-xdata
push 0xa0
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov edx [ rw-data ]
or eax 0xffffffff
jmp r-xdata
push 0xa0
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov eax esi
inc [ rw-data ]
mov ecx [ ecx + esi * 4 ]
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ edi + 0x4 ] ecx
mov ecx eax
call sub_403379
mov edi eax
jmp r-xdata
inc esi
cmp esi ecx
jl r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
xor edi edi
jmp r-xdata
mov ecx eax
call sub_403379
mov edi eax
mov eax [ edx + esi * 4 ]
cmp [ eax ] edi
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push eax
mov ecx rw-data
call sub_403416
mov esi [ rw-data ]
inc esi
mov [ rw-data ] esi
sub_4025db
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
je r-xdata
or eax 0xffffffff
jmp r-xdata
push 0xffffffeb
push esi
call [ GetWindowLongW@IAT ]
cmp eax [ edi + 0x78 ]
jae r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ edi + 0x74 ]
mov ecx [ ecx + eax * 4 ]
mov ecx [ ecx ]
test ecx ecx
je r-xdata
cmp [ ecx ] esi
jne r-xdata
sub_402612
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
je r-xdata
or eax 0xffffffff
jmp r-xdata
push 0xffffffeb
push esi
call [ GetWindowLongW@IAT ]
cmp eax [ edi + 0x64 ]
jae r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ edi + 0x60 ]
mov ecx [ ecx + eax * 4 ]
mov ecx [ ecx ]
test ecx ecx
je r-xdata
cmp [ ecx ] esi
jne r-xdata
sub_402649
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
mov [ rw-data ] 0x2
push esi
xor eax eax
mov [ rw-data ] ebx
inc eax
mov [ rw-data ] bl
push edi
or edi 0xffffffff
mov [ rw-data ] al
mov ecx rw-data
mov [ rw-data ] eax
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] edi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bl
call sub_4077c7
push 0x3
pop esi
push 0x7c
pop eax
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] edi
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] edi
mov [ rw-data ] ax
call sub_403582
test al al
jne r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] ebx
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
call sub_403416
dec esi
jne r-xdata
pop edi
pop esi
mov eax rw-data
pop ebx
mov esp ebp
pop ebp
retn
sub_40277c
push esi
call sub_403114
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov esi [ ecx + 0x4 ]
push ecx
call sub_4860bb
mov ecx esi
test esi esi
jne r-xdata
and [ rw-data ] 0x0
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
jmp r-xdata
mov esi [ ecx + 0x4 ]
push ecx
call sub_4032af
mov ecx esi
test esi esi
jne r-xdata
and [ rw-data ] 0x0
mov ecx rw-data
call sub_403488
mov ecx rw-data
call sub_403569
mov ecx rw-data
call sub_405a64
mov eax [ rw-data ]
test eax eax
jne r-xdata
jmp r-xdata
mov esi [ eax + 0x4 ]
push eax
call j_sub_422ed5#3
mov eax esi
pop ecx
test esi esi
jne r-xdata
pop esi
retn
pop esi
retn
sub_4027d9
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
push 0x1d0
call sub_420f36
pop ecx
test eax eax
je r-xdata
xor edi edi
jmp r-xdata
mov ecx eax
call sub_40112a
mov edi eax
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] ecx
cmp [ rw-data ] ecx
jne r-xdata
xor esi esi
test ecx ecx
jle r-xdata
lea eax [ ebp - 0x4 ]
mov esi ecx
push eax
mov ecx rw-data
call sub_4034c2
mov edi [ ebp - 0x4 ]
mov ecx esi
mov eax [ rw-data ]
mov ebx [ ebp + 0x1c ]
mov eax [ eax + esi * 4 ]
mov [ eax ] edi
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
mov [ eax + 0x4 ] esi
cmp ebx 0xffffffff
jne r-xdata
mov edx [ rw-data ]
or ebx 0x4000000
mov eax 0x80000
test ebx 0x10000
jne r-xdata
mov ebx 0x80ca0000
inc esi
cmp esi ecx
jl r-xdata
or ebx eax
jmp r-xdata
test ebx 0x40000
jne r-xdata
mov eax [ edx + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
jmp r-xdata
or ebx eax
jmp r-xdata
mov eax [ ebp + 0x20 ]
inc eax
neg eax
sbb eax eax
and eax [ ebp + 0x20 ]
mov [ ebp + 0x1c ] eax
test al 0x40
jne r-xdata
mov edx [ ebp + 0x24 ]
test edx edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp + 0xc ] eax
push 0x40
pop ecx
xor eax ecx
mov [ edi + 0xc ] ecx
push edx
mov ecx rw-data
mov [ ebp + 0x1c ] eax
call sub_402612
test eax eax
js r-xdata
cmp esi ecx
jmp r-xdata
mov [ ebp + 0x14 ] ecx
jmp r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x24 ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x24 ]
call [ GetClientRect@IAT ]
push 0x7
call [ GetSystemMetrics@IAT ]
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0x20 ]
sub ecx eax
add [ ebp + 0xc ] ecx
push 0x8
call [ GetSystemMetrics@IAT ]
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x1c ]
mov edx [ ebp + 0x10 ]
sub ecx eax
add edx ecx
mov eax ebx
mov ecx 0xc00000
mov [ ebp + 0x20 ] edx
and eax ecx
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax ]
mov [ eax + 0xc ] 0x80000000
jne r-xdata
mov [ ebp + 0x18 ] ecx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
push 0x4
call [ GetSystemMetrics@IAT ]
add [ ebp + 0x20 ] eax
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
and [ eax ] 0x0
jmp r-xdata
mov ecx rw-data
call sub_403532
jmp r-xdata
cmp [ ebp + 0x20 ] 0xffffffff
jne r-xdata
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x30
call [ SystemParametersInfoW@IAT ]
push 0x7
call [ GetSystemMetrics@IAT ]
mov ecx [ ebp - 0x18 ]
sub ecx [ ebp + 0x14 ]
add ecx [ ebp - 0x10 ]
sub ecx eax
mov eax ecx
cdq
sub eax edx
sar eax 0x1
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] 0xffffffff
mov ecx 0x190
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x18 ]
push [ ebp + 0x14 ]
push 0x0
push 0x0
push eax
call [ SetRect@IAT ]
push [ ebp + 0x1c ]
lea eax [ ebp - 0x18 ]
push 0x0
push ebx
push eax
call [ AdjustWindowRectEx@IAT ]
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
push 0x0
push [ rw-data ]
push 0x0
push [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x20 ]
push [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push r--data
push [ ebp + 0x1c ]
call [ CreateWindowExW@IAT ]
mov [ edi ] eax
test eax eax
je r-xdata
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x30
call [ SystemParametersInfoW@IAT ]
push 0x8
call [ GetSystemMetrics@IAT ]
mov ecx [ ebp - 0x14 ]
sub ecx [ ebp + 0x18 ]
add ecx [ ebp - 0xc ]
sub ecx eax
mov eax ecx
cdq
sub eax edx
sar eax 0x1
mov [ ebp + 0x20 ] eax
test ebx __dos_header
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
cmp esi [ ebp - 0x8 ]
push esi
push 0xffffffeb
push eax
call [ SetWindowLongW@IAT ]
mov eax [ ebp + 0x24 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ edi + 0x3c ] eax
mov eax [ ebp + 0x20 ]
mov [ edi + 0x40 ] eax
lea eax [ ebp - 0x18 ]
push eax
push [ edi ]
call [ GetClientRect@IAT ]
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
mov [ edi + 0x44 ] eax
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
push 0x0
push 0x11
mov [ edi + 0x48 ] eax
call [ GetStockObject@IAT ]
push eax
push 0x30
push [ edi ]
call [ SendMessageW@IAT ]
push 0xffffffff
push edi
mov ecx rw-data
call sub_402344
cmp [ rw-data ] 0x0
jne r-xdata
push 0x4
call [ GetSystemMetrics@IAT ]
push 0xfffffffe
cdq
pop ecx
idiv ecx
add [ ebp + 0x20 ] eax
inc [ rw-data ]
mov ecx rw-data
push 0x0
mov [ rw-data ] esi
call sub_402f66
test ebx 0x10000000
jne r-xdata
push sub_401256
push 0x28
push 0x0
push 0x0
call [ SetTimer@IAT ]
mov [ rw-data ] eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ edi ]
push [ edi ]
call sub_48ad87
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push 0x0
push 0x4
call sub_402a5b
jmp r-xdata
sub_402a5b
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push edi
mov edi rw-data
jne r-xdata
push [ ebp + 0xc ]
mov ecx edi
call sub_402612
mov ecx eax
mov [ rw-data ] ecx
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
push esi
mov eax [ eax + ecx * 4 ]
mov esi [ eax ]
mov ecx [ esi ]
mov [ ebp + 0xc ] ecx
cmp [ esi + 0x3a ] dl
je r-xdata
pop edi
pop ebp
retn 0x8
mov edi [ ebp + 0x8 ]
cmp edi 0x8
jg r-xdata
mov [ esi + 0x3a ] dl
cmp [ esi + 0x18c ] edx
jge r-xdata
mov eax edi
sub eax 0x9
je r-xdata
je r-xdata
cmp [ esi + 0x198 ] dl
je r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
sub eax 0x37
je r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test edi edi
je r-xdata
push [ esi + 0x194 ]
mov ecx edi
push esi
call sub_48b6d2
mov ecx [ ebp + 0xc ]
xor edx edx
mov [ esi + 0x198 ] dl
jmp r-xdata
xor eax eax
jmp r-xdata
push edi
push ecx
call [ ShowWindow@IAT ]
push [ ebp + 0xc ]
call sub_404a35
jmp r-xdata
push 0x1
dec eax
je r-xdata
push edi
push ecx
call [ ShowWindow@IAT ]
cmp edi 0x8
je r-xdata
push edx
push ecx
call [ ShowWindow@IAT ]
mov [ esi + 0x38 ] 0x0
jmp r-xdata
cmp edi 0x1
je r-xdata
pop esi
xor eax eax
inc eax
push edx
jmp r-xdata
dec eax
je r-xdata
mov [ esi + 0x38 ] 0x1
cmp edi 0x4
je r-xdata
cmp edi 0x2
je r-xdata
push ecx
call [ EnableWindow@IAT ]
jmp r-xdata
push ecx
mov [ esi + 0x39 ] 0x1
call [ LockWindowUpdate@IAT ]
jmp r-xdata
dec eax
jne r-xdata
push [ ebp + 0xc ]
call sub_404a35
mov [ esi + 0x38 ] 0x1
jmp r-xdata
cmp edi 0x3
je r-xdata
push edx
mov [ esi + 0x39 ] dl
call [ LockWindowUpdate@IAT ]
push 0x1
push 0x0
push [ esi ]
call [ InvalidateRect@IAT ]
jmp r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov [ esi + 0x38 ] 0x1
jmp r-xdata
jle r-xdata
push 0x6
push ecx
call [ ShowWindow@IAT ]
jmp r-xdata
cmp edi 0x5
jg r-xdata
cmp edi 0x6
je r-xdata
jmp r-xdata
sub_402b27
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ ebp + 0x10 ]
mov ecx rw-data
call sub_402612
mov ecx eax
mov [ rw-data ] ecx
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
lea eax [ edx + 0xd ]
cmp eax 0xd
ja r-xdata
pop ebp
retn 0xc
mov eax [ rw-data ]
push [ ebp + 0xc ]
shl edx 0x4
mov eax [ eax + ecx * 4 ]
lea ecx [ edx + 0x15c ]
mov eax [ eax ]
add ecx eax
call sub_4081a7
xor eax eax
inc eax
sub_402b72
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push [ ebp + 0x18 ]
mov ecx rw-data
call sub_402612
mov ecx eax
mov [ rw-data ] ecx
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn 0x1c
mov eax [ rw-data ]
push [ ebp + 0x8 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ eax ]
add ecx 0x28
call sub_407d2c
mov ecx [ rw-data ]
jmp r-xdata
mov eax [ rw-data ]
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax [ eax + ecx * 4 ]
mov esi [ eax ]
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
xor eax eax
inc eax
mov [ ebp + 0x8 ] eax
test edi edi
jne r-xdata
push 0x10
push 0x10
push 0x10
push eax
push edi
push 0x0
call [ LoadImageW@IAT ]
mov [ ebp + 0x18 ] eax
test eax eax
jne r-xdata
mov edi eax
mov eax [ ebp + 0x14 ]
mov [ ebp + 0x14 ] eax
mov ecx [ ebp + 0x14 ]
call sub_4649ed
push 0x1
lea ecx [ ebp + 0x18 ]
mov [ ebp + 0x14 ] eax
push ecx
push 0x0
push eax
push edi
call [ ExtractIconExW@IAT ]
jmp r-xdata
mov eax [ ebp + 0x1c ]
cmp eax 0xffffffff
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_40322f
cmp [ esi + 0x4c ] 0x0
jge r-xdata
mov ecx [ ebp + 0x18 ]
mov edi [ DestroyIcon@IAT ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x14 ]
push 0x1
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_4649ed
push eax
push edi
call [ ExtractIconExW@IAT ]
mov eax [ ebp - 0x4 ]
push 0x50
xor eax eax
push eax
push eax
push 0x1
push edi
push eax
call [ LoadImageW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax [ ebp + 0x20 ]
cmp eax 0xffffffff
jne r-xdata
push [ esi + 0x4c ]
call sub_48a4e1
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x1
push eax
mov [ esi + 0x4c ] eax
call sub_4022d0
test eax eax
je r-xdata
push ecx
push 0x0
push 0x80
push [ ebp - 0x8 ]
call [ SendMessageW@IAT ]
cmp [ esi + 0x20 ] 0x0
je r-xdata
mov [ esi + 0x54 ] eax
jmp r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
mov edi [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
push eax
push 0x1
push 0x80
push [ ebp - 0x8 ]
call [ SendMessageW@IAT ]
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x20 ] eax
mov ecx [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
push [ esi + 0x20 ]
call edi
push 0x1
push 0x0
push [ ebp - 0x8 ]
call [ InvalidateRect@IAT ]
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
neg eax
sbb eax eax
and edi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0x24 ] eax
mov ecx [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
push [ esi + 0x24 ]
call edi
sub_402c18
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x5c
lea eax [ esp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
push edi
push eax
lea eax [ esp + 0x14 ]
push eax
push esi
call sub_402402
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebx + 0x60 ]
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
or [ esp + 0x10 ] 0xffffffff
mov eax [ ecx + eax * 4 ]
mov ecx [ eax ]
mov eax [ ebx + 0x74 ]
mov [ esp + 0xc ] ecx
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
mov [ esp + 0x1c ] edi
mov dl [ edi + 0x90 ]
movzx eax dl
cmp eax 0x11
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
je r-xdata
sub eax 0x13
je r-xdata
push [ edi + 0x10 ]
push 0x0
push 0x1101
push [ edi + 0x34 ]
call [ SendMessageW@IAT ]
jmp r-xdata
cmp eax 0xc
jg r-xdata
cmp [ edi + 0x38 ] 0x0
mov esi [ ImageList_Destroy@IAT ]
je r-xdata
dec eax
je r-xdata
mov esi [ esp + 0xc ]
cmp eax 0xe
jl r-xdata
je r-xdata
cmp [ edi + 0x3c ] 0x0
je r-xdata
push [ edi + 0x38 ]
call esi
lea eax [ esp + 0x20 ]
mov [ esp + 0x28 ] esi
mov esi [ SendMessageW@IAT ]
push eax
push [ esp + 0x14 ]
mov [ esp + 0x28 ] 0x1
push 0x1053
push [ edi + 0x34 ]
call esi
cmp eax [ esp + 0x10 ]
je r-xdata
dec eax
dec eax
je r-xdata
push [ edi + 0x44 ]
call [ DeleteObject@IAT ]
jmp r-xdata
cmp [ edi + 0x64 ] 0x0
jne r-xdata
push [ edi ]
call [ DestroyWindow@IAT ]
cmp eax 0xf
jle r-xdata
push 0x3
pop esi
cmp [ ebx + 0x84 ] esi
jl r-xdata
cmp eax 0x2
jl r-xdata
push 0x3
pop esi
cmp [ ebx + 0x84 ] esi
jl r-xdata
push [ edi + 0x3c ]
call esi
push 0x0
push eax
push 0x1008
push [ edi + 0x34 ]
call esi
jmp r-xdata
push 0x3
pop esi
cmp [ ebx + 0x84 ] esi
jl r-xdata
sub eax 0x5
jne r-xdata
push [ edi + 0x64 ]
call [ DeleteObject@IAT ]
jmp r-xdata
cmp [ edi + 0x68 ] 0x0
jne r-xdata
cmp dl 0xe
jne r-xdata
cmp eax 0x10
jne r-xdata
mov eax [ ecx + 0x1a0 ]
cmp [ edi + 0xc ] eax
jne r-xdata
mov eax [ ebx + 0x74 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
push 0x3
pop esi
cmp eax esi
jle r-xdata
mov eax [ ebx + 0x74 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax ]
test edx edx
je r-xdata
mov eax [ ebx + 0x74 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax ]
test edx edx
je r-xdata
dec eax
dec eax
jne r-xdata
push edi
push ecx
call sub_401b41
push [ edi + 0x68 ]
call [ DestroyIcon@IAT ]
jmp r-xdata
cmp [ edi + 0x50 ] 0x0
jne r-xdata
push 0x0
push esi
push [ edi + 0xc ]
call [ DeleteMenu@IAT ]
test eax eax
jne r-xdata
push 0x2c
lea eax [ esp + 0x40 ]
mov [ esp + 0x3c ] 0x30
push 0x0
push eax
call sub_422f60
add esp 0xc
mov [ esp + 0x3c ] 0x4
lea eax [ esp + 0x38 ]
push eax
push 0x0
push esi
push [ edi + 0xc ]
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
cmp [ edi + 0x40 ] 0x0
je r-xdata
push [ edi + 0xc ]
call [ DestroyMenu@IAT ]
jmp r-xdata
push eax
call [ DestroyMenu@IAT ]
mov esi [ esp + 0xc ]
and [ esi + 0x1a0 ] 0x0
jmp r-xdata
inc esi
cmp esi [ ebx + 0x84 ]
jle r-xdata
mov eax [ ecx + 0xc ]
cmp eax [ edi + 0xc ]
jne r-xdata
mov eax [ ecx + 0x1c4 ]
test eax eax
jle r-xdata
cmp eax 0xa
je r-xdata
inc esi
cmp esi [ ebx + 0x84 ]
jle r-xdata
mov ecx [ esp + 0xc ]
mov eax [ edx + 0x4 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
inc esi
cmp esi [ ebx + 0x84 ]
jg r-xdata
mov eax [ edx + 0x4 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
push ecx
push edi
mov ecx ebx
call sub_48a487
jmp r-xdata
push [ edi + 0x50 ]
call [ DestroyWindow@IAT ]
jmp r-xdata
mov eax [ esp + 0x14 ]
cmp eax [ esi + 0x1c ]
je r-xdata
mov esi [ esp + 0xc ]
push eax
push esi
mov esi [ esp + 0x14 ]
push [ esi + 0x19c ]
call [ DeleteMenu@IAT ]
jmp r-xdata
mov ecx [ esp + 0x4c ]
mov [ esp + 0x1c ] ecx
test ecx ecx
je r-xdata
push 0x3
pop esi
cmp [ ebx + 0x84 ] esi
jl r-xdata
push [ edi + 0x40 ]
call [ ImageList_Destroy@IAT ]
cmp [ edi + 0x44 ] 0x0
jne r-xdata
mov ecx [ esp + 0xc ]
mov al [ ecx + 0x90 ]
cmp al 0xf
je r-xdata
cmp [ ebp + 0x8 ] eax
jne r-xdata
mov eax [ ebx + 0x84 ]
cmp eax esi
jl r-xdata
cmp eax 0xb
jne r-xdata
jmp r-xdata
cmp [ edx + 0x90 ] 0x14
jne r-xdata
jmp r-xdata
cmp [ edx + 0x90 ] 0x3
jne r-xdata
mov ecx [ esp + 0x10 ]
mov [ esi + 0x1c ] ecx
jmp r-xdata
push eax
mov ecx ebx
call sub_40246d
xor eax eax
inc eax
push [ esi ]
call [ DrawMenuBar@IAT ]
jmp r-xdata
push eax
call [ GetMenuItemCount@IAT ]
test eax eax
jne r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
push 0x3
pop esi
cmp [ ebx + 0x84 ] esi
jl r-xdata
mov eax [ ebx + 0x74 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
push esi
mov ecx ebx
call sub_40246d
cmp al 0xe
je r-xdata
and [ ecx + 0x1c4 ] 0x0
jmp r-xdata
mov edx [ esp + 0x10 ]
xor eax eax
mov [ ecx + 0x188 ] eax
mov [ ecx + 0x18c ] edx
mov [ ecx + 0x190 ] edx
mov [ ecx + 0x194 ] eax
mov [ ecx + 0x198 ] al
push [ edi ]
call [ DestroyWindow@IAT ]
cmp [ edi + 0x40 ] 0x0
je r-xdata
mov edi eax
mov eax [ ecx + 0x190 ]
push 0x0
mov [ esp + 0x1c ] eax
movzx eax [ edi + 0x93 ]
push eax
push 0x1308
push [ ecx + 0x188 ]
call [ SendMessageW@IAT ]
mov eax [ esp + 0xc ]
mov ecx ebx
push [ eax + 0x188 ]
call sub_4025db
mov ecx eax
mov eax [ ebx + 0x74 ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov ecx [ eax + 0x40 ]
test ecx ecx
je r-xdata
mov eax [ edx + 0x34 ]
cmp eax [ edi ]
jne r-xdata
mov eax [ edx ]
cmp eax [ edi + 0x34 ]
jne r-xdata
push eax
push [ esi ]
call [ SetMenu@IAT ]
push [ esi + 0x19c ]
call [ DestroyMenu@IAT ]
and [ esi + 0x19c ] 0x0
mov esi [ ebp + 0x8 ]
mov eax [ ebx + 0x74 ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
inc esi
cmp esi [ ebx + 0x84 ]
jle r-xdata
mov eax [ ecx + 0x34 ]
cmp eax [ edi ]
jne r-xdata
and [ ecx + 0xc ] 0x0
jmp r-xdata
push [ edi + 0x40 ]
call [ ImageList_Destroy@IAT ]
jmp r-xdata
dec edi
cmp edi esi
jge r-xdata
cmp [ eax + 0x90 ] 0xb
jne r-xdata
cmp [ ebx + 0x84 ] esi
jl r-xdata
movzx eax [ edi + 0x88 ]
cmp ax [ esp + 0x10 ]
je r-xdata
push esi
mov ecx ebx
call sub_402c18
mov eax [ ebx + 0x74 ]
push 0x0
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
movsx eax [ ecx + 0x8e ]
push eax
movsx eax [ ecx + 0x8c ]
push eax
movsx eax [ ecx + 0x8a ]
push eax
movsx eax [ ecx + 0x88 ]
push eax
push [ ecx ]
call [ MoveWindow@IAT ]
jmp r-xdata
inc esi
cmp esi [ ebx + 0x84 ]
jle r-xdata
cmp [ eax + 0xc ] ecx
jne r-xdata
jmp r-xdata
cmp [ ecx + 0x90 ] 0x11
jne r-xdata
mov eax [ ebx + 0x74 ]
mov eax [ eax + edi * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov edi [ esp + 0x1c ]
mov ecx [ esp + 0xc ]
push edi
mov ecx ebx
call sub_402c18
movzx eax [ edi + 0x93 ]
mov ecx [ esp + 0x18 ]
mov esi [ esp + 0xc ]
cmp eax ecx
jne r-xdata
mov eax [ ebx + 0x74 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
cwde
push eax
push ecx
call [ ImageList_Remove@IAT ]
cmp [ eax + 0x90 ] 0xf
jne r-xdata
push esi
mov ecx ebx
call sub_40246d
mov eax [ esp + 0x10 ]
mov [ esi + 0x190 ] eax
movzx eax [ edi + 0x93 ]
cmp ecx eax
jle r-xdata
cmp ecx [ esi + 0x18c ]
je r-xdata
inc esi
cmp esi [ ebx + 0x84 ]
jle r-xdata
mov al [ ecx + 0x93 ]
cmp al 0xff
je r-xdata
push esi
mov ecx ebx
call sub_40246d
mov ecx [ esp + 0x1c ]
push ecx
push esi
mov ecx ebx
mov [ edi + 0x93 ] 0xff
call sub_48b6d2
dec [ esi + 0x18c ]
and [ esi + 0x194 ] 0x0
jmp r-xdata
dec ecx
jmp r-xdata
mov dl [ edi + 0x93 ]
cmp al dl
jne r-xdata
jbe r-xdata
cmp [ ecx + 0x90 ] 0xb
je r-xdata
mov eax [ ebx + 0x74 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax ]
cmp [ edx + 0x90 ] 0xb
jne r-xdata
dec al
mov [ ecx + 0x93 ] al
cmp al dl
push esi
mov ecx ebx
call sub_402c18
jmp r-xdata
movzx ecx [ edi + 0x88 ]
test cx cx
js r-xdata
movzx eax [ edx + 0x88 ]
test ax ax
js r-xdata
cmp ax cx
jle r-xdata
dec eax
mov [ esp + 0x38 ] 0x2
mov [ edx + 0x88 ] ax
mov ecx [ ebx + 0x74 ]
mov eax [ ecx + esi * 4 ]
mov eax [ eax ]
movsx eax [ eax + 0x88 ]
mov [ esp + 0x4c ] eax
lea eax [ esp + 0x38 ]
push eax
mov eax [ ecx + esi * 4 ]
mov eax [ eax ]
movzx eax [ eax + 0x93 ]
push eax
mov eax [ esp + 0x14 ]
push 0x133d
push [ eax + 0x188 ]
call [ SendMessageW@IAT ]
sub_402d1a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x28
push ebx
push esi
mov esi [ rw-data ]
push edi
cmp eax 0xc
je r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
je r-xdata
cmp eax 0xd
jle r-xdata
cmp esi 0xffffffff
je r-xdata
lea eax [ ebp - 0x28 ]
mov ecx rw-data
push eax
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x10 ]
call sub_402402
test al al
je r-xdata
cmp eax 0xf
jle r-xdata
and [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ebx [ eax ]
push ebx
mov [ ebp - 0x1c ] ebx
call sub_402519
mov edi eax
mov [ ebp - 0x20 ] edi
cmp edi 0xffffffff
je r-xdata
mov esi [ ebp - 0x20 ]
jmp r-xdata
cmp eax 0x11
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov eax [ eax + edi * 4 ]
mov esi [ eax ]
mov [ ebp - 0x24 ] esi
cmp edx 0xe
je r-xdata
cmp eax 0x14
je r-xdata
lea ecx [ ebp + 0x2c ]
call sub_409a20
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x34
mov [ esi + 0x92 ] 0x0
jmp r-xdata
cmp edx 0xf
je r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x28 ]
and edx 0x2
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x28 ] edx
jne r-xdata
cmp edx 0xc
je r-xdata
xor edx edx
mov [ esi + 0x86 ] dx
jmp r-xdata
push ebx
push [ ebp + 0x1c ]
push edi
push ecx
push eax
call sub_401fd9
mov edi [ ebx + 0x60 ]
mov eax [ ebx + 0x58 ]
mov ecx [ ebx + 0x5c ]
mov [ ebp - 0x8 ] edi
mov edi [ ebx + 0x64 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edi
mov [ esi + 0x92 ] 0x50
mov ax [ rw-data ]
mov [ esi + 0x86 ] ax
mov edx [ ebp + 0x8 ]
mov edi [ ebp - 0x20 ]
cmp edx 0x1d
ja r-xdata
push edi
mov ecx rw-data
call sub_40246d
or [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0xc ] 0x1
jmp [ edx * 4 + jump_table_402eee ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
push ebx
call sub_401bcb
mov al [ ebp - 0xc ]
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_486706
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_486ce2
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_486952
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_486ba2
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_486a01
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_486897
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_48740b
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_4874ed
jmp r-xdata
sub esp 0x10
lea eax [ ebp + 0x2c ]
mov ecx esp
push eax
and [ ecx + 0x8 ] 0x0
call sub_409ac0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_486a95
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push ecx
push edi
push esi
push ebx
call sub_4875ff
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push ecx
push edi
push esi
push ebx
call sub_487740
jmp r-xdata
lea ecx [ ebp + 0x2c ]
call sub_409c9c
push eax
push ecx
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_486419
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_487bc5
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push ecx
push edi
push esi
push ebx
call sub_4877e2
jmp r-xdata
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_4878be
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push edi
push esi
push ebx
call sub_487184
jmp r-xdata
push [ ebp + 0x10 ]
push ecx
push esi
push ebx
call sub_4867bd
jmp r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push edi
push esi
push ebx
call sub_4872c3
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push ecx
push edi
push esi
push ebx
call sub_487978
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push esi
push ecx
call sub_487aa3
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_486c39
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_4865e8
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_486682
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_4876b2
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push edi
push esi
push ebx
call sub_486db2
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push esi
push ecx
call sub_486f55
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
push eax
push [ ebp + 0xc ]
push ecx
push esi
push ebx
call sub_4864df
jmp r-xdata
push edi
mov ecx rw-data
call sub_40246d
cmp [ ebp + 0x8 ] 0xb
jne r-xdata
mov ecx [ ebp + 0x28 ]
mov [ esi + 0x90 ] dl
mov [ esi + 0x91 ] cl
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] edi
test cl 0x1
je r-xdata
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
xor ecx ecx
cmp [ eax ] cx
je r-xdata
xor eax eax
cmp [ ebx + 0x70 ] eax
jne r-xdata
test cl 0x4
je r-xdata
mov edi eax
jmp r-xdata
push eax
push [ ebx + 0x88 ]
lea eax [ ebx + 0x6c ]
push [ ebx + 0x84 ]
push [ ebx + 0x80 ]
push [ ebx + 0x7c ]
push eax
push esi
push ebx
call sub_486205
mov ecx [ ebp + 0x28 ]
jmp r-xdata
cmp [ ebx + 0x7c ] 0x55
jne r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
cmp [ ebx + 0x80 ] 0x190
jne r-xdata
push [ esi ]
call [ GetDC@IAT ]
mov ebx eax
xor eax eax
push eax
push eax
push 0x31
push [ esi ]
mov [ ebp + 0x20 ] eax
call [ SendMessageW@IAT ]
mov edi [ SelectObject@IAT ]
push eax
push ebx
call edi
mov edx [ ebp + 0xc ]
mov esi eax
lea eax [ ebp - 0x18 ]
mov ecx ebx
push eax
call sub_464876
pop ecx
push esi
push ebx
call edi
mov esi [ ebp - 0x24 ]
push ebx
push [ esi ]
call [ ReleaseDC@IAT ]
mov eax [ ebp + 0x8 ]
sub eax 0x17
je r-xdata
cmp [ ebp + 0x1c ] 0xffffffff
jne r-xdata
cmp [ ebx + 0x198 ] 0x0
jne r-xdata
push 0x0
push esi
push ebx
call sub_401db3
cmp [ ebx + 0x84 ] eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
dec eax
je r-xdata
cmp [ ebx + 0x190 ] 0xffffffff
je r-xdata
cmp [ ebx + 0x50 ] 0xffffffff
jne r-xdata
cmp [ ebx + 0x88 ] 0x2
je r-xdata
mov ebx [ ebp - 0x1c ]
or edi 0xffffffff
cmp [ ebp + 0x1c ] edi
jne r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp r-xdata
dec eax
je r-xdata
mov al [ ebx + 0x18c ]
mov al [ ebx + 0x190 ]
jmp r-xdata
push [ ebx + 0x50 ]
push edi
call sub_488883
jmp r-xdata
cmp [ ebx + 0x54 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x18 ] edi
jne r-xdata
cmp [ ebx + 0x64 ] edi
je r-xdata
mov edx [ ebp - 0x18 ]
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
add edx 0xc
jmp r-xdata
dec eax
jne r-xdata
mov [ esi + 0x93 ] al
jmp r-xdata
push [ ebx + 0x54 ]
push edi
call sub_488677
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
push [ ebp - 0xc ]
push [ ebx + 0x64 ]
push [ ebx + 0x60 ]
push [ ebx + 0x5c ]
push [ ebx + 0x58 ]
push [ esi ]
call [ MoveWindow@IAT ]
mov edi [ ebp - 0x20 ]
jmp r-xdata
cmp [ ebx + 0x60 ] edi
je r-xdata
lea eax [ ecx + 0x8 ]
mov [ ebx + 0x64 ] eax
cmp [ rw-data ] 0x2
je r-xdata
mov ecx [ ebp + 0x20 ]
mov edx ecx
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
add edx 0x8
jmp r-xdata
push edi
push 0xffffffeb
push [ esi ]
call [ SetWindowLongW@IAT ]
lea eax [ edx + 0x8 ]
mov [ ebx + 0x60 ] eax
cmp [ rw-data ] 0x2
je r-xdata
sub_402f66
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
jne r-xdata
push [ ebp + 0x8 ]
call sub_402612
mov [ esi + 0x6c ] eax
jmp r-xdata
mov ecx [ esi + 0x6c ]
mov eax [ esi + 0x60 ]
pop esi
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov [ eax + 0x68 ] 0x0
pop ebp
retn 0x4
sub_402f95
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_402402
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
push edi
mov eax [ eax + ecx * 4 ]
mov edi [ eax ]
cmp [ edi + 0x90 ] 0x1b
jne r-xdata
mov esp ebp
pop ebp
retn 0x20
xor eax eax
jmp r-xdata
push ebx
mov ebx [ ebp + 0xc ]
lea eax [ ebx - 0x1 ]
cmp eax 0x17
ja r-xdata
pop edi
xor eax eax
jmp r-xdata
movzx eax [ eax + lookup_table_403029 ]
jmp [ eax * 4 + jump_table_40300d ]
pop ebx
push 0x1
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov eax [ rw-data ]
push 0x1
push 0x0
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
push [ eax ]
call [ InvalidateRect@IAT ]
jmp r-xdata
mov eax [ edi + 0x80 ]
mov eax [ eax + 0xc ]
dec eax
js r-xdata
push 0x2
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ebx
push edi
call sub_401cbf
push 0x1
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
jmp r-xdata
push 0x3
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ebx
push edi
call sub_401cbf
push 0x1
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push edi
call sub_401cbf
push 0x1
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
jmp r-xdata
xor eax eax
inc eax
push esi
push 0x3
push [ ebp + 0x1c ]
mov esi ebx
push [ ebp + 0x18 ]
and esi 0xfffffffe
push esi
push edi
call sub_401cbf
push 0x1
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push edi
call sub_401cbf
push 0x1
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ebx
push edi
call sub_401cbf
pop esi
jmp r-xdata
push ebx
push edi
call sub_401cbf
sub_403041
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rw-data ]
push esi
xor esi esi
mov [ rw-data ] eax
push 0xf
mov [ ebp - 0x3c ] 0x30
mov [ ebp - 0x38 ] 0x2b
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x2c ] 0x1e
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x20 ] esi
call [ GetSysColorBrush@IAT ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] r--data
mov [ ebp - 0x34 ] sub_401287
call [ RegisterClassExW@IAT ]
push r--data
mov [ rw-data ] ax
call [ RegisterWindowMessageW@IAT ]
mov [ rw-data ] eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] 0x8
mov [ ebp - 0x8 ] 0x13b
call [ InitCommonControlsEx@IAT ]
push 0x1
push 0x1
push 0x21
push 0x10
push 0x10
call [ ImageList_Create@IAT ]
push 0xa9
push [ rw-data ]
mov [ rw-data ] eax
call [ LoadIconW@IAT ]
push eax
push 0xffffffff
push [ rw-data ]
call [ ImageList_ReplaceIcon@IAT ]
mov [ rw-data ] esi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_403114
push esi
mov esi rw-data
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 - 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx esi
call sub_403553
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx esi
call sub_403532
jmp r-xdata
push [ eax ]
call [ DestroyWindow@IAT ]
jmp r-xdata
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov ecx [ rw-data ]
jmp r-xdata
mov ecx eax
mov eax [ eax + 0x8 ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov ecx rw-data
mov esi [ eax ]
call sub_40467d
test esi esi
je r-xdata
pop esi
retn
test ecx ecx
jne r-xdata
test eax eax
je r-xdata
push ecx
call sub_4032af
mov eax [ rw-data ]
push ecx
mov ecx esi
call sub_404665
jmp r-xdata
mov eax [ eax ]
push [ eax + 0x8 ]
call [ DeleteObject@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
jmp r-xdata
and [ rw-data ] 0x0
jmp r-xdata
and [ eax + 0x4 ] 0x0
mov eax [ rw-data ]
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] ecx
sub_4031ce
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x4 ] ecx
cmp [ edi ] esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x64 ]
mov [ ebp + 0x8 ] eax
push ebx
test eax eax
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x60 ]
mov eax [ eax + esi * 4 ]
mov ebx [ eax ]
test ebx ebx
je r-xdata
pop ebx
inc esi
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov ecx [ ebx + 0x1cc ]
test ecx ecx
jne r-xdata
mov ecx [ ecx + 0x10 ]
test ecx ecx
je r-xdata
push edi
push [ ebx ]
call [ IsDialogMessageW@IAT ]
test eax eax
je r-xdata
mov eax [ ecx ]
push edi
push ecx
call [ eax + 0x14 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
inc eax
push 0xffffffe0
push [ edi ]
call [ GetClassLongW@IAT ]
movzx eax ax
cmp ax [ rw-data ]
je r-xdata
cmp ax [ rw-data ]
jne r-xdata
jmp r-xdata
sub_40322f
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
jle r-xdata
pop esi
retn
mov edx ecx
movzx eax cl
sar edx 0x10
and ecx 0xff00
and edx 0xff
shl eax 0x10
or edx eax
or edx ecx
mov [ esi ] edx
sub_403257
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
xor edi edi
push 0xc
cmp [ esi + 0x4 ] edi
je r-xdata
call sub_420f36
pop ecx
test eax eax
je r-xdata
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov [ esi ] edi
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx eax
call sub_4032c7
mov edi eax
mov eax [ esi + 0x4 ]
mov [ edi + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_4032c7
mov edi eax
inc [ esi + 0x8 ]
mov [ esi + 0x4 ] edi
pop edi
pop esi
pop ebp
retn 0x4
sub_4032c7
push ebp
mov ebp esp
push ebx
mov ebx ecx
push 0xc
and [ ebx + 0x4 ] 0x0
and [ ebx + 0x8 ] 0x0
call sub_420f36
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov [ ebx ] eax
mov eax ebx
pop ebx
pop ebp
retn 0x4
sub_4032fa
push esi
mov esi ecx
push edi
mov ecx [ esi + 0x78 ]
test ecx ecx
jne r-xdata
push ecx
call sub_407b3d
and [ esi + 0x78 ] 0x0
jmp r-xdata
mov eax [ esi + 0x7c ]
cmp eax 0xb
jg r-xdata
cmp eax 0xc
je r-xdata
je r-xdata
mov ecx [ esi + 0x70 ]
test ecx ecx
je r-xdata
jle r-xdata
mov eax [ esi + 0x70 ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
push [ esi + 0x70 ]
call j_sub_422ed5#3
pop ecx
sub eax 0x5
je r-xdata
and [ esi + 0x70 ] 0x0
lea ecx [ esi + 0x54 ]
mov [ esi + 0x7c ] 0x1
call sub_405a64
lea ecx [ esi + 0x24 ]
call sub_405a64
lea ecx [ esi + 0x14 ]
call sub_405a64
push esi
call j_sub_422ed5#3
pop ecx
pop edi
mov eax esi
pop esi
retn 0x4
push ecx
call sub_4571d0
jmp r-xdata
cmp eax 0xe
jle r-xdata
mov ecx [ esi + 0x70 ]
test ecx ecx
je r-xdata
sub eax 0x3
je r-xdata
mov edi [ esi + 0x70 ]
test edi edi
je r-xdata
cmp eax 0xf
jne r-xdata
push ecx
call sub_408e34
jmp r-xdata
cmp [ esi + 0x70 ] 0x0
je r-xdata
dec eax
dec eax
je r-xdata
jmp r-xdata
mov ecx [ esi + 0x70 ]
test ecx ecx
je r-xdata
push [ esi + 0x70 ]
call [ VariantClear@IAT ]
push [ esi + 0x70 ]
mov edi [ esi + 0x70 ]
test edi edi
je r-xdata
mov ecx edi
push ecx
call sub_4571e5
jmp r-xdata
pop ecx
jmp r-xdata
lea ecx [ edi + 0x8 ]
jmp r-xdata
call j_sub_422ed5#3
jmp r-xdata
call sub_405a64
push edi
jmp r-xdata
sub_403379
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
or edi 0xffffffff
lea ecx [ esi + 0x14 ]
mov [ esi ] ebx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
call sub_4077c7
lea ecx [ esi + 0x24 ]
call sub_4077c7
lea ecx [ esi + 0x54 ]
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] ebx
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] ebx
call sub_4077c7
mov [ esi + 0x64 ] ebx
mov eax esi
mov [ esi + 0x68 ] ebx
mov [ esi + 0x70 ] ebx
mov [ esi + 0x78 ] ebx
mov [ esi + 0x7c ] 0x1
mov [ esi + 0x84 ] di
mov [ esi + 0x88 ] di
mov [ esi + 0x8a ] di
mov [ esi + 0x8c ] di
mov [ esi + 0x8e ] di
mov [ esi + 0x9c ] edi
pop edi
mov [ esi + 0x80 ] ebx
mov [ esi + 0x98 ] bl
mov [ esi + 0x93 ] 0xff
pop esi
pop ebx
retn
sub_403416
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push 0x4
pop ebx
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
je r-xdata
lea ecx [ eax + eax ]
push 0x8
pop eax
cmp ecx eax
jae r-xdata
push ebx
call sub_420f36
mov edx eax
pop ecx
test edx edx
je r-xdata
mov eax ecx
jmp r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
mul ebx
push edi
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
cmp [ esi + 0x4 ] 0x0
mov edi eax
pop ecx
jne r-xdata
xor edx edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ edx ] ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] edi
pop edi
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edx
inc [ esi + 0x8 ]
pop esi
pop ebx
pop ebp
retn 0x4
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_420fc0
push [ esi + 0x4 ]
call j_sub_422ed5#3
add esp 0x10
jmp r-xdata
sub_403488
push esi
mov esi ecx
push edi
xor edi edi
mov [ esi ] r--data
cmp [ esi + 0x8 ] edi
jbe r-xdata
push [ esi + 0x4 ]
and [ esi + 0x8 ] 0x0
call j_sub_422ed5#3
pop ecx
pop edi
pop esi
retn
mov eax [ esi + 0x4 ]
push [ eax + edi * 4 ]
call j_sub_422ed5#3
mov eax [ esi + 0x4 ]
pop ecx
and [ eax + edi * 4 ] 0x0
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_4034c2
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push 0x4
pop ebx
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
jne r-xdata
push ebx
call sub_420f36
mov edx eax
pop ecx
test edx edx
je r-xdata
lea ecx [ eax + eax ]
push 0x8
pop eax
cmp ecx eax
jae r-xdata
xor edx edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ edx ] ecx
mov eax ecx
jmp r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
mul ebx
push edi
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
cmp [ esi + 0x4 ] 0x0
mov edi eax
pop ecx
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edx
inc [ esi + 0x8 ]
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] edi
pop edi
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_420fc0
push [ esi + 0x4 ]
call j_sub_422ed5#3
add esp 0x10
jmp r-xdata
sub_403532
push esi
mov esi ecx
dec [ esi + 0x8 ]
mov edx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
push [ eax + edx * 4 ]
call j_sub_422ed5#3
mov eax [ esi + 0x4 ]
pop ecx
mov ecx [ esi + 0x8 ]
pop esi
and [ eax + ecx * 4 ] 0x0
retn
sub_403553
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi + 0x8 ] edi
ja r-xdata
mov eax [ esi + 0x4 ]
push [ eax + edi * 4 ]
call j_sub_422ed5#3
pop ecx
mov eax [ esi + 0x4 ]
and [ eax + edi * 4 ] 0x0
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
and [ esi + 0x8 ] 0x0
pop edi
pop esi
retn
jmp r-xdata
sub_403582
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
mov edx r--data
push eax
push 0x4
push r--data
mov ecx 0x80000001
call sub_4035b0
add esp 0xc
cmp [ ebp - 0x8 ] 0x31
sete al
mov esp ebp
pop ebp
retn
sub_4035b0
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
je r-xdata
xor al al
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
xor ebx ebx
mov [ esi ] ax
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push ebx
push edx
push ecx
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
lea edi [ eax + eax ]
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push eax
push esi
push ebx
push ebx
push [ ebp + 0x8 ]
push [ ebp - 0x8 ]
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
mov al bl
pop edi
mov eax [ ebp - 0x4 ]
shr eax 0x1
mov [ ebp - 0x4 ] eax
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
mov [ edi + esi - 0x2 ] ax
jmp r-xdata
xor ecx ecx
mov [ esi + eax * 2 ] cx
mov bl 0x1
sub_40366a
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp esi eax
jne r-xdata
test eax eax
je r-xdata
cmp edi 0x11
jbe r-xdata
jmp r-xdata
je r-xdata
mov eax edi
sub eax 0x82
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call [ DefWindowProcW@IAT ]
mov eax [ ebp + 0x14 ]
mov ebx rw-data
and eax 0x80000000
mov [ rw-data ] 0x0
neg eax
mov ecx ebx
sbb eax eax
add eax 0x4
mov [ rw-data ] eax
call sub_4111d0
mov ecx ebx
call sub_4111f3
jmp r-xdata
mov eax edi
dec eax
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
jmp r-xdata
sub eax 0x8f
je r-xdata
push 0x0
push 0x2ee
push 0x1
push esi
call [ SetTimer@IAT ]
push r--data
call [ RegisterWindowMessageW@IAT ]
cmp [ rw-data ] 0x0
mov [ rw-data ] eax
jne r-xdata
dec eax
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ecx
push ecx
mov ecx rw-data
call sub_46281f
cmp al 0x1
je r-xdata
dec eax
dec eax
je r-xdata
call [ CreatePopupMenu@IAT ]
mov [ rw-data ] eax
jmp r-xdata
sub eax 0x3
je r-xdata
push 0x1
push esi
call [ KillTimer@IAT ]
mov ecx rw-data
call sub_4044cb
call sub_403114
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
jmp r-xdata
push ecx
push [ ebp + 0x10 ]
mov ecx rw-data
push esi
call sub_404531
jmp r-xdata
sub eax 0x1ff
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax ecx
push 0x1
shr eax 0x10
push eax
movzx eax cx
push eax
push 0x0
push 0x0
push [ rw-data ]
call [ MoveWindow@IAT ]
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub eax 0xef
je r-xdata
push [ rw-data ]
call [ SetFocus@IAT ]
jmp r-xdata
sub eax 0x9
jne r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_457f5e
jmp r-xdata
push [ ebp + 0x14 ]
push ecx
push ecx
push esi
mov ecx rw-data
call sub_4045df
jmp r-xdata
cmp edi [ rw-data ]
je r-xdata
mov ecx rw-data
mov [ rw-data ] 0x1
call sub_4111d0
jmp r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov ebx rw-data
mov ecx ebx
call sub_4044cb
mov ecx ebx
call sub_4043db
jmp r-xdata
sub_403778
push ebp
mov ebp esp
sub esp 0x64
push ebx
push esi
xor ebx ebx
lea ecx [ ebp - 0x5c ]
push edi
mov [ ebp - 0x60 ] ebx
call sub_4077c7
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4c ] r--data
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] bl
call sub_403d43
mov ecx [ ebp + 0xc ]
mov esi rw-data
mov al [ ebp - 0x3c ]
mov [ ecx ] al
mov ecx esi
call sub_404864
push r--data
lea ecx [ ebp - 0x20 ]
call sub_407f41
push 0x1
push [ rw-data ]
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] bl
call sub_404f3d
test eax eax
je r-xdata
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push [ ebp - 0x20 ]
lea ecx [ ebp - 0x38 ]
call sub_469604
test eax eax
je r-xdata
lea ecx [ ebp - 0x20 ]
call sub_405a64
push esi
mov ecx rw-data
call sub_4081a7
lea eax [ ebp - 0x5c ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_4093ea
push r--data
lea ecx [ ebp - 0x20 ]
call sub_407f41
xor esi esi
lea eax [ ebp - 0x30 ]
push esi
push 0x1
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_408620
lea ecx [ ebp - 0x20 ]
call sub_405a64
push r--data
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] 0x100
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x1
call sub_407f41
push esi
push esi
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_408620
lea ecx [ ebp - 0x20 ]
mov [ ebp + 0x8 ] eax
call sub_405a64
lea ecx [ ebp - 0x10 ]
call sub_409a20
mov esi [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
call sub_4077c7
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x60 ]
call sub_403ee2
mov edi [ ebp - 0x10 ]
push edi
push r--data
call sub_42307d
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_422ed5
pop ecx
lea ecx [ ebp - 0x38 ]
call sub_404faa
mov bl 0x1
jmp r-xdata
lea ecx [ ebp - 0x38 ]
call sub_404faa
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov [ rw-data ] 0x1
push eax
lea ecx [ ebp - 0x60 ]
dec esi
call sub_403ee2
mov edi [ ebp - 0x10 ]
jmp r-xdata
push edi
push r--data
call sub_42307d
pop ecx
pop ecx
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
mov [ rw-data ] 0x1
push eax
lea ecx [ ebp - 0x60 ]
dec esi
call sub_403ee2
mov edi [ ebp - 0x10 ]
jmp r-xdata
push edi
push r--data
call sub_42307d
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] 0x1
test bl bl
mov ecx rw-data
sete al
mov [ rw-data ] eax
call sub_404864
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x60 ]
call sub_403ee2
lea eax [ ebp - 0x10 ]
mov ecx rw-data
push eax
call sub_4081a7
lea eax [ ebp - 0x10 ]
sub esi 0x2
push eax
lea ecx [ ebp - 0x60 ]
call sub_403ee2
mov edi [ ebp - 0x10 ]
jmp r-xdata
push edi
push r--data
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
lea eax [ ebp - 0x10 ]
mov ecx rw-data
push eax
call sub_4081a7
lea eax [ ebp - 0x10 ]
dec esi
push eax
lea ecx [ ebp - 0x60 ]
call sub_403ee2
jmp r-xdata
test esi esi
js r-xdata
and [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x3
xor esi esi
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40942e
lea ecx [ esi + 0x1 ]
mov ebx eax
push ecx
push 0x1
push ebx
call sub_4091b0
and [ ebp - 0x18 ] 0x0
add esp 0xc
xor eax eax
mov [ ebp - 0x20 ] esi
inc eax
mov [ ebp - 0x14 ] eax
push 0x0
push eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_409040
add esp 0x10
lea ecx [ ebp - 0x20 ]
call sub_409a20
xor edi edi
test esi esi
jle r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x60 ]
call sub_403ee2
lea eax [ ebp - 0x10 ]
mov ecx rw-data
push eax
call sub_4081a7
lea eax [ ebp - 0x10 ]
sub esi 0x2
push eax
lea ecx [ ebp - 0x60 ]
call sub_403ee2
lea ecx [ ebp - 0x10 ]
call sub_405a64
lea ecx [ ebp - 0x30 ]
call sub_409a20
lea ecx [ ebp - 0x4c ]
call sub_403f20
and [ ebp - 0x60 ] 0x0
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x3c ] 0x0
call sub_404024
lea ecx [ ebp - 0x5c ]
call sub_405a64
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_4093ea
inc edi
lea eax [ ebp - 0x20 ]
push edi
push 0x1
push eax
push ebx
call sub_409040
add esp 0x10
lea ecx [ ebp - 0x20 ]
call sub_409a20
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x60 ]
call sub_403ee2
cmp edi esi
jl r-xdata
sub_4039e7
push esi
push edi
mov esi [ CreateWindowExW@IAT ]
xor edi edi
push edi
push [ rw-data ]
mov eax 0x80000000
push edi
push edi
push 0x64
push 0x12c
push eax
push eax
push 0xcf0000
mov eax r--data
push eax
push eax
push edi
call esi
push edi
push [ rw-data ]
mov [ rw-data ] eax
push 0x1
push eax
push edi
push edi
push edi
push edi
push 0x50b008c4
push edi
push r--data
push edi
call esi
mov esi [ ShowWindow@IAT ]
push edi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push edi
push [ rw-data ]
call esi
pop edi
pop esi
retn
sub_403a58
push ebp
mov ebp esp
sub esp 0x38
push esi
push edi
push 0xf
call [ GetSysColorBrush@IAT ]
push 0x7f00
push 0x0
mov edi eax
call [ LoadCursorW@IAT ]
mov esi [ LoadIconW@IAT ]
push 0x63
push [ rw-data ]
mov [ ebp - 0x4 ] eax
call esi
push 0xa4
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa2
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
push 0x4
push ecx
push ecx
call sub_4048fe
add esp 0xc
jmp r-xdata
push 0x0
push 0x10
push 0x10
push 0x1
push 0x63
push [ rw-data ]
call [ LoadImageW@IAT ]
and [ ebp - 0x28 ] 0x0
mov ecx eax
mov eax [ rw-data ]
and [ ebp - 0x24 ] 0x0
and [ ebp - 0x10 ] 0x0
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov [ rw-data ] ecx
mov [ ebp - 0x34 ] 0x30
mov [ ebp - 0x30 ] 0x23
mov [ ebp - 0x14 ] edi
mov [ ebp - 0xc ] r--data
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x2c ] sub_403633
call [ RegisterClassExW@IAT ]
push [ rw-data ]
mov [ rw-data ] ax
push [ rw-data ]
push ecx
call sub_403041
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_403b4c
push ebp
mov ebp esp
mov eax 0x2002c
call sub_431ac0
push esi
push edi
lea ecx [ ebp - 0x2c ]
call sub_4077c7
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x6 ] al
mov [ ebp - 0x5 ] al
lea eax [ ebp - 0x1002c ]
push eax
push 0x7fff
call [ GetCurrentDirectoryW@IAT ]
lea eax [ ebp - 0x7 ]
push eax
push [ ebp + 0x8 ]
call sub_403778
call [ IsDebuggerPresent@IAT ]
test eax eax
jne r-xdata
push 0x10
push r--data
push r--data
xor eax eax
push eax
call [ MessageBoxA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x2c ]
call sub_405a64
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
or [ rw-data ] 0xffffffff
jmp r-xdata
xor edi edi
mov esi rw-data
inc edi
cmp eax edi
je r-xdata
lea eax [ ebp - 0x1002c ]
push eax
call [ SetCurrentDirectoryW@IAT ]
push 0xffffffff
push [ rw-data ]
mov ecx esi
push edi
call sub_407373
mov al [ rw-data ]
mov [ rw-data ] al
jmp r-xdata
lea eax [ ebp - 0x6 ]
push eax
push ecx
push rw-data
push rw-data
mov ecx esi
call sub_4073e5
test al al
je r-xdata
push [ rw-data ]
push rw-data
call sub_410a8d
test eax eax
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov al [ rw-data ]
mov [ rw-data ] al
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x2002c ]
push eax
push 0x7fff
push [ rw-data ]
call [ GetFullPathNameW@IAT ]
push [ ebp - 0xc ]
mov ecx rw-data
call sub_407d2c
mov al [ ebp - 0x6 ]
mov [ ebp - 0xc ] eax
mov ecx esi
call sub_40743b
lea eax [ ebp - 0x1002c ]
push eax
call [ SetCurrentDirectoryW@IAT ]
mov [ rw-data ] edi
jmp r-xdata
cmp [ ebp - 0x5 ] 0x1
je r-xdata
call sub_464a08
test al al
jne r-xdata
call sub_403a58
call sub_4039e7
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x7 ] al
jne r-xdata
push edi
mov ecx rw-data
call sub_410b30
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx rw-data
call sub_4043db
lea ecx [ ebp - 0x2c ]
call sub_404864
push r--data
lea ecx [ ebp - 0x1c ]
call sub_407f41
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x1c ]
test al al
je r-xdata
mov ecx esi
call sub_40743b
mov ecx rw-data
call sub_4044cb
push [ ebp + 0x8 ]
call sub_407e0b
push edi
mov edi r--data
push edi
call sub_407e0b
push rw-data
lea ecx [ ebp - 0x1c ]
call sub_407c8e
push edi
lea ecx [ ebp - 0x1c ]
call sub_407e0b
push 0x1
jmp r-xdata
lea eax [ ebp - 0x1002c ]
push eax
push [ ebp - 0x1c ]
push [ ebp - 0x2c ]
push r--data
call [ GetForegroundWindow@IAT ]
push eax
call [ ShellExecuteW@IAT ]
lea ecx [ ebp - 0x1c ]
call sub_405a64
jmp r-xdata
sub_403ca8
mov ecx rw-data
call sub_4077c7
mov ecx rw-data
call sub_4077c7
mov ecx rw-data
call sub_4077c7
xor eax eax
mov [ rw-data ] 0x4
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] eax
mov eax rw-data
mov [ rw-data ] 0x1
retn
sub_403d43
push ebp
mov ebp esp
mov eax 0x2030
call sub_431ac0
push ebx
push esi
mov esi ecx
push edi
lea eax [ esi + 0x14 ]
mov ecx eax
mov [ ebp - 0xc ] eax
call sub_403f20
mov eax [ ebp + 0x8 ]
and [ esi ] 0x0
mov [ esi + 0x24 ] 0x0
cmp [ eax ] 0x21
je r-xdata
add eax 0x2
mov [ esi + 0x24 ] 0x1
jmp r-xdata
lea ecx [ esi + 0x4 ]
push eax
mov [ ebp + 0x8 ] ecx
call sub_407d2c
xor esi esi
xor eax eax
xor edi edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0x8 ]
xor bl bl
mov [ ebp - 0x10 ] eax
xor bh bh
inc edi
jmp r-xdata
push 0x9
pop ecx
cmp ax cx
je r-xdata
push edi
mov ecx esi
call sub_407b52
push 0x20
pop ecx
movzx eax [ eax ]
cmp ax cx
je r-xdata
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
cmp esi 0x1000
jge r-xdata
test bh bh
jne r-xdata
test bl bl
jne r-xdata
push 0x20
pop ecx
cmp ax cx
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp - 0x10 ]
lea ecx [ esi - 0x1 ]
jmp r-xdata
xor eax eax
lea ecx [ ebp - 0x20 ]
mov [ ebp + esi * 2 - 0x202c ] ax
lea eax [ ebp - 0x202c ]
push eax
call sub_407f41
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x20 ]
push eax
call sub_403f84
lea ecx [ ebp - 0x20 ]
call sub_405a64
cmp bl 0x1
je r-xdata
push 0x9
pop ecx
cmp ax cx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
jmp r-xdata
cmp ecx edx
jge r-xdata
mov [ ebp + esi * 2 - 0x202c ] ax
inc esi
jmp r-xdata
xor eax eax
lea ecx [ ebp - 0x20 ]
mov [ ebp + esi * 2 - 0x202c ] ax
lea eax [ ebp - 0x202c ]
push eax
call sub_407f41
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x20 ]
push eax
call sub_403f84
lea ecx [ ebp - 0x20 ]
call sub_405a64
xor esi esi
xor bh bh
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0x8 ]
push 0x22
pop ecx
cmp ax cx
je r-xdata
mov ax [ ebp + ecx * 2 - 0x202c ]
mov [ ebp + ecx * 2 - 0x202a ] ax
dec ecx
push 0x22
pop eax
inc esi
mov [ ebp + edx * 2 - 0x202c ] ax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push edi
call sub_407b52
inc edi
movzx eax [ eax ]
test ax ax
je r-xdata
inc edi
jmp r-xdata
push 0x9
pop ecx
cmp ax cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push edi
call sub_407b52
push 0x22
pop ecx
cmp [ eax ] cx
je r-xdata
push edi
mov ecx esi
call sub_407b52
push 0x20
pop ecx
movzx eax [ eax ]
cmp ax cx
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov bh 0x1
mov [ ebp + esi * 2 - 0x202c ] cx
inc esi
jmp r-xdata
mov bl 0x1
xor bl bl
test bl bl
je r-xdata
inc edi
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
sub_403ee2
push ebp
mov ebp esp
mov edx [ ecx ]
cmp edx [ ecx + 0x1c ]
jge r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_407d2c
xor al al
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
mov eax [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax + edx * 4 ]
call sub_4081a7
mov al 0x1
pop ebp
retn 0x4
sub_403f20
push ebx
mov ebx ecx
push edi
xor edi edi
cmp [ ebx + 0x8 ] edi
jbe r-xdata
mov [ ebx + 0x8 ] edi
jmp r-xdata
push esi
lea esp [ esp ]
pop edi
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov [ eax + edi * 4 ] 0x0
inc edi
cmp edi [ ebx + 0x8 ]
jb r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov esi [ ebx + 0x4 ]
mov esi [ esi + edi * 4 ]
test esi esi
je r-xdata
mov [ ebx + 0x8 ] 0x0
pop esi
push [ esi ]
call j_sub_422ed5#3
push [ esi + 0xc ]
call j_sub_422ed5#3
add esp 0x8
jmp r-xdata
push esi
call j_sub_422ed5#3
add esp 0x4
sub_403f84
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
jne r-xdata
push 0x10
call sub_420f36
mov edx eax
pop ecx
test edx edx
je r-xdata
lea ecx [ eax + eax ]
push 0x8
pop eax
cmp ecx eax
jae r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
mov eax ecx
jmp r-xdata
push edi
xor ecx ecx
mov [ esi + 0xc ] eax
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
cmp [ esi + 0x4 ] 0x0
mov edi eax
pop ecx
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edx
inc [ esi + 0x8 ]
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] edi
pop edi
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_420fc0
push [ esi + 0x4 ]
call j_sub_422ed5#3
add esp 0x10
jmp r-xdata
sub_40403d
cmp [ rw-data ] 0x0
je r-xdata
retn
push esi
cmp [ rw-data ] 0x0
jne r-xdata
push ecx
mov ecx esi
call sub_404665
mov eax [ rw-data ]
mov ecx rw-data
mov esi [ eax ]
call sub_40467d
test esi esi
je r-xdata
pop esi
sub_40406f
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0x14
mov ebx ecx
call sub_420f36
mov edi eax
pop ecx
test edi edi
je r-xdata
xor edi edi
jmp r-xdata
lea ecx [ edi + 0x4 ]
call sub_4077c7
mov esi [ ebp + 0x8 ]
lea ecx [ edi + 0x4 ]
mov eax esi
mov [ ebp - 0x4 ] edi
shl eax 0x4
add eax 0x184
add eax ebx
push eax
call sub_4081a7
lea eax [ ebp - 0x4 ]
mov [ edi ] esi
push eax
lea ecx [ ebx + 0x8c ]
call sub_40469d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4040c7
push esi
mov esi rw-data
push ecx
call sub_467755
and [ esi ] 0x0
jmp r-xdata
add esi 0x4
cmp esi rw-data
jl r-xdata
mov ecx [ esi ]
test ecx ecx
jne r-xdata
push rw-data
push rw-data
call sub_404213
push rw-data
push rw-data
call sub_404213
pop esi
jmp sub_40403d
sub_40410d
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4cc
cmp [ rw-data ] 0x0
push esi
mov esi ecx
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push 0x104
lea ecx [ esp + 0xc ]
call sub_407b76
cmp [ rw-data ] 0x1
je r-xdata
push 0x7f
lea eax [ esp + 0x1c ]
push eax
push 0x65
push [ rw-data ]
call [ LoadStringW@IAT ]
jmp r-xdata
xor eax eax
mov [ esp + 0x18 ] ax
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0xc ]
call sub_407d2c
cmp [ rw-data ] 0x0
lea ecx [ esp + 0x8 ]
jne r-xdata
push rw-data
call sub_407c8e
mov esi [ rw-data ]
push esi
call sub_407143
test eax eax
je r-xdata
cmp [ esi + 0x60 ] 0x0
jne r-xdata
push 0x3b4
lea eax [ esp + 0x120 ]
push 0x0
push eax
call sub_422f60
mov eax [ rw-data ]
lea ecx [ esp + 0x24 ]
mov edx [ esp + 0x14 ]
add esp 0xc
xor esi esi
mov [ esp + 0x118 ] 0x3a8
inc esi
mov [ esp + 0x11c ] eax
mov [ esp + 0x120 ] esi
push 0x80
mov [ esp + 0x128 ] 0x4
call sub_40463e
pop ecx
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x134 ]
push eax
call sub_422f3c
pop ecx
pop ecx
lea eax [ esp + 0x118 ]
push eax
push esi
call [ Shell_NotifyIconW@IAT ]
lea ecx [ esp + 0x8 ]
call sub_405a64
push r--data
lea ecx [ esp + 0xc ]
call sub_407e0b
push esi
call sub_407143
push eax
lea ecx [ esp + 0xc ]
call sub_407e0b
jmp r-xdata
lea eax [ esi + 0x5c ]
push eax
call sub_4081a7
jmp r-xdata
push rw-data
call sub_407c8e
sub_404213
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x0
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
and [ edi ] 0x0
pop edi
mov [ esi ] 0x0
pop esi
pop ebp
retn 0x8
push [ edi ]
call [ DestroyIcon@IAT ]
jmp r-xdata
sub_404233
or [ rw-data ] 0xffffffff
xor eax eax
or [ rw-data ] 0xffffffff
mov ecx rw-data
push esi
push edi
push r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x1010101
mov [ rw-data ] ax
mov [ rw-data ] 0x1
mov [ rw-data ] 0x9
mov [ rw-data ] eax
call sub_407f41
push r--data
mov ecx rw-data
call sub_407f41
mov ecx rw-data
call sub_4077c7
mov ecx rw-data
call sub_4077c7
mov ecx rw-data
call sub_4077c7
mov eax [ rw-data ]
mov esi rw-data
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
push 0xe
pop edi
inc [ eax ]
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
inc [ eax ]
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] al
mov ecx esi
call sub_4077c7
add esi 0x10
dec edi
jns r-xdata
or [ rw-data ] 0xffffffff
xor eax eax
pop edi
mov [ rw-data ] ax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax rw-data
pop esi
retn
sub_40436a
push esi
push edi
call sub_4040c7
push 0xe
mov esi rw-data
pop edi
sub esi 0x10
mov ecx esi
call sub_405a64
dec edi
jns r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi [ eax + 0x4 ]
push eax
call j_sub_422ed5#3
pop ecx
mov eax esi
test esi esi
jne r-xdata
mov ecx rw-data
call sub_405a64
mov ecx rw-data
call sub_405a64
mov ecx rw-data
call sub_405a64
mov ecx rw-data
call sub_405a64
mov ecx rw-data
call sub_405a64
mov ecx rw-data
call sub_405a64
pop edi
mov ecx rw-data
pop esi
jmp sub_405a64
jmp r-xdata
sub_4043db
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3bc
push ebx
push esi
push edi
push 0x3b4
xor ebx ebx
mov [ esp + 0x14 ] 0x3a8
lea eax [ esp + 0x18 ]
mov esi ecx
push ebx
push eax
call sub_422f60
add esp 0xc
cmp [ esi + 0x198 ] ebx
jne r-xdata
cmp [ esi + 0x1a4 ] ebx
jne r-xdata
mov eax [ rw-data ]
mov [ esi + 0x198 ] eax
cmp [ esi + 0x1b0 ] ebx
jne r-xdata
mov eax [ rw-data ]
mov [ esi + 0x1a4 ] eax
mov [ esi + 0x1a8 ] eax
lea ebx [ esi + 0x1a0 ]
push ebx
lea edi [ esi + 0x19c ]
push edi
call sub_404213
mov eax [ rw-data ]
xor ecx ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x1c ] 0x3
mov [ esp + 0x20 ] 0x401
mov [ esp + 0x24 ] ecx
cmp [ esi + 0x40 ] ecx
jne r-xdata
mov eax [ rw-data ]
mov [ esi + 0x1b0 ] eax
push ebx
push [ esi + 0x3c ]
mov ecx esi
push [ esi + 0x10 ]
call sub_46302e
xor ecx ecx
mov [ esp + 0x24 ] eax
mov [ edi ] eax
cmp [ esi + 0x40 ] ecx
je r-xdata
mov eax [ esi + 0x198 ]
mov [ esp + 0x24 ] eax
mov [ edi ] eax
cmp eax ecx
jne r-xdata
push 0x1
call [ Shell_NotifyIconW@IAT ]
jmp r-xdata
push ecx
call [ Shell_NotifyIconW@IAT ]
mov [ rw-data ] 0x1
cmp [ rw-data ] 0x1
lea eax [ esp + 0x10 ]
push eax
je r-xdata
jmp r-xdata
mov ecx esi
call sub_40410d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4044cb
push ebp
mov ebp esp
sub esp 0x3b8
cmp [ rw-data ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
xor eax eax
push 0x3b4
push eax
mov [ rw-data ] al
mov [ ecx + 0x19c ] eax
lea eax [ ebp - 0x3b4 ]
push eax
call sub_422f60
mov eax [ rw-data ]
add esp 0xc
mov [ ebp - 0x3b4 ] eax
lea eax [ ebp - 0x3b8 ]
mov [ ebp - 0x3b8 ] 0x3a8
mov [ ebp - 0x3b0 ] 0x1
push eax
push 0x2
call [ Shell_NotifyIconW@IAT ]
sub_404531
push ebp
mov ebp esp
sub esp 0x3c0
dec [ ebp + 0xc ]
push ebx
push esi
push edi
mov esi ecx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push 0x3b4
lea eax [ ebp - 0x3b8 ]
mov [ ebp - 0x3bc ] 0x3a8
push 0x0
push eax
call sub_422f60
add esp 0xc
mov ecx esi
call sub_40410d
mov edi [ ebp + 0x8 ]
xor ebx ebx
inc ebx
cmp [ rw-data ] 0x0
je r-xdata
push ebx
push edi
call [ KillTimer@IAT ]
push 0x0
push 0x2ee
push ebx
push edi
call [ SetTimer@IAT ]
cmp [ rw-data ] 0x0
mov [ ebp - 0x3b8 ] edi
mov [ ebp - 0x3b4 ] ebx
mov [ ebp - 0x3b0 ] 0x2
jne r-xdata
cmp [ esi + 0x194 ] 0x1
je r-xdata
cmp [ esi + 0x9 ] 0x0
jne r-xdata
mov [ esi + 0x194 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1a8 ]
mov [ esi + 0x194 ] bl
jmp r-xdata
cmp [ esi + 0x195 ] 0x0
je r-xdata
cmp [ esi + 0x194 ] bl
je r-xdata
mov eax [ esi + 0x19c ]
mov [ ebp - 0x3a8 ] eax
lea eax [ ebp - 0x3bc ]
push eax
push ebx
call [ Shell_NotifyIconW@IAT ]
jmp r-xdata
mov eax [ esi + 0x1b0 ]
mov [ esi + 0x195 ] bl
jmp r-xdata
mov [ esi + 0x195 ] 0x0
sub_4045df
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push esi
push edi
push 0x2c
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x3c ] 0x30
push 0x0
push eax
mov edi ecx
call sub_422f60
mov eax [ ebp + 0x14 ]
add esp 0xc
mov ecx [ edi + 0x9d0 ]
xor esi esi
mov [ ebp - 0x4 ] ecx
push 0x8
pop ebx
push 0x1
pop edx
sub eax 0x200
jne r-xdata
dec eax
je r-xdata
push 0x40
pop esi
push 0xfffffff5
mov esi edx
push 0xfffffff9
jmp r-xdata
dec eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx edi
call sub_40406f
push 0x2
pop esi
push 0xfffffff8
jmp r-xdata
dec eax
je r-xdata
cmp [ edi + 0x4 ] 0x0
mov ebx [ GetMenuItemCount@IAT ]
je r-xdata
cmp [ edi + 0xa ] 0x0
push 0x4
pop esi
je r-xdata
dec eax
je r-xdata
mov esi [ DeleteMenu@IAT ]
push 0x0
push 0x5
push [ edi ]
call esi
push 0x0
push 0x4
push [ edi ]
call esi
push 0x0
push 0x6
push [ edi ]
call esi
push 0x0
push 0x3
push [ edi ]
call esi
mov [ edi + 0x8 ] 0x0
cmp [ edi + 0x8 ] 0x0
jne r-xdata
push 0xfffffff3
jmp r-xdata
push 0x7
mov [ ebp - 0x30 ] ebx
pop ebx
mov [ ebp - 0x38 ] edx
cmp ecx ebx
jl r-xdata
mov esi ebx
push 0xfffffff7
jmp r-xdata
dec eax
je r-xdata
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
push [ edi ]
call ebx
test eax eax
jle r-xdata
push [ edi ]
call ebx
or esi 0xffffffff
test eax eax
jle r-xdata
lea eax [ edi + 0x1d0 ]
mov [ ebp + 0x14 ] eax
push 0x10
pop esi
push 0xfffffff6
jmp r-xdata
dec eax
jne r-xdata
cmp [ edi + 0x6 ] 0x0
je r-xdata
mov [ edi + 0x6 ] bl
jmp r-xdata
push 0x0
push esi
push esi
push [ edi + 0x7c ]
mov ecx edi
mov [ edi + 0x9d0 ] 0x3
push 0x0
call sub_462502
push 0x0
push esi
push esi
push r--data
push 0x0
mov ecx edi
mov [ edi + 0x9d0 ] 0x5
call sub_462502
push 0x0
push esi
push esi
push [ edi + 0x6c ]
mov ecx edi
mov [ edi + 0x9d0 ] 0x2
push 0x0
call sub_462502
mov eax [ ebp - 0x4 ]
mov [ edi + 0x9d0 ] eax
mov [ edi + 0x8 ] 0x1
jmp r-xdata
push 0x0
push esi
push esi
push r--data
push 0x0
mov ecx edi
mov [ edi + 0x9d0 ] 0x4
call sub_462502
inc ebx
add eax 0x4
mov [ ebp + 0x14 ] eax
cmp ebx [ edi + 0x9d0 ]
jle r-xdata
lea eax [ ebp - 0x3c ]
push eax
push 0x0
push ebx
push [ ecx ]
call [ GetMenuItemInfoW@IAT ]
test eax eax
mov eax [ ebp + 0x14 ]
je r-xdata
test [ edi + 0xc ] esi
jne r-xdata
push 0x20
pop esi
push 0xfffffff2
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetCursorPos@IAT ]
push [ ebp + 0x8 ]
call [ SetForegroundWindow@IAT ]
push ebx
push [ ebp + 0x8 ]
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push ebx
push [ edi ]
call [ TrackPopupMenuEx@IAT ]
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
call [ PostMessageW@IAT ]
mov ecx edi
call sub_40410d
jmp r-xdata
lea eax [ ebp - 0x3c ]
mov [ rw-data ] 0x1
push eax
push ebx
push 0x4
push [ edi ]
mov [ ebp - 0x38 ] 0x1
mov [ ebp - 0x30 ] 0x8
call [ SetMenuItemInfoW@IAT ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
jmp r-xdata
test [ ebp - 0x30 ] 0x1000
je r-xdata
mov eax [ eax ]
mov eax [ eax ]
cmp eax [ edi ]
je r-xdata
push ebx
mov ecx edi
call sub_4624ac
mov eax [ ebp + 0x14 ]
sub_40463e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn
lea eax [ esi - 0x1 ]
push eax
push edx
push edi
call sub_42422e
add esp 0xc
xor eax eax
mov [ edi + esi * 2 - 0x2 ] ax
sub_40467d
push esi
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
push eax
mov esi [ eax + 0x4 ]
call j_sub_422ed5#3
dec [ edi ]
mov [ edi + 0x4 ] esi
pop ecx
test esi esi
jne r-xdata
pop edi
pop esi
retn
and [ edi + 0x8 ] esi
sub_40469d
push ebp
mov ebp esp
push esi
push 0x8
mov esi ecx
call sub_420f36
mov edx [ ebp + 0x8 ]
pop ecx
mov ecx eax
mov edx [ edx ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] edx
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ esi + 0x4 ] ecx
inc [ esi ]
mov [ esi + 0x8 ] ecx
pop esi
pop ebp
retn 0x4
sub_4046d3
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
imul eax esi
push edi
mov edi [ ebp + 0x8 ]
add edi eax
jmp r-xdata
dec esi
jns r-xdata
sub edi [ ebp + 0xc ]
mov ecx edi
call [ ebp + 0x14 ]
pop edi
pop esi
pop ebp
retn 0x10
sub_4046f9
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
mov esi ecx
mov [ ebp - 0x8 ] edx
push edi
lea ecx [ ebp - 0x28 ]
call sub_4077c7
lea ecx [ ebp - 0x58 ]
call sub_4077c7
lea ecx [ ebp - 0x38 ]
call sub_4077c7
lea ecx [ ebp - 0x48 ]
call sub_4077c7
mov eax [ esi ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0xc ]
push r--data
mov [ ebp - 0xc ] eax
inc [ eax ]
call sub_407e2f
or ebx 0xffffffff
lea ecx [ ebp - 0x38 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_4081a7
lea ecx [ ebp - 0x18 ]
call sub_407eec
jmp r-xdata
lea esi [ eax + 0x1 ]
push ebx
push esi
lea eax [ ebp - 0x18 ]
push eax
call sub_4079ab
push ebx
push esi
lea ecx [ ebp - 0x18 ]
call sub_407e8c
push r--data
lea ecx [ ebp - 0x38 ]
call sub_407e2f
mov esi eax
cmp esi ebx
je r-xdata
mov ebx [ ebp - 0x14 ]
xor esi esi
cmp ebx 0x1
jbe r-xdata
push ebx
push esi
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_4079ab
push ebx
push esi
lea ecx [ ebp - 0x38 ]
call sub_407e8c
push 0xffffffff
push esi
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_4079ab
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
push esi
lea ecx [ ebp - 0x18 ]
call sub_407b20
push 0x5c
pop edi
cmp [ eax ] di
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx eax
call sub_4081a7
push 0x1
lea ecx [ ebp - 0x18 ]
call sub_407b20
cmp [ eax ] di
jne r-xdata
push 0x1
lea ecx [ ebp - 0x18 ]
call sub_407b52
cmp [ eax ] 0x3a
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
call sub_4081a7
push 0x2
pop edi
cmp ebx 0x3
jbe r-xdata
push 0x2
pop edi
push edi
push esi
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_4079ab
mov esi edi
lea eax [ ebp - 0x38 ]
push eax
call sub_4081a7
jmp r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_407d2c
mov esi edi
jmp r-xdata
push edi
lea ecx [ ebp - 0x18 ]
call sub_407b20
movzx esi [ eax ]
cmp esi 0x3f
jne r-xdata
lea eax [ ebp - 0x48 ]
push eax
call sub_4081a7
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405a64
lea ecx [ ebp - 0x48 ]
call sub_405a64
lea ecx [ ebp - 0x38 ]
call sub_405a64
lea ecx [ ebp - 0x58 ]
call sub_405a64
lea ecx [ ebp - 0x28 ]
call sub_405a64
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp esi ebx
jb r-xdata
cmp esi 0x2e
jne r-xdata
push 0x3
lea ecx [ ebp - 0x18 ]
call sub_407b20
push 0x5c
pop ecx
cmp [ eax ] cx
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x3
lea ecx [ ebp - 0x18 ]
call sub_407b20
push 0x5c
pop ecx
cmp [ eax ] cx
je r-xdata
push 0x4
pop esi
cmp ebx 0x7
jbe r-xdata
push esi
lea ecx [ ebp - 0x18 ]
call sub_407b52
push 0x5c
pop ecx
cmp [ eax ] cx
jne r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_407d2c
push 0x4
pop esi
push r--data
lea ecx [ ebp - 0x28 ]
call sub_407d2c
jmp r-xdata
push esi
lea ecx [ ebp - 0x18 ]
call sub_407b20
cmp [ eax ] 0x55
jne r-xdata
test edi edi
je r-xdata
dec edi
xor edi edi
inc edi
jmp r-xdata
push 0x5
lea ecx [ ebp - 0x18 ]
call sub_407b20
cmp [ eax ] 0x4e
jne r-xdata
push esi
lea ecx [ ebp - 0x18 ]
call sub_407b52
lea ecx [ ebp - 0x28 ]
movzx eax [ eax ]
push eax
call sub_407a84
inc esi
push 0x6
lea ecx [ ebp - 0x18 ]
call sub_407b20
cmp [ eax ] 0x43
jne r-xdata
push 0x7
lea ecx [ ebp - 0x18 ]
call sub_407b20
push 0x5c
pop ecx
cmp [ eax ] cx
jne r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_407d2c
push 0x8
pop esi
jmp r-xdata
sub_404864
push ebp
mov ebp esp
mov eax 0x10014
call sub_431ac0
push esi
push 0x7fff
lea eax [ ebp - 0x10010 ]
mov esi ecx
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
lea eax [ ebp - 0x10010 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_407f41
mov edx esi
lea ecx [ ebp - 0x10 ]
call sub_4048ae
lea ecx [ ebp - 0x10 ]
call sub_405a64
pop esi
mov esp ebp
pop ebp
retn
sub_4048ae
push ebp
mov ebp esp
mov eax 0x10000
call sub_431ac0
push esi
push 0x0
lea eax [ ebp - 0x10000 ]
mov esi edx
push eax
push 0x7fff
push [ ecx ]
call [ GetFullPathNameW@IAT ]
mov ecx esi
test eax eax
je r-xdata
call sub_407eec
jmp r-xdata
lea eax [ ebp - 0x10000 ]
push eax
call sub_407d2c
push r--data
mov ecx esi
call sub_407886
pop esi
mov esp ebp
pop ebp
retn
sub_4048fe
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
push esi
push edi
mov edi [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
and [ rw-data ] 0x0
push 0x10
pop esi
push 0x63
push sub_463f8e
push 0xe
push 0x0
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] eax
call [ EnumResourceNamesW@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x0
push 0x10
pop esi
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
jmp r-xdata
push esi
push esi
push 0x1
push 0x63
push edi
call [ LoadImageW@IAT ]
sub_40492e
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ rw-data ]
sub esp 0x20
cmp [ eax + 0x1d ] 0x0
push esi
push edi
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x8 ]
xor edi edi
mov [ rw-data ] eax
xor esi esi
mov [ rw-data ] edi
inc esi
mov [ rw-data ] edi
mov [ esp + 0x8 ] edi
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] esi
call sub_409a20
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] 0x6
mov [ esp + 0x8 ] eax
call [ IsThemeActive@IAT ]
push sub_457f9c
mov [ rw-data ] eax
call sub_4234ec
pop ecx
push esi
call sub_423554
pop ecx
mov ecx [ rw-data ]
call sub_404a5b
push [ ebp + 0x10 ]
call sub_403b4c
mov eax [ rw-data ]
push 0x2
push [ eax + 0x4 ]
push edi
push 0x2001
call [ SystemParametersInfoW@IAT ]
mov esi [ rw-data ]
lea ecx [ esp + 0x18 ]
call sub_409a20
lea ecx [ esp + 0x8 ]
call sub_409a20
mov eax esi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_404a10
push esi
push 0xc
call sub_420f36
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
jmp r-xdata
call sub_404a94
mov [ rw-data ] esi
mov eax rw-data
pop esi
retn
sub_404a35
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetForegroundWindow@IAT ]
mov ebx [ ebp + 0x8 ]
mov esi eax
cmp ebx esi
jne r-xdata
push edi
xor edi edi
test esi esi
jne r-xdata
xor eax eax
inc eax
push ebx
call [ IsIconic@IAT ]
test eax eax
je r-xdata
push edi
push r--data
call [ FindWindowW@IAT ]
mov esi eax
push ebx
mov [ ebp - 0xc ] edi
call [ SetForegroundWindow@IAT ]
test eax eax
jne r-xdata
push 0x9
push ebx
call [ ShowWindow@IAT ]
push 0x2
pop ebx
push edi
push esi
mov esi [ GetWindowThreadProcessId@IAT ]
call esi
mov edi eax
mov [ ebp - 0x8 ] edi
call [ GetCurrentThreadId@IAT ]
push 0x0
push ebx
mov [ ebp + 0x8 ] eax
call esi
mov esi [ AttachThreadInput@IAT ]
push 0x1
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
call esi
push 0x1
push edi
push [ ebp + 0x8 ]
call esi
push 0x1
push [ ebp - 0x4 ]
push edi
call esi
push ebx
call [ SetForegroundWindow@IAT ]
test eax eax
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x3
mov edi [ MapVirtualKeyW@IAT ]
push eax
push eax
push eax
push 0x12
call edi
mov esi [ keybd_event@IAT ]
push eax
push 0x12
call esi
push 0x0
push 0x2
push 0x0
push 0x12
call edi
push eax
push 0x12
call esi
xor eax eax
push eax
push eax
push eax
push 0x12
call edi
push eax
push 0x12
call esi
push 0x0
push 0x2
push 0x0
push 0x12
call edi
push eax
push 0x12
call esi
push ebx
call [ SetForegroundWindow@IAT ]
mov esi [ AttachThreadInput@IAT ]
mov edi [ ebp - 0x8 ]
test eax eax
je r-xdata
push 0x0
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call esi
push 0x0
push edi
push [ ebp + 0x8 ]
call esi
push 0x0
push [ ebp - 0x4 ]
push edi
call esi
jmp r-xdata
mov ebx [ ebp - 0xc ]
push 0x4
jmp r-xdata
mov eax ebx
pop edi
jmp r-xdata
pop ebx
jmp r-xdata
sub_404a5b
push ebp
mov ebp esp
push ecx
push ebx
push edi
xor ebx ebx
lea eax [ ebp - 0x4 ]
push ebx
push eax
push ebx
push 0x2000
mov edi ecx
mov [ ebp - 0x4 ] ebx
call [ SystemParametersInfoW@IAT ]
mov eax [ ebp - 0x4 ]
push 0x2
push ebx
push ebx
push 0x2001
mov [ edi + 0x4 ] eax
call [ SystemParametersInfoW@IAT ]
pop edi
pop ebx
mov esp ebp
pop ebp
retn
sub_404ad2
push esi
push 0x3c
call sub_420f36
mov esi eax
pop ecx
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
call sub_404a94
push ecx
mov ecx esi
call sub_404afe
mov [ rw-data ] eax
mov eax rw-data
pop esi
retn
sub_404afe
push ebp
mov ebp esp
sub esp 0x154
push ebx
push esi
mov esi ecx
push edi
lea edi [ esi + 0xc ]
mov ecx edi
call sub_4077c7
lea eax [ ebp - 0x154 ]
mov [ esi + 0x38 ] 0x0
push eax
mov [ ebp - 0x154 ] 0x11c
call [ GetVersionExW@IAT ]
mov eax [ ebp - 0x150 ]
mov ecx edi
mov [ esi ] eax
mov eax [ ebp - 0x14c ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x148 ]
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x140 ]
push eax
call sub_407d2c
xor eax eax
cmp [ edi + 0x4 ] eax
ja r-xdata
mov ecx [ edi ]
jmp r-xdata
or eax 0xffffffff
movzx edx [ ecx ]
xor edi edi
push 0x20
mov [ ebp - 0x14 ] edx
xor ebx ebx
pop edx
push eax
jmp r-xdata
push eax
movzx edx [ edi * 2 + r--data ]
inc edi
test dx dx
jne r-xdata
inc ebx
push 0x0
call sub_407e8c
push r--data
mov ecx edi
call sub_407886
mov eax [ esi ]
xor ecx ecx
mov [ esi + 0x33 ] cx
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ecx
mov [ esi + 0x24 ] ecx
mov [ esi + 0x28 ] ecx
mov [ esi + 0x2c ] ecx
mov [ esi + 0x30 ] cx
mov [ esi + 0x32 ] cl
push 0x1
pop ebx
sub eax 0x5
je r-xdata
cmp [ esi + 0x4 ] ebx
jne r-xdata
dec eax
jne r-xdata
cmp [ ebp - 0x14 ] dx
jne r-xdata
lea edi [ esi + 0xc ]
test ebx ebx
je r-xdata
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov [ esi + 0x1d ] bl
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ esi + 0x1d ] bl
mov [ esi + 0x1f ] bl
test eax eax
je r-xdata
mov ecx edi
cmp eax 0xffffffff
jne r-xdata
inc eax
add ecx 0x2
cmp eax [ edi + 0x4 ]
jb r-xdata
movzx eax [ ebp - 0x3c ]
shr eax 0x6
and eax ebx
mov [ esi + 0x38 ] al
jmp r-xdata
mov [ esi + 0x1d ] bl
mov [ esi + 0x1f ] bl
cmp [ ebp - 0x3a ] bl
je r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ecx
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ IsWow64Process@IAT ]
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ esi + 0x1d ] bl
mov [ esi + 0x1f ] bl
mov [ esi + 0x2b ] bl
mov [ esi + 0x29 ] bl
mov [ esi + 0x27 ] bl
mov [ esi + 0x25 ] bl
mov [ esi + 0x21 ] bl
mov [ esi + 0x2d ] bl
mov [ esi + 0x2f ] bl
cmp [ esi + 0x4 ] ecx
jne r-xdata
mov [ esi + 0x21 ] bl
cmp [ ebp - 0x3a ] bl
jne r-xdata
cmp eax ebx
je r-xdata
jmp r-xdata
mov [ esi + 0x1c ] bl
mov [ esi + 0x1e ] bl
jmp r-xdata
and [ ebp - 0x38 ] 0x0
lea edi [ ebp - 0x34 ]
push 0x8
xor eax eax
pop ecx
[ edi ]
cmp [ esi + 0x34 ] al
je r-xdata
mov [ esi + 0x34 ] bl
mov [ esi + 0x31 ] bl
cmp [ ebp - 0x3a ] bl
jne r-xdata
mov [ esi + 0x23 ] bl
mov [ esi + 0x22 ] bl
jmp r-xdata
mov [ esi + 0x20 ] bl
jmp r-xdata
mov [ esi + 0x21 ] bl
mov [ esi + 0x23 ] bl
mov [ esi + 0x25 ] bl
cmp [ ebp - 0x3a ] bl
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x38 ]
push eax
call [ GetSystemInfo@IAT ]
jmp r-xdata
and [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x10 ]
and [ ebp - 0x8 ] eax
call sub_404c95
test al al
je r-xdata
mov [ esi + 0x33 ] bl
mov [ esi + 0x32 ] bl
jmp r-xdata
mov [ esi + 0x30 ] bl
jmp r-xdata
mov [ esi + 0x27 ] bl
mov [ esi + 0x26 ] bl
jmp r-xdata
mov [ esi + 0x24 ] bl
jmp r-xdata
cmp eax 0x3
jne r-xdata
mov [ esi + 0x27 ] bl
mov [ esi + 0x25 ] bl
mov [ esi + 0x21 ] bl
mov [ esi + 0x29 ] bl
cmp [ ebp - 0x3a ] bl
jne r-xdata
mov ax [ ebp - 0x38 ]
mov [ esi + 0x36 ] ax
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x38 ]
push eax
call [ GetSystemInfo@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_404c95
test al al
mov eax [ ebp - 0x8 ]
je r-xdata
mov [ esi + 0x2b ] bl
mov [ esi + 0x29 ] bl
mov [ esi + 0x27 ] bl
mov [ esi + 0x25 ] bl
mov [ esi + 0x21 ] bl
mov [ esi + 0x2d ] bl
cmp [ ebp - 0x3a ] bl
jne r-xdata
mov [ esi + 0x2b ] bl
mov [ esi + 0x2a ] bl
jmp r-xdata
mov [ esi + 0x28 ] bl
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax sub_43b682
jmp r-xdata
lea ecx [ ebp - 0x38 ]
push ecx
call eax
mov [ esi + 0x2f ] bl
mov [ esi + 0x2e ] bl
jmp r-xdata
mov [ esi + 0x2c ] bl
jmp r-xdata
push [ ebp - 0x10 ]
call [ FreeLibrary@IAT ]
sub_404c95
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
retn
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_404cc8
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0xc ] 0x0
and [ ebp - 0x4 ] 0x0
push esi
mov esi ecx
lea ecx [ ebp - 0xc ]
call sub_404d94
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
pop esi
je r-xdata
lea ecx [ ebp - 0xc ]
call sub_404d94
test al al
mov eax [ ebp - 0x4 ]
je r-xdata
mov esp ebp
pop ebp
retn
push [ ebp - 0xc ]
call [ FreeLibrary@IAT ]
mov eax sub_43b682
jmp r-xdata
push [ esi ]
call eax
sub_404d13
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi ecx
xor eax eax
lea ecx [ ebp - 0xc ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] eax
mov [ esi ] eax
call sub_404d61
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea ecx [ ebp - 0xc ]
call sub_404d61
test al al
mov eax [ ebp - 0x4 ]
je r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
push [ ebp - 0xc ]
call [ FreeLibrary@IAT ]
mov eax sub_43b682
jmp r-xdata
push esi
call eax
sub_404d61
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
retn
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_404d94
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
retn
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_404dd0
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
push 0x10000
mov ebx ecx
call sub_420f36
add esp 0x4
lea ecx [ ebp - 0x14 ]
push eax
call sub_40538e
xor edx edx
movzx eax [ edx + r--data ]
mov [ ebp + edx - 0x28 ] al
movzx eax [ edx + r--data ]
mov [ ebp + edx - 0x20 ] al
inc edx
cmp edx 0x8
jl r-xdata
push 0x4
lea eax [ ebp - 0x18 ]
push rw-data
push eax
call sub_420fc0
add esp 0xc
cmp [ ebx + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
mov ecx ebx
je r-xdata
push [ ebx ]
mov ecx ebx
call sub_405027
mov esi eax
mov [ ebp + 0x8 ] eax
lea ebx [ ebx ]
call sub_4699c4
jmp r-xdata
call sub_404fe9
jmp r-xdata
mov ecx 0x18
jmp r-xdata
mov ecx 0x10000
push [ ebx ]
push ecx
push 0x1
push [ ebp - 0x14 ]
mov ecx ebx
call sub_40506b
mov [ ebp - 0x8 ] eax
cmp eax 0x18
jl r-xdata
mov esi 0x3
lea edi [ eax - 0x14 ]
xor edx edx
test edi edi
jle r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov esi [ ebp - 0x14 ]
add esi 0x2
push 0x1
add esi 0xffffffec
mov ecx ebx
push 0xffffffec
push [ ebx ]
add esi eax
mov [ ebp + 0x8 ] esi
call sub_405045
jmp r-xdata
mov cl [ ebp + eax - 0x28 ]
cmp cl [ esi + eax - 0x2 ]
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov cl [ ebp + eax - 0x27 ]
cmp cl [ esi + eax - 0x1 ]
je r-xdata
cmp eax 0x14
je r-xdata
mov cl [ ebp + eax - 0x26 ]
cmp cl [ esi + eax ]
je r-xdata
inc eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx ebx
add eax 0x14
push 0x0
add eax edx
push eax
push [ ebx ]
call sub_405045
push [ ebx ]
lea eax [ ebp - 0xc ]
mov ecx ebx
push 0x1
push 0x4
push eax
call sub_40506b
cmp [ ebp - 0xc ] 0x36304145
je r-xdata
inc edx
inc esi
cmp edx edi
jl r-xdata
mov cl [ ebp + eax - 0x25 ]
cmp cl [ esi + eax + 0x1 ]
jne r-xdata
add eax 0x2
jmp r-xdata
xor esi esi
jmp r-xdata
mov esi 0x4
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
add eax 0x3
jmp r-xdata
mov cl [ ebp + eax - 0x24 ]
cmp cl [ esi + eax + 0x2 ]
je r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405371
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add eax 0x5
cmp eax 0x14
jl r-xdata
add eax 0x4
jmp r-xdata
jmp r-xdata
sub_404f3d
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
call sub_404d13
push r--data
push [ ebp + 0x8 ]
call sub_4253cb
mov [ esi ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx esi
call sub_404faa
lea ecx [ ebp - 0x4 ]
call sub_404cc8
xor eax eax
inc eax
jmp r-xdata
push 0x2
push 0x0
push [ ebp + 0x8 ]
call [ LoadLibraryExW@IAT ]
lea ecx [ ebp - 0x4 ]
mov [ esi + 0xc ] eax
call sub_404cc8
cmp [ ebp + 0xc ] 0x1
mov ecx esi
sete al
push eax
call sub_404dd0
mov edi eax
mov ecx esi
test edi edi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
push [ esi ]
lea eax [ ebp - 0x14 ]
push 0x10
push 0x1
push eax
call sub_40506b
push 0x99f2
push 0x10
lea eax [ ebp - 0x14 ]
push eax
call sub_4691b2
push [ esi ]
and [ esi + 0x8 ] 0x0
mov ecx esi
call sub_405027
mov [ esi + 0x4 ] eax
xor eax eax
jmp r-xdata
call sub_404faa
mov eax edi
sub_404faa
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
mov ecx [ esi + 0x10 ]
test ecx ecx
jne r-xdata
push [ esi ]
call sub_425516
pop ecx
mov [ esi ] ebx
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov [ esi + 0x10 ] ebx
jmp r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
push [ esi + 0xc ]
call [ FreeLibrary@IAT ]
mov [ esi + 0xc ] ebx
jmp r-xdata
mov [ esi + 0x14 ] bl
pop esi
pop ebx
retn
sub_404fe9
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ebx [ esi + 0x10 ]
push ebx
push 0x1
push 0x0
call [ CreateStreamOnHGlobal@IAT ]
test eax eax
js r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
push 0x0
push r--data
push 0xa
push [ esi + 0xc ]
call [ FindResourceExW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push edi
push [ esi + 0xc ]
call [ LoadResource@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
pop edi
push edi
push [ esi + 0xc ]
call [ SizeofResource@IAT ]
mov edi eax
test edi edi
je r-xdata
push [ ebp - 0x4 ]
call [ LockResource@IAT ]
test eax eax
je r-xdata
mov ecx [ ebx ]
push 0x0
push edi
push eax
mov edx [ ecx ]
push ecx
call [ edx + 0x10 ]
mov eax [ ebx ]
xor edx edx
push edx
push edx
push edx
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0x14 ]
mov [ esi + 0x14 ] 0x1
jmp r-xdata
sub_405027
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov eax [ ecx + 0x10 ]
lea edx [ ebp - 0x8 ]
push edx
push 0x1
push 0x0
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0x14 ]
mov eax [ ebp - 0x8 ]
jmp r-xdata
push [ ebp + 0x8 ]
call sub_425dd0
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_405045
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x10 ]
mov eax [ ebp + 0xc ]
push esi
push edi
mov esi [ ecx ]
lea edi [ ebp - 0x8 ]
push edi
push [ ebp + 0x10 ]
cdq
push edx
push eax
push ecx
call [ esi + 0x14 ]
mov eax [ ebp - 0x8 ]
pop edi
pop esi
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4259bd
add esp 0xc
mov esp ebp
pop ebp
retn 0xc
sub_40506b
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x10 ]
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
imul eax [ ebp + 0x10 ]
mov edx [ ecx ]
push eax
push [ ebp + 0x8 ]
push ecx
call [ edx + 0xc ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_425752
add esp 0x10
mov esp ebp
pop ebp
retn 0x10
sub_405097
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx ecx
push edi
mov edi [ ebp + 0x8 ]
push esi
push edi
call sub_40530a
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push esi
push edi
mov ecx ebx
call sub_405280
test eax eax
je r-xdata
push esi
push edi
call sub_405210
test eax eax
jne r-xdata
push esi
push edi
mov ecx ebx
call sub_405119
test eax eax
jne r-xdata
push esi
push edi
call sub_4050f5
test al al
jne r-xdata
xor eax eax
cmp [ ebx ] al
sete al
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
sub_4050f5
push ebp
mov ebp esp
xor ecx ecx
cmp [ ebp + 0xc ] ecx
jbe r-xdata
xor al al
mov edx [ ebp + 0x8 ]
mov al 0x1
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jb r-xdata
pop ebp
retn 0x8
mov al [ ecx + edx ]
inc ecx
test al al
je r-xdata
sub_405119
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push esi
mov esi [ ebp + 0xc ]
mov edx eax
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
push edi
mov edi eax
test esi esi
je r-xdata
xor ecx ecx
inc ecx
cmp esi ecx
jbe r-xdata
cmp [ edx + ebx ] al
je r-xdata
mov [ ebp + 0xc ] esi
fild [ ebp + 0xc ]
test esi esi
jns r-xdata
cmp [ ecx + ebx ] 0x0
je r-xdata
inc edi
jmp r-xdata
add edx 0x2
cmp edx esi
jb r-xdata
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fild [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fld [ r--data ]
fmul st1
fxch st1
fdiv st2
fild [ ebp - 0x8 ]
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fmulp st2
fxch st1
fdivrp st2
fild [ eax + 0x4 ]
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fld [ r--data ]
fdiv st1
fild [ eax + 0x8 ]
fstp [ ebp - 0x14 ]
fdivr [ ebp - 0x14 ]
fcom st2
fnstsw ax
test ah 0x41
jne r-xdata
fadd [ r--data ]
inc eax
jmp r-xdata
add ecx 0x2
cmp ecx esi
jb r-xdata
mov [ ebp - 0x4 ] edi
fcomp st3
fnstsw ax
fstp st2
test ah 0x41
jne r-xdata
fxch st3
fcom st1
fnstsw ax
test ah 0x41
je r-xdata
mov [ ebp - 0x8 ] eax
fstp st1
fstp st0
jmp r-xdata
fcompp
fnstsw ax
test ah 0x41
je r-xdata
fstp st3
fstp st0
fstp st1
fstp st0
push 0x6
jmp r-xdata
fxch st3
xor eax eax
push 0x8
pop eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_405210
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
cmp ecx 0x2
jb r-xdata
xor eax eax
jmp r-xdata
push ebx
push esi
push edi
push 0x0
pop eax
mov esi eax
mov edx eax
dec ecx
je r-xdata
pop ebp
retn 0x8
xor eax eax
mov edi [ ebp + 0x8 ]
cmp bl 0xa
je r-xdata
test bl bl
je r-xdata
inc esi
jmp r-xdata
cmp bl 0xd
jne r-xdata
cmp bh 0xa
je r-xdata
test eax eax
jne r-xdata
inc eax
jmp r-xdata
cmp bh 0xd
jne r-xdata
test esi esi
jne r-xdata
cmp edx ecx
jb r-xdata
jmp r-xdata
mov bh [ edx + edi ]
mov bl [ edx + edi + 0x1 ]
add edx 0x2
test bh bh
je r-xdata
test eax eax
jne r-xdata
push 0x6
jmp r-xdata
test esi esi
jne r-xdata
pop eax
jmp r-xdata
push 0x8
jmp r-xdata
pop edi
pop esi
pop ebx
sub_405280
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
xor eax eax
mov [ ebp - 0x4 ] ecx
mov bl 0x1
push edi
test esi esi
je r-xdata
mov eax 0x2
mov edi [ ebp + 0x8 ]
cmp [ ecx ] 0x0
jne r-xdata
cmp dl 0x7f
ja r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
jmp r-xdata
lea ecx [ edx + 0x3e ]
cmp cl 0x1d
jbe r-xdata
cmp eax esi
jb r-xdata
mov edx 0x1
jmp r-xdata
lea ecx [ edx + 0x20 ]
cmp cl 0xf
jbe r-xdata
mov dl [ eax + edi ]
inc eax
test dl dl
je r-xdata
test bl bl
je r-xdata
cmp eax esi
jae r-xdata
mov edx 0x2
jmp r-xdata
add dl 0x10
cmp dl 0x4
jbe r-xdata
mov eax 0x4
jmp r-xdata
mov cl [ eax + edi ]
xor bl bl
sub cl 0x80
inc eax
cmp cl 0x3f
ja r-xdata
mov edx 0x3
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
sub_40530a
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x2
mov eax [ ebp + 0x8 ]
jb r-xdata
cmp [ ebp + 0xc ] 0x3
jb r-xdata
mov cl [ eax ]
cmp cl 0xff
je r-xdata
xor eax eax
cmp [ eax ] 0xef
je r-xdata
cmp [ eax + 0x1 ] 0xfe
jne r-xdata
cmp cl 0xfe
je r-xdata
cmp [ eax + 0x1 ] 0xbb
jne r-xdata
push 0x5
jmp r-xdata
cmp [ eax + 0x1 ] 0xff
jne r-xdata
cmp [ eax + 0x2 ] 0xbf
jne r-xdata
pop eax
jmp r-xdata
push 0x7
jmp r-xdata
jmp r-xdata
pop ebp
retn 0x8
push 0x3
sub_405351
xor eax eax
cmp ecx 0x7
je r-xdata
push 0x2
jmp r-xdata
cmp ecx 0x5
je r-xdata
pop eax
retn
cmp ecx 0x3
je r-xdata
push 0x3
jmp r-xdata
retn
sub_405371
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
dec [ eax ]
jne r-xdata
pop esi
retn
push [ esi + 0x4 ]
call j_sub_422ed5#3
push [ esi ]
call j_sub_422ed5#3
pop ecx
pop ecx
sub_40538e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push 0x4
mov [ esi ] eax
call sub_420f36
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4053b9
push esi
mov esi ecx
push esi
call sub_42379a
pop ecx
test eax eax
je r-xdata
xor eax eax
pop esi
retn
push esi
call sub_4237bd
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop esi
retn
sub_405400
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov ecx ebx
call sub_405a2f
xor al al
mov [ ebp - 0x1 ] al
lea ebx [ ebx ]
mov ecx edi
mov [ edi + 0x8 ] 0x0
mov [ edi + 0xc ] 0x0
call sub_405dae
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] edx
jmp r-xdata
xor esi esi
lea esp [ esp ]
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x10000
push [ edi + 0x4 ]
push [ edi ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x4 ]
mov al [ ecx + eax ]
mov [ ebp + esi + 0xb ] al
inc esi
lea eax [ ecx + 0x1 ]
mov [ edi + 0xc ] eax
cmp esi 0x1
jb r-xdata
add [ edi + 0x10 ] esi
adc [ edi + 0x14 ] 0x0
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
cmp eax [ edi + 0x8 ]
je r-xdata
mov al [ ebp - 0x1 ]
test al al
jne r-xdata
mov al [ ebp + 0xb ]
mov [ ebp - 0x1 ] 0x1
cmp al 0xd
je r-xdata
jmp r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0xb ]
mov ecx edi
push eax
call sub_405d20
test eax eax
je r-xdata
cmp al 0xa
je r-xdata
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] 0x0
jmp r-xdata
cmp [ ebp + 0xb ] 0xa
jne r-xdata
mov ecx [ ebx + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
mov ecx edi
call sub_405c4e
jmp r-xdata
dec eax
mov [ ecx ] eax
mov ecx ebx
call sub_456223
mov eax [ ebx + 0x4 ]
add eax 0x2
push eax
call sub_405a4b
push eax
mov [ ebx + 0x8 ] eax
call sub_420f36
mov ecx [ ebx + 0x4 ]
mov esi eax
inc ecx
push ecx
push [ ebx ]
push esi
call sub_420fc0
jmp r-xdata
mov eax [ ebx + 0x4 ]
add eax 0x2
cmp [ ebx + 0x8 ] eax
jb r-xdata
add esp 0x10
cmp eax 0x41c2
jae r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ ebx ]
mov al [ ebp + 0xb ]
mov [ edx + ecx ] al
inc [ ebx + 0x4 ]
mov ecx [ ebx + 0x4 ]
mov eax [ ebx ]
mov [ ecx + eax ] 0x0
jmp r-xdata
cmp eax 0x2000000
jae r-xdata
add eax eax
cmp [ edi + 0x8 ] 0x0
je r-xdata
cmp eax 0x8000000
jae r-xdata
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
test eax eax
jns r-xdata
mov eax 0x10
jmp r-xdata
add eax 0xf
and eax 0xfffffff0
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
test eax eax
jns r-xdata
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
test eax eax
jns r-xdata
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fmul [ r--data ]
fnstcw [ ebp - 0x4 ]
movzx eax [ ebp - 0x4 ]
or eax 0xc00
mov [ ebp - 0xc ] eax
fldcw [ ebp - 0xc ]
fistp [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
fldcw [ ebp - 0x4 ]
jmp r-xdata
fadd [ r--data ]
push eax
mov [ ebx + 0x8 ] eax
call sub_420f36
mov esi eax
add esp 0x4
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebx + 0x4 ]
inc ecx
push ecx
push eax
push esi
call sub_420fc0
push [ ebx ]
call j_sub_422ed5#3
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fmul [ r--data ]
fnstcw [ ebp - 0x4 ]
movzx eax [ ebp - 0x4 ]
or eax 0xc00
mov [ ebp - 0xc ] eax
fldcw [ ebp - 0xc ]
fistp [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
fldcw [ ebp - 0x4 ]
jmp r-xdata
fadd [ r--data ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fmul [ r--data ]
fnstcw [ ebp - 0x4 ]
movzx eax [ ebp - 0x4 ]
or eax 0xc00
mov [ ebp - 0xc ] eax
fldcw [ ebp - 0xc ]
fistp [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
fldcw [ ebp - 0x4 ]
jmp r-xdata
fadd [ r--data ]
mov [ ebx + 0x8 ] eax
test eax eax
je r-xdata
sub_405562
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x14 ]
call sub_405c18
lea eax [ ebp - 0x14 ]
mov ecx esi
push eax
call sub_405400
test al al
je r-xdata
xor bl bl
jmp r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
call sub_4081c1
mov bl 0x1
lea ecx [ ebp - 0x14 ]
call sub_405a64
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4055a7
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x14 ]
call sub_405c18
lea eax [ ebp - 0x14 ]
mov ecx esi
push eax
call sub_405400
test al al
je r-xdata
xor bl bl
jmp r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
call sub_40793a
mov bl 0x1
lea ecx [ ebp - 0x14 ]
call sub_405a64
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4055ec
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x2c ]
cmp eax 0x4
jne r-xdata
cmp eax 0x5
je r-xdata
push [ ebp + 0x8 ]
call sub_405562
push [ ebp + 0x8 ]
call sub_4632e7
jmp r-xdata
cmp eax 0x6
je r-xdata
pop ecx
pop ebp
retn 0x4
cmp eax 0x7
je r-xdata
cmp eax 0x8
je r-xdata
cmp eax 0x3
je r-xdata
push [ ebp + 0x8 ]
call sub_4055a7
jmp r-xdata
sub_405632
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
call sub_405a2f
mov esi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x1 ] bl
cmp [ esi ] ebx
jbe r-xdata
mov [ esi ] ebx
mov al 0x1
push 0x1
lea eax [ ebp + 0xc ]
mov ecx edi
push eax
call sub_405d20
test eax eax
je r-xdata
mov al [ ebp - 0x1 ]
test al al
jne r-xdata
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x1 ] 0x1
call sub_405bda
inc ebx
cmp ebx [ esi ]
jb r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40568a
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x10 ]
call sub_405c18
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
call sub_405632
test al al
je r-xdata
xor bl bl
jmp r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_4081c1
mov bl 0x1
lea ecx [ ebp - 0x10 ]
call sub_405a64
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4056d2
push ebp
mov ebp esp
mov eax [ ecx + 0x2c ]
cmp eax 0x5
je r-xdata
pop ebp
jmp sub_463291
cmp eax 0x6
je r-xdata
cmp eax 0x7
je r-xdata
cmp eax 0x8
je r-xdata
cmp eax 0x3
je r-xdata
pop ebp
jmp sub_40568a
cmp eax 0x4
jne r-xdata
pop ebp
jmp sub_4633b0
sub_405708
mov eax [ ecx + 0x2c ]
cmp eax 0x8
ja r-xdata
push 0x10
jmp r-xdata
jmp [ eax * 4 + jump_table_40574c ]
pop eax
retn
mov eax 0x100
retn
push 0x20
jmp r-xdata
mov eax 0x400
retn
push 0x40
jmp r-xdata
mov eax 0x800
retn
mov eax 0x80
retn
mov eax 0x200
retn
sub_405770
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
mov esi ecx
push edi
test [ esi + 0x28 ] 0x8000
je r-xdata
test [ esi + 0x28 ] 0x1
je r-xdata
test [ esi + 0x28 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ esi + 0x10 ]
xor ebx ebx
push ebx
push ebx
mov [ esp + 0x18 ] eax
mov eax [ esi + 0x14 ]
push ebx
mov [ esp + 0x18 ] eax
call sub_405c4e
push ebx
lea ecx [ esp + 0x18 ]
call sub_40538e
test [ esi + 0x28 ] 0x4000
jne r-xdata
mov ecx esi
call sub_405e3f
mov ebx eax
jmp r-xdata
mov ebx 0x10000
push ebx
call sub_420f36
pop ecx
push eax
lea ecx [ esp + 0x20 ]
call sub_40538e
lea ecx [ esp + 0x14 ]
call sub_405371
mov eax [ esp + 0x20 ]
lea ecx [ esp + 0x1c ]
mov edi [ esp + 0x1c ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edi
inc [ eax ]
call sub_405371
push ebx
push edi
mov ecx esi
call sub_405d20
push 0x0
push [ esp + 0x10 ]
mov ecx esi
mov ebx eax
push [ esp + 0x18 ]
call sub_405c4e
test ebx ebx
je r-xdata
test [ esi + 0x28 ] 0x1
jne r-xdata
push ebx
push edi
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x30 ] 0x46
mov [ esp + 0x34 ] 0xa
call sub_40530a
test eax eax
jne r-xdata
lea ecx [ esp + 0x14 ]
call sub_405371
jmp r-xdata
mov [ esi + 0x2c ] eax
jmp r-xdata
test [ esi + 0x28 ] 0xff0
jne r-xdata
mov ecx [ esi + 0x2c ]
call sub_405351
mov [ esi + 0x30 ] eax
cmp [ esi + 0x2c ] 0x7
jne r-xdata
push ebx
push edi
lea ecx [ esp + 0x2c ]
call sub_405097
mov [ esi + 0x2c ] eax
cmp eax 0x2
cmp [ esi + 0x2c ] 0x5
jne r-xdata
mov [ esi + 0x2c ] 0x8
jmp r-xdata
mov [ esi + 0x2c ] 0x4
cmp [ esi + 0x2c ] 0x3
jmp r-xdata
mov [ esi + 0x2c ] 0x6
jmp r-xdata
jne r-xdata
sub_40588d
mov edx ecx
mov eax [ edx + 0x28 ]
test al 0x10
jne r-xdata
and [ edx + 0x2c ] 0x0
jmp r-xdata
test eax 0x200
jne r-xdata
mov ecx [ edx + 0x2c ]
call sub_405351
mov [ edx + 0x30 ] eax
retn
mov [ edx + 0x2c ] 0x1
jmp r-xdata
test al 0x20
jne r-xdata
mov [ edx + 0x2c ] 0x5
jmp r-xdata
test eax 0x400
jne r-xdata
mov [ edx + 0x2c ] 0x6
jmp r-xdata
test al 0x40
jne r-xdata
mov [ edx + 0x2c ] 0x7
jmp r-xdata
test eax 0x800
jne r-xdata
mov [ edx + 0x2c ] 0x8
jmp r-xdata
test al al
js r-xdata
mov [ edx + 0x2c ] 0x3
jmp r-xdata
mov [ edx + 0x2c ] 0x4
sub_405906
push esi
mov esi ecx
push 0x10000
and [ esi ] 0x0
call sub_420f36
pop ecx
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_405dcf
lea ecx [ esi + 0x18 ]
call sub_4077c7
mov ecx esi
call sub_405dcf
mov eax esi
pop esi
retn
sub_405956
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
call sub_405dcf
mov eax [ ebp + 0xc ]
mov [ esi + 0x28 ] eax
test al 0x3
jne r-xdata
push [ esi + 0x28 ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_405df9
test al al
je r-xdata
or eax 0x8000
mov [ esi + 0x28 ] eax
xor al al
jmp r-xdata
mov ecx esi
call sub_40588d
mov ecx esi
call sub_405770
mov ecx esi
call sub_4053db
test [ esi + 0x28 ] 0x3
jne r-xdata
pop esi
pop ecx
pop ebp
retn 0x8
test [ esi + 0x28 ] 0x1
je r-xdata
mov al 0x1
cmp [ esi + 0x2c ] 0x3
jne r-xdata
mov eax [ esi + 0x10 ]
or eax [ esi + 0x14 ]
jne r-xdata
cmp [ esi + 0x2c ] 0x5
jne r-xdata
push 0x3
push r--data
jmp r-xdata
cmp [ esi + 0x2c ] 0x7
jne r-xdata
push 0x2
push r--data
jmp r-xdata
mov ecx esi
call sub_46349e
jmp r-xdata
push 0x2
push r--data
sub_4059b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push [ esi ]
push [ ebp + 0x8 ]
call sub_405d20
test eax eax
mov [ esi ] eax
pop esi
setne al
pop ebp
retn 0x8
sub_4059cd
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push esi
mov esi ecx
push edi
mov [ ebx ] ax
lea edi [ esi + 0x18 ]
mov ecx edi
call sub_407eec
push edi
mov ecx esi
call sub_4055ec
test al al
je r-xdata
xor al al
jmp r-xdata
push 0xffffffff
push 0xffe
mov ecx edi
call sub_407e8c
push [ edi ]
push ebx
call sub_422f3c
pop ecx
pop ecx
mov al 0x1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_405a2f
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
dec eax
mov [ ecx ] eax
mov ecx esi
call sub_456223
push 0x10
pop eax
push eax
mov [ esi + 0x8 ] eax
call sub_420f36
pop ecx
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and [ esi + 0x4 ] 0x0
pop esi
mov [ eax ] 0x0
retn
sub_405a64
push esi
mov esi ecx
mov eax [ esi + 0xc ]
dec [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
pop esi
retn
push [ esi ]
call j_sub_422ed5#3
push [ esi + 0xc ]
call j_sub_422ed5#3
pop ecx
pop ecx
sub_405a87
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
lea eax [ edi + 0x1 ]
cmp [ esi + 0x8 ] eax
jae r-xdata
pop edi
pop esi
pop ebp
retn 0x4
push eax
call sub_405a4b
cmp [ esi ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
push [ esi + 0x8 ]
call sub_420f36
mov [ esi ] eax
pop ecx
mov [ eax + edi ] 0x0
push [ esi ]
call j_sub_422ed5#3
pop ecx
sub_405ac4
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi ecx
test edi edi
je r-xdata
push ecx
push ecx
call sub_463210
jmp r-xdata
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
retn 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
dec eax
mov [ ecx ] eax
mov ecx esi
call sub_456223
lea eax [ edi + 0x1 ]
push eax
call sub_405a4b
push eax
mov [ esi + 0x8 ] eax
call sub_420f36
pop ecx
mov [ esi ] eax
jmp r-xdata
push edi
mov ecx esi
call sub_405a87
push edi
push [ ebp + 0x8 ]
mov [ esi + 0x4 ] edi
push [ esi ]
call sub_420fc0
mov eax [ esi ]
add esp 0xc
mov [ edi + eax ] 0x0
sub_405b19
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
inc eax
cmp [ esi + 0x8 ] eax
jb r-xdata
cmp eax 0x41c2
jae r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp eax 0x2000000
jae r-xdata
add eax eax
cmp eax 0x8000000
jae r-xdata
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
test eax eax
jns r-xdata
mov [ esi ] edi
pop edi
jmp r-xdata
mov ecx [ esi + 0x4 ]
inc ecx
push ecx
push [ esi ]
push edi
call sub_420fc0
push [ esi ]
call j_sub_422ed5#3
add esp 0x10
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
test eax eax
jns r-xdata
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
test eax eax
jns r-xdata
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fmul [ r--data ]
jmp r-xdata
fadd [ r--data ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fmul [ r--data ]
fadd [ r--data ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fmul [ r--data ]
jmp r-xdata
fadd [ r--data ]
call sub_43b536
jmp r-xdata
push edi
push eax
mov [ esi + 0x8 ] eax
call sub_405a4b
push eax
mov [ esi + 0x8 ] eax
call sub_420f36
cmp [ esi ] 0x0
mov edi eax
pop ecx
je r-xdata
sub_405b75
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push edi
push eax
push eax
mov edi [ ebx + 0x4 ]
push eax
push eax
inc edi
push edi
push [ ebx ]
push eax
push eax
call [ WideCharToMultiByte@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_405a2f
jmp r-xdata
push esi
push eax
call sub_420f36
pop ecx
mov esi eax
xor eax eax
push eax
push eax
push [ ebp + 0x8 ]
push esi
push edi
push [ ebx ]
push eax
push eax
call [ WideCharToMultiByte@IAT ]
dec eax
push eax
push ecx
mov ecx [ ebp + 0xc ]
push esi
call sub_405ac4
push esi
call j_sub_422ed5#3
pop ecx
pop esi
pop edi
pop ebx
pop ebp
retn 0x8
sub_405bda
push ebp
mov ebp esp
push edi
mov edi ecx
mov ecx [ edi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
dec eax
mov [ ecx ] eax
mov ecx edi
push esi
call sub_456223
mov eax [ edi + 0x4 ]
add eax 0x2
push eax
call sub_405a4b
push eax
mov [ edi + 0x8 ] eax
call sub_420f36
mov ecx [ edi + 0x4 ]
mov esi eax
inc ecx
push ecx
push [ edi ]
push esi
call sub_420fc0
add esp 0x10
mov [ edi ] esi
pop esi
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx edi
inc eax
push eax
call sub_405b19
mov edx [ edi + 0x4 ]
mov ecx [ edi ]
mov al [ ebp + 0x8 ]
mov [ edx + ecx ] al
inc [ edi + 0x4 ]
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
mov [ ecx + eax ] 0x0
mov eax edi
pop edi
pop ebp
retn 0x4
sub_405c18
push esi
mov esi ecx
push 0x10
pop eax
push eax
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] eax
call sub_420f36
mov [ esi ] eax
push 0x4
mov [ eax ] 0x0
call sub_420f36
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi + 0xc ] eax
mov eax esi
pop esi
retn
sub_405c4e
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub esp 0xc
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ edi + 0x8 ] 0x0
je r-xdata
and [ edi + 0x8 ] 0x0
and [ edi + 0xc ] 0x0
cmp ebx 0x1
je r-xdata
cmp ebx 0x1
je r-xdata
mov ecx edi
call sub_405dae
mov ecx [ edi + 0x10 ]
sub ecx eax
mov eax [ edi + 0x14 ]
sbb eax edx
mov edx [ ebp + 0xc ]
add esi ecx
adc edx eax
jmp r-xdata
push ebx
push 0x0
push edx
push esi
push [ edi ]
call [ SetFilePointerEx@IAT ]
mov ecx edi
mov esi eax
call sub_405dae
test esi esi
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] edx
setne al
jmp r-xdata
mov [ ebp - 0x8 ] edx
mov ecx edx
cmp ebx 0x1
je r-xdata
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov esi [ edi + 0x10 ]
add esi [ ebp + 0x8 ]
mov ecx [ edi + 0x14 ]
adc ecx edx
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov eax [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
cdq
sub ebx eax
mov eax [ edi + 0x14 ]
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
sbb eax edx
mov [ ebp - 0xc ] eax
cmp ecx eax
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
jmp r-xdata
jg r-xdata
mov eax [ edi + 0x8 ]
cdq
mov [ ebp + 0x10 ] eax
mov eax [ ebp - 0x4 ]
add [ ebp + 0x10 ] eax
adc edx [ ebp - 0xc ]
sub [ ebp + 0x10 ] 0x1
sbb edx 0x0
cmp ecx edx
jg r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
jl r-xdata
mov ecx esi
mov [ edi + 0x10 ] esi
sub ecx eax
mov al 0x1
mov [ edi + 0xc ] ecx
mov ecx [ ebp - 0x8 ]
mov [ edi + 0x14 ] ecx
cmp esi [ ebp + 0x10 ]
ja r-xdata
sub_405d20
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
call sub_405dae
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
jmp r-xdata
mov ebx [ ebp + 0xc ]
xor edi edi
test ebx ebx
je r-xdata
add [ esi + 0x10 ] edi
mov eax edi
pop edi
adc [ esi + 0x14 ] 0x0
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0xc ]
cmp eax [ esi + 0x8 ]
je r-xdata
push 0x0
lea eax [ ebp + 0xc ]
push eax
push 0x10000
push [ esi + 0x4 ]
push [ esi ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0xc ]
mov al [ ecx + eax ]
mov ecx [ ebp + 0x8 ]
mov [ edi + ecx ] al
inc edi
inc [ esi + 0xc ]
cmp edi ebx
jb r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] 0x0
jmp r-xdata
sub_405dae
push ebp
mov ebp esp
push ecx
push ecx
push 0x1
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push [ ecx ]
call [ SetFilePointerEx@IAT ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_405dcf
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi ] edi
jne r-xdata
cmp [ esi ] 0xffffffff
je r-xdata
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
pop edi
pop esi
retn
push [ esi ]
call [ CloseHandle@IAT ]
mov [ esi ] edi
jmp r-xdata
sub_405df9
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
or [ esi ] 0xffffffff
test [ ebp + 0xc ] 0x8000
je r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
push ebx
push 0x80
push 0x3
push ebx
push 0x7
push 0x80000000
test [ ebp + 0xc ] 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
push ebx
push 0x80
push 0x4
push ebx
push 0x7
push 0xc0000000
push [ eax ]
call [ CreateFileW@IAT ]
mov [ esi ] eax
cmp eax 0xffffffff
je r-xdata
pop esi
mov al bl
pop ebx
pop ebp
retn 0x8
xor ebx ebx
inc ebx
push ebx
push 0x80
push 0x2
push ebx
push 0x7
push 0xc0000000
jmp r-xdata
push 0x2
push ebx
push ebx
mov ecx esi
call sub_405c4e
jmp r-xdata
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ CreateFileW@IAT ]
mov [ esi ] eax
cmp [ esi ] 0xffffffff
je r-xdata
sub_405e3f
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi ecx
push 0x2
push 0x0
push 0x0
mov eax [ esi + 0x10 ]
mov ebx [ esi + 0x14 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] eax
call sub_405c4e
mov edi [ esi + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov esi [ esi + 0x14 ]
push 0x0
push ebx
push [ ebp - 0x4 ]
call sub_405c4e
mov eax edi
mov edx esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_405e7f
movzx eax [ ecx + 0x8 ]
cmp ax 0x40
jl r-xdata
test ax ax
je r-xdata
cmp ax 0x5f
jg r-xdata
xor eax eax
inc eax
retn
cmp ax 0x30
je r-xdata
xor eax eax
retn
sub_405ea1
push ebp
mov ebp esp
push esi
mov esi ecx
movzx eax [ esi + 0x8 ]
cmp ax 0x30
jl r-xdata
push 0x10
call sub_420f36
mov edx eax
pop ecx
test edx edx
je r-xdata
cmp ax 0x3f
jg r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
mov ecx [ esi ]
test ecx ecx
jne r-xdata
mov [ esi ] edx
mov eax esi
pop esi
pop ebp
retn 0x4
push ecx
call sub_407b3d
jmp r-xdata
sub_405f12
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x3f
pop ecx
push 0x30
movzx eax [ esi + 0x8 ]
pop edx
cmp ax cx
jg r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] ax
cmp ax cx
jle r-xdata
cmp ax dx
jge r-xdata
cmp ax dx
jge r-xdata
cmp ax 0x10
je r-xdata
push edi
mov edi [ esi ]
test edi edi
je r-xdata
mov [ esi ] ebx
jmp r-xdata
mov [ esi + 0x4 ] ebx
jmp r-xdata
cmp ax 0x20
je r-xdata
mov [ esi ] ebx
pop edi
jmp r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] ebx
je r-xdata
fldz
fstp [ esi ]
jmp r-xdata
push [ edi ]
call j_sub_422ed5#3
push [ edi + 0xc ]
call j_sub_422ed5#3
pop ecx
pop ecx
jmp r-xdata
push edi
call j_sub_422ed5#3
pop ecx
push 0x3f
pop ecx
push 0x30
pop edx
pop esi
pop ebx
pop ebp
retn 0x4
sub_405fa0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
or esi 0xffffffff
mov edx [ eax + 0x8 ]
push edi
test edx edx
je r-xdata
xor esi esi
mov ebx [ eax + 0x4 ]
mov ecx [ ebx + edx * 4 - 0x4 ]
call sub_405e7f
test al al
je r-xdata
cmp [ ecx + 0x8 ] 0x5
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
cmp edx 0x2
jbe r-xdata
mov eax [ ebx + edx * 4 - 0x8 ]
movzx edi [ eax + 0x8 ]
mov eax [ ebx + edx * 4 - 0xc ]
movzx eax [ eax + 0x8 ]
cmp di 0x49
je r-xdata
cmp edx 0x3
jbe r-xdata
cmp di 0x4a
je r-xdata
push 0x30
pop ecx
test ax ax
je r-xdata
cmp di 0x4c
je r-xdata
mov eax [ ebx + edx * 4 - 0x10 ]
movzx eax [ eax + 0x8 ]
cmp ax cx
jne r-xdata
push 0x30
pop ecx
test di di
je r-xdata
cmp ax cx
jne r-xdata
test ax ax
je r-xdata
cmp di cx
jne r-xdata
jmp r-xdata
jmp r-xdata
sub_405fd2
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ecx edi
call sub_407eec
mov eax [ ebp + 0xc ]
cmp si 0x41
jae r-xdata
cmp si 0x61
jb r-xdata
push esi
mov ecx edi
call sub_407a84
mov eax [ ebp + 0xc ]
inc [ eax ]
jmp r-xdata
jmp r-xdata
cmp si 0x30
jae r-xdata
cmp si 0x7a
ja r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
movzx esi [ ecx + eax * 2 ]
cmp si 0x5a
jbe r-xdata
cmp si 0x39
jbe r-xdata
cmp si 0x5f
je r-xdata
jmp r-xdata
mov ecx edi
call sub_407faf
push [ edi + 0x4 ]
push [ edi ]
call [ CharUpperBuffW@IAT ]
push edi
call sub_406999
mov [ ebp + 0xc ] eax
test eax eax
js r-xdata
mov ecx [ rw-data ]
push [ edi ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov [ ebp + 0xc ] eax
test eax eax
js r-xdata
cmp si 0x20
jne r-xdata
mov ecx [ ebp + 0x10 ]
push 0x34
call sub_405f12
mov ecx [ ebp + 0x10 ]
push edi
call sub_405ea1
jmp r-xdata
push 0x1
jmp r-xdata
cmp si 0x2c
je r-xdata
push 0x0
pop edi
pop esi
pop ebp
retn 0x10
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_405f12
mov eax [ ebp + 0xc ]
mov [ esi ] eax
cmp si 0x29
je r-xdata
cmp si 0x9
je r-xdata
cmp si 0x3d
je r-xdata
cmp si 0x28
je r-xdata
cmp si 0x5d
je r-xdata
test si si
je r-xdata
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
push 0xffffffff
call sub_405f12
or [ esi ] 0xffffffff
jmp r-xdata
sub_4060cc
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x30
pop ebx
mov eax [ esi ]
push 0x39
pop edx
push 0x2e
pop edi
cmp [ ecx + eax * 2 ] di
je r-xdata
cmp [ ebp + 0x18 ] 0x33
jne r-xdata
mov edi [ ebp + 0x14 ]
mov ecx edi
call sub_407eec
mov edx [ esi ]
mov ecx [ ebp + 0x8 ]
mov [ ebp + 0xc ] edx
cmp [ ecx + edx * 2 ] bx
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ecx + eax * 2 + 0x2 ]
cmp ax dx
jbe r-xdata
movzx eax [ ecx + edx * 2 + 0x2 ]
cmp eax 0x78
je r-xdata
push 0x17
mov [ ebp + 0x17 ] 0x0
pop ebx
jmp r-xdata
cmp ax bx
jb r-xdata
xor al al
jmp r-xdata
mov ebx [ ebp + 0x14 ]
lea eax [ edx + 0x2 ]
mov [ esi ] eax
xor edi edi
cmp eax 0x58
jne r-xdata
test bl 0x2
je r-xdata
cmp eax 0x2b
je r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp eax 0x61
jae r-xdata
push 0x39
pop ecx
cmp ax cx
ja r-xdata
mov al 0x1
mov [ ebp + 0x17 ] al
jmp r-xdata
push 0x25
pop ebx
test bl 0x8
je r-xdata
cmp eax 0x2d
je r-xdata
cmp eax 0x66
jbe r-xdata
push 0x41
pop ecx
cmp ax cx
jae r-xdata
push eax
lea eax [ edx + 0x1 ]
mov ecx ebx
mov [ esi ] eax
call sub_407a84
mov ecx [ ebp + 0x8 ]
inc edi
jmp r-xdata
test bl 0x20
je r-xdata
mov al [ ebp + 0x17 ]
push 0x31
pop ebx
jmp r-xdata
cmp eax 0x2f
jle r-xdata
jmp r-xdata
cmp eax 0x46
ja r-xdata
mov ecx [ ebx ]
lea edx [ ebp - 0x8 ]
push 0x10
call sub_41fb3b
pop ecx
test al al
je r-xdata
mov edx [ esi ]
push 0x30
movzx eax [ ecx + edx * 2 ]
pop ecx
cmp ax cx
jb r-xdata
test bl 0x10
jne r-xdata
mov eax [ esi ]
movzx ecx [ ecx + eax * 2 ]
inc eax
push ecx
mov ecx edi
mov [ esi ] eax
call sub_407a84
mov ecx [ ebp + 0x8 ]
and ebx 0xffffffdf
mov edx [ ebp + 0xc ]
jmp r-xdata
and eax 0xffffffdf
cmp eax 0x41
jge r-xdata
cmp eax 0x39
jg r-xdata
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
cmp edi 0x8
jg r-xdata
test al al
jne r-xdata
mov eax [ esi ]
movzx eax [ ecx + eax * 2 ]
mov [ ebp - 0x4 ] eax
movzx eax ax
cmp eax 0x2e
je r-xdata
cmp eax 0x5a
jg r-xdata
cmp [ ebp - 0x4 ] 0x5f
jne r-xdata
cmp eax 0x45
je r-xdata
and ebx 0xffffffef
or ebx 0x20
push 0x10
jmp r-xdata
push 0x5
mov edx r--data
mov ecx edi
call sub_420c63
test al al
jne r-xdata
push [ edi ]
call sub_423713
pop ecx
xor ecx ecx
mov edi eax
cmp [ ebp + 0x18 ] 0x4a
mov ebx edx
mov eax 0x7fffffff
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
and al 0x14
cmp al 0x4
jne r-xdata
cmp eax 0x65
je r-xdata
call sub_405f12
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
mov al 0x1
mov eax [ ebp + 0xc ]
mov [ esi ] eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
push 0x20
call sub_405f12
push [ edi ]
call sub_423eb9
fstp [ esi ]
pop ecx
jmp r-xdata
mov eax 0x80000000
jmp r-xdata
cmp ebx ecx
jg r-xdata
mov al [ ebp + 0x17 ]
test ebx 0xfffffffd
je r-xdata
push 0x39
pop eax
mov ebx eax
jmp r-xdata
push 0x10
jmp r-xdata
jl r-xdata
or ebx 0x10
mov [ esi ] edx
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_405f12
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
push 0x5
cmp edi eax
ja r-xdata
sub_40631f
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x14 ]
push ebx
push esi
push edi
call sub_407eec
mov esi [ ebp + 0x10 ]
xor ecx ecx
mov edi [ ebp + 0xc ]
mov ebx [ esi ]
movzx edx [ edi + ebx * 2 ]
lea eax [ ebx + 0x1 ]
mov [ ebp + 0x10 ] edx
mov [ esi ] eax
cmp [ edi + eax * 2 ] cx
je r-xdata
push ebx
push 0x138a
push [ ebp + 0x8 ]
call sub_45fbdb
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi ]
movzx eax [ edi + ecx * 2 ]
cmp ax dx
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
cmp [ edi + ecx * 2 + 0x2 ] dx
je r-xdata
mov ecx [ ebp + 0x14 ]
push eax
call sub_407a84
inc [ esi ]
mov ecx [ ebp + 0x14 ]
push eax
call sub_407a84
add [ esi ] 0x2
jmp r-xdata
inc [ esi ]
xor eax eax
mov edx [ ebp + 0x10 ]
jmp r-xdata
mov eax [ esi ]
xor ecx ecx
cmp [ edi + eax * 2 ] cx
je r-xdata
sub_4063a0
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
or eax 0xffffffff
lea ecx [ ebp - 0x28 ]
push edi
mov [ ebp - 0x10 ] ax
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] edi
push 0x64
mov [ ebp - 0xe ] ax
call sub_407b76
mov ecx [ ebp + 0x10 ]
call sub_4075e0
mov ebx [ ebp + 0xc ]
cmp [ ebx ] di
je r-xdata
push 0x7f
lea ecx [ ebp - 0x18 ]
call sub_405f12
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0xe ] di
call sub_40766f
xor esi esi
lea esp [ esp ]
inc edi
jmp r-xdata
cmp eax 0x9
je r-xdata
movzx eax [ ebx + edi * 2 ]
cmp eax 0x20
je r-xdata
movzx eax [ ebx + edi * 2 ]
mov [ ebp - 0x8 ] edi
test ax ax
je r-xdata
mov esi eax
mov [ ebp - 0xe ] di
cmp esi 0x30
jae r-xdata
cmp esi 0x39
ja r-xdata
cmp esi 0x2e
je r-xdata
mov edi [ ebp + 0x10 ]
mov eax 0x40
mov [ ebp + 0xc ] eax
mov ecx [ edi + 0x8 ]
mov [ ebp - 0xc ] ecx
test ecx ecx
je r-xdata
cmp esi 0x41
jae r-xdata
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push ebx
call sub_4060cc
cmp al 0x1
jne r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp + 0xc ] eax
cmp esi 0x5a
ja r-xdata
cmp esi 0x61
jae r-xdata
mov edi [ ebp - 0x8 ]
cmp esi 0x2e
jne r-xdata
cmp [ ebp + 0xc ] 0x4a
je r-xdata
jmp r-xdata
cmp esi 0x7a
ja r-xdata
cmp esi 0x5f
je r-xdata
inc edi
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x8 ] edi
call sub_407eec
cmp [ ebp - 0x10 ] 0x5
jne r-xdata
lea eax [ ebp - 0x18 ]
mov ecx edi
push eax
call sub_40766f
mov edi [ ebp - 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push ebx
call sub_405fd2
cmp [ ebp - 0x18 ] 0xffffffff
je r-xdata
mov eax esi
cmp eax 0x24
je r-xdata
cmp ax 0x41
jae r-xdata
cmp ax 0x61
jb r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
neg ecx
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0xc ]
adc eax 0x0
neg eax
mov [ ebp - 0x14 ] eax
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 - 0x4 ]
mov ecx 0x49
mov [ eax + 0x8 ] cx
jmp r-xdata
cmp [ ebx + edi * 2 ] 0x0
jne r-xdata
push [ ebp - 0x8 ]
push 0x138c
jmp r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40766f
mov edi [ ebp - 0x8 ]
jmp r-xdata
push [ ebp + 0x10 ]
call sub_405fa0
test eax eax
js r-xdata
cmp eax 0x3d
je r-xdata
push eax
lea ecx [ ebp - 0x28 ]
call sub_407a84
inc edi
jmp r-xdata
jmp r-xdata
cmp ax 0x30
jae r-xdata
cmp ax 0x7a
ja r-xdata
push [ ebp + 0x8 ]
call sub_45fbdb
push edi
jmp r-xdata
cmp esi 0x24
jne r-xdata
inc edi
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] edi
cmp [ ebx + edi * 2 ] 0x3d
je r-xdata
sub eax 0x1a
cmp eax 0x44
ja r-xdata
movzx eax [ ebx + edi * 2 ]
cmp ax 0x5a
jbe r-xdata
cmp ax 0x39
jbe r-xdata
cmp ax 0x5f
je r-xdata
lea ecx [ ebp - 0x28 ]
call sub_405a64
lea ecx [ ebp - 0x18 ]
call sub_405efb
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push 0x138b
mov eax 0x32
jmp r-xdata
mov eax 0x33
push 0x50
call sub_405f12
inc edi
mov [ ebp - 0x8 ] edi
jmp r-xdata
push 0x41
call sub_405f12
jmp r-xdata
push edi
push 0x1388
push [ ebp + 0x8 ]
call sub_45fbdb
lea ecx [ ebp - 0x18 ]
movzx eax [ eax + lookup_table_406954 ]
jmp [ eax * 4 + jump_table_406908 ]
jmp r-xdata
cmp ax 0x7f
ja r-xdata
push eax
lea ecx [ ebp - 0x18 ]
call sub_405f12
inc edi
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x8 ] edi
call sub_407eec
cmp si 0x41
jae r-xdata
cmp si 0x61
jb r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40766f
or esi 0xffffffff
jmp r-xdata
push 0x4f
lea ecx [ ebp - 0x18 ]
call sub_405f12
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40766f
inc edi
mov [ ebp - 0x8 ] edi
jmp r-xdata
push 0x4e
lea ecx [ ebp - 0x18 ]
call sub_405f12
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40766f
inc edi
mov [ ebp - 0x8 ] edi
jmp r-xdata
push 0x47
lea ecx [ ebp - 0x18 ]
call sub_405f12
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40766f
inc edi
mov [ ebp - 0x8 ] edi
jmp r-xdata
push 0x48
lea ecx [ ebp - 0x18 ]
call sub_405f12
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40766f
inc edi
mov [ ebp - 0x8 ] edi
jmp r-xdata
push 0x40
lea ecx [ ebp - 0x18 ]
call sub_405f12
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40766f
inc edi
mov [ ebp - 0x8 ] edi
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push ebx
push [ ebp + 0x8 ]
call sub_40631f
lea ecx [ ebp - 0x18 ]
test eax eax
js r-xdata
push 0x4d
lea ecx [ ebp - 0x18 ]
call sub_405f12
inc edi
mov [ ebp - 0x8 ] edi
cmp [ ebx + edi * 2 ] 0x3d
jne r-xdata
push 0x49
lea ecx [ ebp - 0x18 ]
call sub_405f12
inc edi
mov [ ebp - 0x8 ] edi
cmp [ ebx + edi * 2 ] 0x3d
jne r-xdata
push 0x4c
lea ecx [ ebp - 0x18 ]
call sub_405f12
inc edi
mov [ ebp - 0x8 ] edi
cmp [ ebx + edi * 2 ] 0x3d
jne r-xdata
push 0x4b
lea ecx [ ebp - 0x18 ]
call sub_405f12
inc edi
mov [ ebp - 0x8 ] edi
cmp [ ebx + edi * 2 ] 0x3d
jne r-xdata
push 0x4a
lea ecx [ ebp - 0x18 ]
call sub_405f12
inc edi
mov [ ebp - 0x8 ] edi
cmp [ ebx + edi * 2 ] 0x3d
jne r-xdata
inc edi
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] edi
cmp [ ebx + edi * 2 ] 0x3d
je r-xdata
movzx eax [ ebx + edi * 2 + 0x2 ]
lea ecx [ ebp - 0x18 ]
inc edi
mov [ ebp - 0x8 ] edi
sub eax 0x3d
je r-xdata
push 0x51
lea ecx [ ebp - 0x18 ]
call sub_405f12
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40766f
inc edi
mov [ ebp - 0x8 ] edi
jmp r-xdata
push 0x57
lea ecx [ ebp - 0x18 ]
call sub_405f12
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40766f
inc edi
mov [ ebp - 0x8 ] edi
jmp r-xdata
push 0x58
lea ecx [ ebp - 0x18 ]
call sub_405f12
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40766f
inc edi
mov [ ebp - 0x8 ] edi
jmp r-xdata
test edi edi
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] edi
je r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
jmp r-xdata
cmp si 0x30
jae r-xdata
cmp si 0x7a
ja r-xdata
push 0x7f
call sub_405f12
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40766f
jmp r-xdata
push 0x36
call sub_405f12
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_405ea1
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40766f
mov edi [ ebp - 0x8 ]
jmp r-xdata
inc edi
lea ecx [ ebp - 0x18 ]
push 0x56
mov [ ebp - 0x8 ] edi
call sub_405f12
jmp r-xdata
inc edi
lea ecx [ ebp - 0x18 ]
push 0x52
mov [ ebp - 0x8 ] edi
call sub_405f12
jmp r-xdata
inc edi
lea ecx [ ebp - 0x18 ]
push 0x55
mov [ ebp - 0x8 ] edi
call sub_405f12
jmp r-xdata
jmp r-xdata
jmp r-xdata
push 0x45
call sub_405f12
inc edi
mov [ ebp - 0x8 ] edi
jmp r-xdata
push 0x42
call sub_405f12
jmp r-xdata
push 0x46
jmp r-xdata
dec eax
je r-xdata
cmp [ ebx + 0x2 ] di
jne r-xdata
lea eax [ edi - 0x1 ]
push eax
jmp r-xdata
push 0x35
lea ecx [ ebp - 0x18 ]
call sub_405f12
jmp r-xdata
dec eax
mov [ ecx ] eax
lea ecx [ ebp - 0x28 ]
call sub_408189
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
call sub_408170
xor ecx ecx
mov [ ebp - 0x20 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov edx eax
add esp 0x4
mov eax [ ebp - 0x24 ]
mov [ ebp + 0xc ] edx
lea ecx [ eax * 2 + 0x2 ]
push ecx
push [ ebp - 0x28 ]
push edx
call sub_420fc0
mov ecx [ ebp + 0xc ]
add esp 0xc
mov [ ebp - 0x28 ] ecx
jmp r-xdata
mov eax [ ebp - 0x24 ]
lea ecx [ ebp - 0x28 ]
inc eax
push eax
call sub_407cb3
mov ecx [ ebp - 0x28 ]
cmp si 0x39
ja r-xdata
cmp si 0x5f
je r-xdata
inc edi
lea ecx [ ebp - 0x18 ]
push 0x54
mov [ ebp - 0x8 ] edi
call sub_405f12
jmp r-xdata
inc edi
lea ecx [ ebp - 0x18 ]
push 0x53
mov [ ebp - 0x8 ] edi
call sub_405f12
jmp r-xdata
call sub_405f12
inc edi
mov [ ebp - 0x8 ] edi
jmp r-xdata
push 0x44
push 0x43
call sub_405f12
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jl r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_405ea1
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ ecx + eax * 2 ] si
inc eax
mov [ ebp - 0x24 ] eax
inc edi
mov [ ecx + eax * 2 ] dx
jmp r-xdata
movzx esi [ ebx + edi * 2 ]
cmp si 0x5a
jbe r-xdata
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] edi
je r-xdata
mov edi 0x1
mov [ ebp - 0x8 ] edi
jmp r-xdata
lea ecx [ ebp - 0x28 ]
call sub_407faf
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
call [ CharUpperBuffW@IAT ]
sub_406999
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
mov eax esi
inc esi
cmp esi 0x2d
jl r-xdata
push [ edi ]
push [ esi * 4 + r--data ]
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_4069ca
push ebp
mov ebp esp
sub esp 0x68
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
push 0x1
mov edi ecx
mov [ ebp - 0x5c ] ebx
push [ esi ]
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x54 ] bl
call sub_404f3d
test eax eax
je r-xdata
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp + 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x68 ]
call sub_469604
test eax eax
je r-xdata
push 0x2
push [ esi ]
lea ecx [ ebp - 0x68 ]
call sub_404f3d
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
or ecx 0xffffffff
push 0x4
pop esi
mov [ ebp - 0x18 ] cx
xor ecx ecx
mov eax [ eax ]
mov [ edi + 0x10 ] eax
inc eax
mov [ ebp + 0xc ] eax
push 0x10
pop edx
mul edx
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x2c ] ebx
seto cl
mov [ ebp - 0x28 ] ebx
neg ecx
mov [ ebp - 0x24 ] ebx
or ecx eax
xor eax eax
add ecx esi
setb al
neg eax
or eax ecx
push eax
call sub_420f36
pop ecx
test eax eax
je r-xdata
lea ecx [ ebp - 0x68 ]
call sub_404faa
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x4
je r-xdata
mov edx ebx
mov ecx [ ebp + 0xc ]
lea edx [ eax + 0x4 ]
mov [ eax ] ecx
mov eax edx
jmp r-xdata
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0xc
movzx eax [ edi + 0x2 ]
push eax
push ecx
mov ecx [ edi + 0x60 ]
call sub_464339
pop ecx
pop ecx
jmp r-xdata
push ebx
push r--data
push esi
push [ ebp + 0xc ]
mov ecx edi
mov [ eax ] 0x2
push esi
call sub_406bec
mov bl al
push [ ebp + 0x10 ]
call sub_422ed5
pop ecx
lea ecx [ ebp - 0x68 ]
call sub_404faa
mov bl 0x1
mov [ ebp - 0x8 ] 0x10
dec ecx
jns r-xdata
lea ecx [ ebp - 0x20 ]
call sub_46747c
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
add eax esi
add esi 0x4
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ eax ] r--data
lea eax [ eax + 0x10 ]
mov [ eax - 0xc ] ebx
mov [ eax - 0x8 ] ebx
mov [ eax - 0x4 ] ebx
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_467466
test al al
je r-xdata
mov ecx [ ebp + 0x10 ]
add ecx esi
add esi 0x8
mov eax [ ecx ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_40766f
cmp [ ebp - 0x14 ] 0x7f
jne r-xdata
or eax 0xffffffff
mov [ edi + 0x4c ] edx
mov [ ebp - 0x16 ] ax
xor eax eax
inc eax
mov [ ebp - 0xc ] eax
cmp [ edi + 0x10 ] eax
jl r-xdata
lea ecx [ ebp - 0x20 ]
call sub_405f8a
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
add eax esi
add esi 0x8
fld [ eax ]
fstp [ ebp - 0x20 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x20 ]
add eax esi
inc esi
mov [ ebp + 0xc ] esi
movzx eax [ eax ]
push eax
mov [ ebp - 0x14 ] eax
call sub_405f12
lea ecx [ ebp - 0x20 ]
call sub_467492
test al al
je r-xdata
mov ecx [ edi + 0x4c ]
lea eax [ ebp - 0x30 ]
add ecx [ ebp - 0x8 ]
push eax
call sub_4074bd
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] 0x10
inc eax
mov [ ebp - 0xc ] eax
cmp eax [ edi + 0x10 ]
jle r-xdata
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x10 ]
call sub_45fa6e
mov esi eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] esi
push esi
cmp eax 0x31
jne r-xdata
lea ecx [ ebp - 0x30 ]
call sub_4075e0
cmp eax 0x30
jne r-xdata
lea ecx [ ebp - 0x40 ]
call sub_407f41
mov ecx [ edi + 0x4 ]
push [ ebp - 0x40 ]
mov edx [ ecx ]
call [ edx + 0x4 ]
lea ecx [ ebp - 0x40 ]
mov esi eax
call sub_405a64
push 0x1
jmp r-xdata
cmp eax 0x37
jne r-xdata
lea ecx [ ebp - 0x50 ]
call sub_407f41
lea eax [ ebp - 0x50 ]
push eax
call sub_406999
lea ecx [ ebp - 0x50 ]
mov esi eax
call sub_405a64
push ebx
lea ecx [ ebp - 0x20 ]
call sub_405f12
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x10 ]
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_467428
mov ecx edi
call sub_45f98f
test eax eax
je r-xdata
push esi
call j_sub_422ed5#3
mov esi [ ebp + 0xc ]
pop ecx
mov eax [ ebp - 0xc ]
mov ecx edi
push r--data
push r--data
push eax
push [ ebp + 0x8 ]
call sub_45fad2
push esi
call j_sub_422ed5#3
pop ecx
push [ ebp + 0x10 ]
call sub_422ed5
pop ecx
lea ecx [ ebp - 0x68 ]
call sub_404faa
jmp r-xdata
push esi
call j_sub_422ed5#3
mov esi [ ebp + 0xc ]
pop ecx
jmp r-xdata
lea ecx [ ebp - 0x30 ]
call sub_407776
lea ecx [ ebp - 0x20 ]
call sub_405efb
jmp r-xdata
sub_406a3c
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
push 0x2000
mov edi ecx
call sub_420f36
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_40538e
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x23
je r-xdata
push 0xf
push r--data
push esi
call sub_42394b
add esp 0xc
test eax eax
je r-xdata
push 0x3
xor ebx ebx
inc ebx
jmp r-xdata
push 0xb
push r--data
push esi
call sub_42394b
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
push eax
call j_sub_422ed5#3
pop ecx
push [ ebp - 0x8 ]
call j_sub_422ed5#3
pop ecx
mov eax [ ebp - 0x4 ]
dec [ eax ]
jne r-xdata
xor ebx ebx
inc ebx
mov [ edi ] bl
jmp r-xdata
push 0xd
push r--data
push esi
call sub_42394b
add esp 0xc
test eax eax
je r-xdata
xor ebx ebx
inc ebx
mov [ edi + 0x1 ] bl
jmp r-xdata
push 0x16
push r--data
push esi
call sub_42394b
add esp 0xc
test eax eax
je r-xdata
lea ecx [ esi + 0x2c ]
call sub_41fe06
mov ebx eax
push ebx
call sub_4070bd
push ebx
call sub_40710a
push ebx
call sub_422d7c
pop ecx
push 0x22
pop edx
movzx ecx [ ebx + eax * 2 - 0x2 ]
cmp cx dx
je r-xdata
push 0xd
push r--data
push esi
call sub_42394b
add esp 0xc
test eax eax
je r-xdata
cmp [ ebx ] cx
jne r-xdata
push 0x27
pop edx
cmp cx dx
je r-xdata
xor esi esi
cmp [ edi + 0x20 ] esi
jbe r-xdata
push 0x8
push r--data
push esi
call sub_42394b
add esp 0xc
test eax eax
je r-xdata
push ebx
call j_sub_422ed5#3
pop ecx
push esi
push r--data
jmp r-xdata
xor ecx ecx
mov [ ebx + eax * 2 - 0x2 ] cx
lea eax [ ebx + 0x2 ]
mov ecx [ edi + 0x4 ]
push eax
mov edx [ ecx ]
call [ edx + 0x8 ]
movzx eax [ ebx ]
push 0x22
pop ecx
cmp ax cx
je r-xdata
mov eax [ edi + 0x1c ]
mov ecx [ ebp + 0xc ]
push 0x0
push [ eax + esi * 4 ]
call sub_407a68
test eax eax
je r-xdata
push [ ebp - 0x8 ]
lea eax [ esi + 0x10 ]
mov ecx edi
push eax
call sub_45fe2e
cmp al 0x1
jne r-xdata
push 0xf
push r--data
push esi
call sub_42394b
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx edi
push [ eax ]
push [ ebp + 0xc ]
call sub_45fad2
cmp ax dx
je r-xdata
mov eax [ edi + 0x2c ]
xor ebx ebx
inc ebx
mov eax [ eax + esi * 4 ]
cmp [ eax ] ebx
jle r-xdata
inc esi
cmp esi [ edi + 0x20 ]
jb r-xdata
push esi
push r--data
jmp r-xdata
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x28 ]
call sub_407f41
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_407f41
mov eax [ ebp + 0x10 ]
push [ eax ]
lea eax [ ebp - 0x28 ]
push esi
push [ ebp + 0xc ]
push ecx
push eax
mov ecx edi
call sub_40716b
pop ecx
push eax
lea eax [ ebp - 0x18 ]
mov ecx edi
push eax
call sub_406bec
lea ecx [ ebp - 0x18 ]
mov bl al
call sub_405a64
lea ecx [ ebp - 0x28 ]
call sub_405a64
test bl bl
je r-xdata
xor ebx ebx
inc ebx
mov [ ebp + 0x8 ] ebx
push 0x3
push r--data
push esi
call sub_42394b
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ edi + 0x4 ]
push ebx
mov eax [ ecx ]
call [ eax + 0x8 ]
jmp r-xdata
push 0x4
jmp r-xdata
jmp r-xdata
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jle r-xdata
mov eax [ ebp + 0x10 ]
push esi
inc [ eax ]
call sub_40710a
push esi
call sub_4070bd
push 0xf
push r--data
push esi
call sub_42394b
add esp 0xc
test eax eax
je r-xdata
push ebx
call j_sub_422ed5#3
pop ecx
jmp r-xdata
pop ebx
push esi
push r--data
inc [ ebp + 0x8 ]
jmp r-xdata
push 0x3
push r--data
push esi
call sub_42394b
add esp 0xc
test eax eax
je r-xdata
push ecx
mov ecx [ ebp + 0x14 ]
push esi
call sub_4059cd
test al al
je r-xdata
push 0xd
push r--data
push esi
call sub_42394b
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
dec eax
mov [ ebp + 0x8 ] eax
test eax eax
jle r-xdata
push 0x3
push r--data
push esi
call sub_42394b
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_406bec
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xe4
mov eax [ rw-data ]
push ebx
push esi
inc eax
mov esi ecx
mov [ esp + 0x18 ] esi
mov [ rw-data ] eax
push edi
cmp eax 0x30
jge r-xdata
push [ ebp + 0x14 ]
push r--data
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
call sub_45fad2
xor bl bl
jmp r-xdata
xor ebx ebx
mov [ esp + 0x13 ] 0x1
mov eax ebx
mov [ esp + 0x22 ] 0x1
lea ecx [ esp + 0xa8 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x24 ] bl
call sub_405906
mov edi [ ebp + 0x8 ]
lea ecx [ esp + 0xa8 ]
push 0x8000
push edi
call sub_405956
test al al
je r-xdata
dec [ rw-data ]
mov al bl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push [ ebp + 0x14 ]
mov ecx esi
push r--data
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
call sub_45fad2
jmp r-xdata
lea ecx [ esp + 0x98 ]
call sub_4077c7
lea ecx [ esp + 0x98 ]
call sub_420ad7
lea ecx [ esp + 0x88 ]
call sub_4077c7
lea edx [ esp + 0x88 ]
mov ecx edi
call sub_4048ae
mov edi [ esp + 0xb8 ]
lea eax [ esp + 0x44 ]
mov esi [ esp + 0xbc ]
lea ecx [ esp + 0xa8 ]
push eax
lea eax [ esp + 0x64 ]
mov [ esp + 0x48 ] 0x18
push eax
call sub_4059b0
push ebx
push esi
push edi
lea ecx [ esp + 0xb4 ]
call sub_405c4e
cmp [ esp + 0x70 ] 0x21335541
je r-xdata
lea ecx [ esp + 0xa8 ]
call sub_405934
cmp [ esp + 0x74 ] 0x36304145
jne r-xdata
lea ecx [ esp + 0x50 ]
call sub_4077c7
lea ecx [ esp + 0x28 ]
call sub_4077c7
push ebx
lea eax [ esp + 0x2c ]
push ebx
push eax
lea edx [ esp + 0x5c ]
lea ecx [ esp + 0x94 ]
call sub_4046f9
add esp 0xc
lea eax [ esp + 0x28 ]
lea ecx [ esp + 0x50 ]
push eax
call sub_407c8e
push [ esp + 0x50 ]
call [ SetCurrentDirectoryW@IAT ]
lea ecx [ esp + 0x28 ]
call sub_405a64
lea ecx [ esp + 0x50 ]
call sub_405a64
push 0x2000
call sub_420f36
pop ecx
push eax
lea ecx [ esp + 0x48 ]
call sub_40538e
mov esi [ esp + 0x44 ]
mov edi [ esp + 0x1c ]
lea ecx [ esp + 0xa8 ]
call sub_405dcf
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x60 ]
push 0x2
mov [ esp + 0x70 ] ebx
mov [ esp + 0x74 ] ebx
push [ eax ]
mov [ esp + 0x7c ] bl
call sub_404f3d
test eax eax
jne r-xdata
lea ecx [ esp + 0xa8 ]
call sub_405dcf
push [ esp + 0x98 ]
call [ SetCurrentDirectoryW@IAT ]
mov eax [ esp + 0x48 ]
mov bl [ esp + 0x13 ]
dec [ eax ]
jne r-xdata
push ecx
push esi
lea ecx [ esp + 0xb0 ]
call sub_4059cd
test al al
je r-xdata
push [ ebp + 0x14 ]
mov ecx [ esp + 0x20 ]
push r--data
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
call sub_45fad2
jmp r-xdata
lea eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0x18 ]
push eax
push r--data
lea ecx [ esp + 0x6c ]
call sub_469604
lea ecx [ esp + 0x60 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x88 ]
call sub_405a64
lea ecx [ esp + 0x98 ]
call sub_405a64
push eax
call j_sub_422ed5#3
pop ecx
push esi
call j_sub_422ed5#3
pop ecx
mov eax [ esp + 0x14 ]
inc eax
push esi
mov [ esp + 0x18 ] eax
mov [ esp + 0x20 ] eax
call sub_4070bd
push esi
call sub_40702c
push esi
test al al
je r-xdata
call sub_404faa
mov eax [ esp + 0x14 ]
push 0x4
pop edx
push 0x10
mov edi [ eax ]
or eax 0xffffffff
mov [ esp + 0x1c ] edx
mov [ esp + 0x3c ] edi
mov [ esp + 0x34 ] ax
mov [ esp + 0x54 ] r--data
mov [ esp + 0x58 ] ebx
mov [ esp + 0x5c ] ebx
mov [ esp + 0x60 ] ebx
call sub_420f36
mov esi eax
mov [ esp + 0x44 ] esi
pop ecx
test esi esi
je r-xdata
call sub_404faa
mov eax [ esp + 0x18 ]
mov ecx edi
push r--data
push eax
push [ ebp + 0x10 ]
call sub_45fad2
mov [ esp + 0x13 ] bl
jmp r-xdata
call sub_40710a
push esi
mov [ esp + 0x27 ] bl
call sub_422d7c
mov [ esp + 0x3c ] eax
pop ecx
cmp eax 0x2
jle r-xdata
mov esi ebx
mov [ esp + 0x40 ] esi
mov [ esi ] r--data
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
jmp r-xdata
cmp [ esp + 0x24 ] 0x1
je r-xdata
mov ax [ esi + eax * 2 - 0x4 ]
push 0x7f
pop ecx
and ax cx
movzx eax ax
push eax
call sub_4237bd
pop ecx
test eax eax
jne r-xdata
push 0x5
lea ecx [ esp + 0x2c ]
call sub_405f12
mov ecx [ esi + 0x4 ]
mov eax [ esp + 0x3c ]
mov [ esp + 0x28 ] eax
lea eax [ esp + 0x28 ]
push eax
mov ecx [ ecx ]
call sub_467388
lea eax [ esp + 0x44 ]
push eax
lea ecx [ edi + 0x50 ]
call sub_46f656
push [ esp + 0x14 ]
call sub_422ed5
mov bl 0x1
mov ecx [ esp + 0x18 ]
or eax 0xffffffff
mov [ esp + 0x44 ] esi
push 0x5
lea ecx [ esp + 0x2c ]
mov [ esp + 0x36 ] ax
call sub_405f12
lea eax [ esp + 0x28 ]
mov [ esp + 0x28 ] edi
push eax
mov ecx esi
call sub_40766f
xor eax eax
mov [ esp + 0x3c ] ebx
inc eax
cmp edi eax
mov [ esp + 0x4c ] eax
mov edi [ esp + 0x1c ]
jl r-xdata
push esi
mov ecx edi
call sub_45f928
jmp r-xdata
push [ esp + 0x88 ]
lea ecx [ esp + 0x7c ]
call sub_407f41
lea eax [ esp + 0xa8 ]
mov ecx edi
push eax
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x80 ]
push eax
push esi
call sub_406a3c
lea ecx [ esp + 0x78 ]
mov [ esp + 0x38 ] eax
call sub_405a64
mov eax [ esp + 0x38 ]
test eax eax
je r-xdata
mov eax [ esp + 0x38 ]
cmp [ esi + eax * 2 - 0x2 ] 0x5f
jne r-xdata
lea ecx [ esp + 0x28 ]
call sub_46747c
test al al
je r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
add eax edx
add edx 0x4
mov eax [ eax ]
mov [ esp + 0x28 ] eax
jmp r-xdata
cmp [ esp + 0x23 ] 0x1
sete [ esp + 0x24 ]
cmp [ esp + 0x13 ] 0x1
je r-xdata
mov [ esp + 0x13 ] bl
jmp r-xdata
cmp eax 0x1
jle r-xdata
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_467466
test al al
je r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
add ecx edx
add edx 0x8
mov eax [ ecx ]
mov [ esp + 0x28 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x2c ] eax
jmp r-xdata
mov [ esp + 0x18 ] edx
cmp [ esp + 0x22 ] 0x1
jne r-xdata
mov eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
jmp r-xdata
cmp eax 0x3
jg r-xdata
xor ecx ecx
mov [ esp + 0x23 ] 0x1
mov [ esi + eax * 2 - 0x2 ] cx
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_405f8a
test al al
je r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
add eax edx
add edx 0x8
fld [ eax ]
fstp [ esp + 0x28 ]
jmp r-xdata
mov eax [ esp + 0x14 ]
add eax ecx
inc ecx
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] ecx
lea ecx [ esp + 0x28 ]
movzx eax [ eax ]
push eax
mov [ esp + 0x28 ] eax
call sub_405f12
lea ecx [ esp + 0x28 ]
call sub_467492
test al al
je r-xdata
mov ecx [ esi + 0x8 ]
cmp ecx 0x2
jbe r-xdata
cmp eax 0x4
jne r-xdata
push [ ebp + 0xc ]
mov eax [ esp + 0x20 ]
mov ecx edi
push esi
push eax
mov [ esp + 0x20 ] eax
call sub_407373
lea eax [ esp + 0x28 ]
mov ecx esi
push eax
call sub_40766f
mov ecx [ esp + 0x18 ]
push 0x7f
pop edx
cmp [ esp + 0x24 ] edx
jne r-xdata
lea eax [ esp + 0x1c ]
push eax
push [ esp + 0x18 ]
call sub_45fa6e
mov ecx [ esp + 0x24 ]
mov [ esp + 0x18 ] eax
push eax
cmp ecx 0x31
jne r-xdata
mov ecx esi
call sub_45ff91
mov eax [ esi + 0x4 ]
mov eax [ eax + ecx * 4 - 0x8 ]
cmp [ eax + 0x8 ] dx
je r-xdata
mov [ esp + 0x22 ] bl
cmp ecx 0x30
jne r-xdata
lea ecx [ esp + 0xe4 ]
call sub_407f41
mov ecx [ edi + 0x4 ]
push [ esp + 0xe0 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
lea ecx [ esp + 0xe0 ]
mov esi eax
call sub_405a64
push 0x1
jmp r-xdata
inc [ esp + 0x3c ]
mov ecx edi
push 0x3b
pop eax
mov [ esp + 0x24 ] ax
or eax 0xffffffff
push eax
lea eax [ esp + 0x28 ]
push eax
push [ edi + 0x10 ]
call sub_407373
jmp r-xdata
cmp ecx 0x37
jne r-xdata
lea ecx [ esp + 0x7c ]
call sub_407f41
lea eax [ esp + 0x78 ]
push eax
call sub_406999
lea ecx [ esp + 0x78 ]
mov esi eax
call sub_405a64
push ebx
lea ecx [ esp + 0x2c ]
call sub_405f12
mov [ esp + 0x28 ] esi
mov esi [ esp + 0x40 ]
jmp r-xdata
mov eax [ esp + 0x4c ]
inc eax
mov [ esp + 0x4c ] eax
cmp eax [ esp + 0x38 ]
jle r-xdata
lea ecx [ esp + 0x2c ]
call sub_467428
mov ecx edi
call sub_45f98f
test eax eax
je r-xdata
push [ esp + 0x18 ]
call j_sub_422ed5#3
mov edx [ esp + 0x20 ]
pop ecx
mov eax [ esp + 0x4c ]
mov ecx edi
push r--data
push r--data
push eax
push [ ebp + 0x8 ]
call sub_45fad2
push [ esp + 0x18 ]
call j_sub_422ed5#3
pop ecx
push [ esp + 0x14 ]
call sub_422ed5
jmp r-xdata
push [ esp + 0x18 ]
call j_sub_422ed5#3
pop ecx
mov ecx [ esp + 0x1c ]
jmp r-xdata
pop ecx
lea ecx [ esp + 0x50 ]
call sub_407776
lea ecx [ esp + 0x28 ]
call sub_405efb
jmp r-xdata
sub_406ee0
push ebp
mov ebp esp
sub esp 0x30
cmp [ rw-data ] 0x0
push esi
push edi
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
xor al al
jmp r-xdata
mov esi [ rw-data ]
xor ecx ecx
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov edi [ rw-data ]
pop ecx
xor ecx ecx
mov [ ebp - 0xc ] eax
mov [ rw-data ] eax
mov edx ecx
mov [ ebp - 0x10 ] ecx
test edi edi
jle r-xdata
xor eax eax
mov [ ebp - 0x28 ] ecx
inc eax
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x4 ] eax
lea esi [ edi + 0x1 ]
mov [ ebp - 0x8 ] eax
mov eax esi
mov [ ebp - 0x20 ] ecx
xor ecx ecx
push 0x10
pop edi
mul edi
mov [ ebp - 0x2c ] r--data
seto cl
neg ecx
or ecx eax
xor eax eax
add ecx 0x4
setb al
neg eax
or eax ecx
push eax
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov edi eax
xor eax eax
mov edx eax
jmp r-xdata
lea edx [ eax + 0x4 ]
mov [ eax ] esi
mov ecx edx
xor eax eax
jmp r-xdata
mov edi [ rw-data ]
jmp r-xdata
mov [ rw-data ] edx
mov edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edi
mov edi eax
dec esi
jns r-xdata
mov eax [ esi ]
mov [ edi + edx * 4 ] eax
inc edx
mov edi [ rw-data ]
mov esi [ esi + 0xc ]
cmp edx edi
jge r-xdata
mov [ ebp - 0x10 ] 0x1
cmp [ eax ] 0x3b
lea ecx [ ebp - 0x2c ]
je r-xdata
mov [ ecx ] r--data
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
add ecx edi
call sub_4075e0
mov eax [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov esi ecx
mov eax [ edi + eax ]
mov eax [ eax ]
cmp ecx [ eax + 0x8 ]
jae r-xdata
push ecx
push eax
push edx
call sub_4063a0
test eax eax
js r-xdata
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x2c ]
add ecx [ rw-data ]
push eax
call sub_4074bd
mov edx [ ebp - 0x8 ]
inc edx
add [ ebp - 0xc ] 0x10
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x1c ]
push [ eax + esi * 4 ]
call sub_4568a9
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_40766f
cmp [ ebp - 0x14 ] 0x7f
je r-xdata
lea ecx [ ebp - 0x2c ]
call sub_407776
mov al [ ebp - 0x10 ]
push edx
call sub_407143
test eax eax
je r-xdata
lea eax [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov eax [ edi + eax ]
mov eax [ eax ]
mov eax [ eax + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_405efb
mov eax [ rw-data ]
inc esi
mov eax [ edi + eax ]
mov eax [ eax ]
cmp esi [ eax + 0x8 ]
jb r-xdata
lea ecx [ ebp - 0x1c ]
call sub_405efb
jmp r-xdata
add edi 0x4
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
sub_40702c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov esi ebx
test edi edi
je r-xdata
xor al al
jmp r-xdata
cmp [ edi ] 0x23
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push 0x8
push r--data
push edi
call sub_42394b
add esp 0xc
test eax eax
je r-xdata
cmp [ edi ] bx
je r-xdata
push 0x3
jmp r-xdata
test esi esi
jne r-xdata
movzx eax [ edi ]
cmp eax 0x22
je r-xdata
pop esi
jmp r-xdata
cmp esi 0x3
je r-xdata
mov al 0x1
cmp esi 0x2
je r-xdata
cmp eax 0x27
je r-xdata
add edi 0x2
jmp r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
cmp esi 0x1
je r-xdata
cmp eax 0x3b
je r-xdata
push 0x2
test esi esi
jne r-xdata
test esi esi
jne r-xdata
inc esi
jmp r-xdata
cmp esi 0x3
je r-xdata
xor ecx ecx
mov [ edi ] cx
jmp r-xdata
jmp r-xdata
sub_4070bd
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx esi
movzx eax [ edi + esi * 2 ]
test ax ax
je r-xdata
push [ ebp + 0x8 ]
call sub_4237bd
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ edi + ebx * 2 ] ax
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edi + ebx * 2 ] ax
inc ebx
inc esi
jmp r-xdata
inc esi
jmp r-xdata
movzx eax [ edi + esi * 2 ]
push eax
mov [ ebp + 0x8 ] eax
call sub_42379a
pop ecx
test eax eax
je r-xdata
sub_40710a
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_422d7c
pop ecx
test eax eax
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
lea esi [ eax - 0x1 ]
test esi esi
js r-xdata
xor eax eax
mov [ edi + esi * 2 + 0x2 ] ax
pop esi
mov cx [ edi + esi * 2 ]
call sub_4053b9
test eax eax
jne r-xdata
dec esi
jns r-xdata
jmp r-xdata
sub_407143
push ebp
mov ebp esp
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jg r-xdata
pop ebp
retn 0x4
test eax eax
jle r-xdata
mov eax [ ecx + eax * 4 - 0x4 ]
sub_40716b
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0x14 ]
call sub_4077c7
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x14 ]
call sub_4048ae
xor esi esi
cmp [ edi + 0x20 ] esi
ja r-xdata
mov eax [ edi + 0x1c ]
lea ecx [ ebp - 0x14 ]
push 0x0
push [ eax + esi * 4 ]
call sub_407a68
test eax eax
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ edi + 0x18 ]
call sub_403f84
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] 0x1
push eax
lea ecx [ edi + 0x28 ]
call sub_4034c2
mov esi [ edi + 0x20 ]
dec esi
mov eax [ edi + 0x2c ]
mov eax [ eax + esi * 4 ]
inc [ eax ]
jmp r-xdata
inc esi
cmp esi [ edi + 0x20 ]
jb r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405a64
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
jmp r-xdata
sub_4071c8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jg r-xdata
xor eax eax
jmp r-xdata
test eax eax
jle r-xdata
pop ebp
retn 0x4
shl eax 0x4
add eax [ rw-data ]
sub_4071eb
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x1003c
call sub_431ac0
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x1c ]
push ebx
xor ebx ebx
mov [ rw-data ] eax
push esi
mov eax r--data
mov [ rw-data ] bx
push edi
mov [ rw-data ] bl
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] r--data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] 0x66
call sub_4077c7
lea ecx [ esp + 0x28 ]
call sub_404864
lea edx [ esp + 0x28 ]
mov ecx edx
call sub_42068b
push r--data
lea ecx [ esp + 0x2c ]
call sub_407e0b
lea eax [ esp + 0x28 ]
mov ecx rw-data
push eax
call sub_403f84
lea ecx [ esp + 0x18 ]
call sub_4077c7
lea ecx [ esp + 0x18 ]
call sub_407eec
lea eax [ esp + 0x10 ]
xor esi esi
push eax
push 0x1
push esi
push r--data
push 0x80000001
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov edi [ RegQueryValueExW@IAT ]
lea eax [ esp + 0x14 ]
push eax
push esi
push esi
push esi
push r--data
push [ esp + 0x24 ]
call edi
test eax eax
jne r-xdata
lea ecx [ esp + 0x18 ]
call sub_405a64
lea ecx [ esp + 0x28 ]
call sub_405a64
pop edi
pop esi
mov eax rw-data
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ esp + 0x10 ]
call [ RegCloseKey@IAT ]
test bl bl
je r-xdata
mov eax [ esp + 0x14 ]
xor ecx ecx
push 0x2
inc eax
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
push eax
lea ecx [ esp + 0x3c ]
call sub_40538e
mov esi [ esp + 0x38 ]
lea eax [ esp + 0x14 ]
push eax
push esi
xor eax eax
push eax
push eax
push r--data
push [ esp + 0x24 ]
call edi
test eax eax
jne r-xdata
xor eax eax
xor edi edi
mov [ esp + 0x48 ] ax
mov eax [ esp + 0x3c ]
dec [ eax ]
jne r-xdata
mov eax [ esp + 0x14 ]
xor ecx ecx
shr eax 0x1
mov [ esp + 0x14 ] eax
push esi
mov [ esi + eax * 2 ] cx
lea ecx [ esp + 0x1c ]
call sub_407d2c
mov bl 0x1
lea eax [ esp + 0x48 ]
push eax
call sub_422d7c
pop ecx
test eax eax
je r-xdata
push esi
lea ecx [ esp + 0x1c ]
call sub_407b52
cmp [ eax ] 0x3b
je r-xdata
xor esi esi
push eax
call j_sub_422ed5#3
pop ecx
push esi
call j_sub_422ed5#3
pop ecx
lea eax [ esp + 0x48 ]
push eax
lea ecx [ esp + 0x3c ]
call sub_407f41
lea eax [ esp + 0x38 ]
mov ecx rw-data
push eax
call sub_403f84
lea ecx [ esp + 0x38 ]
call sub_405a64
xor eax eax
lea ecx [ esp + 0x18 ]
push esi
mov [ esp + 0x4c ] ax
call sub_407b52
cmp [ eax ] di
je r-xdata
lea eax [ esp + 0x48 ]
push eax
call sub_422d7c
pop ecx
cmp [ esp + eax * 2 + 0x46 ] 0x5c
je r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x4c ]
push eax
call sub_422f0d
pop ecx
pop ecx
jmp r-xdata
inc esi
jmp r-xdata
lea eax [ esp + 0x48 ]
push r--data
push eax
call sub_422f0d
pop ecx
pop ecx
push esi
lea ecx [ esp + 0x1c ]
call sub_407b52
push esi
lea ecx [ esp + 0x1c ]
mov ax [ eax ]
mov [ esp + 0x14 ] ax
xor eax eax
mov [ esp + 0x16 ] ax
call sub_407b52
cmp [ eax ] di
je r-xdata
sub_407336
push esi
mov ecx rw-data
call sub_40743b
mov esi rw-data
mov ecx esi
call sub_403f20
mov ecx rw-data
call sub_403569
mov ecx esi
call sub_404024
mov ecx rw-data
call sub_416181
mov ecx rw-data
pop esi
jmp sub_404024
sub_407373
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi + 0x8 ] edi
je r-xdata
push 0x10
call sub_420f36
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax ]
cmp [ eax ] di
je r-xdata
pop ecx
jmp r-xdata
push eax
call j_sub_422ed5#3
dec [ esi + 0x10 ]
push 0x10
call sub_420f36
pop ecx
mov ecx [ esi + 0xc ]
mov [ ecx + 0xc ] eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0xc ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0xc ] edi
call sub_41fe06
mov ecx [ esi + 0xc ]
pop edi
mov [ ecx ] eax
mov ecx [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ esi + 0xc ]
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
inc [ esi + 0x10 ]
pop esi
pop ebp
retn 0xc
sub_4073e5
push ebp
mov ebp esp
mov eax 0x10058
call sub_431ac0
mov al [ rw-data ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov [ edi + 0x2 ] al
cmp [ esi + 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10058 ] ax
mov eax [ ebp + 0x14 ]
push 0x58
push 0x0
mov [ eax ] 0x1
lea eax [ ebp - 0x58 ]
push eax
call sub_422f60
and [ ebp - 0x54 ] 0x0
lea eax [ ebp - 0x10058 ]
add esp 0xc
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x58 ] 0x58
mov [ ebp - 0x28 ] r--data
mov [ ebp - 0x38 ] 0x7fff
push eax
mov [ ebp - 0x4c ] r--data
mov [ ebp - 0x40 ] 0x1
mov [ ebp - 0x24 ] 0x1804
mov [ ebp - 0x1c ] r--data
call [ GetOpenFileNameW@IAT ]
test eax eax
jne r-xdata
mov edx esi
mov ecx esi
call sub_4048ae
mov edx esi
mov ecx esi
call sub_420911
push [ ebp + 0xc ]
push ecx
push esi
mov ecx edi
call sub_40716b
pop ecx
push eax
push esi
mov ecx edi
call sub_4069ca
lea eax [ ebp - 0x10058 ]
mov ecx esi
push eax
call sub_407d2c
jmp r-xdata
xor al al
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_40743b
push ebx
push edi
mov edi ecx
mov ebx [ edi + 0x8 ]
test ebx ebx
je r-xdata
mov ecx [ edi + 0x4c ]
xor ebx ebx
test ecx ecx
je r-xdata
push esi
push [ edi + 0x14 ]
call j_sub_422ed5#3
pop ecx
lea ecx [ edi + 0x18 ]
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
mov [ edi + 0x14 ] ebx
mov [ edi + 0x4c ] ebx
mov [ edi ] bx
call sub_403f20
lea ecx [ edi + 0x28 ]
call sub_416154
cmp [ edi + 0x58 ] ebx
ja r-xdata
lea eax [ ecx - 0x4 ]
cmp [ eax ] ebx
je r-xdata
push [ ebx ]
mov esi [ ebx + 0xc ]
call j_sub_422ed5#3
push ebx
call j_sub_422ed5#3
mov ebx esi
pop ecx
pop ecx
test esi esi
jne r-xdata
pop esi
mov eax [ edi + 0x54 ]
mov eax [ eax + ebx * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
lea ecx [ edi + 0x50 ]
pop edi
pop ebx
jmp sub_403553
push eax
call j_sub_422ed5#3
pop ecx
jmp r-xdata
mov eax [ ecx ]
push 0x3
call [ eax ]
inc ebx
cmp ebx [ edi + 0x58 ]
jb r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
jmp r-xdata
sub_4074bd
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push edi
call sub_4075e0
mov eax [ ebx + 0x8 ]
cmp [ esi + 0xc ] eax
jae r-xdata
mov eax [ ebx + 0x8 ]
xor ebx ebx
mov [ esi + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
test eax eax
je r-xdata
push 0x8
pop edx
cmp eax edx
jae r-xdata
pop edi
push 0xc
call sub_420f36
mov edi eax
pop ecx
test edi edi
je r-xdata
mov edx eax
jmp r-xdata
mov [ esi + 0xc ] edx
xor ecx ecx
mov eax edx
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
cmp [ esi + 0x4 ] 0x0
mov edi eax
pop ecx
jne r-xdata
xor edi edi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ebx [ ecx + ebx * 4 ]
mov cx [ ebx + 0x8 ]
mov [ edi + 0x8 ] cx
movzx eax [ edi + 0x8 ]
mov cx [ ebx + 0xa ]
mov [ edi + 0xa ] cx
cmp ax 0x3f
jle r-xdata
push [ esi + 0x4 ]
call j_sub_422ed5#3
pop ecx
jmp r-xdata
mov [ esi + 0x4 ] edi
mov eax [ esi + 0x4 ]
mov [ eax + ebx * 4 ] edi
inc ebx
mov [ ebp - 0x4 ] ebx
cmp ebx [ esi + 0x8 ]
jb r-xdata
cmp ax 0x30
jl r-xdata
push 0x10
pop ecx
cmp ax cx
je r-xdata
push 0x10
pop eax
push eax
call sub_420f36
mov edx eax
pop ecx
test edx edx
je r-xdata
mov eax [ ebx ]
mov [ edi ] eax
mov eax [ ebx + 0x4 ]
mov [ edi + 0x4 ] eax
jmp r-xdata
cmp ax 0x20
je r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebx ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
mov ebx [ ebp - 0x4 ]
fld [ ebx ]
fstp [ edi ]
jmp r-xdata
mov eax [ ebx ]
mov [ edi ] eax
mov [ edi ] edx
jmp r-xdata
sub_4075e0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx ecx
push esi
xor esi esi
cmp [ ebx + 0x8 ] esi
jbe r-xdata
mov [ ebx + 0x8 ] esi
jmp r-xdata
push edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] 0x0
inc esi
cmp esi [ ebx + 0x8 ]
jb r-xdata
movzx eax [ edi + 0x8 ]
cmp ax 0x3f
jle r-xdata
mov eax [ ebx + 0x4 ]
mov edi [ eax + esi * 4 ]
test edi edi
je r-xdata
mov [ ebx + 0x8 ] 0x0
pop edi
cmp ax 0x30
jl r-xdata
push edi
call j_sub_422ed5#3
add esp 0x4
mov ecx [ edi ]
mov [ ebp - 0x4 ] ecx
test ecx ecx
je r-xdata
mov eax [ ecx + 0xc ]
dec [ eax ]
mov eax [ ecx + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push ecx
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
push [ ecx ]
call j_sub_422ed5#3
mov eax [ ebp - 0x4 ]
push [ eax + 0xc ]
call j_sub_422ed5#3
mov ecx [ ebp - 0x4 ]
add esp 0x8
sub_40766f
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov eax [ edi + 0xc ]
cmp [ edi + 0x8 ] eax
je r-xdata
lea ecx [ eax + eax ]
push 0x8
pop eax
cmp ecx eax
jb r-xdata
push 0xc
call sub_420f36
mov esi eax
pop ecx
test esi esi
je r-xdata
xor ecx ecx
mov [ edi + 0xc ] eax
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
cmp [ edi + 0x4 ] 0x0
mov esi eax
pop ecx
je r-xdata
mov eax ecx
xor esi esi
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
mov cx [ ebx + 0x8 ]
mov [ esi + 0x8 ] cx
movzx eax [ esi + 0x8 ]
mov cx [ ebx + 0xa ]
mov [ esi + 0xa ] cx
cmp ax 0x3f
jle r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ edi + 0x8 ]
mov eax [ edi + 0x4 ]
mov [ eax + ecx * 4 ] esi
inc [ edi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
cmp ax 0x30
jl r-xdata
cmp ax 0x10
je r-xdata
shl eax 0x2
push eax
push [ edi + 0x4 ]
push esi
call sub_420fc0
push [ edi + 0x4 ]
call j_sub_422ed5#3
add esp 0x10
push 0x10
call sub_420f36
mov edx eax
pop ecx
test edx edx
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp ax 0x20
je r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebx ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
pop ebx
fld [ ebx ]
fstp [ esi ]
jmp r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov [ esi ] edx
jmp r-xdata
sub_40778f
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x2
push esi
mov esi ecx
je r-xdata
call sub_407776
test [ ebp + 0x8 ] 0x1
je r-xdata
push edi
push sub_407776
lea edi [ esi - 0x4 ]
push [ edi ]
push 0x10
push esi
call sub_4046d3
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
jmp r-xdata
push esi
call j_sub_422ed5#3
pop ecx
mov eax edi
pop edi
push edi
call j_sub_422ed5#3
pop ecx
pop esi
pop ebp
retn 0x4
sub_4077c7
push esi
mov esi ecx
xor ecx ecx
push 0x8
pop eax
push 0x2
and [ esi + 0x4 ] 0x0
pop edx
mov [ esi + 0x8 ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
xor ecx ecx
mov [ esi ] eax
push 0x4
mov [ eax ] cx
call sub_420f36
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi + 0xc ] eax
mov eax esi
pop esi
retn
sub_40780d
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov eax ecx
push esi
push edi
xor esi esi
mov [ ebp - 0x8 ] eax
mov edi [ eax + 0x4 ]
mov [ ebp - 0x10 ] edi
lea edx [ edi - 0x1 ]
test edi edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x4 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax edx
mov eax [ ebp - 0x8 ]
mov edi [ ebp + 0x8 ]
mov eax [ eax ]
movzx eax [ eax + edx * 2 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
movzx eax ax
inc ecx
jmp r-xdata
inc ebx
movzx eax [ edi + ebx * 2 ]
test ax ax
jne r-xdata
cmp [ ebp - 0xc ] ax
je r-xdata
mov edi [ ebp - 0x10 ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
dec edx
inc esi
cmp esi edi
jb r-xdata
xor ebx ebx
xor ecx ecx
test ax ax
je r-xdata
jmp r-xdata
sub_407886
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40780d
mov ecx esi
push 0xffffffff
cmp eax 0xffffffff
je r-xdata
push 0x0
jmp r-xdata
inc eax
push eax
call sub_407e8c
pop esi
pop ebp
retn 0x4
sub_4078ad
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi ecx
test esi esi
je r-xdata
push 0xffffffff
push 0x0
call sub_407e8c
jmp r-xdata
cmp esi 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
dec eax
mov [ ecx ] eax
mov ecx edi
call sub_408189
lea eax [ esi + 0x1 ]
push eax
call sub_408170
xor ecx ecx
mov [ edi + 0x8 ] eax
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
mov [ edi ] eax
jmp r-xdata
push esi
mov ecx edi
call sub_408087
mov eax [ ebp + 0xc ]
mov [ edi + 0x4 ] esi
add esi esi
push esi
lea eax [ ebx + eax * 2 ]
push eax
push [ edi ]
call sub_420fc0
mov eax [ edi ]
add esp 0xc
xor ecx ecx
mov [ esi + eax ] cx
sub_40793a
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push edi
push eax
push eax
mov edi [ ebx + 0x4 ]
inc edi
push edi
push [ ebx ]
push 0x1
push eax
call [ MultiByteToWideChar@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_407eec
jmp r-xdata
push esi
xor ecx ecx
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
push [ ebp + 0x8 ]
mov esi eax
push esi
push edi
push [ ebx ]
push 0x1
push 0x0
call [ MultiByteToWideChar@IAT ]
mov ecx [ ebp + 0xc ]
dec eax
push eax
push 0x0
push esi
call sub_4078ad
push esi
call j_sub_422ed5#3
pop ecx
pop esi
pop edi
pop ebx
pop ebp
retn 0x8
sub_4079ab
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi ecx
test esi esi
je r-xdata
push 0xffffffff
push 0x0
mov ecx edi
call sub_407e8c
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
cmp ebx [ ecx + 0x4 ]
jae r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp esi 0xffffffff
je r-xdata
mov esi [ ecx + 0x4 ]
sub esi ebx
jmp r-xdata
lea eax [ ebx + esi ]
cmp eax [ ecx + 0x4 ]
ja r-xdata
mov ecx [ edi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
dec eax
mov [ ecx ] eax
mov ecx edi
call sub_408189
lea eax [ esi + 0x1 ]
push eax
call sub_408170
xor ecx ecx
mov [ edi + 0x8 ] eax
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
mov [ edi ] eax
jmp r-xdata
push esi
mov ecx edi
call sub_408087
mov eax [ ebp + 0x8 ]
mov [ edi + 0x4 ] esi
add esi esi
push esi
mov eax [ eax ]
lea eax [ eax + ebx * 2 ]
push eax
push [ edi ]
call sub_420fc0
mov eax [ edi ]
add esp 0xc
xor ecx ecx
mov [ esi + eax ] cx
sub_407a24
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x2
push edi
je r-xdata
push esi
mov esi [ ebp + 0xc ]
xor edi edi
mov ecx edi
cmp esi [ ebp + 0x14 ]
ja r-xdata
cmp [ ebp + 0x18 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x1
jne r-xdata
test esi esi
je r-xdata
mov esi [ ebp + 0x14 ]
push 0x409
jmp r-xdata
push 0x400
sub edi ecx
pop esi
jns r-xdata
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
sub eax ebx
mov [ ebp + 0x14 ] eax
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
add eax 0xfffffffe
xor eax eax
test edi edi
setg al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
add ebx 0x2
test esi esi
jne r-xdata
push edx
call sub_424e08
movzx edi ax
movzx eax [ ebx ]
push eax
call sub_424e08
pop ecx
pop ecx
movzx ecx ax
cmp edi ecx
jne r-xdata
pop edi
pop ebp
retn 0x14
movzx edx [ eax + ebx ]
dec esi
cmp dx [ ebx ]
je r-xdata
pop ebx
mov eax [ ebp + 0x14 ]
sub_407a84
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi ecx
mov ecx [ edi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
dec eax
mov [ ecx ] eax
mov ecx edi
call sub_408189
mov eax [ edi + 0x4 ]
push 0x2
pop esi
add eax esi
push eax
call sub_408170
xor ecx ecx
mov [ edi + 0x8 ] eax
mul esi
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov ecx [ edi + 0x4 ]
mov esi eax
lea ecx [ ecx * 2 + 0x2 ]
push ecx
push [ edi ]
push esi
call sub_420fc0
jmp r-xdata
mov eax [ edi + 0x4 ]
push 0x2
pop esi
add eax esi
cmp [ edi + 0x8 ] eax
jb r-xdata
add esp 0x10
cmp eax 0x41c2
jae r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edi ]
mov ax [ ebp + 0x8 ]
mov [ ecx + edx * 2 ] ax
inc [ edi + 0x4 ]
xor edx edx
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
mov [ eax + ecx * 2 ] dx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp eax 0x2000000
jae r-xdata
add eax eax
cmp eax 0x8000000
jae r-xdata
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
test eax eax
jns r-xdata
mov [ edi ] esi
jmp r-xdata
mov ecx [ edi + 0x4 ]
lea ecx [ ecx * 2 + 0x2 ]
push ecx
push [ edi ]
push esi
call sub_420fc0
push [ edi ]
call j_sub_422ed5
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
test eax eax
jns r-xdata
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
test eax eax
jns r-xdata
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fmul [ r--data ]
jmp r-xdata
fadd [ r--data ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fmul [ r--data ]
fadd [ r--data ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fmul [ r--data ]
jmp r-xdata
fadd [ r--data ]
call sub_43b536
jmp r-xdata
push eax
mov [ edi + 0x8 ] eax
call sub_408170
xor ecx ecx
mov [ edi + 0x8 ] eax
mul esi
seto cl
neg ecx
or ecx eax
push ecx
call sub_420ee5
cmp [ edi ] 0x0
mov esi eax
pop ecx
je r-xdata
sub_407b20
push ebp
mov ebp esp
mov edx [ ecx + 0x4 ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi edx
jae r-xdata
lea eax [ eax + edx * 2 ]
jmp r-xdata
lea eax [ eax + esi * 2 ]
pop esi
pop ebp
retn 0x4
sub_407b52
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_407faf
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ esi ]
cmp edx ecx
jae r-xdata
lea eax [ eax + ecx * 2 ]
jmp r-xdata
lea eax [ eax + edx * 2 ]
pop esi
pop ebp
retn 0x4
sub_407b76
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
xor ecx ecx
push 0x2
pop edx
and [ esi + 0x4 ] 0x0
inc eax
mov [ esi + 0x8 ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
xor ecx ecx
mov [ esi ] eax
mov [ eax ] cx
mov ecx esi
call sub_408189
mov eax esi
pop esi
pop ebp
retn 0x4
sub_407bb1
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push edi
mov edi ecx
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop ebx
pop ebp
retn 0xc
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ edx + 0x4 ]
jae r-xdata
cmp ebx 0xffffffff
jne r-xdata
lea eax [ ecx + ebx ]
cmp eax [ edx + 0x4 ]
jbe r-xdata
mov ebx [ edx + 0x4 ]
sub ebx ecx
mov ecx [ edi + 0xc ]
push esi
xor esi esi
inc esi
mov eax [ ecx ]
cmp eax esi
jg r-xdata
jmp r-xdata
dec eax
push 0x4
mov [ ecx ] eax
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx edi
add eax ebx
push eax
call sub_407cb3
xor eax eax
jmp r-xdata
mov [ eax ] esi
mov [ edi + 0xc ] eax
mov eax [ edi + 0x4 ]
inc eax
add eax ebx
mov [ edi + 0x8 ] eax
je r-xdata
push 0x8
pop eax
jmp r-xdata
add eax 0x7
and eax 0xfffffff8
xor ecx ecx
mov [ edi + 0x8 ] eax
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov ecx [ edi + 0x4 ]
mov esi eax
lea ecx [ ecx * 2 + 0x2 ]
push ecx
push [ edi ]
push esi
call sub_420fc0
add esp 0x10
mov [ edi ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebx + ebx ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
lea eax [ eax + ecx * 2 ]
mov ecx [ edi + 0x4 ]
push eax
mov eax [ edi ]
lea eax [ eax + ecx * 2 ]
push eax
call sub_420fc0
add [ edi + 0x4 ] ebx
add esp 0xc
mov ecx [ edi + 0x4 ]
xor edx edx
mov eax [ edi ]
pop esi
mov [ eax + ecx * 2 ] dx
sub_407c8e
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi ecx
cmp esi [ ebp + 0x8 ]
je r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
call sub_457f03
push eax
mov ecx esi
call sub_4081a7
lea ecx [ ebp - 0x14 ]
call sub_405a64
mov eax esi
jmp r-xdata
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
call sub_407bb1
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_407cb3
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
inc eax
cmp [ esi + 0x8 ] eax
jb r-xdata
cmp eax 0x41c2
jae r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp eax 0x2000000
jae r-xdata
add eax eax
cmp eax 0x8000000
jae r-xdata
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
test eax eax
jns r-xdata
push 0x8
pop eax
jmp r-xdata
add eax 0x7
and eax 0xfffffff8
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
test eax eax
jns r-xdata
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
test eax eax
jns r-xdata
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fmul [ r--data ]
jmp r-xdata
fadd [ r--data ]
push edi
xor ecx ecx
mov [ esi + 0x8 ] eax
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420ee5
cmp [ esi ] 0x0
mov edi eax
pop ecx
je r-xdata
mov [ esi ] edi
pop edi
jmp r-xdata
mov ecx [ esi + 0x4 ]
lea ecx [ ecx * 2 + 0x2 ]
push ecx
push [ esi ]
push edi
call sub_420fc0
push [ esi ]
call j_sub_422ed5
add esp 0x10
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fmul [ r--data ]
fadd [ r--data ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fmul [ r--data ]
jmp r-xdata
fadd [ r--data ]
call sub_43b536
jmp r-xdata
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
sub_407d2c
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
push 0xffffffff
push 0x0
call sub_407e8c
jmp r-xdata
push [ ebp + 0x8 ]
call sub_422d7c
pop ecx
mov ecx [ esi + 0xc ]
mov [ esi + 0x4 ] eax
mov edx [ ecx ]
cmp edx 0x1
jg r-xdata
pop esi
pop ebp
retn 0x4
lea eax [ edx - 0x1 ]
mov [ ecx ] eax
mov ecx esi
call sub_408189
mov eax [ esi + 0x4 ]
inc eax
push eax
call sub_408170
xor ecx ecx
mov [ esi + 0x8 ] eax
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420ee5
pop ecx
mov [ esi ] eax
jmp r-xdata
push eax
mov ecx esi
call sub_408087
mov eax [ esi + 0x4 ]
lea eax [ eax * 2 + 0x2 ]
push eax
push [ ebp + 0x8 ]
push [ esi ]
call sub_420fc0
add esp 0xc
sub_407db0
push ebp
mov ebp esp
push ebx
push edi
push [ ebp + 0x8 ]
mov edi ecx
call sub_422d7c
mov ebx eax
mov eax [ edi + 0xc ]
pop ecx
mov ecx [ eax ]
cmp ecx 0x1
jg r-xdata
dec ecx
mov [ eax ] ecx
mov ecx edi
push esi
call sub_408189
mov eax [ edi + 0x4 ]
inc eax
add eax ebx
push eax
call sub_408170
xor ecx ecx
mov [ edi + 0x8 ] eax
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420ee5
mov ecx [ edi + 0x4 ]
mov esi eax
lea ecx [ ecx * 2 + 0x2 ]
push ecx
push [ edi ]
push esi
call sub_420fc0
add esp 0x10
mov [ edi ] esi
pop esi
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx edi
add eax ebx
push eax
call sub_407cb3
mov ecx [ edi + 0x4 ]
lea eax [ ebx + ebx ]
push eax
mov eax [ edi ]
push [ ebp + 0x8 ]
lea eax [ eax + ecx * 2 ]
push eax
call sub_420fc0
add [ edi + 0x4 ] ebx
add esp 0xc
mov eax [ edi ]
xor edx edx
mov ecx [ edi + 0x4 ]
mov [ eax + ecx * 2 ] dx
mov eax edi
pop edi
pop ebx
pop ebp
retn 0x8
sub_407e0b
push ebp
mov ebp esp
push edi
mov edi ecx
mov ecx [ edi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
dec eax
mov [ ecx ] eax
mov ecx edi
push esi
call sub_408189
push [ ebp + 0x8 ]
call sub_422d7c
pop ecx
mov ecx [ edi + 0x4 ]
inc ecx
add eax ecx
push eax
call sub_408170
xor ecx ecx
mov [ edi + 0x8 ] eax
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420ee5
mov ecx [ edi + 0x4 ]
mov esi eax
lea ecx [ ecx * 2 + 0x2 ]
push ecx
push [ edi ]
push esi
call sub_420fc0
add esp 0x10
mov [ edi ] esi
pop esi
jmp r-xdata
push ecx
push [ ebp + 0x8 ]
mov ecx edi
call sub_407db0
pop edi
pop ebp
retn 0x4
sub_407e2f
push ebp
mov ebp esp
push ecx
push ebx
mov eax ecx
push esi
push edi
xor esi esi
mov [ ebp - 0x4 ] eax
mov edi [ eax + 0x4 ]
lea edx [ edi - 0x1 ]
test edi edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
dec edx
inc esi
cmp esi edi
jb r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
movzx eax [ eax + edx * 2 ]
mov [ ebp + 0x8 ] eax
movzx eax [ ebx ]
xor ecx ecx
test ax ax
je r-xdata
mov eax edx
inc ecx
movzx eax [ ebx + ecx * 2 ]
test ax ax
jne r-xdata
cmp [ ebp + 0x8 ] ax
je r-xdata
movzx eax [ ebx ]
sub_407e8c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx ecx
test esi esi
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push edi
mov edi [ ebp + 0x8 ]
cmp edi [ ebx + 0x4 ]
jb r-xdata
cmp esi 0xffffffff
jne r-xdata
pop edi
lea eax [ edi + esi ]
cmp eax [ ebx + 0x4 ]
jbe r-xdata
mov esi [ ebx + 0x4 ]
sub esi edi
call sub_407faf
mov eax [ ebx + 0x4 ]
mov ecx [ ebx ]
sub eax edi
sub eax esi
lea eax [ eax * 2 + 0x2 ]
push eax
lea eax [ edi + esi ]
lea eax [ ecx + eax * 2 ]
push eax
lea eax [ ecx + edi * 2 ]
push eax
call sub_420fc0
add esp 0xc
sub [ ebx + 0x4 ] esi
jmp r-xdata
jmp r-xdata
sub_407eec
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
dec eax
push 0x4
mov [ ecx ] eax
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov eax [ esi ]
xor ecx ecx
and [ esi + 0x4 ] 0x0
pop esi
mov [ eax ] cx
retn
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
push 0x8
mov [ esi + 0xc ] eax
xor ecx ecx
pop eax
push 0x2
pop edx
mov [ esi + 0x8 ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420ee5
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_407f41
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov esi ecx
call sub_422d7c
pop ecx
mov [ esi + 0x4 ] eax
lea edi [ eax + 0x1 ]
test edi edi
je r-xdata
push 0x8
pop eax
jmp r-xdata
lea eax [ edi + 0x7 ]
and eax 0xfffffff8
xor ecx ecx
mov [ esi + 0x8 ] eax
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420ee5
lea ecx [ edi + edi ]
mov [ esi ] eax
push ecx
push [ ebp + 0x8 ]
push eax
call sub_420fc0
push 0x4
call sub_420f36
add esp 0x14
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi + 0xc ] eax
mov eax esi
pop edi
pop esi
pop ebp
retn 0x4
sub_407faf
push esi
push edi
mov edi ecx
xor esi esi
inc esi
mov ecx [ edi + 0xc ]
mov eax [ ecx ]
cmp eax esi
jg r-xdata
dec eax
push 0x4
mov [ ecx ] eax
call sub_420f36
pop ecx
test eax eax
je r-xdata
pop edi
pop esi
retn
xor eax eax
jmp r-xdata
mov [ eax ] esi
push ebx
mov ebx [ edi + 0x4 ]
mov [ edi + 0xc ] eax
inc ebx
je r-xdata
push 0x8
pop eax
jmp r-xdata
lea eax [ ebx + 0x7 ]
and eax 0xfffffff8
xor ecx ecx
mov [ edi + 0x8 ] eax
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420ee5
lea ecx [ ebx + ebx ]
mov esi eax
push ecx
push [ edi ]
push esi
call sub_420fc0
add esp 0x10
mov [ edi ] esi
pop ebx
jmp r-xdata
sub_408019
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ eax + 0x4 ]
mov edx [ ecx + 0x4 ]
test esi esi
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
test esi esi
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ecx ]
cmp esi edx
jae r-xdata
xor eax eax
inc eax
jmp r-xdata
pop esi
pop ebp
retn 0x4
mov edx [ eax ]
test esi esi
je r-xdata
mov esi [ eax ]
test edx edx
je r-xdata
xor eax eax
jmp r-xdata
mov ax [ edx ]
cmp ax [ ecx ]
jne r-xdata
mov ax [ esi ]
cmp ax [ ecx ]
jne r-xdata
sbb eax eax
and eax 0xfffffffe
inc eax
add edx 0x2
add ecx 0x2
dec esi
jne r-xdata
add esi 0x2
add ecx 0x2
dec edx
jne r-xdata
jmp r-xdata
sub_408087
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
lea eax [ edi + 0x1 ]
cmp [ esi + 0x8 ] eax
jb r-xdata
push eax
call sub_408170
cmp [ esi ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
xor ecx ecx
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
xor ecx ecx
mov [ esi ] eax
mov [ eax + edi * 2 ] cx
jmp r-xdata
push [ esi ]
call j_sub_422ed5#3
pop ecx
sub_4080d7
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
dec eax
mov [ ecx ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ecx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0xc ]
mov [ esi + 0xc ] eax
inc [ eax ]
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ ebx + 0x4 ]
mov [ esi + 0x4 ] edi
lea eax [ edi + 0x1 ]
cmp [ esi + 0x8 ] eax
jb r-xdata
pop esi
pop ebp
retn 0x4
push eax
call sub_408170
cmp [ esi ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ esi + 0x4 ]
lea eax [ eax * 2 + 0x2 ]
push eax
push [ ebx ]
push [ esi ]
call sub_420fc0
add esp 0xc
pop edi
pop ebx
mov eax [ esi + 0x8 ]
xor ecx ecx
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
xor ecx ecx
mov [ esi ] eax
mov [ eax + edi * 2 ] cx
jmp r-xdata
push [ esi ]
call j_sub_422ed5#3
pop ecx
sub_408189
push esi
push 0x4
mov esi ecx
call sub_420f36
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi + 0xc ] eax
pop esi
retn
sub_4081c1
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push edi
push eax
push eax
mov edi [ ebx + 0x4 ]
inc edi
push edi
push [ ebx ]
push eax
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_407eec
jmp r-xdata
push esi
xor ecx ecx
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
push [ ebp + 0x8 ]
mov esi eax
push esi
push edi
push [ ebx ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov ecx [ ebp + 0xc ]
dec eax
push eax
push 0x0
push esi
call sub_4078ad
push esi
call j_sub_422ed5#3
pop ecx
pop esi
pop edi
pop ebx
pop ebp
retn 0x8
sub_408238
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi ecx
mov eax [ esi + 0xc ]
cmp eax 0x6
jge r-xdata
xor ecx ecx
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov edx [ esi ]
pop ecx
xor ecx ecx
mov [ esi + 0x8 ] eax
cmp [ esi + 0xc ] ecx
jle r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
push edi
mov eax [ esi + 0x8 ]
mov [ eax + ecx * 4 ] edx
inc ecx
mov edx [ edx + 0x24 ]
cmp ecx [ esi + 0xc ]
jl r-xdata
pop edi
pop ebx
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edi * 4 ]
mov edx ecx
mov eax [ eax + edi * 4 + 0x4 ]
mov [ ebp - 0xc ] ecx
mov ecx eax
mov [ ebp - 0x8 ] eax
call sub_415f13
test al al
jne r-xdata
mov eax [ esi + 0x8 ]
mov bl 0x1
mov ecx [ ebp - 0x8 ]
mov [ eax + edi * 4 ] ecx
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ eax + edi * 4 + 0x4 ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
inc edi
dec eax
cmp edi eax
jl r-xdata
test bl bl
jne r-xdata
mov eax [ esi + 0xc ]
xor bl bl
xor edi edi
dec eax
test eax eax
jle r-xdata
sub_4082e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0xc ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
lea ecx [ ebp + 0x8 ]
call sub_407faf
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CharUpperBuffW@IAT ]
mov edi [ esi + 0x8 ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x14 ]
dec [ eax ]
mov eax [ ebp + 0x14 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi [ esi + 0xc ]
xor ebx ebx
dec esi
js r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push [ ebp + 0x8 ]
call j_sub_422ed5#3
push [ ebp + 0x14 ]
call j_sub_422ed5#3
add esp 0x8
lea eax [ esi + ebx ]
cdq
lea ecx [ ebp + 0x8 ]
sub eax edx
sar eax 0x1
mov [ ebp - 0x4 ] eax
push [ edi + eax * 4 ]
call sub_408019
test eax eax
js r-xdata
mov esi [ edi + 0x4 ]
cmp esi [ ebp + 0xc ]
jne r-xdata
mov esi [ ebp - 0x4 ]
dec esi
jmp r-xdata
jle r-xdata
mov edi [ edi + 0x24 ]
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edi ]
test esi esi
je r-xdata
cmp ebx esi
jle r-xdata
cmp ebx esi
jg r-xdata
mov ebx [ ebp - 0x4 ]
inc ebx
mov cx [ eax ]
cmp cx [ edx ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ edi + eax * 4 ]
jmp r-xdata
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
sub_4083a8
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x8 ] 0x0
jne r-xdata
pop edi
pop ebp
retn 0x4
push esi
push 0x28
call sub_420f36
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
jmp r-xdata
mov ecx esi
call sub_4077c7
push [ ebp + 0x8 ]
mov ecx esi
call sub_4206fc
mov ecx esi
call sub_407faf
push [ esi + 0x4 ]
push [ esi ]
call [ CharUpperBuffW@IAT ]
and [ esi + 0x24 ] 0x0
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov [ edi ] esi
jmp r-xdata
mov [ eax + 0x24 ] esi
inc [ edi + 0xc ]
mov [ edi + 0x4 ] esi
pop esi
sub_408408
push edi
mov edi ecx
cmp [ edi + 0x8 ] 0x0
jne r-xdata
push [ edi + 0x8 ]
call j_sub_422ed5#3
pop ecx
jmp r-xdata
mov edi [ edi ]
test edi edi
jne r-xdata
push esi
pop edi
retn
mov esi [ edi + 0x24 ]
mov ecx edi
call sub_405a64
push edi
call j_sub_422ed5#3
mov edi esi
pop ecx
test esi esi
jne r-xdata
pop esi
pop edi
retn
sub_40843f
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
cmp [ esi + 0x9 ] 0x0
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ ecx + 0x8 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ esi + 0x4 ] edi
mov [ esi + 0x9 ] 0x0
jmp r-xdata
push ecx
call sub_4564fa
mov [ esi + 0x9 ] 0x1
jmp r-xdata
push ebx
mov ebx [ esi + 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
dec [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov [ esi + 0x4 ] eax
mov [ esi + 0x9 ] 0x0
pop ebx
mov edi [ ebx ]
test edi edi
je r-xdata
push ebx
call j_sub_422ed5#3
mov eax [ ebp - 0x8 ]
pop ecx
cmp [ edi + 0x18 ] 0x0
je r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
push [ edi + 0x18 ]
mov ecx ebx
call sub_408720
push [ edi + 0x1c ]
mov ecx ebx
call sub_408720
jmp r-xdata
cmp [ edi + 0x10 ] 0x0
jne r-xdata
mov ecx edi
call sub_405a64
push edi
call j_sub_422ed5#3
pop ecx
mov eax [ edi + 0x14 ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov ecx eax
call sub_409df0
push [ ebp - 0x4 ]
call j_sub_422ed5#3
pop ecx
sub_4084dc
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
cmp [ edi + 0x9 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ edi + 0x4 ]
mov eax [ edx ]
mov [ esi ] eax
mov eax [ edx + 0x4 ]
mov [ esi + 0x4 ] eax
mov [ edi + 0x9 ] 0x0
jmp r-xdata
push 0xc
call sub_420f36
mov esi eax
pop ecx
test esi esi
je r-xdata
inc [ edi ]
pop edi
pop esi
pop ebp
retn 0x4
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
and [ esi ] 0x0
mov ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] ecx
test ecx ecx
js r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x8 ] eax
mov [ edi + 0x4 ] esi
and [ esi + 0x4 ] 0x0
jmp r-xdata
push [ eax ]
mov ecx esi
push esi
call sub_408794
sub_408530
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
push esi
jmp r-xdata
push [ rw-data ]
mov ecx rw-data
call sub_408720
push [ rw-data ]
mov ecx rw-data
call sub_408720
retn
mov esi [ ecx + 0x8 ]
push ecx
call sub_4564fa
mov ecx esi
test esi esi
jne r-xdata
pop esi
jmp r-xdata
sub_408561
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
and [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] eax
test eax eax
js r-xdata
and [ ebp - 0x8 ] 0x0
jmp r-xdata
lea eax [ ebp - 0xc ]
mov ecx rw-data
push eax
call sub_4084dc
push [ ebp - 0xc ]
lea ecx [ ebp - 0xc ]
call sub_408720
mov esp ebp
pop ebp
retn 0x4
sub_40859a
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
xor ecx ecx
sub eax ecx
je r-xdata
cmp [ rw-data ] ecx
jne r-xdata
dec eax
jne r-xdata
push [ ebp + 0xc ]
mov ecx rw-data
push [ ebp + 0x8 ]
call sub_4564ed
mov ecx eax
call sub_408bb2
mov ecx eax
test ecx ecx
jne r-xdata
mov ecx rw-data
dec eax
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] ecx
jne r-xdata
mov eax ecx
pop ebp
retn 0xc
jmp r-xdata
call sub_408bb2
mov ecx eax
sub eax 0xe
jne r-xdata
mov ecx rw-data
call sub_4564ed
mov ecx eax
jmp r-xdata
mov ecx rw-data
mov ecx rw-data
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jmp r-xdata
sub_408620
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub eax 0x0
je r-xdata
cmp [ rw-data ] 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
dec eax
jne r-xdata
mov ecx rw-data
call sub_4564ed
mov ecx eax
jmp r-xdata
mov ecx rw-data
jmp r-xdata
dec eax
jne r-xdata
cmp [ rw-data ] eax
je r-xdata
call sub_408b13
sub eax 0xe
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jmp r-xdata
cmp [ rw-data ] al
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx rw-data
or eax 0x400
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x8 ]
jmp r-xdata
mov ecx [ rw-data ]
pop ebp
retn 0x10
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
sub_4086a2
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
sub eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
dec eax
jne r-xdata
mov ecx rw-data
jmp r-xdata
push [ ebp + 0xc ]
mov ecx rw-data
push [ ebp + 0x8 ]
call sub_4564ed
mov ecx eax
call sub_408bb2
test eax eax
jne r-xdata
dec eax
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_408bb2
jmp r-xdata
xor ebx ebx
inc ebx
jmp r-xdata
sub eax 0xe
jne r-xdata
push esi
cmp [ rw-data ] bl
jne r-xdata
test eax eax
je r-xdata
mov al bl
pop ebx
pop ebp
retn 0xc
mov ecx rw-data
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
jmp r-xdata
mov esi [ rw-data ]
push esi
push [ ebp + 0x8 ]
call sub_4088a0
test al al
je r-xdata
mov edx ebx
jmp r-xdata
mov edx [ esi ]
pop esi
test edx edx
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ edx + 0x10 ]
and ecx 0xff00
mov [ eax ] ecx
mov eax [ edx + 0x14 ]
sub_408720
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x18 ] 0x0
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
push [ esi + 0x18 ]
call sub_408720
push [ esi + 0x1c ]
mov ecx edi
call sub_408720
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
mov edi [ esi + 0x14 ]
test edi edi
je r-xdata
push esi
call j_sub_422ed5#3
pop ecx
push [ esi ]
call j_sub_422ed5#3
push [ esi + 0xc ]
call j_sub_422ed5#3
pop ecx
pop ecx
mov ecx edi
call sub_409df0
push edi
call j_sub_422ed5#3
pop ecx
sub_408794
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x4 ] ecx
push 0x20
call sub_420f36
mov edi eax
pop ecx
test edi edi
je r-xdata
and [ esi ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor edi edi
mov ecx edi
call sub_4077c7
jmp r-xdata
test ebx ebx
jne r-xdata
push ebx
mov ecx edi
mov [ esi ] edi
call sub_4081a7
mov ecx [ esi ]
mov eax [ ebx + 0x10 ]
mov [ ecx + 0x10 ] eax
mov ecx [ esi ]
mov eax [ ebx + 0x14 ]
mov [ ecx + 0x14 ] eax
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
and [ eax + 0x18 ] 0x0
mov eax [ esi ]
and [ eax + 0x1c ] 0x0
mov eax [ esi ]
push [ ebx + 0x18 ]
add eax 0x18
push eax
call sub_408794
mov esi [ esi ]
mov ebx [ ebx + 0x1c ]
add esi 0x1c
jmp r-xdata
sub_4087c0
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] 0x0
mov [ eax + 0x18 ] 0x0
pop ebp
retn 0x8
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_4088a0
mov ebx [ ebp + 0xc ]
mov esi [ edi + 0x4 ]
mov ecx [ ebx + 0x4 ]
test esi esi
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ ebx + 0x18 ]
mov eax edi
mov [ edi + 0x1c ] ebx
mov [ edi + 0x18 ] ecx
pop edi
pop esi
mov [ ebx + 0x18 ] 0x0
pop ebx
pop ebp
retn 0x8
test esi esi
jne r-xdata
mov edx [ ebx ]
cmp esi ecx
jb r-xdata
mov eax [ ebx + 0x1c ]
mov [ edi + 0x1c ] eax
mov eax edi
mov [ edi + 0x18 ] ebx
mov [ ebx + 0x1c ] 0x0
jmp r-xdata
mov esi [ edi ]
test ecx ecx
je r-xdata
mov eax [ edi ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ax [ esi ]
cmp ax [ edx ]
jne r-xdata
mov cx [ eax ]
cmp cx [ edx ]
jne r-xdata
test eax eax
js r-xdata
movzx eax [ esi ]
cmp ax [ edx ]
add esi 0x2
add edx 0x2
dec ecx
jne r-xdata
sbb eax eax
and eax 0xfffffffe
inc eax
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
jle r-xdata
jmp r-xdata
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4088a0
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
cmp [ esi ] 0x0
je r-xdata
xor al al
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ rw-data ]
mov [ ebp + 0xf ] 0x0
test al 0x1
je r-xdata
or eax 0x1
mov ecx rw-data
mov [ rw-data ] eax
call sub_4077c7
push sub_43b73a
call sub_422ec0
add esp 0x4
jmp r-xdata
push ebx
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ ebp - 0xc ] rw-data
mov [ ebp - 0x8 ] rw-data
push edi
test ecx ecx
jne r-xdata
test ecx ecx
je r-xdata
mov edx [ edx + 0x18 ]
test edx edx
je r-xdata
test ebx ebx
jne r-xdata
cmp ebx ecx
jb r-xdata
mov bl [ ebp + 0xf ]
mov eax [ edx + 0x4 ]
cmp ebx eax
ja r-xdata
mov edx [ edx + 0x1c ]
test edx edx
jne r-xdata
jmp r-xdata
mov eax [ eax ]
mov edi [ edx ]
mov [ ebp - 0x4 ] eax
test ecx ecx
je r-xdata
mov ecx [ edx ]
mov edi ebx
mov edx [ eax ]
test edi edi
je r-xdata
mov ebx eax
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ edx ]
mov [ ebp - 0x4 ] ebx
mov edi [ edi ]
test ebx ebx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx ebx
ja r-xdata
xor eax eax
jmp r-xdata
mov ax [ eax ]
cmp ax [ edi ]
mov eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
mov ax [ edx ]
cmp ax [ ecx ]
jne r-xdata
cmp ebx eax
jae r-xdata
jmp r-xdata
mov ecx ebx
jmp r-xdata
mov edi [ eax ]
mov eax [ edx ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
test ecx ecx
je r-xdata
test eax eax
js r-xdata
add eax 0x2
add edi 0x2
mov [ ebp - 0x4 ] eax
dec ecx
jne r-xdata
mov ax [ eax ]
cmp ax [ edi ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
mov edx [ esi ]
sbb eax eax
and eax 0xfffffffe
inc eax
add edx 0x2
add ecx 0x2
dec edi
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi ]
mov [ edx + 0x18 ] eax
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ eax + 0x18 ]
mov [ esi ] eax
jmp r-xdata
jmp r-xdata
mov ax [ edi ]
cmp ax [ ecx ]
je r-xdata
cmp ecx ebx
jb r-xdata
mov ax [ eax ]
cmp ax [ edi ]
mov eax [ ebp - 0x4 ]
jne r-xdata
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esi ]
mov ebx [ eax + 0x4 ]
mov ecx [ edx + 0x4 ]
test ebx ebx
je r-xdata
mov ecx [ esi ]
mov eax [ edx + 0x1c ]
mov [ ecx + 0x18 ] eax
mov eax [ esi ]
mov [ edx + 0x1c ] eax
mov [ esi ] edx
cmp [ edx + 0x18 ] 0x0
je r-xdata
add edi 0x2
add ecx 0x2
dec [ ebp - 0x4 ]
jne r-xdata
jae r-xdata
mov ecx [ esi ]
mov eax [ edx + 0x18 ]
mov [ ecx + 0x1c ] eax
mov eax [ esi ]
mov [ edx + 0x18 ] eax
mov [ esi ] edx
cmp [ edx + 0x1c ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ esi ]
mov [ ecx + 0x1c ] eax
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ eax + 0x1c ]
mov [ esi ] eax
jmp r-xdata
mov ax [ eax ]
cmp ax [ edi ]
jae r-xdata
add eax 0x2
add edi 0x2
dec [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
jmp r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
pop edi
mov eax [ eax + 0x18 ]
mov [ ecx + 0x1c ] eax
mov al bl
mov ecx [ esi ]
pop ebx
mov ecx [ ecx + 0x1c ]
mov [ edx + 0x18 ] ecx
mov edx [ esi ]
mov ecx [ rw-data ]
mov [ edx + 0x18 ] ecx
mov edx [ esi ]
mov ecx [ rw-data ]
pop esi
mov [ edx + 0x1c ] ecx
mov esp ebp
pop ebp
retn 0x8
sub_408af5
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
push [ ebp + 0x8 ]
call sub_4088a0
test al al
jne r-xdata
mov eax [ esi ]
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
sub_408b13
push ebp
mov ebp esp
push ebx
push esi
mov ebx ecx
push ebx
push [ ebp + 0x8 ]
call sub_4088a0
test al al
jne r-xdata
mov esi [ ebx ]
jmp r-xdata
xor esi esi
test esi esi
jne r-xdata
push [ ebp + 0xc ]
mov ecx [ esi + 0x14 ]
call sub_409e9c
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
push 0x20
and edi 0xff00
call sub_420f36
mov esi eax
pop ecx
test esi esi
je r-xdata
mov eax [ esi + 0x14 ]
pop esi
pop ebx
pop ebp
retn 0xc
xor esi esi
jmp r-xdata
mov ecx esi
call sub_4077c7
cmp esi [ ebp + 0x8 ]
je r-xdata
push 0x10
mov [ esi + 0x10 ] edi
call sub_420f36
mov edi eax
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call sub_4080d7
xor edi edi
jmp r-xdata
push [ ebp + 0xc ]
and [ edi + 0x8 ] 0x0
mov ecx edi
call sub_409ac0
and [ esi + 0x1c ] 0x0
and [ esi + 0x18 ] 0x0
mov [ esi + 0x14 ] edi
push [ ebx ]
push esi
call sub_4087c0
mov [ ebx ] eax
pop edi
sub_408bb2
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_408af5
test eax eax
jne r-xdata
mov edx [ eax + 0x10 ]
mov ecx [ ebp + 0xc ]
and edx 0xff00
mov eax [ eax + 0x14 ]
mov [ ecx ] edx
jmp r-xdata
pop ebp
retn 0x8
sub_408bd8
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] esi
mov edx [ edi + 0xc ]
mov eax edx
mov ecx [ esi + 0xc ]
shl eax 0x4
add eax ecx
mov eax [ eax * 4 + r--data ]
dec eax
cmp eax 0xd
ja r-xdata
xor al al
jmp r-xdata
jmp [ eax * 4 + jump_table_408c98 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx edi
call sub_409c9c
mov ecx esi
mov ebx eax
call sub_409c9c
mov ecx edi
call sub_409c53
mov ecx esi
mov dl al
call sub_409c53
xor ecx ecx
cmp dl al
sete cl
mov al cl
jmp r-xdata
mov ecx edi
call sub_409cf8
fstp [ ebp - 0x8 ]
mov ecx esi
call sub_409cf8
fld [ ebp - 0x8 ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov ecx esi
call sub_409997
mov esi [ esi + 0x8 ]
mov ecx edi
call sub_409997
mov ecx [ edi + 0x8 ]
push 0x0
push esi
call sub_407a68
mov ecx edi
call sub_409d46
mov ecx [ ebp - 0x4 ]
mov esi eax
mov edi edx
call sub_409d46
cmp esi eax
jne r-xdata
mov ecx edi
call sub_4687da
mov ecx esi
mov ebx eax
call sub_4687da
jmp r-xdata
mov ecx edi
call sub_4687b0
mov ecx esi
mov edx eax
call sub_4687b0
jmp r-xdata
mov ecx edi
call sub_4679b4
mov ecx esi
mov edx eax
call sub_4679b4
xor ebx ebx
cmp edx 0x8
jne r-xdata
cmp edx 0xb
jne r-xdata
lea eax [ ebp - 0x40 ]
mov ecx esi
push eax
call sub_4679c3
mov esi eax
mov ecx edi
lea eax [ ebp - 0x30 ]
push eax
call sub_4679c3
mov edx esi
mov ecx eax
call sub_415ee9
lea ecx [ ebp - 0x30 ]
mov bl al
call sub_405a64
lea ecx [ ebp - 0x40 ]
call sub_405a64
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp edi edx
jne r-xdata
sub ebx eax
neg ebx
sbb ebx ebx
inc ebx
sub edx eax
neg edx
sbb edx edx
inc edx
mov al dl
jmp r-xdata
mov eax ebx
mov eax [ edi ]
jmp r-xdata
xor ebx ebx
lea ecx [ ebp - 0x20 ]
push edi
mov [ ebp - 0x18 ] ebx
call sub_409ac0
push esi
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x8 ] ebx
call sub_409ac0
lea ecx [ ebp - 0x20 ]
call sub_46785c
lea ecx [ ebp - 0x10 ]
call sub_46785c
lea ecx [ ebp - 0x20 ]
call sub_468801
lea ecx [ ebp - 0x10 ]
mov edx eax
call sub_468801
cmp edx eax
jne r-xdata
cmp ecx edx
jne r-xdata
mov al bl
jmp r-xdata
cmp ecx 0x8
jne r-xdata
test eax eax
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_409a20
lea ecx [ ebp - 0x20 ]
call sub_409a20
jmp r-xdata
push edx
push ecx
call sub_4687be
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_4687be
push eax
call sub_421604
add esp 0xc
neg eax
sbb al al
inc al
mov bl al
mov ecx edi
call sub_468801
mov ecx esi
mov edx eax
call sub_468801
cmp edx eax
jne r-xdata
mov eax ebx
mov eax [ esi ]
jmp r-xdata
mov ecx edi
call sub_468801
push eax
push ecx
mov ecx esi
call sub_4687be
pop ecx
push eax
mov ecx edi
call sub_4687be
push eax
call sub_421604
add esp 0xc
jmp r-xdata
cmp ecx 0x8
jne r-xdata
test eax eax
je r-xdata
neg eax
sbb eax eax
inc eax
jmp r-xdata
mov eax ebx
mov eax [ esi ]
jmp r-xdata
mov ecx ebx
mov ecx [ edi ]
jmp r-xdata
cmp edx 0x8
jne r-xdata
xor ebx ebx
inc ebx
jmp r-xdata
mov edx eax
call sub_467691
test al al
je r-xdata
sub_408cd0
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx ecx
push esi
push edi
mov edi edx
mov eax [ ebx + 0xc ]
shl eax 0x4
add eax [ edi + 0xc ]
mov eax [ eax * 4 + r--data ]
dec eax
je r-xdata
call sub_409c9c
mov ecx edi
mov esi eax
call sub_409c9c
xor ecx ecx
cmp esi eax
setl al
jmp r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_409d46
mov ecx edi
mov ebx eax
mov esi edx
call sub_409d46
cmp esi edx
jg r-xdata
dec eax
jne r-xdata
xor eax eax
jl r-xdata
dec eax
je r-xdata
call sub_409cf8
fstp [ ebp - 0x8 ]
mov ecx edi
call sub_409cf8
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x41
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp ebx eax
jb r-xdata
mov ecx edi
call sub_409997
mov esi [ edi + 0x8 ]
mov ecx ebx
call sub_409997
mov ecx [ ebx + 0x8 ]
push 0x0
push esi
call sub_407a68
xor ecx ecx
test eax eax
sets al
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
call sub_4687da
mov ecx edi
mov esi eax
call sub_4687da
cmp esi eax
sbb eax eax
neg eax
jmp r-xdata
dec eax
dec eax
je r-xdata
xor al al
jmp r-xdata
sub_408d3b
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx ecx
push 0x214
mov [ ebp - 0x4 ] ebx
call sub_420f36
mov edi [ ebp + 0x8 ]
mov esi eax
pop ecx
mov edx [ edi ]
mov edx [ edx + 0x8 ]
mov [ esi + 0x8 ] edx
xor edx edx
mov ecx [ edi ]
mov ecx [ ecx + 0x10c ]
mov [ esi + 0x10c ] ecx
test ecx ecx
jle r-xdata
mov eax [ edi ]
xor edx edx
mov eax [ eax + 0x210 ]
mov [ esi + 0x210 ] eax
test eax eax
jle r-xdata
push 0xc
pop ecx
push 0x4
pop ebx
mov eax [ edi ]
xor ecx ecx
push 0x4
pop edx
mov edi [ eax + 0x4 ]
mov [ ebx ] esi
mov eax [ esi + 0x8 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
mov ecx [ ebx ]
xor esi esi
mov [ ecx + 0x4 ] eax
mov eax [ ebx ]
cmp [ eax + 0x8 ] esi
jle r-xdata
push 0x4
mov ecx 0x110
pop ebx
mov eax [ edi ]
inc edx
mov eax [ ecx + eax ]
mov [ ecx + esi ] eax
add ecx ebx
cmp edx [ esi + 0x10c ]
jl r-xdata
mov ebx [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ edi + esi * 4 ] 0x0
je r-xdata
mov eax [ edi ]
inc edx
mov eax [ ecx + eax ]
mov [ ecx + esi ] eax
add ecx ebx
cmp edx [ esi + 0x210 ]
jl r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
and [ eax + esi * 4 ] 0x0
jmp r-xdata
push 0x10
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov eax [ ebx ]
inc esi
cmp esi [ eax + 0x8 ]
jl r-xdata
xor ecx ecx
jmp r-xdata
push [ edi + esi * 4 ]
mov ecx eax
call sub_409dcb
mov ecx eax
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov [ eax + esi * 4 ] ecx
sub_408e34
push esi
mov esi ecx
call sub_409382
test al al
je r-xdata
mov eax [ esi ]
dec [ eax ]
jmp r-xdata
mov ecx esi
call sub_4092c0
mov eax [ esi ]
and [ eax + 0x210 ] 0x0
push [ esi ]
call j_sub_422ed5#3
pop ecx
push esi
call j_sub_422ed5#3
pop ecx
mov eax esi
pop esi
retn 0x4
sub_408e6b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
js r-xdata
mov eax [ ecx ]
mov eax [ eax + 0x10c ]
xor eax eax
jmp r-xdata
mov ecx [ ecx ]
cmp eax [ ecx + 0x10c ]
jg r-xdata
pop ebp
retn 0x4
mov eax [ ecx + eax * 4 + 0x8 ]
jmp r-xdata
sub_408ea0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
cmp esi 0x2
je r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
cmp esi 0x4
je r-xdata
cmp eax 0x7fffffff
je r-xdata
mov eax [ ebx ]
cmp esi 0x2
jne r-xdata
mov ebx [ ebp + 0x8 ]
dec eax
mov [ ecx ] eax
mov ecx ebx
push ebx
call sub_408d3b
mov eax [ ebx ]
mov [ eax ] 0x1
jmp r-xdata
mov [ eax ] 0x7fffffff
jmp r-xdata
cmp [ eax ] 0x7fffffff
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x210 ] 0x0
jle r-xdata
mov edi [ ebx ]
mov [ ebp + 0xc ] edi
mov edx [ edi + 0x8 ]
test edx edx
je r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
mov [ eax ] 0x1
jmp r-xdata
lea edi [ ebp + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ edi + 0x10c ]
cmp esi [ edi + 0x210 ]
jne r-xdata
push [ edi + 0x4 ]
lea edi [ edi + 0x4 ]
mov ecx ebx
call sub_40928c
dec esi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor ecx ecx
test esi esi
jle r-xdata
xor ebx ebx
test esi esi
jle r-xdata
lea eax [ edi + 0x110 ]
jmp r-xdata
mov eax [ edi + 0x4 ]
cmp [ eax + ebx * 4 ] 0x0
je r-xdata
mov ecx 0x110
lea esp [ esp ]
mov edx [ eax ]
test edx edx
js r-xdata
push 0x10
call sub_420f36
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx + 0x4 ]
mov eax [ eax + ebx * 4 ]
mov edi [ ebp + 0x10 ]
mov eax edx
cdq
idiv [ edi ]
mov edi [ ebp + 0xc ]
mov edx eax
jmp r-xdata
mov eax 0x68db8bad
imul edx
sar edx 0xb
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp + 0x10 ] eax
mov edx eax
cmp edx [ eax - 0x104 ]
jge r-xdata
xor esi esi
jmp r-xdata
push 0x10
call sub_420f36
add esp 0x4
test eax eax
je r-xdata
mov eax [ ecx + edi ]
add ecx 0x4
imul eax edx
add ebx eax
dec esi
jne r-xdata
lea eax [ edi - 0x104 ]
add eax ecx
mov [ ebp + 0x10 ] eax
cmp [ eax ] 0x1388
jne r-xdata
test ebx ebx
js r-xdata
inc ecx
add eax 0x4
cmp ecx esi
jl r-xdata
mov eax [ ebp + 0x8 ]
pop edi
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + ebx * 4 ] esi
mov ecx [ eax ]
pop esi
mov eax [ ecx + 0x4 ]
mov eax [ eax + ebx * 4 ]
pop ebx
pop ebp
retn
xor eax eax
jmp r-xdata
push r--data
mov ecx eax
call sub_407f41
mov edx [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] 0x4
sub_409040
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ esi ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
cmp eax 0x7fffffff
je r-xdata
mov eax [ esi ]
cmp [ eax ] 0x7fffffff
je r-xdata
dec eax
mov [ ecx ] eax
mov ecx esi
push esi
call sub_408d3b
mov eax [ esi ]
mov [ eax ] 0x1
jmp r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov [ eax ] 0x1
mov ecx [ esi ]
mov ebx [ ecx + 0x8 ]
test ebx ebx
je r-xdata
mov eax [ esi ]
mov [ eax + 0x210 ] 0x0
jle r-xdata
xor eax eax
jmp r-xdata
mov edi [ ecx + 0x10c ]
cmp edi [ ecx + 0x210 ]
jne r-xdata
lea edx [ ebp + 0x10 ]
nop
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
test edi edi
jle r-xdata
dec ecx
jne r-xdata
mov eax [ edx ]
mov [ edi + ebx * 4 + 0x110 ] eax
mov eax [ esi ]
inc [ eax + 0x210 ]
xor edx edx
mov [ ebp + 0x10 ] edx
test edi edi
jle r-xdata
lea eax [ ecx + 0x110 ]
nop
mov edi [ esi ]
lea edx [ edx + 0x4 ]
mov ebx [ edi + 0x210 ]
cmp ebx 0x40
jge r-xdata
mov eax [ ecx + 0x4 ]
lea ebx [ edx * 4 ]
mov ecx [ ebx + eax ]
test ecx ecx
jne r-xdata
mov eax 0x110
mov [ ebp + 0x8 ] eax
mov esi [ eax ]
cmp esi [ eax - 0x104 ]
mov esi [ ebp + 0x8 ]
jge r-xdata
push [ ebp + 0xc ]
call sub_409e9c
jmp r-xdata
push 0x10
call sub_420f36
mov edi eax
add esp 0x4
test edi edi
je r-xdata
mov eax ebx
mov ebx [ ebp - 0x4 ]
cdq
idiv [ ebx ]
mov ebx eax
jmp r-xdata
mov eax 0x20b3dd41
imul ebx
sar edx 0x7
mov ebx edx
shr ebx 0x1f
add ebx edx
inc edx
add eax 0x4
cmp edx edi
jl r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov eax [ ebx + eax ]
xor edi edi
jmp r-xdata
push [ ebp + 0xc ]
mov ecx edi
mov [ edi + 0x8 ] 0x0
call sub_409ac0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov eax [ eax + ecx ]
imul eax ebx
add edx eax
mov eax [ ebp + 0x8 ]
add eax 0x4
mov [ ebp + 0x10 ] edx
mov [ ebp + 0x8 ] eax
dec edi
jne r-xdata
add eax 0xfffffefc
add eax ecx
mov [ ebp - 0x4 ] eax
cmp [ eax ] 0x3ea
jne r-xdata
test edx edx
js r-xdata
cmp [ eax ] 0x0
jl r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebx + eax ] edi
sub_4091b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx esi
push edi
call sub_4092c0
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
mov ecx [ esi ]
xor edi edi
mov eax [ ecx + 0x210 ]
mov [ ecx + 0x10c ] eax
mov eax [ esi ]
mov [ eax + 0x8 ] 0x1
mov eax [ esi ]
cmp [ eax + 0x10c ] edi
jle r-xdata
mov eax [ esi ]
mov [ eax + 0x210 ] 0x0
jle r-xdata
mov eax [ esi ]
xor ecx ecx
mov edx 0x4
mov eax [ eax + 0x8 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov ecx [ esi ]
add esp 0x4
mov [ ecx + 0x4 ] eax
xor eax eax
mov ecx [ esi ]
cmp [ ecx + 0x8 ] eax
jle r-xdata
mov ecx eax
mov edx 0xc
push ebx
lea ebx [ ebp + 0xc ]
mov al 0x1
lea esp [ esp ]
xor al al
jmp r-xdata
inc edi
add edx 0x4
cmp edi [ ecx + 0x10c ]
jl r-xdata
push [ ebx + 0x4 ]
lea ebx [ ebx + 0x4 ]
mov ecx esi
call sub_40928c
dec edi
jne r-xdata
pop ebx
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax * 4 ] 0x0
inc eax
mov ecx [ esi ]
cmp eax [ ecx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ edx + ecx + 0x104 ]
mov [ edx + ecx ] eax
mov ecx [ esi ]
mov eax [ edx + ecx ]
imul eax [ ecx + 0x8 ]
mov [ ecx + 0x8 ] eax
mov ecx [ esi ]
cmp [ ecx + 0x8 ] 0x1000000
jg r-xdata
sub_40928c
push ebp
mov ebp esp
mov edx [ ecx ]
push esi
mov esi [ edx + 0x210 ]
cmp esi 0x40
jge r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx + esi * 4 + 0x110 ] eax
mov eax [ ecx ]
inc [ eax + 0x210 ]
mov al 0x1
pop esi
pop ebp
retn 0x4
sub_4092c0
push ebx
push esi
mov ebx ecx
call sub_409382
test al al
mov eax [ ebx ]
je r-xdata
dec [ eax ]
push 0x214
call sub_420f36
mov ecx [ ebx ]
mov edx eax
add esp 0x4
xor esi esi
mov ecx [ ecx + 0x210 ]
mov [ edx + 0x210 ] ecx
test ecx ecx
jle r-xdata
xor esi esi
cmp [ eax + 0x8 ] esi
jg r-xdata
mov [ ebx ] edx
jmp r-xdata
mov ecx 0x110
push edi
mov eax [ ebx ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
mov eax [ ebx ]
pop esi
mov [ eax + 0x4 ] 0x0
mov eax [ ebx ]
mov [ eax ] 0x1
mov eax [ ebx ]
mov [ eax + 0x8 ] 0x0
mov eax [ ebx ]
pop ebx
mov [ eax + 0x10c ] 0x0
retn
mov eax [ ebx ]
lea ecx [ ecx + 0x4 ]
inc esi
mov eax [ ecx + eax - 0x4 ]
mov [ ecx + edx - 0x4 ] eax
cmp esi [ edx + 0x210 ]
jl r-xdata
mov ecx edi
call sub_409df0
push edi
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
inc esi
cmp esi [ eax + 0x8 ]
jl r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov edi [ eax + esi * 4 ]
test edi edi
jne r-xdata
pop edi
jmp r-xdata
sub_40933a
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
cmp [ eax ] 0x7fffffff
je r-xdata
push ecx
mov ecx esi
call sub_408d3b
mov eax [ esi ]
mov [ eax ] 0x1
jmp r-xdata
mov [ esi ] eax
inc [ eax ]
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40935c
push esi
push 0x214
mov esi ecx
call sub_420f36
mov [ esi ] eax
pop ecx
and [ eax + 0x4 ] 0x0
mov eax [ esi ]
and [ eax + 0x8 ] 0x0
mov eax [ esi ]
mov [ eax ] 0x1
mov eax esi
pop esi
retn
sub_409399
mov eax [ ecx + 0xc ]
dec eax
je r-xdata
cmp [ ecx ] 0x0
dec eax
je r-xdata
mov eax [ ecx ]
or eax [ ecx + 0x4 ]
jne r-xdata
dec eax
je r-xdata
mov al 0x1
retn
xor al al
retn
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
dec eax
je r-xdata
mov ecx [ ecx + 0x8 ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jmp sub_43f562
sub eax 0x3
je r-xdata
xor eax eax
cmp [ ecx ] eax
jmp sub_43f562
dec eax
dec eax
jne r-xdata
dec eax
dec eax
jne r-xdata
mov al [ ecx ]
retn
mov eax [ ecx ]
cmp [ eax ] 0x0
jmp r-xdata
setne al
retn
sub_4093dd
cmp [ ecx + 0xc ] 0x8
je r-xdata
mov eax [ ecx ]
test eax eax
je r-xdata
xor al al
retn
movzx ecx [ eax ]
cmp ecx 0x9
je r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp ecx 0xd
jne r-xdata
mov al 0x1
retn
sub_4093ea
push ebp
mov ebp esp
push esi
push 0x10
mov esi ecx
call sub_420f36
mov edx eax
pop ecx
test edx edx
je r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
mov [ esi + 0x8 ] edx
mov eax esi
mov [ esi + 0xc ] 0x4
pop esi
pop ebp
retn 0x4
sub_40942e
push esi
mov esi ecx
call sub_409a20
push 0x4
mov [ esi + 0xc ] 0x5
call sub_420f36
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov ecx eax
call sub_40935c
mov [ esi ] eax
pop esi
retn
sub_409458
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x5
je r-xdata
pop esi
retn
call sub_409a20
push 0x4
mov [ esi + 0xc ] 0x5
call sub_420f36
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov ecx eax
call sub_40935c
mov [ esi ] eax
sub_409488
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x4
je r-xdata
pop esi
retn
push edi
push 0x10
call sub_420f36
mov edi eax
pop ecx
test edi edi
je r-xdata
xor edi edi
jmp r-xdata
mov ecx esi
call sub_409997
mov edx [ esi + 0x8 ]
mov ecx [ edx ]
mov [ edi ] ecx
mov ecx [ edx + 0x4 ]
mov [ edi + 0x4 ] ecx
mov eax [ edx + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ edi + 0xc ] eax
inc [ eax ]
mov ecx esi
call sub_409a20
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] 0x4
pop edi
sub_4094da
push esi
mov esi ecx
call sub_409c42
test al al
jne r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x3
je r-xdata
mov ecx esi
call sub_409606
mov ecx esi
pop esi
test al al
jne sub_409593
jmp sub_409505
sub_409505
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x1
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0xc ] 0x2
je r-xdata
push ebx
push edi
call sub_409d46
mov ecx edx
xor ebx ebx
cmp [ esi + 0xc ] 0x4
mov edi eax
mov [ ebp - 0x4 ] ecx
jne r-xdata
cmp ecx 0xffffffff
jl r-xdata
mov edx [ esi + 0x8 ]
mov eax [ edx ]
cmp [ eax ] 0x30
je r-xdata
mov bl 0x1
jmp r-xdata
jg r-xdata
movzx eax [ eax + 0x2 ]
cmp eax 0x78
je r-xdata
mov ecx esi
call sub_409a20
mov [ esi ] edi
test bl bl
jne r-xdata
cmp ecx ebx
jl r-xdata
cmp edi 0x80000000
jb r-xdata
cmp [ edx + 0x4 ] 0x12
ja r-xdata
cmp eax 0x58
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0xc ] 0x2
jmp r-xdata
mov [ esi + 0xc ] 0x1
jg r-xdata
cmp [ edx + 0x4 ] 0xa
jmp r-xdata
pop edi
pop ebx
cmp edi 0x7fffffff
ja r-xdata
sub_409593
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x3
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
call sub_409cf8
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
sub_4095df
cmp [ ecx + 0xc ] 0x4
jne r-xdata
xor al al
retn
mov eax [ ecx + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0x30
je r-xdata
movzx eax [ eax + 0x2 ]
cmp eax 0x78
jne r-xdata
cmp eax 0x58
jne r-xdata
mov al 0x1
retn
jmp r-xdata
sub_409606
cmp [ ecx + 0xc ] 0x4
push esi
jne r-xdata
xor al al
pop esi
retn
mov eax [ ecx + 0x8 ]
push r--data
mov esi [ eax ]
push esi
call sub_423afa
pop ecx
pop ecx
test eax eax
jne r-xdata
mov al 0x1
pop esi
retn
push r--data
push esi
call sub_423afa
pop ecx
pop ecx
test eax eax
jne r-xdata
sub_40963c
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
dec eax
jne r-xdata
dec eax
je r-xdata
mov edi [ ebp + 0x8 ]
push ebx
cmp [ edi + 0xc ] 0x1
je r-xdata
mov edi [ ebp + 0x8 ]
cmp [ edi + 0xc ] 0x1
je r-xdata
dec eax
je r-xdata
mov eax [ esi ]
imul [ edi ]
mov ecx [ esi ]
imul ecx [ edi ]
mov ebx eax
mov edi edx
mov eax ecx
cdq
cmp eax ebx
jne r-xdata
push 0x2
pop ebx
cmp [ edi + 0xc ] ebx
je r-xdata
mov ecx edi
call sub_409d46
push [ esi + 0x4 ]
push [ esi ]
push edx
push eax
call sub_436130
mov [ esi ] eax
mov [ esi + 0x4 ] edx
jmp r-xdata
cmp [ edi + 0xc ] 0x2
jne r-xdata
mov ecx [ ebp + 0x8 ]
jmp r-xdata
dec eax
je r-xdata
mov [ esi + 0xc ] 0x2
mov [ esi ] ebx
mov [ esi + 0x4 ] edi
jmp r-xdata
cmp edx edi
jne r-xdata
push [ edi + 0x4 ]
mov eax [ esi ]
push [ edi ]
cdq
push edx
push eax
call sub_436130
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov [ esi + 0xc ] ebx
jmp r-xdata
call sub_409593
mov ecx edi
call sub_409cf8
fmul [ esi ]
fstp [ esi ]
mov ecx esi
call sub_40997f
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_409593
mov ecx edi
call sub_409cf8
fmul [ esi ]
fstp [ esi ]
jmp r-xdata
call sub_4094da
push [ ebp + 0x8 ]
mov ecx esi
call sub_40963c
jmp r-xdata
sub eax 0x5
je r-xdata
pop ebx
mov [ esi ] ecx
jmp r-xdata
call sub_409593
dec eax
dec eax
jne r-xdata
sub_409687
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi + 0xc ]
cmp eax 0x7
jg r-xdata
sub eax 0x9
je r-xdata
je r-xdata
call sub_409593
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ edi ]
cmp [ ecx + 0xc ] 0x1
jne r-xdata
dec eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
jmp r-xdata
call sub_4094da
push [ ebp + 0x8 ]
mov ecx edi
call sub_409687
jmp r-xdata
dec eax
jne r-xdata
call sub_409d46
call sub_409c9c
jmp r-xdata
dec eax
je r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0xc ] 0x1
je r-xdata
call sub_409cf8
fsubr [ edi ]
fstp [ edi ]
mov ecx edi
call sub_40997f
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub esi eax
mov [ edi ] esi
jmp r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0xc ] 0x1
je r-xdata
dec eax
jne r-xdata
mov eax [ edi ]
sub eax [ esi ]
mov [ ebp + 0x8 ] eax
mov eax [ esi ]
cdq
mov ecx eax
mov esi edx
mov eax [ edi ]
cdq
sub eax ecx
mov ebx edx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
sbb ebx esi
mov esi [ ebp - 0x4 ]
mov eax ecx
cdq
cmp eax esi
jne r-xdata
push 0x2
pop ecx
cmp [ esi + 0xc ] ecx
je r-xdata
mov ecx esi
call sub_409d46
sub [ edi ] eax
sbb [ edi + 0x4 ] edx
jmp r-xdata
cmp [ esi + 0xc ] 0x2
jne r-xdata
dec eax
je r-xdata
mov [ edi + 0xc ] 0x2
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
jmp r-xdata
cmp edx ebx
jne r-xdata
mov eax [ edi ]
cdq
sub eax [ esi ]
sbb edx [ esi + 0x4 ]
mov [ edi ] eax
mov [ edi + 0x4 ] edx
mov [ edi + 0xc ] ecx
jmp r-xdata
mov ecx edi
call sub_409593
mov ecx esi
jmp r-xdata
mov [ edi ] ecx
jmp r-xdata
sub_409700
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx ecx
push esi
push edi
mov eax [ ebx + 0xc ]
cmp eax 0x4
je r-xdata
cmp eax 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
push [ ebp + 0x8 ]
mov ecx ebx
call sub_409700
cmp eax 0x2
je r-xdata
dec eax
cmp eax 0xa
ja r-xdata
mov ecx [ ebp + 0x8 ]
call sub_409cf8
fadd [ ebx ]
fstp [ ebx ]
jmp r-xdata
push ecx
call sub_407b3d
mov [ ebx + 0x8 ] 0x0
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp eax 0x3
je r-xdata
mov ecx [ ebx + 0x8 ]
test ecx ecx
jne r-xdata
movzx eax [ eax + lookup_table_409858 ]
jmp [ eax * 4 + jump_table_409840 ]
cmp eax 0x4
jne r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
cmp eax 0x1
jne r-xdata
call sub_409593
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
cmp eax 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0xc ] 0xb
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebx ]
cmp [ ecx + 0xc ] 0x1
jne r-xdata
mov ecx ebx
call sub_409505
jmp r-xdata
mov eax [ ebx + 0x8 ]
push r--data
mov esi [ eax ]
push esi
call sub_423afa
add esp 0x8
test eax eax
je r-xdata
cmp eax 0x2
je r-xdata
mov ecx [ esi ]
mov eax [ ebx ]
lea esi [ eax + ecx ]
cdq
mov [ ebp + 0x8 ] eax
mov edi edx
mov eax ecx
mov ecx [ ebp + 0x8 ]
cdq
add ecx eax
mov eax esi
adc edi edx
cdq
cmp eax ecx
jne r-xdata
mov ecx esi
call sub_409d46
add [ ebx ] eax
adc [ ebx + 0x4 ] edx
jmp r-xdata
cmp eax 0x2
jne r-xdata
call sub_409593
mov ecx esi
call sub_409cf8
fadd [ ebx ]
fstp [ ebx ]
jmp r-xdata
mov ecx esi
call sub_468801
mov ecx [ ebx ]
mov edi eax
add edi [ ecx ]
push edi
call sub_420f36
mov ecx [ ebx ]
mov esi eax
push [ ecx ]
push [ ecx + 0x4 ]
push esi
call sub_420fc0
mov ecx [ ebp + 0x8 ]
add esp 0x10
call sub_468801
push eax
call sub_4687be
push eax
mov eax [ ebx ]
mov eax [ eax ]
add eax esi
push eax
call sub_420fc0
mov eax [ ebx ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
mov eax [ ebx ]
add esp 0x10
mov [ eax + 0x4 ] esi
mov eax [ ebx ]
mov [ eax ] edi
jmp r-xdata
call sub_409d46
call sub_409c9c
jmp r-xdata
push r--data
push esi
call sub_423afa
add esp 0x8
test eax eax
jne r-xdata
cmp [ ebx + 0xc ] 0x3
je r-xdata
mov eax [ ebx ]
cdq
add eax [ esi ]
adc edx [ esi + 0x4 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebx + 0xc ] 0x2
mov [ ebx ] ecx
mov [ ebx + 0x4 ] edi
jmp r-xdata
cmp edx edi
jne r-xdata
add esi eax
mov [ ebx ] esi
jmp r-xdata
mov ecx ebx
call sub_409cf8
mov ecx ebx
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
fstp [ ebx ]
mov [ ebx + 0xc ] 0x3
mov [ ebx ] esi
jmp r-xdata
sub_409890
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edi
call sub_409458
mov esi [ edi ]
mov ecx esi
call sub_4092c0
mov eax [ esi ]
mov ebx [ ebp + 0x8 ]
mov [ eax + 0x210 ] 0x0
mov ebx [ ebx + 0x8 ]
mov [ ebp - 0xc ] ebx
test ebx ebx
je r-xdata
mov eax edi
jmp r-xdata
push ebx
push 0x1
push [ edi ]
call sub_4091b0
add esp 0xc
xor esi esi
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push 0x10
mov eax [ eax + 0x4 ]
mov ebx [ eax + esi * 4 ]
call sub_420f36
mov edi eax
add esp 0x4
test edi edi
je r-xdata
xor edi edi
jmp r-xdata
mov ecx [ ebx ]
mov [ edi ] ecx
mov ecx [ ebx + 0x4 ]
mov [ edi + 0x4 ] ecx
mov ecx [ ebx + 0x8 ]
mov [ edi + 0x8 ] ecx
mov eax [ ebx + 0xc ]
mov [ edi + 0xc ] eax
inc [ eax ]
mov ebx [ ebp - 0x8 ]
lea eax [ ebp - 0x1c ]
push esi
push 0x1
push eax
push [ ebx ]
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] 0x4
call sub_409040
add esp 0x10
test edi edi
je r-xdata
inc esi
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x1c ] 0x0
cmp esi [ ebp - 0xc ]
jb r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
push [ edi ]
call j_sub_422ed5#3
push [ edi + 0xc ]
call j_sub_422ed5#3
add esp 0x8
jmp r-xdata
push edi
call j_sub_422ed5#3
add esp 0x4
mov [ ebp - 0x14 ] 0x0
sub_409997
push ebp
mov ebp esp
sub esp 0x94
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi + 0x8 ] edi
je r-xdata
mov eax [ esi + 0xc ]
dec eax
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
dec eax
je r-xdata
push 0xa
lea eax [ ebp - 0x94 ]
push eax
push [ esi ]
call sub_423640
push 0xa
lea eax [ ebp - 0x94 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_423610
jmp r-xdata
dec eax
jne r-xdata
mov [ esi + 0x8 ] edi
jmp r-xdata
lea ecx [ ebp - 0x94 ]
push ecx
mov ecx eax
call sub_407f41
mov edi eax
add esp 0x10
jmp r-xdata
sub eax 0x4
je r-xdata
fld [ esi ]
lea eax [ ebp - 0x94 ]
push ecx
push ecx
fstp [ esp ]
push r--data
push eax
call sub_423818
push 0x10
call sub_420f36
pop ecx
test eax eax
je r-xdata
push [ esi ]
lea eax [ ebp - 0x94 ]
push r--data
push eax
call sub_423818
jmp r-xdata
push 0x2
pop edx
sub eax edx
je r-xdata
add esp 0xc
cmp [ esi ] 0x0
lea eax [ ebp - 0x94 ]
je r-xdata
dec eax
je r-xdata
push r--data
push r--data
jmp r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0xc ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x14 ]
mov [ ebp - 0x4 ] eax
push edx
mov [ ebp - 0x10 ] edx
inc [ eax ]
lea eax [ ebp - 0x94 ]
push eax
call sub_422f3c
pop ecx
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_405a64
jmp r-xdata
dec eax
je r-xdata
push eax
call sub_422f3c
pop ecx
pop ecx
jmp r-xdata
mov eax [ esi ]
xor ecx ecx
push ebx
mov eax [ eax ]
lea eax [ eax * 4 + 0x6 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
mov ecx [ esi ]
mov ebx eax
cmp [ ecx ] edi
je r-xdata
xor eax eax
mov [ ebp - 0x94 ] ax
jmp r-xdata
xor eax eax
mov [ ebx ] ax
push ecx
push [ ecx ]
mov ecx [ ecx + 0x4 ]
mov edx ebx
call sub_4655b2
pop ecx
pop ecx
jmp r-xdata
push ebx
mov [ esi + 0x8 ] edi
call j_sub_422ed5#3
pop ecx
pop ebx
jmp r-xdata
push ebx
mov ecx eax
call sub_407f41
mov edi eax
push 0x10
call sub_420f36
pop ecx
test eax eax
je r-xdata
sub_409a20
push esi
mov esi ecx
push edi
mov edi [ esi + 0x8 ]
test edi edi
jne r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jge r-xdata
push [ edi ]
call j_sub_422ed5#3
push [ edi + 0xc ]
call j_sub_422ed5#3
add esp 0x8
jmp r-xdata
push edi
call j_sub_422ed5#3
add esp 0x4
mov [ esi + 0x8 ] 0x0
mov eax [ esi + 0xc ]
cmp eax 0x5
jl r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
pop edi
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x0
pop esi
retn
jmp [ eax * 4 + jump_table_409a8c ]
mov eax [ esi ]
test eax eax
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
push [ esi ]
call j_sub_422ed5#3
add esp 0x8
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
push eax
call [ VariantClear@IAT ]
push [ esi ]
jmp r-xdata
lea ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
call sub_408e34
jmp r-xdata
push ecx
call sub_4571d0
jmp r-xdata
push ecx
call sub_4571e5
jmp r-xdata
mov ecx edi
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
call sub_405a64
push edi
sub_409ac0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
cmp eax 0x1
jne r-xdata
dec eax
cmp eax 0xe
ja r-xdata
mov eax [ edi ]
pop edi
pop esi
pop ebp
retn 0x4
jmp [ eax * 4 + r-xdata ]
fld [ edi ]
pop edi
fstp [ esi ]
pop esi
pop ebp
retn 0x4
push 0x10
call sub_420f36
mov edx eax
add esp 0x4
test edx edx
je r-xdata
mov al [ edi ]
pop edi
mov [ esi ] al
pop esi
pop ebp
retn 0x4
push 0x4
call sub_420f36
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
push 0x18
call sub_420f36
add esp 0x4
test eax eax
je r-xdata
push 0x8
call sub_420f36
mov [ esi ] eax
add esp 0x4
mov ecx [ edi ]
mov ecx [ ecx ]
mov [ eax ] ecx
mov eax [ esi ]
mov eax [ eax ]
test eax eax
je r-xdata
push 0x14
call sub_420f36
add esp 0x4
test eax eax
je r-xdata
push 0x18
call sub_420f36
add esp 0x4
test eax eax
je r-xdata
push ebx
push 0x14
call sub_420f36
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
xor edx edx
jmp r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
xor eax eax
jmp r-xdata
push [ edi ]
mov ecx eax
call sub_40933a
pop edi
mov [ esi ] eax
pop esi
pop ebp
retn 0x4
push 0x10
call sub_420f36
add esp 0x4
mov [ esi ] eax
push eax
call [ VariantInit@IAT ]
push [ edi ]
push [ esi ]
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
push [ edi ]
mov ecx eax
call sub_466994
jmp r-xdata
push 0x1
call sub_420f36
mov ecx [ esi ]
add esp 0x4
mov [ ecx + 0x4 ] eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ eax ] 0x0
jmp r-xdata
push eax
call sub_420f36
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov ecx [ esi ]
mov eax [ edi ]
push [ ecx ]
push [ eax + 0x4 ]
push [ ecx + 0x4 ]
call sub_420fc0
add esp 0x10
jmp r-xdata
push [ edi ]
mov ecx eax
call sub_465a7c
jmp r-xdata
push [ edi ]
mov ecx eax
call sub_4618a5
jmp r-xdata
xor ebx ebx
mov ecx ebx
call sub_4077c7
jmp r-xdata
pop edi
mov [ esi + 0x8 ] edx
pop esi
pop ebp
retn 0x4
mov [ esi ] eax
push [ esi ]
call [ VariantClear@IAT ]
push [ esi ]
call j_sub_422ed5#3
add esp 0x4
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] ebx
mov ecx ebx
push [ edi ]
call sub_4081a7
mov eax [ edi ]
mov ecx [ esi ]
pop ebx
mov eax [ eax + 0x10 ]
mov [ ecx + 0x10 ] eax
jmp r-xdata
sub_409b9c
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x4
je r-xdata
push [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
call sub_4081a7
jmp r-xdata
call sub_409a20
push 0x10
mov [ esi + 0xc ] 0x4
call sub_420f36
mov edx eax
pop ecx
test edx edx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
xor edx edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
mov [ esi + 0x8 ] edx
sub_409bf8
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x4
je r-xdata
cmp [ ebp + 0x8 ] 0x0
mov ecx [ esi + 0x8 ]
je r-xdata
call sub_409a20
push 0x10
mov [ esi + 0xc ] 0x4
call sub_420f36
cmp [ ebp + 0x8 ] 0x0
pop ecx
je r-xdata
call sub_407eec
jmp r-xdata
push [ ebp + 0x8 ]
call sub_407d2c
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
xor eax eax
jmp r-xdata
mov ecx eax
call sub_4077c7
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx eax
call sub_407f41
mov [ esi + 0x8 ] eax
sub_409c53
mov eax [ ecx + 0xc ]
dec eax
je r-xdata
cmp [ ecx ] 0x0
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov eax [ ecx ]
or eax [ ecx + 0x4 ]
jmp r-xdata
dec eax
je r-xdata
xor al al
retn
mov al 0x1
retn
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
dec eax
je r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jmp r-xdata
sub eax 0x3
je r-xdata
xor eax eax
cmp [ ecx ] eax
setne al
retn
dec eax
dec eax
jne r-xdata
dec eax
dec eax
jne r-xdata
mov al [ ecx ]
retn
mov eax [ ecx ]
cmp [ eax ] 0x0
sub_409c9c
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx + 0xc ]
cmp eax 0x7
jg r-xdata
sub eax 0x9
je r-xdata
je r-xdata
xor eax eax
cmp [ ecx ] al
setne al
jmp r-xdata
dec eax
je r-xdata
mov eax [ ecx ]
dec eax
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
jmp r-xdata
dec eax
jne r-xdata
dec eax
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ecx ]
cmp [ ecx ] 0x8
jg r-xdata
dec eax
jne r-xdata
mov edx [ ecx ]
lea eax [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
push eax
call sub_465630
jmp r-xdata
dec eax
jne r-xdata
fld [ ecx ]
call sub_43b500
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
call sub_4095c1
test al al
je r-xdata
push edx
call sub_42370a
pop ecx
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x10
lea edx [ ebp - 0x8 ]
call sub_41fb3b
sub_409cf8
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
sub esp 0x10
dec eax
je r-xdata
fild [ ecx ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
jmp r-xdata
dec eax
je r-xdata
mov esp ebp
pop ebp
retn
fild [ ecx ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
jmp r-xdata
dec eax
jne r-xdata
dec eax
jne r-xdata
fld [ ecx ]
sub eax 0x3
je r-xdata
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
call sub_4095c1
test al al
jne r-xdata
fild [ ecx ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
jmp r-xdata
dec eax
dec eax
je r-xdata
lea ecx [ edx + 0x4 ]
push 0x8
lea edx [ ebp - 0x10 ]
call sub_41fb3b
fild [ ebp - 0x10 ]
pop ecx
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
jmp r-xdata
push edx
call sub_423eb9
pop ecx
jmp r-xdata
cmp [ ecx ] 0x0
je r-xdata
dec eax
jne r-xdata
fldz
jmp r-xdata
fld1
jmp r-xdata
mov eax [ ecx ]
fild [ eax + 0x4 ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
jmp r-xdata
sub_409d46
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
mov eax [ esi + 0xc ]
dec eax
je r-xdata
mov eax [ esi ]
dec eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov edx [ esi + 0x4 ]
jmp r-xdata
dec eax
je r-xdata
fld [ esi ]
sub esp 0x10
fstp [ esp + 0x8 ]
call sub_41fc14
add esp 0x10
jmp r-xdata
dec eax
jne r-xdata
sub eax 0x3
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ edx ]
cmp [ eax ] 0x30
je r-xdata
dec eax
dec eax
je r-xdata
movzx ecx [ eax + 0x2 ]
cmp ecx 0x78
je r-xdata
push eax
call sub_423713
pop ecx
xor eax eax
cmp [ esi ] al
je r-xdata
dec eax
dec eax
jne r-xdata
cmp [ edx + 0x4 ] 0x12
ja r-xdata
cmp ecx 0x58
jne r-xdata
xor edx edx
jmp r-xdata
inc eax
xor eax eax
jmp r-xdata
mov ecx [ esi ]
cmp [ ecx ] 0x4
jg r-xdata
push 0x10
lea ecx [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
call sub_41fb3b
mov eax [ esi + 0x8 ]
pop ecx
cmp [ eax + 0x4 ] 0xa
mov eax [ ebp - 0x8 ]
jbe r-xdata
jmp r-xdata
cmp [ ecx ] 0x8
jg r-xdata
mov edx [ ecx ]
lea eax [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
push eax
call sub_465630
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
cdq
jmp r-xdata
mov edx [ ebp - 0x4 ]
jmp r-xdata
mov edx [ ecx ]
lea eax [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
push eax
call sub_465630
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
sub_409dae
push ebp
mov ebp esp
cmp [ ecx + 0xc ] 0xa
je r-xdata
mov eax [ ecx ]
mov eax [ eax ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_409df0
push esi
mov esi ecx
push edi
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jge r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
pop edi
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x0
pop esi
retn
push edi
call j_sub_422ed5#3
add esp 0x4
mov [ esi + 0x8 ] 0x0
push [ edi ]
call j_sub_422ed5#3
push [ edi + 0xc ]
call j_sub_422ed5#3
add esp 0x8
jmp [ eax * 4 + jump_table_409e70 ]
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
push [ esi ]
call j_sub_422ed5#3
add esp 0x8
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
push ecx
call sub_408e34
pop edi
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x0
pop esi
retn
push eax
call [ VariantClear@IAT ]
push [ esi ]
jmp r-xdata
lea ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
call sub_4571d0
jmp r-xdata
push ecx
call sub_4571e5
jmp r-xdata
mov ecx edi
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
call sub_405a64
push edi
sub_409e9c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ esi + 0xc ] 0x4
je r-xdata
cmp [ ebx + 0xc ] 0x4
jne r-xdata
push edi
mov edi [ esi + 0x8 ]
test edi edi
jne r-xdata
push [ ebx + 0x8 ]
mov ecx [ esi + 0x8 ]
call sub_4081a7
jmp r-xdata
mov ecx edi
call sub_405a64
push edi
call j_sub_422ed5#3
and [ esi + 0x8 ] 0x0
pop ecx
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax 0xb
jg r-xdata
cmp eax 0xc
je r-xdata
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
jle r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
push [ esi ]
call j_sub_422ed5#3
pop ecx
sub eax 0x5
je r-xdata
and [ esi ] 0x0
mov ecx esi
push ebx
mov [ esi + 0xc ] 0x1
call sub_409ac0
pop edi
push ecx
call sub_4571d0
jmp r-xdata
cmp eax 0xe
jle r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
sub eax 0x3
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
cmp eax 0xf
jne r-xdata
push ecx
call sub_408e34
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
dec eax
dec eax
je r-xdata
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
push [ esi ]
call [ VariantClear@IAT ]
push [ esi ]
mov edi [ esi ]
test edi edi
je r-xdata
mov ecx edi
push ecx
call sub_4571e5
jmp r-xdata
pop ecx
jmp r-xdata
lea ecx [ edi + 0x8 ]
jmp r-xdata
call j_sub_422ed5#3
jmp r-xdata
call sub_405a64
push edi
jmp r-xdata
sub_409f3a
push ebp
mov ebp esp
push esi
push 0x10
mov esi ecx
call sub_420f36
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx eax
call sub_407f41
mov [ esi + 0x8 ] eax
mov eax esi
mov [ esi + 0xc ] 0x4
pop esi
pop ebp
retn 0x4
sub_409f6b
push ebp
mov ebp esp
sub esp 0x18
and [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x14 ]
and [ ebp - 0xc ] 0x0
push esi
or esi 0xffffffff
mov [ ebp - 0x8 ] 0x1
push esi
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a000
test eax eax
js r-xdata
lea ecx [ ebp - 0x14 ]
call sub_409a20
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0xc
lea ecx [ ebp - 0x14 ]
call sub_409399
test al al
mov eax [ ebp + 0x10 ]
setne cl
xor esi esi
mov [ eax ] cl
sub_409fbd
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
add ecx 0x134
push esi
sub esp 0x10
mov esi esp
mov eax [ edx ]
mov [ esi ] eax
mov eax [ edx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ edx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ esi + 0xc ] eax
inc [ eax ]
call sub_4082e0
pop esi
pop ebp
retn 0x4
sub_40a000
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x118
mov eax [ rw-data ]
mov [ esp + 0x4 ] ecx
push esi
push edi
test al 0x1
je r-xdata
or eax 0x1
mov [ rw-data ] 0x0
push sub_43b76c
mov [ rw-data ] eax
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
call sub_422ec0
add esp 0x4
jmp r-xdata
mov edi [ ebp + 0x10 ]
xor eax eax
push 0x8
mov [ esp + 0x5c ] 0x1
mov [ esp + 0x24 ] edi
mov [ esp + 0x28 ] 0x0
mov [ esp + 0xc ] eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x1
call sub_420f36
mov edx eax
mov [ esp + 0x20 ] eax
add esp 0x4
test edx edx
je r-xdata
xor edx edx
mov [ esp + 0x1c ] edx
jmp r-xdata
mov [ edx ] 0x14
mov esi [ ebp + 0xc ]
mov [ edx + 0x4 ] 0x0
mov [ esp + 0x54 ] edx
mov edx [ ebp + 0x8 ]
mov ecx [ esi ]
mov [ esp + 0x50 ] 0x1
mov [ esp + 0x10 ] 0x17
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
mov [ esp + 0x5c ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov esi 0x14
mov esi [ edx + 0x4 ]
mov [ esp + 0x40 ] esi
mov edx [ esi + ecx * 4 ]
movzx eax [ edx + 0x8 ]
cmp ax 0x7f
je r-xdata
mov eax [ edx + 0x4 ]
jmp r-xdata
mov eax edx
cwde
cmp eax 0x33
je r-xdata
imul eax [ eax ] 0x15
movzx eax [ eax + esi + r--data ]
cmp eax 0x3
jne r-xdata
cmp eax 0x6
ja r-xdata
cmp [ esp + 0x24 ] 0x1
jne r-xdata
mov esi [ esp + 0x24 ]
mov [ esp + 0x10 ] 0x16
test esi esi
jne r-xdata
cmp eax 0x4f
je r-xdata
cmp esi 0x7
je r-xdata
jmp [ eax * 4 + jump_table_40b808 ]
push [ esp + 0x5c ]
push 0x6e
jmp r-xdata
mov eax [ esp + 0x28 ]
xor edi edi
mov [ esp + 0x8 ] eax
cmp [ esp + 0x2d ] 0x0
jne r-xdata
cmp edi rw-data
je r-xdata
cmp eax 0x5
je r-xdata
mov esi [ esp + 0x24 ]
test esi esi
je r-xdata
cmp esi 0x8
je r-xdata
test cl cl
jne r-xdata
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x54 ]
push eax
call sub_40ba60
test eax eax
js r-xdata
test cl cl
je r-xdata
push [ esp + 0x5c ]
push 0x6b
jmp r-xdata
push [ esp + 0x5c ]
push 0x6c
jmp r-xdata
push [ esp + 0x5c ]
push 0x6d
mov ecx [ esp + 0x14 ]
call sub_469ed4
mov edx [ esp + 0x28 ]
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edi [ esp + 0x8 ]
test edx edx
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax rw-data
je r-xdata
push 0x18
call sub_420f36
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax [ esp + 0x8 ]
cmp [ edi + 0xc ] 0x4
je r-xdata
mov esi [ esp + 0x24 ]
mov [ esp + 0x10 ] 0x16
test esi esi
jne r-xdata
cmp eax 0x58
ja r-xdata
mov esi [ ebp + 0xc ]
mov eax [ esp + 0x28 ]
mov edi [ esp + 0x20 ]
mov [ esp + 0x8 ] eax
mov [ ebp + 0x10 ] edi
cmp esi 0x1
jne r-xdata
mov [ edx ] esi
mov [ esp + 0x59 ] 0x0
jmp r-xdata
push 0x8
call sub_420f36
mov ecx eax
add esp 0x4
test ecx ecx
je r-xdata
push [ esp + 0x5c ]
mov eax [ esp + 0x54 ]
mov [ esp + 0x1c ] eax
jmp r-xdata
mov eax edx
jmp r-xdata
mov eax [ edx + 0x4 ]
mov ecx [ esp + 0x14 ]
call sub_469ed4
mov edx [ esp + 0x28 ]
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ esp + 0x1c ]
jmp r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x5
jge r-xdata
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
jmp r-xdata
mov [ esp + 0x2d ] 0x0
jmp r-xdata
cmp [ eax + 0xc ] 0x4
je r-xdata
xor esi esi
jmp r-xdata
push rw-data
mov ecx esi
mov [ esi + 0x8 ] 0x0
call sub_409ac0
cmp [ esp + 0x2d ] 0x0
jne r-xdata
mov [ esp + 0x4c ] edi
cmp [ rw-data ] 0x4
jne r-xdata
mov esi [ edi + 0x8 ]
test esi esi
jne r-xdata
cmp [ esp + 0x2d ] 0x0
jne r-xdata
cmp edi rw-data
je r-xdata
movzx eax [ eax + lookup_table_40b7ac ]
jmp [ eax * 4 + jump_table_40b740 ]
mov edx [ ebp + 0x8 ]
cmp [ esp + 0x2d ] 0x0
je r-xdata
mov eax edi
inc [ esp + 0x50 ]
xor ecx ecx
jmp r-xdata
mov [ ecx ] esi
mov [ esp + 0x18 ] edi
mov cl [ esp + 0x59 ]
mov edx [ esp + 0x1c ]
test cl cl
jne r-xdata
cmp [ eax ] 0x12
je r-xdata
test cl cl
je r-xdata
test cl cl
jne r-xdata
mov eax [ esp + 0x8 ]
or edi 0xffffffff
jmp r-xdata
push [ esi ]
call j_sub_422ed5#3
add esp 0x4
push [ esi + 0xc ]
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
push esi
call j_sub_422ed5#3
add esp 0x4
mov [ edi + 0x8 ] 0x0
jmp r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
push edi
mov [ edi + 0xc ] 0x1
mov [ edi ] 0x0
call j_sub_422ed5#3
mov eax [ esp + 0x7c ]
add esp 0x4
mov edi eax
test eax eax
jne r-xdata
mov esi [ edx + 0x4 ]
push edx
call j_sub_422ed5#3
add esp 0x4
mov edx esi
test esi esi
jne r-xdata
cmp [ rw-data ] 0x4
jne r-xdata
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x8 ]
mov [ esi + 0x10 ] eax
mov eax esi
mov esi [ esp + 0x24 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0x28 ] eax
jmp r-xdata
inc esi
mov [ esp + 0x24 ] esi
cmp esi 0x1
jne r-xdata
mov eax [ eax + 0x10 ]
jmp r-xdata
mov [ esp + 0x4c ] eax
jmp r-xdata
mov esi [ rw-data ]
mov [ esp + 0x34 ] esi
test esi esi
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x5
jge r-xdata
mov eax [ esp + 0x8 ]
cmp eax rw-data
je r-xdata
push 0x18
call sub_420f36
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov edx [ esp + 0x8 ]
cmp [ edi + 0xc ] 0x4
je r-xdata
mov eax [ edx ]
cmp eax 0x4
jl r-xdata
lea eax [ ecx + 0x1 ]
mov esi 0xd
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
test ecx ecx
je r-xdata
lea eax [ ecx + 0x1 ]
mov esi 0x13
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov esi 0x1
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
cmp [ esp + 0x24 ] 0x0
mov [ esp + 0x10 ] 0x16
je r-xdata
mov eax [ esp + 0x10 ]
cmp eax 0x16
jne r-xdata
lea eax [ ecx + 0x1 ]
xor esi esi
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
mov esi [ esp + 0x24 ]
mov [ esp + 0x10 ] 0x16
test esi esi
jne r-xdata
mov eax [ esp + 0x10 ]
cmp eax 0x16
jne r-xdata
lea eax [ ecx + 0x1 ]
mov esi 0xe
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov esi 0x9
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov esi 0x5
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov esi 0x2
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov esi 0x4
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov esi 0x3
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
push rw-data
lea ecx [ esp + 0x24 ]
mov [ esp + 0x14 ] 0x16
call sub_41fac4
mov esi [ ebp + 0xc ]
lea ecx [ esp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov edx [ esi ]
lea eax [ edx + 0x1 ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov edx [ eax + edx * 4 ]
call sub_41faad
mov ecx [ esp + 0xc ]
push eax
push [ edx ]
call sub_40c707
test eax eax
jns r-xdata
push rw-data
lea ecx [ esp + 0x24 ]
mov [ esp + 0x14 ] 0x16
call sub_41fac4
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
lea ecx [ esp + 0x20 ]
fld [ eax ]
fstp [ esp + 0x40 ]
call sub_41faad
mov esi eax
mov ecx esi
call sub_409a20
fld [ esp + 0x40 ]
mov edi [ esp + 0x20 ]
mov eax [ esp + 0x28 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
mov esi [ ebp + 0xc ]
mov [ ebp + 0x10 ] edi
mov [ esp + 0x8 ] eax
inc [ esi ]
jmp r-xdata
push rw-data
lea ecx [ esp + 0x24 ]
mov [ esp + 0x14 ] 0x16
call sub_41fac4
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
lea ecx [ esp + 0x20 ]
mov edi [ eax ]
mov eax [ eax + 0x4 ]
mov [ esp + 0x40 ] eax
call sub_41faad
mov esi eax
mov ecx esi
call sub_409a20
mov eax [ esp + 0x40 ]
mov [ esi + 0xc ] 0x2
mov [ esi ] edi
mov [ esi + 0x4 ] eax
mov esi [ ebp + 0xc ]
inc [ esi ]
jmp r-xdata
push rw-data
lea ecx [ esp + 0x24 ]
mov [ esp + 0x14 ] 0x16
call sub_41fac4
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ esi ]
mov edx [ edi + 0x4 ]
mov eax [ edx + ecx * 4 + 0x4 ]
cmp [ eax + 0x8 ] 0x47
je r-xdata
cmp [ esp + 0x24 ] 0x0
mov [ esp + 0x10 ] 0x16
je r-xdata
lea eax [ ecx + 0x1 ]
mov esi 0x6
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov esi 0xf
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
lea ecx [ esp + 0x50 ]
call sub_42001d
mov eax [ eax ]
cmp eax 0x14
je r-xdata
cmp [ esp + 0x24 ] 0x0
mov eax [ ebp + 0xc ]
je r-xdata
mov [ esp + 0x90 ] 0x0
mov [ esp + 0x98 ] 0x0
mov [ esp + 0x9c ] 0x1
mov [ esp + 0x17 ] 0x1
test ecx ecx
je r-xdata
push eax
lea ecx [ esp + 0xec ]
mov [ esp + 0xf4 ] 0x0
call sub_409ac0
lea ecx [ esp + 0xe8 ]
call sub_409399
mov ecx [ esp + 0x10 ]
test al al
jne r-xdata
mov eax [ eax + 0x10 ]
jmp r-xdata
cmp ecx 0x8
je r-xdata
cmp ecx 0x7
jne r-xdata
mov eax [ esp + 0x1c ]
mov [ ecx + 0x4 ] eax
mov eax ecx
mov [ esp + 0x1c ] eax
mov [ esp + 0x54 ] eax
cmp [ esp + 0x58 ] 0x0
je r-xdata
mov esi [ edx + 0x4 ]
push edx
call j_sub_422ed5#3
mov edx esi
add esp 0x4
mov esi [ esp + 0x10 ]
mov [ esp + 0x1c ] edx
mov [ esp + 0x54 ] edx
mov edx [ edx + 0x4 ]
jmp r-xdata
cmp [ edx ] 0x14
je r-xdata
jmp [ eax * 4 + jump_table_40b870 ]
mov esi [ edi + 0x8 ]
mov eax [ edi + 0x10 ]
mov [ esp + 0x78 ] eax
test esi esi
jne r-xdata
mov edi [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
jmp r-xdata
jmp r-xdata
push ecx
call sub_407b3d
mov eax [ esp + 0x8 ]
mov [ eax + 0x8 ] 0x0
jmp r-xdata
mov eax [ eax + 0xc ]
cmp eax 0x5
jge r-xdata
cmp [ rw-data ] 0x0
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov [ esp + 0x18 ] eax
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x79
mov ecx [ rw-data ]
mov [ esp + 0x17 ] 0x0
test cl 0x1
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov eax [ esp + 0x18 ]
jmp r-xdata
mov esi [ rw-data ]
push [ rw-data ]
mov ecx [ edi + 0x8 ]
call sub_4081a7
jmp r-xdata
push [ esi ]
call j_sub_422ed5#3
add esp 0x4
push [ esi + 0xc ]
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
push esi
call j_sub_422ed5#3
add esp 0x4
mov [ edi + 0x8 ] 0x0
jmp r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
push rw-data
mov ecx edi
mov [ edi + 0xc ] 0x1
mov [ edi ] 0x0
call sub_409ac0
mov esi [ esp + 0x24 ]
mov [ esp + 0x2d ] 0x0
jmp r-xdata
cmp [ eax + 0xc ] 0x4
je r-xdata
xor esi esi
jmp r-xdata
push rw-data
mov ecx esi
mov [ esi + 0x8 ] 0x0
call sub_409ac0
cmp [ esp + 0x2d ] 0x0
jne r-xdata
mov esi edi
cmp [ rw-data ] 0x4
jne r-xdata
mov esi [ edi + 0x8 ]
test esi esi
jne r-xdata
dec eax
cmp eax 0x29
ja r-xdata
cmp eax 0x27
jge r-xdata
mov [ esp + 0x10 ] esi
nop
lea eax [ ecx + 0x1 ]
mov esi 0x12
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ esi + ecx * 4 - 0x4 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x48
je r-xdata
push rw-data
mov ecx edi
call sub_409e9c
jmp r-xdata
cmp [ esp + 0x2d ] 0x0
jne r-xdata
cmp eax 0x13
je r-xdata
lea eax [ ecx + 0x1 ]
mov [ esp + 0x10 ] 0xb
mov ecx [ ebp + 0xc ]
mov esi [ esp + 0x10 ]
mov [ ecx ] eax
jmp r-xdata
cmp [ esp + 0x2d ] 0x0
je r-xdata
cmp edi rw-data
je r-xdata
cmp eax 0x13
je r-xdata
mov [ esp + 0x10 ] 0xc
mov edi [ esp + 0x20 ]
mov eax [ esp + 0x28 ]
mov [ ebp + 0x10 ] edi
mov [ esp + 0x8 ] eax
jmp r-xdata
jmp r-xdata
lea eax [ esp + 0x7f ]
push eax
lea ecx [ esp + 0x24 ]
call sub_41faad
push eax
push esi
push edi
mov edi [ esp + 0x1c ]
mov ecx edi
push 0x0
call sub_40fe40
test eax eax
js r-xdata
mov eax [ edx + ecx * 4 ]
mov ecx [ eax ]
mov eax [ ecx ]
mov [ esp + 0xa8 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0xac ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0xb0 ] eax
mov eax [ ecx + 0xc ]
mov ecx [ esp + 0xc ]
mov [ esp + 0xb4 ] eax
inc [ eax ]
lea eax [ esp + 0xa8 ]
push eax
call sub_409fbd
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
lea eax [ esp + 0xc8 ]
mov [ esp + 0xc8 ] 0x0
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0xd4 ] 0x0
mov [ esp + 0xd8 ] 0x1
call sub_41faad
mov esi [ ebp + 0xc ]
mov ecx [ esp + 0x10 ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_40ca20
test eax eax
js r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
cmp eax 0x12
je r-xdata
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x6e
jmp r-xdata
mov esi [ ebp + 0xc ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
mov ecx 0x1
mov eax [ ebp + 0x8 ]
mov [ esp + 0x10 ] 0x16
mov edi [ eax + 0x4 ]
lea ecx [ esp + 0x90 ]
call sub_456241
test al al
jne r-xdata
mov eax [ esi + ecx * 4 - 0x4 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x48
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b9f2
test eax eax
js r-xdata
test al al
jne r-xdata
lea ecx [ esp + 0xe8 ]
call sub_409a20
mov esi [ ebp + 0xc ]
mov esi [ edx + 0x4 ]
push edx
call j_sub_422ed5#3
mov eax esi
mov [ esp + 0x5d ] 0x0
mov esi [ esp + 0x14 ]
add esp 0x4
mov [ esp + 0x1c ] eax
mov [ esp + 0x54 ] eax
jmp r-xdata
mov [ esp + 0x59 ] 0x1
push [ esp + 0x5c ]
push 0x6d
jmp r-xdata
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x54 ]
push eax
call sub_40ba60
test eax eax
js r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ edi ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
push [ edi ]
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
push [ rw-data ]
mov ecx [ eax + 0x8 ]
call sub_4081a7
jmp r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
mov eax [ esp + 0x8 ]
mov ecx eax
push rw-data
mov [ eax + 0xc ] 0x1
mov [ eax ] 0x0
call sub_409ac0
or ecx 0x1
mov [ rw-data ] ecx
mov ecx rw-data
call sub_4077c7
push sub_43b73a
call sub_422ec0
mov esi [ rw-data ]
add esp 0x4
mov eax [ esp + 0x18 ]
mov [ esp + 0x34 ] esi
jmp r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ esp + 0x38 ] rw-data
mov [ esp + 0x60 ] rw-data
lea ebx [ ebx ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x17 ] 0x0
test cl 0x1
je r-xdata
jmp [ eax * 4 + jump_table_440eeb ]
cmp [ rw-data ] 0x4
jne r-xdata
mov ecx eax
call sub_409a20
mov ecx [ esp + 0x8 ]
push rw-data
call sub_409ac0
mov eax [ esp + 0x8 ]
mov edx esi
mov [ esi + 0x10 ] eax
mov esi [ esp + 0x24 ]
mov [ esp + 0x8 ] edx
mov [ esp + 0x28 ] edx
jmp r-xdata
mov eax [ ebp + 0xc ]
inc esi
mov [ esp + 0x24 ] esi
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp esi 0x1
jne r-xdata
mov esi [ edx + 0x10 ]
jmp r-xdata
mov esi edx
jmp r-xdata
push ecx
call sub_407b3d
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jge r-xdata
jmp r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x5
jge r-xdata
movzx eax [ eax + lookup_table_40b844 ]
jmp [ eax * 4 + jump_table_40b824 ]
cmp [ esp + 0x24 ] 0x0
je r-xdata
cmp ax 0x4f
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
inc [ esp + 0x24 ]
mov edx [ eax + 0x4 ]
mov ecx [ esi ]
mov eax [ edx + ecx * 4 + 0x4 ]
cmp [ eax + 0x8 ] 0x47
jne r-xdata
mov ecx [ esp + 0x8 ]
push rw-data
call sub_409e9c
mov [ esp + 0x2d ] 0x0
jmp r-xdata
push 0x18
call sub_420f36
mov esi eax
add esp 0x4
test esi esi
je r-xdata
lea eax [ ecx + 0x1 ]
mov [ esp + 0x10 ] 0x11
mov ecx [ ebp + 0xc ]
mov esi [ esp + 0x10 ]
mov [ ecx ] eax
jmp r-xdata
push 0x18
call sub_420f36
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax rw-data
je r-xdata
mov edx [ esp + 0x8 ]
cmp [ edi + 0xc ] 0x4
je r-xdata
jmp r-xdata
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 - 0x4 ]
mov ecx [ esp + 0xc ]
movsx eax [ eax + 0xa ]
push eax
push 0x86
call sub_469ed4
mov edx [ esp + 0x28 ]
mov [ esp + 0x8 ] edx
jmp r-xdata
cmp [ edi + 0xf8 ] 0x1
je r-xdata
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esp + 0xc ]
movsx eax [ eax + 0xa ]
push eax
push 0x85
call sub_469ed4
lea ecx [ esp + 0xa8 ]
call sub_405a64
mov edx [ esp + 0x28 ]
mov [ esp + 0x8 ] edx
jmp r-xdata
lea eax [ esp + 0xa8 ]
push eax
lea ecx [ esp + 0x24 ]
call sub_41faad
mov ecx eax
call sub_4683f8
lea ecx [ esp + 0xa8 ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
call sub_469ed4
jmp r-xdata
lea ecx [ esp + 0xc8 ]
call sub_409a20
jmp r-xdata
lea eax [ esp + 0xc8 ]
push eax
lea ecx [ esp + 0x24 ]
call sub_41faad
mov ecx eax
call sub_409e9c
lea ecx [ esp + 0xc8 ]
call sub_409a20
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
jmp r-xdata
lea ecx [ esp + 0x20 ]
call sub_41faad
mov ecx eax
call sub_467682
lea ecx [ esp + 0x20 ]
test al al
je r-xdata
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x54 ]
push eax
call sub_40ba60
test eax eax
jns r-xdata
cmp ax 0x48
jne r-xdata
inc ecx
jmp r-xdata
mov esi [ ebp + 0xc ]
lea eax [ esp + 0xd8 ]
mov edi [ ebp + 0x8 ]
mov ecx [ esp + 0xc ]
push eax
lea eax [ esp + 0x94 ]
mov [ esp + 0xdc ] 0x0
push eax
push esi
push edi
mov [ esp + 0xf0 ] 0x0
mov [ esp + 0xf4 ] 0x1
call sub_47c7f3
test eax eax
js r-xdata
cmp [ esp + 0x17 ] al
je r-xdata
lea ecx [ esp + 0x20 ]
call sub_41faad
push eax
lea ecx [ esp + 0x94 ]
call sub_409e9c
mov [ esp + 0x17 ] 0x0
cmp ax 0x4f
jne r-xdata
push [ esp + 0x5c ]
mov ecx [ esp + 0x10 ]
push 0x6e
call sub_469ed4
or edi 0xffffffff
lea ecx [ esp + 0xe8 ]
mov [ esp + 0x18 ] edi
call sub_409a20
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x8 ]
jmp r-xdata
cmp [ esp + 0x10 ] 0x8
je r-xdata
jmp r-xdata
mov ecx [ esi ]
cmp ecx eax
je r-xdata
dec [ esp + 0x50 ]
jmp r-xdata
mov edx [ esp + 0x54 ]
mov cl [ esp + 0x59 ]
mov [ esp + 0x1c ] edx
jmp r-xdata
push eax
call [ VariantClear@IAT ]
push [ edi ]
jmp r-xdata
push ecx
call sub_467755
jmp r-xdata
push ecx
call sub_408e34
jmp r-xdata
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
push ecx
call sub_4571d0
jmp r-xdata
push ecx
call sub_4571e5
jmp r-xdata
mov ecx esi
call sub_405a64
push esi
jmp [ eax * 4 + jump_table_440f17 ]
test ecx ecx
jne r-xdata
test ecx ecx
je r-xdata
or ecx 0x1
mov [ rw-data ] ecx
mov ecx rw-data
call sub_4077c7
push sub_43b73a
call sub_422ec0
mov eax [ esp + 0x1c ]
add esp 0x4
jmp r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ esp + 0x3c ] rw-data
mov [ esp + 0x60 ] rw-data
mov eax [ edi ]
test eax eax
je r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ edi ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
push [ edi ]
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
push [ rw-data ]
mov ecx [ eax + 0x8 ]
call sub_4081a7
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ eax ]
mov [ esp + 0x4c ] eax
test ecx ecx
jne r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
mov eax [ esp + 0x4c ]
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
mov esi [ ebp + 0xc ]
inc [ esi ]
jmp r-xdata
push [ rw-data ]
mov ecx [ edi + 0x8 ]
call sub_4081a7
jmp r-xdata
push [ esi ]
call j_sub_422ed5#3
add esp 0x4
push [ esi + 0xc ]
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
push esi
call j_sub_422ed5#3
add esp 0x4
mov [ edi + 0x8 ] 0x0
jmp r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
push rw-data
mov ecx edi
mov [ edi + 0xc ] 0x1
mov [ edi ] 0x0
call sub_409ac0
mov esi [ esp + 0x24 ]
lea eax [ ecx + 0x1 ]
mov esi 0x7
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
push rw-data
lea ecx [ esp + 0x24 ]
mov [ esp + 0x14 ] 0x16
call sub_41fac4
lea ecx [ esp + 0x20 ]
call sub_41faad
mov esi eax
mov ecx esi
call sub_409a20
mov edi [ esp + 0x20 ]
mov eax [ esp + 0x28 ]
mov [ esi + 0xc ] 0x9
mov [ esi ] 0x0
mov esi [ ebp + 0xc ]
mov [ ebp + 0x10 ] edi
mov [ esp + 0x8 ] eax
inc [ esi ]
jmp r-xdata
push rw-data
lea ecx [ esp + 0x24 ]
mov [ esp + 0x14 ] 0x16
call sub_41fac4
mov [ esp + 0xa4 ] 0x1
lea ecx [ esp + 0x20 ]
push [ esp + 0xa4 ]
call sub_41faad
mov ecx eax
call sub_409863
mov esi [ ebp + 0xc ]
mov edi [ esp + 0x20 ]
mov eax [ esp + 0x28 ]
mov [ ebp + 0x10 ] edi
inc [ esi ]
mov [ esp + 0x8 ] eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov esi 0x8
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov esi 0xa
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
sub esp 0x10
mov [ esp + 0x20 ] 0x16
mov ecx esp
push r--data
call sub_407f41
push 0xffffffff
push 0x29
jmp r-xdata
sub esp 0x10
mov [ esp + 0x20 ] 0x16
mov ecx esp
push r--data
call sub_407f41
push 0x0
push 0x2a
lea eax [ esp + 0xb8 ]
mov [ esp + 0xb8 ] 0x0
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0xc4 ] 0x0
mov [ esp + 0xc8 ] 0x1
call sub_41faad
mov esi [ ebp + 0xc ]
mov ecx [ esp + 0x10 ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_40ca20
test eax eax
js r-xdata
mov eax [ edx + ecx * 4 ]
lea ecx [ esp + 0x20 ]
push [ eax ]
call sub_41faad
mov ecx eax
call sub_4679ff
inc [ esi ]
jmp r-xdata
cmp [ esp + 0x24 ] 0x1
je r-xdata
xor esi esi
jmp r-xdata
push rw-data
mov ecx esi
mov [ esi + 0x8 ] 0x0
call sub_409ac0
xor esi esi
jmp r-xdata
push rw-data
mov ecx esi
mov [ esi + 0x8 ] 0x0
call sub_409ac0
mov [ esp + 0x2d ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x4
je r-xdata
cmp [ esp + 0x2d ] 0x0
jne r-xdata
mov esi edi
cmp [ rw-data ] 0x4
jne r-xdata
mov ecx edi
call sub_409a20
push rw-data
mov ecx edi
call sub_409ac0
mov [ esp + 0x10 ] 0x10
jmp r-xdata
jmp r-xdata
inc [ esi ]
call sub_405a64
jmp r-xdata
mov ecx [ esp + 0x10 ]
push 0x6e
call sub_469ed4
mov edx [ esp + 0x54 ]
mov edi [ esp + 0x28 ]
mov [ esp + 0x1c ] edx
mov [ esp + 0x8 ] edi
call sub_41fa57
mov esi [ ebp + 0xc ]
inc [ esi ]
jmp r-xdata
call sub_41fa57
mov edi [ ebp + 0xc ]
mov ecx 0x1
mov eax [ ebp + 0x8 ]
inc [ edi ]
mov edx [ edi ]
mov esi [ eax + 0x4 ]
cmp ax 0x7f
je r-xdata
dec ecx
jmp r-xdata
inc edx
mov [ esi ] edx
test ecx ecx
jne r-xdata
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esp + 0xc ]
movsx eax [ eax + 0xa ]
push eax
push 0x6e
call sub_469ed4
lea ecx [ esp + 0xd8 ]
call sub_409a20
cmp [ esp + 0x17 ] 0x0
mov [ esp + 0x10 ] 0x16
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esp + 0xc ]
movsx eax [ eax + 0xa ]
push eax
push 0xa9
call sub_469ed4
jmp r-xdata
mov esi [ esp + 0xc ]
lea ecx [ esi + 0x168 ]
call sub_47c0f7
push eax
lea ecx [ esp + 0x94 ]
call sub_409e9c
lea ecx [ esp + 0x90 ]
call sub_456241
test al al
jne r-xdata
test eax eax
jne r-xdata
mov [ esp + 0x78 ] 0x1
lea ecx [ esp + 0x20 ]
push [ esp + 0x78 ]
call sub_41faad
mov ecx eax
call sub_409863
jmp r-xdata
cmp esi 0x1
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov esi [ esp + 0x8 ]
mov esi [ esi ]
test esi esi
je r-xdata
mov ecx [ esp + 0x8 ]
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
mov eax [ esp + 0xc ]
add esp 0x4
push [ eax ]
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
mov ecx [ esp + 0x8 ]
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x8 ]
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov esi [ esp + 0x8 ]
mov esi [ esi ]
test esi esi
je r-xdata
mov ecx [ esi + 0x18 ]
lea eax [ esi + 0x18 ]
mov [ esp + 0x48 ] eax
test ecx ecx
je r-xdata
test edx edx
jne r-xdata
cmp edx ecx
jb r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
je r-xdata
push eax
call [ VariantClear@IAT ]
push [ edi ]
jmp r-xdata
lea ecx [ esi + 0x8 ]
jmp r-xdata
push ecx
call sub_408e34
jmp r-xdata
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
push ecx
call sub_4571d0
jmp r-xdata
push ecx
call sub_4571e5
jmp r-xdata
mov ecx esi
jmp [ eax * 4 + jump_table_440ebf ]
jmp [ eax * 4 + jump_table_440e93 ]
lea ecx [ esp + 0x110 ]
call sub_4669c4
push rw-data
lea ecx [ esp + 0x24 ]
call sub_41fac4
lea eax [ esp + 0xf8 ]
push eax
lea ecx [ esp + 0x24 ]
call sub_41faad
mov ecx eax
call sub_4675d6
mov esi [ ebp + 0xc ]
lea ecx [ esp + 0x100 ]
lea ecx [ esp + 0xb8 ]
call sub_409a20
lea eax [ esp + 0xb8 ]
push eax
lea ecx [ esp + 0x24 ]
call sub_41faad
mov ecx eax
call sub_409e9c
lea ecx [ esp + 0xb8 ]
call sub_409a20
jmp r-xdata
mov [ esp + 0x18 ] edi
jmp r-xdata
cmp [ esp + 0x2d ] 0x0
mov eax [ esp + 0x8 ]
jne r-xdata
mov eax [ esp + 0x8 ]
mov [ esi + 0x10 ] eax
mov eax esi
mov [ esp + 0x8 ] eax
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov edx esi
mov [ esi + 0x10 ] eax
mov esi [ esp + 0x24 ]
mov [ esp + 0x8 ] edx
mov [ esp + 0x28 ] edx
jmp r-xdata
mov edx esi
mov [ esi + 0x10 ] eax
mov esi [ esp + 0x24 ]
mov [ esp + 0x8 ] edx
mov [ esp + 0x28 ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x4
jne r-xdata
mov ecx eax
call sub_409a20
mov ecx [ esp + 0x8 ]
push rw-data
call sub_409ac0
mov esi [ edx + 0x10 ]
jmp r-xdata
mov esi edx
jmp r-xdata
push eax
call sub_4081a7
jmp r-xdata
test ecx ecx
jne r-xdata
jmp r-xdata
mov esi [ esp + 0x10 ]
lea eax [ ecx + 0x1 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ esp + 0x54 ]
mov [ esp + 0x10 ] 0x12
mov [ esp + 0x1c ] eax
jmp r-xdata
cmp ax 0x58
jne r-xdata
inc ecx
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov edx esi
mov esi [ esp + 0x40 ]
mov edx [ edx ]
mov eax [ esi + edx * 4 - 0x4 ]
mov esi [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x48
mov eax [ ebp + 0x14 ]
jne r-xdata
cmp ax 0x40
jne r-xdata
mov eax [ edi + edx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x47
jne r-xdata
lea eax [ esp + 0xd8 ]
push eax
lea ecx [ esp + 0x24 ]
call sub_41fac4
lea ecx [ esp + 0xd8 ]
call sub_409a20
lea ecx [ esp + 0x90 ]
call sub_409a20
jmp r-xdata
lea ecx [ esp + 0x20 ]
call sub_41fa57
lea ecx [ esp + 0x90 ]
call sub_409a20
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx esi
movsx eax [ eax + 0xa ]
push eax
push 0xa7
call sub_469ed4
jmp r-xdata
cmp [ esp + 0x59 ] 0x0
mov eax [ esp + 0x1c ]
jne r-xdata
cmp [ esp + 0x2d ] 0x0
je r-xdata
mov esi edi
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x8 ]
push [ eax ]
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
mov esi [ esp + 0x24 ]
jmp r-xdata
lea ecx [ esi + 0x8 ]
jmp r-xdata
push ecx
call sub_408e34
jmp r-xdata
push ecx
call sub_4571d0
jmp r-xdata
push ecx
call sub_4571e5
jmp r-xdata
mov ecx esi
cmp [ esp + 0x17 ] 0x0
mov ecx [ esp + 0x60 ]
mov eax [ esi + 0x18 ]
mov [ ecx + 0x1c ] eax
mov eax [ rw-data ]
mov ecx [ esp + 0x38 ]
mov eax [ eax + 0x1c ]
mov [ ecx + 0x18 ] eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov [ ecx + 0x18 ] eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov [ ecx + 0x1c ] eax
je r-xdata
mov eax [ ecx + 0x4 ]
cmp edx eax
ja r-xdata
lea eax [ esi + 0x1c ]
mov [ esp + 0x30 ] eax
mov eax [ eax ]
test eax eax
je r-xdata
jmp r-xdata
mov edi [ esp + 0x18 ]
mov eax [ esi ]
mov [ esp + 0x30 ] eax
mov eax [ edi ]
mov edi [ ebp + 0x10 ]
mov [ esp + 0x3c ] eax
test ecx ecx
je r-xdata
mov ecx [ esp + 0x34 ]
mov esi edx
mov edx [ eax ]
mov ecx [ ecx ]
test esi esi
je r-xdata
mov ecx [ edx + 0x18 ]
test ecx ecx
je r-xdata
test eax eax
jne r-xdata
cmp eax ecx
jb r-xdata
call sub_405a64
push esi
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi ]
mov [ esp + 0x40 ] eax
test eax eax
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
push [ esi ]
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov [ esp + 0x40 ] eax
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ edi ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
push [ edi ]
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
mov [ esp + 0x64 ] r--data
mov [ esp + 0x68 ] 0x0
mov [ esp + 0x6c ] 0x0
mov [ esp + 0x70 ] 0x0
mov eax [ edx + ecx * 4 ]
mov esi [ eax ]
movsx eax [ eax + 0xa ]
mov [ esp + 0x3c ] eax
mov eax [ rw-data ]
mov [ esp + 0x30 ] esi
test al 0x1
je r-xdata
mov eax [ eax + 0x10 ]
jmp r-xdata
mov [ esp + 0x18 ] eax
mov eax [ ebp + 0xc ]
inc esi
mov [ esp + 0x24 ] esi
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp esi 0x1
jne r-xdata
jmp r-xdata
cmp [ esi + 0xc ] 0x4
mov eax [ eax ]
mov ecx [ esi + 0x8 ]
mov [ esp + 0x4c ] eax
je r-xdata
mov esi [ ebp + 0xc ]
mov eax [ esp + 0xc ]
inc [ esi ]
cmp [ eax + 0xfd ] 0x0
jne r-xdata
push ecx
call sub_407b3d
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jge r-xdata
push [ rw-data ]
mov ecx [ edi + 0x8 ]
call sub_4081a7
jmp r-xdata
cmp ax 0x7f
je r-xdata
dec ecx
jmp r-xdata
inc edx
mov [ edi ] edx
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
cmp ecx 0x1
je r-xdata
mov esi [ eax + 0x4 ]
push eax
call j_sub_422ed5#3
mov eax esi
add esp 0x4
mov [ esp + 0x1c ] eax
mov [ esp + 0x54 ] eax
jmp r-xdata
cmp [ esp + 0x58 ] 0x0
je r-xdata
mov esi [ esp + 0x8 ]
jmp r-xdata
mov eax [ esp + 0x8 ]
mov esi [ eax + 0x10 ]
jmp r-xdata
call sub_405a64
push esi
call j_sub_422ed5#3
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx eax
jmp r-xdata
mov edi [ esp + 0x18 ]
mov eax [ ecx ]
mov [ esp + 0x30 ] eax
mov [ esp + 0x40 ] edx
mov eax [ edi ]
mov edi [ ebp + 0x10 ]
mov [ esp + 0x3c ] eax
test edx edx
je r-xdata
mov ecx [ eax + 0x4 ]
mov [ esp + 0x3c ] ecx
cmp ecx edx
jbe r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ecx ]
xor eax eax
mov ax [ edx ]
cmp ax [ ecx ]
jne r-xdata
cmp [ esp + 0x17 ] 0x0
mov eax [ esi ]
mov ecx [ esp + 0x60 ]
mov eax [ eax + 0x18 ]
mov [ ecx + 0x1c ] eax
mov eax [ esi ]
mov ecx [ esp + 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ecx + 0x18 ] eax
mov ecx [ esi ]
mov eax [ rw-data ]
mov [ ecx + 0x18 ] eax
mov ecx [ esi ]
mov eax [ rw-data ]
mov [ ecx + 0x1c ] eax
je r-xdata
mov edx [ ecx + 0x4 ]
cmp eax edx
ja r-xdata
mov ecx [ edx + 0x1c ]
test ecx ecx
je r-xdata
jmp r-xdata
mov eax [ esp + 0x18 ]
mov edx [ edx ]
mov eax [ eax ]
mov [ esp + 0x38 ] eax
test ecx ecx
je r-xdata
mov ecx [ edx ]
mov edx [ esp + 0x18 ]
mov [ esp + 0x38 ] eax
mov edx [ edx ]
test eax eax
je r-xdata
push eax
call [ VariantClear@IAT ]
push [ esi ]
jmp r-xdata
lea ecx [ eax + 0x8 ]
jmp r-xdata
push ecx
call sub_408e34
jmp r-xdata
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
push ecx
call sub_4571d0
jmp r-xdata
push ecx
call sub_4571e5
jmp r-xdata
mov ecx eax
push eax
call [ VariantClear@IAT ]
push [ edi ]
jmp r-xdata
lea ecx [ esi + 0x8 ]
jmp r-xdata
push ecx
call sub_408e34
jmp r-xdata
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
push ecx
call sub_4571d0
jmp r-xdata
push ecx
call sub_4571e5
jmp r-xdata
mov ecx esi
or eax 0x1
lea ecx [ esp + 0x110 ]
push r--data
mov [ rw-data ] eax
call sub_407f41
mov ecx [ rw-data ]
push [ eax ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
lea ecx [ esp + 0x110 ]
mov [ rw-data ] eax
call sub_405a64
jmp r-xdata
mov ecx [ esp + 0xc ]
cmp esi [ rw-data ]
je r-xdata
push [ rw-data ]
mov ecx [ eax + 0x8 ]
call sub_4081a7
jmp r-xdata
lea ecx [ esp + 0x20 ]
call sub_41faad
push eax
call sub_47c2a7
mov eax [ esp + 0xc ]
jmp r-xdata
cmp [ eax + 0xfe ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
je r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
push 0x10
mov [ esi ] 0x0
mov [ esi + 0xc ] 0x4
call sub_420f36
mov edx eax
add esp 0x4
test edx edx
je r-xdata
mov esi edi
cmp ax 0x40
jne r-xdata
mov eax [ esi + edx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x57
jne r-xdata
lea eax [ edx - 0x1 ]
mov [ esi ] eax
jmp r-xdata
mov esi [ eax + 0x4 ]
push eax
call j_sub_422ed5#3
mov eax esi
mov [ esp + 0x5d ] 0x0
add esp 0x4
mov [ esp + 0x1c ] eax
mov [ esp + 0x54 ] eax
jmp r-xdata
mov [ esp + 0x59 ] 0x1
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x9
mov [ esi ] 0x0
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
cmp edx [ ecx + 0x4 ]
jb r-xdata
nop
mov edx [ eax ]
mov eax [ esp + 0x3c ]
mov [ esp + 0x40 ] ecx
mov ecx [ esp + 0x18 ]
mov ecx [ ecx ]
test eax eax
je r-xdata
mov ecx edx
mov [ esp + 0x3c ] edx
test eax eax
js r-xdata
add [ esp + 0x30 ] 0x2
add eax 0x2
mov [ esp + 0x3c ] eax
dec ecx
jne r-xdata
mov ax [ eax ]
mov ecx [ esp + 0x30 ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
jg r-xdata
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
add edx 0x2
add ecx 0x2
dec esi
jne r-xdata
mov eax [ esp + 0x18 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax edx
mov [ esp + 0x34 ] edx
jmp r-xdata
mov edx [ ecx ]
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x18 ]
mov eax [ eax ]
mov [ esp + 0x48 ] eax
mov eax [ esp + 0x34 ]
test eax eax
je r-xdata
mov edx [ ecx + 0x4 ]
cmp edx eax
ja r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ecx ]
mov ax [ edx ]
cmp ax [ ecx ]
jne r-xdata
call sub_405a64
push [ esp + 0x40 ]
call sub_405a64
push esi
push [ esp + 0x18 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_47bd80
lea ecx [ esp + 0x64 ]
mov esi eax
call sub_4563f2
test esi esi
js r-xdata
add ecx 0x470
push esi
call sub_418fd0
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x20 ]
mov [ esp + 0x17 ] al
mov eax [ ebp + 0xc ]
inc [ eax ]
mov ecx [ eax ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x47
jne r-xdata
jmp r-xdata
jmp [ eax * 4 + jump_table_440e0f ]
xor edx edx
jmp r-xdata
mov eax [ esp + 0x4c ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
test ecx ecx
je r-xdata
dec [ esp + 0x50 ]
push [ esp + 0x4c ]
mov esi [ ebp + 0xc ]
mov ecx [ esp + 0x10 ]
push eax
push esi
push [ ebp + 0x8 ]
inc [ esi ]
call sub_40ca20
test eax eax
js r-xdata
jmp r-xdata
mov esi ecx
mov ecx [ esp + 0x48 ]
mov eax [ esi + 0x1c ]
mov [ ecx ] eax
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov [ rw-data ] esi
cmp [ esi + 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ esp + 0x30 ]
mov ax [ eax ]
cmp ax [ edx ]
jae r-xdata
add [ esp + 0x30 ] 0x2
add eax 0x2
dec [ esp + 0x40 ]
mov [ esp + 0x3c ] eax
jne r-xdata
cmp eax [ esp + 0x48 ]
jb r-xdata
mov ax [ edx ]
cmp ax [ ecx ]
jne r-xdata
mov edi [ esp + 0x30 ]
mov ax [ eax ]
cmp ax [ edi ]
mov edi [ ebp + 0x10 ]
mov eax [ esp + 0x3c ]
je r-xdata
mov [ esp + 0x17 ] 0x1
mov esi [ esp + 0x34 ]
mov edx [ esp + 0x48 ]
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
cmp eax [ ecx + 0x4 ]
jae r-xdata
mov eax [ esp + 0x48 ]
lea esp [ esp ]
mov edx eax
jmp r-xdata
mov eax [ esp + 0x18 ]
mov [ esp + 0x40 ] edx
mov eax [ eax ]
mov [ esp + 0x38 ] eax
mov eax [ ecx ]
mov [ esp + 0x48 ] eax
mov eax [ esp + 0x34 ]
test edx edx
je r-xdata
test eax eax
js r-xdata
add eax 0x2
add edx 0x2
mov [ esp + 0x38 ] eax
dec ecx
jne r-xdata
mov ax [ eax ]
cmp ax [ edx ]
sbb eax eax
and eax 0xfffffffe
inc eax
add edx 0x2
add ecx 0x2
dec [ esp + 0x38 ]
jne r-xdata
jmp r-xdata
mov eax [ edx + 0x4 ]
jmp r-xdata
mov edx [ edx + 0x4 ]
lea eax [ ecx + 0x1 ]
mov [ esp + 0x40 ] eax
xor esi esi
mov [ esp + 0x74 ] eax
lea ecx [ esp + 0x20 ]
call sub_41faad
mov ecx [ esp + 0xc ]
push eax
call sub_47c3f4
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi ]
mov [ esp + 0x40 ] eax
test eax eax
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
push [ esi ]
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov [ esp + 0x40 ] eax
test eax eax
je r-xdata
mov [ esi + 0x8 ] edx
mov ecx [ esp + 0x38 ]
mov [ ecx + 0x18 ] esi
mov eax [ rw-data ]
mov [ esp + 0x38 ] eax
mov esi [ eax + 0x18 ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x34 ] esi
mov [ rw-data ] esi
jmp r-xdata
mov edi [ esp + 0x30 ]
mov ax [ eax ]
cmp ax [ edi ]
mov edi [ ebp + 0x10 ]
mov eax [ esp + 0x3c ]
jne r-xdata
mov ecx [ esp + 0x30 ]
mov esi [ ecx ]
mov eax [ esi + 0x18 ]
mov [ ecx ] eax
mov eax [ rw-data ]
mov [ esi + 0x18 ] eax
mov [ rw-data ] esi
cmp [ esi + 0x1c ] 0x0
je r-xdata
jmp r-xdata
jae r-xdata
add edx 0x2
add ecx 0x2
dec [ esp + 0x40 ]
jne r-xdata
mov ecx [ esp + 0x3c ]
mov eax [ esi ]
mov [ ecx + 0x18 ] eax
mov eax [ esi ]
mov [ esp + 0x3c ] eax
mov eax [ eax + 0x18 ]
mov [ esi ] eax
mov eax [ esp + 0x18 ]
jmp r-xdata
jmp r-xdata
add eax 0x2
add edx 0x2
dec [ esp + 0x38 ]
mov [ esp + 0x48 ] eax
jne r-xdata
mov ax [ eax ]
cmp ax [ edx ]
jae r-xdata
cmp edx eax
jb r-xdata
mov eax [ esp + 0x48 ]
mov eax [ esp + 0x34 ]
mov edx [ esp + 0x30 ]
jle r-xdata
mov ax [ eax ]
cmp ax [ edx ]
mov eax [ esp + 0x38 ]
je r-xdata
jmp r-xdata
mov eax [ esp + 0xc ]
cmp [ eax + 0xf8 ] 0x1
je r-xdata
mov eax [ eax + ecx * 4 - 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x6f
inc esi
lea eax [ ecx + 0x1 ]
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
call [ VariantClear@IAT ]
push [ esi ]
jmp r-xdata
lea ecx [ eax + 0x8 ]
jmp r-xdata
push ecx
call sub_408e34
jmp r-xdata
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
push ecx
call sub_4571d0
jmp r-xdata
push ecx
call sub_4571e5
jmp r-xdata
mov ecx eax
mov edx [ eax + 0x4 ]
mov ecx [ esi + 0x4 ]
mov [ esp + 0x48 ] edx
test edx edx
je r-xdata
mov ecx [ esp + 0x60 ]
mov [ ecx + 0x1c ] esi
mov eax [ rw-data ]
mov [ esp + 0x60 ] eax
mov esi [ eax + 0x1c ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x34 ] esi
mov [ rw-data ] esi
jmp r-xdata
mov eax [ esp + 0x3c ]
mov edx [ esi ]
mov eax [ eax + 0x4 ]
mov [ esp + 0x30 ] edx
mov [ esp + 0x34 ] eax
mov ecx [ edx + 0x4 ]
test eax eax
je r-xdata
mov edx [ esp + 0x30 ]
mov eax [ ecx + 0x1c ]
mov [ edx + 0x18 ] eax
mov eax [ esi ]
mov [ ecx + 0x1c ] eax
mov [ esi ] ecx
cmp [ ecx + 0x18 ] 0x0
je r-xdata
mov ax [ eax ]
cmp ax [ edx ]
mov eax [ esp + 0x48 ]
je r-xdata
mov eax [ esp + 0x34 ]
mov edx [ esp + 0x30 ]
mov eax [ ecx + 0x18 ]
mov [ edx + 0x1c ] eax
mov eax [ esi ]
mov [ ecx + 0x18 ] eax
mov [ esi ] ecx
cmp [ ecx + 0x1c ] 0x0
je r-xdata
jmp r-xdata
mov edx [ esp + 0x38 ]
mov ax [ eax ]
cmp ax [ edx ]
jae r-xdata
add [ esp + 0x38 ] 0x2
add eax 0x2
dec [ esp + 0x40 ]
mov [ esp + 0x48 ] eax
jne r-xdata
mov [ esp + 0x17 ] 0x1
mov eax [ esp + 0x34 ]
mov edx [ esp + 0x30 ]
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov ecx eax
mov eax [ edx + ecx * 4 ]
movsx eax [ eax + 0x8 ]
sub eax 0x47
je r-xdata
test esi esi
jne r-xdata
sub eax 0x37
je r-xdata
call sub_405a64
push [ esp + 0x40 ]
mov ecx [ esp + 0x60 ]
mov eax [ esi ]
mov [ ecx + 0x1c ] eax
mov eax [ esi ]
mov [ esp + 0x60 ] eax
mov eax [ eax + 0x1c ]
mov [ esi ] eax
mov eax [ esp + 0x18 ]
jmp r-xdata
mov edi [ esp + 0x38 ]
mov ax [ eax ]
cmp ax [ edi ]
mov edi [ ebp + 0x10 ]
mov eax [ esp + 0x48 ]
jne r-xdata
mov eax [ esp + 0x34 ]
dec esi
lea eax [ ecx + 0x1 ]
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ esp + 0x34 ] esi
mov ecx [ edx ]
mov [ esp + 0x4c ] ecx
lea eax [ ecx + 0x1 ]
mov [ edx ] eax
cmp [ esp + 0x40 ] ecx
jae r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
lea eax [ ecx + 0x1 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
push [ esp + 0x30 ]
lea ecx [ ecx + 0x470 ]
call sub_418fd0
cmp esi [ eax + 0x18 ]
jl r-xdata
lea ecx [ ecx ]
push [ esp + 0x3c ]
push 0x70
jmp r-xdata
mov ecx [ esp + 0xc ]
push [ esp + 0x30 ]
lea ecx [ ecx + 0x470 ]
call sub_418fd0
cmp esi [ eax + 0x1c ]
jg r-xdata
push 0x10
call sub_420f36
mov esi eax
add esp 0x4
test esi esi
je r-xdata
add eax eax
cmp eax 0x8
jae r-xdata
mov ecx [ esp + 0x14 ]
call sub_469ed4
mov esi [ esp + 0x18 ]
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
xor esi esi
jmp r-xdata
lea eax [ esp + 0x80 ]
mov [ esi + 0x8 ] 0x0
push eax
mov ecx esi
call sub_409ac0
xor ecx ecx
mov [ esp + 0x70 ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov esi eax
add esp 0x4
mov eax [ esp + 0x68 ]
test eax eax
jne r-xdata
mov eax 0x8
push ecx
call sub_407b3d
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jge r-xdata
mov ecx [ esp + 0x6c ]
mov eax [ esp + 0x68 ]
mov [ eax + ecx * 4 ] esi
mov ecx [ esp + 0x6c ]
mov esi [ esp + 0x4c ]
inc ecx
cmp [ esp + 0x17 ] 0x0
mov eax [ esp + 0x68 ]
mov [ esp + 0x6c ] ecx
push esi
jne r-xdata
push 0x0
push 0x0
push 0x100
push [ eax + ecx * 4 - 0x4 ]
mov ecx [ esp + 0x20 ]
lea eax [ esp + 0x88 ]
push eax
push [ ebp + 0x8 ]
call sub_40f803
jmp r-xdata
push [ eax + ecx * 4 - 0x4 ]
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0x7c ]
push eax
push [ ebp + 0x8 ]
call sub_40a000
mov ecx [ esp + 0x6c ]
test ecx ecx
je r-xdata
mov [ esp + 0x68 ] esi
sub eax 0x5
cmp eax 0xa
ja r-xdata
mov edx [ esp + 0xc ]
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x1
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + edx + 0x8 ]
add ecx edx
cmp [ ecx + 0xd ] 0x0
jne r-xdata
test eax eax
js r-xdata
lea ecx [ esp + 0x80 ]
call sub_409df0
jmp r-xdata
inc [ esp + 0x34 ]
mov ecx [ esp + 0x74 ]
cmp ecx esi
jne r-xdata
shl ecx 0x2
push ecx
push eax
push esi
call sub_420fc0
add esp 0xc
push [ esp + 0x68 ]
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
jmp [ eax * 4 + jump_table_440e3b ]
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x14 ] 0x0
cmp [ ecx + 0xd ] 0x0
mov eax [ ecx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x64 ]
call sub_4563f2
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x40
jne r-xdata
mov [ esp + 0x8c ] 0x1
mov [ esp + 0x80 ] 0x0
mov eax [ esi ]
test eax eax
je r-xdata
mov esi [ esi ]
test esi esi
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
push [ esi ]
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov esi [ esi ]
test esi esi
je r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x18 ] 0x0
mov eax [ edx ]
mov eax [ eax + 0x4 ]
add eax edx
mov [ esp + 0x4c ] eax
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esp + 0xc ]
movsx eax [ eax + 0xa ]
push eax
push 0x6f
call sub_469ed4
lea ecx [ esp + 0x80 ]
call sub_409a20
jmp r-xdata
lea eax [ ecx + 0x1 ]
cmp eax esi
je r-xdata
push eax
call [ VariantClear@IAT ]
push [ esi ]
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
mov esi [ esp + 0x18 ]
jmp r-xdata
lea ecx [ esi + 0x8 ]
jmp r-xdata
push ecx
call sub_408e34
jmp r-xdata
push ecx
call sub_4571d0
jmp r-xdata
push ecx
call sub_4571e5
jmp r-xdata
mov ecx esi
mov eax [ eax + 0x8 ]
mov esi [ eax + 0x38 ]
jmp r-xdata
mov esi [ eax + 0x8 ]
lea ecx [ esp + 0x80 ]
mov [ esp + 0x74 ] eax
call sub_409a20
cmp [ esp + 0x74 ] esi
jb r-xdata
call sub_405a64
push esi
call j_sub_422ed5#3
add esp 0x4
mov ecx [ esi + 0x28 ]
test ecx ecx
jne r-xdata
push ecx
call sub_407b3d
mov edx [ esp + 0xc ]
mov [ esi + 0x28 ] 0x0
jmp r-xdata
mov eax [ esi + 0x2c ]
cmp eax 0x5
jge r-xdata
mov eax [ esp + 0x70 ]
mov [ esp + 0x80 ] 0x0
mov [ esp + 0x88 ] 0x0
mov [ esp + 0x8c ] 0x1
cmp [ esp + 0x6c ] eax
jne r-xdata
jmp r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
mov eax [ esp + 0x4c ]
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x20 ] 0x0
cmp [ eax + 0xd ] 0x0
mov eax [ eax + 0x8 ]
jne r-xdata
mov esi [ esp + 0x34 ]
jmp [ eax * 4 + jump_table_440e67 ]
mov eax [ eax + 0x38 ]
jmp r-xdata
push [ esp + 0x30 ]
lea ecx [ edx + 0x470 ]
mov [ eax + 0x30 ] 0x0
call sub_418fd0
push [ esp + 0x18 ]
mov edx [ eax + 0x10 ]
mov ecx [ eax + 0x14 ]
mov esi [ eax + 0xc ]
lea eax [ esp + 0x68 ]
push eax
mov eax [ esp + 0x14 ]
mov eax [ eax ]
mov ecx [ ecx + eax ]
add ecx edx
add ecx [ esp + 0x14 ]
call esi
test eax eax
js r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
mov [ esp + 0x40 ] eax
test eax eax
je r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x20 ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
push [ esi + 0x20 ]
jmp r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x20 ]
mov [ esp + 0x40 ] eax
test eax eax
je r-xdata
xor esi esi
mov [ esp + 0x64 ] r--data
cmp [ esp + 0x6c ] esi
jbe r-xdata
push eax
call [ VariantClear@IAT ]
push [ esi + 0x20 ]
jmp r-xdata
lea ecx [ eax + 0x8 ]
jmp r-xdata
push ecx
call sub_408e34
jmp r-xdata
call j_sub_422ed5#3
add esp 0x4
push ecx
call sub_4571d0
jmp r-xdata
push ecx
call sub_4571e5
jmp r-xdata
mov ecx eax
push [ esp + 0x68 ]
mov [ esp + 0x70 ] 0x0
call j_sub_422ed5#3
add esp 0x4
lea esp [ esp ]
call sub_405a64
push [ esp + 0x40 ]
mov edx [ esp + 0xc ]
jmp r-xdata
mov [ eax + esi * 4 ] 0x0
inc esi
cmp esi [ esp + 0x6c ]
jb r-xdata
call sub_409df0
push [ esp + 0x40 ]
call j_sub_422ed5#3
mov eax [ esp + 0x6c ]
add esp 0x4
mov eax [ esp + 0x68 ]
mov ecx [ eax + esi * 4 ]
mov [ esp + 0x40 ] ecx
test ecx ecx
je r-xdata
sub_40b89c
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0xc ] 0x0
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x15c ]
mov eax [ esi ]
mov [ ebp - 0xc ] eax
je r-xdata
mov ecx edi
call sub_413ccb
push [ ebp + 0x8 ]
and [ edi + 0x448 ] 0x0
mov ecx edi
and [ edi + 0xf8 ] 0x0
mov [ ebp - 0x8 ] eax
call sub_410b30
mov ecx [ edi ]
lea eax [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
add eax ecx
mov ecx eax
mov [ ebp - 0x4 ] eax
call sub_41feda
mov ebx [ ebp + 0x10 ]
mov al [ eax + 0x10 ]
mov [ ebp + 0xb ] al
test ebx ebx
jne r-xdata
push [ ebp + 0x8 ]
call sub_408561
test al al
je r-xdata
push [ ebp - 0x8 ]
mov ecx edi
call sub_413c19
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx ebx
call sub_409a20
and [ ebx ] 0x0
mov [ ebx + 0xc ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_41feda
push eax
mov ecx ebx
call sub_409e9c
jmp r-xdata
mov edi [ ebp - 0xc ]
mov ecx rw-data
call sub_40843f
mov ecx esi
call sub_41fd0f
jmp r-xdata
mov al [ ebp + 0xb ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp edi [ esi ]
jb r-xdata
sub_40b93d
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
lea ebx [ edi + 0x2e0 ]
mov ecx ebx
call sub_416154
mov eax [ edi + 0x1dc ]
cmp eax 0x7
je r-xdata
lea ecx [ edi + 0x1d0 ]
call sub_4687da
mov esi eax
push esi
mov [ ebp + 0x8 ] esi
call [ IsWindow@IAT ]
test eax eax
je r-xdata
cmp eax 0x4
je r-xdata
xor eax eax
push esi
lea ecx [ edi + 0x1f0 ]
call sub_415f57
lea eax [ ebp + 0x8 ]
mov ecx ebx
push eax
call sub_4034c2
xor eax eax
inc eax
jmp r-xdata
lea esi [ edi + 0x1d0 ]
mov ecx esi
call sub_409997
push [ ebp + 0x8 ]
movzx eax [ edi + 0x2dc ]
lea ecx [ edi + 0x1f0 ]
push eax
movzx eax [ edi + 0x2dd ]
push eax
push [ edi + 0x2d4 ]
lea eax [ edi + 0x1e0 ]
push ebx
push eax
push [ esi + 0x8 ]
call sub_415f88
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_40b9ad
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov eax [ esi + 0x4 ]
lea ecx [ edi + 0x1d0 ]
push [ eax ]
call sub_409e9c
cmp [ esi + 0x8 ] 0x2
jb r-xdata
push r--data
lea ecx [ edi + 0x1e0 ]
call sub_407d2c
jmp r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
lea ecx [ edi + 0x1e0 ]
call sub_4081a7
pop edi
pop esi
pop ebp
retn 0x4
sub_40b9f2
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov edx [ ebp + 0xc ]
push ebx
push esi
mov ebx [ eax + 0x4 ]
push edi
inc ecx
jmp r-xdata
cmp eax 0x48
je r-xdata
test ecx ecx
jne r-xdata
dec ecx
js r-xdata
cmp eax 0x7f
je r-xdata
lea eax [ edi + 0x1 ]
mov [ edx ] eax
jmp r-xdata
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
neg ecx
sbb ecx ecx
mov eax ecx
jmp r-xdata
mov edi [ edx ]
mov esi [ ebx + edi * 4 ]
movsx eax [ esi + 0x8 ]
cmp eax 0x47
je r-xdata
cmp [ esi ] 0x3
je r-xdata
cmp eax 0x40
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ esi ] 0x26
jg r-xdata
cmp [ esi ] 0x2a
jg r-xdata
jmp r-xdata
sub_40ba60
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov cl [ edi + 0x9 ]
mov edx [ edi + 0x4 ]
test cl cl
jne r-xdata
mov eax [ edx + 0x4 ]
jmp r-xdata
mov eax edx
mov eax [ eax ]
mov [ ebp + 0x8 ] eax
test cl cl
jne r-xdata
mov esi [ edx + 0x4 ]
push edx
call j_sub_422ed5#3
mov eax [ ebp + 0x8 ]
add esp 0x4
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov esi [ eax + 0x4 ]
call j_sub_422ed5#3
mov eax [ ebp + 0x8 ]
add esp 0x4
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
jmp r-xdata
mov [ edi + 0x9 ] 0x1
dec [ edi ]
cmp eax 0x11
je r-xdata
mov edx [ ebp + 0xc ]
cmp [ edx + 0x4 ] 0x1
jl r-xdata
cmp eax 0xa
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0xa
je r-xdata
cmp eax 0x10
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx edx
call sub_41faad
mov ecx eax
call sub_467682
mov [ ebp + 0xc ] al
mov ecx edx
push [ ebp + 0xc ]
call sub_41faad
mov ecx eax
call sub_409863
jmp r-xdata
cmp eax 0x10
jne r-xdata
mov ebx [ ebp + 0xc ]
mov ecx [ ebx + 0x4 ]
cmp ecx 0x2
jl r-xdata
xor eax eax
jmp r-xdata
cmp eax 0xf
ja r-xdata
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x20 ] 0xffffffff
push eax
mov ecx edx
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x1
call sub_41faad
mov ecx eax
call sub_40963c
lea ecx [ ebp - 0x20 ]
call sub_409a20
jmp r-xdata
jmp [ eax * 4 + jump_table_40c588 ]
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
cmp ecx 0x1
je r-xdata
mov ecx ebx
call sub_41faad
mov edx eax
call sub_41fa94
mov ecx eax
call sub_408bd8
mov ecx ebx
test al al
je r-xdata
mov ecx ebx
call sub_41faad
mov edx eax
call sub_41fa94
mov ecx eax
call sub_420646
mov ecx ebx
test al al
jne r-xdata
mov ecx ebx
call sub_41faad
mov edx eax
call sub_41fa94
mov ecx eax
call sub_42067c
mov ecx ebx
call sub_41faad
mov edx eax
call sub_41fa94
mov ecx eax
call sub_420661
jmp r-xdata
mov ecx ebx
call sub_41faad
push eax
call sub_41fa94
mov ecx eax
call sub_46832b
mov [ ebp + 0xc ] 0x1
mov ecx ebx
test al al
jne r-xdata
mov ecx ebx
mov [ ebp - 0x8 ] 0x0
call sub_41faad
push eax
lea ecx [ ebp - 0x10 ]
call sub_409ac0
mov ecx ebx
call sub_41fa57
mov ecx ebx
mov [ ebp - 0x18 ] 0x0
call sub_41faad
push eax
lea ecx [ ebp - 0x20 ]
call sub_409ac0
sub esp 0x10
lea eax [ ebp - 0x10 ]
mov ecx esp
push eax
mov [ ecx + 0x8 ] 0x0
call sub_409ac0
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_468436
push eax
mov ecx ebx
call sub_41faad
mov ecx eax
call sub_409e9c
lea ecx [ ebp - 0x30 ]
call sub_409a20
lea ecx [ ebp - 0x20 ]
call sub_409a20
lea ecx [ ebp - 0x10 ]
call sub_409a20
jmp r-xdata
mov edi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov edi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov edi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov edi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
je r-xdata
mov edi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
je r-xdata
mov edi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov edi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov edx [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov esi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov [ ebp + 0xc ] 0x1
jmp r-xdata
call sub_41fa94
mov esi eax
mov ecx esi
call sub_409a20
mov ecx ebx
mov [ esi + 0xc ] 0x9
mov [ esi ] 0x0
call sub_41fa57
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp + 0xc ] 0x0
mov ecx ebx
test al al
je r-xdata
push [ ebp + 0xc ]
call sub_41fa94
mov ecx eax
call sub_409863
jmp r-xdata
jmp r-xdata
cmp ecx 0x2
je r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + 0x10 ]
jmp r-xdata
mov edi [ ebx + 0x8 ]
cmp ecx 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + 0x10 ]
jmp r-xdata
mov edi [ ebx + 0x8 ]
cmp ecx 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + 0x10 ]
jmp r-xdata
mov edi [ ebx + 0x8 ]
mov [ ebp + 0x8 ] edi
cmp ecx 0x2
jne r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + 0x10 ]
mov [ ebp + 0x8 ] edi
cmp ecx 0x2
jne r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + 0x10 ]
cmp ecx 0x2
je r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + 0x10 ]
jmp r-xdata
mov edi [ ebx + 0x8 ]
cmp ecx 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + 0x10 ]
jmp r-xdata
mov edi [ ebx + 0x8 ]
cmp ecx 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x10 ]
jmp r-xdata
mov edx [ ebx + 0x8 ]
mov ecx ebx
call sub_41fa94
mov edx eax
mov ecx esi
call sub_408cd0
mov ecx ebx
test al al
jne r-xdata
mov eax [ ebx + 0x8 ]
mov esi [ eax + 0x10 ]
jmp r-xdata
mov esi [ ebx + 0x8 ]
mov ecx ebx
call sub_41fa57
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
jne r-xdata
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
je r-xdata
mov esi [ ebx ]
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebx ]
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
je r-xdata
mov esi [ ebx ]
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebx ]
mov esi [ ebx ]
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
jne r-xdata
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
je r-xdata
mov esi [ ebx ]
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebx ]
call sub_41fa94
mov esi eax
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x9
mov [ esi ] 0x1
mov ecx [ esi + 0xc ]
mov eax ecx
cmp eax 0x3
jne r-xdata
mov eax [ eax + 0x10 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
mov esi [ eax + 0x10 ]
jmp r-xdata
mov eax [ eax + 0x10 ]
dec eax
cmp eax 0x8
ja r-xdata
fld1
fldz
cmp ecx eax
jne r-xdata
mov eax [ eax + 0x10 ]
jmp r-xdata
mov ecx [ eax + 0x10 ]
jmp r-xdata
dec eax
cmp eax 0x8
ja r-xdata
fld1
fldz
cmp edx eax
jne r-xdata
mov esi [ eax + 0x10 ]
jmp r-xdata
mov eax [ eax + 0x10 ]
cmp eax 0x1
jne r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x3
jne r-xdata
mov eax [ eax + 0x10 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
jmp r-xdata
cmp eax 0x1
jne r-xdata
mov ecx edi
call sub_409cf8
fsubr [ esi ]
fstp [ esi ]
mov ecx [ esi + 0xc ]
mov eax ecx
cmp eax 0x3
jne r-xdata
mov eax [ eax + 0x10 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
mov esi [ eax + 0x10 ]
jmp r-xdata
mov eax [ eax + 0x10 ]
dec eax
cmp eax 0xa
ja r-xdata
mov ecx edi
call sub_409997
mov esi [ esi + 0x8 ]
mov ecx esi
mov eax [ edi + 0x8 ]
cmp esi eax
je r-xdata
mov eax [ eax + 0x10 ]
jmp r-xdata
mov ecx [ eax + 0x10 ]
jmp r-xdata
mov ecx ebx
call sub_41fa94
mov esi eax
mov ecx esi
call sub_409a20
mov [ esi ] 0x1
jmp r-xdata
cmp [ ebx + 0x4 ] 0x2
jne r-xdata
dec eax
cmp eax 0xa
ja r-xdata
mov eax [ edi + 0xc ]
cmp eax ecx
jne r-xdata
mov ecx [ edi + 0xc ]
mov eax ecx
shl eax 0x4
add eax [ esi + 0xc ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x3
jne r-xdata
cmp [ ebx + 0x4 ] 0x2
jne r-xdata
jmp [ eax * 4 + jump_table_40c660 ]
dec ecx
cmp ecx 0x9
ja r-xdata
fld [ edi ]
fst [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
mov eax edx
shl eax 0x4
add eax [ edi + 0xc ]
mov [ ebp + 0xc ] ecx
mov eax [ eax * 4 + r--data ]
cmp eax 0x3
jne r-xdata
cmp [ ebx + 0x4 ] 0x2
jne r-xdata
jmp [ eax * 4 + jump_table_40c6cc ]
dec edx
cmp edx 0x9
ja r-xdata
fld [ ecx ]
fst [ ebp - 0x8 ]
mov eax [ esi + 0xc ]
mov [ ebp + 0xc ] esi
cmp eax 0x3
jne r-xdata
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov ecx [ edi + 0xc ]
cmp ecx eax
je r-xdata
dec eax
cmp eax 0x9
ja r-xdata
fld [ edi ]
mov eax [ esi + 0xc ]
mov [ ebp + 0xc ] esi
cmp eax 0x3
jne r-xdata
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov ecx [ edi + 0xc ]
cmp ecx eax
je r-xdata
push ecx
call sub_407b3d
mov [ esi + 0x8 ] 0x0
jmp r-xdata
cmp [ ebx + 0x4 ] 0x1
je r-xdata
cmp eax 0x1
jne r-xdata
mov ecx edi
call sub_409cf8
fdivr [ esi ]
fstp [ esi ]
mov eax [ esi + 0xc ]
cmp eax 0x4
jne r-xdata
cmp [ ebx + 0x4 ] 0x1
je r-xdata
movzx eax [ eax + lookup_table_40c6fc ]
jmp [ eax * 4 + jump_table_40c6f0 ]
push esi
lea eax [ ebp - 0x20 ]
push eax
call sub_457f03
push eax
mov ecx esi
call sub_4081a7
lea ecx [ ebp - 0x20 ]
call sub_405a64
jmp r-xdata
push 0xffffffff
push 0x0
push eax
call sub_407bb1
call sub_408bd8
test al al
jne r-xdata
mov ecx ebx
mov [ esi + 0xc ] 0x9
call sub_41fa57
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
je r-xdata
mov esi [ ebx ]
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
movzx eax [ eax + lookup_table_40c5dc ]
jmp [ eax * 4 + jump_table_40c5c8 ]
dec eax
cmp eax 0x9
ja r-xdata
fld [ edi ]
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
je r-xdata
mov esi [ ebx ]
mov ecx esi
call sub_409c9c
mov ecx edi
mov esi eax
call sub_409c9c
cmp eax esi
jge r-xdata
mov ecx esi
call sub_409997
mov esi [ esi + 0x8 ]
mov ecx edi
call sub_409997
mov ecx [ edi + 0x8 ]
push 0x0
push esi
call sub_407a68
test eax eax
jns r-xdata
mov ecx esi
call sub_409d46
mov ecx edi
mov [ ebp + 0xc ] eax
mov esi edx
call sub_409d46
cmp edx esi
jl r-xdata
mov ecx esi
call sub_4687da
mov ecx edi
mov esi eax
call sub_4687da
cmp eax esi
jmp r-xdata
fld st0
fst [ ebp - 0x8 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_40c5e8 ]
dec eax
cmp eax 0x9
ja r-xdata
fstp st2
fstp st0
fld [ esi ]
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebx ]
call sub_409c9c
mov ecx edi
mov esi eax
call sub_409c9c
cmp esi eax
jge r-xdata
mov ecx edi
call sub_409997
mov esi [ edi + 0x8 ]
mov edi [ ebp + 0xc ]
mov ecx edi
call sub_409997
mov ecx [ edi + 0x8 ]
push 0x0
push esi
call sub_407a68
test eax eax
jns r-xdata
call sub_409d46
mov ecx edi
mov [ ebp + 0xc ] eax
mov esi edx
call sub_409d46
cmp esi edx
jl r-xdata
call sub_4687da
mov ecx edi
mov esi eax
call sub_4687da
cmp esi eax
jmp r-xdata
fld st0
fst [ ebp - 0x8 ]
jmp r-xdata
jmp [ edx * 4 + jump_table_441989 ]
dec eax
cmp eax 0x9
ja r-xdata
fstp st2
fstp st0
fld [ edi ]
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
jmp [ eax * 4 + jump_table_40c6a4 ]
mov eax [ edi ]
mov ecx [ esi ]
lea edx [ eax + ecx ]
mov [ ebp + 0x8 ] edx
cdq
mov [ ebp + 0xc ] eax
mov edi edx
mov eax ecx
mov ecx [ ebp + 0x8 ]
cdq
add [ ebp + 0xc ] eax
mov eax ecx
adc edi edx
cdq
cmp eax [ ebp + 0xc ]
jne r-xdata
cmp ecx 0x2
je r-xdata
fldz
jmp r-xdata
jmp [ eax * 4 + jump_table_4418cd ]
push ecx
call sub_407b3d
mov [ esi + 0x8 ] 0x0
jmp r-xdata
cmp [ ebx + 0x4 ] 0x1
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
movzx eax [ eax + lookup_table_40c698 ]
jmp [ eax * 4 + jump_table_40c684 ]
mov eax [ ebp + 0x8 ]
mov edi [ esi ]
mov ecx edi
mov eax [ eax ]
sub ecx eax
cdq
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ecx eax
mov eax edi
cdq
sub eax ecx
mov edi edx
mov ecx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] eax
sbb edi esi
mov eax ecx
cdq
cmp eax [ ebp + 0x8 ]
jne r-xdata
cmp ecx 0x2
je r-xdata
dec [ ebx + 0x4 ]
cmp [ ebx + 0xd ] 0x0
je r-xdata
sub eax 0x2
cmp eax 0x9
ja r-xdata
cmp ecx 0x3
je r-xdata
cmp [ ebx + 0x4 ] 0x1
je r-xdata
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
je r-xdata
mov ecx esi
call sub_409488
jmp r-xdata
cmp [ edi + 0xc ] 0xb
jne r-xdata
mov esi [ eax + 0x10 ]
jmp r-xdata
mov eax [ eax + 0x10 ]
push ecx
call sub_407b3d
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x1
je r-xdata
mov ecx esi
call sub_4094da
push edi
mov ecx esi
call sub_40963c
jmp r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x1
je r-xdata
mov ecx esi
call sub_409593
mov ecx edi
call sub_409cf8
jmp r-xdata
fldz
jmp r-xdata
jmp [ eax * 4 + jump_table_40c610 ]
mov esi [ eax + 0x10 ]
jmp r-xdata
mov eax [ eax + 0x10 ]
push ecx
call sub_407b3d
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jge r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0x4 ] 0x2
jne r-xdata
jg r-xdata
jb r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x3
jne r-xdata
fild [ edi ]
fst [ ebp - 0x8 ]
jmp r-xdata
fild [ edi ]
fst [ ebp - 0x8 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
fstp st1
mov ecx edi
fstp st0
mov edx [ eax ]
call sub_4095c1
test al al
je r-xdata
mov eax [ edi ]
fild [ eax + 0x4 ]
fst [ ebp - 0x8 ]
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
fstp st2
jmp r-xdata
jmp [ eax * 4 + jump_table_441935 ]
mov eax [ eax + 0x10 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
jmp r-xdata
push ecx
call sub_407b3d
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jl r-xdata
cmp [ ebx + 0x4 ] 0x2
jne r-xdata
jmp r-xdata
jg r-xdata
jb r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x3
jne r-xdata
mov eax [ ecx + 0x8 ]
fstp st1
fstp st0
mov edx [ eax ]
call sub_4095c1
test al al
je r-xdata
fild [ ecx ]
fst [ ebp - 0x8 ]
jmp r-xdata
fild [ ecx ]
fst [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ecx ]
fild [ eax + 0x4 ]
fst [ ebp - 0x8 ]
jmp r-xdata
cmp [ ecx ] 0x0
je r-xdata
fstp st2
jmp r-xdata
jmp [ eax * 4 + jump_table_40c638 ]
mov ecx esi
call sub_4094da
push edi
mov ecx esi
call sub_409700
jmp r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x1
je r-xdata
mov ecx esi
call sub_409593
jmp r-xdata
cmp [ edi + 0xc ] 0xb
jne r-xdata
cmp [ edi + 0xc ] 0x1
mov ecx edi
mov eax [ esi ]
mov [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] 0x2
mov [ esi ] eax
mov [ esi + 0x4 ] edi
jmp r-xdata
cmp edx edi
jne r-xdata
mov eax [ esi ]
cdq
add eax [ edi ]
adc edx [ edi + 0x4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov [ esi + 0xc ] 0x2
jmp r-xdata
cmp eax 0x3
je r-xdata
fadd [ esi ]
mov eax [ edi + 0x8 ]
mov ecx edi
mov edx [ eax ]
call sub_4095c1
test al al
je r-xdata
fild [ edi ]
jmp r-xdata
fild [ edi ]
jmp r-xdata
mov eax [ edi ]
fild [ eax + 0x4 ]
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0xd ] 0x0
je r-xdata
mov ecx esi
call sub_4094da
push edi
mov ecx esi
call sub_409687
jmp r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x1
je r-xdata
mov ecx esi
call sub_409593
jmp r-xdata
cmp [ edi + 0xc ] 0x1
mov ecx edi
mov eax [ esi ]
mov [ ebp + 0xc ] eax
jne r-xdata
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x2
mov [ esi ] eax
mov [ esi + 0x4 ] edi
jmp r-xdata
cmp edx edi
jne r-xdata
mov eax [ esi ]
cdq
sub eax [ edi ]
sbb edx [ edi + 0x4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov [ esi + 0xc ] 0x2
jmp r-xdata
cmp eax 0x3
je r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
mov edi [ esi + 0x10 ]
test esi esi
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
movzx eax [ eax + lookup_table_441929 ]
jmp [ eax * 4 + jump_table_441921 ]
mov ecx esi
call sub_409cf8
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov ecx [ ebx + 0x8 ]
mov esi [ ecx + 0x10 ]
test ecx ecx
je r-xdata
push edi
mov ecx esi
call sub_409700
jmp r-xdata
mov ecx esi
call sub_409a20
mov [ esi ] 0x0
mov ecx [ edi ]
mov eax [ esi ]
mov edi eax
imul ecx
imul edi ecx
mov [ ebp + 0xc ] eax
mov ecx edx
mov eax edi
cdq
cmp eax [ ebp + 0xc ]
jne r-xdata
cmp eax 0x2
je r-xdata
mov ecx edi
call sub_409d46
push [ esi + 0x4 ]
push [ esi ]
push edx
push eax
call sub_436130
mov [ esi ] eax
mov [ esi + 0x4 ] edx
jmp r-xdata
cmp eax 0x2
je r-xdata
fmul [ esi ]
fstp [ esi ]
fild [ edi ]
jmp r-xdata
fild [ edi ]
jmp r-xdata
mov eax [ edi ]
fild [ eax + 0x4 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov ecx edi
mov edx [ eax ]
call sub_4095c1
test al al
je r-xdata
cmp [ edi ] 0x0
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
mov [ esi ] 0x0
mov [ esi ] 0x0
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
je r-xdata
mov esi [ ebx ]
mov ecx esi
call sub_409a20
mov [ esi ] 0x1
jmp r-xdata
cmp eax [ ebp + 0xc ]
jmp r-xdata
push edx
call sub_423eb9
fst [ ebp - 0x8 ]
add esp 0x4
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x8
lea edx [ ebp - 0x8 ]
call sub_41fb3b
fild [ ebp - 0x8 ]
add esp 0x4
fst [ ebp - 0x8 ]
fld st1
fst [ ebp - 0x8 ]
jmp r-xdata
fcompp
fnstsw ax
test ah 0x41
je r-xdata
mov eax [ esi + 0x8 ]
fstp st2
fstp st1
mov ecx esi
fstp st0
mov edx [ eax ]
call sub_4095c1
test al al
je r-xdata
fstp st2
fstp st0
fild [ esi ]
jmp r-xdata
fstp st2
fstp st0
fild [ esi ]
jmp r-xdata
mov eax [ esi ]
fstp st2
fstp st0
fild [ eax + 0x4 ]
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
mov eax [ ebx + 0x8 ]
je r-xdata
mov esi [ ebx ]
cmp [ ebp + 0xc ] eax
jmp r-xdata
push edx
call sub_423eb9
fst [ ebp - 0x8 ]
add esp 0x4
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x8
lea edx [ ebp - 0x18 ]
call sub_41fb3b
fild [ ebp - 0x18 ]
add esp 0x4
fst [ ebp - 0x8 ]
fld st1
fst [ ebp - 0x8 ]
jmp r-xdata
fcompp
fnstsw ax
test ah 0x41
je r-xdata
fstp st2
fstp st0
fild [ edi ]
jmp r-xdata
mov eax [ edi + 0x8 ]
fstp st2
fstp st1
mov ecx edi
fstp st0
mov edx [ eax ]
call sub_4095c1
test al al
je r-xdata
fstp st2
fstp st0
fild [ edi ]
jmp r-xdata
mov eax [ edi ]
fstp st2
fstp st0
fild [ eax + 0x4 ]
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov ecx edi
call sub_409d46
add [ esi ] eax
adc [ esi + 0x4 ] edx
jmp r-xdata
cmp eax 0x2
je r-xdata
mov ecx edi
call sub_409cf8
fadd [ esi ]
jmp r-xdata
mov ecx edi
call sub_468801
mov ecx [ esi ]
mov edi eax
add edi [ ecx ]
push edi
call sub_420f36
mov ecx [ ebp + 0xc ]
add esp 0x4
mov esi eax
mov ecx [ ecx ]
push [ ecx ]
push [ ecx + 0x4 ]
push esi
call sub_420fc0
mov ecx [ ebp + 0x8 ]
add esp 0xc
call sub_468801
push eax
push ecx
call sub_4687be
add esp 0x4
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
add eax esi
push eax
call sub_420fc0
mov eax [ ebp + 0xc ]
add esp 0xc
mov eax [ eax ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
mov eax [ ebp + 0xc ]
add esp 0x4
mov eax [ eax ]
mov [ eax + 0x4 ] esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
mov [ eax ] edi
jmp r-xdata
call sub_409d46
call sub_409c9c
jmp r-xdata
mov [ esi ] ecx
jmp r-xdata
mov ecx esi
call sub_409cf8
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
push edx
call sub_423eb9
add esp 0x4
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x8
lea edx [ ebp - 0x8 ]
call sub_41fb3b
fild [ ebp - 0x8 ]
add esp 0x4
jmp r-xdata
fld1
jmp r-xdata
mov esi [ ebx + 0x8 ]
mov edi [ esi + 0x10 ]
test esi esi
je r-xdata
mov ecx edi
call sub_409d46
sub [ esi ] eax
sbb [ esi + 0x4 ] edx
jmp r-xdata
cmp eax 0x2
je r-xdata
call sub_409d46
call sub_409c9c
jmp r-xdata
mov esi [ ebp + 0xc ]
mov [ esi ] ecx
jmp r-xdata
mov ecx esi
call sub_409cf8
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
jmp r-xdata
mov ecx [ ebx + 0x8 ]
mov esi [ ecx + 0x10 ]
test ecx ecx
je r-xdata
dec [ ebx + 0x4 ]
xor eax eax
mov [ ebx + 0xd ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xd ] 0x0
jmp r-xdata
mov ecx esi
call sub_409a20
push esi
call j_sub_422ed5#3
add esp 0x4
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
mov [ ebx + 0xd ] 0x0
jmp r-xdata
push ecx
call sub_41fb26
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] 0x2
mov [ esi ] eax
mov [ esi + 0x4 ] ecx
jmp r-xdata
cmp edx ecx
jne r-xdata
push [ edi + 0x4 ]
mov eax [ esi ]
push [ edi ]
cdq
push edx
push eax
call sub_436130
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov [ esi + 0xc ] 0x2
jmp r-xdata
cmp ecx 0x3
je r-xdata
push edx
call sub_423eb9
add esp 0x4
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x8
lea edx [ ebp - 0x8 ]
call sub_41fb3b
fild [ ebp - 0x8 ]
add esp 0x4
jmp r-xdata
fld1
jmp r-xdata
jmp [ eax * 4 + jump_table_44195d ]
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov esi [ eax + 0x10 ]
jmp r-xdata
mov eax [ eax + 0x10 ]
mov [ esi + 0xc ] 0x9
cmp [ ebx + 0x4 ] 0x1
je r-xdata
fld1
fldz
fxch st1
fxch st2
jmp r-xdata
push edx
call sub_423eb9
add esp 0x4
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x8
lea edx [ ebp - 0x18 ]
call sub_41fb3b
fild [ ebp - 0x18 ]
add esp 0x4
fstp st1
jmp r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
jmp r-xdata
fld1
fldz
fxch st1
fxch st2
jmp r-xdata
push edx
call sub_423eb9
add esp 0x4
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x8
lea edx [ ebp - 0x18 ]
call sub_41fb3b
fild [ ebp - 0x18 ]
add esp 0x4
fstp st1
jmp r-xdata
fstp [ esi ]
mov ecx [ ebp + 0xc ]
add ecx eax
mov [ esi ] ecx
jmp r-xdata
mov [ ebx + 0x8 ] edi
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
sub ecx eax
mov [ esi ] ecx
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov [ ebx + 0xd ] 0x0
jmp r-xdata
push ecx
call sub_41fb26
mov [ esi ] edi
jmp r-xdata
mov ecx edi
call sub_409cf8
jmp r-xdata
mov ecx esi
call sub_409cf8
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
push [ esi ]
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ ebx + 0x8 ]
mov esi [ ecx + 0x10 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_409a20
mov [ esi ] 0x1
jmp r-xdata
fld [ ebp - 0x8 ]
fxch st1
jmp r-xdata
jmp [ eax * 4 + jump_table_4419b1 ]
fld [ ebp - 0x8 ]
fxch st1
jmp r-xdata
push ecx
call sub_407b3d
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jge r-xdata
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
push eax
call [ VariantClear@IAT ]
jmp r-xdata
lea ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
call sub_4571d0
jmp r-xdata
push ecx
call sub_4571e5
jmp r-xdata
mov ecx edi
push ecx
call sub_408e34
jmp r-xdata
push ecx
call sub_41fb26
mov [ ebx + 0x8 ] esi
jmp r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
mov edi [ esi ]
test edi edi
je r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
push esi
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x0
call j_sub_422ed5#3
add esp 0x4
push [ esi ]
jmp r-xdata
call sub_405a64
push edi
mov [ ebx + 0xd ] 0x0
jmp r-xdata
jmp r-xdata
jmp [ eax * 4 + jump_table_4418f5 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi ]
mov [ ebp + 0xc ] eax
test eax eax
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
push [ esi ]
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov [ ebp + 0xc ] eax
test eax eax
je r-xdata
push eax
call [ VariantClear@IAT ]
push [ esi ]
jmp r-xdata
lea ecx [ eax + 0x8 ]
jmp r-xdata
push ecx
call sub_408e34
jmp r-xdata
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
push ecx
call sub_4571d0
jmp r-xdata
push ecx
call sub_4571e5
jmp r-xdata
mov ecx eax
call sub_405a64
push [ ebp + 0xc ]
sub_40c707
push ebp
mov ebp esp
sub esp 0x334
push ebx
push esi
push edi
mov [ ebp - 0x1c ] ecx
xor eax eax
push 0x104
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x330 ] ax
call sub_407b76
mov eax [ ebp + 0x8 ]
xor edi edi
mov esi edi
mov edi [ eax ]
push 0x0
mov [ ebp - 0x2c ] esi
cmp esi 0x61
mov esi [ ebp - 0x1c ]
pop edi
je r-xdata
inc esi
cmp esi 0x61
jl r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_407f41
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x40 ]
call sub_407c8e
push edi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] edi
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_40859a
test eax eax
jne r-xdata
mov eax [ ebp - 0x2c ]
cmp eax 0x60
ja r-xdata
push edi
push [ esi * 4 + r--data ]
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
push eax
call sub_409e9c
or edi 0xffffffff
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405a64
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
jmp [ eax * 4 + jump_table_40c88f ]
call sub_405a64
jmp r-xdata
lea ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0xd8 ]
push r--data
lea eax [ esi + 0xc8 ]
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] edi
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push 0x26
jmp r-xdata
push 0x2b
jmp r-xdata
push 0x5
jmp r-xdata
push 0x23
jmp r-xdata
push 0x19
jmp r-xdata
push 0x2e
jmp r-xdata
push 0x1f
jmp r-xdata
push 0x17
jmp r-xdata
push 0x16
jmp r-xdata
push 0x18
jmp r-xdata
push 0x1c
jmp r-xdata
push 0x1a
jmp r-xdata
push 0x10
jmp r-xdata
push 0x6
jmp r-xdata
push 0x2
jmp r-xdata
push 0xb
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
jmp r-xdata
lea eax [ esi + 0xb8 ]
jmp r-xdata
push r--data
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
jmp r-xdata
xor ecx ecx
inc ecx
jmp r-xdata
push 0x3
jmp r-xdata
push 0x4
jmp r-xdata
lea eax [ esi + 0x14c ]
jmp r-xdata
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_41feda
mov edi [ eax + 0x14 ]
jmp r-xdata
mov edi [ esi + 0x148 ]
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_41feda
mov ecx [ ebp + 0xc ]
add eax 0x20
push eax
call sub_409e9c
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x1a ]
push eax
push r--data
jmp r-xdata
lea ecx [ ebp - 0x100 ]
call sub_47c1f9
mov ecx eax
call sub_47c198
push eax
push r--data
lea eax [ ebp - 0x330 ]
mov edx r--data
push eax
push 0x104
push r--data
mov ecx 0x80000002
call sub_4035b0
push r--data
lea eax [ ebp - 0xf8 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_47c1f9
mov ecx eax
call sub_47c13b
mov ecx [ ebp + 0xc ]
push eax
call sub_409b9c
lea ecx [ ebp - 0xf8 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x38 ]
call sub_47c1f9
mov ecx eax
call sub_47c13b
mov ecx [ ebp + 0xc ]
push eax
call sub_409b9c
lea ecx [ ebp - 0x80 ]
push r--data
lea eax [ ebp - 0x90 ]
push eax
lea ecx [ ebp - 0xa8 ]
call sub_47c1f9
mov ecx eax
call sub_47c13b
mov ecx [ ebp + 0xc ]
push eax
call sub_409b9c
lea ecx [ ebp - 0x90 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0xe8 ]
call sub_47c1f9
mov ecx eax
call sub_47c13b
mov ecx [ ebp + 0xc ]
push eax
call sub_409b9c
lea ecx [ ebp - 0x110 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0xc0 ]
call sub_47c1f9
mov ecx eax
call sub_47c13b
mov ecx [ ebp + 0xc ]
push eax
call sub_409b9c
lea ecx [ ebp - 0xa0 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0xd8 ]
call sub_47c1f9
mov ecx eax
call sub_47c13b
mov ecx [ ebp + 0xc ]
push eax
call sub_409b9c
lea ecx [ ebp - 0xb8 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0xd0 ]
push eax
lea ecx [ ebp - 0xe0 ]
call sub_47c1f9
mov ecx eax
call sub_47c13b
mov ecx [ ebp + 0xc ]
push eax
call sub_409b9c
lea ecx [ ebp - 0xd0 ]
jmp r-xdata
push 0x7
lea ecx [ ebp - 0x10 ]
call sub_404864
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] 0x104
push eax
lea eax [ ebp - 0x330 ]
push eax
call [ GetComputerNameW@IAT ]
jmp r-xdata
push 0x104
lea eax [ ebp - 0x330 ]
push eax
call [ GetWindowsDirectoryW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push 0x104
cmp [ eax + 0x34 ] 0x0
lea eax [ ebp - 0x330 ]
push eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] 0x6
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] 0x3
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] 0x9
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] 0x5
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] 0xa
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] 0x2
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] 0x7
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] 0x8
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] 0x4
jmp r-xdata
cmp [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x1
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] 0x40
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] 0x41
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] 0x42
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] 0x43
jmp r-xdata
push [ esi + 0xf4 ]
call sub_45fd96
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x330 ]
push eax
push 0x104
call [ GetCurrentDirectoryW@IAT ]
jmp r-xdata
mov eax [ rw-data ]
movzx eax [ eax + 0x36 ]
test eax eax
je r-xdata
lea esi [ ebp - 0x80 ]
xor ecx ecx
mov eax 0x80000001
cpuid
mov [ esi ] eax
mov eax r--data
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
test [ ebp - 0x74 ] 0x20000000
jne r-xdata
mov eax [ rw-data ]
xor ecx ecx
inc ecx
cmp [ eax + 0x30 ] cl
jne r-xdata
mov eax [ rw-data ]
mov edi [ eax + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x330 ]
mov edx r--data
push eax
push 0x104
push r--data
mov ecx 0x80000001
call sub_4035b0
movzx eax [ ebp - 0x330 ]
lea ecx [ ebp - 0x330 ]
add esp 0xc
mov [ ebp - 0x14 ] eax
push edi
push eax
push 0x4
pop edx
call sub_41fcb1
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x124 ]
push eax
call [ GetKeyboardLayoutNameW@IAT ]
lea eax [ ebp - 0x124 ]
jmp r-xdata
lea eax [ ebp - 0x330 ]
push r--data
push eax
call sub_422f3c
lea eax [ ebp - 0x330 ]
mov [ ebp + 0x8 ] edi
push eax
mov esi edi
call sub_422d7c
add esp 0xc
test eax eax
jle r-xdata
push 0x2
lea eax [ ebp - 0x50 ]
push eax
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
mov edi [ ebp - 0x48 ]
jmp r-xdata
lea eax [ ebp - 0x50 ]
push eax
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
mov edi [ ebp - 0x44 ]
jmp r-xdata
call [ GetDesktopWindow@IAT ]
push eax
mov [ ebp - 0x1c ] eax
call [ GetDC@IAT ]
push 0xc
jmp r-xdata
call [ GetDesktopWindow@IAT ]
push eax
mov [ ebp - 0x1c ] eax
call [ GetDC@IAT ]
push 0x74
push 0x104
lea eax [ ebp - 0x330 ]
push eax
push r--data
jmp r-xdata
push 0x104
lea eax [ ebp - 0x330 ]
push eax
push r--data
lea eax [ ebp - 0x330 ]
push eax
push 0x104
call [ GetTempPathW@IAT ]
lea ecx [ ebp - 0x330 ]
call sub_4206dd
jmp r-xdata
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] 0x104
push eax
lea eax [ ebp - 0x330 ]
push eax
call [ GetUserNameW@IAT ]
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x3
je r-xdata
push 0x104
lea eax [ ebp - 0x330 ]
push eax
push r--data
jmp r-xdata
push 0x104
lea eax [ ebp - 0x330 ]
push eax
push r--data
jmp r-xdata
push 0x104
lea eax [ ebp - 0x330 ]
push eax
push r--data
jmp r-xdata
push 0x104
lea eax [ ebp - 0x330 ]
push eax
push r--data
jmp r-xdata
push 0x104
lea eax [ ebp - 0x330 ]
push eax
push r--data
jmp r-xdata
push 0x104
lea eax [ ebp - 0x330 ]
push eax
push r--data
jmp r-xdata
call [ GetCurrentProcessId@IAT ]
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
test eax eax
jns r-xdata
mov ecx [ ebp + 0xc ]
push eax
call sub_409b9c
mov ecx [ ebp + 0xc ]
lea edx [ ebp - 0x10 ]
pop ecx
call sub_464804
jmp r-xdata
call sub_409a20
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] eax
jmp r-xdata
lea edx [ ebp - 0x70 ]
call sub_4646f8
lea eax [ ebp - 0x70 ]
jmp r-xdata
pop ecx
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor edi edi
jmp r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
lea eax [ ebp - 0x330 ]
push eax
call sub_423818
jmp r-xdata
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x330 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
jmp r-xdata
jmp r-xdata
call [ GetSystemDirectoryW@IAT ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x1c ] edi
call sub_47c104
call eax
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
je r-xdata
call sub_409a20
xor eax eax
mov [ esi ] edi
inc eax
mov [ esi + 0xc ] eax
jmp r-xdata
push r--data
jmp r-xdata
cmp eax 0x6
je r-xdata
push eax
jmp r-xdata
mov eax r--data
jmp r-xdata
cmp [ eax + 0x32 ] cl
jne r-xdata
push r--data
jmp r-xdata
xor eax eax
mov [ ebp + esi * 2 - 0x330 ] ax
jmp r-xdata
push 0x20
pop ecx
push 0x2e
pop edx
push eax
mov [ ebp + 0x8 ] eax
call [ GetDeviceCaps@IAT ]
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
push [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x1
push [ ebp - 0x1c ]
mov [ esi ] edi
call [ ReleaseDC@IAT ]
xor edi edi
jmp r-xdata
call [ GetEnvironmentVariableW@IAT ]
jmp r-xdata
cmp eax 0x4
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
fstp [ ebp - 0x20 ]
call sub_409a20
fld [ ebp - 0x20 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
jmp r-xdata
fadd [ r--data ]
push [ ebp - 0x24 ]
call [ FreeLibrary@IAT ]
jmp r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp eax 0x9
je r-xdata
cmp [ eax + 0x2c ] cl
jne r-xdata
push r--data
jmp r-xdata
lea eax [ ebp - 0x330 ]
inc edi
push eax
call sub_422d7c
pop ecx
push 0x20
pop ecx
push 0x2e
pop edx
cmp edi eax
jl r-xdata
cmp eax 0x2c
jne r-xdata
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
cmp [ eax + 0x2e ] cl
jne r-xdata
push r--data
jmp r-xdata
movzx eax [ ebp + edi * 2 - 0x330 ]
cmp ax cx
je r-xdata
xor edi edi
mov [ ebp + esi * 2 - 0x330 ] ax
mov [ ebp + esi * 2 - 0x330 ] dx
jmp r-xdata
call sub_409bf8
jmp r-xdata
cmp [ eax + 0x2a ] cl
jne r-xdata
push r--data
jmp r-xdata
inc esi
cmp [ eax + 0x28 ] cl
jne r-xdata
push r--data
jmp r-xdata
cmp [ eax + 0x26 ] cl
jne r-xdata
push r--data
jmp r-xdata
cmp [ eax + 0x24 ] cl
jne r-xdata
push r--data
jmp r-xdata
cmp [ eax + 0x22 ] cl
jne r-xdata
push r--data
jmp r-xdata
cmp [ eax + 0x20 ] cl
jne r-xdata
push r--data
jmp r-xdata
cmp [ eax + 0x1e ] cl
jne r-xdata
push r--data
jmp r-xdata
cmp [ eax + 0x1c ] cl
jne r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
cmp [ eax + 0x38 ] 0x0
mov eax r--data
jne r-xdata
jmp r-xdata
mov eax r--data
sub_40ca20
push ebp
mov ebp esp
sub esp 0x154
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
mov ecx [ ecx + 0x4 ]
mov ebx [ ecx + edx * 4 ]
mov [ ebp - 0x14 ] ebx
movzx eax [ ebx + 0x8 ]
cmp ax 0x4e
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0xc ]
cmp eax 0x5
jne r-xdata
mov ebx [ ebp + 0x10 ]
cmp ax 0x35
je r-xdata
mov ecx edi
cmp eax 0xf
jne r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov eax [ ecx + edx * 4 - 0x4 ]
mov [ ebp + 0xc ] 0x0
movsx eax [ eax + 0xa ]
mov [ ebp - 0x2c ] eax
mov esi [ ebp + 0x14 ]
mov ecx edi
push esi
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_47c7f3
test eax eax
jns r-xdata
cmp ax 0x47
je r-xdata
movsx eax [ ebx + 0xa ]
push eax
push 0x7c
call sub_469ed4
or eax 0xffffffff
jmp r-xdata
push 0x2
lea eax [ ebp + 0x10 ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_47c6d7
test eax eax
js r-xdata
lea ecx [ ebp - 0x10 ]
call sub_409df0
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp edx 0x1
jne r-xdata
cmp [ edi + 0xfd ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0xd
je r-xdata
mov esi [ ebp + 0x14 ]
cmp esi ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
or eax 0xffffffff
jmp r-xdata
mov ebx [ ebp + 0x10 ]
jmp r-xdata
lea eax [ edx - 0x2 ]
cmp eax 0x9
ja r-xdata
mov ebx [ ebp - 0x10 ]
mov eax ebx
cmp [ esi + 0xc ] 0x4
jne r-xdata
cmp [ edi + 0xfe ] 0x0
jne r-xdata
mov ecx ebx
call sub_4093dd
test al al
jne r-xdata
cmp eax 0xe
je r-xdata
cmp [ esi + 0xc ] 0x4
je r-xdata
mov esi [ ebp + 0x14 ]
cmp esi ebx
je r-xdata
mov ebx [ ebp - 0x10 ]
jmp r-xdata
jmp [ eax * 4 + r-xdata ]
push [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x4f
jne r-xdata
xor eax eax
push esi
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x8 ] 0x0
call sub_409ac0
cmp [ edi + 0xfd ] 0x0
je r-xdata
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_47a328
dec [ esi ]
lea ecx [ ebp - 0x28 ]
or eax 0xffffffff
mov [ ebp - 0x20 ] ax
xor eax eax
cmp [ ebx + 0xc ] 0xd
mov [ ebp - 0x1e ] ax
jne r-xdata
mov ecx ebx
call sub_4093dd
test al al
jne r-xdata
cmp [ ebx + 0xc ] 0x4
jne r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
cmp [ esi + 0xc ] 0x4
je r-xdata
push 0x7b
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 - 0x4 ]
movsx eax [ eax + 0xa ]
push eax
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
cmp edx 0x1
jne r-xdata
cmp [ edi + 0xfe ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_47c2a7
lea ecx [ ebp - 0x10 ]
call sub_409997
mov eax [ ebp - 0x8 ]
push [ eax ]
call sub_422d7c
add esp 0x4
test eax eax
jne r-xdata
push 0x34
call sub_405f12
lea eax [ ebp - 0x48 ]
mov ecx ebx
push eax
call sub_4679c3
push eax
lea ecx [ ebp - 0x28 ]
call sub_405ea1
lea ecx [ ebp - 0x48 ]
call sub_405a64
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x28 ]
push eax
mov eax [ esi ]
mov ecx [ ecx + eax * 4 ]
call sub_467388
mov esi [ ebp + 0x14 ]
lea eax [ ebp + 0xb ]
push eax
push esi
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
mov ecx edi
push eax
push 0x0
call sub_40fe40
test eax eax
js r-xdata
push 0x1
call sub_405f12
mov ecx ebx
call sub_4679b4
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ esi ]
mov ecx [ ecx + eax * 4 ]
call sub_467388
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x10 ]
push esi
push [ ebp + 0xc ]
mov ecx edi
push eax
push 0x0
call sub_40f5c0
test eax eax
js r-xdata
mov eax [ ebp - 0x14 ]
mov ecx edi
movsx eax [ eax + 0xa ]
push eax
push 0xba
call sub_469ed4
or eax 0xffffffff
jmp r-xdata
push [ ebx + 0x8 ]
mov ecx [ esi + 0x8 ]
call sub_4081a7
jmp r-xdata
push ecx
call sub_407b3d
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jge r-xdata
cmp [ ebx + 0xc ] 0x4
jne r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
lea eax [ edx - 0x2 ]
cmp eax 0x9
ja r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp + eax * 4 - 0x150 ] ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
inc ebx
mov [ ebp + 0xc ] ebx
mov ecx [ eax + 0x4 ]
mov eax [ esi ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x4e
je r-xdata
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
call sub_409e9c
lea ecx [ ebp - 0x10 ]
call sub_409a20
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov ecx edi
push eax
call sub_47c3f4
lea ecx [ ebp - 0x10 ]
call sub_409997
mov eax [ ebp - 0x8 ]
push [ eax ]
call sub_422d7c
add esp 0x4
test eax eax
jne r-xdata
push ebx
lea ecx [ ebp - 0x10 ]
call sub_409e9c
lea ecx [ ebp - 0x28 ]
call sub_405efb
lea ecx [ ebp - 0x10 ]
call sub_407776
cmp [ edi + 0xf8 ] 0x1
je r-xdata
cmp [ edi + 0xf8 ] 0x1
jne r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
push ebx
mov ecx esi
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x0
call sub_409ac0
push [ ebx + 0x8 ]
mov ecx [ esi + 0x8 ]
call sub_4081a7
jmp r-xdata
push ecx
call sub_407b3d
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jl r-xdata
xor ebx ebx
jmp r-xdata
jmp [ eax * 4 + r-xdata ]
inc [ esi ]
mov eax [ esi ]
push 0xffffffff
mov eax [ ecx + eax * 4 ]
mov ecx edi
movsx eax [ eax + 0xa ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_40a000
test eax eax
js r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0xc ] 0x5
jne r-xdata
push ebx
lea ecx [ ebp - 0x10 ]
call sub_409e9c
lea ecx [ ebp - 0x28 ]
call sub_405efb
lea ecx [ ebp - 0x10 ]
call sub_407776
jmp r-xdata
jmp r-xdata
jmp [ eax * 4 + jump_table_4427f1 ]
jmp r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebx ]
cmp eax 0x8
jg r-xdata
xor edx edx
jmp r-xdata
mov edx [ eax ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
mov eax [ esi ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
mov eax [ esi ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
sub eax 0x5
cmp eax 0xa
ja r-xdata
lea ecx [ ebp - 0x38 ]
mov edx eax
push ecx
mov ecx [ ebx + 0x4 ]
call sub_465630
mov eax [ ebp - 0x38 ]
add esp 0x4
mov edx [ ebp - 0x4 ]
jmp r-xdata
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x210 ] 0x0
test ebx ebx
jle r-xdata
push 0x0
push 0x1
push edx
call sub_408ea0
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
push eax
call [ VariantClear@IAT ]
jmp r-xdata
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
lea ecx [ eax + 0x8 ]
jmp r-xdata
jmp r-xdata
push ecx
call sub_408e34
jmp r-xdata
push ecx
call sub_4571d0
jmp r-xdata
push ecx
call sub_4571e5
jmp r-xdata
jmp [ eax * 4 + jump_table_4427c5 ]
test eax eax
js r-xdata
push [ ebp - 0x2c ]
push 0x7a
jmp r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
jne r-xdata
mov esi [ edx ]
mov ebx [ esi + 0x210 ]
cmp ebx 0x40
jge r-xdata
push [ esi ]
jmp r-xdata
call sub_405a64
push [ ebp + 0x8 ]
mov ecx eax
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
push [ esi ]
jmp r-xdata
mov eax [ esi ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
mov ecx edi
call sub_469ed4
push ecx
call sub_407b3d
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax 0x5
jge r-xdata
inc ecx
cmp ecx eax
jl r-xdata
mov eax [ ebp + ecx * 4 - 0x150 ]
mov [ esi + ebx * 4 + 0x110 ] eax
mov eax [ edx ]
inc [ eax + 0x210 ]
mov eax [ ebp + 0xc ]
add eax 0xfffffffb
cmp eax 0xa
ja r-xdata
jmp [ eax * 4 + r-xdata ]
sub_40cd50
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jg r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push 0xffffffff
push 0x92
jmp r-xdata
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx rw-data
call sub_469ed4
or eax 0xffffffff
jmp r-xdata
push 0xffffffff
push 0x77
jmp r-xdata
cmp [ ebp + 0x14 ] eax
je r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
pop ebp
retn 0x20
push 0xffffffff
push 0x97
jmp r-xdata
cmp [ ebp + 0x18 ] eax
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push 0xffffffff
push 0xa0
jmp r-xdata
cmp [ ebp + 0x1c ] eax
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push 0xffffffff
push 0xb4
jmp r-xdata
cmp [ ebp + 0x20 ] eax
jne r-xdata
cmp [ ebp + 0x20 ] 0x0
jne r-xdata
cmp [ ebp + 0x24 ] 0x0
jne r-xdata
jmp r-xdata
push 0xffffffff
push 0x73
jmp r-xdata
push 0xffffffff
push 0x6a
xor eax eax
sub_40cdd4
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
mov ecx [ ebp + 0x8 ]
xor ebx ebx
push 0x7f
inc ebx
inc [ edi ]
mov edx [ edi ]
mov eax [ ecx + 0x4 ]
mov eax [ eax + edx * 4 ]
pop edx
cmp [ eax + 0x8 ] dx
jne r-xdata
and [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x10 ]
and [ ebp - 0x8 ] 0x0
push 0xffffffff
push eax
push edi
push ecx
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_40a000
mov [ rw-data ] ebx
mov [ esi + 0x144 ] bl
mov [ esi + 0xf8 ] ebx
test eax eax
js r-xdata
mov [ rw-data ] ebx
mov [ esi + 0x144 ] bl
mov [ esi + 0xf8 ] ebx
lea ecx [ ebp - 0x10 ]
call sub_409a20
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ edi ]
push 0x7f
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
pop ecx
cmp [ eax + 0x8 ] cx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ebp - 0x10 ]
call sub_409c9c
cmp [ esi + 0x118 ] 0x0
mov [ rw-data ] eax
je r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x72
jmp r-xdata
add eax 0x80001000
cmp eax 0xfff
ja r-xdata
mov ecx esi
call sub_469ed4
push 0xffffffff
push 0xb9
sub_40ce1a
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi ecx
cmp [ edi + 0xec ] 0x1
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x81
mov ebx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push 0x7f
inc [ ebx ]
mov ecx [ ebx ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
pop ecx
cmp [ eax + 0x8 ] cx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x7f
mov eax [ eax + ecx * 4 ]
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
and [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x10 ]
and [ ebp - 0x8 ] 0x0
mov ecx edi
push 0xffffffff
push eax
push ebx
push edx
mov [ ebp - 0x4 ] 0x1
call sub_40a000
test eax eax
js r-xdata
movsx eax [ eax + 0xa ]
mov ecx edi
push eax
push 0x72
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_409a20
jmp r-xdata
mov eax [ edi ]
mov esi [ eax + 0x4 ]
add esi edi
cmp [ esi + 0xd ] 0x0
jne r-xdata
call sub_469ed4
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x38 ]
jmp r-xdata
mov ecx [ esi + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_409e9c
cmp [ esi + 0xd ] 0x0
mov eax [ esi + 0x8 ]
jne r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
lea ecx [ ebp - 0x10 ]
mov [ eax + 0x10 ] 0x1
call sub_409a20
mov edx [ ebp + 0x8 ]
sub_40cedd
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x2c ] ebx
inc [ esi ]
cmp [ eax + 0xc ] 0x5
mov edx [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] 0x1
jne r-xdata
mov eax ebx
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov edi [ ebp + 0x8 ]
cmp edx [ edi + 0x8 ]
jae r-xdata
lea ecx [ ebp - 0x2c ]
call sub_409a20
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov [ ebp - 0x14 ] 0x4e
mov [ ebp - 0x18 ] 0x4f
mov eax [ edi + 0x4 ]
mov eax [ eax + edx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x7d
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + edx * 4 ]
movzx ecx [ ecx + 0x8 ]
cmp cx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x8 ]
je r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx + eax * 4 ] ebx
inc eax
push eax
push edx
push [ ebp + 0x10 ]
push esi
push edi
call sub_40cedd
test al al
je r-xdata
cmp eax [ ebp - 0x10 ]
jl r-xdata
jmp r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + edx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x7e
jmp r-xdata
mov esi [ edi + 0x4 ]
mov eax [ esi + edx * 4 ]
mov esi [ ebp + 0xc ]
movsx eax [ eax + 0xa ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
cmp [ ebp - 0x1c ] ax
je r-xdata
mov ecx [ ebp - 0x8 ]
call sub_469ed4
jmp r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + edx * 4 - 0x4 ]
mov edx [ ebp - 0x14 ]
cmp [ eax + 0x8 ] dx
je r-xdata
push 0xffffffff
lea eax [ ebp - 0x2c ]
push eax
push esi
push edi
call sub_40a000
test eax eax
js r-xdata
mov eax [ edi + 0x4 ]
mov edi [ ebp - 0x18 ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] di
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
inc [ ecx + eax * 4 - 0x4 ]
inc edx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ esi ] edx
cmp edx [ edi + 0x8 ]
jb r-xdata
mov edx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] 0x40
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x1c ] ebx
mov eax [ ecx ]
mov [ eax + 0x210 ] ebx
jle r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x6b
jmp r-xdata
lea eax [ edx + 0x1 ]
xor ebx ebx
mov [ esi ] eax
inc ebx
mov eax [ eax ]
mov eax [ eax + 0x10c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
cmp eax [ ebp - 0x10 ]
jg r-xdata
jmp r-xdata
push ebx
push 0x2
push ecx
call sub_408ea0
add esp 0xc
test eax eax
je r-xdata
mov esi [ ebp + 0x18 ]
mov edi ebx
mov ebx [ ebp + 0x14 ]
push [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
push 0x7a
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx eax
call sub_409e9c
push [ ebx + edi * 4 ]
call sub_40928c
inc edi
cmp edi esi
jl r-xdata
mov esi [ ebp + 0xc ]
xor ebx ebx
mov edi [ ebp + 0x8 ]
sub_40d060
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov edx [ eax + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
cmp ebx edx
jae r-xdata
xor eax eax
mov eax [ eax + 0x4 ]
lea ecx [ eax + ebx * 4 ]
mov [ ebp + 0x8 ] ecx
mov edx [ ebp + 0x10 ]
mov ecx [ eax ]
call sub_415ee9
mov ecx [ ebp + 0x8 ]
test al al
jne r-xdata
cmp si 0x4e
je r-xdata
mov eax [ ecx ]
mov ecx [ ebp - 0x8 ]
movsx eax [ eax + 0xa ]
push eax
push 0xb1
call sub_469ed4
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x4 ]
jmp r-xdata
inc edi
jmp r-xdata
cmp si 0x4f
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
inc ebx
add ecx 0x4
mov [ ebp + 0x8 ] ecx
cmp ebx edx
jb r-xdata
dec edi
jmp r-xdata
cmp si 0x47
je r-xdata
mov eax [ ecx ]
movzx esi [ eax + 0x8 ]
cmp si 0x33
je r-xdata
cmp si 0x48
je r-xdata
cmp si 0x40
je r-xdata
test edi edi
jne r-xdata
cmp si 0x7f
je r-xdata
jmp r-xdata
sub_40d0dc
push ebp
mov ebp esp
sub esp 0x28
mov edx [ ebp + 0x18 ]
xor eax eax
or [ ebp - 0xc ] 0xffffffff
push ebx
mov [ ebp - 0x24 ] eax
mov ebx ecx
mov [ ebp - 0x1c ] eax
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x18 ] 0x1
mov eax [ eax + 0x4 ]
push edi
mov ecx [ esi ]
mov [ ebp - 0x14 ] ebx
mov eax [ eax + ecx * 4 ]
movsx edi [ eax + 0xa ]
mov [ ebp - 0x8 ] edi
mov esi [ ebp + 0x10 ]
cmp [ esi + 0xc ] 0xf
je r-xdata
mov ecx [ ebp + 0x8 ]
inc [ esi ]
mov edi [ esi ]
mov [ ebp - 0x10 ] edi
mov eax [ ecx + 0x4 ]
push 0x4f
mov eax [ eax + edi * 4 ]
movsx edi [ eax + 0xa ]
mov [ ebp - 0x8 ] edi
pop edi
cmp [ eax + 0x8 ] di
mov edi [ ebp - 0x8 ]
je r-xdata
and [ ebp - 0xc ] 0x0
mov ecx esi
call sub_40942e
cmp [ esi + 0xc ] 0x5
jne r-xdata
push 0x0
push [ ebp - 0x10 ]
push ecx
push [ edx ]
call sub_47a91f
lea ecx [ ebp - 0x24 ]
mov esi eax
call sub_409a20
mov [ ebp - 0x24 ] esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x18 ] 0x1
jmp r-xdata
push 0xffffffff
lea eax [ ebp - 0x24 ]
push eax
push esi
push ecx
mov ecx ebx
call sub_40a000
test eax eax
js r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov ecx [ esi ]
push 0x4f
pop edx
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] dx
jne r-xdata
push edi
push 0x7b
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ eax ]
cmp edx 0x1
jl r-xdata
push edi
push 0x7e
jmp r-xdata
mov eax [ ecx ]
xor esi esi
and [ eax + 0x210 ] 0x0
test edx edx
jle r-xdata
mov eax [ ebp + 0x18 ]
cmp [ eax ] 0x40
jg r-xdata
mov ecx ebx
call sub_469ed4
jmp r-xdata
push 0x0
push ecx
call sub_4091b0
pop ecx
pop ecx
test al al
je r-xdata
mov ebx [ ebp + 0x18 ]
mov edi [ ebp + 0x14 ]
lea eax [ ecx + 0x1 ]
lea ecx [ ebp - 0x24 ]
mov [ esi ] eax
call sub_409c9c
test eax eax
js r-xdata
lea ecx [ ebp - 0x24 ]
call sub_409a20
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push edi
push 0x82
jmp r-xdata
push [ edi + esi * 4 ]
call sub_40928c
inc esi
cmp esi [ ebx ]
jl r-xdata
mov edi [ ebp - 0x8 ]
mov ebx [ ebp - 0x14 ]
mov eax [ ebp + 0x18 ]
lea ecx [ ebp - 0x24 ]
mov esi [ eax ]
call sub_409c9c
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
mov [ ecx + esi * 4 ] eax
lea eax [ esi + 0x1 ]
mov esi [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ esi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
jmp r-xdata
push 0x4e
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
sub_40d260
push ebp
mov ebp esp
sub esp 0x148
mov edx [ ebp + 0x10 ]
push ebx
mov ebx ecx
mov [ ebp - 0x14 ] ebx
push esi
push edi
test dl 0x4
jne r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
mov [ ebp - 0x5 ] 0x0
mov esi [ ebp + 0xc ]
and edx 0x3
mov edi [ ebp + 0x8 ]
mov [ ebp + 0x10 ] edx
inc [ esi ]
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
lea eax [ eax + ecx * 4 ]
mov ecx [ eax ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
mov edx [ ecx ]
sub edx 0x1e
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0xd ] 0x0
test al 0x1
je r-xdata
mov edx [ ebp + 0x10 ]
mov ecx ebx
push edx
push esi
push edi
call sub_47a4fb
jmp r-xdata
dec edx
je r-xdata
or eax 0x1
mov ecx rw-data
push r--data
mov [ rw-data ] eax
call sub_409f3a
push sub_43b758
call sub_422ec0
mov edx [ ebp + 0x10 ]
add esp 0x4
jmp r-xdata
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
sub edx 0xd
mov edx [ ebp + 0x10 ]
jne r-xdata
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x7f
jmp r-xdata
movsx eax [ ecx + 0xa ]
push eax
push 0x6e
jmp r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp eax 0x1c
je r-xdata
push edx
push esi
push edi
mov ecx ebx
call sub_47ab0f
jmp r-xdata
mov ebx [ eax ]
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0xc ] 0x0
cmp edx 0x1
jne r-xdata
mov ecx ebx
cmp eax 0x1d
je r-xdata
mov eax edx
sub eax 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push edx
push esi
push edi
mov ecx ebx
call sub_47afb7
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x2
jne r-xdata
lea eax [ ebp - 0x18 ]
mov ecx rw-data
push eax
push ebx
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
sub eax 0xe
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
jmp r-xdata
mov esi [ rw-data ]
lea eax [ ebp - 0x18 ]
mov ecx rw-data
push eax
push ebx
call sub_4564ed
mov ecx eax
call sub_408bb2
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
mov ecx rw-data
push eax
push ebx
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
test eax 0x100
jne r-xdata
push esi
push ebx
call sub_4088a0
test al al
je r-xdata
mov esi [ ebp + 0xc ]
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
jmp r-xdata
test eax eax
je r-xdata
call sub_408bb2
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x14 ]
movsx eax [ eax + 0xa ]
push eax
push 0x79
jmp r-xdata
push edx
push 0x0
push rw-data
push ebx
call sub_408620
mov [ ebp - 0xc ] eax
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x14 ]
movsx eax [ eax + 0xa ]
push eax
push 0xae
jmp r-xdata
test eax 0x400
jne r-xdata
mov eax [ ecx + 0x10 ]
mov esi [ ecx + 0x14 ]
and eax 0xff00
mov [ ebp - 0xc ] esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
call sub_469ed4
jmp r-xdata
test dl 0x2
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov [ ebp - 0xd ] 0x1
push 0x1
lea eax [ ebp - 0x18 ]
push eax
push ebx
call sub_40859a
test eax eax
je r-xdata
cmp [ ebp - 0x5 ] 0x0
mov edx [ ebp - 0xc ]
jne r-xdata
test dl 0x1
je r-xdata
cmp [ ebp - 0xd ] 0x0
mov edx [ ebp + 0x10 ]
je r-xdata
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x14 ]
movsx eax [ eax + 0xa ]
push eax
push 0x9c
jmp r-xdata
push edx
lea eax [ ebp - 0x18 ]
push eax
push ebx
call sub_4086a2
test al al
je r-xdata
test [ ebp - 0x18 ] 0x200
je r-xdata
cmp [ edx + 0xc ] 0x5
je r-xdata
inc [ esi ]
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x4e
je r-xdata
mov edx [ ebp + 0x10 ]
test [ ebp - 0x18 ] 0x200
jne r-xdata
jmp r-xdata
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x14 ]
movsx eax [ eax + 0xa ]
push eax
push 0x71
jmp r-xdata
xor esi esi
mov edi 0x1
cmp [ ebp - 0x5 ] 0x0
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] edi
jne r-xdata
mov ecx [ esi ]
mov edx [ edi + 0x4 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x41
jne r-xdata
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x14 ]
movsx eax [ eax + 0xa ]
push eax
push 0xaf
jmp r-xdata
push edx
lea ecx [ ebp - 0x44 ]
call sub_409e9c
mov edi [ ebp - 0x38 ]
mov esi [ ebp - 0x44 ]
mov edx [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0xd ] 0x0
mov ecx [ esi ]
mov edx [ edi + 0x4 ]
mov eax [ edx + ecx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x7f
je r-xdata
cmp [ ebp - 0x5 ] 0x0
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
mov eax [ edx + eax * 4 ]
movsx eax [ eax + 0xa ]
mov [ ebp - 0x34 ] eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x144 ]
push eax
mov eax [ ebp + 0x8 ]
push edx
push [ ebp + 0xc ]
push eax
call sub_40d0dc
test eax eax
js r-xdata
lea ecx [ ebp - 0x44 ]
call sub_409a20
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
cmp ax 0x40
jne r-xdata
mov ecx [ ebp - 0x14 ]
push eax
push 0xac
jmp r-xdata
cmp [ ebp - 0xd ] 0x0
mov edi [ ebp - 0xc ]
je r-xdata
xor eax eax
cmp edi 0x5
setne al
dec eax
and eax esi
mov eax [ eax ]
cmp [ eax + 0x10c ] 0x0
jle r-xdata
lea ecx [ ebp - 0x44 ]
call sub_409a20
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ edx + ecx * 4 ]
mov ecx [ ebp - 0x14 ]
movsx eax [ eax + 0xa ]
push eax
push 0x7f
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
mov eax [ ecx + 0x4 ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] 0x4e
je r-xdata
cmp edi rw-data
je r-xdata
mov ecx [ ebp - 0xc ]
xor eax eax
cmp edi 0x5
setne al
dec eax
and eax esi
cmp [ ecx + 0xc ] 0x5
jne r-xdata
mov ebx [ ebp - 0x14 ]
jmp r-xdata
mov edx [ ebp + 0x10 ]
jmp r-xdata
cmp [ edi + 0xc ] 0x5
jne r-xdata
mov ecx [ ecx + 0x8 ]
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x28 ] ecx
cmp edx ecx
jae r-xdata
cmp [ edi + 0xc ] 0x4
je r-xdata
xor ecx ecx
mov ecx [ ecx ]
jmp r-xdata
lea eax [ edx - 0x1 ]
mov [ esi ] eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x144 ]
push eax
push edi
push esi
push ecx
mov ecx [ ebp - 0x14 ]
call sub_47a866
test eax eax
js r-xdata
push ebx
push [ esi ]
mov ebx [ ebp - 0x14 ]
push ecx
mov ecx ebx
call sub_40d060
test eax eax
js r-xdata
mov eax [ ebp - 0xc ]
mov edi [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
mov ecx ebx
push 0xffffffff
push eax
push esi
push edi
call sub_40a000
test eax eax
js r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + edx * 4 ]
jmp r-xdata
cmp [ rw-data ] 0x4
jne r-xdata
mov ecx edi
call sub_409a20
push rw-data
mov ecx edi
call sub_409ac0
push eax
call sub_456ae3
jmp r-xdata
mov ecx [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x20 ]
test eax eax
jle r-xdata
push [ ebp - 0x34 ]
push 0x6e
jmp r-xdata
mov edi [ esi ]
movzx eax [ edi + 0x8 ]
cmp ax 0x33
je r-xdata
push [ rw-data ]
mov ecx [ edi + 0x8 ]
call sub_4081a7
jmp r-xdata
push 0x1
lea eax [ ebp - 0x144 ]
mov ecx ebx
push eax
push edi
mov edi [ ebp + 0x8 ]
push esi
push edi
call sub_40cedd
test al al
jne r-xdata
mov ecx eax
lea edi [ ebp - 0x144 ]
xor eax eax
[ edi ]
mov edi [ ebp - 0xc ]
mov ecx [ edi ]
mov edi [ ebp - 0x30 ]
mov ebx [ ecx + 0x4 ]
cmp ebx [ edi + 0x4 ]
je r-xdata
cmp ax 0x4e
je r-xdata
mov edi [ ebp - 0x30 ]
mov ecx [ ecx ]
mov [ ebp - 0x2c ] ecx
mov edi [ edi ]
mov [ ebp - 0x24 ] edi
mov edi [ esi ]
test ebx ebx
je r-xdata
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x28 ]
jmp r-xdata
inc ebx
jmp r-xdata
cmp ax 0x4f
je r-xdata
movsx eax [ edi + 0xa ]
mov ecx [ ebp - 0x14 ]
push eax
push 0xb1
jmp r-xdata
nop
mov [ ebp - 0x1c ] ebx
dec ebx
cmp ax 0x47
je r-xdata
mov ecx [ ebp - 0x2c ]
add [ ebp - 0x24 ] 0x2
add ecx 0x2
mov [ ebp - 0x2c ] ecx
dec ebx
jne r-xdata
jmp r-xdata
cmp ax 0x48
je r-xdata
mov edi [ ebp - 0x24 ]
mov cx [ ecx ]
cmp cx [ edi ]
mov edi [ esi ]
jne r-xdata
jmp r-xdata
mov esi [ ebp + 0xc ]
cmp ax 0x40
je r-xdata
test ebx ebx
jne r-xdata
cmp ax 0x7f
je r-xdata
jmp r-xdata
inc edx
add esi 0x4
cmp edx ecx
jb r-xdata
sub_40d6f0
push ebp
mov ebp esp
sub esp 0x2c
push ebx
xor edx edx
mov [ ebp - 0x8 ] ecx
push esi
lea esi [ ecx + 0x15c ]
mov [ ebp - 0x4 ] edx
push edi
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] 0x1
cmp [ esi + 0x9 ] dl
jne r-xdata
mov eax [ esi + 0x4 ]
mov edi [ eax + 0x30 ]
jmp r-xdata
mov edi [ esi + 0x4 ]
cmp [ edi + 0x2c ] 0x8
mov ebx [ edi + 0xc ]
mov [ ebp - 0xc ] edi
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ edi + 0x20 ]
push eax
push ebx
call sub_479228
test eax eax
js r-xdata
mov eax [ edi + 0x1c ]
cmp eax 0x5
je r-xdata
mov ecx esi
jmp r-xdata
cmp [ edi + 0x2c ] 0x8
jne r-xdata
mov ecx [ edi + 0x10 ]
push 0x1
mov [ ebp - 0x4 ] ecx
call sub_408e6b
lea ecx [ edi + 0x20 ]
lea esi [ eax - 0x1 ]
call sub_409c9c
cmp eax esi
jge r-xdata
cmp eax 0xf
je r-xdata
call sub_41fd0f
jmp r-xdata
lea eax [ ebp - 0x28 ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + 0x15c ]
lea ecx [ edi + 0x20 ]
call sub_409c9c
lea ecx [ edi + 0x20 ]
lea esi [ eax + 0x1 ]
call sub_409a20
lea ecx [ edi + 0x20 ]
mov [ ecx ] esi
mov esi [ ebp - 0x4 ]
mov [ ecx + 0xc ] 0x1
mov eax [ esi ]
mov [ eax + 0x210 ] 0x0
call sub_409c9c
push eax
mov ecx esi
call sub_40928c
push 0x0
push 0x1
push esi
call sub_408ea0
add esp 0xc
test eax eax
je r-xdata
mov eax [ edi + 0x10 ]
lea ecx [ edi + 0x20 ]
mov eax [ eax + 0x10 ]
mov esi [ eax + 0x8 ]
call sub_409c9c
lea ecx [ esi - 0x1 ]
cmp eax ecx
jge r-xdata
mov eax [ ebx + 0xc ]
lea esi [ edi + 0x20 ]
mov [ ebp - 0x14 ] esi
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x20 ]
test ecx ecx
jne r-xdata
push eax
mov ecx ebx
call sub_409e9c
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ebp + 0xc ]
inc ecx
mov [ eax ] ecx
jmp r-xdata
push 0x0
push 0x2
push esi
call sub_408ea0
add esp 0xc
mov ecx ebx
push eax
call sub_409e9c
jmp r-xdata
mov ecx ebx
call sub_409a20
mov [ ebx + 0xc ] 0x1
mov [ ebx ] 0x0
lea ecx [ edi + 0x20 ]
call sub_409c9c
lea ecx [ edi + 0x20 ]
lea esi [ eax + 0x1 ]
call sub_409a20
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x20 ] esi
cmp [ edi + 0x1c ] 0xf
jne r-xdata
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x1
jne r-xdata
push ecx
call sub_407b3d
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax 0x5
jge r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ebp + 0xc ]
inc ecx
mov [ eax ] ecx
xor esi esi
mov esi [ edi + 0x10 ]
jmp r-xdata
mov ecx [ ebx + 0x8 ]
test ecx ecx
jne r-xdata
jmp [ eax * 4 + jump_table_4433a3 ]
cmp eax 0x2
jne r-xdata
mov ecx [ ebx ]
mov eax [ esi ]
lea edx [ eax + ecx ]
mov [ ebp - 0x14 ] edx
cdq
mov [ ebp - 0x4 ] eax
mov eax ecx
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0xc ]
cdq
add [ ebp - 0x4 ] eax
mov eax [ ebp - 0x14 ]
adc ecx edx
cdq
cmp eax [ ebp - 0x4 ]
jne r-xdata
add eax 0xfffffffb
cmp eax 0xa
ja r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x1
lea ecx [ edi + 0x20 ]
call sub_409c9c
push eax
mov ecx esi
call sub_461e08
push ecx
call sub_407b3d
mov [ ebx + 0x8 ] 0x0
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov ecx [ ebp - 0x20 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x1
je r-xdata
mov ecx ebx
call sub_4094da
push esi
mov ecx ebx
call sub_409700
jmp r-xdata
cmp [ esi + 0xc ] 0xb
jne r-xdata
cmp [ esi + 0xc ] 0x1
mov ecx esi
mov eax [ ebx ]
mov [ ebp - 0x14 ] eax
jne r-xdata
mov ecx ebx
call sub_409593
mov ecx esi
call sub_409cf8
fadd [ ebx ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebx ]
cdq
add eax [ esi ]
adc edx [ esi + 0x4 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] 0x2
mov [ ebx ] eax
mov [ ebx + 0x4 ] ecx
jmp r-xdata
cmp edx ecx
jne r-xdata
jmp [ eax * 4 + jump_table_4434b7 ]
push ecx
call sub_407b3d
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax 0x5
jge r-xdata
mov ecx esi
call sub_409d46
add [ ebx ] eax
adc [ ebx + 0x4 ] edx
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] edx
mov ecx esi
call sub_468801
mov ecx [ ebx ]
mov edi eax
add edi [ ecx ]
push edi
call sub_420f36
mov ecx [ ebx ]
add esp 0x4
mov esi eax
push [ ecx ]
push [ ecx + 0x4 ]
push esi
call sub_420fc0
mov ecx [ ebp - 0x14 ]
add esp 0xc
call sub_468801
push eax
push ecx
call sub_4687be
add esp 0x4
push eax
mov eax [ ebx ]
mov eax [ eax ]
add eax esi
push eax
call sub_420fc0
mov eax [ ebx ]
add esp 0xc
push [ eax + 0x4 ]
call j_sub_422ed5#3
mov eax [ ebx ]
add esp 0x4
mov [ eax + 0x4 ] esi
mov eax [ ebx ]
mov esi [ ebp - 0x14 ]
mov [ eax ] edi
mov edi [ ebp - 0xc ]
jmp r-xdata
call sub_409d46
call sub_409c9c
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebx ] eax
mov esi [ ebp - 0x28 ]
test esi esi
je r-xdata
mov esi [ ebp - 0x28 ]
test esi esi
je r-xdata
mov esi [ ebp - 0x28 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x28 ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
push [ ebp - 0x28 ]
jmp r-xdata
mov esi [ ebp - 0x28 ]
test esi esi
je r-xdata
mov esi [ ebp - 0x28 ]
test esi esi
je r-xdata
mov esi [ ebp - 0x28 ]
test esi esi
je r-xdata
add eax 0xfffffffb
cmp eax 0xa
ja r-xdata
fldz
fst [ ebp - 0x28 ]
mov [ ebp - 0x1c ] 0x3
mov ecx [ esi + 0xc ]
mov eax ecx
shl eax 0x6
mov eax [ eax + r--data ]
cmp eax 0x3
jne r-xdata
mov ecx [ ebp - 0x14 ]
add ecx eax
mov [ ebx ] ecx
jmp r-xdata
push esi
call [ VariantClear@IAT ]
push [ ebp - 0x28 ]
jmp r-xdata
lea ecx [ esi + 0x8 ]
jmp r-xdata
push ecx
mov ecx esi
call sub_408e34
jmp r-xdata
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
push ecx
mov ecx esi
call sub_4571d0
jmp r-xdata
push ecx
mov ecx esi
call sub_4571e5
jmp r-xdata
mov ecx esi
jmp [ eax * 4 + r-xdata ]
dec eax
fstp st0
cmp eax 0x8
ja r-xdata
cmp ecx 0x1
jne r-xdata
call sub_405a64
push esi
mov ecx [ edi + 0x1c ]
mov eax ecx
shl eax 0x4
add eax [ ebx + 0xc ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
jne r-xdata
jmp [ eax * 4 + jump_table_4433f7 ]
sub ecx 0x2
cmp ecx 0x8
ja r-xdata
fild [ esi ]
sub eax 0x2
cmp eax 0x7
ja r-xdata
cmp ecx 0x1
jne r-xdata
lea ecx [ ebp - 0x28 ]
call sub_409997
mov esi [ ebp - 0x20 ]
lea ecx [ edi + 0x20 ]
call sub_409997
mov ecx [ edi + 0x28 ]
push 0x0
push esi
call sub_407a68
test eax eax
jns r-xdata
mov ecx esi
call sub_409c9c
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_409c9c
cmp esi eax
jl r-xdata
mov ecx esi
call sub_409d46
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov esi edx
call sub_409d46
cmp esi edx
jl r-xdata
mov ecx esi
call sub_4687da
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_4687da
cmp esi eax
jb r-xdata
fld st0
jmp r-xdata
jmp [ ecx * 4 + jump_table_44341b ]
lea edx [ edi + 0x10 ]
mov ecx ebx
call sub_42067c
test al al
je r-xdata
jmp [ eax * 4 + jump_table_40d8e4 ]
sub ecx 0x2
cmp ecx 0x9
ja r-xdata
mov eax [ edi + 0x10 ]
jmp r-xdata
jg r-xdata
jmp r-xdata
fcompp
fnstsw ax
test ah 0x5
jpo r-xdata
fld [ esi ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ecx esi
fstp st0
mov edx [ eax ]
call sub_4095c1
test al al
je r-xdata
fild [ esi ]
jmp r-xdata
mov eax [ esi ]
fild [ eax + 0x4 ]
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
lea ecx [ edi + 0x10 ]
call sub_409cf8
fstp [ ebp - 0x18 ]
mov ecx ebx
call sub_409cf8
fcomp [ ebp - 0x18 ]
fnstsw ax
test ah 0x41
jne r-xdata
mov ecx ebx
call sub_409997
mov esi [ ebx + 0x8 ]
lea ecx [ edi + 0x10 ]
call sub_409997
mov ecx [ edi + 0x18 ]
push 0x0
push esi
call sub_407a68
test eax eax
js r-xdata
lea ecx [ edi + 0x10 ]
call sub_409d46
mov ecx ebx
mov [ ebp - 0x14 ] eax
mov esi edx
call sub_409d46
cmp esi edx
jl r-xdata
lea ecx [ edi + 0x10 ]
call sub_4687da
mov ecx ebx
mov esi eax
call sub_4687da
cmp esi eax
jae r-xdata
xor esi esi
jmp r-xdata
jmp [ ecx * 4 + jump_table_443467 ]
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov eax [ ebx ]
cmp [ ebp - 0x14 ] eax
jb r-xdata
push edx
call sub_423eb9
lea ecx [ edx + 0x4 ]
push 0x8
lea edx [ ebp - 0x18 ]
call sub_41fb3b
fild [ ebp - 0x18 ]
jmp r-xdata
fld1
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x8 ]
add esi 0x15c
cmp [ esi + 0x9 ] 0x0
jne r-xdata
jmp r-xdata
jg r-xdata
jmp r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x1
jne r-xdata
mov eax [ edi + 0x18 ]
lea ecx [ edi + 0x10 ]
mov esi [ eax ]
call sub_4095c1
test al al
je r-xdata
mov esi [ edi + 0x10 ]
jmp r-xdata
fld [ edi + 0x10 ]
call sub_43b500
mov esi eax
jmp r-xdata
xor eax eax
cmp [ edi + 0x10 ] al
setne al
jmp r-xdata
mov eax [ edi + 0x10 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov ecx [ edi + 0x10 ]
mov edx [ ecx ]
cmp edx 0x8
jg r-xdata
xor eax eax
jmp r-xdata
jmp [ eax * 4 + jump_table_44348f ]
jmp r-xdata
fld [ ebp - 0x28 ]
fld [ ebp - 0x18 ]
jmp r-xdata
dec eax
cmp eax 0x9
ja r-xdata
mov eax [ ebp - 0x1c ]
add esp 0x4
fstp [ ebp - 0x18 ]
cmp eax 0x3
je r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ ecx + 0x30 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] eax
jb r-xdata
push esi
call sub_42370a
add esp 0x4
mov esi eax
jmp r-xdata
push 0x10
lea ecx [ esi + 0x4 ]
lea edx [ ebp - 0x18 ]
call sub_41fb3b
mov esi [ ebp - 0x18 ]
add esp 0x4
jmp r-xdata
mov [ ebp - 0x4 ] eax
mov esi eax
mov ecx [ ecx + 0x4 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_465630
mov esi [ ebp - 0x18 ]
add esp 0x4
jmp r-xdata
cmp esi eax
jl r-xdata
mov eax [ ebx + 0x8 ]
mov ecx ebx
mov edx [ eax ]
call sub_4095c1
test al al
je r-xdata
fld [ ebx ]
call sub_43b500
jmp r-xdata
xor eax eax
cmp [ ebx ] al
setne al
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ ebx ]
mov edx [ ecx ]
cmp edx 0x8
jg r-xdata
fldz
fld [ ebp - 0x18 ]
jmp r-xdata
jmp [ eax * 4 + jump_table_44343f ]
mov [ esi + 0x4 ] edi
mov [ esi + 0x9 ] 0x0
jmp r-xdata
push ecx
call sub_45696e
mov [ esi + 0x9 ] 0x1
jmp r-xdata
mov edi [ esi + 0x4 ]
mov ebx [ edi + 0x30 ]
test edi edi
je r-xdata
jmp r-xdata
push edx
call sub_42370a
add esp 0x4
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x10
lea edx [ ebp - 0x18 ]
call sub_41fb3b
mov eax [ ebp - 0x18 ]
add esp 0x4
jmp r-xdata
mov ecx [ ecx + 0x4 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_465630
mov eax [ ebp - 0x18 ]
add esp 0x4
jmp r-xdata
dec [ esi ]
jmp r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x9 ] 0x0
lea ecx [ edi + 0x20 ]
call sub_409a20
lea ecx [ edi + 0x10 ]
call sub_409a20
push edi
call j_sub_422ed5#3
add esp 0x4
sub_40d910
push ebp
mov ebp esp
sub esp 0x64
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x20 ] ebx
mov eax [ esi ]
dec eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x5c ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] 0x1
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x50 ] 0x0
mov [ ebp - 0x48 ] 0x0
cmp [ eax + 0x8 ] 0x33
mov [ ebp - 0x44 ] 0x1
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] 0x1
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x60 ] 0x3
jne r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x94
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov [ ebp + 0xc ] 0x2
cmp [ rw-data ] ebx
je r-xdata
lea ecx [ ebp - 0x30 ]
call sub_409a20
lea ecx [ ebp - 0x20 ]
call sub_409a20
lea ecx [ ebp - 0x40 ]
call sub_409a20
lea ecx [ ebp - 0x50 ]
call sub_409a20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x8 ]
push eax
push ecx
mov ecx rw-data
call sub_408bb2
mov ebx [ ebp - 0x8 ]
jmp r-xdata
mov eax [ rw-data ]
cmp [ rw-data ] bl
jne r-xdata
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ eax + 0x8 ]
jmp r-xdata
push eax
push ecx
mov [ ebp + 0x8 ] eax
call sub_4088a0
test al al
je r-xdata
lea ecx [ ebp - 0x20 ]
call sub_409a20
push 0x1
push 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] 0x1
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x20 ] 0x0
call sub_408620
mov ebx eax
mov [ ebp + 0x8 ] ebx
mov [ ebp - 0x8 ] ebx
jmp r-xdata
test ebx 0x100
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x4e
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0xa3
jmp r-xdata
mov ebx eax
mov ebx [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
and ebx 0xff00
mov eax [ ebx + 0xc ]
cmp eax 0x5
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ ebp - 0x54 ] ebx
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
call sub_469ed4
jmp r-xdata
cmp eax 0xf
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push 0x2
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_45655b
test eax eax
js r-xdata
cmp [ eax ] 0x11
jne r-xdata
push 0xffffffff
lea eax [ ebp - 0x20 ]
inc ecx
push eax
lea eax [ ebp + 0xc ]
mov [ ebp + 0xc ] ecx
mov ecx [ ebp - 0x4 ]
push eax
push edi
call sub_40a000
test eax eax
js r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x4e
je r-xdata
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push 0x8
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_47c6d7
test eax eax
js r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
push 0xffffffff
lea eax [ ebp - 0x20 ]
inc ecx
push eax
lea eax [ ebp + 0xc ]
mov [ ebp + 0xc ] ecx
mov ecx [ ebp - 0x4 ]
push eax
push edi
call sub_40a000
test eax eax
js r-xdata
lea eax [ ebp - 0x20 ]
cmp ebx eax
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ebx
mov eax [ ebp - 0x14 ]
cmp eax 0x8
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x4
je r-xdata
cmp eax 0x5
jne r-xdata
lea eax [ ebp - 0x20 ]
mov ecx ebx
push eax
call sub_409e9c
jmp r-xdata
cmp [ eax ] 0xf
jne r-xdata
cmp [ ebp - 0x14 ] 0x4
jne r-xdata
mov ecx ebx
call sub_409a20
lea eax [ ebp - 0x20 ]
mov ecx ebx
push eax
call sub_409ac0
cmp eax 0xf
jne r-xdata
mov ecx [ ebp - 0x20 ]
push 0x0
mov [ ebp - 0x8 ] ecx
mov eax [ ecx ]
mov [ eax + 0x210 ] 0x0
call sub_40928c
mov eax [ ecx ]
cmp [ eax + 0x10c ] 0x0
jle r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ebp + 0xc ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
mov ebx [ ebp - 0x4 ]
lea eax [ ebp - 0x20 ]
push 0xffffffff
push eax
inc ecx
lea eax [ ebp + 0xc ]
push eax
mov [ ebp + 0xc ] ecx
mov ecx ebx
push edi
call sub_40a000
test eax eax
js r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push 0x1
push r--data
push 0x0
push 0xa9
call sub_4794db
test eax eax
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ecx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
push r--data
mov ecx ebx
call sub_409bf8
lea ecx [ ebp - 0x50 ]
call sub_409a20
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x44 ] 0x1
mov [ ebp - 0x50 ] 0x1
call sub_409a20
mov [ ebp - 0x34 ] 0x1
mov [ ebp - 0x40 ] 0xffffffff
jmp r-xdata
push 0x1
call sub_408e6b
test eax eax
jle r-xdata
movsx eax [ eax + 0xa ]
mov ecx [ ebp - 0x4 ]
push eax
push 0x72
jmp r-xdata
xor edi edi
xor dl dl
lea esp [ esp ]
lea ecx [ ebp - 0x50 ]
call sub_409a20
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_409ac0
mov ecx [ edi + 0x4 ]
mov eax [ ebp + 0xc ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push [ ebp - 0x18 ]
mov ecx [ ebx + 0x8 ]
call sub_4081a7
jmp r-xdata
lea ecx [ ebp - 0x30 ]
call sub_409a20
mov [ ebp - 0x24 ] 0x1
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ebp + 0xc ]
mov eax [ ecx + eax * 4 ]
mov ecx [ ebp - 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0xa9
jmp r-xdata
push 0x4
push 0x0
call sub_461e08
push eax
mov ecx ebx
call sub_409e9c
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_409e9c
jmp r-xdata
push 0x0
push 0x1
push [ ebp - 0x8 ]
call sub_408ea0
add esp 0xc
test eax eax
je r-xdata
lea ecx [ ebp - 0x30 ]
call sub_409c9c
mov ebx [ ebp + 0x8 ]
cmp eax 0x1
je r-xdata
test eax eax
jle r-xdata
cmp [ eax ] 0x10
jne r-xdata
lea ecx [ ebp - 0x40 ]
call sub_409a20
mov ebx 0x1
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x40 ] ebx
push 0x0
push 0x2
push [ ebp - 0x8 ]
call sub_408ea0
add esp 0xc
mov ecx ebx
push eax
call sub_409e9c
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_409e9c
jmp r-xdata
mov eax [ ebp - 0x58 ]
inc eax
mov [ esi ] eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x8
je r-xdata
shl eax 0x4
add eax [ rw-data ]
je r-xdata
inc [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push 0xffffffff
push eax
lea eax [ ebp + 0xc ]
mov ecx ebx
push eax
push edi
call sub_40a000
test eax eax
js r-xdata
cmp ecx 0x2
je r-xdata
mov eax [ ebp - 0x44 ]
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x44 ]
cmp eax 0x5
je r-xdata
mov eax [ ebp - 0x44 ]
cmp eax 0x5
je r-xdata
test dl dl
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_409e9c
mov ebx [ ebp - 0x34 ]
jmp r-xdata
cmp ecx 0x3
je r-xdata
cmp ebx 0x1
jne r-xdata
cmp eax 0x3
je r-xdata
lea ecx [ ebp - 0x40 ]
call sub_409a20
mov [ ebp - 0x34 ] 0x1
mov [ ebp - 0x40 ] 0x0
cmp eax 0xf
je r-xdata
cmp eax 0xf
je r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
cmp ecx 0x1
jne r-xdata
mov ecx eax
call sub_409606
mov ecx [ ebp + 0x8 ]
test al al
je r-xdata
cmp ebx 0x2
je r-xdata
cmp eax 0x2
je r-xdata
mov [ esi ] eax
lea ecx [ ebp - 0x30 ]
call sub_409a20
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x24 ] 0x1
mov [ ebp - 0x30 ] 0x0
call sub_409a20
mov edi [ ebp - 0x4 ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x14 ] 0x1
push eax
push ebx
mov ecx edi
mov [ ebp - 0x20 ] 0x0
call sub_479228
lea ecx [ ebp - 0x30 ]
call sub_4093dd
mov ecx ebx
test al al
jne r-xdata
lea ecx [ ebp - 0x20 ]
call sub_409a20
fldz
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x14 ] 0x3
fstp [ ebp - 0x20 ]
call sub_408cd0
test al al
jne r-xdata
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
cmp eax [ rw-data ]
jg r-xdata
mov eax [ eax ]
sub eax 0xd
je r-xdata
call sub_409505
jmp r-xdata
call sub_409593
jmp r-xdata
cmp ebx 0x3
je r-xdata
lea ecx [ ebp - 0x50 ]
call sub_409606
lea ecx [ ebp - 0x50 ]
test al al
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_409e9c
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_409e9c
lea ecx [ edi + 0x15c ]
jmp r-xdata
push r--data
call sub_409bf8
lea ecx [ ebp - 0x30 ]
call sub_409a20
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x24 ] 0x1
mov [ ebp - 0x30 ] 0x0
call sub_409a20
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x20 ] 0x0
lea edx [ ebp - 0x50 ]
mov ecx ebx
call sub_42067c
test al al
je r-xdata
mov edx ebx
lea ecx [ ebp - 0x50 ]
call sub_408cd0
test al al
jne r-xdata
inc edi
jmp r-xdata
dec eax
jne r-xdata
lea ecx [ ebp - 0x40 ]
call sub_409606
lea ecx [ ebp - 0x40 ]
test al al
je r-xdata
call sub_409593
jmp r-xdata
call sub_409505
lea eax [ ebp - 0x60 ]
push eax
call sub_41fd66
mov eax [ ebp - 0x5c ]
inc eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x5c ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
test edi edi
jne r-xdata
call sub_409505
jmp r-xdata
call sub_409593
jmp r-xdata
mov ebx [ ebp - 0x34 ]
mov ecx [ ebp - 0x4 ]
lea ecx [ ecx + 0x15c ]
lea ecx [ ebp - 0x60 ]
push ecx
mov ecx [ eax + 0x160 ]
call sub_47a3ae
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x165 ] 0x0
jmp r-xdata
push 0x38
call sub_420f36
mov edi eax
add esp 0x4
test edi edi
je r-xdata
dec edi
jmp r-xdata
lea ebx [ ecx - 0x1 ]
mov dl 0x1
mov [ ebp - 0x58 ] ebx
jmp r-xdata
inc [ ecx + 0x15c ]
lea eax [ ebx + 0x1 ]
xor edi edi
jmp r-xdata
mov ecx [ ebp - 0x60 ]
lea eax [ ebp - 0x50 ]
mov [ edi ] ecx
mov ecx [ ebp - 0x58 ]
mov [ edi + 0x8 ] ecx
mov ecx [ ebp - 0x54 ]
mov [ edi + 0xc ] ecx
lea ecx [ edi + 0x10 ]
mov [ edi + 0x4 ] ebx
push eax
mov [ ecx + 0x8 ] 0x0
call sub_409ac0
lea eax [ ebp - 0x40 ]
mov [ edi + 0x28 ] 0x0
lea ecx [ edi + 0x20 ]
push eax
call sub_409ac0
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x160 ]
mov [ edi + 0x30 ] eax
mov [ ecx + 0x160 ] edi
sub_40dd2e
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] 0x1
push eax
push edi
mov esi ecx
call sub_409f6b
test eax eax
js r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
movsx eax [ eax + 0xa ]
mov ecx esi
push eax
push 0x72
call sub_469ed4
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
lea ecx [ esi + 0x15c ]
jne r-xdata
call sub_41fd0f
jmp r-xdata
call sub_41fd58
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0xc ]
inc ecx
mov [ eax ] ecx
sub_40dd90
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push esi
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x38 ]
push edi
call sub_41fdec
mov edi [ ebp + 0xc ]
xor eax eax
mov [ ebp - 0x38 ] 0x2
mov ecx eax
mov dl al
mov esi [ edi ]
dec esi
mov [ ebp + 0xc ] esi
mov [ ebp - 0x34 ] esi
xor esi esi
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x38 ]
push eax
add ecx 0x15c
call sub_41fd66
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
inc eax
mov [ edi ] eax
call sub_409a20
lea ecx [ ebp - 0x28 ]
call sub_409a20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test dl dl
jne r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x8 ] si
jne r-xdata
mov eax [ edi ]
push eax
lea ebx [ eax + 0x1 ]
mov [ edi ] ebx
call sub_4071c8
test eax eax
je r-xdata
mov eax [ eax ]
sub eax 0xb
je r-xdata
inc ecx
jmp r-xdata
dec eax
jne r-xdata
test ecx ecx
jne r-xdata
dec ecx
jmp r-xdata
lea eax [ ebx - 0x1 ]
inc dl
mov [ ebp - 0x30 ] eax
jmp r-xdata
sub_40de2e
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
push edi
push 0x7f
pop edi
mov eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8 ] di
jne r-xdata
and [ ebp - 0x18 ] 0x0
lea eax [ ebp - 0x18 ]
and [ ebp - 0x10 ] 0x0
push 0xffffffff
push eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] 0x1
push eax
push esi
call sub_40a000
test eax eax
js r-xdata
xor edi edi
inc edi
xor edx edx
mov [ ebp + 0x8 ] edx
lea ecx [ ebp - 0x18 ]
call sub_409a20
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] di
je r-xdata
push 0xffffffff
push 0x96
cmp [ esi + 0x9 ] 0x0
mov eax [ esi + 0x4 ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ebp - 0x18 ]
call sub_409c9c
mov edi eax
test edi edi
jns r-xdata
movsx eax [ eax + 0xa ]
mov ecx ebx
push eax
push 0x72
call sub_469ed4
mov eax [ eax + 0x30 ]
jmp r-xdata
cmp [ eax ] 0x1
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_409a20
xor edx edx
mov [ ebp + 0x8 ] edx
test edi edi
jle r-xdata
xor edi edi
cmp [ esi + 0x9 ] 0x0
mov eax [ esi + 0x4 ]
jne r-xdata
cmp [ esi + 0x9 ] 0x0
mov eax [ esi + 0x4 ]
jne r-xdata
jmp r-xdata
mov eax [ eax + 0x30 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov ecx [ ecx ]
cmp ecx [ eax + 0x4 ]
jle r-xdata
mov eax [ eax + 0x30 ]
jmp r-xdata
cmp [ eax ] 0x2
je r-xdata
lea esi [ ebx + 0x15c ]
push 0xffffffff
push 0x8f
jmp r-xdata
cmp [ esi + 0x9 ] 0x0
mov eax [ esi + 0x4 ]
jne r-xdata
cmp [ esi + 0x9 ] 0x0
mov eax [ esi + 0x4 ]
jne r-xdata
mov ecx ebx
call sub_469ed4
jmp r-xdata
mov eax [ eax + 0x30 ]
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jg r-xdata
mov eax [ eax + 0x30 ]
jmp r-xdata
cmp [ eax ] 0x3
jne r-xdata
mov eax [ esi + 0x4 ]
inc edx
cmp [ esi + 0x9 ] 0x0
mov [ ebp + 0x8 ] edx
jne r-xdata
mov ecx esi
call sub_41fd0f
mov edx [ ebp + 0x8 ]
cmp edx edi
jl r-xdata
mov eax [ eax + 0x30 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
cmp edx edi
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
jmp r-xdata
sub_40df0c
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi ecx
push edi
lea edi [ esi + 0x15c ]
mov ecx edi
call sub_41fd58
push [ eax + 0x4 ]
call sub_4071c8
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] 0x1
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
push eax
mov ecx esi
call sub_409f6b
test eax eax
js r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x1 ] 0x0
mov ecx edi
je r-xdata
call sub_41fd0f
jmp r-xdata
call sub_41fd58
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
inc ecx
mov [ eax ] ecx
sub_40df6b
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
mov ebx ecx
mov [ ebp - 0x8 ] 0x1
push edi
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0xc ] ebx
call sub_41fdec
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x40 ] 0x1
push eax
push esi
mov ecx ebx
call sub_409f6b
test eax eax
js r-xdata
lea ecx [ ebp - 0x20 ]
call sub_409a20
lea ecx [ ebp - 0x30 ]
call sub_409a20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
movsx eax [ eax + 0xa ]
mov ecx ebx
push eax
push 0x72
call sub_469ed4
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x38 ]
mov esi [ edx ]
dec esi
xor eax eax
mov [ ebp + 0xc ] esi
mov ecx eax
mov [ ebp - 0x3c ] esi
mov bl al
cmp [ ebp - 0x1 ] 0x0
mov esi [ ebp + 0xc ]
mov ebx [ ebp - 0xc ]
mov [ ebp - 0x38 ] edi
je r-xdata
test bl bl
jne r-xdata
lea eax [ edi + 0x1 ]
mov [ edx ] eax
jmp r-xdata
lea eax [ esi + 0x1 ]
mov [ edx ] eax
lea ecx [ ebx + 0x15c ]
lea eax [ ebp - 0x40 ]
push eax
call sub_41fd66
mov eax [ eax + 0x4 ]
xor esi esi
mov eax [ eax ]
cmp [ eax + 0x8 ] si
jne r-xdata
mov eax [ edx ]
push eax
lea esi [ eax + 0x1 ]
mov [ ebp + 0x8 ] esi
mov [ edx ] esi
call sub_4071c8
test eax eax
je r-xdata
mov eax [ eax ]
sub eax 0x9
je r-xdata
inc ecx
jmp r-xdata
dec eax
jne r-xdata
test ecx ecx
jne r-xdata
dec ecx
jmp r-xdata
mov edi [ ebp + 0x8 ]
inc bl
dec edi
jmp r-xdata
sub_40e060
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax ecx
push edi
push 0xffffffff
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] 0x1
push ecx
push esi
mov ecx eax
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x1
call sub_40a000
test eax eax
js r-xdata
lea ecx [ ebp - 0x20 ]
call sub_409df0
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
cmp ecx 0x9
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea edi [ ecx - 0x1 ]
cmp edi 0xa
ja r-xdata
test al al
jne r-xdata
xor bl bl
jmp [ edi * 4 + r-xdata ]
mov bl 0x1
jmp r-xdata
push ecx
mov ecx edx
call sub_407b3d
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp ecx 0x9
jne r-xdata
test eax eax
je r-xdata
mov [ ebp - 0x1 ] bl
test edx edx
jne r-xdata
add ecx 0xfffffffb
cmp ecx 0xa
ja r-xdata
mov edx [ esi + 0x4 ]
mov edi [ ebp - 0x10 ]
mov eax [ edx + edi * 4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
jmp r-xdata
movsx eax [ eax + 0xa ]
mov ecx [ ebp - 0xc ]
push eax
push 0xa1
call sub_469ed4
jmp r-xdata
cmp [ eax ] 0x5
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
mov eax [ edx + edi * 4 + 0x4 ]
inc edi
cmp [ eax + 0x8 ] 0x7f
je r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
xor bh bh
mov [ ebp + 0xb ] 0x0
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x38 ] 0x0
mov eax [ edi ]
mov [ ebp - 0x34 ] 0x1
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x1
lea ecx [ eax - 0x1 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x4c ] ecx
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
xor ecx ecx
mov [ ebp - 0x20 ] r--data
xor esi esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] esi
jmp sub_40e140
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov [ edi ] eax
cmp [ ebx + 0x165 ] 0x0
jne r-xdata
test esi esi
jle r-xdata
mov ecx [ ebx + 0x160 ]
lea eax [ ebp - 0x50 ]
push eax
call sub_47a3ae
mov [ ebx + 0x165 ] 0x0
jmp r-xdata
push 0x38
call sub_420f36
mov esi eax
add esp 0x4
test esi esi
je r-xdata
shl esi 0x4
add esi [ rw-data ]
je r-xdata
inc [ ebx + 0x15c ]
xor esi esi
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x44 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x48 ]
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x40 ]
mov [ esi + 0xc ] ecx
lea ecx [ esi + 0x10 ]
mov [ esi ] 0x0
push eax
mov [ ecx + 0x8 ] 0x0
call sub_409ac0
lea eax [ ebp - 0x30 ]
mov [ esi + 0x28 ] 0x0
lea ecx [ esi + 0x20 ]
push eax
call sub_409ac0
test bh bh
jne r-xdata
mov eax [ ebx + 0x160 ]
mov [ esi + 0x30 ] eax
mov [ ebx + 0x160 ] esi
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ edi ]
lea edx [ esi + 0x1 ]
mov [ edi ] edx
cmp esi [ rw-data ]
jg r-xdata
mov eax [ eax ]
cmp eax 0x8
jne r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov esi [ esi + 0x8 ]
mov edx 0x1
cmp esi edx
jbe r-xdata
sub eax 0x2
jne r-xdata
dec eax
jmp r-xdata
lea eax [ edx - 0x1 ]
mov bh 0x1
mov [ ebp - 0x48 ] eax
test bl bl
jne r-xdata
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
dec eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jne r-xdata
mov [ ebp + 0xc ] eax
cmp [ ebp + 0xb ] bl
jne r-xdata
cmp [ eax ] 0x5
jne r-xdata
inc edx
cmp edx esi
jb r-xdata
jmp r-xdata
cmp [ ebp + 0xb ] 0x1
je r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
push 0xffffffff
push 0x76
call sub_469ed4
jmp r-xdata
mov [ ebp + 0xb ] 0x1
test bl bl
jne r-xdata
inc [ ebp + 0xc ]
jmp r-xdata
cmp [ ebp + 0xb ] 0x1
je r-xdata
lea ecx [ ebp - 0x30 ]
call sub_409a20
lea ecx [ ebp - 0x40 ]
call sub_409a20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x8 ] edx
jmp r-xdata
test bl bl
jne r-xdata
mov ecx [ ebp - 0xc ]
lea eax [ edx - 0x1 ]
mov [ ebp - 0x10 ] 0x1
mov [ ecx + 0xf4 ] eax
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push esi
call sub_409f6b
test eax eax
js r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edi ]
dec eax
mov [ edx + 0xf4 ] eax
mov eax [ esi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx edx
movsx eax [ eax + 0xa ]
push eax
push 0xa1
call sub_469ed4
jmp r-xdata
cmp [ eax ] 0x5
jne r-xdata
mov eax [ edx + ecx * 4 + 0x4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edi ]
dec eax
mov [ edx + 0xf4 ] eax
mov eax [ esi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx edx
movsx eax [ eax + 0xa ]
push eax
push 0x72
call sub_469ed4
jmp r-xdata
mov bl [ ebp - 0x1 ]
test bl bl
je r-xdata
mov edx [ edi ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
sub_40e140
mov ebx [ edx + edi * 4 ]
lea edi [ edi + 0x1 ]
cmp ecx esi
je r-xdata
lea eax [ esi + esi ]
cmp eax 0x8
jae r-xdata
push 0xc
call sub_420f36
mov esi eax
add esp 0x4
test esi esi
je r-xdata
xor ecx ecx
mov [ ebp - 0x14 ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov esi eax
add esp 0x4
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
mov eax 0x8
xor esi esi
jmp r-xdata
movzx ecx [ ebx + 0x8 ]
mov [ esi + 0x8 ] cx
movzx eax [ esi + 0x8 ]
movzx ecx [ ebx + 0xa ]
mov [ esi + 0xa ] cx
cmp ax 0x3f
jle r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
mov ebx [ ebp + 0x8 ]
mov [ eax + ecx * 4 ] esi
mov ecx [ ebp - 0x18 ]
mov edx [ ebx + 0x4 ]
inc ecx
mov [ ebp - 0x18 ] ecx
mov eax [ edx + edi * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
cmp ax 0x30
jl r-xdata
cmp ax 0x10
je r-xdata
shl ecx 0x2
push ecx
push eax
push esi
call sub_420fc0
add esp 0xc
push [ ebp - 0x1c ]
call j_sub_422ed5#3
add esp 0x4
mov edi eax
mov eax [ ebp - 0x14 ]
cmp ecx eax
je r-xdata
mov esi [ ebp - 0x14 ]
jmp sub_40e140
push 0x10
call sub_420f36
mov edx eax
add esp 0x4
test edx edx
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp ax 0x20
je r-xdata
add eax eax
cmp eax 0x8
jae r-xdata
push 0xc
call sub_420f36
mov esi eax
add esp 0x4
test esi esi
je r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebx ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
fld [ ebx ]
fstp [ esi ]
jmp r-xdata
mov eax [ ebx ]
mov [ esi ] eax
xor ecx ecx
mov [ ebp - 0x14 ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov esi eax
add esp 0x4
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
mov eax 0x8
xor esi esi
jmp r-xdata
movzx ecx [ edi + 0x8 ]
mov [ esi + 0x8 ] cx
movzx eax [ esi + 0x8 ]
movzx ecx [ edi + 0xa ]
mov [ esi + 0xa ] cx
cmp ax 0x3f
jle r-xdata
mov [ esi ] edx
jmp r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
push [ ebp + 0xc ]
mov [ eax + ecx * 4 ] esi
lea eax [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
inc [ ebp - 0x18 ]
push eax
call sub_41180e
xor esi esi
mov [ ebp - 0x20 ] r--data
cmp [ ebp - 0x18 ] esi
jbe r-xdata
cmp ax 0x30
jl r-xdata
cmp ax 0x10
je r-xdata
shl ecx 0x2
push ecx
push eax
push esi
call sub_420fc0
add esp 0xc
push [ ebp - 0x1c ]
call j_sub_422ed5#3
add esp 0x4
push [ ebp - 0x1c ]
mov [ ebp - 0x18 ] 0x0
call j_sub_422ed5#3
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
nop
push 0x10
call sub_420f36
mov edx eax
add esp 0x4
test edx edx
je r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp ax 0x20
je r-xdata
mov [ eax + esi * 4 ] 0x0
inc esi
cmp esi [ ebp - 0x18 ]
jb r-xdata
movzx eax [ edi + 0x8 ]
cmp ax 0x3f
jle r-xdata
xor edx edx
mov eax [ edi ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
jmp r-xdata
fld [ edi ]
fstp [ esi ]
jmp r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov eax [ ebp - 0x1c ]
mov edi [ eax + esi * 4 ]
test edi edi
je r-xdata
cmp ax 0x30
jl r-xdata
push edi
call j_sub_422ed5#3
mov eax [ ebp - 0x1c ]
add esp 0x4
mov [ esi ] edx
jmp r-xdata
mov ebx [ edi ]
test ebx ebx
je r-xdata
mov eax [ ebx + 0xc ]
dec [ eax ]
mov eax [ ebx + 0xc ]
cmp [ eax ] 0x0
je r-xdata
push [ ebx ]
call j_sub_422ed5#3
add esp 0x4
push [ ebx + 0xc ]
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
push ebx
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
sub_40e580
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ edx + 0x4 ]
mov esi ecx
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov eax [ edi ]
mov eax [ eax ]
cmp eax 0x4
jne r-xdata
sub eax 0x4
cmp eax 0x28
ja r-xdata
push [ ebp + 0xc ]
mov ecx esi
push edx
call sub_40e060
push 0xffffffff
push 0x81
mov ecx esi
call sub_469ed4
jmp r-xdata
jmp [ eax * 4 + r-xdata ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push ecx
mov ecx esi
call sub_40d6f0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx esi
push edx
call sub_40d910
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
push edx
call sub_40ce1a
mov [ esi + 0x144 ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x1
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
push edx
call sub_40d260
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esi + 0x165 ] cl
jne r-xdata
push [ ebp + 0xc ]
mov ecx esi
push edx
call sub_40de2e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esi + 0x165 ] 0x0
lea ecx [ esi + 0x15c ]
jne r-xdata
push [ ebp + 0xc ]
mov ecx esi
push edx
call sub_40dd2e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx esi
call sub_40df0c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push ecx
mov ecx esi
call sub_40dd90
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
push edx
call sub_40cdd4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x2
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
push edx
call sub_40d260
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx esi
push edx
call sub_40df6b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x0
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
push edx
call sub_40d260
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx esi
push edx
call sub_47ad30
jmp r-xdata
push [ ebp + 0xc ]
push ecx
mov ecx esi
call sub_47ae25
jmp r-xdata
lea ecx [ esi + 0x15c ]
call sub_41fd58
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
jmp r-xdata
lea ecx [ esi + 0x15c ]
call sub_41fd0f
jmp r-xdata
push [ ebp + 0xc ]
mov ecx esi
push edx
call sub_47b322
jmp r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
push edx
call sub_47a75d
jmp r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
push edx
call sub_47ab0f
jmp r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
push edx
call sub_47a4fb
jmp r-xdata
push 0x4
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
push edx
call sub_40d260
jmp r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
push edx
call sub_47afb7
jmp r-xdata
cmp [ edx + 0x8 ] 0x1
jbe r-xdata
mov eax [ edi + ecx * 4 + 0x4 ]
mov ecx esi
push [ eax ]
call sub_409fbd
mov ecx [ eax + 0x1c ]
mov eax [ ebp + 0xc ]
inc ecx
mov [ eax ] ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
push edx
call sub_47b5b4
jmp r-xdata
lea ecx [ esi + 0x168 ]
call sub_47a256
jmp r-xdata
mov ecx [ esi + 0x160 ]
mov edi [ ecx + 0x30 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x164 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
mov edx [ eax + 0x30 ]
jmp r-xdata
mov edx [ ecx + 0x4 ]
push 0xffffffff
push 0x69
mov ecx esi
call sub_469ed4
jmp r-xdata
mov eax [ edi + 0x4 ]
cmp [ eax + 0x8 ] cx
jne r-xdata
mov [ esi + 0x160 ] edi
mov [ esi + 0x165 ] 0x0
jmp r-xdata
push ecx
call sub_45696e
mov [ esi + 0x165 ] 0x1
jmp r-xdata
mov edi [ esi + 0x160 ]
mov ebx [ edi + 0x30 ]
test edi edi
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ ebp + 0xc ]
inc edx
mov [ eax ] edx
call sub_41fd0f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ eax ] 0x20
jne r-xdata
dec [ esi + 0x15c ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ esi + 0x160 ] ebx
mov [ esi + 0x165 ] 0x0
lea ecx [ edi + 0x20 ]
call sub_409a20
lea ecx [ edi + 0x10 ]
call sub_409a20
push edi
call j_sub_422ed5#3
add esp 0x4
mov ecx 0x1
sub_40e800
push ebp
mov ebp esp
sub esp 0x188
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor edi edi
mov [ ebp - 0x10 ] ecx
mov esi [ ebx + 0x4 ]
xor edx edx
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x64 ] 0x0
mov [ ebp - 0x5c ] 0x0
mov [ ebp - 0x58 ] 0x1
inc edi
jmp r-xdata
cmp ax 0x4f
je r-xdata
add edx 0x4
jmp r-xdata
dec edi
add edx 0x4
jmp r-xdata
cmp ax 0x47
je r-xdata
mov ecx [ edx + esi ]
movzx eax [ ecx + 0x8 ]
cmp ax 0x4e
je r-xdata
cmp ax 0x48
je r-xdata
movzx ecx [ ecx + 0x8 ]
cmp cx 0x41
je r-xdata
test edi edi
jne r-xdata
cmp cx 0x52
je r-xdata
cmp ax 0x7f
je r-xdata
mov eax [ esi ]
mov ecx 0x1
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x78 ] 0x0
mov edi [ eax ]
xor eax eax
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x54 ] eax
cmp [ rw-data ] eax
je r-xdata
cmp cx 0x53
je r-xdata
mov esi [ ebp - 0x10 ]
lea eax [ ebp - 0x64 ]
push 0xffffffff
push eax
lea eax [ ebp - 0xc ]
mov ecx esi
push eax
push ebx
call sub_40a000
mov ecx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
mov ebx [ rw-data ]
mov [ ebp - 0x20 ] ebx
test ebx ebx
je r-xdata
cmp [ rw-data ] al
jne r-xdata
cmp cx 0x54
je r-xdata
mov esi [ ebp - 0x5c ]
test esi esi
jne r-xdata
movsx eax [ eax + 0xa ]
mov ecx esi
push eax
push 0x72
call sub_469ed4
jmp r-xdata
mov eax [ ebp - 0x54 ]
xor esi esi
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x5 ] 0x0
test al 0x1
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
jmp r-xdata
mov esi [ rw-data ]
cmp cx 0x55
je r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x58 ]
cmp eax 0x5
jge r-xdata
mov [ ebp - 0x48 ] esi
test esi esi
je r-xdata
or eax 0x1
mov ecx rw-data
mov [ rw-data ] eax
call sub_4077c7
push sub_43b73a
call sub_422ec0
mov ebx [ rw-data ]
add esp 0x4
mov [ ebp - 0x20 ] ebx
jmp r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ ebp - 0x68 ] rw-data
mov [ ebp - 0x48 ] rw-data
cmp [ esi ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x5 ] 0x0
test al 0x1
je r-xdata
cmp cx 0x56
je r-xdata
push [ esi ]
call j_sub_422ed5#3
add esp 0x4
push [ esi + 0xc ]
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
push esi
call j_sub_422ed5#3
add esp 0x4
mov [ ebp - 0x5c ] 0x0
jmp r-xdata
add eax 0xfffffffb
cmp eax 0xa
ja r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0xc ]
jmp r-xdata
test eax 0x100
jne r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
je r-xdata
or eax 0x1
mov ecx rw-data
mov [ rw-data ] eax
call sub_4077c7
push sub_43b73a
call sub_422ec0
add esp 0x4
jmp r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ ebp - 0x48 ] rw-data
mov [ ebp - 0x68 ] rw-data
jmp r-xdata
jmp [ eax * 4 + sub_40f33c ]
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + edx * 4 ]
movzx ecx [ eax + 0x8 ]
movsx edi [ eax + 0x8 ]
cmp cx 0x41
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ eax ]
movsx eax [ eax + 0xa ]
push eax
push 0xa3
call sub_469ed4
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ ebx + 0x18 ]
lea eax [ ebx + 0x18 ]
mov [ ebp - 0x1c ] eax
test esi esi
je r-xdata
test edi edi
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp edi ecx
jb r-xdata
mov ebx [ esi ]
mov edx [ edi + 0x4 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] edx
mov ecx [ ebx + 0x4 ]
test edx edx
je r-xdata
lea eax [ ebp - 0x64 ]
mov ecx esi
push eax
call sub_409687
jmp r-xdata
cmp cx 0x52
je r-xdata
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x64 ]
push 0xffffffff
push eax
lea eax [ ebp - 0xc ]
inc edx
push eax
push ebx
mov [ ebp - 0xc ] edx
call sub_40a000
test eax eax
js r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jne r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + edx * 4 ]
movzx edi [ eax + 0x8 ]
cmp di 0x35
je r-xdata
cmp [ ebp - 0x5 ] 0x0
mov ecx [ ebp - 0x48 ]
mov eax [ ebx + 0x18 ]
mov [ ecx + 0x1c ] eax
mov eax [ rw-data ]
mov ecx [ ebp - 0x68 ]
mov eax [ eax + 0x1c ]
mov [ ecx + 0x18 ] eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov [ ecx + 0x18 ] eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov [ ecx + 0x1c ] eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp edi eax
ja r-xdata
lea eax [ ebx + 0x1c ]
mov ebx [ eax ]
mov [ ebp - 0x70 ] eax
test ebx ebx
je r-xdata
jmp r-xdata
mov edx [ ebx ]
mov esi [ eax ]
test ecx ecx
je r-xdata
mov ecx [ ebx ]
mov esi edi
mov edx [ eax ]
test esi esi
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
cmp eax 0xf
jne r-xdata
mov eax edx
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x2c ] 0x0
xor ebx ebx
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x50 ] eax
mov eax [ ecx + edx * 4 - 0x4 ]
mov [ ebp - 0x78 ] esi
mov [ ebp - 0x48 ] ebx
movsx eax [ eax + 0xa ]
mov [ ebp - 0x1c ] eax
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x4e
jne r-xdata
mov ecx esi
call sub_456241
test al al
je r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x8
je r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edi eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov ebx edi
mov ecx [ esi ]
mov edx [ edx ]
test edi edi
je r-xdata
mov ebx [ ebp - 0x20 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
cmp eax edi
ja r-xdata
xor eax eax
lea esp [ esp ]
mov ax [ edx ]
cmp ax [ ecx ]
jne r-xdata
mov ecx [ ebx + 0x18 ]
test ecx ecx
je r-xdata
test edx edx
jne r-xdata
cmp edx ecx
jb r-xdata
cmp cx 0x53
je r-xdata
mov ecx [ ebx + 0x4 ]
xor esi esi
mov edx [ ebp - 0x50 ]
mov [ ebp - 0x44 ] 0x0
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x38 ] 0x1
mov eax [ ecx + edx * 4 - 0x4 ]
mov [ ebp - 0x20 ] esi
movsx eax [ eax + 0xa ]
mov [ ebp - 0x70 ] eax
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x4e
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp - 0xc ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + edx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x7c
call sub_469ed4
jmp r-xdata
push 0x8
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x78 ] esi
push eax
lea eax [ ebp - 0xc ]
push eax
push edi
call sub_47c6d7
test eax eax
js r-xdata
cmp [ esi + 0xc ] 0x5
jne r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
inc edx
mov ecx [ ebp - 0x10 ]
push 0xffffffff
mov [ ebp - 0xc ] edx
movsx eax [ eax + 0xa ]
mov [ ebp - 0x54 ] eax
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push edi
call sub_40a000
test eax eax
js r-xdata
mov ebx [ ebp - 0x10 ]
mov ecx ebx
push 0x1
push r--data
push 0x0
push 0xa9
call sub_4794db
test eax eax
jns r-xdata
mov edx [ ebp - 0xc ]
jmp r-xdata
cmp di 0x35
je r-xdata
cmp eax 0xc
je r-xdata
mov eax [ esi + 0x10 ]
mov esi [ esi + 0x14 ]
and eax 0xff00
jmp r-xdata
cmp edi eax
jb r-xdata
nop
mov eax edi
mov [ ebp - 0x1c ] edi
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov esi eax
mov ecx [ edx ]
mov edx [ ebx ]
test eax eax
je r-xdata
jg r-xdata
add esi 0x2
add edx 0x2
dec ecx
jne r-xdata
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
add edx 0x2
add ecx 0x2
dec esi
jne r-xdata
mov dl [ ebp - 0x5 ]
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp edx eax
ja r-xdata
mov ecx [ ebx + 0x1c ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ ebx ]
mov edi [ edi ]
test ecx ecx
je r-xdata
mov ecx [ ebx ]
mov edi edx
mov edx [ ebp - 0x14 ]
mov edx [ edx ]
test edi edi
je r-xdata
cmp cx 0x54
je r-xdata
mov eax [ ebp - 0x78 ]
cmp [ eax + 0xc ] 0x5
jne r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
inc edx
mov ecx [ ebp - 0x10 ]
push 0xffffffff
mov [ ebp - 0x54 ] edx
movsx eax [ eax + 0xa ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push ebx
call sub_40a000
test eax eax
js r-xdata
movsx eax [ eax + 0xa ]
mov ecx [ ebp - 0x10 ]
push eax
push 0x72
call sub_469ed4
jmp r-xdata
test esi esi
je r-xdata
mov esi [ ebp - 0x48 ]
mov [ ebp - 0x15 ] 0x0
jmp r-xdata
xor edx edx
jmp r-xdata
mov edx [ esi ]
lea ecx [ ebp - 0x34 ]
jmp r-xdata
mov edi [ ebp - 0x28 ]
cmp edi 0x1
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ eax + ecx * 4 ]
mov ecx ebx
movsx eax [ eax + 0xa ]
push eax
push 0xa9
call sub_469ed4
jmp r-xdata
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
push esi
push eax
push edi
call sub_47b651
cmp eax 0x1
je r-xdata
cmp di 0x47
jne r-xdata
cmp eax 0xf
je r-xdata
mov ecx [ ebp - 0x1c ]
mov ebx esi
mov eax [ ebx + 0x1c ]
mov [ ecx ] eax
mov eax [ rw-data ]
mov [ ebx + 0x1c ] eax
mov [ rw-data ] ebx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x20 ]
jae r-xdata
add edx 0x2
add ecx 0x2
dec ebx
jne r-xdata
cmp eax edi
jae r-xdata
mov edi edi
mov [ ebp - 0x5 ] 0x1
mov ax [ esi ]
cmp ax [ edx ]
je r-xdata
jmp r-xdata
test eax eax
js r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0x68 ]
mov eax [ eax + 0x18 ]
mov [ ecx + 0x1c ] eax
mov eax [ esi ]
mov ecx [ ebp - 0x48 ]
mov eax [ eax + 0x1c ]
mov [ ecx + 0x18 ] eax
mov ecx [ esi ]
mov eax [ rw-data ]
mov [ ecx + 0x18 ] eax
mov ecx [ esi ]
mov eax [ rw-data ]
mov [ ecx + 0x1c ] eax
test dl dl
je r-xdata
mov edx eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
mov ebx edx
mov edx [ ecx ]
mov edi [ edi ]
jbe r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx edx
ja r-xdata
xor eax eax
jmp r-xdata
lea esp [ esp ]
mov ax [ edx ]
cmp ax [ ecx ]
jne r-xdata
cmp cx 0x55
je r-xdata
xor edx edx
jmp r-xdata
mov edx [ eax ]
lea ecx [ ebp - 0x44 ]
jmp r-xdata
mov esi [ ebp - 0x38 ]
cmp esi 0x1
jne r-xdata
mov edx [ ebp - 0x10 ]
cmp [ edx + 0xff ] 0x0
jne r-xdata
cmp edi 0x41
jne r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ ebp - 0xc ]
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x4e
jne r-xdata
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x210 ] 0x0
test ebx ebx
jle r-xdata
push 0x0
push 0x1
push edx
call sub_408ea0
mov esi eax
add esp 0xc
mov [ ebp - 0x48 ] esi
test esi esi
je r-xdata
mov esi [ edx ]
mov edi [ esi + 0x210 ]
cmp edi 0x40
jge r-xdata
call sub_409df0
jmp r-xdata
lea eax [ edi - 0x2 ]
cmp eax 0x9
ja r-xdata
mov ebx [ ebp - 0x34 ]
mov eax ebx
mov ecx [ edi + 0x4 ]
mov edx [ ebp - 0xc ]
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x4e
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x68 ]
mov edi [ ebp - 0x14 ]
mov [ ecx + 0x18 ] ebx
mov eax [ rw-data ]
mov [ ebp - 0x68 ] eax
mov ebx [ eax + 0x18 ]
mov [ ebp - 0x20 ] ebx
mov [ rw-data ] ebx
jmp r-xdata
jmp r-xdata
mov edi [ edi + 0x4 ]
mov ecx [ ebx + 0x4 ]
test edi edi
je r-xdata
mov ax [ edx ]
cmp ax [ ecx ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ ebp - 0x20 ]
mov ecx [ ebp - 0x70 ]
mov eax [ ebx + 0x18 ]
mov [ ecx ] eax
mov eax [ rw-data ]
mov [ ebx + 0x18 ] eax
mov [ rw-data ] ebx
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
jb r-xdata
add edx 0x2
add ecx 0x2
dec esi
jne r-xdata
mov edi [ ebp - 0x14 ]
mov esi [ esi ]
test esi esi
je r-xdata
cmp [ ebp - 0x20 ] eax
jb r-xdata
jmp r-xdata
mov ebx edx
jmp r-xdata
mov edx [ edi ]
mov edi [ ecx ]
mov [ ebp - 0x70 ] ebx
test ebx ebx
je r-xdata
test eax eax
js r-xdata
add edi 0x2
add edx 0x2
dec ecx
jne r-xdata
movzx eax ax
cmp ax [ edx ]
jmp r-xdata
movzx eax [ edx ]
cmp ax [ ecx ]
add edx 0x2
add ecx 0x2
dec edi
jne r-xdata
cmp cx 0x56
je r-xdata
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x210 ] 0x0
test esi esi
jle r-xdata
push 0x0
push 0x2
push edx
call sub_408ea0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
mov eax [ ebp - 0x20 ]
lea ecx [ ecx ]
lea eax [ esi - 0x2 ]
cmp eax 0x9
ja r-xdata
mov ebx [ ebp - 0x44 ]
mov eax ebx
mov eax [ ecx ]
mov ecx edx
movsx eax [ eax + 0xa ]
push eax
push 0x79
call sub_469ed4
jmp r-xdata
cmp edi 0x41
jne r-xdata
add edi 0xffffffae
cmp edi 0x4
ja r-xdata
lea eax [ ebp - 0x64 ]
cmp esi eax
je r-xdata
jmp r-xdata
push [ ebp - 0x1c ]
push 0x7a
jmp r-xdata
mov ecx [ ebp - 0x2c ]
test ecx ecx
jne r-xdata
inc ecx
cmp ecx ebx
jl r-xdata
mov eax [ ebp + ecx * 4 - 0x184 ]
mov [ esi + edi * 4 + 0x110 ] eax
mov eax [ edx ]
inc [ eax + 0x210 ]
mov ebx [ ebp - 0x34 ]
jmp r-xdata
jmp [ eax * 4 + r-xdata ]
push [ ebp - 0x54 ]
push 0x7b
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ecx + 0x4 ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] 0x4f
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov edi [ ebp - 0x14 ]
mov [ ecx + 0x1c ] ebx
mov eax [ rw-data ]
mov [ ebp - 0x48 ] eax
mov ebx [ eax + 0x1c ]
mov [ ebp - 0x20 ] ebx
mov [ rw-data ] ebx
jmp r-xdata
jmp r-xdata
mov ax [ edx ]
cmp ax [ ecx ]
jne r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ esi + 0x10 ]
mov esi [ esi + 0x14 ]
and eax 0xff00
mov [ ebp - 0x54 ] eax
test esi esi
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ecx + 0x1c ]
mov [ edx + 0x18 ] eax
mov eax [ esi ]
mov [ ecx + 0x1c ] eax
mov [ esi ] ecx
cmp [ ecx + 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov ax [ edi ]
cmp ax [ edx ]
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jb r-xdata
lea esp [ esp ]
mov edx [ ebp - 0x20 ]
mov edi [ ebp - 0x14 ]
jle r-xdata
mov ax [ edi ]
cmp ax [ edx ]
je r-xdata
jmp r-xdata
sbb eax eax
and eax 0xfffffffe
inc eax
movsx eax [ eax + 0xa ]
mov ecx [ ebp - 0x10 ]
push eax
push 0x80
call sub_469ed4
jmp r-xdata
push [ ebp - 0x70 ]
mov ecx [ ebp - 0x10 ]
push 0x7a
call sub_469ed4
jmp r-xdata
mov ecx [ ebp - 0x3c ]
test ecx ecx
jne r-xdata
inc ecx
cmp ecx eax
jl r-xdata
mov eax [ ebp + ecx * 4 - 0x184 ]
mov [ esi + ebx * 4 + 0x110 ] eax
mov eax [ edx ]
inc [ eax + 0x210 ]
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x44 ]
jmp r-xdata
jmp [ eax * 4 + r-xdata ]
push [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
push 0x7b
call sub_469ed4
lea ecx [ ebp - 0x44 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x54 ]
mov eax [ ecx + 0x4 ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] 0x4f
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x64 ]
push eax
push [ ebp - 0x14 ]
call sub_408620
jmp r-xdata
jmp [ edi * 4 + jump_table_40f328 ]
cmp [ esi + 0xc ] 0x4
je r-xdata
mov ecx [ ebp - 0x10 ]
call sub_469ed4
jmp r-xdata
push ecx
call sub_407b3d
mov [ ebp - 0x2c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x28 ]
cmp eax 0x5
jge r-xdata
mov eax [ ecx + 0x4 ]
mov eax [ eax + edx * 4 - 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x7b
inc edx
mov [ ebp - 0xc ] edx
cmp edi 0x1
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov eax [ esi ]
mov edi [ ebp - 0x14 ]
mov [ ecx + 0x18 ] eax
mov eax [ esi ]
mov [ ebp - 0x48 ] eax
mov eax [ eax + 0x18 ]
mov [ esi ] eax
jmp r-xdata
jae r-xdata
add edi 0x2
add edx 0x2
dec ebx
jne r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ecx + 0x18 ]
mov [ edx + 0x1c ] eax
mov eax [ esi ]
mov [ ecx + 0x18 ] eax
mov [ esi ] ecx
cmp [ ecx + 0x1c ] 0x0
je r-xdata
jmp r-xdata
jae r-xdata
add edi 0x2
add edx 0x2
dec [ ebp - 0x70 ]
jne r-xdata
mov dl 0x1
mov edx [ ebp - 0x20 ]
mov edi [ ebp - 0x14 ]
push ecx
call sub_407b3d
mov [ ebp - 0x3c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x38 ]
cmp eax 0x5
jl r-xdata
mov esi [ edx ]
mov ebx [ esi + 0x210 ]
cmp ebx 0x40
jge r-xdata
mov ecx [ ebp - 0x34 ]
test ecx ecx
je r-xdata
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ eax + edx * 4 - 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x7b
call sub_469ed4
lea ecx [ ebp - 0x44 ]
jmp r-xdata
inc edx
mov [ ebp - 0x50 ] edx
cmp esi 0x1
jne r-xdata
lea eax [ ebp - 0x64 ]
mov ecx esi
push eax
call sub_409700
jmp r-xdata
lea eax [ ebp - 0x64 ]
mov ecx esi
push eax
call sub_4562b3
jmp r-xdata
lea eax [ ebp - 0x64 ]
mov ecx esi
push eax
call sub_40963c
jmp r-xdata
lea eax [ ebp - 0x64 ]
mov ecx esi
push eax
call sub_45625a
jmp r-xdata
cmp [ ebp - 0x58 ] 0x4
jne r-xdata
mov edi [ esi + 0x8 ]
test edi edi
jne r-xdata
add eax 0xfffffffb
cmp eax 0xa
ja r-xdata
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x15 ] 0x1
add edi 0xfffffffe
cmp edi 0x9
ja r-xdata
mov eax [ ebp - 0x48 ]
mov edi [ ebp + 0x8 ]
mov [ ebp + eax * 4 - 0x184 ] ebx
mov ebx eax
mov ecx [ edi + 0x4 ]
inc ebx
mov [ ebp - 0x48 ] ebx
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x4e
je r-xdata
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x68 ]
mov eax [ esi ]
mov [ ecx + 0x1c ] eax
mov edi [ esi ]
mov [ ebp - 0x68 ] edi
mov eax [ edi + 0x1c ]
mov edi [ ebp - 0x14 ]
mov [ esi ] eax
jmp r-xdata
mov ax [ edi ]
cmp ax [ edx ]
jne r-xdata
jmp r-xdata
push ecx
call sub_4571e5
jmp r-xdata
add esi 0xfffffffe
cmp esi 0x9
ja r-xdata
mov esi [ ebp - 0x20 ]
mov [ ebp + esi * 4 - 0x184 ] ebx
inc esi
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x20 ] esi
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x4e
je r-xdata
mov ecx [ esi + 0x8 ]
mov esi [ ebp - 0x5c ]
cmp ecx esi
je r-xdata
mov eax [ edi + 0xc ]
dec [ eax ]
mov eax [ edi + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x5
jge r-xdata
jmp [ eax * 4 + r-xdata ]
xor ebx ebx
jmp r-xdata
jmp [ edi * 4 + jump_table_444606 ]
add eax 0xfffffffb
cmp eax 0xa
ja r-xdata
xor ebx ebx
jmp r-xdata
jmp [ esi * 4 + jump_table_444682 ]
push esi
call sub_4080d7
jmp r-xdata
push edi
call j_sub_422ed5#3
add esp 0x4
mov [ esi + 0x8 ] 0x0
jmp r-xdata
push [ edi ]
call j_sub_422ed5#3
add esp 0x4
push [ edi + 0xc ]
call j_sub_422ed5#3
add esp 0x4
sub eax 0x5
cmp eax 0xa
ja r-xdata
lea eax [ ebp - 0x64 ]
mov [ esi + 0xc ] 0x1
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_409ac0
mov ebx [ ebp - 0x34 ]
mov edx [ ebx ]
cmp edx 0x8
jg r-xdata
mov eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x34 ]
mov edx [ eax ]
call sub_4095c1
test al al
je r-xdata
fld [ ebp - 0x34 ]
call sub_43b500
mov edx [ ebp - 0xc ]
mov ebx eax
jmp r-xdata
xor eax eax
test bl bl
setne al
mov ebx eax
jmp r-xdata
jmp [ eax * 4 + r-xdata ]
mov ebx [ ebp - 0x44 ]
mov edx [ ebx ]
cmp edx 0x8
jg r-xdata
mov eax [ ebp - 0x3c ]
lea ecx [ ebp - 0x44 ]
mov edx [ eax ]
call sub_4095c1
test al al
je r-xdata
fld [ ebp - 0x44 ]
call sub_43b500
mov edx [ ebp - 0x50 ]
mov ebx eax
jmp r-xdata
xor eax eax
test bl bl
setne al
mov ebx eax
jmp r-xdata
jmp [ eax * 4 + jump_table_40f368 ]
mov ecx [ ebx + 0x4 ]
lea eax [ ebp - 0x6c ]
push eax
call sub_465630
mov eax [ ebp - 0x6c ]
add esp 0x4
jmp r-xdata
push edx
call sub_42370a
mov edx [ ebp - 0xc ]
add esp 0x4
mov ebx eax
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x10
lea edx [ ebp - 0x24 ]
call sub_41fb3b
mov ebx [ ebp - 0x24 ]
add esp 0x4
mov edx [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebx + 0x4 ]
lea eax [ ebp - 0x4c ]
push eax
call sub_465630
mov eax [ ebp - 0x4c ]
add esp 0x4
jmp r-xdata
push edx
call sub_42370a
mov edx [ ebp - 0x50 ]
add esp 0x4
mov ebx eax
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x10
lea edx [ ebp - 0x6c ]
call sub_41fb3b
mov ebx [ ebp - 0x6c ]
add esp 0x4
mov edx [ ebp - 0x50 ]
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov eax [ esi ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
push [ esi ]
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
test eax eax
js r-xdata
test eax eax
js r-xdata
push ecx
call sub_408e34
jmp r-xdata
push eax
call [ VariantClear@IAT ]
push [ esi ]
jmp r-xdata
lea ecx [ edi + 0x8 ]
jmp r-xdata
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
push ecx
call sub_4571d0
jmp r-xdata
push ecx
call sub_4571e5
jmp r-xdata
mov ecx edi
call sub_405a64
push edi
sub_40f383
add [ 0x37004445 ] cl
inc ebp
inc esp
add [ edi ] dh
inc ebp
inc esp
add [ edx ] ah
inc ebp
inc esp
add [ ebp - 0x75 ] dl
in al dx
push ecx
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx ecx
push edi
inc [ esi ]
xor edi edi
mov edx [ esi ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
inc edi
jmp r-xdata
dec eax
je r-xdata
inc edx
mov [ esi ] edx
jmp r-xdata
test edi edi
jne r-xdata
sub eax 0x37
je r-xdata
mov eax [ ecx + edx * 4 ]
movsx eax [ eax + 0x8 ]
sub eax 0x47
je r-xdata
dec edi
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
lea eax [ edx + 0x1 ]
mov [ esi ] eax
xor eax eax
mov eax [ ecx + edx * 4 - 0x4 ]
mov ecx ebx
movsx eax [ eax + 0xa ]
push eax
push 0x6f
call sub_469ed4
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40f394
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx ecx
push edi
inc [ esi ]
xor edi edi
mov edx [ esi ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
inc edi
jmp r-xdata
dec eax
je r-xdata
inc edx
mov [ esi ] edx
jmp r-xdata
test edi edi
jne r-xdata
sub eax 0x37
je r-xdata
mov eax [ ecx + edx * 4 ]
movsx eax [ eax + 0x8 ]
sub eax 0x47
je r-xdata
dec edi
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
lea eax [ edx + 0x1 ]
mov [ esi ] eax
xor eax eax
mov eax [ ecx + edx * 4 - 0x4 ]
mov ecx ebx
movsx eax [ eax + 0xa ]
push eax
push 0x6f
call sub_469ed4
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40f3f0
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx ecx
inc [ edx ]
push edi
mov edi [ edx ]
mov esi [ esi + 0x4 ]
mov eax [ esi + edi * 4 ]
lea ecx [ esi + edi * 4 ]
mov [ ebp - 0x4 ] ebx
cmp [ eax + 0x8 ] 0x47
jne r-xdata
mov eax [ ecx - 0x4 ]
jmp r-xdata
lea eax [ edi + 0x1 ]
xor edi edi
mov [ ebp - 0x8 ] eax
mov [ ebp + 0x14 ] eax
movsx eax [ eax + 0xa ]
mov ecx ebx
push eax
push 0x6f
call sub_469ed4
jmp r-xdata
lea eax [ ecx + 0x1 ]
jmp r-xdata
sub eax 0x47
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx eax
mov [ edx ] eax
mov eax [ esi + ecx * 4 ]
movsx eax [ eax + 0x8 ]
cmp eax 0x47
jl r-xdata
inc edi
jmp r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
test edi edi
jne r-xdata
sub eax 0x37
je r-xdata
dec edi
lea eax [ ecx + 0x1 ]
jmp r-xdata
mov ebx [ ebp + 0x18 ]
mov edi ecx
mov esi [ ebp + 0xc ]
lea eax [ edi + 0x1 ]
mov [ ebx ] 0x0
mov [ edx ] eax
cmp [ ebp - 0x8 ] edi
jae r-xdata
mov eax [ esi + ecx * 4 - 0x4 ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ esi + 0xc ]
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x1
cmp [ esi + 0x8 ] eax
je r-xdata
push ebx
push esi
call sub_47a3ee
jmp r-xdata
xor eax eax
add eax eax
cmp eax 0x8
jae r-xdata
push 0x10
call sub_420f36
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov ebx eax
add esp 0x4
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov eax 0x8
xor ebx ebx
jmp r-xdata
lea eax [ ebp - 0x18 ]
mov [ ebx + 0x8 ] 0x0
push eax
mov ecx ebx
call sub_409ac0
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov [ esi + 0x4 ] ebx
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
push edi
mov [ eax + ecx * 4 ] ebx
inc [ esi + 0x8 ]
cmp [ ebp + 0x1c ] 0x0
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
jne r-xdata
push 0x0
push 0x0
push 0x100
push [ eax + ecx * 4 - 0x4 ]
mov ecx [ ebp - 0x4 ]
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
call sub_40f803
test eax eax
js r-xdata
push [ eax + ecx * 4 - 0x4 ]
mov ecx [ ebp - 0x4 ]
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
call sub_40a000
test eax eax
js r-xdata
shl ecx 0x2
push ecx
push eax
push ebx
call sub_420fc0
add esp 0xc
push [ esi + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_409a20
jmp r-xdata
mov ebx [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
inc [ ebx ]
cmp ecx edi
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_409a20
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x40
jne r-xdata
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x6f
call sub_469ed4
lea eax [ ecx + 0x1 ]
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp + 0x14 ] eax
call sub_409a20
cmp [ ebp + 0x14 ] edi
jb r-xdata
jmp r-xdata
sub_40f5c0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x38
mov edx [ ebp + 0x10 ]
push esi
mov esi ecx
mov [ esp + 0x1c ] r--data
mov ecx [ ebp + 0xc ]
mov edx [ edx ]
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x24 ] 0x0
mov eax [ ecx + 0x4 ]
mov [ esp + 0x28 ] 0x0
push edi
mov [ esp + 0x18 ] esi
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
movsx eax [ eax + 0xa ]
mov [ esp + 0x1c ] eax
mov eax [ rw-data ]
mov [ esp + 0x10 ] edi
test al 0x1
je r-xdata
or eax 0x1
lea ecx [ esp + 0x30 ]
push r--data
mov [ rw-data ] eax
call sub_407f41
mov ecx [ rw-data ]
push [ eax ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
lea ecx [ esp + 0x30 ]
mov [ rw-data ] eax
call sub_405a64
mov ecx [ ebp + 0xc ]
jmp r-xdata
cmp edi [ rw-data ]
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ecx
mov ecx esi
call sub_47bd80
mov [ esp + 0xc ] eax
jmp r-xdata
lea eax [ esi + 0x470 ]
push edi
mov ecx eax
mov [ esp + 0x18 ] eax
call sub_418fd0
mov ecx esi
mov al [ eax + 0x20 ]
mov [ esp + 0xc ] al
lea eax [ esp + 0xc ]
push [ esp + 0xc ]
push eax
push [ ebp + 0x10 ]
lea eax [ esp + 0x2c ]
push [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_40f3f0
test eax eax
js r-xdata
xor esi esi
mov [ esp + 0x20 ] r--data
cmp [ esp + 0x28 ] esi
jbe r-xdata
mov [ esp + 0xc ] 0xffffffff
jmp r-xdata
push edi
lea ecx [ esi + 0x470 ]
call sub_418fd0
mov ecx [ esp + 0xc ]
cmp ecx [ eax + 0x18 ]
jl r-xdata
push [ esp + 0x24 ]
mov [ esp + 0x2c ] 0x0
call j_sub_422ed5#3
mov eax [ esp + 0x10 ]
add esp 0x4
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov eax [ esp + 0x24 ]
mov edi [ eax + esi * 4 ]
test edi edi
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push edi
lea ecx [ esi + 0x470 ]
call sub_418fd0
mov ecx [ esp + 0xc ]
cmp ecx [ eax + 0x1c ]
jg r-xdata
mov [ eax + esi * 4 ] 0x0
inc esi
cmp esi [ esp + 0x28 ]
jb r-xdata
mov ecx edi
call sub_409df0
push edi
call j_sub_422ed5#3
mov eax [ esp + 0x28 ]
add esp 0x4
mov eax [ ebp + 0x10 ]
add [ eax ] 0xfffffffe
push [ esp + 0x1c ]
mov ecx esi
push 0x70
call sub_469ed4
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov ecx edi
call sub_409a20
mov [ edi + 0xc ] 0x1
mov [ edi ] 0x1
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi + 0x8 ]
add ecx esi
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x14 ] 0x0
cmp [ ecx + 0xd ] 0x0
mov eax [ ecx + 0x8 ]
jne r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x18 ] 0x0
mov eax [ esi ]
mov edi [ eax + 0x4 ]
add edi esi
cmp [ edi + 0xd ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov esi [ eax + 0x38 ]
jmp r-xdata
mov esi [ edi + 0x8 ]
lea ecx [ esi + 0x20 ]
call sub_409a20
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x20 ] 0x0
cmp [ edi + 0xd ] 0x0
mov eax [ edi + 0x8 ]
jne r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
push [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov [ eax + 0x30 ] 0x0
call sub_418fd0
mov edi [ esp + 0x18 ]
push [ ebp + 0x14 ]
mov edx [ eax + 0x10 ]
mov ecx [ eax + 0x14 ]
mov esi [ eax + 0xc ]
lea eax [ esp + 0x24 ]
push eax
mov eax [ edi ]
mov ecx [ eax + ecx ]
add ecx edx
add ecx edi
call esi
test eax eax
js r-xdata
mov [ esp + 0xc ] 0x0
sub_40f803
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov eax [ esi ]
mov edx eax
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x4 ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov edx [ ebp - 0x8 ]
mov [ esi ] edx
jne r-xdata
and [ ebp + 0x8 ] 0x0
lea ecx [ ebp + 0x8 ]
push 0x0
push ecx
push [ eax ]
call sub_40859a
mov ebx eax
mov [ ebp + 0xc ] ebx
test ebx ebx
je r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + edx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x91
push [ ebp + 0x20 ]
push [ ebp + 0x10 ]
push esi
push edi
call sub_40a000
xor ecx ecx
test eax eax
setns cl
lea eax [ ecx - 0x1 ]
jmp r-xdata
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov ebx [ ebp - 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx ebx
push [ eax ]
call sub_409fbd
mov ecx [ esi ]
test eax eax
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx ebx
movsx eax [ eax + 0xa ]
push eax
jne r-xdata
mov eax 0x100
test [ ebp + 0x8 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
push 0xbc
jmp r-xdata
push 0x79
jmp r-xdata
test [ ebp + 0x14 ] eax
jne r-xdata
inc [ esi ]
cmp [ ebx + 0xc ] 0x5
mov edx [ esi ]
push 0x4e
pop ecx
jne r-xdata
call sub_469ed4
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0xf
je r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] cx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0xb0
jmp r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] cx
jne r-xdata
cmp [ ebx + 0xc ] 0xf
push 0x35
pop ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
lea eax [ ebp + 0xc ]
push 0x4
push eax
push esi
push edi
call sub_45655b
test eax eax
js r-xdata
mov ecx [ ebp - 0x4 ]
lea eax [ ebp + 0xc ]
push 0x10
push eax
push esi
push edi
call sub_47c6d7
jmp r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] cx
jne r-xdata
mov ecx ebx
call sub_4093dd
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov ebx [ ebp + 0xc ]
jmp r-xdata
test eax eax
js r-xdata
jmp r-xdata
mov eax [ edi + 0x4 ]
push 0x35
pop ecx
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] cx
je r-xdata
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x48
jne r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
push ecx
mov ecx [ ebp - 0x4 ]
lea eax [ ebp + 0xc ]
push eax
push esi
push edi
call sub_47c665
jmp r-xdata
cmp ax 0x7f
je r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x6
xor eax eax
mov [ esi ] ebx
jmp r-xdata
cmp ax 0x40
je r-xdata
sub_40f8cf
push ebp
mov ebp esp
sub esp 0x3c
push esi
xor edx edx
mov [ rw-data ] r--data
push edi
mov ecx rw-data
mov [ ebp - 0x4 ] edx
call sub_41fe8c
push ecx
call sub_420083
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov [ eax + rw-data ] r--data
mov eax [ rw-data ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x48c ]
mov [ ecx + rw-data ] eax
xor eax eax
mov ecx rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_4202e2
mov ecx rw-data
call sub_4077c7
mov ecx rw-data
call sub_4077c7
mov ecx rw-data
call sub_4077c7
xor eax eax
mov ecx rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_4077c7
xor eax eax
mov [ rw-data ] r--data
xor edi edi
mov [ rw-data ] eax
inc edi
mov [ rw-data ] eax
mov ecx rw-data
mov [ rw-data ] ax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] ax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] edi
call sub_4077c7
mov ecx rw-data
call sub_4160e7
mov [ rw-data ] r--data
xor edx edx
mov ecx rw-data
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
call sub_416259
mov ecx rw-data
call sub_4077c7
xor eax eax
mov ecx rw-data
push eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_418fd0
lea ecx [ ebp - 0x3c ]
call sub_41ffbf
push eax
mov eax [ rw-data ]
mov ecx [ eax + 0x4 ]
add ecx rw-data
call sub_41ff1e
lea ecx [ ebp - 0x1c ]
call sub_409a20
lea ecx [ ebp - 0x3c ]
call sub_409a20
xor eax eax
push 0xfffffff6
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] ax
mov [ rw-data ] al
mov [ rw-data ] al
mov [ rw-data ] eax
call [ GetStdHandle@IAT ]
mov esi eax
test esi esi
jne r-xdata
cmp esi 0xffffffff
je r-xdata
xor edx edx
mov [ rw-data ] edx
mov ecx esi
call sub_466be1
mov ecx eax
mov [ rw-data ] eax
call sub_4672b0
push esi
call [ CloseHandle@IAT ]
xor edx edx
jmp r-xdata
push 0xa
pop eax
mov ecx 0xfa
mov [ rw-data ] edi
push edx
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] 0x0
mov [ rw-data ] dl
mov [ rw-data ] dl
mov [ rw-data ] 0x64
mov [ rw-data ] 0x0
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] ecx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] ecx
call [ OleInitialize@IAT ]
pop edi
mov eax rw-data
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40fbbd
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea ebx [ edi - 0x48c ]
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov [ eax + edi - 0x48c ] r--data
mov eax [ ebx ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x48c ]
mov [ edx + edi - 0x490 ] eax
mov eax [ edi - 0x3a4 ]
test eax eax
jne r-xdata
push eax
call [ DestroyWindow@IAT ]
jmp r-xdata
xor esi esi
push esi
push esi
push esi
push r--data
call [ mciSendStringW@IAT ]
cmp [ edi - 0x2c4 ] esi
ja r-xdata
mov eax [ edi - 0x2c8 ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
xor esi esi
cmp [ edi - 0x2f4 ] esi
ja r-xdata
inc esi
cmp esi [ edi - 0x2c4 ]
jae r-xdata
push [ eax ]
push [ rw-data ]
call [ UnregisterHotKey@IAT ]
mov eax [ edi - 0x2c8 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ edi - 0x2f8 ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx ebx
call sub_4112ad
xor esi esi
cmp [ edi - 0x2e4 ] esi
ja r-xdata
jmp r-xdata
push ecx
call sub_420d1d
inc esi
cmp esi [ edi - 0x2f4 ]
jb r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov eax [ edi - 0x2e8 ]
mov eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
xor esi esi
cmp [ edi - 0x2d4 ] esi
ja r-xdata
jmp r-xdata
push [ eax + 0x8 ]
call [ FindClose@IAT ]
mov ecx [ eax + 0x4 ]
call sub_405dcf
jmp r-xdata
inc esi
cmp esi [ edi - 0x2e4 ]
jb r-xdata
push [ eax ]
call [ FreeLibrary@IAT ]
mov eax [ edi - 0x2d8 ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
lea esi [ edi - 0x2bc ]
mov ecx esi
call sub_409a20
xor ecx ecx
mov [ esi + 0xc ] 0x1
mov [ esi ] ecx
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
add eax edi
cmp [ eax - 0x488 ] ecx
je r-xdata
push ecx
call sub_469c53
mov eax [ edi - 0x2f8 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
jmp r-xdata
inc esi
cmp esi [ edi - 0x2d4 ]
jb r-xdata
push 0x8000
push 0x0
push [ eax + 0x10 ]
call [ VirtualFree@IAT ]
mov eax [ edi - 0x2d8 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
call [ OleUninitialize@IAT ]
mov ecx [ edi - 0x24 ]
test ecx ecx
jne r-xdata
mov [ ebp - 0x4 ] ecx
jmp r-xdata
push ecx
call sub_469cad
dec [ ecx + 0x4 ]
jne r-xdata
mov ecx [ edi - 0x30 ]
test ecx ecx
jne r-xdata
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ eax - 0x48c ]
call sub_41fe53
mov eax [ ebx ]
lea ecx [ edi - 0x488 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_41fee8
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
add eax edi
cmp [ eax - 0x488 ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
jmp r-xdata
mov esi [ ecx + 0x4 ]
push ecx
call sub_469c87
mov ecx esi
test esi esi
jne r-xdata
xor ebx ebx
mov [ edi - 0x28 ] ebx
mov ecx [ edi - 0x40 ]
test ecx ecx
jne r-xdata
jmp r-xdata
mov esi [ ecx + 0x4 ]
push ecx
call sub_420a08
mov ecx esi
test esi esi
je r-xdata
lea ecx [ edi - 0x60 ]
mov [ edi - 0x38 ] ebx
call sub_405a64
lea ecx [ edi - 0x190 ]
call sub_4161fe
lea ecx [ edi - 0x1ac ]
call sub_416181
lea ecx [ edi - 0x29c ]
call sub_41608e
lea ecx [ edi - 0x2ac ]
call sub_405a64
lea ecx [ edi - 0x2bc ]
call sub_409a20
lea ecx [ edi - 0x2cc ]
call sub_4208d5
lea ecx [ edi - 0x2dc ]
call sub_420a9b
lea ecx [ edi - 0x2ec ]
call sub_420a9b
lea ecx [ edi - 0x2fc ]
call sub_420a9b
mov ecx [ edi - 0x304 ]
test ecx ecx
jne r-xdata
jmp r-xdata
mov esi [ ecx + 0x10 ]
push ecx
call sub_45cd22
mov ecx esi
test esi esi
jne r-xdata
lea ecx [ edi - 0x318 ]
call sub_403569
mov ecx [ edi - 0x320 ]
test ecx ecx
jne r-xdata
jmp r-xdata
mov esi [ ecx + 0x10 ]
push ecx
call sub_41fb26
mov ecx esi
test esi esi
jne r-xdata
mov ecx [ edi - 0x32c ]
test ecx ecx
jne r-xdata
jmp r-xdata
mov esi [ ecx + 0x30 ]
push ecx
call sub_45696e
mov ecx esi
test esi esi
jne r-xdata
lea ecx [ edi - 0x340 ]
call sub_405a64
lea ecx [ edi - 0x358 ]
call sub_408408
mov ecx [ edi - 0x364 ]
test ecx ecx
jne r-xdata
jmp r-xdata
mov esi [ ecx + 0x4 ]
push ecx
call sub_469c6b
mov ecx esi
test esi esi
jne r-xdata
mov [ edi - 0x35c ] ebx
mov ecx [ edi - 0x370 ]
test ecx ecx
jne r-xdata
jmp r-xdata
mov esi [ ecx + 0x4 ]
push ecx
call sub_469c6b
mov ecx esi
test esi esi
jne r-xdata
lea ecx [ edi - 0x3b4 ]
mov [ edi - 0x368 ] ebx
call sub_405a64
lea ecx [ edi - 0x3c4 ]
call sub_405a64
lea ecx [ edi - 0x3d4 ]
call sub_405a64
lea ecx [ edi - 0x404 ]
call sub_4200e9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
sub_40fe40
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xb4
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx ecx
push edi
mov edi [ ebp + 0x10 ]
sub esp 0x10
mov [ esp + 0x28 ] ebx
mov eax [ esi + 0x4 ]
mov [ esp + 0x30 ] 0x3
mov edx [ edi ]
mov eax [ eax + edx * 4 ]
mov edx esp
movsx ecx [ eax + 0xa ]
mov [ esp + 0x4c ] ecx
mov ecx [ eax ]
mov eax [ ecx ]
mov [ edx ] eax
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ecx + 0x8 ]
mov [ edx + 0x8 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebx + 0x134 ]
mov [ edx + 0xc ] eax
inc [ eax ]
call sub_4082e0
mov [ esp + 0x44 ] eax
test eax eax
je r-xdata
push [ esp + 0x3c ]
mov ecx ebx
push 0x85
call sub_469ed4
or eax 0xffffffff
jmp r-xdata
mov eax [ ebx + 0x148 ]
xor ecx ecx
mov [ esp + 0x84 ] eax
xor eax eax
mov [ esp + 0x64 ] ecx
mov ecx [ edi ]
mov [ esp + 0x70 ] eax
inc ecx
mov [ esp + 0x78 ] eax
mov [ esp + 0x38 ] eax
mov [ esp + 0x58 ] eax
mov [ esp + 0x60 ] eax
mov [ esp + 0x48 ] eax
mov [ esp + 0x68 ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x7c ] 0x1
mov [ esp + 0x4c ] r--data
mov [ esp + 0x50 ] 0x0
mov eax [ eax + ecx * 4 ]
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x5c ] r--data
mov [ edi ] ecx
cmp [ eax + 0x8 ] 0x47
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push [ esp + 0x3c ]
mov ecx ebx
push 0x6f
call sub_469ed4
jmp r-xdata
lea eax [ esp + 0x14 ]
mov [ esp + 0x24 ] ecx
push eax
lea eax [ esp + 0x28 ]
mov [ esp + 0x18 ] ecx
push eax
push edi
push esi
mov ecx ebx
call sub_40f394
test eax eax
js r-xdata
or ebx 0xffffffff
mov [ esp + 0x30 ] ebx
jmp r-xdata
mov ecx [ esp + 0x44 ]
mov eax [ ecx + 0x10 ]
cmp eax [ rw-data ]
jg r-xdata
lea ecx [ esp + 0x70 ]
call sub_409a20
mov edi [ esp + 0x64 ]
xor esi esi
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
test eax eax
jle r-xdata
mov ebx [ esp + 0x60 ]
nop
push [ esp + 0x60 ]
call j_sub_422ed5#3
mov eax [ esp + 0x58 ]
add esp 0x4
xor esi esi
test eax eax
jne r-xdata
mov edi [ eax + 0x4 ]
mov [ esp + 0x28 ] eax
mov eax [ edi ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
shl eax 0x4
add eax [ rw-data ]
push [ ebx + esi * 4 ]
call j_sub_422ed5#3
mov [ ebx + esi * 4 ] 0x0
add esp 0x4
inc esi
cmp esi edi
jb r-xdata
mov ebx [ esp + 0x30 ]
jmp r-xdata
mov ecx [ esp + 0x50 ]
push [ esp + 0x50 ]
call j_sub_422ed5#3
add esp 0x4
mov eax ebx
mov edx 0x3
cmp [ eax ] 0x2b
je r-xdata
mov [ ecx + esi * 4 ] 0x0
inc esi
cmp esi eax
jb r-xdata
mov ecx edi
call sub_409df0
push edi
call j_sub_422ed5#3
mov eax [ esp + 0x58 ]
add esp 0x4
mov ecx [ esp + 0x50 ]
cmp edx ecx
jae r-xdata
mov edi [ ebp + 0xc ]
mov edx 0x4
mov [ esp + 0x20 ] edx
jmp r-xdata
mov edi [ ecx + esi * 4 ]
test edi edi
je r-xdata
jmp r-xdata
shl esi 0x2
inc ebx
mov [ esp + 0x2c ] ebx
xor bl bl
mov [ esp + 0x40 ] 0x0
mov eax [ edi + esi ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov esi [ esp + 0x2c ]
test esi esi
jne r-xdata
mov esi [ esp + 0x18 ]
xor ebx ebx
mov esi edx
cmp [ ecx + 0x14 ] ebx
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x24 ]
mov [ esp + 0x10 ] esi
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
jg r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x10 ]
mov eax [ eax + 0x4 ]
mov [ esp + 0x6c ] eax
mov edi [ ebp + 0xc ]
mov eax [ edi + 0x4 ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] 0x33
je r-xdata
cmp esi 0x1
mov esi [ esp + 0x18 ]
jne r-xdata
cmp edx ecx
je r-xdata
test bl bl
jne r-xdata
cmp eax [ edi + 0x14 ]
jg r-xdata
mov eax [ esp + 0x6c ]
mov eax [ esi + eax ]
mov eax [ eax ]
cmp eax 0x24
jne r-xdata
mov eax [ esp + 0x6c ]
mov ecx [ eax + esi + 0x4 ]
mov eax [ eax + esi ]
mov eax [ eax ]
cmp eax [ ecx ]
mov ecx [ esp + 0x10 ]
je r-xdata
mov eax [ esp + 0x48 ]
mov esi [ esp + 0x64 ]
cmp esi eax
je r-xdata
xor bl bl
mov edi [ esp + 0x44 ]
mov eax [ esp + 0x2c ]
cmp eax [ edi + 0x18 ]
jl r-xdata
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x50 ]
push eax
call sub_47a3ee
test eax eax
jne r-xdata
lea eax [ esp + 0x1f ]
mov [ esp + 0x1f ] 0x0
push eax
lea ecx [ esp + 0x60 ]
call sub_456a42
lea ecx [ esp + 0x70 ]
call sub_409a20
lea eax [ esp + 0x70 ]
mov [ esp + 0x7c ] 0x1
push eax
lea ecx [ esp + 0x50 ]
mov [ esp + 0x74 ] esi
call sub_456363
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x54 ]
mov esi [ esp + 0x18 ]
push eax
mov eax [ esp + 0x54 ]
push [ eax + ecx * 4 - 0x4 ]
lea eax [ esp + 0x2c ]
mov ecx esi
push eax
push edi
call sub_40a000
test eax eax
jns r-xdata
mov eax [ ebp + 0x10 ]
add [ eax ] 0xfffffffe
push [ esp + 0x3c ]
mov ecx esi
push 0x70
call sub_469ed4
jmp r-xdata
cmp edx ecx
jne r-xdata
cmp eax 0x1e
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ esp + 0x28 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 + 0x4 ]
mov ecx [ esp + 0x18 ]
movsx eax [ eax + 0xa ]
push eax
push 0x91
call sub_469ed4
jmp r-xdata
add eax eax
mov [ esp + 0x48 ] eax
cmp eax 0x8
jae r-xdata
push 0x1
call sub_420f36
add esp 0x4
test eax eax
je r-xdata
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x14 ]
jmp r-xdata
lea ecx [ esp + 0x5c ]
call sub_4209c4
mov ecx [ esp + 0x2c ]
test ecx ecx
jle r-xdata
jmp r-xdata
mov eax [ edi + 0x10 ]
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x34 ] eax
test eax eax
js r-xdata
mov [ esp + 0x40 ] 0x100
inc ecx
mov eax [ edi + ecx * 4 ]
lea esi [ ecx * 4 ]
mov [ esp + 0x10 ] ecx
cmp [ eax + 0x8 ] 0x0
mov eax [ esp + 0x6c ]
je r-xdata
xor ecx ecx
mov [ esp + 0x68 ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov esi eax
add esp 0x4
mov eax [ esp + 0x60 ]
test eax eax
jne r-xdata
mov eax 0x8
mov [ esp + 0x48 ] eax
xor eax eax
jmp r-xdata
mov [ eax ] bl
mov [ esp + 0x1f ] 0x0
mov esi ecx
mov [ esp + 0x34 ] 0x0
jmp r-xdata
lea eax [ esp + 0x30 ]
mov ecx rw-data
push eax
call sub_4084dc
mov esi [ esp + 0x30 ]
test esi esi
jne r-xdata
mov eax [ esi + eax + 0x4 ]
cmp [ eax + 0x8 ] 0x33
je r-xdata
jmp r-xdata
mov ecx [ esp + 0x64 ]
test ecx ecx
je r-xdata
mov [ esp + 0x60 ] esi
mov esi [ esp + 0x64 ]
jmp r-xdata
mov ecx [ esp + 0x60 ]
mov [ ecx + esi * 4 ] eax
inc esi
lea ecx [ esp + 0x70 ]
mov [ esp + 0x64 ] esi
call sub_409a20
mov eax [ esp + 0x38 ]
mov [ esp + 0x7c ] 0x1
mov [ esp + 0x70 ] 0x0
cmp [ esp + 0x54 ] eax
je r-xdata
add eax eax
mov [ esp + 0x38 ] eax
cmp eax 0x8
jae r-xdata
push 0x10
call sub_420f36
mov esi eax
add esp 0x4
test esi esi
je r-xdata
lea eax [ esp + 0x1f ]
push eax
lea ecx [ esp + 0x60 ]
call sub_456a42
dec esi
jne r-xdata
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x14 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x1
jge r-xdata
shl ecx 0x2
push ecx
push eax
push esi
call sub_420fc0
add esp 0xc
push [ esp + 0x60 ]
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
xor ecx ecx
mov [ esp + 0x58 ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov edx [ esp + 0x54 ]
add esp 0x4
mov esi eax
test edx edx
jne r-xdata
mov eax 0x8
mov [ esp + 0x38 ] eax
xor esi esi
jmp r-xdata
lea eax [ esp + 0x70 ]
mov [ esi + 0x8 ] 0x0
push eax
mov ecx esi
call sub_409ac0
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
lea ecx [ esp + 0x34 ]
call sub_408720
mov ecx [ esp + 0x50 ]
mov eax [ esp + 0x60 ]
sub eax ecx
mov [ esp + 0x10 ] 0x1
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x20 ]
mov [ esp + 0x38 ] ecx
jmp r-xdata
mov ebx [ esp + 0x18 ]
mov eax [ esp + 0x2c ]
mov [ esp + 0x88 ] 0x0
mov [ esp + 0x90 ] 0x0
mov [ ebx + 0x148 ] eax
mov eax [ ebx ]
mov [ esp + 0x94 ] 0x1
mov [ esp + 0x98 ] 0x0
mov [ esp + 0x9c ] 0x0
mov edi [ eax + 0x4 ]
add edi ebx
mov [ esp + 0xa0 ] 0x0
mov [ esp + 0xa8 ] 0x0
mov [ esp + 0xb0 ] 0x0
mov [ esp + 0xb4 ] 0x1
cmp [ edi + 0xd ] 0x0
mov [ esp + 0xb8 ] 0x0
jne r-xdata
mov eax [ esp + 0x54 ]
test eax eax
je r-xdata
mov [ esp + 0x50 ] esi
jmp r-xdata
mov ecx [ esp + 0x54 ]
mov edx [ esp + 0x50 ]
mov eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x28 ]
mov [ edx + ecx * 4 ] esi
inc ecx
test bl bl
mov [ esp + 0x58 ] ecx
mov ebx [ esp + 0x1c ]
jne r-xdata
push 0x0
push 0x1
push [ esp + 0x4c ]
push [ edx + ecx * 4 - 0x4 ]
mov ecx ebx
push eax
push edi
call sub_40f803
test eax eax
js r-xdata
push [ edx + ecx * 4 - 0x4 ]
mov ecx ebx
push eax
push edi
call sub_40a000
test eax eax
js r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
push eax
lea ecx [ esp + 0x34 ]
call sub_408720
lea edx [ eax * 4 ]
xor esi esi
mov eax [ esp + 0x28 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + edx ]
cmp [ eax + 0x8 ] si
je r-xdata
mov ecx [ edi + 0x8 ]
lea eax [ esp + 0x88 ]
push eax
call sub_469b90
mov [ edi + 0xd ] 0x0
jmp r-xdata
push 0x40
call sub_420f36
mov esi eax
add esp 0x4
test esi esi
je r-xdata
lea ecx [ eax * 4 ]
push ecx
push edx
push esi
call sub_420fc0
add esp 0xc
push [ esp + 0x50 ]
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
mov esi [ esp + 0x10 ]
inc esi
jmp r-xdata
mov eax [ esp + 0x28 ]
mov esi [ esp + 0x10 ]
inc esi
mov [ esp + 0x10 ] esi
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi * 4 ]
cmp [ eax + 0x8 ] 0x41
je r-xdata
mov ecx esi
call sub_405a64
push esi
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
mov edi [ esp + 0x20 ]
jmp r-xdata
mov edx [ esp + 0x20 ]
xor edi edi
mov [ esp + 0x14 ] 0x1
mov ebx [ esp + 0x14 ]
lea edx [ edx * 4 + 0x4 ]
jmp r-xdata
mov eax [ esp + 0x44 ]
lea esi [ ebx + 0x15c ]
inc [ edi + 0x4 ]
mov edi [ ebx + 0xf4 ]
mov ecx [ esp + 0x18 ]
mov eax [ eax + 0x10 ]
mov ebx [ esi ]
inc eax
push eax
call sub_410b30
cmp ebx [ esi ]
jb r-xdata
xor esi esi
jmp r-xdata
lea eax [ esp + 0x88 ]
mov [ esi + 0x8 ] 0x0
push eax
mov ecx esi
call sub_409ac0
lea eax [ esp + 0xa8 ]
mov [ esi + 0x10 ] 0x0
lea ecx [ esi + 0x20 ]
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x18 ] 0x0
push eax
mov [ ecx + 0x8 ] 0x0
call sub_409ac0
mov [ esi + 0x30 ] 0x0
mov [ esp + 0x10 ] esi
jmp r-xdata
inc esi
xor edx edx
jmp r-xdata
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x14 ]
cmp edx ecx
je r-xdata
push ecx
call sub_45631f
mov eax [ ecx + edx ]
mov eax [ eax ]
cmp eax 0x24
je r-xdata
mov eax [ ecx + edx ]
movzx eax [ eax + 0x8 ]
cmp ax 0x47
je r-xdata
mov ecx esi
call sub_41fd0f
cmp ebx [ esi ]
jb r-xdata
mov ebx [ esp + 0x18 ]
mov eax [ ebx ]
mov [ ebx + 0xf4 ] edi
mov ecx [ eax + 0x4 ]
mov eax [ ecx + ebx + 0x8 ]
add ecx ebx
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov [ esi + 0x38 ] eax
mov [ edi + 0x8 ] esi
mov eax [ ecx + esi * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x47
je r-xdata
mov bl [ ebp + 0x8 ]
test bl bl
jne r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] 0x40
jne r-xdata
inc edi
cmp eax 0x1e
jne r-xdata
inc edi
jmp r-xdata
cmp ax 0x48
je r-xdata
jmp r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
mov eax [ ebp + 0x18 ]
je r-xdata
inc edx
jmp r-xdata
cmp ax 0x48
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx ebx
mov eax [ eax + edx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x6f
call sub_469ed4
jmp r-xdata
lea eax [ edx + 0x1 ]
cmp eax ecx
je r-xdata
mov [ esp + 0x20 ] edi
jmp r-xdata
mov eax [ ecx + edi * 4 ]
lea edx [ edi * 4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov esi 0x100
inc ebx
add edx 0x4
jmp r-xdata
dec edi
js r-xdata
cmp ax 0x40
jne r-xdata
mov esi [ ebp + 0x14 ]
mov ecx esi
mov [ eax ] 0x0
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x0
jmp r-xdata
cmp [ ecx + 0xd ] 0x0
mov [ eax ] 0x1
jne r-xdata
inc esi
jmp r-xdata
dec edx
js r-xdata
cmp ax 0x40
je r-xdata
mov edx eax
mov eax [ esp + 0x28 ]
mov [ esp + 0x24 ] edx
mov edi [ eax + 0x4 ]
mov eax [ edi + esi * 4 ]
cmp [ eax + 0x8 ] 0x40
jne r-xdata
mov [ esp + 0x14 ] ebx
mov ebx [ esp + 0x10 ]
cmp ebx [ esp + 0x2c ]
jg r-xdata
test edi edi
jne r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x4 ]
mov eax [ esi + ebx + 0x8 ]
add esi ebx
cmp [ esi + 0xd ] 0x0
jne r-xdata
mov eax [ ecx + 0x8 ]
mov edi [ eax + 0x38 ]
jmp r-xdata
mov edi [ ecx + 0x8 ]
jmp r-xdata
test edx edx
jne r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ esp + 0x44 ]
inc eax
mov [ esp + 0x30 ] eax
cmp eax [ ebx + 0x14 ]
jge r-xdata
inc esi
mov [ esp + 0x10 ] esi
mov ecx [ esp + 0x20 ]
mov edi [ esp + 0x14 ]
lea eax [ ecx + 0x2 ]
mov [ esp + 0x30 ] eax
lea eax [ edi + ecx ]
mov ecx [ esp + 0x18 ]
push eax
lea eax [ esp + 0x74 ]
push eax
lea eax [ esp + 0x38 ]
push eax
push [ esp + 0x34 ]
call sub_40a000
test eax eax
js r-xdata
mov edx [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
mov eax [ eax + edx ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov esi [ ebp + 0x14 ]
cmp esi edi
je r-xdata
cmp [ esi + 0xc ] 0x4
je r-xdata
mov ebx [ esp + 0x2c ]
jmp r-xdata
mov edx [ esp + 0x20 ]
lea eax [ esp + 0x70 ]
push 0x1
or esi 0x200
push esi
push eax
mov eax [ esp + 0x34 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edx * 4 ]
push [ eax ]
call sub_408620
jmp r-xdata
mov eax [ edx ]
cmp [ eax + 0xc ] 0x6
jne r-xdata
mov eax [ esp + 0x20 ]
or esi 0x200
cmp [ rw-data ] 0x0
mov edx [ edx ]
mov [ esp + 0x40 ] edx
mov eax [ ecx + eax * 4 ]
mov edi [ eax ]
je r-xdata
lea ecx [ esi + 0x4 ]
call sub_41feda
mov eax [ eax + 0x14 ]
mov [ esp + 0x9c ] eax
jmp r-xdata
cmp [ esi + 0xd ] 0x0
mov eax [ esi + 0x8 ]
jne r-xdata
cmp [ edi + 0xc ] 0x4
jne r-xdata
mov ecx esi
call sub_409a20
push edi
mov ecx esi
call sub_409ac0
mov eax [ esp + 0x20 ]
inc ebx
add [ esp + 0x38 ] 0x4
inc eax
add eax edi
mov [ esp + 0x10 ] ebx
mov edi [ esp + 0x44 ]
mov [ esp + 0x20 ] eax
cmp ebx [ edi + 0x14 ]
jle r-xdata
xor edx edx
mov edx [ eax ]
jmp r-xdata
push esi
push edx
push edi
mov ecx rw-data
call sub_408b13
mov edi [ esp + 0x14 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
cmp [ eax + 0x30 ] 0x0
jne r-xdata
push [ edi + 0x8 ]
mov ecx [ esi + 0x8 ]
call sub_4081a7
jmp r-xdata
jmp r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x18 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x79
call sub_469ed4
jmp r-xdata
mov edi [ esp + 0x14 ]
jmp r-xdata
mov edi [ esp + 0x20 ]
or esi 0x200
push 0x1
push esi
push edx
mov eax [ ecx + edi * 4 ]
push [ eax ]
call sub_4659de
test al al
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
jmp r-xdata
mov ebx [ rw-data ]
lea ecx [ esi + 0x4 ]
call sub_41feda
add eax 0x20
lea ecx [ esp + 0xa8 ]
push eax
call sub_409e9c
jmp r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x4 ]
add esi ebx
cmp [ esi + 0xd ] 0x0
jne r-xdata
push ebx
push edi
mov [ esp + 0x38 ] ebx
call sub_4088a0
test al al
jne r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
and esi 0xff00
push 0x20
mov [ esp + 0x4c ] esi
call sub_420f36
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov ecx [ esi + 0x8 ]
mov edi [ ecx + 0x38 ]
test ecx ecx
je r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
push [ esp + 0x40 ]
mov ecx [ ecx + 0x14 ]
call sub_409e9c
mov ebx [ esp + 0x10 ]
mov edi [ esp + 0x14 ]
jmp r-xdata
xor esi esi
jmp r-xdata
xor ecx ecx
mov [ esi + 0x4 ] 0x0
mov eax 0x8
mov [ esi + 0x8 ] 0x8
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
add esp 0x4
mov [ esi ] eax
xor ecx ecx
mov [ eax ] cx
push 0x4
call sub_420f36
add esp 0x4
test eax eax
je r-xdata
mov [ esi + 0x8 ] edi
mov [ esi + 0xd ] 0x0
jmp r-xdata
push ecx
call sub_41ff5c
mov [ esi + 0xd ] 0x1
jmp r-xdata
mov edi [ esi + 0x8 ]
mov ebx [ edi + 0x38 ]
test edi edi
je r-xdata
cmp esi edi
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
dec [ esi + 0x4 ]
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + ebx + 0x8 ]
add ecx ebx
cmp [ ecx + 0xd ] 0x0
jne r-xdata
mov [ esi + 0x8 ] ebx
mov ebx [ esp + 0x18 ]
mov [ esi + 0xd ] 0x0
lea ecx [ edi + 0x20 ]
call sub_409a20
mov ecx edi
call sub_409a20
push edi
call j_sub_422ed5#3
add esp 0x4
mov eax [ esp + 0x48 ]
push 0x10
mov [ esi + 0x10 ] eax
call sub_420f36
mov edi eax
add esp 0x4
test edi edi
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
mov [ esi + 0xc ] eax
mov eax [ eax + 0x38 ]
jmp r-xdata
mov edx [ esp + 0x9c ]
mov [ eax + 0x14 ] edx
cmp [ ecx + 0xd ] 0x0
mov eax [ ecx + 0x8 ]
jne r-xdata
xor edi edi
jmp r-xdata
push [ esp + 0x40 ]
mov ecx edi
mov [ edi + 0x8 ] 0x0
call sub_409ac0
dec eax
mov [ ecx ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
inc [ eax ]
jmp r-xdata
mov ebx [ edi + 0x4 ]
mov [ esi + 0x4 ] ebx
lea eax [ ebx + 0x1 ]
cmp [ esi + 0x8 ] eax
jb r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
mov [ eax + 0x18 ] 0x0
mov eax [ ebx ]
mov esi [ eax + 0x4 ]
add esi ebx
cmp [ esi + 0xd ] 0x0
jne r-xdata
mov [ esi + 0x14 ] edi
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x18 ] 0x0
push [ ebx ]
push esi
call sub_4087c0
mov edi [ esp + 0x14 ]
mov [ ebx ] eax
mov ebx [ esp + 0x10 ]
push eax
call sub_408170
mov [ esi + 0x8 ] eax
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
lea eax [ eax * 2 + 0x2 ]
push eax
push [ edi ]
push [ esi ]
call sub_420fc0
mov ebx [ esp + 0x3c ]
add esp 0xc
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x38 ]
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
add esp 0x4
mov [ esi ] eax
xor ecx ecx
mov [ eax + ebx * 2 ] cx
jmp r-xdata
push eax
call j_sub_422ed5#3
add esp 0x4
lea eax [ esp + 0xa8 ]
add ecx 0x20
push eax
call sub_409e9c
cmp [ esi + 0xd ] 0x0
mov eax [ esi + 0x8 ]
jne r-xdata
mov eax [ eax + 0x38 ]
jmp r-xdata
mov ecx rw-data
mov [ eax + 0x30 ] 0x0
call sub_40843f
mov eax [ esp + 0x84 ]
lea ecx [ esp + 0xa8 ]
mov [ ebx + 0x148 ] eax
xor ebx ebx
mov [ esp + 0x30 ] ebx
call sub_409a20
lea ecx [ esp + 0x88 ]
call sub_409a20
sub_4108ab
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ esp + 0x20 ] ecx
inc edx
mov ecx [ ebp + 0xc ]
push ebx
push esi
xor ebx ebx
mov [ esp + 0x38 ] edx
mov esi [ ecx + 0x8 ]
and [ esp + 0x10 ] ebx
and [ esp + 0x34 ] ebx
push edi
mov [ esp + 0x10 ] esi
xor edi edi
or esi 0xffffffff
mov [ esp + 0x20 ] esi
mov [ esp + 0x28 ] esi
mov [ esp + 0x24 ] esi
mov [ esp + 0x1c ] esi
mov [ esp + 0x18 ] esi
mov [ esp + 0x30 ] esi
cmp eax 0x15
je r-xdata
cmp [ esp + 0x10 ] ebx
je r-xdata
cmp eax 0x1d
ja r-xdata
movzx eax [ eax + r-xdata ]
jmp [ eax * 4 + jump_table_410a3b ]
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_409a20
mov edx [ esp + 0x2c ]
and [ esi ] ebx
mov [ esi + 0xc ] 0x1
push 0x0
mov eax [ edx ]
push 0x2
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
or esi 0xffffffff
jmp r-xdata
mov eax [ esp + 0x10 ]
lea edx [ ebx + 0x6 ]
cmp eax edx
ja r-xdata
or edi 0x5
or edi 0x4
mov ebx esi
push 0x7
pop edi
jmp r-xdata
push 0x7
pop edi
xor ebx ebx
jmp r-xdata
push 0x7
pop edi
jmp r-xdata
push 0x7
pop edi
or edi 0x5
or edi 0x4
xor ebx ebx
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov ebx edx
push 0x5
pop edi
lea ecx [ esp + 0x30 ]
push [ eax + 0x4 ]
call sub_409e9c
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x4 ]
push 0x7
pop edi
mov ecx [ eax ]
call sub_409c9c
push eax
lea eax [ esp + 0x48 ]
push r--data
push eax
call sub_423818
add esp 0xc
lea ecx [ esp + 0x44 ]
call sub_41fe06
mov ecx [ ebp + 0xc ]
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov edi edx
mov eax [ eax ]
lea ecx [ esp + 0x30 ]
call sub_409a20
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ecx + 0x4 ]
mov ecx [ eax + edx * 4 ]
call sub_409c9c
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x10 ]
jmp r-xdata
lea edx [ ebx + 0x5 ]
cmp eax edx
ja r-xdata
mov eax [ ecx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_41fe06
mov ecx [ ebp + 0xc ]
or esi 0xffffffff
jmp r-xdata
mov [ esp + 0x14 ] eax
jmp r-xdata
xor ebx ebx
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + edx * 4 ]
call sub_409c9c
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x10 ]
jmp r-xdata
lea edx [ ebx + 0x4 ]
cmp eax edx
jbe r-xdata
lea edx [ ebx + 0x3 ]
cmp eax edx
jbe r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edx * 4 ]
call sub_409c9c
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x10 ]
lea ecx [ ebx + 0x2 ]
cmp eax ecx
jbe r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edx * 4 ]
call sub_409c9c
mov esi eax
mov eax [ esp + 0x10 ]
lea ecx [ ebx + 0x1 ]
cmp eax ecx
jbe r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ecx * 4 ]
call sub_409c9c
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x10 ]
sub esp 0x10
lea eax [ esp + 0x40 ]
mov ecx esp
push eax
and [ ecx + 0x8 ] 0x0
call sub_409ac0
mov ebx [ esp + 0x24 ]
push edi
push [ esp + 0x2c ]
push [ esp + 0x34 ]
push [ esp + 0x3c ]
push esi
push [ esp + 0x48 ]
push [ esp + 0x50 ]
push ebx
push [ ebp + 0x8 ]
call sub_402d1a
mov edi [ ebp + 0x10 ]
mov esi eax
mov ecx edi
call sub_409a20
mov ecx edi
mov [ edi + 0xc ] 0x1
mov [ edi ] esi
call sub_409c9c
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + ebx * 4 + 0x4 ]
call sub_409c9c
mov [ esp + 0x28 ] eax
mov edx [ esp + 0x2c ]
push 0x0
push 0x1
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
jmp r-xdata
cmp [ ebp + 0x8 ] 0x1d
je r-xdata
xor esi esi
push ebx
call j_sub_422ed5#3
pop ecx
sub_410a8d
push ebp
mov ebp esp
mov eax 0x10008
call sub_431ac0
call sub_406ee0
test al al
je r-xdata
or eax 0xffffffff
jmp r-xdata
call sub_4112fe
test eax eax
js r-xdata
mov esp ebp
pop ebp
retn 0x8
call sub_414047
test eax eax
js r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x10008 ]
push eax
mov eax [ ebp + 0x8 ]
push 0x7fff
push [ eax ]
call [ GetFullPathNameW@IAT ]
lea eax [ ebp - 0x10008 ]
mov ecx rw-data
push eax
call sub_407d2c
push [ ebp - 0x4 ]
mov ecx rw-data
call sub_407d2c
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov [ eax - 0x2 ] cx
cmp [ ebp - 0x10004 ] cx
je r-xdata
lea eax [ ebp - 0x10008 ]
push r--data
push eax
call sub_422f0d
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x10008 ]
mov ecx rw-data
push eax
call sub_407d2c
mov eax [ ebp + 0xc ]
mov [ rw-data ] eax
xor eax eax
sub_410b30
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x160
push esi
push edi
mov edi ecx
mov [ esp + 0x44 ] edi
mov eax [ edi + 0xec ]
cmp eax 0xed8
jge r-xdata
push 0xffffffff
push 0x9a
mov [ rw-data ] 0x0
call sub_469ed4
or eax 0xffffffff
jmp r-xdata
inc eax
mov [ edi + 0xec ] eax
cmp eax 0x1
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x11c ]
mov [ esp + 0x40 ] eax
lea ecx [ ecx ]
cmp [ edi + 0xfc ] 0x0
mov [ edi + 0x144 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ edi + 0xec ]
mov [ edi + 0x144 ] 0x0
cmp eax 0x1
je r-xdata
mov esi [ PeekMessageW@IAT ]
push [ eax ]
mov ecx edi
call sub_409fbd
test eax eax
je r-xdata
mov ecx edi
call sub_4111d0
cmp [ edi + 0xfc ] 0x1
je r-xdata
dec eax
mov [ edi + 0xec ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ esp + 0x48 ]
push eax
lea ecx [ esp + 0x44 ]
call sub_456aca
mov eax [ esp + 0x40 ]
jmp r-xdata
mov eax [ eax + 0x10 ]
mov ecx edi
push 0x1
inc eax
push eax
call sub_45669f
xor eax eax
mov ecx edi
call sub_4111f3
push 0x0
call [ LockWindowUpdate@IAT ]
push [ rw-data ]
call [ DestroyWindow@IAT ]
mov esi [ GetMessageW@IAT ]
lea eax [ esp + 0x14c ]
push 0x0
push 0x0
push 0x0
push eax
call esi
test eax eax
jle r-xdata
cmp [ edi + 0x145 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
test eax eax
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
cmp [ edi + 0xf8 ] 0x0
je r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0xa4 ]
push eax
call esi
test eax eax
jne r-xdata
lea eax [ esp + 0x14c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ esp + 0x14c ]
push eax
call [ DispatchMessageW@IAT ]
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x158 ]
push eax
call esi
test eax eax
jg r-xdata
mov eax [ rw-data ]
push eax
mov ecx [ eax ]
mov esi [ eax + 0x4 ]
mov [ esp + 0xc ] ecx
call j_sub_422ed5#3
dec [ rw-data ]
add esp 0x4
mov [ rw-data ] esi
neg esi
sbb esi esi
xor ecx ecx
and [ rw-data ] esi
mov edx [ edi + 0x1c8 ]
mov [ esp + 0x18 ] ecx
test edx edx
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
jmp r-xdata
cmp [ esp + 0x98 ] 0x12
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
jmp r-xdata
cmp ecx edx
je r-xdata
mov esi [ edi + 0x1c4 ]
mov edi [ esp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ edi + 0x454 ] 0x0
je r-xdata
mov [ edi + 0xfc ] 0x1
mov [ edi + 0xf8 ] 0x1
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx 0xffffffff
jne r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ edi + 0xf8 ] 0x1
jmp r-xdata
cmp [ edi + 0xf8 ] 0x1
je r-xdata
mov esi [ PeekMessageW@IAT ]
mov edx 0x2
jmp r-xdata
mov eax [ edi + 0x1c4 ]
mov eax [ eax + ecx * 4 ]
mov ecx edi
mov eax [ eax ]
add eax 0x8
push eax
call sub_409fbd
mov ecx [ edi + 0x1c4 ]
mov esi eax
mov eax [ esp + 0x18 ]
mov ecx [ ecx + eax * 4 ]
mov ecx [ ecx ]
add ecx 0x18
push ecx
lea ecx [ edi + 0x14c ]
call sub_4081a7
mov eax [ esi + 0x10 ]
mov ecx edi
push 0x0
push 0x1
inc eax
push eax
call sub_40b89c
jmp r-xdata
inc ecx
cmp ecx edx
jb r-xdata
cmp [ eax ] edi
je r-xdata
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp ecx [ rw-data ]
jge r-xdata
lea eax [ esp + 0x94 ]
mov ecx rw-data
push eax
call sub_4031ce
test eax eax
je r-xdata
push ecx
lea eax [ esp + 0x4c ]
mov [ esp + 0x4c ] 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fe53
jmp r-xdata
mov edx 0x2
mov esi [ PeekMessageW@IAT ]
mov eax [ esi + ecx * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov edi [ esp + 0x44 ]
mov [ esp + 0x18 ] ecx
cmp [ edi + 0xfc ] 0x0
je r-xdata
cmp [ edi + 0x184 ] 0x0
jne r-xdata
cmp [ edi + 0x458 ] 0x1
je r-xdata
mov esi [ edi + 0x44c ]
lea eax [ edi + 0x44c ]
mov [ rw-data ] 0x1
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x8 ] eax
nop
mov [ rw-data ] 0xffffffff
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ eax + ecx * 4 ]
mov eax [ ecx ]
test eax eax
je r-xdata
lea eax [ esp + 0x94 ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ esp + 0x94 ]
push eax
call [ DispatchMessageW@IAT ]
jmp r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0xa4 ]
push eax
call esi
test eax eax
je r-xdata
cmp [ edi + 0x144 ] 0x0
mov edx 0x2
jne r-xdata
cmp [ edi + 0x484 ] 0x1
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x1
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x11 ] 0x0
jne r-xdata
mov edi [ esp + 0x8 ]
lea esp [ esp ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
jmp r-xdata
xor eax eax
mov [ edi + 0x484 ] 0x1
push [ edi + 0x188 ]
lea ecx [ esp + 0xf0 ]
mov [ esp + 0x68 ] 0x0
mov [ esp + 0xbc ] r--data
mov [ esp + 0x18 ] eax
mov [ esp + 0xc0 ] eax
mov [ esp + 0xc4 ] eax
mov [ esp + 0xc8 ] eax
call sub_469abe
lea ecx [ edi + 0x184 ]
call sub_45d801
mov esi [ esp + 0xf0 ]
lea ecx [ esp + 0x80 ]
mov [ esp + 0x88 ] 0x0
push [ esi ]
call sub_409ac0
mov esi [ esi + 0x4 ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
mov ecx edi
call sub_409fbd
mov edx eax
mov [ esp + 0x20 ] edx
mov ecx [ edx + 0x10 ]
push ecx
call sub_4071c8
mov [ edi + 0xf4 ] ecx
mov esi 0x3
cmp [ edx + 0x14 ] 0x0
mov [ esp + 0x3c ] eax
jle r-xdata
cmp [ edi + 0x459 ] 0x1
je r-xdata
mov eax [ edi + 0xf8 ]
cmp eax 0x7
je r-xdata
xor ecx ecx
mov [ esp + 0x9c ] 0x0
mov eax 0x8
mov [ esp + 0xa0 ] 0x8
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
add esp 0x4
mov [ esp + 0x98 ] eax
xor ecx ecx
mov [ eax ] cx
push 0x4
call sub_420f36
add esp 0x4
test eax eax
je r-xdata
mov esi [ esi + 0x4 ]
jmp r-xdata
mov edi [ eax + 0x14 ]
call [ timeGetTime@IAT ]
mov ecx eax
xor edx edx
sub eax edi
cmp edi 0x7fffffff
ja r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x11 ] 0x0
jne r-xdata
mov edi [ esp + 0x44 ]
mov [ rw-data ] al
cmp [ esp + 0x14 ] eax
jg r-xdata
lea eax [ esp + 0x94 ]
push eax
mov eax [ ecx ]
push [ eax + 0x18 ]
push [ eax ]
call [ TranslateAcceleratorW@IAT ]
test eax eax
jne r-xdata
push [ edx + 0x10 ]
call sub_408561
mov eax [ esp + 0x20 ]
mov esi 0x3
mov [ esp + 0x4c ] esi
mov [ esp + 0x18 ] 0x1
cmp [ eax + 0x14 ] 0x1
jl r-xdata
mov edx [ esp + 0xf0 ]
add edx 0x8
mov [ esp + 0x24 ] edx
lea ecx [ esp + 0x98 ]
call sub_4077c7
push 0xa
push [ edi + 0x444 ]
call [ WaitForSingleObject@IAT ]
mov [ esp + 0x48 ] eax
cmp eax 0x102
je r-xdata
cmp eax 0x2
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
test esi esi
jne r-xdata
cmp ecx 0x7fffffff
jbe r-xdata
cmp ecx 0x7fffffff
ja r-xdata
lea eax [ esp + 0x18 ]
mov ecx edi
push eax
call sub_46a212
jmp r-xdata
mov eax [ eax + 0x4 ]
jmp r-xdata
lea edx [ eax + 0x2 ]
jmp r-xdata
push r--data
lea ecx [ esp + 0x140 ]
call sub_407f41
mov esi [ esp + 0x80 ]
xor eax eax
cmp [ esp + 0x8c ] 0x6
push 0x1
setne al
dec eax
and eax esi
push 0x0
push eax
lea eax [ esp + 0x148 ]
push eax
call sub_408620
lea ecx [ esp + 0x13c ]
call sub_405a64
mov eax [ esp + 0x20 ]
mov ecx edi
push 0x0
push 0x0
mov eax [ eax + 0x10 ]
inc eax
push eax
call sub_40b89c
mov ecx rw-data
call sub_40843f
mov ecx [ esp + 0x88 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x3c ]
xor edx edx
mov [ esp + 0x6c ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x8 ] ecx
mov eax [ ecx + esi * 4 ]
cmp [ eax + 0x8 ] dx
jne r-xdata
mov eax [ ecx + esi * 4 + 0x4 ]
inc esi
cmp [ eax + 0x8 ] 0x41
jne r-xdata
mov edx [ esp + 0x3c ]
mov edx [ edx + 0x4 ]
lea ecx [ esp + 0x98 ]
call sub_405a64
jmp r-xdata
cmp [ esp + 0x9c ] 0x0
je r-xdata
lea eax [ esp + 0x48 ]
push eax
push [ edi + 0x444 ]
call [ GetExitCodeProcess@IAT ]
push [ edi + 0x444 ]
call [ CloseHandle@IAT ]
mov eax [ esp + 0x48 ]
mov [ esp + 0x8 ] eax
jmp r-xdata
push 0xa
call [ Sleep@IAT ]
cmp [ edi + 0x2f0 ] 0x0
je r-xdata
cmp eax 0x8
je r-xdata
mov [ esp + 0xa4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ esi ]
test edx edx
jl r-xdata
jmp r-xdata
cdq
mov eax [ edi ]
mov [ esp + 0x18 ] eax
test eax eax
jne r-xdata
mov eax [ esp + 0x8c ]
cmp eax 0x5
jl r-xdata
push ecx
call sub_407b3d
mov [ esp + 0x88 ] 0x0
mov edi [ esp + 0x8 ]
lea edx [ esi * 4 + 0x4 ]
mov [ esp + 0x24 ] 0x1
xor ecx ecx
mov esi [ esp + 0x24 ]
mov eax [ ecx + esi * 4 ]
mov eax [ eax ]
cmp eax 0x24
je r-xdata
push [ edx ]
lea ecx [ esp + 0xbc ]
call sub_456363
mov ecx [ esp + 0x64 ]
inc esi
mov eax [ esp + 0x20 ]
inc ecx
mov edx [ esp + 0x24 ]
add edx 0x4
mov [ esp + 0x64 ] ecx
mov [ esp + 0x24 ] edx
cmp ecx [ eax + 0x14 ]
jge r-xdata
mov edx [ esp + 0x18 ]
inc esi
xor ecx ecx
mov eax [ edx + esi * 4 ]
mov eax [ eax ]
cmp eax 0x24
je r-xdata
mov ecx eax
mov eax [ edx + esi * 4 ]
mov eax [ eax ]
cmp eax [ ecx ]
je r-xdata
lea eax [ esp + 0x94 ]
mov ecx rw-data
push eax
call sub_462700
test al al
je r-xdata
lea eax [ esp + 0x98 ]
mov ecx edi
push eax
call sub_409fbd
mov esi eax
test esi esi
je r-xdata
push ecx
lea eax [ esp + 0xc ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fe53
jmp r-xdata
mov eax [ edi + 0xf8 ]
cmp eax 0x3
jl r-xdata
mov ecx [ edi + 0x2f8 ]
call sub_42034a
test edx edx
jl r-xdata
push 0xa
call [ Sleep@IAT ]
cmp [ edi + 0x43c ] 0x0
je r-xdata
cmp eax 0x9
je r-xdata
mov eax [ rw-data ]
lea ecx [ esp + 0x94 ]
mov esi [ eax ]
push esi
call sub_486081
mov ecx rw-data
call sub_40467d
test esi esi
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
jg r-xdata
lea ecx [ esp + 0xec ]
mov [ esp + 0x8c ] 0x1
mov [ esp + 0x80 ] 0x0
call sub_4563f2
lea ecx [ esp + 0xb8 ]
call sub_4563f2
mov [ edi + 0x484 ] 0x0
jmp r-xdata
add eax 0xfffffffb
cmp eax 0xa
ja r-xdata
cmp ax 0x48
jne r-xdata
inc ecx
jmp r-xdata
inc esi
cmp eax 0x1e
jne r-xdata
mov eax [ esp + 0xbc ]
mov edx [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x3c ]
jmp r-xdata
cmp ax 0x48
jne r-xdata
inc ecx
jmp r-xdata
mov eax [ ecx + esi * 4 + 0x4 ]
inc esi
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp eax 0x1e
jne r-xdata
mov eax [ esp + 0x3c ]
mov ecx edi
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 + 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x91
call sub_469ed4
jmp r-xdata
mov ecx [ esp + 0x18 ]
lea ecx [ esp + 0xd8 ]
mov [ esp + 0xd8 ] 0x0
mov [ esp + 0xe0 ] 0x0
mov [ esp + 0xe4 ] 0x1
call sub_409a20
mov eax [ esp + 0x94 ]
lea ecx [ esp + 0x10c ]
push r--data
mov [ esp + 0xe8 ] 0x1
mov [ esp + 0xdc ] eax
call sub_407f41
push 0x1
lea eax [ esp + 0xdc ]
mov ecx rw-data
push eax
lea eax [ esp + 0x114 ]
push eax
call sub_408b13
lea ecx [ esp + 0x10c ]
call sub_405a64
mov [ edi + 0x459 ] 0x1
mov ecx edi
mov eax [ esi + 0x10 ]
push 0x0
push 0x1
inc eax
push eax
call sub_40b89c
lea ecx [ esp + 0xd8 ]
mov [ edi + 0x459 ] 0x0
call sub_409a20
lea ecx [ esp + 0x98 ]
call sub_405a64
jmp r-xdata
mov [ edi + 0x144 ] 0x1
mov [ edi + 0xf8 ] 0x0
jmp r-xdata
jmp r-xdata
jg r-xdata
mov eax [ edi + 0xf8 ]
xor esi esi
mov [ esp + 0x1f ] 0x0
mov [ esp + 0x8 ] esi
cmp eax 0x8
jne r-xdata
mov ecx [ edi + 0x440 ]
call sub_42034a
test edx edx
jl r-xdata
cmp eax 0x3
je r-xdata
cmp [ esp + 0x9c ] 0x0
mov [ rw-data ] 0x0
je r-xdata
push ecx
mov ecx esi
call sub_404665
cmp [ rw-data ] 0x0
jne r-xdata
mov esi [ esp + 0xa4 ]
dec [ esi ]
jne r-xdata
inc [ esp + 0x14 ]
call [ timeGetTime@IAT ]
mov ecx [ esp + 0x44 ]
mov [ edi + 0x14 ] eax
push [ esi ]
call sub_409fbd
mov ecx [ esi ]
push 0x0
push 0x1
mov [ ecx + 0x10 ] 0x1
mov eax [ eax + 0x10 ]
mov ecx [ esp + 0x4c ]
inc eax
push eax
call sub_40b89c
mov eax [ esi ]
mov [ eax + 0x10 ] 0x0
jmp r-xdata
cmp eax [ edi + 0x18 ]
jae r-xdata
jmp [ eax * 4 + jump_table_446014 ]
cmp ax 0x40
jne r-xdata
dec ecx
jns r-xdata
inc esi
add edx 0x4
jmp r-xdata
mov [ esp + 0x6c ] edx
mov [ esp + 0x4c ] esi
mov eax [ ecx + esi * 4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov edx 0x100
mov ecx [ eax + 0x4 ]
mov [ esp + 0x18 ] ecx
mov eax [ ecx + esi * 4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp ax 0x40
jne r-xdata
dec ecx
jns r-xdata
inc esi
jmp r-xdata
mov eax [ edx + esi * 4 + 0x4 ]
cmp [ eax + 0x8 ] 0x33
je r-xdata
mov edx [ esp + 0x24 ]
lea ecx [ esp + 0x80 ]
call sub_409df0
lea ecx [ esp + 0xec ]
call sub_4563f2
lea ecx [ esp + 0xb8 ]
call sub_4563f2
mov [ edi + 0x484 ] 0x0
jmp r-xdata
sub eax 0x3
cmp eax 0x3
ja r-xdata
cmp [ edi + 0xf8 ] 0x2
jne r-xdata
cmp eax [ edi + 0x2f0 ]
jae r-xdata
cmp eax 0x9
jne r-xdata
lea eax [ esp + 0x1f ]
push eax
lea ecx [ edi + 0x42c ]
lea edx [ esp + 0xc ]
call sub_463c99
add esp 0x4
cmp [ esp + 0x1f ] 0x1
jne r-xdata
jg r-xdata
cmp eax 0x4
je r-xdata
lea eax [ esp + 0x98 ]
mov ecx edi
push eax
call sub_409fbd
mov esi eax
test esi esi
je r-xdata
push 0xa
cmp [ rw-data ] 0x64
jge r-xdata
push [ esp + 0x98 ]
call j_sub_422ed5#3
add esp 0x4
push esi
call j_sub_422ed5#3
add esp 0x4
test esi esi
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
push [ esi + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
test ecx ecx
je r-xdata
mov eax [ esp + 0x64 ]
mov edi [ esp + 0x44 ]
mov edx [ esp + 0x6c ]
mov [ esp + 0x24 ] esi
mov esi [ esp + 0x4c ]
cmp [ esp + 0x18 ] eax
jle r-xdata
mov eax [ edx + edi ]
movzx eax [ eax + 0x8 ]
cmp ax 0x47
jne r-xdata
test ecx ecx
je r-xdata
mov edx [ esp + 0x24 ]
mov eax [ edx + esi * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x47
jne r-xdata
jmp [ eax * 4 + jump_table_44606c ]
mov [ esp + 0x8 ] 0x0
jmp r-xdata
mov ecx [ edi + 0x448 ]
mov eax 0xcccccccc
mov [ esp + 0x40 ] eax
test ecx ecx
je r-xdata
mov esi [ esp + 0x8 ]
jmp r-xdata
mov eax [ edi + 0x448 ]
test eax eax
je r-xdata
cmp eax [ edi + 0x43c ]
jb r-xdata
cmp eax 0x5
je r-xdata
lea ecx [ esp + 0x70 ]
mov [ esp + 0x70 ] 0x0
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x7c ] 0x1
call sub_409a20
mov eax [ esp + 0x94 ]
lea ecx [ esp + 0x12c ]
push r--data
mov [ esp + 0x80 ] 0x1
mov [ esp + 0x74 ] eax
call sub_407f41
push 0x1
lea eax [ esp + 0x74 ]
mov ecx rw-data
push eax
lea eax [ esp + 0x134 ]
push eax
call sub_408b13
lea ecx [ esp + 0x12c ]
call sub_405a64
lea ecx [ esp + 0x70 ]
call sub_409a20
mov eax [ esp + 0xa8 ]
lea ecx [ esp + 0xfc ]
push r--data
mov [ esp + 0x80 ] 0x7
mov [ esp + 0x74 ] eax
call sub_407f41
push 0x1
lea eax [ esp + 0x74 ]
mov ecx rw-data
push eax
lea eax [ esp + 0x104 ]
push eax
call sub_408b13
lea ecx [ esp + 0xfc ]
call sub_405a64
lea ecx [ esp + 0x70 ]
call sub_409a20
mov eax [ esp + 0xac ]
lea ecx [ esp + 0x11c ]
push r--data
mov [ esp + 0x80 ] 0x7
mov [ esp + 0x74 ] eax
call sub_407f41
push 0x1
lea eax [ esp + 0x74 ]
mov ecx rw-data
push eax
lea eax [ esp + 0x124 ]
push eax
call sub_408b13
lea ecx [ esp + 0x11c ]
call sub_405a64
mov [ edi + 0x458 ] 0x1
mov ecx edi
mov eax [ esi + 0x10 ]
push 0x0
push 0x1
inc eax
push eax
call sub_40b89c
lea ecx [ esp + 0x70 ]
mov [ edi + 0x458 ] 0x0
call sub_409a20
lea ecx [ esp + 0x98 ]
call sub_405a64
jmp r-xdata
inc [ rw-data ]
push 0x0
jmp r-xdata
push esi
call [ VariantClear@IAT ]
jmp r-xdata
lea ecx [ esi + 0x8 ]
jmp r-xdata
push ecx
mov ecx esi
call sub_408e34
jmp r-xdata
push esi
call j_sub_422ed5#3
add esp 0x4
push ecx
mov ecx esi
call sub_4571d0
jmp r-xdata
push ecx
mov ecx esi
call sub_4571e5
jmp r-xdata
mov ecx esi
mov eax [ esp + 0x14 ]
or edx 0x200
push 0x1
push edx
push [ eax ]
mov eax [ esp + 0x14 ]
mov eax [ eax + esi * 4 ]
push [ eax ]
call sub_408620
lea eax [ esi + 0x2 ]
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x8 ] eax
mov ecx edi
mov eax [ esp + 0x24 ]
add eax esi
mov [ esp + 0x30 ] 0x0
push eax
lea eax [ esp + 0x2c ]
mov [ esp + 0x38 ] 0x1
push eax
lea eax [ esp + 0x10 ]
push eax
push [ esp + 0x48 ]
call sub_40a000
test eax eax
js r-xdata
mov ecx edi
call sub_485f8e
jmp r-xdata
mov ecx edi
call sub_485f8e
jmp r-xdata
push 0x1
mov ecx edi
call sub_40b93d
push 0x1
mov ecx edi
call sub_40b93d
cmp [ edi + 0xf8 ] 0x8
jne r-xdata
lea eax [ esp + 0x40 ]
push eax
push ecx
call [ GetExitCodeProcess@IAT ]
cmp [ esp + 0x40 ] 0x103
jne r-xdata
mov [ esp + 0x8 ] 0x0
jmp r-xdata
cmp eax 0x6
je r-xdata
call [ Sleep@IAT ]
jmp r-xdata
call sub_405a64
mov ecx [ esp + 0x30 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x6c ]
or eax 0x200
push 0x1
push eax
lea eax [ esp + 0x30 ]
push eax
mov eax [ esp + 0x48 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
push [ eax ]
call sub_408620
mov ecx [ esp + 0x30 ]
test ecx ecx
je r-xdata
mov esi eax
test esi esi
jns r-xdata
mov esi eax
test esi esi
js r-xdata
mov eax esi
neg eax
push 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
push ecx
lea eax [ esp + 0xc ]
mov [ esp + 0xc ] 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fe53
test esi esi
jg r-xdata
je r-xdata
push 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
mov [ esp + 0x8 ] esi
fild [ esp + 0x8 ]
test esi esi
jns r-xdata
push [ edi + 0x448 ]
call [ CloseHandle@IAT ]
mov eax [ esp + 0x40 ]
mov [ edi + 0x448 ] 0x0
push 0x0
push [ edi + 0x448 ]
call [ WaitForSingleObject@IAT ]
test eax eax
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ edi + 0x448 ] 0x0
mov esi [ ebp + 0x8 ]
inc [ ebp + 0x8 ]
mov [ edi + 0xf4 ] esi
cmp esi [ rw-data ]
jg r-xdata
mov eax [ esp + 0x34 ]
cmp eax 0x5
jl r-xdata
push ecx
call sub_407b3d
mov [ esp + 0x30 ] 0x0
mov eax [ esp + 0x34 ]
cmp eax 0x5
jl r-xdata
push ecx
call sub_407b3d
mov [ esp + 0x30 ] 0x0
test esi esi
jle r-xdata
jmp r-xdata
push ecx
lea eax [ esp + 0xc ]
push eax
mov eax [ edi ]
fstp [ esp + 0x10 ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_47ca41
jmp r-xdata
fadd [ r--data ]
mov [ edi + 0xf8 ] 0x1
jmp r-xdata
test esi esi
jle r-xdata
mov [ esp + 0x34 ] 0x1
mov [ esp + 0x28 ] 0x0
add eax 0xfffffffb
cmp eax 0xa
ja r-xdata
mov [ esp + 0x34 ] 0x1
mov [ esp + 0x28 ] 0x0
jmp r-xdata
add eax 0xfffffffb
cmp eax 0xa
ja r-xdata
mov ecx [ edi + 0x2f4 ]
mov [ edi + 0x144 ] 0x1
mov [ edi + 0xf8 ] 0x0
call sub_4652eb
jmp r-xdata
mov eax [ edi + 0xf8 ]
cmp eax 0x5
je r-xdata
push [ edi + 0x2f4 ]
mov [ edi + 0x144 ] 0x1
mov [ edi + 0xf8 ] 0x0
call [ Sleep@IAT ]
jmp r-xdata
shl esi 0x4
add esi [ rw-data ]
je r-xdata
jmp [ eax * 4 + r-xdata ]
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
inc eax
add [ esp + 0x14 ] 0x4
add esi eax
mov eax [ esp + 0x18 ]
inc eax
mov [ esp + 0x4c ] esi
mov [ esp + 0x18 ] eax
cmp eax [ ecx + 0x14 ]
jle r-xdata
jmp [ eax * 4 + r-xdata ]
mov eax [ edi + 0x1f0 ]
lea ecx [ esp + 0xc8 ]
mov [ esp + 0xc8 ] 0x0
mov [ esp + 0xd0 ] 0x0
mov [ esp + 0xd4 ] 0x1
mov esi [ eax ]
call sub_409a20
push 0x0
lea eax [ esp + 0xcc ]
mov [ esp + 0xd8 ] 0x7
push eax
mov eax [ edi ]
mov [ esp + 0xd0 ] esi
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456830
lea ecx [ esp + 0xc8 ]
call sub_409a20
cmp eax 0x3
jne r-xdata
mov eax [ esi + 0x4 ]
xor edx edx
mov ecx 0x1
mov [ esp + 0x50 ] edx
mov [ esp + 0x58 ] edx
mov [ esp + 0x5c ] ecx
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov [ esp + 0x14 ] edx
mov [ esp + 0x20 ] edx
movsx eax [ eax + 0x8 ]
test eax eax
jne r-xdata
cmp eax 0x33
jne r-xdata
lea eax [ ebp + 0x8 ]
mov ecx edi
push eax
push esi
call sub_40e580
dec eax
cmp eax 0x7e
ja r-xdata
push esi
mov ecx edi
call sub_40e800
jmp r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ esp + 0x50 ]
mov ecx [ esp + 0x5c ]
mov [ esp + 0x14 ] edx
push 0xffffffff
lea eax [ esp + 0x54 ]
mov ecx edi
push eax
lea eax [ esp + 0x28 ]
push eax
push esi
call sub_40a000
jmp r-xdata
movzx eax [ eax + lookup_table_411124 ]
jmp [ eax * 4 + jump_table_411110 ]
mov esi [ esp + 0x58 ]
test esi esi
jne r-xdata
push [ esi ]
call j_sub_422ed5#3
add esp 0x4
push [ esi + 0xc ]
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
push esi
call j_sub_422ed5#3
add esp 0x4
mov [ esp + 0x58 ] 0x0
jmp r-xdata
add ecx 0xfffffffb
cmp ecx 0xa
ja r-xdata
mov [ esp + 0x5c ] 0x1
mov [ esp + 0x50 ] 0x0
test eax eax
js r-xdata
cmp ecx 0x5
jge r-xdata
lea eax [ esp + 0x50 ]
mov ecx edi
push eax
lea eax [ esp + 0x24 ]
push eax
push esi
push 0x0
call sub_40f5c0
lea eax [ esp + 0x6b ]
mov ecx edi
push eax
lea eax [ esp + 0x54 ]
push eax
lea eax [ esp + 0x28 ]
push eax
push esi
push 0x0
call sub_40fe40
jmp r-xdata
lea ecx [ edi + 0x168 ]
call sub_47c0f7
mov ecx eax
call sub_456241
test al al
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
mov ecx [ esi + 0x4 ]
mov eax [ esp + 0x20 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
lea ecx [ edi + 0x168 ]
call sub_47c0f7
push eax
lea eax [ esp + 0x24 ]
mov ecx edi
push eax
push esi
call sub_47b651
jmp r-xdata
mov eax [ esp + 0x8 ]
mov ecx edi
movsx eax [ eax + 0xa ]
push eax
push 0xa7
call sub_469ed4
lea ecx [ esp + 0x50 ]
call sub_409df0
jmp r-xdata
jmp r-xdata
movsx eax [ eax + 0xa ]
mov ecx edi
push eax
push 0x72
call sub_469ed4
lea ecx [ esp + 0x50 ]
call sub_409df0
jmp r-xdata
sub_4111d0
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
call sub_42006c
mov eax [ esi + 0x45c ]
mov [ ebp - 0x4 ] eax
mov esi [ eax ]
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
call sub_4672d9
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
call sub_456aca
mov eax [ ebp - 0x4 ]
jmp r-xdata
call sub_4672d9
test eax eax
jne r-xdata
sub_4111f3
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] eax
mov edi ecx
inc ebx
push r--data
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] ebx
call sub_407f41
push ebx
lea eax [ ebp - 0x10 ]
mov ebx rw-data
push eax
lea eax [ ebp - 0x20 ]
mov ecx ebx
push eax
call sub_408b13
lea ecx [ ebp - 0x20 ]
call sub_405a64
mov esi [ rw-data ]
lea ecx [ ebp - 0x10 ]
call sub_409a20
push r--data
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] esi
call sub_407f41
push 0x1
lea eax [ ebp - 0x10 ]
mov ecx ebx
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_408b13
lea ecx [ ebp - 0x20 ]
call sub_405a64
and [ edi + 0xf8 ] 0x0
mov esi [ edi + 0x12c ]
mov [ rw-data ] 0x0
push [ esi ]
mov ecx edi
call sub_409fbd
test eax eax
je r-xdata
lea ecx [ ebp - 0x10 ]
mov [ edi + 0xf8 ] 0x1
call sub_409a20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ esi + 0x8 ]
jmp r-xdata
mov eax [ eax + 0x10 ]
mov ecx edi
push 0x1
inc eax
push eax
call sub_45669f
test esi esi
jne r-xdata
sub_4112ad
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
lea edi [ esi + 0x15c ]
jmp r-xdata
cmp [ edi ] ebx
jne r-xdata
mov ecx edi
call sub_41fd0f
lea ecx [ esi + 0x174 ]
call sub_403553
lea edi [ esi + 0x168 ]
mov ecx edi
call sub_47a256
jmp r-xdata
cmp [ esi + 0x184 ] ebx
jne r-xdata
cmp [ edi ] ebx
jne r-xdata
lea ecx [ esi + 0x184 ]
call sub_45d801
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4112fe
push ebp
mov ebp esp
sub esp 0x84
xor eax eax
push ebx
inc eax
xor ebx ebx
push esi
mov ecx ebx
mov [ ebp - 0xc ] eax
mov edx ebx
mov [ ebp - 0x18 ] ebx
push edi
mov [ ebp - 0x1c ] ebx
mov esi ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x40 ] bx
mov [ ebp - 0x84 ] ebx
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x7c ] bx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] bx
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x68 ] ebx
mov [ ebp - 0x64 ] bx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x58 ] bx
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x70 ] bx
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x4c ] bx
jmp r-xdata
push eax
call sub_4071c8
mov ebx eax
or edi 0xffffffff
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
test ebx ebx
je r-xdata
push [ ebp - 0x24 ]
xor ebx ebx
push [ ebp - 0x18 ]
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push edx
push ecx
push [ ebp - 0x14 ]
push ebx
call sub_40cd50
test eax eax
js r-xdata
lea ecx [ eax - 0x1 ]
xor eax eax
mov [ rw-data ] ecx
mov ecx [ ebx + 0x4 ]
push 0x7f
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x28 ] eax
mov edx [ ecx ]
pop ecx
movzx eax [ edx + 0x8 ]
cmp ax cx
mov [ ebp - 0x10 ] eax
mov ecx [ ebx + 0x4 ]
je r-xdata
lea ecx [ ebp - 0x54 ]
call sub_42005e
lea ecx [ ebp - 0x78 ]
call sub_42005e
lea ecx [ ebp - 0x60 ]
call sub_42005e
lea ecx [ ebp - 0x6c ]
call sub_42005e
lea ecx [ ebp - 0x3c ]
call sub_42005e
lea ecx [ ebp - 0x84 ]
call sub_42005e
lea ecx [ ebp - 0x48 ]
call sub_42005e
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi ebx
test ax ax
mov eax [ ebp - 0xc ]
je r-xdata
push 0x7f
mov edx ecx
mov ecx [ ebp - 0x28 ]
pop edi
jmp r-xdata
mov eax [ edx ]
cmp eax 0x13
jg r-xdata
mov edx [ ebp - 0x4 ]
lea edx [ edx + 0x4 ]
inc ecx
mov eax [ edx ]
cmp [ eax + 0x8 ] di
jne r-xdata
cmp eax 0x20
jg r-xdata
mov edx [ ebp - 0x4 ]
cmp eax 0x12
jge r-xdata
mov [ ebp - 0x28 ] ecx
or edi 0xffffffff
mov ecx [ ebx + 0x4 ]
mov eax [ ebp - 0x28 ]
mov edx [ ecx ]
test eax eax
je r-xdata
sub eax 0x21
jne r-xdata
je r-xdata
cmp [ ebp - 0x14 ] 0x0
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
jne r-xdata
sub eax 0x4
cmp eax 0xa
ja r-xdata
mov eax [ ebp - 0x10 ]
dec eax
mov [ ebp - 0x28 ] eax
sub eax 0x4
je r-xdata
mov eax [ ecx + 0x4 ]
push 0x7f
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ ebp - 0x2c ]
inc eax
mov [ ebp - 0x2c ] eax
cmp eax 0x1
jg r-xdata
sub eax 0x14
je r-xdata
mov edx [ ebp - 0x4 ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
jmp [ eax * 4 + jump_table_4117e2 ]
inc [ ebp - 0x24 ]
lea ecx [ ebp - 0x54 ]
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x72
dec [ ebp - 0x2c ]
jne r-xdata
push edi
push 0x83
jmp r-xdata
push [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
push [ ebp - 0x18 ]
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x14 ]
push esi
call sub_40cd50
test eax eax
jns r-xdata
mov eax [ ecx + 0x4 ]
push 0x7f
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
dec eax
je r-xdata
test edx edx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebx + 0x4 ]
xor edx edx
inc [ ebp - 0x4 ]
lea ecx [ ebp - 0x60 ]
mov eax [ ecx + 0x4 ]
push 0x7f
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ ecx + 0x4 ]
push 0x7f
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ ecx + 0x4 ]
push 0x7f
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
push 0x7f
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
inc [ ebp - 0x8 ]
lea ecx [ ebp - 0x6c ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
dec eax
dec esi
cmp [ ebp - 0x78 ] 0x0
mov [ ebp - 0x14 ] eax
je r-xdata
mov eax [ ecx + 0x4 ]
push 0x7f
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
push edi
push 0x81
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x10 ] esi
push eax
inc esi
call sub_41ffe4
mov eax [ ecx + 0x4 ]
push 0x7f
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
mov ecx [ ebp - 0x8 ]
sub eax 0x5
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
jne r-xdata
jmp r-xdata
mov ecx rw-data
call sub_469ed4
jmp r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
inc [ ebp - 0x1c ]
lea ecx [ ebp - 0x3c ]
jmp r-xdata
cmp [ ebp - 0x3c ] 0x0
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
jmp r-xdata
cmp [ eax ] 0x5
jne r-xdata
mov eax [ ebp - 0x30 ]
inc eax
mov edx eax
mov [ ebp - 0x30 ] eax
shl edx 0x2
push 0x7f
mov eax [ edx + ecx ]
pop ecx
cmp [ eax + 0x8 ] cx
mov ecx [ ebx + 0x4 ]
je r-xdata
mov edx [ ebp - 0x4 ]
dec edx
dec esi
cmp [ ebp - 0x60 ] 0x0
mov [ ebp - 0x4 ] edx
je r-xdata
mov eax [ ebp - 0x18 ]
dec eax
dec esi
cmp [ ebp - 0x84 ] 0x0
mov [ ebp - 0x18 ] eax
je r-xdata
push edi
push 0x74
jmp r-xdata
inc [ ebp - 0x14 ]
lea ecx [ ebp - 0x78 ]
jmp r-xdata
lea ebx [ esi + 0x1 ]
jmp r-xdata
lea ecx [ ebp - 0x78 ]
call sub_42001d
lea ecx [ ebp - 0x78 ]
mov ebx [ eax ]
call sub_42002b
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
dec ecx
dec esi
cmp [ ebp - 0x6c ] 0x0
mov [ ebp - 0x8 ] ecx
je r-xdata
mov eax [ ebp - 0x24 ]
dec eax
dec esi
cmp [ ebp - 0x54 ] 0x0
mov [ ebp - 0x24 ] eax
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x48 ] 0x0
je r-xdata
lea ecx [ ebp - 0x3c ]
call sub_42001d
mov edx [ ebp - 0x4 ]
lea ecx [ esi - 0x1 ]
cmp ecx [ eax ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
je r-xdata
mov eax [ ecx + 0x4 ]
push 0x7f
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
dec eax
je r-xdata
push edi
push 0x96
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] dx
je r-xdata
push edi
push 0xa1
jmp r-xdata
mov eax ecx
jmp r-xdata
lea ebx [ esi + 0x1 ]
jmp r-xdata
lea ecx [ ebp - 0x60 ]
call sub_42001d
lea ecx [ ebp - 0x60 ]
mov ebx [ eax ]
call sub_42002b
mov edx [ ebp - 0x4 ]
lea ebx [ esi + 0x1 ]
jmp r-xdata
lea ecx [ ebp - 0x84 ]
call sub_42001d
lea ecx [ ebp - 0x84 ]
mov ebx [ eax ]
call sub_42002b
mov eax [ ebp - 0x18 ]
test eax eax
js r-xdata
push edi
push 0x93
jmp r-xdata
cmp esi ebx
je r-xdata
lea ebx [ esi + 0x1 ]
jmp r-xdata
lea ecx [ ebp - 0x6c ]
call sub_42001d
lea ecx [ ebp - 0x6c ]
mov ebx [ eax ]
call sub_42002b
mov ecx [ ebp - 0x8 ]
lea ecx [ ebp - 0x54 ]
call sub_42001d
lea ecx [ ebp - 0x54 ]
mov ebx [ eax ]
call sub_42002b
mov eax [ ebp - 0x24 ]
lea ebx [ esi + 0x1 ]
jmp r-xdata
push edi
push 0x98
jmp r-xdata
lea ecx [ ebp - 0x48 ]
call sub_42001d
lea ecx [ esi - 0x1 ]
cmp ecx [ eax ]
je r-xdata
mov eax [ ebp - 0x1c ]
dec eax
dec esi
cmp [ ebp - 0x3c ] 0x0
mov [ ebp - 0x1c ] eax
jne r-xdata
inc [ ebp - 0x20 ]
lea ecx [ ebp - 0x48 ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
dec eax
mov eax [ ebp - 0xc ]
jne r-xdata
cmp [ eax ] 0x5
jne r-xdata
mov ecx [ ebp - 0x30 ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 + 0x4 ]
cmp [ eax + 0x8 ] dx
mov edx [ ebp - 0x4 ]
je r-xdata
mov eax [ eax + edx ]
xor edx edx
cmp [ eax + 0x8 ] dx
je r-xdata
test edx edx
js r-xdata
push edi
push 0x95
jmp r-xdata
cmp esi ebx
jne r-xdata
test eax eax
js r-xdata
push edi
push 0x75
jmp r-xdata
cmp esi ebx
je r-xdata
test ecx ecx
js r-xdata
push edi
push 0x78
jmp r-xdata
cmp esi ebx
je r-xdata
push edi
push 0x68
jmp r-xdata
cmp esi ebx
je r-xdata
test eax eax
js r-xdata
lea ecx [ ebp - 0x3c ]
call sub_42001d
lea ecx [ ebp - 0x3c ]
mov ebx [ eax ]
call sub_42002b
mov eax [ ebp - 0x1c ]
lea ebx [ esi + 0x1 ]
jmp r-xdata
jmp r-xdata
inc [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x10 ] esi
lea ecx [ ebp - 0x84 ]
push eax
inc esi
call sub_41ffe4
xor edx edx
jmp r-xdata
cmp [ eax ] 0x12
jl r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edi
push 0x99
jmp r-xdata
cmp esi ebx
je r-xdata
test eax eax
js r-xdata
mov eax [ ecx + 0x4 ]
push 0x7f
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 + 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x9f
jmp r-xdata
cmp [ eax ] 0x13
jle r-xdata
mov eax [ ebp - 0x20 ]
dec eax
dec esi
cmp [ ebp - 0x48 ] 0x0
mov [ ebp - 0x20 ] eax
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ eax ] 0x18
jle r-xdata
lea ecx [ ebp - 0x48 ]
call sub_42001d
lea ecx [ ebp - 0x48 ]
mov ebx [ eax ]
call sub_42002b
mov eax [ ebp - 0x20 ]
lea ebx [ esi + 0x1 ]
jmp r-xdata
cmp [ eax ] 0x1e
mov edx [ ebp - 0x4 ]
jle r-xdata
push edi
push 0xb3
jmp r-xdata
cmp esi ebx
je r-xdata
test eax eax
js r-xdata
cmp [ eax ] 0x21
jle r-xdata
cmp [ eax ] 0x23
jle r-xdata
jmp r-xdata
sub_41180e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
xor ecx ecx
mov [ esp + 0x24 ] 0x1
mov [ esp + 0x18 ] ecx
or ebx 0xffffffff
mov [ esp + 0x20 ] ecx
mov eax [ edi + 0x4 ]
mov [ esp + 0x10 ] ecx
mov eax [ eax ]
mov [ esp + 0x14 ] eax
movsx eax [ eax + 0x8 ]
sub eax ecx
je r-xdata
push [ ebp + 0xc ]
mov ecx esi
push edi
call sub_40e580
dec eax
je r-xdata
lea ecx [ esp + 0x18 ]
call sub_409a20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
jmp r-xdata
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x14 ]
push eax
push edi
push ecx
mov ecx esi
call sub_40f5c0
sub eax 0x32
jne r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ esp + 0x10 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
test ebx ebx
js r-xdata
dec eax
je r-xdata
push edi
mov ecx esi
call sub_40e800
movsx eax [ eax + 0xa ]
push eax
push 0x72
lea eax [ esp + 0xf ]
push eax
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x18 ]
push eax
push edi
push ecx
mov ecx esi
call sub_40fe40
jmp r-xdata
dec eax
je r-xdata
mov ebx eax
jmp r-xdata
lea ebx [ esi + 0x168 ]
mov ecx ebx
call sub_47c0f7
mov ecx eax
call sub_456241
test al al
jne r-xdata
sub eax 0x4a
je r-xdata
mov ecx ebx
call sub_47c0f7
push eax
lea eax [ esp + 0x14 ]
mov ecx esi
push eax
push edi
call sub_47b651
jmp r-xdata
mov eax [ esp + 0x14 ]
movsx eax [ eax + 0xa ]
push eax
push 0xa7
jmp r-xdata
push ebx
lea eax [ esp + 0x1c ]
mov ecx esi
push eax
lea eax [ esp + 0x18 ]
push eax
push edi
call sub_40a000
jmp r-xdata
mov ecx esi
call sub_469ed4
jmp r-xdata
sub_411887
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
call sub_425030
mov esi [ ebp + 0xc ]
add esp 0x8
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
xor eax eax
fstp [ esi ]
mov [ esi + 0xc ] 0x3
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4118c9
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ esp + 0x14 ] ebx
push edi
mov edi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
mov [ esp + 0x18 ] ecx
cmp [ ecx + 0xc ] 0xe
je r-xdata
xor eax eax
inc eax
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x3c ]
push eax
call sub_4679c3
mov ecx eax
jmp r-xdata
push 0x2
pop eax
mov [ esp + 0x10 ] eax
call sub_409997
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x2c ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x30 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x34 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0x38 ] eax
inc [ eax ]
mov eax [ ecx ]
mov [ esp + 0x1c ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x24 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x28 ] eax
inc [ eax ]
mov eax [ esp + 0x10 ]
test al 0x2
je r-xdata
test al 0x1
jne r-xdata
and eax 0xfffffffd
lea ecx [ esp + 0x2c ]
mov [ esp + 0x10 ] eax
call sub_405a64
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x3c ]
call sub_405a64
jmp r-xdata
lea ecx [ esp + 0x1c ]
call sub_407faf
push [ esp + 0x20 ]
push [ esp + 0x20 ]
call [ CharUpperBuffW@IAT ]
lea eax [ esp + 0x1c ]
mov ecx edi
push eax
call sub_409fbd
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
jmp r-xdata
cmp [ esi + 0x8 ] 0x2
jne r-xdata
lea ecx [ esp + 0x1c ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ esp + 0x10 ] 0xfa
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
test eax eax
jle r-xdata
mov esi [ edi + 0x44c ]
mov [ esp + 0x14 ] esi
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov [ esp + 0x10 ] eax
mov ecx [ esi ]
lea edx [ esp + 0x1c ]
call sub_415ee9
test al al
jne r-xdata
lea ecx [ esp + 0x3c ]
call sub_4077c7
lea eax [ esp + 0x1c ]
mov [ esp + 0x4c ] bx
push eax
lea ecx [ esp + 0x40 ]
call sub_4081a7
mov ecx [ esp + 0x10 ]
mov [ esp + 0x54 ] ecx
call [ timeGetTime@IAT ]
mov [ esp + 0x50 ] eax
push 0xc
cmp [ edi + 0x450 ] ebx
jne r-xdata
mov eax [ esi ]
mov ecx [ esp + 0x10 ]
mov [ eax + 0x11 ] bl
mov eax [ esi ]
mov [ eax + 0x18 ] ecx
mov esi [ esi ]
cmp [ esi + 0x10 ] bl
jne r-xdata
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x18 ]
call sub_456aca
mov esi [ esp + 0x14 ]
jmp r-xdata
call sub_420f36
pop ecx
test eax eax
je r-xdata
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov eax [ edi ]
push ebx
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
jmp r-xdata
call [ timeGetTime@IAT ]
mov [ esi + 0x14 ] eax
test esi esi
jne r-xdata
mov eax [ edi + 0x450 ]
mov [ ebx + 0x8 ] eax
mov eax [ edi + 0x450 ]
mov [ eax + 0x4 ] ebx
jmp r-xdata
lea ecx [ esp + 0x3c ]
push ecx
mov ecx eax
call sub_420a2e
mov ebx eax
mov [ edi + 0x44c ] ebx
lea ecx [ esp + 0x3c ]
push ecx
mov ecx eax
call sub_420a2e
mov ebx eax
inc [ edi + 0x454 ]
lea ecx [ esp + 0x3c ]
mov [ edi + 0x450 ] ebx
call sub_405a64
sub_411a54
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
call sub_426180
mov esi [ ebp + 0xc ]
add esp 0x8
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
xor eax eax
fstp [ esi ]
mov [ esi + 0xc ] 0x3
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_411a96
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c0
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
mov [ esp + 0x3c ] edi
mov eax [ ecx + 0x8 ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x28 ]
push r--data
mov eax [ eax ]
mov [ esp + 0x20 ] eax
call sub_409f3a
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
lea eax [ edi + 0x108 ]
mov [ esp + 0x44 ] eax
mov ecx r--data
lea eax [ edi + 0xfd ]
mov [ esp + 0x54 ] ecx
mov [ esp + 0x50 ] eax
mov edx r--data
lea eax [ edi + 0xfe ]
mov [ esp + 0x60 ] ecx
mov [ esp + 0x5c ] eax
lea eax [ edi + 0x10c ]
mov [ esp + 0xb0 ] eax
lea eax [ edi + 0x110 ]
mov [ esp + 0xbc ] eax
lea eax [ edi + 0x114 ]
mov [ esp + 0xc8 ] eax
lea eax [ edi + 0x100 ]
mov [ esp + 0x9c ] ecx
mov ecx r--data
mov [ esp + 0xd4 ] eax
lea eax [ edi + 0xff ]
mov [ esp + 0xb4 ] ecx
mov [ esp + 0xc0 ] ecx
mov ecx r--data
mov [ esp + 0xe0 ] eax
lea eax [ edi + 0x104 ]
mov [ esi + 0xc ] 0x1
mov [ esp + 0x40 ] r--data
mov [ esp + 0x48 ] edx
mov [ esp + 0x4c ] r--data
mov [ esp + 0x58 ] r--data
mov [ esp + 0x64 ] r--data
mov [ esp + 0x68 ] rw-data
mov [ esp + 0x6c ] r--data
mov [ esp + 0x70 ] r--data
mov [ esp + 0x74 ] rw-data
mov [ esp + 0x78 ] edx
mov [ esp + 0x7c ] r--data
mov [ esp + 0x80 ] rw-data
mov [ esp + 0x84 ] r--data
mov [ esp + 0x88 ] r--data
mov [ esp + 0x8c ] rw-data
mov [ esp + 0x90 ] r--data
mov [ esp + 0x94 ] r--data
mov [ esp + 0x98 ] rw-data
mov [ esp + 0xa0 ] r--data
mov [ esp + 0xa4 ] rw-data
mov [ esp + 0xa8 ] r--data
mov [ esp + 0xac ] r--data
mov [ esp + 0xb8 ] r--data
mov [ esp + 0xc4 ] r--data
mov [ esp + 0xcc ] r--data
mov [ esp + 0xd0 ] r--data
mov [ esp + 0xd8 ] edx
mov [ esp + 0xdc ] r--data
mov [ esp + 0xe4 ] ecx
mov [ esp + 0xe8 ] r--data
mov [ esp + 0xec ] eax
mov [ esp + 0xf0 ] edx
mov [ esp + 0xf4 ] r--data
lea eax [ edi + 0x91 ]
mov [ esp + 0xfc ] ecx
mov [ esp + 0xf8 ] eax
mov ecx r--data
lea eax [ edi + 0x90 ]
mov [ esp + 0x114 ] ecx
mov [ esp + 0x104 ] eax
mov edx r--data
lea eax [ edi + 0x88 ]
mov [ esp + 0x120 ] ecx
mov [ esp + 0x110 ] eax
mov ecx r--data
lea eax [ edi + 0x8c ]
mov [ esp + 0x12c ] ecx
mov [ esp + 0x11c ] eax
lea eax [ edi + 0x118 ]
mov [ esp + 0x128 ] eax
lea eax [ edi + 0x46c ]
mov [ esp + 0x134 ] eax
lea eax [ edi + 0x2dc ]
mov [ esp + 0x17c ] eax
lea eax [ edi + 0x2dd ]
mov [ esp + 0x188 ] eax
lea eax [ edi + 0x2d8 ]
mov [ esp + 0x194 ] eax
lea eax [ edi + 0x2f4 ]
mov [ esp + 0x1ac ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x150 ] ecx
mov [ esp + 0x174 ] ecx
mov [ esp + 0x180 ] ecx
mov [ esp + 0x18c ] ecx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x108 ] edx
mov [ esp + 0x144 ] edx
xor edx edx
mov [ esp + 0x100 ] r--data
mov eax [ ecx ]
mov [ esp + 0x10c ] r--data
mov [ esp + 0x118 ] r--data
mov [ esp + 0x124 ] r--data
cmp [ eax + 0xc ] 0x4
mov [ esp + 0x130 ] r--data
mov [ esp + 0x138 ] r--data
mov [ esp + 0x13c ] r--data
mov [ esp + 0x140 ] rw-data
mov [ esp + 0x148 ] r--data
mov [ esp + 0x14c ] rw-data
mov [ esp + 0x154 ] r--data
mov [ esp + 0x158 ] edx
mov [ esp + 0x15c ] r--data
mov [ esp + 0x160 ] r--data
mov [ esp + 0x164 ] edx
mov [ esp + 0x168 ] r--data
mov [ esp + 0x16c ] r--data
mov [ esp + 0x170 ] rw-data
mov [ esp + 0x178 ] r--data
mov [ esp + 0x184 ] r--data
mov [ esp + 0x190 ] r--data
mov [ esp + 0x198 ] r--data
mov [ esp + 0x19c ] r--data
mov [ esp + 0x1a0 ] edx
mov [ esp + 0x1a4 ] r--data
mov [ esp + 0x1a8 ] r--data
mov [ esp + 0x1b0 ] r--data
mov [ esp + 0xc ] ecx
jne r-xdata
push edx
mov edx [ esp + 0x1c ]
push 0x2a
pop eax
cmp [ edx ] ax
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_409a20
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
push 0x0
jmp r-xdata
cmp [ esp + 0x20 ] 0x1
je r-xdata
mov eax [ edi ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
xor ecx ecx
mov [ esp + 0x18 ] ecx
jmp r-xdata
mov ecx [ ecx + 0x4 ]
push 0x29
call sub_409dae
test al al
jne r-xdata
push 0x1e
xor esi esi
pop edi
mov [ esp + 0x14 ] esi
mov [ esp + 0x24 ] edi
and [ esp + 0x18 ] 0x0
jmp r-xdata
mov ecx [ esp + 0xc ]
mov ecx [ ecx + 0x4 ]
call sub_409c9c
mov [ esp + 0x18 ] eax
lea edi [ eax - 0x1 ]
jg r-xdata
mov edx [ esp + 0x1c ]
lea eax [ edi + esi ]
sar eax 0x1
mov [ esp + 0x14 ] eax
imul eax eax 0xc
push [ esp + eax + 0x40 ]
push edx
call sub_42307d
pop ecx
test eax eax
mov eax [ esp + 0x18 ]
pop ecx
js r-xdata
jmp r-xdata
lea esi [ eax + 0x1 ]
jmp r-xdata
cmp esi edi
mov [ esp + 0x14 ] esi
mov esi [ ebp + 0xc ]
mov [ esp + 0x24 ] edi
mov edi [ esp + 0x3c ]
jg r-xdata
mov edx [ esp + 0x1c ]
cmp esi edi
jle r-xdata
and [ esp + 0x10 ] 0x0
imul ecx eax 0xc
mov [ esp + 0xc ] ecx
mov eax [ esp + ecx + 0x48 ]
mov [ esp + 0x1c ] eax
movzx edx [ eax ]
cmp edx 0x64
jne r-xdata
cmp edx 0x44
jne r-xdata
lea ecx [ esp + 0x14 ]
mov [ esp + 0x10 ] 0x1
push ecx
lea edx [ esp + 0x14 ]
mov ecx eax
call sub_420bb1
pop ecx
lea ecx [ esp + 0x28 ]
call sub_409a20
mov eax [ esp + 0x14 ]
mov [ esp + 0x34 ] 0x1
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x10 ]
mov edx [ esp + ecx + 0x48 ]
inc [ esp + 0x10 ]
movzx eax [ edx + eax * 2 ]
cmp eax 0x69
jg r-xdata
push eax
call sub_422d7c
pop ecx
push eax
lea ecx [ esp + 0x1bc ]
call sub_407b76
mov eax [ esp + 0x1c ]
mov [ esp + 0x10 ] 0x2
movzx eax [ eax + 0x4 ]
jmp r-xdata
cmp eax 0x6d
je r-xdata
je r-xdata
test ax ax
jne r-xdata
mov eax [ esp + ecx + 0x44 ]
mov ecx [ ebp + 0xc ]
mov [ esp + 0xc ] eax
mov esi [ eax ]
call sub_409a20
mov eax [ ebp + 0xc ]
lea edx [ esp + 0x10 ]
mov ecx [ esp + 0x1c ]
mov [ eax + 0xc ] 0x1
mov [ eax ] esi
lea eax [ esp + 0x14 ]
push eax
call sub_420bb1
cmp [ esp + 0x24 ] 0x1
pop ecx
jbe r-xdata
cmp eax 0x72
je r-xdata
mov eax [ esp + ecx + 0x44 ]
mov ecx [ ebp + 0xc ]
mov [ esp + 0xc ] eax
mov esi [ eax ]
call sub_409a20
mov eax [ ebp + 0xc ]
xor ecx ecx
inc ecx
mov [ eax + 0xc ] ecx
mov [ eax ] esi
cmp [ esp + 0x20 ] ecx
jbe r-xdata
sub eax 0x23
je r-xdata
cmp ax 0x27
je r-xdata
inc [ esp + 0x10 ]
lea eax [ esp + 0x1b8 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_409b9c
lea ecx [ esp + 0x1b8 ]
call sub_405a64
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x1c ]
lea edx [ ecx + eax * 2 ]
movzx eax [ edx ]
mov [ esp + 0x1c ] edx
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x29
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_409dae
test al al
jne r-xdata
mov eax [ esp + ecx + 0x44 ]
mov ecx [ ebp + 0xc ]
mov [ esp + 0xc ] eax
mov esi [ eax ]
call sub_409a20
mov eax [ ebp + 0xc ]
lea edx [ esp + 0x10 ]
mov ecx [ esp + 0x1c ]
mov [ eax + 0xc ] 0x1
mov [ eax ] esi
lea eax [ esp + 0x14 ]
push eax
call sub_420bb1
inc [ esp + 0x14 ]
lea eax [ esp + 0x28 ]
pop ecx
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x10 ]
push eax
call sub_420bb1
cmp [ esp + 0x24 ] 0x1
pop ecx
jbe r-xdata
cmp eax 0x76
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x29
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_409dae
test al al
je r-xdata
mov ecx [ esp + 0x1c ]
lea eax [ esp + 0x14 ]
push eax
lea edx [ esp + 0x14 ]
call sub_420bb1
mov eax [ esp + 0x18 ]
pop ecx
dec eax
je r-xdata
sub eax 0x30
je r-xdata
push eax
lea ecx [ esp + 0x1bc ]
call sub_407a84
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x1c ]
inc eax
mov [ esp + 0x10 ] eax
movzx eax [ ecx + eax * 2 ]
mov ecx [ esp + 0xc ]
cmp eax 0x2a
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_409c9c
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x18 ]
cmp ecx [ esp + 0x14 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push 0x29
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_409dae
test al al
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x18 ]
lea ecx [ esp + 0x28 ]
call sub_409c9c
jmp r-xdata
xor eax eax
mov ecx esi
cmp [ rw-data ] al
sete al
mov [ esp + 0xc ] eax
call sub_409a20
mov eax [ esp + 0xc ]
xor ecx ecx
inc ecx
mov [ esi ] eax
mov [ esi + 0xc ] ecx
cmp [ esp + 0x20 ] ecx
jbe r-xdata
dec eax
je r-xdata
mov eax [ esp + ecx + 0x44 ]
mov ecx esi
mov [ esp + 0x24 ] eax
push [ eax ]
call sub_409bf8
cmp [ esp + 0x20 ] 0x1
jbe r-xdata
sub eax 0xf
jne r-xdata
lea ecx [ esp + 0x28 ]
call sub_4562f8
test al al
je r-xdata
mov edx [ esp + 0xc ]
lea ecx [ esp + 0x28 ]
call sub_409c9c
mov edx [ esp + 0xc ]
jmp r-xdata
mov ecx [ esp + 0x18 ]
cmp ecx [ esp + 0x14 ]
jl r-xdata
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push 0x29
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_409dae
test al al
je r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ rw-data ]
call sub_409a20
mov eax [ ebp + 0xc ]
xor ecx ecx
inc ecx
mov [ eax + 0xc ] ecx
mov [ eax ] esi
cmp [ esp + 0x20 ] ecx
jbe r-xdata
dec eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x29
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx eax
mov [ esp + 0x10 ] eax
call sub_409dae
test al al
je r-xdata
dec eax
jne r-xdata
mov eax [ esp + ecx + 0x44 ]
mov ecx [ ebp + 0xc ]
mov [ esp + 0xc ] eax
movzx esi [ eax ]
call sub_409a20
mov eax [ ebp + 0xc ]
xor ecx ecx
inc ecx
mov [ eax + 0xc ] ecx
mov [ eax ] esi
cmp [ esp + 0x20 ] ecx
jbe r-xdata
mov [ edx ] eax
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_4562f8
test al al
je r-xdata
cmp ecx [ esp + 0x24 ]
jg r-xdata
mov eax [ esp + 0x18 ]
lea ecx [ esp + 0x28 ]
call sub_409c9c
mov [ esp + 0x18 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push 0x29
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409dae
test al al
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ edi + 0x2d4 ]
call sub_409a20
mov eax [ ebp + 0xc ]
xor ecx ecx
inc ecx
mov [ eax + 0xc ] ecx
mov [ eax ] esi
cmp [ esp + 0x20 ] ecx
jbe r-xdata
mov ecx [ esp + 0xc ]
call sub_409997
mov ecx [ esp + 0xc ]
mov eax [ ecx + 0x8 ]
lea ecx [ esp + 0x28 ]
call sub_409997
mov eax [ esp + 0x30 ]
jmp r-xdata
mov eax [ esp + ecx + 0x44 ]
mov ecx esi
push eax
mov [ esp + 0x28 ] eax
call sub_409bf8
cmp [ esp + 0x20 ] 0x1
jbe r-xdata
mov eax [ ebp + 0x8 ]
push 0x29
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_409dae
test al al
jne r-xdata
mov edx [ esp + 0xc ]
jmp r-xdata
call sub_4044cb
jmp r-xdata
call sub_4043db
jmp r-xdata
mov ecx rw-data
test eax eax
jne r-xdata
push 0x29
mov ecx esi
call sub_409dae
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x29
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_409dae
test al al
je r-xdata
push [ eax ]
mov ecx [ esp + 0x28 ]
call sub_407d2c
jmp r-xdata
mov eax [ ebp + 0x8 ]
push 0x29
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx eax
mov [ esp + 0x10 ] eax
call sub_409dae
test al al
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_409c9c
test eax eax
jmp r-xdata
cmp [ esp + 0x18 ] 0x0
mov [ edx ] ecx
jmp r-xdata
mov ecx [ esp + 0x18 ]
lea ecx [ esp + 0x28 ]
call sub_409c9c
mov ecx eax
mov [ esp + 0x18 ] ecx
jmp r-xdata
mov esi [ esp + 0x18 ]
lea ecx [ esp + 0x28 ]
call sub_409c9c
mov esi eax
mov [ esp + 0x18 ] esi
jmp r-xdata
mov ecx [ esp + 0xc ]
call sub_409997
mov ecx [ esp + 0xc ]
mov eax [ ecx + 0x8 ]
mov eax [ eax ]
mov ax [ eax ]
lea ecx [ esp + 0x28 ]
call sub_409c9c
jmp r-xdata
mov ecx [ esp + 0xc ]
setne al
mov [ ecx ] al
test cl 0x2
je r-xdata
inc eax
mov [ rw-data ] dl
mov [ rw-data ] eax
xor edx edx
mov [ rw-data ] 0x101
mov [ rw-data ] 0x1
mov eax edx
mov [ rw-data ] 0x1
mov [ rw-data ] eax
test cl 0x1
je r-xdata
mov [ edi + 0x2d4 ] esi
jmp r-xdata
push esi
call sub_426c0d
dec eax
pop ecx
cmp eax 0x3
ja r-xdata
mov ecx [ esp + 0x24 ]
mov [ ecx ] ax
jmp r-xdata
test cl 0x4
je r-xdata
or eax 0x2
mov [ rw-data ] dl
mov [ rw-data ] eax
test cl 0x8
je r-xdata
or eax 0x4
mov [ rw-data ] dl
mov [ rw-data ] eax
or eax 0x8
mov [ rw-data ] dl
mov [ rw-data ] eax
jmp r-xdata
sub_4120a6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
push ecx
mov eax [ eax + 0x4 ]
mov esi [ eax ]
call sub_426d88
mov edx esi
lea ecx [ eax + 0x20 ]
call sub_420b0c
mov esi [ ebp + 0xc ]
mov edi eax
pop ecx
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
sub_4120e1
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
call sub_426670
mov esi [ ebp + 0xc ]
add esp 0x8
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
xor eax eax
fstp [ esi ]
mov [ esi + 0xc ] 0x3
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_412123
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov ebx ecx
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x4
jne r-xdata
push 0x0
push eax
lea eax [ ebp - 0x8 ]
mov ecx ebx
push eax
call sub_46f600
test al al
je r-xdata
push 0x38
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov eax [ ebx ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp r-xdata
mov ecx [ ebx + 0x194 ]
mov eax [ ebp - 0x8 ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax ]
mov edi [ eax + 0x4 ]
jmp r-xdata
xor edi edi
jmp r-xdata
mov ecx eax
call sub_405906
mov edi eax
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esi + 0x8 ] 0x2
jae r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push 0x8000
push [ esi + 0x8 ]
mov ecx edi
call sub_405956
test al al
je r-xdata
test edi edi
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
test eax eax
js r-xdata
mov ecx edi
call sub_405e3f
mov esi eax
mov [ ebp - 0x8 ] edx
sub esi [ edi + 0x10 ]
push ecx
mov ecx edi
call sub_405a1a
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov esi eax
jmp r-xdata
push esi
call sub_420f36
mov [ ebp - 0x8 ] eax
pop ecx
test esi esi
je r-xdata
lea ecx [ ebp - 0x14 ]
call sub_4077c7
lea eax [ ebp - 0x4 ]
mov ecx edi
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_4056d2
test al al
je r-xdata
mov ecx edi
mov [ ebp - 0x4 ] esi
call sub_405708
test al 0x10
jne r-xdata
mov ecx [ ebp + 0xc ]
push esi
call sub_46776d
push esi
push [ ebp - 0x8 ]
push eax
call sub_420fc0
mov eax [ ebx ]
add esp 0xc
mov ecx [ eax + 0x4 ]
push 0x0
push esi
add ecx ebx
call sub_41fea1
lea ecx [ ebp - 0x4 ]
push ecx
push eax
mov ecx edi
call sub_4059b0
test al al
jne r-xdata
mov eax [ ebx ]
push 0x0
push 0xffffffff
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x14 ]
push eax
call sub_409b9c
mov eax [ ebx ]
push 0x0
push [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_41fea1
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x4
jne r-xdata
mov esi [ ebp - 0x4 ]
mov eax [ ebx ]
push 0x0
push 0xffffffff
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405a64
mov ecx edi
call sub_405dcf
test edi edi
je r-xdata
push [ ebp - 0x8 ]
call j_sub_422ed5#3
pop ecx
jmp r-xdata
push ecx
mov ecx edi
call sub_405a1a
sub_41222e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
push edi
mov ebx ecx
xor eax eax
mov ecx [ ebp + 0xc ]
push r--data
mov [ esp + 0x14 ] eax
call sub_409bf8
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x8 ] 0x2
jne r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x4
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov esi eax
mov [ esp + 0x10 ] esi
cmp esi 0xffffffff
je r-xdata
push 0x0
push eax
lea eax [ esp + 0x1c ]
mov ecx ebx
push eax
call sub_46f600
test al al
je r-xdata
push 0x38
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov eax 0x7fffffff
mov [ esp + 0x10 ] eax
jmp r-xdata
test esi esi
jle r-xdata
mov eax [ ebx ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp r-xdata
mov ecx [ ebx + 0x194 ]
mov eax [ esp + 0x14 ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax ]
mov edi [ eax + 0x4 ]
jmp r-xdata
xor edi edi
jmp r-xdata
mov ecx eax
call sub_405906
mov edi eax
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x400
lea ecx [ esp + 0x1c ]
call sub_407b76
mov esi [ esp + 0x10 ]
xor al al
mov [ esp + 0xf ] al
mov ecx edi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push 0x8000
push [ esi + 0x8 ]
mov ecx edi
call sub_405956
test al al
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x18 ]
push eax
call sub_4055ec
test al al
jne r-xdata
call sub_4053db
and [ esp + 0x10 ] 0x0
test esi esi
jle r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x18 ]
push eax
call sub_409b9c
mov eax [ ebx ]
push 0x0
push 0xffffffff
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov al 0x1
jmp r-xdata
lea eax [ esp + 0x18 ]
mov ecx edi
push eax
call sub_4055ec
test al al
je r-xdata
push ecx
mov ecx edi
call sub_405a1a
lea ecx [ esp + 0x18 ]
call sub_405a64
mov ecx edi
call sub_405dcf
test edi edi
je r-xdata
test al al
jne r-xdata
cmp esi 0x7fffffff
je r-xdata
mov eax [ esp + 0x10 ]
inc eax
mov [ esp + 0x10 ] eax
cmp eax esi
jl r-xdata
push ecx
mov ecx edi
call sub_405a1a
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x4
jne r-xdata
mov al [ esp + 0xf ]
mov eax [ ebx ]
push 0x0
push 0xffffffff
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov [ esp + 0xf ] 0x1
jmp r-xdata
sub_41236a
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
or ebx 0xffffffff
and [ ebp + 0x8 ] 0x0
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] ebx
mov esi [ edi + 0x8 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
cmp esi 0x7
ja r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x1c ]
call sub_4687da
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp esi 0x6
jbe r-xdata
cmp esi 0x5
jbe r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_409c9c
mov [ ebp - 0x4 ] eax
cmp esi 0x4
jbe r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_409c9c
mov ebx eax
cmp esi 0x3
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_409c9c
mov [ ebp - 0x10 ] eax
cmp esi 0x2
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_409c9c
mov [ ebp - 0x14 ] eax
cmp esi 0x1
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_409c9c
mov [ ebp - 0x8 ] eax
mov ecx [ edi + 0x4 ]
mov esi [ ecx ]
mov ecx esi
call sub_409997
push [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push [ ebp - 0x4 ]
push ebx
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push [ ecx ]
call sub_4027d9
mov edi eax
test edi edi
je r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_409c9c
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x18 ]
push 0x0
push 0x1
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] edi
pop edi
mov [ esi + 0xc ] 0x7
xor eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_412471
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
push eax
mov ecx rw-data
call sub_402c18
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
sub_4124ab
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
mov ebx edi
mov [ ebp - 0x10 ] edi
mov eax [ esi + 0x4 ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
mov ecx [ eax + 0x4 ]
call sub_409c9c
test eax eax
jle r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
jmp r-xdata
cmp [ esi + 0x8 ] 0x7
ja r-xdata
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x1c ]
call sub_409c9c
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ esi + 0x8 ] 0x6
ja r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_409c9c
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x8 ] 0x5
ja r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_409c9c
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ esi + 0x8 ] 0x4
ja r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_409c9c
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ esi + 0x8 ] 0x3
jbe r-xdata
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
mov ebx eax
push [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
mov ecx [ edx + 0x4 ]
push [ ebp - 0x10 ]
mov esi [ edx ]
push ebx
push edi
call sub_409c9c
push eax
mov ecx esi
call sub_409c9c
push eax
call sub_402f95
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
mov edi eax
sub_412572
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
cmp [ esi + 0x8 ] 0x1
ja r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_4687da
jmp r-xdata
mov ecx [ esi + 0x4 ]
push 0xffffffff
push 0xffffffff
push eax
mov ecx [ ecx ]
push 0xffffffff
push 0x0
call sub_409c9c
push eax
push 0x0
call sub_402b72
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
sub_4125c7
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ebx
mov eax [ esi + 0x4 ]
mov edi [ eax + 0x4 ]
mov ecx edi
cmp [ edi + 0xc ] 0xe
je r-xdata
xor eax eax
inc eax
mov [ ebp + 0x8 ] eax
lea eax [ ebp - 0x38 ]
push eax
call sub_4679c3
mov ecx eax
jmp r-xdata
push 0x2
pop eax
mov [ ebp + 0x8 ] eax
call sub_409997
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x28 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x1c ] eax
inc [ eax ]
mov eax [ ecx ]
mov [ ebp - 0x18 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0xc ] eax
inc [ eax ]
mov eax [ ebp + 0x8 ]
test al 0x2
je r-xdata
test al 0x1
jne r-xdata
and eax 0xfffffffd
lea ecx [ ebp - 0x28 ]
mov [ ebp + 0x8 ] eax
call sub_405a64
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x38 ]
call sub_405a64
jmp r-xdata
mov edi [ ebp - 0x4 ]
lea eax [ ebp - 0x18 ]
push eax
mov ecx edi
call sub_409fbd
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor eax eax
mov [ esi ] ebx
inc eax
push ebx
mov [ esi + 0xc ] eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
or ebx 0xffffffff
jmp r-xdata
cmp [ esi + 0x8 ] 0x2
mov eax ebx
ja r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405a64
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_4687da
jmp r-xdata
mov ecx [ esi + 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ecx ]
call sub_409c9c
push eax
call sub_402b27
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
xor eax eax
mov [ esi ] edi
inc eax
mov [ esi + 0xc ] eax
sub_4126bd
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
push 0x5
pop edi
cmp [ esi + 0x8 ] 0x1
ja r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_4687da
mov ebx eax
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
ja r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
mov edi eax
jmp r-xdata
push ebx
push edi
call sub_402a5b
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
pop ebp
retn 0x8
sub_41270e
push ebp
mov ebp esp
sub esp 0x68
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] ecx
mov edx [ esi + 0x4 ]
mov eax [ edx ]
cmp [ eax + 0xc ] 0xb
je r-xdata
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x20 ]
push eax
call sub_409ac0
lea ecx [ ebp - 0x20 ]
call sub_409997
mov eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x20 ]
mov edx [ eax ]
call sub_468801
mov ecx [ ebp + 0xc ]
test eax eax
je r-xdata
push ebx
push edi
push 0x8
xor ebx ebx
mov [ ebp - 0x1 ] 0x1
cmp [ esi + 0x8 ] 0x1
pop edi
jbe r-xdata
push edx
lea eax [ edx + 0x4 ]
push eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
cmp [ ecx + 0xc ] 0x7
je r-xdata
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
cmp [ eax + 0xc ] 0xa
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
call sub_409bf8
lea ecx [ ebp - 0x20 ]
call sub_409a20
jmp r-xdata
call sub_4687da
cdq
mov esi edx
cmp [ ebp - 0x1 ] bl
je r-xdata
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
push 0x29
mov ecx eax
call sub_409dae
test al al
jne r-xdata
mov ecx eax
mov [ ebp - 0x1 ] bl
call sub_409c9c
mov edi eax
cmp edi 0x10
jg r-xdata
push esi
push eax
mov edx edi
lea ecx [ ebp - 0x68 ]
call sub_41fcb1
pop ecx
pop ecx
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x68 ]
push eax
call sub_409bf8
pop edi
pop ebx
push 0x8
jmp r-xdata
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x20 ]
push eax
push esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x1
call sub_412cc2
cmp [ ebp - 0x14 ] 0x3
je r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
mov esi [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
jmp r-xdata
push 0x10
pop edi
jmp r-xdata
test edi edi
js r-xdata
pop edi
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_409cf8
fstp [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
mov esi [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x1 ] bl
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_409d46
mov esi edx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x1 ] bl
jne r-xdata
mov edi ebx
jmp r-xdata
push 0x10
mov [ ebp - 0x1 ] bl
pop edi
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x2
jne r-xdata
lea ecx [ ebp - 0x20 ]
call sub_409a20
mov eax [ ebp - 0x8 ]
cmp [ ebp - 0x1 ] bl
jne r-xdata
cmp esi ebx
jl r-xdata
cmp esi 0xffffffff
jg r-xdata
jg r-xdata
jl r-xdata
or ebx esi
jne r-xdata
cmp eax 0x7fffffff
jbe r-xdata
push 0x10
cmp eax 0x80000000
jae r-xdata
jmp r-xdata
sub_412817
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
and [ esp + 0x10 ] 0x0
push ebx
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
mov esi [ ecx + 0x8 ]
xor ecx ecx
mov [ esp + 0x10 ] ecx
cmp esi 0x1
lea ecx [ esp + 0x30 ]
sete bh
call sub_4077c7
cmp esi 0x2
jb r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x20 ]
push [ eax ]
call sub_407f41
lea eax [ esp + 0xf ]
push eax
lea eax [ esp + 0x12 ]
push eax
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x19 ]
push eax
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x34 ]
push eax
call sub_42017b
mov bl al
lea ecx [ esp + 0x20 ]
neg bl
sbb bl bl
call sub_405a64
inc bl
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x2a
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409dae
mov bh al
mov [ esp + 0xc ] bh
test bh bh
jne r-xdata
cmp [ esp + 0x14 ] 0xffffffff
jne r-xdata
mov edx [ esp + 0x14 ]
mov cl [ esp + 0xc ]
mov [ esp + 0x18 ] edx
cmp edx 0x13
je r-xdata
cmp [ esi + 0xc ] 0xe
mov ecx esi
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
jmp r-xdata
mov eax [ edi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
test cl cl
je r-xdata
cmp [ esp + 0xd ] 0x0
jne r-xdata
lea eax [ esp + 0x40 ]
xor ebx ebx
push eax
inc ebx
call sub_4679c3
jmp r-xdata
push 0x2
pop ebx
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x24 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x28 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x2c ] eax
inc [ eax ]
lea eax [ esp + 0x20 ]
mov [ esi + 0xc ] 0x1
jmp r-xdata
push 0x3
pop edx
mov [ esp + 0x18 ] edx
jmp r-xdata
push 0x4
pop eax
mov [ esp + 0x10 ] eax
jmp r-xdata
mov eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x34 ]
call sub_4081a7
test bl 0x2
je r-xdata
test bl 0x1
jne r-xdata
lea ecx [ esp + 0x20 ]
and ebx 0xfffffffd
call sub_405a64
lea ecx [ esp + 0x30 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
test cl cl
jne r-xdata
or eax 0x2
mov [ esp + 0x10 ] eax
jmp r-xdata
cmp [ esp + 0xe ] 0x0
jne r-xdata
lea ecx [ esp + 0x40 ]
call sub_405a64
jmp r-xdata
lea eax [ esp + 0x30 ]
mov ecx edi
push eax
call sub_409fbd
test eax eax
je r-xdata
or eax 0x1
mov [ esp + 0x10 ] eax
jmp r-xdata
cmp [ esp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
mov bh [ esp + 0xc ]
or eax 0x8
mov [ esp + 0x10 ] eax
jmp r-xdata
mov ecx [ edi + 0x1c8 ]
xor esi esi
shl edx 0x10
or edx eax
mov [ esp + 0x1c ] edx
test ecx ecx
jne r-xdata
mov eax [ edi + 0x1c4 ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
test bh bh
jne r-xdata
inc esi
cmp esi ecx
jae r-xdata
cmp [ eax + 0x4 ] edx
jne r-xdata
xor ebx ebx
test ecx ecx
jne r-xdata
jmp r-xdata
test bh bh
je r-xdata
mov edx [ edi + 0x1c4 ]
push 0x28
cmp ebx ecx
jne r-xdata
lea eax [ esp + 0x30 ]
push eax
mov eax [ edi + 0x1c4 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
add ecx 0x8
call sub_4081a7
jmp r-xdata
mov eax [ edi + 0x1c4 ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
push [ eax ]
push [ rw-data ]
call [ UnregisterHotKey@IAT ]
mov eax [ edi + 0x1c4 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
inc ebx
add edx 0x4
cmp ebx ecx
jb r-xdata
call sub_420f36
pop ecx
test eax eax
je r-xdata
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x1c4 ]
mov eax [ eax + esi * 4 ]
and [ eax ] 0x0
jmp r-xdata
push ecx
call sub_420d1d
mov eax [ edx ]
cmp [ eax ] 0x0
je r-xdata
jmp r-xdata
xor ecx ecx
mov ecx eax
call sub_420d3d
mov ecx eax
jmp r-xdata
and [ esp + 0x14 ] 0x0
jmp r-xdata
mov ecx eax
call sub_420d3d
mov [ esp + 0x14 ] eax
mov eax [ edi + 0x1c4 ]
mov ecx [ esp + 0x1c ]
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
mov [ eax ] ebx
mov eax [ edi + 0x1c4 ]
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
mov [ eax + 0x4 ] ecx
lea eax [ esp + 0x30 ]
push eax
mov eax [ edi + 0x1c4 ]
mov eax [ eax + ebx * 4 ]
mov ecx [ eax ]
add ecx 0x8
call sub_4081a7
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ edi + 0x1c4 ]
push [ esi + 0x8 ]
mov eax [ eax + ebx * 4 ]
mov ecx [ eax ]
add ecx 0x18
call sub_4081a7
mov eax [ edi + 0x1c4 ]
push [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
push ecx
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
push [ eax ]
push [ rw-data ]
call [ RegisterHotKey@IAT ]
test eax eax
je r-xdata
mov eax [ edi + 0x1c4 ]
mov eax [ eax + ebx * 4 ]
mov [ eax ] ecx
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
lea ecx [ edi + 0x1c0 ]
call sub_4034c2
mov eax [ edi + 0x1c4 ]
mov eax [ eax + ebx * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ edi + 0x1c4 ]
mov eax [ eax + ebx * 4 ]
xor ebx ebx
push ebx
mov [ eax ] ebx
call [ GetLastError@IAT ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] ebx
push ecx
call sub_420d1d
sub_412a79
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp [ edi + 0x8 ] 0x1
ja r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
dec eax
je r-xdata
test esi esi
jne r-xdata
xor esi esi
inc esi
jmp r-xdata
dec eax
jne r-xdata
lea eax [ esi - 0x1 ]
cmp eax 0x1
ja r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebp + 0xc ]
push [ eax ]
call sub_409e9c
mov ecx [ ebp + 0xc ]
call sub_409505
push 0x2
pop esi
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
push esi
mov ecx [ eax ]
call sub_409d46
push edx
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4738c4
mov ecx [ ebp + 0xc ]
push eax
call sub_409e9c
lea ecx [ ebp - 0x10 ]
call sub_409a20
jmp r-xdata
sub_412ab7
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xbc
push ebx
push esi
push edi
push 0x0
call [ Sleep@IAT ]
lea eax [ esp + 0x88 ]
mov [ esp + 0x88 ] 0x40
push eax
call [ GlobalMemoryStatusEx@IAT ]
mov ecx [ ebp + 0xc ]
call sub_40942e
xor ebx ebx
mov esi eax
push 0x7
inc ebx
push ebx
push esi
call sub_4091b0
mov ecx [ esp + 0x98 ]
fild [ esp + 0x98 ]
test ecx ecx
jns r-xdata
and [ esp + 0x6c ] 0x0
lea eax [ esp + 0x64 ]
push 0x3
pop edi
push 0x0
push ebx
push eax
push esi
fstp [ esp + 0x74 ]
mov [ esp + 0x80 ] edi
call sub_409040
add esp 0x1c
lea ecx [ esp + 0x58 ]
call sub_409a20
fild [ esp + 0x90 ]
push ebx
push ebx
lea eax [ esp + 0x40 ]
push eax
fstp [ esp + 0x1c ]
fld [ esp + 0x1c ]
fmul [ r--data ]
and [ esp + 0x4c ] 0x0
push esi
mov [ esp + 0x54 ] edi
fstp [ esp + 0x48 ]
call sub_409040
add esp 0x10
lea ecx [ esp + 0x38 ]
call sub_409a20
fild [ esp + 0x98 ]
push 0x2
push ebx
lea eax [ esp + 0x80 ]
push eax
fstp [ esp + 0x1c ]
fld [ esp + 0x1c ]
fmul [ r--data ]
and [ esp + 0x8c ] 0x0
push esi
mov [ esp + 0x94 ] edi
fstp [ esp + 0x88 ]
call sub_409040
add esp 0x10
lea ecx [ esp + 0x78 ]
call sub_409a20
fild [ esp + 0xa0 ]
push edi
push ebx
lea eax [ esp + 0x20 ]
push eax
fstp [ esp + 0x1c ]
fld [ esp + 0x1c ]
fmul [ r--data ]
and [ esp + 0x2c ] 0x0
push esi
mov [ esp + 0x34 ] edi
fstp [ esp + 0x28 ]
call sub_409040
add esp 0x10
lea ecx [ esp + 0x18 ]
call sub_409a20
fild [ esp + 0xa8 ]
push 0x4
push ebx
lea eax [ esp + 0x30 ]
push eax
fstp [ esp + 0x1c ]
fld [ esp + 0x1c ]
fmul [ r--data ]
and [ esp + 0x3c ] 0x0
push esi
mov [ esp + 0x44 ] edi
fstp [ esp + 0x38 ]
call sub_409040
add esp 0x10
lea ecx [ esp + 0x28 ]
call sub_409a20
fild [ esp + 0xb0 ]
fstp [ esp + 0x10 ]
fld [ esp + 0x10 ]
fmul [ r--data ]
lea eax [ esp + 0x48 ]
and [ esp + 0x50 ] 0x0
push 0x5
push ebx
push eax
push esi
fstp [ esp + 0x58 ]
mov [ esp + 0x64 ] edi
call sub_409040
add esp 0x10
lea ecx [ esp + 0x48 ]
call sub_409a20
fild [ esp + 0xb8 ]
push 0x6
push ebx
lea eax [ esp + 0x70 ]
push eax
fstp [ esp + 0x1c ]
fld [ esp + 0x1c ]
fmul [ r--data ]
and [ esp + 0x7c ] 0x0
push esi
mov [ esp + 0x84 ] edi
fstp [ esp + 0x78 ]
call sub_409040
add esp 0x10
lea ecx [ esp + 0x68 ]
call sub_409a20
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
fadd [ r--data ]
sub_412cc2
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0xc ]
push [ eax ]
call sub_409e9c
mov ecx [ ebp + 0xc ]
call sub_4094da
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
dec eax
je r-xdata
push [ ebp + 0xc ]
mov ecx edi
push esi
call sub_412a79
jmp r-xdata
dec eax
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
dec eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_409cf8
mov esi [ ebp + 0xc ]
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
jmp r-xdata
sub_412d18
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ esi + 0x8 ] 0x1
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
fld [ r--data ]
push ecx
push ecx
fstp [ esp ]
mov ecx eax
call sub_41fbe2
mov eax [ esi + 0x4 ]
pop ecx
pop ecx
fstp [ ebp - 0x8 ]
mov ecx [ eax ]
call sub_409cf8
fcomp [ r--data ]
fnstsw ax
test ah 0x1
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
jne r-xdata
call sub_409cf8
fmul [ ebp - 0x8 ]
push ecx
push ecx
fsub [ r--data ]
fstp [ esp ]
call sub_426af0
jmp r-xdata
call sub_409cf8
fmul [ ebp - 0x8 ]
push ecx
push ecx
fadd [ r--data ]
fstp [ esp ]
call sub_4269c0
fdiv [ ebp - 0x8 ]
mov edi [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx edi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
fstp [ edi ]
mov [ edi + 0xc ] 0x3
cmp [ esi + 0x8 ] 0x1
je r-xdata
push 0x0
mov ecx edi
call sub_409d46
push edx
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4738c4
push eax
mov ecx edi
call sub_409e9c
lea ecx [ ebp - 0x10 ]
call sub_409a20
jmp r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_412dc0
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
call sub_4267a0
mov esi [ ebp + 0xc ]
add esp 0x8
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
xor eax eax
fstp [ esi ]
mov [ esi + 0xc ] 0x3
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_412e02
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
test eax eax
jle r-xdata
push 0x0
call [ Sleep@IAT ]
jmp r-xdata
call [ timeGetTime@IAT ]
mov [ esi + 0x2f8 ] eax
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
push 0x0
mov ecx esi
mov [ esi + 0x2f0 ] eax
mov [ esi + 0xf8 ] 0x2
call sub_410b30
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
sub_412e5b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x8c
push ebx
mov ebx [ ebp + 0x8 ]
lea ecx [ esp + 0x14 ]
push esi
push edi
push 0x400
mov edi [ ebx + 0x8 ]
call sub_407b76
mov esi 0x20000
push esi
call sub_420f36
pop ecx
push eax
lea ecx [ esp + 0x5c ]
call sub_40538e
push esi
call sub_420f36
pop ecx
push eax
lea ecx [ esp + 0x40 ]
call sub_40538e
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ebx [ esi + 0x8 ]
lea ecx [ esp + 0x44 ]
call sub_4077c7
lea ecx [ esp + 0x60 ]
call sub_415bfd
push r--data
lea ecx [ esp + 0x30 ]
call sub_407f41
push ecx
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x68 ]
call sub_415c72
lea ecx [ esp + 0x2c ]
call sub_405a64
push ebx
lea ecx [ esp + 0x64 ]
call sub_415d24
xor esi esi
mov [ esp + 0x2c ] r--data
lea eax [ edi - 0x1 ]
mov edi [ esp + 0x58 ]
mov ecx esi
mov [ esp + 0x14 ] esi
mov [ esp + 0x30 ] esi
mov [ esp + 0x34 ] esi
mov [ esp + 0x38 ] esi
mov [ esp + 0x10 ] ecx
mov [ esp + 0x54 ] eax
cmp [ ebx + 0x4 ] esi
jle r-xdata
cmp esi [ ebx + 0x4 ]
jl r-xdata
push ecx
lea eax [ esp + 0x30 ]
push eax
push esi
lea ecx [ esp + 0x6c ]
call sub_415b8e
test eax eax
jle r-xdata
push 0xffffffff
push esi
push ebx
lea ecx [ esp + 0x28 ]
call sub_407bb1
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x1c ]
push eax
call sub_409b9c
lea ecx [ esp + 0x2c ]
call sub_4209ef
lea ecx [ esp + 0x60 ]
call sub_415c2e
lea ecx [ esp + 0x60 ]
call sub_405a64
lea ecx [ esp + 0x44 ]
call sub_405a64
mov eax [ esp + 0x40 ]
dec [ eax ]
jne r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x14 ]
mov eax [ eax ]
mov esi [ eax ]
mov eax [ eax + 0x4 ]
mov [ esp + 0x18 ] eax
mov eax esi
sub eax ecx
push eax
push ecx
push ebx
lea ecx [ esp + 0x28 ]
call sub_407bb1
mov ecx [ esp + 0x18 ]
add ecx esi
mov [ esp + 0x14 ] ecx
mov ecx ebx
push esi
call sub_407b20
push 0x25
pop ecx
cmp [ eax ] cx
jne r-xdata
mov eax [ esp + 0x5c ]
dec [ eax ]
jne r-xdata
push eax
call j_sub_422ed5#3
pop ecx
push [ esp + 0x3c ]
call j_sub_422ed5#3
pop ecx
push esi
mov ecx ebx
call sub_407b20
push 0x5c
pop ecx
cmp [ eax ] cx
je r-xdata
lea eax [ esi + 0x1 ]
mov ecx ebx
push eax
call sub_407b20
push 0x25
pop ecx
cmp [ eax ] cx
je r-xdata
lea ecx [ esp + 0x1c ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
call j_sub_422ed5#3
pop ecx
push edi
call j_sub_422ed5#3
pop ecx
lea eax [ esi + 0x1 ]
mov ecx ebx
push eax
call sub_407b20
push 0x5c
pop ecx
movzx eax [ eax ]
sub eax ecx
je r-xdata
mov eax [ esp + 0x10 ]
cmp eax [ esp + 0x54 ]
je r-xdata
push ecx
jmp r-xdata
sub eax 0x12
je r-xdata
mov esi [ esp + 0x14 ]
cmp esi [ ebx + 0x4 ]
jl r-xdata
push [ esp + 0x18 ]
inc eax
lea ecx [ esp + 0x48 ]
push esi
push ebx
mov [ esp + 0x1c ] eax
call sub_4079ab
mov eax [ esp + 0x48 ]
lea ecx [ esp + 0x44 ]
dec eax
push eax
call sub_407b52
movzx eax [ eax ]
cmp eax 0x69
jg r-xdata
lea ecx [ esp + 0x20 ]
call sub_407a84
jmp r-xdata
push 0xa
jmp r-xdata
sub eax 0x4
je r-xdata
sub eax 0x6f
je r-xdata
je r-xdata
push 0xd
jmp r-xdata
dec eax
dec eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ecx * 4 ]
call sub_409c9c
push eax
sub eax 0x4
je r-xdata
cmp eax 0x45
je r-xdata
jmp r-xdata
push edi
lea ecx [ esp + 0x20 ]
call sub_407e0b
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + ecx * 4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ esp + 0x3c ]
push 0xffff
push [ eax ]
push esi
call sub_42422e
add esp 0xc
xor eax eax
mov [ esi + 0x1fffe ] ax
push esi
jmp r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ecx * 4 ]
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
push [ esp + 0x4c ]
push edi
call sub_423818
add esp 0x10
cmp eax 0x47
je r-xdata
push 0x9
push [ esp + 0x48 ]
push edi
call sub_423818
add esp 0xc
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax 0x58
je r-xdata
cmp eax 0x64
je r-xdata
add eax 0xffffff9b
cmp eax 0x2
ja r-xdata
sub_4130dd
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
or edi 0xffffffff
mov esi [ eax + 0x4 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
lea ebx [ eax - 0x1 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x2
jbe r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4077c7
cmp ebx esi
jg r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
mov edi eax
mov ebx esi
jmp r-xdata
test ebx ebx
js r-xdata
test edi edi
js r-xdata
mov edi esi
sub edi ebx
jmp r-xdata
mov eax esi
sub eax ebx
cmp edi eax
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push edi
push ebx
push [ esi + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4079ab
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_409b9c
lea ecx [ ebp - 0x10 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_413190
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xa4
push ebx
push esi
mov [ esp + 0x14 ] ecx
lea ecx [ esp + 0x60 ]
push edi
call sub_415bfd
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ edi + 0x4 ]
mov ebx [ esi + 0x8 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax 0x1
xor esi esi
mov [ esp + 0x14 ] ecx
cmp [ edi + 0x8 ] 0x3
mov [ esp + 0x10 ] eax
jb r-xdata
cmp [ edi + 0x8 ] 0x4
jae r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
mov esi eax
test esi esi
js r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
mov ecx [ esp + 0x14 ]
jmp r-xdata
cmp eax 0x1
jl r-xdata
xor esi esi
jmp r-xdata
cmp esi 0x4
jg r-xdata
mov eax 0x1
jmp r-xdata
push ecx
dec eax
push ecx
lea ecx [ esp + 0x6c ]
mov [ esp + 0x18 ] eax
call sub_415c72
mov edi eax
test edi edi
jne r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x0
mov esi [ esp + 0x18 ]
push 0x0
push 0x2
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
push 0x0
lea eax [ edi + 0x1 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_41fea1
jmp r-xdata
push ebx
lea ecx [ esp + 0x68 ]
call sub_415d24
test esi esi
je r-xdata
lea ecx [ esp + 0x64 ]
call sub_415c2e
lea ecx [ esp + 0x64 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x0
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x6c ]
call sub_415608
mov esi [ ebp + 0xc ]
mov ecx esi
test eax eax
je r-xdata
lea ecx [ esp + 0x2c ]
call sub_4077c7
cmp esi 0x1
je r-xdata
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x0
jmp r-xdata
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x1
jmp r-xdata
push 0x0
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x6c ]
call sub_415608
mov esi eax
test esi esi
jne r-xdata
cmp esi 0x2
je r-xdata
mov ecx [ ebp + 0xc ]
cmp esi 0x2
jl r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x0
push 0x0
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x6c ]
call sub_415608
mov edi eax
test edi edi
je r-xdata
cmp esi 0x3
jne r-xdata
xor edi edi
call sub_40942e
push esi
mov edi 0x1
call sub_40942e
lea ecx [ esi - 0x1 ]
push ecx
jmp r-xdata
lea ecx [ esp + 0x2c ]
call sub_405a64
mov esi [ esp + 0x18 ]
push 0x0
push 0x1
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_40942e
push edi
mov ebx eax
push 0x1
push ebx
call sub_4091b0
add esp 0xc
xor esi esi
test edi edi
jle r-xdata
cmp esi 0x4
jne r-xdata
mov ebx [ esp + 0x38 ]
xor eax eax
mov [ esp + 0x1c ] r--data
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x10 ]
mov esi [ esp + 0x18 ]
inc eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_41fea1
jmp r-xdata
lea eax [ esp + 0x2c ]
push eax
push edi
lea ecx [ esp + 0x6c ]
call sub_456511
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x54 ]
call sub_4093ea
push [ esp + 0x14 ]
lea eax [ esp + 0x54 ]
push 0x1
push eax
push ebx
call sub_409040
add esp 0x10
lea ecx [ esp + 0x50 ]
call sub_409a20
inc [ esp + 0x14 ]
inc edi
cmp edi esi
jb r-xdata
mov ebx eax
push 0x1
push ebx
call sub_4091b0
add esp 0xc
mov [ esp + 0x14 ] 0x0
cmp edi esi
jae r-xdata
lea eax [ esp + 0x2c ]
push eax
push esi
lea ecx [ esp + 0x6c ]
call sub_456511
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x54 ]
call sub_4093ea
push esi
push 0x1
lea eax [ esp + 0x58 ]
push eax
push ebx
call sub_409040
add esp 0x10
lea ecx [ esp + 0x50 ]
call sub_409a20
inc esi
cmp esi edi
jl r-xdata
mov [ esp + 0xa0 ] r--data
mov [ esp + 0xa4 ] 0x0
mov [ esp + 0xa8 ] 0x0
mov [ esp + 0xac ] 0x0
mov [ esp + 0x1c ] r--data
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x5c ] 0x1
mov ecx [ esp + 0x78 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edi [ esp + 0x24 ]
test edi edi
jne r-xdata
cmp [ esp + 0xa8 ] 0x0
je r-xdata
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
cmp [ esp + 0x74 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_40942e
push edi
mov ebx eax
push 0x1
push ebx
call sub_4091b0
add esp 0xc
xor esi esi
test edi edi
je r-xdata
mov esi [ esp + 0x18 ]
push edi
push 0x1
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
jmp r-xdata
push 0x1
lea eax [ esp + 0xa4 ]
push eax
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x70 ]
call sub_45f662
test eax eax
je r-xdata
lea eax [ esp + 0xa0 ]
push eax
lea ecx [ esp + 0x54 ]
call sub_409890
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esp + 0x20 ]
call sub_456363
jmp r-xdata
mov esi [ esp + 0x18 ]
push 0x0
push 0x1
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x1c ]
push eax
call sub_409890
cmp edx 0xffffffff
je r-xdata
lea ecx [ esp + 0x50 ]
call sub_409a20
lea ecx [ esp + 0x1c ]
call sub_4563f2
lea ecx [ esp + 0xa0 ]
jmp r-xdata
mov eax [ esp + 0x20 ]
push esi
push 0x1
push [ eax + esi * 4 ]
push ebx
call sub_409040
inc esi
add esp 0x10
cmp esi edi
jb r-xdata
lea ecx [ esp + 0x1c ]
cmp edx esi
jg r-xdata
call sub_404024
push [ esp + 0x88 ]
mov eax [ esp + 0x94 ]
push [ esp + 0x88 ]
or eax [ esp + 0xa0 ]
push eax
push edx
mov edx [ esp + 0x8c ]
push esi
push [ esp + 0x78 ]
call sub_414140
add esp 0x18
mov [ esp + 0x8c ] eax
test eax eax
jle r-xdata
cmp [ esp + 0x90 ] 0x0
jne r-xdata
mov ecx [ esp + 0x84 ]
mov esi [ esp + 0x80 ]
mov edx [ ecx + 0x4 ]
mov [ esp + 0x90 ] 0x0
mov edi [ ecx ]
cmp edi [ ecx + 0x4 ]
je r-xdata
cmp eax 0xffffffff
jne r-xdata
cmp edi esi
jne r-xdata
mov [ esp + 0x10 ] edx
mov ecx eax
inc [ esp + 0x10 ]
lea eax [ esp + 0x10 ]
push 0x1
push eax
lea ecx [ esp + 0x6c ]
mov [ esp + 0x98 ] 0x0
call sub_415608
mov esi [ esp + 0x80 ]
mov ecx eax
mov eax [ esp + 0x8c ]
mov edx [ esp + 0x10 ]
jmp r-xdata
mov [ esp + 0x90 ] 0x10000010
jmp r-xdata
lea edx [ esi + 0x1 ]
jmp r-xdata
cmp ecx 0x2
jge r-xdata
mov [ esp + 0x44 ] ecx
test ecx ecx
je r-xdata
mov edi 0x1
jmp r-xdata
xor edi edi
cmp edi ecx
jae r-xdata
mov esi [ esp + 0x24 ]
lea ecx [ edi * 8 ]
mov [ esp + 0x4c ] ecx
push 0xffffffff
push 0x0
lea ecx [ esp + 0x34 ]
call sub_407e8c
mov ebx [ esp + 0x38 ]
jmp r-xdata
mov eax [ esp + 0x64 ]
mov [ esp + 0x40 ] eax
test edi edi
js r-xdata
mov eax [ esp + 0x3c ]
cmp esi eax
je r-xdata
mov esi 0xfffffff9
jmp r-xdata
mov eax [ esp + 0x84 ]
add eax ecx
mov ecx [ r--data ]
mov [ esp + 0x9c ] eax
mov esi [ eax + 0x4 ]
sub esi [ eax ]
lea eax [ esi * 2 + 0x2 ]
push eax
cmp ecx sub_416493
jne r-xdata
add eax eax
mov [ esp + 0x3c ] eax
cmp eax 0x8
jb r-xdata
push 0x10
call sub_420f36
add esp 0x4
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
jmp r-xdata
call ecx
mov ecx eax
mov [ esp + 0x4c ] eax
jmp r-xdata
call sub_42588c
mov ecx eax
mov [ esp + 0x4c ] ecx
mov eax 0x8
mov [ esp + 0x3c ] eax
jmp r-xdata
xor ecx ecx
mov [ esp + 0x28 ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov edx [ esp + 0x24 ]
add esp 0x4
mov [ esp + 0x40 ] eax
test edx edx
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x2c ]
mov [ eax ] ecx
mov ecx [ esp + 0x30 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x34 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ebx
inc [ ebx ]
test eax eax
je r-xdata
add esp 0x4
test ecx ecx
je r-xdata
mov esi 0xfffffffa
jmp r-xdata
mov edx [ esp + 0x40 ]
lea eax [ esi + esi ]
push eax
mov eax [ esp + 0xa0 ]
mov eax [ eax ]
lea eax [ edx + eax * 2 ]
push eax
push ecx
call sub_420fc0
mov eax [ esp + 0x54 ]
xor ecx ecx
add esp 0xc
mov [ esp + 0x14 ] eax
mov [ eax + esi * 2 ] cx
test esi esi
je r-xdata
mov [ esp + 0x20 ] eax
jmp r-xdata
test esi esi
je r-xdata
mov ecx [ esp + 0x20 ]
inc edi
mov [ ecx + esi * 4 ] eax
inc esi
mov ecx [ esp + 0x4c ]
add ecx 0x8
mov [ esp + 0x24 ] esi
mov [ esp + 0x4c ] ecx
cmp edi [ esp + 0x44 ]
jae r-xdata
mov edx [ esp + 0x10 ]
mov esi [ esp + 0x80 ]
jmp r-xdata
mov eax [ esp + 0x8c ]
jmp r-xdata
push 0xffffffff
push 0x0
lea ecx [ esp + 0x34 ]
call sub_407e8c
mov ebx [ esp + 0x38 ]
jmp r-xdata
mov eax [ ebx ]
cmp eax 0x1
jle r-xdata
cmp esi 0xffffffff
je r-xdata
lea ecx [ esi * 4 ]
push ecx
push edx
push eax
call sub_420fc0
add esp 0xc
push [ esp + 0x20 ]
call j_sub_422ed5#3
mov eax [ esp + 0x44 ]
add esp 0x4
cmp edi eax
jge r-xdata
mov eax [ r--data ]
push [ esp + 0x14 ]
cmp eax j_sub_422ed5#2
jne r-xdata
push esi
lea ecx [ esp + 0x30 ]
call sub_408087
mov ebx [ esp + 0x38 ]
mov eax [ esp + 0x2c ]
jmp r-xdata
dec eax
push 0x4
mov [ ebx ] eax
call sub_420f36
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
call eax
jmp r-xdata
call sub_422ed5
mov [ esp + 0x30 ] esi
add esi esi
push esi
push [ esp + 0x18 ]
push eax
call sub_420fc0
mov eax [ esp + 0x38 ]
add esp 0xc
xor ecx ecx
mov [ esi + eax ] cx
xor ebx ebx
jmp r-xdata
mov [ ebx ] 0x1
mov esi [ esp + 0x28 ]
add esp 0x4
lea eax [ esi + 0x1 ]
mov [ esp + 0x38 ] ebx
test eax eax
je r-xdata
mov eax 0x8
jmp r-xdata
add eax 0x7
and eax 0xfffffff8
xor ecx ecx
mov [ esp + 0x34 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
add esp 0x4
mov [ esp + 0x2c ] eax
sub_413633
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x5c
push ebx
push esi
push edi
mov edi ecx
lea ecx [ esp + 0x30 ]
call sub_415bfd
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov [ esp + 0x18 ] eax
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
and [ esp + 0x14 ] 0x0
cmp [ ebx + 0x8 ] 0x4
mov eax [ esi + 0x8 ]
mov [ esp + 0x1c ] eax
jae r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
mov [ esp + 0x14 ] eax
jmp r-xdata
push ecx
push [ esp + 0x1c ]
lea ecx [ esp + 0x38 ]
call sub_415c72
mov ebx [ esp + 0x10 ]
mov esi eax
push ebx
test esi esi
jne r-xdata
mov ecx [ ebp + 0xc ]
call sub_409b9c
mov ecx [ edi ]
push 0x0
push 0x2
mov ecx [ ecx + 0x4 ]
add ecx edi
call sub_456883
push 0x0
lea eax [ esi + 0x1 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
jmp r-xdata
lea ecx [ esp + 0x34 ]
call sub_415d24
push [ ebx + 0x4 ]
lea ecx [ esp + 0x24 ]
call sub_407b76
lea eax [ esp + 0x20 ]
push eax
push [ esp + 0x18 ]
lea ecx [ esp + 0x38 ]
push [ esp + 0x24 ]
call sub_4158c0
mov ecx [ ebp + 0xc ]
mov esi eax
lea eax [ esp + 0x20 ]
push eax
call sub_409b9c
mov eax [ edi ]
push 0x0
push esi
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
lea ecx [ esp + 0x20 ]
call sub_405a64
lea ecx [ esp + 0x30 ]
call sub_415c2e
lea ecx [ esp + 0x30 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_413723
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x64
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov [ esp + 0x38 ] ecx
push edi
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov eax [ eax ]
mov [ esp + 0x14 ] eax
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov edi [ eax + 0x4 ]
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov eax [ eax ]
mov [ esp + 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x40 ]
push edi
mov eax [ eax + 0x4 ]
mov [ esp + 0x1c ] eax
call sub_407b76
mov eax [ ebp + 0x8 ]
xor ebx ebx
xor esi esi
mov edx ebx
mov cl bl
mov [ esp + 0x34 ] edx
inc esi
mov [ esp + 0x13 ] cl
cmp [ eax + 0x8 ] 0x3
jb r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
mov edx eax
mov [ esp + 0x34 ] edx
test dl 0x2
je r-xdata
xor eax eax
test cl cl
mov ecx [ ebp + 0xc ]
sete al
mov [ esp + 0x28 ] eax
call sub_40942e
mov ecx [ esp + 0x28 ]
add ecx edi
mov [ esp + 0x38 ] eax
push ecx
push esi
push eax
call sub_4091b0
add esp 0xc
cmp [ esp + 0x13 ] bl
jne r-xdata
mov ecx edx
sub ecx ebx
je r-xdata
mov cl bl
jmp r-xdata
xor eax eax
inc eax
mov cl al
and edx eax
mov [ esp + 0x13 ] cl
mov [ esp + 0x34 ] edx
test edi edi
jle r-xdata
push ebx
push esi
lea eax [ esp + 0x58 ]
mov [ esp + 0x58 ] edi
push eax
push [ esp + 0x44 ]
mov [ esp + 0x68 ] ebx
mov [ esp + 0x6c ] esi
call sub_409040
add esp 0x10
lea ecx [ esp + 0x50 ]
call sub_409a20
mov esi ebx
mov ecx ebx
mov [ esp + 0x1c ] esi
mov [ esp + 0x38 ] ecx
test edi edi
jle r-xdata
dec ecx
jne r-xdata
lea ecx [ esp + 0x40 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
push ebx
push [ esp + 0x1c ]
lea ecx [ esp + 0x4c ]
call sub_4078ad
lea eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0x54 ]
call sub_4093ea
push [ esp + 0x28 ]
lea eax [ esp + 0x54 ]
push esi
push eax
push [ esp + 0x44 ]
call sub_409040
add esp 0x10
lea ecx [ esp + 0x50 ]
inc [ esp + 0x28 ]
call sub_409a20
inc ebx
cmp ebx edi
jl r-xdata
mov ecx [ ebp + 0xc ]
call sub_40942e
cmp [ esp + 0x13 ] 0x0
mov edi eax
je r-xdata
mov ebx [ esp + 0x14 ]
or [ esp + 0x1c ] 0xffffffff
jmp r-xdata
mov [ esp + 0x1c ] ebx
test edi edi
jle r-xdata
jmp r-xdata
push 0x2
push 0x1
push edi
call sub_4091b0
xor eax eax
mov [ esp + 0x64 ] ebx
inc eax
push ebx
push eax
mov [ esp + 0x64 ] eax
mov [ esp + 0x70 ] eax
lea eax [ esp + 0x64 ]
push eax
push edi
call sub_409040
add esp 0x1c
lea ecx [ esp + 0x50 ]
call sub_409a20
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x40 ]
push [ eax + 0x4 ]
push ebx
push [ esp + 0x1c ]
call sub_4078ad
lea eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0x64 ]
call sub_4093ea
xor eax eax
inc eax
push eax
push eax
xor eax eax
inc eax
push eax
push eax
push edi
call sub_4091b0
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov ecx [ ecx + 0x4 ]
mov esi [ ecx ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x40 ]
push [ eax + 0x4 ]
push ebx
push [ esp + 0x1c ]
call sub_4078ad
lea eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0x64 ]
call sub_4093ea
push ebx
push 0x1
jmp r-xdata
mov ecx [ esp + 0x38 ]
mov eax [ esp + 0x18 ]
inc ecx
mov [ esp + 0x38 ] ecx
cmp ecx edi
jl r-xdata
inc esi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov eax [ eax ]
mov [ esp + 0x14 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ esp + 0x1c ]
mov edi [ eax + 0x4 ]
mov esi [ esp + 0x14 ]
lea eax [ esp + 0x68 ]
push eax
push edi
call sub_409040
add esp 0x10
lea ecx [ esp + 0x60 ]
call sub_409a20
mov edx [ esp + 0x3c ]
xor eax eax
inc eax
sub eax [ esp + 0x1c ]
push ebx
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
jmp r-xdata
mov dx [ ebx + ecx * 2 ]
mov ecx [ esp + 0x20 ]
push eax
call sub_41fe36
pop ecx
test eax eax
je r-xdata
mov [ esp + 0x1c ] esi
xor ebx ebx
jmp r-xdata
mov ecx [ ebp + 0xc ]
inc esi
mov [ esp + 0x38 ] esi
call sub_40942e
cmp [ esp + 0x13 ] 0x0
je r-xdata
mov edi ebx
jmp r-xdata
mov eax [ esp + 0x18 ]
mov ecx edx
sub ecx esi
sar ecx 0x1
add ecx eax
sub edi ecx
js r-xdata
test esi esi
jle r-xdata
mov ecx eax
lea eax [ esi + 0x1 ]
push eax
xor esi esi
mov [ esp + 0x30 ] ecx
inc esi
push esi
push ecx
call sub_4091b0
mov eax [ esp + 0x44 ]
push ebx
mov [ esp + 0x60 ] eax
lea eax [ esp + 0x60 ]
push esi
push eax
push [ esp + 0x44 ]
mov [ esp + 0x74 ] ebx
mov [ esp + 0x78 ] esi
call sub_409040
add esp 0x1c
lea ecx [ esp + 0x50 ]
call sub_409a20
mov [ esp + 0x1c ] esi
jmp r-xdata
push esi
xor esi esi
mov [ esp + 0x30 ] eax
inc esi
push esi
push eax
call sub_4091b0
add esp 0xc
mov [ esp + 0x1c ] ebx
test edi edi
jg r-xdata
push eax
push [ esp + 0x24 ]
push edx
call sub_4237e2
mov ecx [ esp + 0x24 ]
add esp 0xc
mov esi [ esp + 0x38 ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x40 ]
mov [ esp + 0x28 ] ebx
mov [ esp + 0x30 ] ebx
call sub_407eec
cmp [ esp + 0x38 ] 0x0
jle r-xdata
mov eax [ esp + 0x34 ]
sub eax ebx
je r-xdata
mov eax [ esp + 0x20 ]
mov ecx esi
push edi
mov dx [ eax ]
call sub_41fe36
mov edx eax
mov [ esp + 0x3c ] edx
pop ecx
test edx edx
je r-xdata
dec ecx
add esi 0x2
add edi ecx
jmp r-xdata
inc [ esp + 0x1c ]
lea esi [ esi + ecx * 2 ]
mov ecx [ esp + 0x30 ]
mov eax [ esp + 0x14 ]
push [ esp + 0x18 ]
movzx eax [ eax + ecx * 2 ]
mov ecx [ esp + 0x24 ]
mov edx eax
mov [ esp + 0x40 ] eax
call sub_41fe36
pop ecx
test eax eax
jne r-xdata
dec eax
jne r-xdata
lea eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0x64 ]
call sub_4093ea
push [ esp + 0x1c ]
lea eax [ esp + 0x64 ]
push esi
push eax
push [ esp + 0x38 ]
call sub_409040
add esp 0x10
lea ecx [ esp + 0x60 ]
inc [ esp + 0x1c ]
call sub_409a20
lea ecx [ esp + 0x40 ]
call sub_407eec
inc [ esp + 0x28 ]
cmp [ esp + 0x30 ] edi
je r-xdata
mov eax [ esp + 0x28 ]
cmp eax [ esp + 0x38 ]
jl r-xdata
mov eax [ esp + 0x14 ]
mov [ esp + 0x3c ] eax
push [ esp + 0x3c ]
lea ecx [ esp + 0x44 ]
call sub_407a84
jmp r-xdata
mov eax [ esp + 0x14 ]
lea edx [ eax + edi * 2 ]
mov eax [ esp + 0x18 ]
mov ecx edx
sub ecx [ esp + 0x14 ]
sar ecx 0x1
add ecx eax
sub edi ecx
js r-xdata
inc [ esp + 0x30 ]
jmp r-xdata
mov ecx [ esp + 0x3c ]
mov eax edx
sub eax ecx
sar eax 0x1
push eax
push ebx
push ecx
lea ecx [ esp + 0x4c ]
call sub_4078ad
lea eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0x54 ]
call sub_4093ea
push [ esp + 0x1c ]
lea eax [ esp + 0x54 ]
push esi
push eax
push [ esp + 0x38 ]
call sub_409040
add esp 0x10
lea ecx [ esp + 0x50 ]
inc [ esp + 0x1c ]
call sub_409a20
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x24 ]
inc [ esp + 0x28 ]
lea eax [ ecx + eax * 2 ]
mov [ esp + 0x14 ] eax
add eax edi
lea edx [ edx + eax * 2 ]
jmp r-xdata
push eax
push [ esp + 0x24 ]
push edx
call sub_4237e2
add esp 0xc
test eax eax
jne r-xdata
mov [ esp + 0x24 ] edx
jmp r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x18 ]
add eax 0x2
dec ecx
mov [ esp + 0x14 ] eax
add edi ecx
jmp r-xdata
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
push edi
mov dx [ ecx ]
mov ecx eax
call sub_41fe36
mov edx eax
mov [ esp + 0x28 ] edx
pop ecx
test edx edx
je r-xdata
sub_4139ef
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov ebx [ eax + 0x4 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov edi eax
test edi edi
js r-xdata
xor edi edi
jmp r-xdata
cmp edi ebx
jg r-xdata
mov edi ebx
jmp r-xdata
sub ebx edi
lea ecx [ ebp - 0x10 ]
push ebx
call sub_407b76
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push ebx
push edi
push [ esi + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4079ab
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_409b9c
lea ecx [ ebp - 0x10 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_413a70
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
push esi
push edi
push eax
mov edi ecx
call [ QueryPerformanceCounter@IAT ]
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
fldz
fstp [ esi ]
mov [ esi + 0xc ] 0x3
mov eax [ edi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
mov eax [ ebp + 0x8 ]
fild [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
call sub_409cf8
fsubr [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
call sub_420732
fdivr [ ebp - 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_413ad6
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x8 ]
push esi
push edi
push eax
mov edi ecx
call [ QueryPerformanceCounter@IAT ]
mov esi [ ebp + 0xc ]
mov ecx esi
test eax eax
je r-xdata
call sub_409a20
fldz
fstp [ esi ]
mov [ esi + 0xc ] 0x3
mov eax [ edi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
fild [ ebp - 0x8 ]
fstp [ ebp - 0x10 ]
call sub_409a20
fld [ ebp - 0x10 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_413b18
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] edi
mov esi [ ecx ]
cmp [ esi + 0xc ] 0x6
jne r-xdata
cmp [ esi + 0xc ] 0x5
jne r-xdata
mov esi [ esi ]
cmp [ esi + 0xc ] 0xf
jne r-xdata
xor ebx ebx
inc ebx
cmp [ eax + 0x8 ] ebx
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
xor ebx ebx
inc ebx
mov [ esi + 0xc ] ebx
mov eax [ edi ]
push 0x0
push ebx
mov ecx [ eax + 0x4 ]
add ecx edi
jmp r-xdata
mov eax [ esi ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov eax [ eax + 0x10 ]
mov edi [ eax + 0x8 ]
call sub_409a20
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
push ebx
call sub_408e6b
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] ebx
call sub_456883
jmp r-xdata
mov [ esi ] edi
mov esi [ esi ]
call sub_409c9c
push eax
mov ecx esi
call sub_408e6b
mov edi [ ebp + 0xc ]
mov esi eax
mov ecx edi
call sub_409a20
mov ecx edi
mov [ edi + 0xc ] ebx
mov [ edi ] esi
call sub_409c9c
test eax eax
jne r-xdata
mov ecx [ ecx ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
push eax
push 0x2
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
sub_413b6e
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov edi ecx
call sub_40b9ad
xor ebx ebx
mov ecx edi
inc ebx
push ebx
call sub_40b93d
test eax eax
jle r-xdata
jns r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
mov ecx [ edi + 0x1f0 ]
push 0x0
push [ esi + 0x8 ]
call sub_4161c3
test al al
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] ebx
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_413bc0
push ebp
mov ebp esp
push ecx
add ecx 0xffffffe4
push ebx
push esi
push edi
mov esi [ ecx ]
xor edi edi
dec esi
mov [ ebp - 0x4 ] ecx
js r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ esi + edi ]
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
push ebx
call sub_418fd0
push [ eax ]
push [ ebp + 0x8 ]
call sub_4236cc
pop ecx
pop ecx
test eax eax
js r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea esi [ ebx - 0x1 ]
jmp r-xdata
jle r-xdata
mov ecx [ ebp - 0x4 ]
cmp edi esi
jle r-xdata
cmp edi esi
jg r-xdata
lea edi [ ebx + 0x1 ]
mov eax ebx
sub_413c19
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov eax [ edi ]
lea ecx [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_41fee8
mov esi [ ebp + 0x8 ]
lea ecx [ edi + 0x1d0 ]
lea eax [ esi + 0x8 ]
push eax
call sub_409e9c
lea eax [ esi + 0x18 ]
push eax
lea ecx [ edi + 0x1e0 ]
call sub_4081a7
mov eax [ esi + 0x28 ]
lea ecx [ edi + 0x1f0 ]
mov [ edi + 0x98 ] eax
mov eax [ esi + 0x2c ]
mov [ edi + 0x2f0 ] eax
push [ esi + 0x30 ]
call sub_415f57
mov eax [ esi + 0x34 ]
lea ecx [ edi + 0x42c ]
mov [ edi + 0x2f8 ] eax
lea eax [ esi + 0x38 ]
push eax
call sub_4081a7
cmp [ edi + 0xf8 ] 0x1
mov eax [ esi + 0x48 ]
mov [ edi + 0x43c ] eax
mov eax [ esi + 0x4c ]
mov [ edi + 0x440 ] eax
mov eax [ esi + 0x50 ]
mov [ edi + 0x448 ] eax
je r-xdata
mov eax [ esi ]
push ecx
mov ecx esi
mov [ edi + 0xf4 ] eax
call sub_420c82
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x54 ]
mov [ edi + 0xf8 ] eax
sub_413ccb
push ebp
mov ebp esp
sub esp 0x38
push esi
push edi
push 0x58
mov edi ecx
call sub_420f36
pop ecx
test eax eax
je r-xdata
xor esi esi
jmp r-xdata
mov ecx eax
call sub_420cf7
mov esi eax
mov eax [ edi + 0xf4 ]
lea ecx [ esi + 0x8 ]
mov [ esi ] eax
lea eax [ edi + 0x1d0 ]
push eax
call sub_409e9c
lea eax [ edi + 0x1e0 ]
push eax
lea ecx [ esi + 0x18 ]
call sub_4081a7
mov eax [ edi + 0x98 ]
lea ecx [ esi + 0x38 ]
mov [ esi + 0x28 ] eax
mov eax [ edi + 0x2f0 ]
mov [ esi + 0x2c ] eax
mov eax [ edi + 0x1f0 ]
mov eax [ eax ]
mov [ esi + 0x30 ] eax
mov eax [ edi + 0x2f8 ]
mov [ esi + 0x34 ] eax
lea eax [ edi + 0x42c ]
push eax
call sub_4081a7
mov eax [ edi + 0x43c ]
lea ecx [ ebp - 0x38 ]
mov [ esi + 0x48 ] eax
mov eax [ edi + 0x440 ]
mov [ esi + 0x4c ] eax
mov eax [ edi + 0x448 ]
mov [ esi + 0x50 ] eax
mov eax [ edi + 0xf8 ]
mov [ esi + 0x54 ] eax
call sub_41ffbf
push eax
mov eax [ edi ]
lea ecx [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_41ff1e
lea ecx [ ebp - 0x18 ]
call sub_409a20
lea ecx [ ebp - 0x38 ]
call sub_409a20
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_413da4
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov dl bl
pop esi
xor eax eax
pop ebx
pop ecx
pop ebp
retn 0x4
dec ecx
mov [ rw-data ] ecx
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x8 ] bx
jne r-xdata
test dl dl
je r-xdata
cmp [ eax ] 0x21
je r-xdata
mov eax [ esi ]
push eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
call sub_4071c8
test eax eax
je r-xdata
mov dl 0x1
jmp r-xdata
sub_413dea
push ebp
mov ebp esp
sub esp 0x68
push ebx
push esi
push edi
lea ecx [ ebp - 0x64 ]
call sub_4077c7
xor eax eax
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x2c ] eax
or edi 0xffffffff
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] edi
mov eax [ eax ]
dec eax
mov [ ebp - 0x20 ] eax
call sub_4077c7
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push 0x48
pop ecx
mov edx [ ebx + 0x4 ]
mov eax [ esi ]
mov [ ebp - 0x1c ] 0x7f
mov eax [ edx + eax * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax cx
je r-xdata
inc [ esi ]
mov ecx [ esi ]
mov eax [ ebx + 0x4 ]
push 0x7f
mov eax [ eax + ecx * 4 ]
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
mov [ ebp - 0x14 ] 0x40
push 0xffffffff
push 0x72
mov ebx [ ebp + 0x14 ]
push ebx
call sub_413da4
test eax eax
js r-xdata
mov ecx [ esi ]
mov eax [ edx + ecx * 4 ]
mov eax [ eax ]
cmp eax 0x24
jne r-xdata
mov eax [ esi ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
or [ ebp - 0x18 ] 0xffffffff
jmp r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x64 ]
call sub_4081a7
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebx ]
dec eax
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x50 ] eax
cmp edi 0xffffffff
jne r-xdata
cmp eax 0x1e
jne r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
mov ecx [ esi ]
push [ eax ]
lea ecx [ ebp - 0x40 ]
call sub_4081a7
mov eax [ ebp - 0x28 ]
xor edi edi
test eax eax
je r-xdata
lea ecx [ ebp - 0x40 ]
call sub_405a64
lea ecx [ ebp - 0x30 ]
call sub_404024
lea ecx [ ebp - 0x64 ]
call sub_405a64
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0x18 ]
mov ecx rw-data
mov [ ebp - 0x44 ] al
lea eax [ ebp - 0x64 ]
push eax
mov [ ebp - 0x4c ] edi
call sub_4083a8
mov edi eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
lea eax [ ecx + 0x1 ]
xor ecx ecx
mov [ esi ] eax
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] cx
je r-xdata
mov ecx rw-data
call sub_469ed4
jmp r-xdata
cmp edi eax
jne r-xdata
mov esi [ ebp - 0x2c ]
mov ebx eax
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0xab
jmp r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_403f84
inc [ esi ]
mov ecx [ esi ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x41
jne r-xdata
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x28 ]
inc edi
cmp edi ebx
jb r-xdata
mov edi [ ebp - 0x10 ]
cmp edi 0xffffffff
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov ecx [ esi + edi * 4 ]
lea edx [ ebp - 0x40 ]
call sub_415ee9
test al al
jne r-xdata
push 0xffffffff
jmp r-xdata
mov eax [ ebp - 0xc ]
lea eax [ ecx + 0x1 ]
xor ecx ecx
push 0x69
jmp r-xdata
push 0x48
pop ebx
cmp ax bx
mov ebx [ ebp + 0x8 ]
jne r-xdata
inc ecx
push 0x48
pop edi
mov [ esi ] ecx
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] di
mov edi [ ebp - 0x10 ]
je r-xdata
inc ecx
jmp r-xdata
push 0x48
pop ebx
cmp ax bx
mov ebx [ ebp + 0x8 ]
je r-xdata
cmp ax [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x91
jmp r-xdata
mov eax [ esi ]
push 0x48
pop ecx
mov eax [ edx + eax * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax cx
jne r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
dec ecx
js r-xdata
cmp ax [ ebp - 0x14 ]
je r-xdata
jmp r-xdata
mov [ ebp - 0x5 ] 0x0
test ax ax
je r-xdata
mov edi eax
mov [ esi ] eax
mov eax [ edx + edi * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x47
je r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
cmp edi 0xffffffff
jne r-xdata
jmp r-xdata
test ecx ecx
jne r-xdata
cmp ax [ ebp - 0x1c ]
je r-xdata
mov ecx [ esi ]
inc eax
mov [ ebp - 0xc ] eax
mov eax [ edx + ecx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax [ ebp - 0x14 ]
jne r-xdata
mov edi eax
mov [ ebp - 0x10 ] edi
jmp r-xdata
sub_414047
push ebp
mov ebp esp
sub esp 0x1c
lea ecx [ ebp - 0x1c ]
push ebx
push esi
push edi
call sub_4077c7
xor edx edx
inc edx
mov ecx rw-data
call sub_408238
xor eax eax
mov esi eax
lea ecx [ edx - 0x1 ]
mov edi esi
mov [ rw-data ] ecx
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
cmp [ eax + 0x8 ] si
jne r-xdata
push edx
inc edx
mov [ ebp - 0x8 ] edx
call sub_4071c8
mov ebx eax
test ebx ebx
je r-xdata
cmp [ eax ] 0x20
je r-xdata
cmp [ eax ] 0x2b
je r-xdata
cmp [ eax ] 0x2b
jne r-xdata
xor edi edi
mov [ ebp - 0x4 ] 0x1
inc edi
jmp r-xdata
xor eax eax
mov [ ebp - 0x4 ] al
mov eax [ ecx + edi * 4 + 0x4 ]
or esi 0xffffffff
cmp [ eax + 0x8 ] 0x34
jne r-xdata
push esi
push 0x69
jmp r-xdata
push [ eax ]
lea ecx [ ebp - 0x1c ]
call sub_4081a7
sub esp 0x10
mov ecx esp
push [ ebp - 0x1c ]
call sub_407f41
mov ecx rw-data
call sub_4082e0
test eax eax
jne r-xdata
mov ecx rw-data
call sub_469ed4
jmp r-xdata
push esi
push 0x84
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + edi * 4 + 0x8 ]
cmp [ eax + 0x8 ] 0x47
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_405a64
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
add edi 0x3
push eax
lea eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] edi
push eax
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_413dea
test eax eax
js r-xdata
mov edx [ ebp - 0x8 ]
jmp r-xdata
xor esi esi
sub_414140
push ebp
mov ebp esp
sub esp 0x11c
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x30 ] 0x0
lea eax [ esi + esi ]
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x11c ] eax
add eax ebx
mov [ ebp - 0x110 ] eax
mov [ ebp - 0x4 ] eax
add eax 0xfffffffe
mov [ ebp - 0x104 ] 0x0
mov [ ebp - 0x10c ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x114 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x108 ] 0x0
mov [ ebp - 0x118 ] eax
test edi edi
je r-xdata
test edx edx
mov edx [ ebp + 0xc ]
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
test ecx 0xe20f5a6f
jne r-xdata
test ebx ebx
jne r-xdata
mov eax 0xfffffffd
jmp r-xdata
test edi edi
je r-xdata
cmp edx 0xfffffc19
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0xfffffffe
jmp r-xdata
test ebx ebx
je r-xdata
cmp esi edx
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov eax [ ebp + 0x1c ]
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
xor edx edx
xor ecx ecx
call sub_4149c0
add esp 0x14
jmp r-xdata
test eax eax
jg r-xdata
test eax eax
js r-xdata
jmp r-xdata
mov eax 0xfffffff1
jmp r-xdata
test edx edx
js r-xdata
mov eax 0xffffffe0
jmp r-xdata
test esi esi
js r-xdata
mov eax 0xffffffe8
jmp r-xdata
cmp esi edx
jg r-xdata
mov eax [ edi ]
cmp eax 0x50435245
jne r-xdata
sub eax 0x45524350
neg eax
sbb eax eax
and eax 0x19
add eax 0xffffffe3
jmp r-xdata
test [ edi + 0xc ] 0x2
je r-xdata
mov eax 0xffffffe4
jmp r-xdata
mov ebx [ edi + 0x8 ]
test ebx 0x800
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xb0 ] eax
test ecx 0x8000000
jne r-xdata
mov eax 0x2
jmp r-xdata
test ecx 0x8000
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
mov [ ebp - 0x74 ] eax
je r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
movzx eax [ edi + 0x22 ]
mov esi [ edi + 0x30 ]
movzx edx [ edi + 0x24 ]
mov [ ebp - 0xc ] esi
mov esi [ ebp - 0x10 ]
lea eax [ edi + eax * 2 ]
mov [ ebp - 0xd0 ] eax
test esi esi
movzx eax [ edi + 0x26 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0xe0 ] eax
mov eax 0x989680
mov ecx eax
mov [ ebp - 0xdc ] edx
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0xfc ] eax
mov [ ebp - 0xf8 ] ecx
mov [ ebp - 0x54 ] 0x0
je r-xdata
test ecx 0x2000
je r-xdata
test [ edi + 0xc ] 0x2000
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx ]
test cl 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_48ecb1
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x10 ] eax
jae r-xdata
test [ edi + 0xc ] 0x4000
jne r-xdata
test cl 0x2
jne r-xdata
mov esi [ ebp - 0x10 ]
mov esi [ esi + 0x4 ]
mov [ ebp - 0x3c ] esi
mov esi [ ebp + 0x10 ]
test esi esi
jle r-xdata
cmp [ ebp + 0x1c ] 0x2
jl r-xdata
mov eax [ edi + 0x10 ]
mov [ ebp - 0xfc ] eax
jmp r-xdata
mov eax [ edi + 0x14 ]
cmp eax ecx
jae r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xfc ] eax
jmp r-xdata
test cl 0x10
jne r-xdata
cmp esi [ ebp + 0xc ]
jge r-xdata
cmp eax 0x1
jg r-xdata
mov edx [ ebp + 0x18 ]
mov ecx [ ebp - 0x1c ]
mov [ edx ] ecx
mov [ edx + 0x4 ] eax
mov [ ebp - 0xf8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov eax ebx
or eax ecx
test al 0x10
jne r-xdata
mov [ ebp - 0xc ] r--data
mov esi [ ebp - 0x10 ]
mov esi [ esi + 0x14 ]
mov [ ebp - 0xf8 ] esi
mov esi [ ebp + 0x10 ]
jmp r-xdata
test cl 0x4
jne r-xdata
mov eax [ ebp - 0x110 ]
mov ecx 0xfc00
mov ax [ eax ]
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
mov eax 0xfffffff6
jmp r-xdata
cmp [ ebp - 0x74 ] 0x1
mov eax 0xffffffe7
jg r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0xfc ]
jmp r-xdata
test cl 0x8
jne r-xdata
mov eax 0xfffffff5
jmp r-xdata
test [ edi + 0xc ] 0x100
jne r-xdata
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
mov [ ebp - 0x24 ] 0x0
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0x10 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov ecx [ ebp - 0xf8 ]
test ebx 0x40000
jne r-xdata
mov [ ebp - 0x34 ] 0x1
jmp r-xdata
mov [ ebp - 0x34 ] 0x0
movzx eax [ edi + 0x26 ]
imul edx eax
movzx eax [ edi + 0x22 ]
mov [ ebp - 0x68 ] esi
add edx eax
lea eax [ edi + edx * 2 ]
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x88 ] edx
lea eax [ edx + eax * 2 ]
mov [ ebp - 0x84 ] eax
mov [ ebp + 0x10 ] eax
test bl 0x20
jne r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
mov [ ebp - 0xa4 ] eax
test ebx 0x20000000
jne r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
mov [ ebp - 0xa8 ] eax
test ebx 0x2000000
jne r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
mov [ ebp - 0xac ] eax
mov [ ebp - 0xd4 ] 0x0
test cl cl
js r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
mov [ ebp - 0xb8 ] eax
test ecx 0x100
jne r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
mov [ ebp - 0xb4 ] eax
test ecx 0x400
jne r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
mov [ ebp - 0xa0 ] eax
test ecx 0x10000000
jne r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
mov esi [ edi + 0xc ]
mov [ ebp - 0x9c ] eax
mov [ ebp - 0x98 ] 0x0
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x50 ] 0x0
mov [ ebp - 0x58 ] 0x0
test esi 0x1000
jne r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
mov [ ebp - 0x90 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0xc4 ] eax
lea edx [ eax + 0x100 ]
add eax 0x340
mov [ ebp - 0xbc ] eax
mov eax ecx
mov [ ebp - 0xc0 ] edx
and eax 0x1800000
jne r-xdata
cmp eax 0x800000
je r-xdata
test ebx 0x1800000
jne r-xdata
mov [ ebp - 0x94 ] 0x1
cmp eax 0x1000000
jne r-xdata
mov eax ebx
shr eax 0x17
and eax 0x1
mov [ ebp - 0x94 ] eax
jmp r-xdata
mov ebx ecx
jmp r-xdata
and ebx 0x700000
jne r-xdata
mov eax 0xffffffe9
jmp r-xdata
mov [ ebp - 0x94 ] 0x0
jmp r-xdata
test ecx 0x700000
jne r-xdata
cmp ebx 0x300000
ja r-xdata
mov [ ebp - 0xe8 ] 0x2
cmp ebx __dos_header
je r-xdata
je r-xdata
test esi 0x200
je r-xdata
mov eax 0x55555556
imul [ ebp + 0x1c ]
mov eax edx
shr eax 0x1f
add eax edx
lea ebx [ eax + eax * 2 ]
mov eax 0x55555556
lea ecx [ ebx + ebx ]
imul ecx
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x1c ] eax
movzx eax [ edi + 0x20 ]
test ax ax
jne r-xdata
mov ecx 0x1
mov [ ebp - 0xe8 ] ecx
jmp r-xdata
cmp ebx r--data
je r-xdata
xor ecx ecx
mov [ ebp - 0xe4 ] 0x2
mov [ ebp - 0xe8 ] ecx
mov [ ebp - 0xcc ] 0xa000d
jmp r-xdata
cmp ebx 0x100000
je r-xdata
mov eax 0xfffffff3
jmp r-xdata
mov ecx eax
mov eax 0x55555556
imul ebx
mov eax edx
shr eax 0x1f
add eax edx
cmp ecx eax
jl r-xdata
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xf4 ] esi
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
mov eax 0xd
cmp ebx 0x200000
jne r-xdata
lea ebx [ ecx + 0x1 ]
lea ebx [ ebx + ebx * 2 ]
lea eax [ ebx * 4 ]
push eax
call [ r--data ]
mov esi eax
add esp 0x4
mov [ ebp - 0xf4 ] esi
test esi esi
jne r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
movzx eax [ edi + 0x1e ]
lea ecx [ esi + ebx * 4 ]
shl eax 0x2
mov edx ecx
sub edx eax
lea eax [ esi + 0x8 ]
cmp edx eax
jb r-xdata
mov eax 0xa
jmp r-xdata
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
lea eax [ esi - 0x6 ]
jmp r-xdata
mov edx [ ebp - 0xc0 ]
mov eax [ edi + 0xc ]
test al 0x10
jne r-xdata
mov edx eax
jmp r-xdata
sub ecx 0x4
cmp ecx edx
jae r-xdata
xor ecx ecx
mov [ ebp - 0xe4 ] 0x1
mov [ ebp - 0xe8 ] ecx
mov [ ebp - 0xcc ] ax
jmp r-xdata
lea ecx [ ebx + ebx ]
mov [ ebp - 0xf0 ] ebx
mov eax 0x55555556
mov [ ebp - 0x6c ] 0x0
imul ecx
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0xec ] eax
test esi esi
je r-xdata
mov eax [ edi + 0xc ]
test al 0x40
jne r-xdata
movzx esi [ edi + 0x18 ]
movzx ebx si
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10c ] ebx
test al 0x20
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov [ ecx ] 0xffffffff
sub ecx 0x4
cmp ecx edx
jae r-xdata
mov [ esi + 0x4 ] 0xffffffff
mov eax [ ebp - 0xf4 ]
mov [ eax ] 0xffffffff
movzx esi [ edi + 0x1a ]
movzx ebx si
mov [ ebp - 0x104 ] 0x1
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x114 ] ebx
test al al
jns r-xdata
mov ecx [ ebp - 0xe8 ]
mov eax [ ebp - 0x84 ]
mov edx [ ebp - 0x4 ]
lea ecx [ ecx ]
mov edx [ ebp - 0xc0 ]
mov eax 0xff
cmp si ax
ja r-xdata
mov eax [ ebp - 0x3c ]
test eax eax
je r-xdata
mov esi [ ebp - 0xf4 ]
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov esi edx
je r-xdata
mov eax ebx
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
movzx eax si
movzx esi [ eax + edx ]
mov [ ebp - 0x14 ] esi
test [ eax + 0x4 ] 0x1
mov edx [ ebp - 0xc0 ]
mov ecx [ ebp - 0x8 ]
jne r-xdata
mov eax 0xff
cmp si ax
ja r-xdata
cmp edx eax
jae r-xdata
cmp edx eax
jae r-xdata
mov edx [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x2c ] esi
jne r-xdata
cmp ebx 0x7f
jbe r-xdata
add eax 0x8
mov [ ebp - 0x38 ] eax
jmp r-xdata
test ecx ecx
je r-xdata
movzx eax si
movzx eax [ eax + edx ]
mov [ ebp - 0x18 ] eax
mov eax esi
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov edx [ ebp - 0xe4 ]
mov edx [ ebp - 0xe4 ]
mov [ ebp + 0x10 ] ebx
test esi esi
jne r-xdata
mov ecx [ ebp - 0x10c ]
mov edx [ ebp - 0x4 ]
cmp cx [ ebp - 0x14 ]
jne r-xdata
cmp [ ebp - 0x24 ] esi
jne r-xdata
movzx ecx bx
mov eax ecx
shr eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
cmp ebx 0x7f
jbe r-xdata
mov esi [ edi + 0x8 ]
or esi [ ebp + 0x14 ]
and esi 0x4000000
jne r-xdata
mov ecx [ ebp - 0x84 ]
lea eax [ edx + edx ]
sub ecx eax
cmp esi ecx
ja r-xdata
push 0x0
lea edx [ ebp - 0xe4 ]
push edx
mov edx ecx
mov ecx esi
push eax
call sub_415e9f
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x84 ]
lea eax [ edx + edx ]
sub ecx eax
cmp esi ecx
ja r-xdata
push [ ebp - 0x8 ]
lea edx [ ebp - 0xe4 ]
push edx
mov edx ecx
mov ecx esi
push eax
call sub_415e9f
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x100 ]
push 0x0
push 0x0
push eax
push 0x2
mov [ ebp - 0x80 ] edx
mov [ ebp - 0x78 ] edx
push edx
mov edx [ ebp - 0x8c ]
mov [ ebp - 0x100 ] 0x0
mov [ ebp - 0x64 ] 0x0
mov [ ebp - 0x70 ] 0x0
mov [ ebp - 0xd8 ] 0x0
call sub_4149c0
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp [ ebp - 0x98 ] 0x0
mov esi eax
jne r-xdata
cmp [ ebp - 0x74 ] esi
jne r-xdata
cmp edx eax
jae r-xdata
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x88 ]
add eax [ ebp - 0x11c ]
mov edx [ ebp - 0xe4 ]
cmp [ ebp - 0x4 ] eax
jbe r-xdata
mov edx [ ebp - 0x4 ]
cmp [ ebp - 0x38 ] esi
jne r-xdata
add eax ecx
movzx eax [ eax * 2 + r--data ]
mov ax [ eax * 8 + r--data ]
add ax bx
movzx eax ax
mov [ ebp - 0x14 ] eax
jmp r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx ecx bx
mov eax ecx
shr eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax [ ebp - 0x84 ]
add esi 0x2
cmp esi eax
jae r-xdata
mov ax [ esi ]
cmp ax [ ebp - 0xcc ]
jne r-xdata
mov ecx [ ebp - 0xe8 ]
mov edx [ ebp - 0xe4 ]
jmp r-xdata
add esi 0x2
cmp esi [ ebp + 0x10 ]
jae r-xdata
mov ax [ esi ]
cmp ax [ ebp - 0xcc ]
jne r-xdata
mov edx [ ebp - 0xe4 ]
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
test esi esi
jle r-xdata
mov ecx [ ebp - 0x3c ]
test ecx ecx
je r-xdata
movzx eax [ edx ]
cmp ax cx
je r-xdata
cmp [ edx ] cx
je r-xdata
cmp [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x10 ]
je r-xdata
cmp edx eax
jae r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
add eax ecx
movzx eax [ eax * 2 + r--data ]
mov ax [ eax * 8 + r--data ]
add ax bx
movzx eax ax
mov [ ebp - 0x18 ] eax
jmp r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
mov ecx [ ebp - 0xe8 ]
jmp r-xdata
cmp edx 0x1
je r-xdata
mov eax [ ebp - 0x84 ]
mov ecx [ ebp - 0xe8 ]
cmp esi eax
jae r-xdata
mov ax [ esi ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
cmp edx 0x1
je r-xdata
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x108 ] ecx
jmp r-xdata
je r-xdata
cmp esi 0x1
jne r-xdata
cmp [ ebp - 0x104 ] 0x0
jne r-xdata
test [ ecx + 0x4 ] 0x2
je r-xdata
cmp ax [ ebp - 0x14 ]
je r-xdata
add edx 0x2
mov [ ebp - 0x4 ] edx
cmp edx eax
jb r-xdata
cmp [ ebp - 0x4 ] eax
jae r-xdata
cmp [ ebp - 0x4 ] eax
jae r-xdata
movzx edx [ edx ]
cmp edx 0xff
ja r-xdata
test ecx ecx
je r-xdata
mov ax [ esi + 0x2 ]
cmp ax [ ebp - 0xca ]
je r-xdata
jmp r-xdata
add esi 0x2
mov ax [ esi + 0x2 ]
cmp ax [ ebp - 0xca ]
je r-xdata
cmp [ ebp - 0x8 ] 0x0
lea edx [ ecx + 0x2 ]
mov [ ebp - 0xd4 ] 0x0
mov [ ebp - 0xc ] edx
je r-xdata
lea eax [ esi + 0x3e4 ]
cmp eax 0x4
ja r-xdata
cmp esi 0xfffffc19
je r-xdata
cmp [ ebp - 0x30 ] 0x0
mov ebx [ ebp - 0x1c ]
jne r-xdata
mov eax ebx
sub eax edx
and eax 0xfffffffe
cmp eax 0x7d0
jge r-xdata
mov eax ebx
sub eax edx
sar eax 0x1
cmp eax [ ecx + 0x28 ]
jb r-xdata
add edx 0x2
mov [ ebp - 0x4 ] edx
cmp edx [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx - 0x2 ] 0xd
jne r-xdata
mov eax [ ebp - 0x88 ]
mov eax [ ebp - 0x88 ]
test ecx ecx
je r-xdata
mov edx 0xff
jmp r-xdata
mov ecx edx
mov eax 0x1
and ecx 0x7
shr edx 0x3
shl eax cl
mov ecx [ ebp - 0x38 ]
test [ edx + ecx ] al
mov edx [ ebp - 0x4 ]
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xe8 ]
xor esi esi
mov eax [ ebp - 0x84 ]
cmp [ ebp - 0x34 ] esi
je r-xdata
cmp edx ebx
jae r-xdata
jmp [ eax * 4 + jump_table_44811a ]
jmp r-xdata
cmp ebx 0x4
jl r-xdata
test [ ebp - 0x6c ] 0x10000
mov esi [ ebp - 0x70 ]
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
xor esi esi
jmp r-xdata
cmp ecx 0x1
je r-xdata
add edx edx
add eax edx
cmp [ ebp - 0x4 ] eax
jb r-xdata
cmp [ ebp - 0x4 ] eax
jbe r-xdata
add edx edx
add eax edx
cmp [ ebp - 0x4 ] eax
jb r-xdata
cmp [ ebp - 0x4 ] eax
jbe r-xdata
add edx 0x2
mov [ ebp - 0x4 ] edx
cmp edx [ ebp + 0x10 ]
jb r-xdata
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x20 ] esi
jne r-xdata
test ecx ecx
je r-xdata
mov ax [ edx ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
mov eax [ ebp - 0xd8 ]
mov edx ecx
mov [ ebp - 0xd4 ] eax
jmp r-xdata
mov edx [ ebp - 0x80 ]
mov [ ebp - 0xc ] edx
cmp edx ecx
ja r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
cmp [ ebp - 0x70 ] ebx
jle r-xdata
lea eax [ ebx * 4 - 0x8 ]
push eax
mov eax [ ebp - 0xf4 ]
add eax 0x8
push eax
mov eax [ ebp + 0x18 ]
add eax 0x8
push eax
call sub_420fc0
add esp 0xc
cmp esi ebx
jl r-xdata
mov eax esi
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
xor eax eax
jmp r-xdata
mov eax 0x1
push [ ebp - 0xf4 ]
call [ r--data ]
add esp 0x4
jmp r-xdata
test esi esi
jne r-xdata
cmp edx eax
jae r-xdata
cmp ecx 0x2
jne r-xdata
mov eax [ ebp - 0x88 ]
mov ecx [ ebp - 0x4 ]
sub ecx edx
mov ax [ ecx ]
cmp ax [ ebp - 0xcc ]
jne r-xdata
add [ ebp - 0x4 ] 0x2
mov edx [ ebp + 0x10 ]
cmp [ ebp - 0x4 ] edx
mov edx [ ebp - 0xe4 ]
jb r-xdata
push 0x0
lea edx [ ebp - 0xe4 ]
push edx
mov edx ecx
mov ecx [ ebp - 0x4 ]
push eax
call sub_48e77e
mov ecx [ ebp - 0xe8 ]
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xe4 ]
add eax 0x2
mov [ ebp - 0x4 ] eax
cmp eax [ ebp + 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx edx
mov ax [ ecx ]
cmp ax [ ebp - 0xcc ]
jne r-xdata
push [ ebp - 0x8 ]
lea edx [ ebp - 0xe4 ]
push edx
mov edx ecx
mov ecx [ ebp - 0x4 ]
push eax
call sub_48e77e
mov ecx [ ebp - 0xe8 ]
add esp 0xc
test eax eax
je r-xdata
jmp r-xdata
cmp edx ebx
ja r-xdata
mov ecx [ ebp - 0xe4 ]
add ecx ecx
sub eax ecx
mov ecx [ ebp - 0x4 ]
cmp ecx eax
ja r-xdata
cmp [ ebp - 0x4 ] eax
jae r-xdata
add edx 0x2
mov [ ebp - 0xc ] edx
push [ ebp - 0xf4 ]
call [ r--data ]
add esp 0x4
jmp r-xdata
or [ ebp - 0x6c ] 0x10000
xor ecx ecx
jmp r-xdata
test ebx ebx
je r-xdata
cmp [ ebp + 0x1c ] 0x2
jl r-xdata
lea ecx [ edx + eax * 2 ]
cmp ecx [ ebp - 0x118 ]
jbe r-xdata
mov esi [ ebp - 0x114 ]
mov eax [ ebp - 0x18 ]
cmp si ax
jne r-xdata
cmp esi 0xfffffff4
je r-xdata
mov esi [ ebp - 0x108 ]
test esi esi
jne r-xdata
cmp [ edx ] 0xa
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0xe8 ]
cmp [ ebp - 0xe4 ] 0x1
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ax [ eax ]
mov [ ebp - 0xc ] 0xfc00
and ax [ ebp - 0xc ]
mov [ ebp - 0xc ] 0xdc00
cmp ax [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebp - 0xe8 ]
cmp [ ebp - 0xe4 ] 0x1
je r-xdata
jmp r-xdata
cmp edx [ ebp - 0x110 ]
jbe r-xdata
mov ecx [ ebp - 0xe8 ]
mov eax [ ebp - 0x84 ]
mov ax [ ecx ]
cmp ax [ ebp - 0xcc ]
jne r-xdata
push [ ebp - 0x8 ]
lea edx [ ebp - 0xe4 ]
push edx
mov edx ecx
mov ecx [ ebp - 0x4 ]
push eax
call sub_415e9f
add esp 0xc
test eax eax
jne r-xdata
movzx edi [ edi + 0x1e ]
mov eax esi
mov ebx [ ebp + 0x18 ]
cdq
sub eax edx
sar eax 0x1
cmp eax edi
jle r-xdata
mov eax [ ebp + 0x1c ]
lea edi [ edi * 2 + 0x2 ]
cmp edi eax
jle r-xdata
xor ecx ecx
jmp r-xdata
mov eax [ ebp - 0x80 ]
sub eax [ ebp - 0x88 ]
sar eax 0x1
mov [ ebx ] eax
mov eax [ ebp - 0x7c ]
sub eax [ ebp - 0x88 ]
sar eax 0x1
mov [ ebx + 0x4 ] eax
cmp ecx ebx
jae r-xdata
cmp ecx ebx
jae r-xdata
mov eax esi
jmp r-xdata
mov ecx [ ebp + 0x1c ]
cmp ecx 0x1
jle r-xdata
or eax 0xffffffff
add edx 0x2
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov ecx [ ebp - 0xe8 ]
mov ax [ ecx + 0x2 ]
cmp ax [ ebp - 0xca ]
je r-xdata
mov ecx [ ebp - 0xe8 ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
add eax 0x2
mov [ ebp - 0x4 ] eax
mov ax [ ecx + 0x2 ]
mov ecx [ ebp - 0xe8 ]
cmp ax [ ebp - 0xca ]
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx - 0x2 ] 0xd
jne r-xdata
cmp [ ebp - 0xe4 ] 0x1
je r-xdata
mov edx [ ebp - 0xc ]
jmp r-xdata
lea eax [ ebx + edi * 4 ]
xor edi edi
mov edx eax
lea esi [ ebx + esi * 4 ]
sub edx esi
add edx 0x3
shr edx 0x2
cmp eax esi
sbb eax eax
not eax
and eax edx
jbe r-xdata
mov edi eax
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
mov eax ecx
test [ eax ] 0x20
jne r-xdata
movzx esi si
mov ax [ ecx ]
add ecx 0x2
cmp ax si
je r-xdata
mov eax 0xfffffff4
jmp r-xdata
mov edx [ ebp + 0x8 ]
sub ebx edx
mov edi [ ebp - 0x28 ]
mov eax [ ebp + 0x18 ]
sub edi edx
sar edi 0x1
sar ebx 0x1
mov [ eax ] edi
mov [ eax + 0x4 ] ebx
cmp ecx 0x2
jle r-xdata
test [ ecx ] 0x20
je r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
mov ebx [ ebp + 0x10 ]
jne r-xdata
cmp edx ebx
jae r-xdata
mov ax [ ecx + 0x2 ]
cmp ax [ ebp - 0xca ]
je r-xdata
inc edi
mov [ esi ] 0xffffffff
lea esi [ esi + 0x4 ]
cmp edi eax
jb r-xdata
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x50 ]
mov [ edx ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
jmp r-xdata
movzx eax ax
cmp edx eax
je r-xdata
sub ecx 0x2
cmp ecx ebx
jae r-xdata
cmp ecx ebx
jb r-xdata
mov ecx [ ebp - 0x10 ]
test ecx ecx
je r-xdata
sub esi edx
sar esi 0x1
mov [ eax + 0x8 ] esi
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
jmp r-xdata
cmp ecx ebx
jae r-xdata
mov [ ebp - 0x118 ] ecx
jmp r-xdata
mov edx [ ecx + 0x18 ]
mov ecx [ ebp - 0x4c ]
mov [ edx ] ecx
jmp r-xdata
test [ edi + 0xc ] 0x800
jne r-xdata
mov eax [ ebp - 0x18 ]
jmp r-xdata
cmp ecx 0x1
je r-xdata
movzx edx [ ecx ]
add ecx 0x2
cmp edx esi
je r-xdata
add edx 0x2
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp ecx 0x2
je r-xdata
mov [ ebp - 0x50 ] esi
jmp r-xdata
cmp [ ebp - 0xe4 ] 0x2
jne r-xdata
sub_4149c0
push ebp
mov ebp esp
sub esp 0x150
push ebx
mov ebx edx
mov eax ecx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x8 ] eax
push esi
push edi
test ebx ebx
je r-xdata
cmp [ ebp + 0x18 ] 0x0
lea ecx [ ebp + 0x18 ]
jne r-xdata
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x38 ] 0x0
mov eax [ esi ]
mov ecx [ esi + 0x50 ]
mov [ ebp - 0x24 ] ecx
cmp eax [ esi + 0x4 ]
jae r-xdata
sub ecx eax
test ecx ecx
jle r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
push 0x0
xor edx edx
call sub_4149c0
add esp 0x14
jmp r-xdata
inc [ esi ]
mov eax 0xfffffff8
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ecx
jmp r-xdata
neg ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0xffffffeb
jmp r-xdata
cmp [ esi + 0x9c ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x5c ]
mov [ ebp + 0x14 ] eax
mov [ esi + 0x9c ] 0x0
jmp r-xdata
movzx ecx [ ebx ]
mov edi ecx
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x20 ] 0x0
cmp edi 0xa1
ja r-xdata
mov edx [ ebp - 0x8 ]
jmp r-xdata
mov eax 0xfffffffb
jmp r-xdata
movzx eax [ edi + lookup_table_415550 ]
jmp [ eax * 4 + jump_table_415404 ]
movzx eax [ ebx + 0x2 ]
mov edi ebx
add eax eax
mov ecx 0x88
sub edi eax
mov [ ebp - 0x1c ] edi
movzx eax [ edi ]
cmp ax cx
jae r-xdata
mov edx [ ebp - 0x8 ]
mov ebx [ ebp + 0x8 ]
cmp edx ebx
je r-xdata
cmp edi 0x88
jae r-xdata
mov edi [ esi + 0x7c ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x2c ] edi
cmp eax edi
jae r-xdata
movzx ecx [ ebx + 0x22 ]
lea eax [ ebx + 0x2 ]
add ebx 0x22
mov [ ebp - 0x28 ] eax
mov edx ecx
mov [ ebp - 0x30 ] ebx
mov eax edx
cmp eax 0x6d
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x7c ]
jae r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
movzx edx [ ebx + 0x4 ]
mov [ ebp - 0x2c ] edx
lea eax [ edx + edx ]
mov [ ebp - 0x14 ] eax
cmp eax [ esi + 0x14 ]
jge r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ edi - 0x55 ]
add ebx 0x2
test cl 0x1
je r-xdata
movzx eax [ ebx + 0x2 ]
cmp [ ebx + eax * 2 ] 0x77
lea ebx [ ebx + eax * 2 ]
je r-xdata
mov eax [ ebp + 0x18 ]
add ebx 0x2
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov edx ebx
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
add ebx 0x2
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov edi [ ebp - 0x24 ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
xor ecx ecx
jmp r-xdata
inc [ esi + 0x28 ]
mov eax [ esi + 0x28 ]
cmp eax [ esi + 0x2c ]
ja r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ esi + 0xb0 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
movzx eax [ ebx + 0x2 ]
add ebx 0x4
mov [ ebp - 0x28 ] eax
cmp [ ebx ] 0x76
jne r-xdata
movzx ecx [ ebx + 0x2 ]
mov eax [ esi + 0x94 ]
and eax 0xffff0000
mov [ ebp - 0x14 ] ecx
or eax ecx
lea edi [ ecx + ecx ]
mov [ esi + 0x94 ] eax
cmp edi [ esi + 0x14 ]
jl r-xdata
cmp [ esi + 0x9c ] 0x1
mov eax [ esi + 0xb0 ]
mov [ ebp - 0x14 ] eax
jne r-xdata
cmp [ esi + 0x9c ] 0x1
mov edi [ esi + 0xb0 ]
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ esi + 0x74 ]
movzx eax [ ebx + 0x2 ]
lea edi [ ecx + eax * 2 ]
mov [ ebp - 0x14 ] edi
cmp edi ecx
jne r-xdata
add ebx 0x2
mov [ ebp - 0x30 ] ebx
mov edx ebx
movzx edi [ ebx + 0x2 ]
add ebx 0x2
mov [ ebp - 0x28 ] 0x1
cmp edi 0x86
je r-xdata
mov [ ebp - 0x28 ] 0x0
cmp [ esi + 0x48 ] 0x0
mov eax [ ebp - 0x8 ]
je r-xdata
cmp [ esi + 0x48 ] 0x0
mov eax [ ebp - 0x8 ]
je r-xdata
mov ecx [ esi + 0x98 ]
mov eax [ esi + 0x78 ]
lea eax [ eax + ecx * 2 ]
cmp edx eax
jne r-xdata
mov eax [ ebp - 0x8 ]
add ebx 0x2
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x30 ] ebx
jmp r-xdata
mov ecx [ esi + 0x7c ]
mov eax [ ebp - 0x8 ]
cmp eax ecx
jae r-xdata
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x7c ]
jb r-xdata
mov ecx [ esi + 0x7c ]
mov eax [ ebp - 0x8 ]
cmp eax ecx
jae r-xdata
cmp [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x8 ]
je r-xdata
mov edx [ esi + 0x18 ]
mov ecx [ esi + 0x7c ]
test edx edx
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x7c ]
jae r-xdata
mov edx [ esi + 0x7c ]
mov eax [ ebp - 0x8 ]
cmp eax edx
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x7c ]
jae r-xdata
movzx ecx [ ebx + 0x2 ]
xor eax eax
cmp edi 0x74
sete al
imul ecx [ esi + 0x24 ]
mov [ ebp - 0x34 ] eax
movzx eax [ ebx + 0x4 ]
add ebx 0x6
mov [ ebp - 0x28 ] eax
mov eax [ esi + 0x30 ]
mov [ ebp - 0x30 ] ebx
lea eax [ eax + ecx * 2 ]
mov ecx [ esi + 0x54 ]
neg ecx
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x28 ]
sbb ecx ecx
xor edi edi
neg ecx
mov [ ebp - 0x10 ] edi
dec ecx
mov [ ebp - 0x1c ] ecx
test eax eax
jle r-xdata
xor eax eax
cmp edi 0x72
movzx edi [ ebx + 0x2 ]
sete al
add edi edi
add ebx 0x4
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x30 ] ebx
cmp edi [ ebp + 0xc ]
jge r-xdata
lea eax [ ebx + 0x4 ]
mov [ ebp - 0x2c ] eax
movzx eax [ ebx + 0x2 ]
movzx edi [ ebx + eax * 2 ]
lea ebx [ ebx + eax * 2 ]
mov ecx edi
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x14 ] ecx
lea eax [ ecx - 0x62 ]
cmp eax 0xb
ja r-xdata
movzx eax [ ebx + 0x2 ]
add ebx 0x4
mov edx [ ebp - 0x20 ]
mov ecx eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov [ ebp - 0x34 ] 0x1
xor eax eax
mov [ ebp - 0x10 ] eax
movzx eax [ ebx + 0x2 ]
mov [ ebp - 0x18 ] eax
cmp ecx 0x28
je r-xdata
mov ecx 0x1
xor ecx ecx
mov [ ebp - 0x18 ] 0x1
cmp edi 0x2e
mov ecx edi
sbb eax eax
add ebx 0x2
and eax 0xfffffff3
add eax 0x2e
sub ecx eax
movzx edx cl
and edx 0x1
mov [ ebp - 0x20 ] edx
movsx eax [ ecx + r--data ]
mov [ ebp - 0x10 ] eax
movsx eax [ ecx + r--data ]
mov [ ebp - 0x18 ] eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x7c ]
jae r-xdata
movzx eax [ ebx + 0x2 ]
add ebx 0x4
mov edx [ ebp - 0x20 ]
mov ecx eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] ecx
jmp r-xdata
movzx eax [ ebx + 0x2 ]
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] eax
cmp ecx 0x42
je r-xdata
mov ecx 0x1
xor ecx ecx
mov [ ebp - 0xc ] 0x1
movzx eax [ ebx + 0x2 ]
xor ecx ecx
mov [ ebp - 0xc ] eax
add ebx 0x4
cmp edi 0x48
mov ecx edi
sbb eax eax
add ebx 0x2
and eax 0xfffffff3
add eax 0x48
sub ecx eax
movzx edx cl
and edx 0x1
mov [ ebp - 0x20 ] edx
movsx eax [ ecx + r--data ]
mov [ ebp - 0x10 ] eax
movsx eax [ ecx + r--data ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
movzx edi [ ebx + 0x2 ]
mov eax 0x1
mov edx edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0xc ] edx
add ebx 0x4
mov [ ebp - 0x20 ] eax
jmp r-xdata
movzx edi [ ebx + 0x2 ]
xor eax eax
xor edx edx
mov [ ebp - 0x18 ] edi
cmp ecx 0x5c
mov [ ebp - 0xc ] edx
sete al
add ebx 0x4
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
xor edx edx
mov [ ebp - 0x34 ] 0x1
add ebx 0x2
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov edx 0x1
mov [ ebp - 0x34 ] 0x1
add ebx 0x2
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x20 ]
xor edx edx
mov [ ebp - 0x34 ] 0x1
add ebx 0x2
mov [ ebp - 0xc ] edx
mov [ ebp - 0x18 ] 0x1
jmp r-xdata
movzx ecx [ ebx + 0x2 ]
xor edx edx
mov eax [ ebp - 0x20 ]
add ebx 0x4
mov [ ebp - 0x34 ] 0x1
mov [ ebp - 0xc ] edx
mov [ ebp - 0x18 ] ecx
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov [ esi + 0xb4 ] eax
mov [ ebp - 0x14 ] eax
mov [ esi + 0xb0 ] 0x0
mov eax [ ebp + 0x18 ]
inc eax
push eax
movzx eax [ ebx ]
push [ ebp + 0x14 ]
push esi
movzx ecx [ eax + r--data ]
movzx eax [ ebx + 0x2 ]
push [ ebp + 0xc ]
add ecx eax
push [ ebp + 0x8 ]
lea edx [ ebx + ecx * 2 ]
mov ebx [ ebp - 0x8 ]
mov ecx ebx
call sub_4149c0
mov edi eax
add esp 0x14
cmp edi 0x1
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
movzx eax [ ebx ]
push esi
push [ ebp + 0xc ]
movzx eax [ eax + r--data ]
push [ ebp + 0x8 ]
lea edx [ ebx + eax * 2 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
movzx eax [ ebx ]
push esi
push [ ebp + 0xc ]
movzx eax [ eax + r--data ]
push [ ebp + 0x8 ]
lea edx [ ebx + eax * 2 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
lea edi [ ebx + 0x4 ]
mov [ esi + 0xb4 ] edi
mov [ esi + 0xb0 ] 0x0
mov eax [ ebp + 0x18 ]
inc eax
push eax
movzx eax [ ebx ]
push [ ebp + 0x14 ]
push esi
movzx ecx [ eax + r--data ]
movzx eax [ ebx + 0x2 ]
push [ ebp + 0xc ]
add ecx eax
push [ ebp + 0x8 ]
lea edx [ ebx + ecx * 2 ]
mov ecx [ ebp - 0x8 ]
call sub_4149c0
add esp 0x14
cmp eax 0x1
je r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
movzx eax [ ebx ]
push [ ebp + 0x14 ]
push esi
movzx eax [ eax + r--data ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea edx [ ebx + eax * 2 ]
mov ebx [ ebp - 0x8 ]
mov ecx ebx
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
movzx eax [ ebx ]
push esi
push [ ebp + 0xc ]
movzx eax [ eax + r--data ]
push [ ebp + 0x8 ]
lea edx [ ebx + eax * 2 ]
call sub_4149c0
add esp 0x14
jmp r-xdata
lea edi [ ebx + 0x4 ]
mov [ esi + 0xb4 ] edi
mov [ esi + 0xb0 ] 0x0
mov eax [ ebp + 0x18 ]
inc eax
push eax
movzx eax [ ebx ]
push [ ebp + 0x14 ]
push esi
movzx ecx [ eax + r--data ]
movzx eax [ ebx + 0x2 ]
push [ ebp + 0xc ]
add ecx eax
push [ ebp + 0x8 ]
lea edx [ ebx + ecx * 2 ]
mov ecx [ ebp - 0x8 ]
call sub_4149c0
add esp 0x14
cmp eax 0x1
je r-xdata
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov edx [ edx ]
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0x14 ] edx
mov edx [ ebp - 0x8 ]
jmp r-xdata
mov ecx 0x81
cmp ax cx
je r-xdata
cmp edi 0x9f
je r-xdata
mov eax [ ebp + 0xc ]
mov [ esi + 0x84 ] edx
mov [ esi + 0x90 ] eax
mov [ esi + 0x80 ] ebx
test edi edi
jne r-xdata
mov [ esi + 0x9c ] 0x2
jmp r-xdata
cmp edi 0x81
je r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
movzx ecx [ eax ]
add eax 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] eax
je r-xdata
sub eax 0x62
cmp eax 0xb
ja r-xdata
mov edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax ecx
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x24 ] 0x0
je r-xdata
movzx ecx [ eax ]
add eax 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] eax
je r-xdata
mov eax [ esi + 0x7c ]
mov ecx [ ebp - 0x8 ]
sub eax ecx
and eax 0xfffffffe
cmp eax 0x2
jl r-xdata
mov ax [ ebx + 0x2 ]
add ebx 0x2
mov ecx 0xfc00
mov [ ebp - 0x30 ] ebx
and ax cx
mov edi 0x1
mov ecx 0xd800
cmp ax cx
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ecx + eax * 4 ]
mov [ ebp - 0x3c ] eax
mov eax [ ecx + edx * 4 + 0x4 ]
mov [ ebp - 0x34 ] eax
mov eax [ esi + 0x10 ]
sub eax [ ebp - 0x2c ]
lea ecx [ ecx + eax * 4 ]
mov eax [ ecx ]
mov [ ebp - 0x38 ] eax
mov eax [ esi + 0x94 ]
mov [ ebp - 0x28 ] eax
mov eax [ esi + 0xb0 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
sub eax [ esi + 0x78 ]
sar eax 0x1
mov [ ecx ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
mov [ ebp - 0x30 ] ebx
jmp r-xdata
jmp r-xdata
movzx eax [ ebx + 0x2 ]
cmp [ ebx + eax * 2 ] 0x77
lea ebx [ ebx + eax * 2 ]
je r-xdata
cmp eax [ esi + 0x78 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] 0x7fffffff
jmp r-xdata
mov [ ebp - 0xc ] 0x7fffffff
jmp r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
movzx eax [ ebx ]
push [ ebp + 0x14 ]
push esi
movzx ecx [ eax + r--data ]
movzx eax [ ebx + 0x2 ]
push [ ebp + 0xc ]
add ecx eax
push [ ebp + 0x8 ]
lea edx [ ebx + ecx * 2 ]
mov ecx [ ebp - 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
movzx eax [ ebx ]
movzx ecx [ eax + r--data ]
movzx eax [ ebx + 0x2 ]
add ecx eax
lea ebx [ ebx + ecx * 2 ]
mov [ ebp - 0x30 ] ebx
jmp r-xdata
mov ecx [ esi + 0x80 ]
mov [ ebp + 0x8 ] ecx
cmp eax 0xfffffc20
jne r-xdata
movzx edx [ ebx + 0x4 ]
mov [ ebp - 0x2c ] edx
lea eax [ edx + edx ]
cmp eax [ esi + 0x14 ]
jge r-xdata
movzx eax [ ebx ]
xor ecx ecx
mov [ ebp - 0x34 ] eax
add eax 0xffffff73
mov [ ebp - 0x1c ] ecx
cmp eax 0x4
ja r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + eax * 4 ]
mov [ ecx + edi * 4 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx [ esi + 0x78 ]
mov eax [ esi + 0xc ]
sar ecx 0x1
mov [ eax + edi * 4 + 0x4 ] ecx
cmp [ ebp + 0xc ] edi
jg r-xdata
or eax 0x10000
mov [ esi + 0x94 ] eax
jmp r-xdata
xor edi edi
mov edi 0x1
mov [ esi + 0x9c ] 0x0
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x14 ] 0x1
mov [ esi + 0x9c ] 0x0
jmp r-xdata
movzx eax [ ebx + 0x2 ]
mov ecx [ ebp - 0x8 ]
neg eax
lea ecx [ ecx + eax * 2 ]
mov eax ecx
mov [ ebp - 0x8 ] ecx
cmp eax [ esi + 0x78 ]
jb r-xdata
movzx ecx [ ebx + 0x2 ]
test ecx ecx
jle r-xdata
add ebx 0x8
mov [ ebp - 0x30 ] ebx
jmp r-xdata
mov [ ebp - 0xd0 ] 0x2
movzx eax [ ebx + 0x2 ]
mov [ ebp - 0xcc ] eax
mov eax [ esi + 0xc ]
mov [ ebp - 0xc8 ] eax
mov eax [ esi + 0x78 ]
mov [ ebp - 0xc4 ] eax
mov eax [ esi + 0x7c ]
sub eax [ esi + 0x78 ]
sar eax 0x1
mov [ ebp - 0xc0 ] eax
mov eax [ ebp + 0x8 ]
sub eax [ esi + 0x78 ]
sar eax 0x1
mov [ ebp - 0xbc ] eax
mov eax [ ebp - 0x8 ]
sub eax [ esi + 0x78 ]
sar eax 0x1
mov [ ebp - 0xb8 ] eax
movzx eax [ ebx + 0x4 ]
mov [ ebp - 0xa8 ] eax
movzx eax [ ebx + 0x6 ]
mov [ ebp - 0xa4 ] eax
mov eax [ ebp + 0xc ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0xb4 ] eax
movzx eax [ esi + 0x94 ]
mov [ ebp - 0xb0 ] eax
test eax eax
jne r-xdata
movzx edx [ edi + 0x4 ]
xor edx edx
jmp r-xdata
movzx eax [ edx + 0x2 ]
cmp [ edx + eax * 2 ] 0x77
lea edx [ edx + eax * 2 ]
je r-xdata
mov eax [ ebp + 0x18 ]
add edx 0x4
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
cmp edi 0x8b
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
movzx eax [ ebx ]
push esi
push [ ebp + 0xc ]
movzx eax [ eax + r--data ]
push [ ebp + 0x8 ]
lea edx [ ebx + eax * 2 ]
call sub_4149c0
mov ecx eax
add esp 0x14
cmp ecx 0xfffffc1a
jne r-xdata
mov [ esi + 0x9c ] 0x2
cmp eax [ esi + 0x78 ]
je r-xdata
mov ecx [ esi + 0x78 ]
cmp eax ecx
je r-xdata
cmp eax [ esi + 0x78 ]
je r-xdata
add ebx 0x2
mov [ ebp - 0x30 ] ebx
jmp r-xdata
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx [ esi + 0x18 ]
test edx edx
je r-xdata
cmp [ esi + 0x5c ] 0x0
je r-xdata
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov edx [ esi + 0x18 ]
lea edi [ esi + 0x1c ]
test edx edx
je r-xdata
cmp eax [ esi + 0x78 ]
je r-xdata
cmp eax [ esi + 0x78 ]
je r-xdata
mov edx [ esi + 0x1c ]
lea eax [ edx + edx ]
sub ecx eax
mov eax [ ebp - 0x8 ]
cmp eax ecx
ja r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ ebp - 0x24 ]
cmp eax ecx
jae r-xdata
add eax 0x2
mov [ ebp - 0x8 ] eax
jmp r-xdata
movzx ecx [ eax ]
add eax 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] eax
je r-xdata
movzx ecx [ eax ]
add eax 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] eax
je r-xdata
movzx ecx [ eax ]
add eax 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] eax
je r-xdata
movzx ecx [ eax ]
add eax 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] eax
je r-xdata
movzx ecx [ eax ]
add eax 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] eax
je r-xdata
movzx ecx [ eax ]
add eax 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] eax
je r-xdata
movzx ecx [ eax ]
add eax 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] eax
je r-xdata
movzx ecx [ eax ]
add eax 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] eax
je r-xdata
movzx ecx [ eax ]
add eax 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] eax
je r-xdata
movzx ecx [ eax ]
add eax 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] eax
je r-xdata
movzx ecx [ eax ]
add eax 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] eax
je r-xdata
movzx eax [ ebx ]
mov [ ebp - 0x14 ] eax
add eax 0xffffff9e
cmp eax 0x7
ja r-xdata
dec eax
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x2c ]
movzx edi [ eax ]
add edi edi
mov [ ebp - 0x10 ] edi
cmp edi [ ebp + 0xc ]
jge r-xdata
mov ecx [ esi + 0x54 ]
neg ecx
sbb ecx ecx
neg ecx
dec ecx
mov eax [ esi + 0xc ]
cmp [ eax + edi * 4 ] 0x0
jl r-xdata
mov eax [ ebp - 0x20 ]
mov edi 0x1
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x10 ] edi
movzx eax [ eax + lookup_table_45018a ]
jmp [ eax * 4 + jump_table_450182 ]
cmp [ ebp - 0x24 ] 0x0
movzx eax [ ebx ]
mov [ ebp - 0xc ] eax
je r-xdata
mov edx 0x1
cmp ecx 0x35
je r-xdata
mov edx [ ebp - 0x20 ]
add ebx 0x2
mov [ ebp - 0x34 ] 0x1
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] 0x7fffffff
cmp [ ebp - 0x24 ] 0x0
je r-xdata
movzx eax [ ebx ]
add ebx 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x30 ] ebx
je r-xdata
mov edx 0x1
cmp ecx 0x4f
je r-xdata
add ebx 0x2
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x34 ] 0x1
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] 0x7fffffff
movzx edi [ ebx ]
add ebx 0x2
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x30 ] ebx
cmp edi 0x10
je r-xdata
mov [ ebp - 0x18 ] 0x7fffffff
cmp [ esi + 0xb0 ] 0x0
je r-xdata
cmp edi 0xfffffc19
jne r-xdata
mov eax 0xfffffc1c
jmp r-xdata
mov eax 0xfffffc1d
jmp r-xdata
cmp [ esi + 0xb0 ] 0x0
jne r-xdata
cmp eax 0xfffffc19
jne r-xdata
mov [ esi + 0x80 ] ebx
mov eax 0xfffffc1e
jmp r-xdata
test eax eax
jne r-xdata
cmp [ esi + 0xb0 ] 0x0
jne r-xdata
cmp eax 0xfffffc19
jne r-xdata
mov [ ebp - 0x28 ] ecx
cmp eax 0x7d
jb r-xdata
xor ecx ecx
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov eax 0xfffffc19
jmp r-xdata
mov eax 0x1
mov eax [ esi + 0xb0 ]
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x94 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
movzx eax [ ebx ]
push esi
push [ ebp + 0xc ]
movzx eax [ eax + r--data ]
push [ ebp + 0x8 ]
lea edx [ ebx + eax * 2 ]
call sub_4149c0
mov edx eax
add esp 0x14
cmp edx 0xfffffc20
je r-xdata
cmp [ esi + 0x70 ] 0x0
jne r-xdata
cmp eax [ esi + 0x88 ]
jmp r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
je r-xdata
movzx eax [ eax + lookup_table_4155fc ]
jmp [ eax * 4 + jump_table_4155f4 ]
cmp eax 0x1
mov [ ebp - 0x14 ] 0x1
mov eax [ ebp - 0x8 ]
jl r-xdata
mov [ ebp - 0x2c ] 0x1
cmp eax 0x1
jl r-xdata
movzx ecx [ ebx + 0x2 ]
mov edx 0xff
cmp cx dx
ja r-xdata
movzx edi [ ebx + 0x2 ]
add ebx 0x2
mov eax edi
mov edx 0x1
and eax 0xfc00
cmp eax 0xd800
je r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0x14 ]
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax edx
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
je r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov ax [ ecx ]
add ecx 0x2
mov [ ebp - 0x8 ] ecx
cmp [ ebx + 0x2 ] ax
jne r-xdata
mov edi 0x2
jmp r-xdata
mov eax [ esi + 0x7c ]
mov edx [ ebp - 0x8 ]
sub eax edx
sar eax 0x1
cmp edi eax
jg r-xdata
cmp edi 0x88
jae r-xdata
movsx edi [ ecx + r--data ]
movsx edx [ ecx + r--data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0xc ] edx
mov [ ebp - 0x18 ] edi
test edi edi
jne r-xdata
movzx eax [ ebx + 0x2 ]
cmp [ ebx + eax * 2 ] 0x77
lea ebx [ ebx + eax * 2 ]
je r-xdata
add ebx 0x4
mov [ ebp - 0x30 ] ebx
jmp r-xdata
add ebx 0x2
mov [ ebp - 0x30 ] ebx
jmp r-xdata
add eax 0x2
mov [ ebp - 0x8 ] eax
test edi edi
je r-xdata
lea eax [ ebx + 0x4 ]
mov [ esi + 0x80 ] eax
mov eax 0xfffffc1f
jmp r-xdata
movzx eax [ ebx + 0x2 ]
cmp [ ebx + eax * 2 ] 0x77
lea ebx [ ebx + eax * 2 ]
je r-xdata
cmp eax 0x77
jne r-xdata
test eax eax
jne r-xdata
movzx ecx [ ebx + 0x2 ]
lea ecx [ ebx + ecx * 2 ]
cmp [ esi + 0x80 ] ecx
jae r-xdata
xor ecx ecx
shl eax 0x2
mov [ ebp - 0x1c ] ecx
mov ecx ebx
sub ecx [ esi + 0x74 ]
sar ecx 0x1
mov [ ebp - 0x34 ] ecx
mov ecx [ esi + 0xc ]
mov [ ebp - 0x10 ] eax
mov edx [ eax + ecx ]
mov eax [ eax + ecx + 0x4 ]
mov [ ebp - 0x30 ] eax
mov eax [ esi + 0x10 ]
sub eax [ ebp - 0x2c ]
mov [ ebp - 0x20 ] edx
mov eax [ ecx + eax * 4 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x94 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov [ esi + 0x9c ] 0x1
mov eax [ ebp + 0x18 ]
inc eax
push eax
push 0x0
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
cmp eax 0x1
jne r-xdata
jmp [ eax * 4 + jump_table_4500fe ]
add ebx 0x8
sub eax 0x4
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x9c ] 0x2
movzx eax [ ebx + 0x2 ]
mov [ ebp - 0x98 ] eax
mov eax [ esi + 0xc ]
mov [ ebp - 0x94 ] eax
mov eax [ esi + 0x78 ]
mov [ ebp - 0x90 ] eax
mov eax [ esi + 0x7c ]
sub eax [ esi + 0x78 ]
sar eax 0x1
mov [ ebp - 0x8c ] eax
mov eax [ ebp + 0x8 ]
sub eax [ esi + 0x78 ]
sar eax 0x1
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x8 ]
sub eax [ esi + 0x78 ]
sar eax 0x1
mov [ ebp - 0x84 ] eax
movzx eax [ ebx + 0x4 ]
mov [ ebp - 0x74 ] eax
movzx eax [ ebx + 0x6 ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp + 0xc ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x80 ] eax
movzx eax [ esi + 0x94 ]
mov [ ebp - 0x7c ] eax
test eax eax
jne r-xdata
add ebx 0x4
mov [ ebp - 0x30 ] ebx
jmp r-xdata
lea eax [ edi + 0x2 ]
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x80 ]
mov [ ebp + 0x8 ] eax
cmp ecx 0xfffffc19
je r-xdata
mov eax [ ebp + 0x18 ]
lea edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push 0x0
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
mov ecx eax
add esp 0x14
cmp ecx 0x1
je r-xdata
mov eax ecx
sub eax 0x0
je r-xdata
jne r-xdata
mov eax [ ebp + 0x18 ]
lea edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push 0x0
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
mov ecx eax
mov [ esi + 0xb0 ] edi
add esp 0x14
cmp ecx 0xfffffc20
jg r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
dec ecx
sub eax 0x2
mov [ ebp - 0x8 ] eax
cmp eax [ esi + 0x78 ]
jb r-xdata
mov eax [ esi + 0xac ]
mov [ ebp - 0xac ] eax
mov eax [ esi + 0xb4 ]
mov [ ebp - 0xa0 ] eax
lea eax [ ebp - 0xd0 ]
push eax
call [ rw-data ]
add esp 0x4
test eax eax
jg r-xdata
mov [ ebp - 0xb0 ] 0xffffffff
mov [ ebp - 0x50 ] edx
add ebx 0x4
mov eax [ esi + 0x94 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x40 ] eax
mov eax [ esi + 0xa8 ]
mov [ ebp - 0x54 ] eax
lea eax [ ebp - 0x54 ]
mov [ esi + 0xa8 ] eax
mov ecx [ esi + 0x10 ]
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x48 ] ecx
cmp ecx 0x1e
jg r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ esi + 0xa8 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov eax ebx
mov [ ebp - 0x14 ] 0x0
sub eax [ esi + 0x74 ]
sar eax 0x1
mov [ ebp - 0x2c ] eax
mov eax [ esi + 0x94 ]
mov [ ebp - 0x1c ] eax
cmp ecx 0xfffffc20
jne r-xdata
mov eax [ esi + 0x90 ]
mov ecx [ ebp - 0x2c ]
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x84 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x74 ]
mov [ ebp - 0x14 ] 0x1
lea ebx [ eax + ecx * 2 ]
mov eax [ esi + 0x80 ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
add ebx 0x2
cmp eax [ esi + 0x7c ]
je r-xdata
mov edx [ esi + 0x1c ]
lea eax [ edx + edx ]
sub ecx eax
mov eax [ ebp - 0x8 ]
cmp eax ecx
ja r-xdata
push [ ebp - 0x24 ]
lea eax [ esi + 0x1c ]
push eax
push ecx
mov ecx [ ebp - 0x8 ]
call sub_415e9f
add esp 0xc
test eax eax
jne r-xdata
cmp eax [ esi + 0x88 ]
jbe r-xdata
mov edx [ edi ]
lea eax [ edx + edx ]
sub ecx eax
mov eax [ ebp - 0x8 ]
cmp eax ecx
ja r-xdata
push [ ebp - 0x24 ]
push edi
push ecx
mov ecx eax
call sub_415e9f
add esp 0xc
test eax eax
jne r-xdata
xor edi edi
cmp eax [ esi + 0x88 ]
ja r-xdata
xor edi edi
lea edx [ eax - 0x2 ]
mov ecx 0xfc00
mov ax [ edx ]
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
mov edi [ ebp - 0x24 ]
mov ax [ eax ]
cmp ax [ esi + 0x34 ]
jne r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
push edi
lea eax [ esi + 0x1c ]
push eax
push ecx
mov ecx [ ebp - 0x8 ]
call sub_415e9f
add esp 0xc
test eax eax
jne r-xdata
cmp ecx 0x100
jae r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0xff
ja r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0x100
jae r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0xff
ja r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0x100
jae r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0xff
ja r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0xd
ja r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
mov eax [ ebp - 0x8 ]
jne r-xdata
cmp ecx 0x180e
ja r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0x180e
ja r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0x85
ja r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0x85
ja r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
push [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
push esi
push ecx
mov ecx edi
call sub_48e50e
mov ecx eax
add esp 0xc
test ecx ecx
js r-xdata
movzx eax [ eax + lookup_table_45017a ]
jmp [ eax * 4 + jump_table_450172 ]
mov eax [ esi + 0x24 ]
mov edx [ ebp - 0x2c ]
lea edx [ edx + eax * 2 ]
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x2c ] edx
mov edx [ ebp - 0x8 ]
test eax eax
jg r-xdata
mov eax [ esi + 0xc ]
cmp [ eax + edi * 4 ] 0x0
jl r-xdata
mov ecx [ eax + edi * 4 + 0x4 ]
sub ecx [ eax + edi * 4 ]
jmp r-xdata
cmp edi [ ebp - 0x1c ]
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x7c ]
jae r-xdata
lea eax [ ecx - 0x62 ]
add ebx 0x2
mov [ ebp - 0x30 ] ebx
cmp eax 0x8
jae r-xdata
movzx esi [ ebx + 0x4 ]
xor eax eax
cmp edi 0x69
mov [ ebp - 0x1c ] esi
sete al
xor ecx ecx
cmp edi 0x6d
mov [ ebp - 0x20 ] eax
movzx edi [ ebx + 0x2 ]
sete cl
mov [ ebp - 0x10 ] edi
test esi esi
mov [ ebp - 0x34 ] ecx
mov esi [ ebp + 0x10 ]
jne r-xdata
add ebx 0x2
mov [ ebp - 0x30 ] ebx
and eax 0xfc00
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x14 ] ebx
cmp eax 0xd800
jne r-xdata
xor edx edx
jmp r-xdata
movzx edx [ eax ]
add eax 0x2
movzx ecx [ ebx + 0x2 ]
mov [ ebp - 0x8 ] eax
cmp ecx edx
je r-xdata
movzx edx [ ebx + 0x2 ]
add ebx 0x4
mov eax edx
mov [ ebp - 0x14 ] edx
and eax 0xfc00
mov [ ebp - 0x30 ] ebx
cmp eax 0xd800
jne r-xdata
cmp edi 0x48
jb r-xdata
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
xor edx edx
jmp r-xdata
mov [ ebp - 0x38 ] 0x0
cmp edi 0xf
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ esi + 0xb0 ] ecx
cmp edi 0xfffffc1f
jne r-xdata
test eax eax
jne r-xdata
mov [ esi + 0xb0 ] edi
mov [ esi + 0x80 ] ebx
mov eax 0xfffffc20
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x14 ] 0x82
cmp ax [ ebp - 0x14 ]
je r-xdata
mov [ ebp - 0x14 ] 0x80
cmp ax [ ebp - 0x14 ]
jbe r-xdata
cmp [ esi + 0x60 ] 0x0
jne r-xdata
movzx ecx [ ebx + 0x2 ]
lea eax [ ebx + ecx * 2 ]
cmp [ esi + 0x80 ] eax
jae r-xdata
test edx edx
jne r-xdata
movzx eax [ ebx + 0x2 ]
cmp [ ebx + eax * 2 ] 0x77
je r-xdata
jbe r-xdata
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
cmp eax edi
jae r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
shl ecx 0xa
movzx eax [ eax ]
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
jmp r-xdata
lea eax [ edx - 0x62 ]
add ebx 0x2
mov [ ebp - 0x30 ] ebx
cmp eax 0x8
jb r-xdata
xor edx edx
cmp ecx 0x69
sete dl
xor eax eax
cmp ecx 0x6d
movzx ecx [ ebx + 0x4 ]
mov [ ebp - 0x1c ] ecx
sete al
mov [ ebp - 0x34 ] eax
movzx eax [ ebx + 0x2 ]
mov [ ebp - 0x10 ] eax
test ecx ecx
jne r-xdata
cmp [ ebp - 0x10 ] ecx
je r-xdata
cmp eax [ esi + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
lea ecx [ ecx ]
mov edx ecx
mov eax [ esi + 0x3c ]
movzx edx [ eax + ecx ]
mov eax [ ebp - 0x8 ]
jmp r-xdata
movzx eax [ ebx + 0x2 ]
and edi 0x3ff
and eax 0x3ff
shl edi 0xa
or edi eax
mov edx 0x2
add edi 0x10000
jmp r-xdata
mov eax [ ebp - 0x8 ]
movzx ecx [ eax ]
cmp edi 0x80
jae r-xdata
add ecx eax
movzx eax [ ebx + 0x2 ]
movzx ecx [ ecx * 2 + r--data ]
cmp eax 0x9
jne r-xdata
dec eax
or eax 0xffffff80
inc eax
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
shl ecx 0xa
movzx eax [ eax ]
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
mov [ ebp - 0x14 ] ecx
jmp r-xdata
cmp ecx [ esi + 0x88 ]
jmp r-xdata
add ebx 0x4
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
test edi edi
jle r-xdata
mov [ esi + 0x9c ] 0x2
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
movzx eax [ ebx ]
push esi
push [ ebp + 0xc ]
movzx eax [ eax + r--data ]
push [ ebp + 0x8 ]
lea edx [ ebx + eax * 2 ]
call sub_4149c0
mov edx eax
add esp 0x14
cmp edx 0xfffffc1b
je r-xdata
add ebx 0x4
mov [ ebp - 0x30 ] ebx
jmp r-xdata
cmp eax ecx
jae r-xdata
cmp [ ebx ] 0x78
mov edx [ esi + 0x90 ]
mov eax [ esi + 0x84 ]
mov [ ebp + 0xc ] edx
mov [ ebp - 0x8 ] eax
je r-xdata
movzx eax [ ebx + 0x2 ]
lea ebx [ ebx + eax * 2 ]
mov [ esi + 0xb0 ] edi
cmp [ ebx ] 0x77
je r-xdata
cmp [ ebx ] 0x77
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
movzx eax [ ebx ]
push esi
push [ ebp + 0xc ]
movzx eax [ eax + r--data ]
push [ ebp + 0x8 ]
lea edx [ ebx + eax * 2 ]
call sub_4149c0
mov ecx eax
add esp 0x14
cmp ecx 0xfffffc1a
jne r-xdata
mov [ esi + 0x9c ] 0x2
test eax eax
je r-xdata
mov eax [ esi + 0x90 ]
cmp eax [ ebp + 0xc ]
jle r-xdata
mov ecx [ esi + 0xa8 ]
test ecx ecx
je r-xdata
cmp [ esi + 0xa8 ] ecx
je r-xdata
movzx ecx [ ebx + 0x2 ]
add ecx ecx
cmp ecx [ ebp + 0xc ]
jge r-xdata
movzx ecx [ ebx + 0x2 ]
imul ecx [ esi + 0x24 ]
mov eax [ esi + 0x30 ]
lea ecx [ eax + ecx * 2 ]
movzx eax [ ebx + 0x4 ]
mov [ ebp - 0x14 ] ecx
test eax eax
jle r-xdata
mov eax [ ebp - 0x28 ]
mov eax [ esi + 0xac ]
mov [ ebp - 0x78 ] eax
mov eax [ esi + 0xb4 ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x9c ]
push eax
call [ rw-data ]
add esp 0x4
test eax eax
jg r-xdata
mov [ ebp - 0x7c ] 0xffffffff
test edi edi
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi + 0xb0 ] eax
cmp ecx 0xfffffc20
jne r-xdata
movzx eax [ ebx + 0x2 ]
cmp [ ebx + eax * 2 ] 0x77
lea ebx [ ebx + eax * 2 ]
je r-xdata
dec eax
je r-xdata
cmp ecx 0xfffffc19
je r-xdata
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 2 ]
cmp [ esi + 0x80 ] eax
jae r-xdata
add ebx 0x4
mov [ ebp - 0x30 ] ebx
jmp r-xdata
mov [ esi + 0x88 ] eax
mov ax [ eax ]
mov edx 0xfc00
and ax dx
mov edx 0xdc00
cmp ax dx
mov eax [ ebp - 0x8 ]
jne r-xdata
js r-xdata
lea eax [ ecx * 4 ]
push eax
call [ r--data ]
add esp 0x4
mov [ ebp - 0x4c ] eax
test eax eax
je r-xdata
lea eax [ ebp - 0x14c ]
mov [ ebp - 0x4c ] eax
jmp r-xdata
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
cmp eax [ ecx + 0x14 ]
jne r-xdata
test ecx ecx
jne r-xdata
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 2 ]
cmp [ esi + 0x80 ] eax
jae r-xdata
cmp edi 0x88
jb r-xdata
mov edx [ esi + 0x18 ]
test edx edx
je r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov ax [ eax ]
cmp ax [ esi + 0x34 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
mov ax [ eax ]
cmp ax [ esi + 0x34 ]
jne r-xdata
mov ecx [ edi ]
mov eax [ esi + 0x7c ]
add ecx ecx
sub eax ecx
cmp [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
jne r-xdata
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
cmp [ esi + 0x58 ] 0x0
je r-xdata
cmp [ esi + 0x58 ] 0x0
movzx ecx [ eax - 0x2 ]
je r-xdata
add eax 0xfffffffe
mov [ esi + 0x88 ] eax
mov eax [ ebp - 0x8 ]
movzx ecx [ eax ]
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp edx [ esi + 0x88 ]
jae r-xdata
sub edx 0x2
mov ecx [ esi + 0x7c ]
cmp eax ecx
jae r-xdata
add eax 0x2
cmp eax [ esi + 0x7c ]
mov eax [ ebp - 0x8 ]
jb r-xdata
cmp edx 0x1
je r-xdata
jmp r-xdata
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x4
jne r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
shl ecx 0xa
movzx eax [ eax ]
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x4
je r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
shl ecx 0xa
movzx eax [ eax ]
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
shl ecx 0xa
movzx eax [ eax ]
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
shl ecx 0xa
movzx eax [ eax ]
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x10
jne r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
shl ecx 0xa
movzx eax [ eax ]
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x10
je r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
shl ecx 0xa
movzx eax [ eax ]
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
cmp ecx 0x85
je r-xdata
je r-xdata
movzx eax [ eax ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
mov eax [ ebp - 0x8 ]
cmp ecx 0x205f
ja r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
shl ecx 0xa
movzx eax [ eax ]
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
cmp ecx 0x205f
ja r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
shl ecx 0xa
movzx eax [ eax ]
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
cmp ecx 0x2028
jb r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
shl ecx 0xa
movzx eax [ eax ]
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
lea eax [ ecx - 0x2028 ]
cmp eax 0x1
ja r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
shl ecx 0xa
movzx eax [ eax ]
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
cmp ecx 0xfffffffe
jne r-xdata
mov eax [ ebp - 0x8 ]
lea eax [ eax + ecx * 2 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
add ebx 0x2
add eax 0xffffff9e
mov [ ebp - 0x30 ] ebx
movzx edi al
and edi 0x1
mov [ ebp - 0x20 ] edi
movsx edi [ eax + r--data ]
movsx eax [ eax + r--data ]
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x28 ] eax
test eax eax
jne r-xdata
movzx edi [ ebx + 0x2 ]
xor eax eax
cmp [ ebx ] 0x69
mov [ ebp - 0x2c ] edi
sete al
mov [ ebp - 0x20 ] eax
movzx eax [ ebx + 0x4 ]
mov [ ebp - 0x28 ] eax
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ eax + edi * 4 + 0x4 ]
sub ecx [ eax + edi * 4 ]
jmp r-xdata
mov [ ebp - 0x1c ] ecx
test eax eax
jne r-xdata
movzx ecx [ eax ]
add eax 0x2
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x8 ] eax
test edx edx
je r-xdata
mov eax [ ebp - 0x20 ]
mov ecx 0x1
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x34 ]
movzx eax al
and eax 0x1
mov [ ebp - 0x20 ] eax
jmp r-xdata
add ebx 0x6
mov [ ebp - 0x30 ] ebx
jmp r-xdata
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x1
cmp ecx 0x1
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov esi [ ebp - 0x1c ]
lea eax [ esi + esi ]
add ebx eax
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0xc ]
cmp esi 0x1
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x30 ] ebx
jle r-xdata
and [ ebp - 0xc ] 0x3ff
movzx eax [ ebx + 0x2 ]
shl [ ebp - 0xc ] 0xa
and eax 0x3ff
or eax [ ebp - 0xc ]
add eax 0x10000
mov [ ebp - 0x1c ] 0x2
mov [ ebp - 0xc ] eax
mov [ ebp - 0x20 ] edx
add ebx 0x4
jmp r-xdata
cmp edi 0x20
jne r-xdata
mov eax [ ebp - 0x8 ]
movzx ecx [ eax ]
add eax 0x2
mov [ ebp - 0x8 ] eax
mov eax ecx
and eax 0xfc00
mov [ ebp - 0x2c ] ecx
cmp eax 0xd800
jne r-xdata
movzx eax [ ebx ]
and edx 0x3ff
shl edx 0xa
and eax 0x3ff
or edx eax
add edx 0x10000
add ebx 0x2
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x30 ] ebx
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x14 ] 0x1
je r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
and [ ebp - 0x18 ] 0x3ff
movzx eax [ ebx ]
shl [ ebp - 0x18 ] 0xa
and eax 0x3ff
or eax [ ebp - 0x18 ]
add eax 0x10000
add ebx 0x2
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x30 ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] edx
add ebx 0x4
jmp r-xdata
mov [ ebp - 0x10 ] ecx
test edx edx
jg r-xdata
mov [ ebp - 0x38 ] 0x1
jmp r-xdata
or ecx 0xffffffff
mov eax edi
jmp r-xdata
mov edx [ esi + 0x80 ]
mov ecx [ ebp - 0x14 ]
call sub_48e719
test eax eax
jne r-xdata
mov eax 0xfffffc1d
jmp r-xdata
mov [ esi + 0xb0 ] edi
mov eax [ ebp - 0x8 ]
mov [ esi + 0x84 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x90 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x80 ] eax
jmp r-xdata
mov [ ebp - 0x14 ] 0x85
cmp ax [ ebp - 0x14 ]
je r-xdata
cmp [ esi + 0x64 ] 0x0
je r-xdata
mov eax edx
jmp r-xdata
cmp [ ebx ] 0x77
je r-xdata
cmp edx 0xfffffc1b
jne r-xdata
movzx eax [ ebx + 0x2 ]
lea ebx [ ebx + eax * 2 ]
mov eax [ ebp - 0x14 ]
mov [ esi + 0xb0 ] eax
cmp [ ebx ] 0x77
jne r-xdata
movzx eax [ ebx ]
movzx eax [ eax + r--data ]
lea ebx [ ebx + eax * 2 ]
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jle r-xdata
cmp [ esi + 0x8c ] 0x0
jne r-xdata
mov ebx [ ebp - 0x2c ]
mov esi eax
test al 0x1
jne r-xdata
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x34 ] 0x1
add ebx 0x6
mov [ ebp - 0x30 ] ebx
jmp r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x1c ] ecx
test edx edx
jne r-xdata
movzx ecx [ eax ]
add eax 0x2
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x8 ] eax
cmp ecx 0xff
jbe r-xdata
movzx ecx [ eax ]
add eax 0x2
mov [ ebp - 0x8 ] eax
mov eax ecx
and eax 0xfc00
mov [ ebp - 0x14 ] ecx
cmp eax 0xd800
je r-xdata
cmp edx ecx
jne r-xdata
mov eax [ esi + 0x3c ]
movzx ecx [ eax + ecx ]
mov eax [ ebp - 0x8 ]
movzx ecx [ eax ]
mov edi 0xff
cmp cx di
ja r-xdata
add eax 0x2
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] eax
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0xff
ja r-xdata
cmp eax 0xa
ja r-xdata
movzx eax [ ebx + 0x4 ]
mov ecx [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
cmp edx ecx
jb r-xdata
mov [ ebp - 0x30 ] ebx
cmp edx [ esi + 0x7c ]
jb r-xdata
mov cx [ ebx ]
dec edi
mov ax [ edx ]
add ebx 0x2
add edx 0x2
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x8 ] edx
cmp cx ax
jne r-xdata
mov eax [ esi + 0xc ]
mov ebx [ ebp - 0x14 ]
mov ecx [ ebp - 0x3c ]
mov [ eax + ebx * 4 ] ecx
mov eax [ esi + 0xc ]
mov ecx [ ebp - 0x34 ]
mov [ eax + ebx * 4 + 0x4 ] ecx
mov ecx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
sub ecx [ ebp - 0x2c ]
mov esi [ ebp - 0x38 ]
mov [ eax + ecx * 4 ] esi
jmp r-xdata
cmp edx 0xfffffc20
je r-xdata
mov ax [ eax ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
cmp eax [ ebp - 0x2c ]
jne r-xdata
mov eax [ ebp + 0x18 ]
lea edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
cmp eax 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
jmp r-xdata
cmp [ ecx ] 0x77
jne r-xdata
cmp ecx 0xfffffc20
jne r-xdata
mov eax [ esi + 0x90 ]
mov ecx [ ebp - 0x34 ]
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x84 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x74 ]
lea ebx [ eax + ecx * 2 ]
mov eax [ esi + 0x94 ]
mov [ ebp - 0x14 ] eax
mov ecx 0x1
mov eax [ esi + 0x80 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp eax 0xfffffc20
jne r-xdata
movzx eax [ ebx + 0x2 ]
cmp [ ebx + eax * 2 ] 0x77
lea edx [ ebx + eax * 2 ]
mov [ ebp - 0x1c ] 0x1
jne r-xdata
mov [ ebp + 0xc ] eax
mov ecx [ ebp - 0x1c ]
movzx eax [ ebx + 0x2 ]
cmp eax 0xffff
je r-xdata
movzx ecx [ ebx + 0x2 ]
imul ecx [ esi + 0x24 ]
mov eax [ esi + 0x30 ]
lea eax [ eax + ecx * 2 ]
movzx ecx [ ebx + 0x4 ]
mov [ ebp - 0x2c ] eax
test ecx ecx
jle r-xdata
xor ecx ecx
jmp r-xdata
mov eax [ esi + 0xc ]
cmp [ eax + ecx * 4 ] 0x0
jl r-xdata
mov [ ebp - 0x1c ] 0x0
cmp edi 0x8c
jne r-xdata
cmp [ ebx - 0x4 ] 0x77
jne r-xdata
js r-xdata
movzx eax [ ebx + 0x2 ]
cmp [ ebx + eax * 2 ] 0x77
lea ebx [ ebx + eax * 2 ]
je r-xdata
test ecx ecx
jne r-xdata
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 2 ]
cmp [ esi + 0x80 ] eax
jae r-xdata
jmp r-xdata
jmp r-xdata
lea eax [ ecx + 0x3e4 ]
cmp eax 0x3
ja r-xdata
movzx eax [ ebx + 0x2 ]
cmp [ ebx + eax * 2 ] 0x77
lea ebx [ ebx + eax * 2 ]
je r-xdata
cmp [ ebx ] 0x77
je r-xdata
test ecx ecx
jg r-xdata
sub eax 0x2
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax 0xfffffffa
jmp r-xdata
mov ecx [ ebp - 0x48 ]
shl ecx 0x2
push ecx
push [ esi + 0xc ]
push eax
call sub_420fc0
mov eax 0x88
add esp 0xc
cmp [ edi ] ax
sbb eax eax
inc eax
mov [ ebp - 0x2c ] eax
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov eax 0xffffffe6
jmp r-xdata
movzx eax [ ebx + 0x2 ]
cmp [ ebx + eax * 2 ] 0x77
lea ebx [ ebx + eax * 2 ]
jne r-xdata
cmp [ ebx ] 0x77
je r-xdata
mov eax [ esi + 0x1c ]
lea edi [ eax + eax ]
lea eax [ edi + ecx ]
cmp [ ebp - 0x8 ] eax
jb r-xdata
cmp eax ecx
jbe r-xdata
add eax 0x2
cmp eax [ esi + 0x7c ]
jb r-xdata
cmp edx 0x1
je r-xdata
mov eax 0xfffffff4
jmp r-xdata
add ebx 0x2
mov [ ebp - 0x30 ] ebx
jmp r-xdata
cmp edx 0x1
je r-xdata
jmp r-xdata
xor ecx ecx
cmp eax [ esi + 0x88 ]
jbe r-xdata
movzx eax [ eax ]
mov ecx 0xff
cmp ax cx
ja r-xdata
movzx ecx [ eax ]
cmp ecx 0x5f
je r-xdata
mov edx 0xff
cmp cx dx
ja r-xdata
cmp ecx 0x5f
jne r-xdata
cmp [ esi + 0x58 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
shl ecx 0xa
movzx eax [ eax + 0x2 ]
and eax 0x3ff
or ecx eax
add ecx 0x10000
movzx ecx [ edx ]
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov [ esi + 0x88 ] edx
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x2 ]
cmp ax [ esi + 0x36 ]
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
jne r-xdata
lea eax [ ecx - 0x2028 ]
cmp eax 0x1
ja r-xdata
cmp eax edx
jb r-xdata
cmp ecx 0xa
je r-xdata
cmp ecx 0x3000
je r-xdata
je r-xdata
cmp ecx 0xa0
ja r-xdata
cmp ecx 0x3000
jne r-xdata
je r-xdata
cmp ecx 0xa0
ja r-xdata
cmp ecx 0x2029
jbe r-xdata
cmp ecx 0xa
jb r-xdata
jmp r-xdata
lea eax [ ecx - 0xa ]
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ esi + 0x7c ]
jmp r-xdata
test ecx ecx
je r-xdata
mov [ ebp - 0x28 ] 0x7fffffff
jmp r-xdata
add ebx 0x6
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] 0x7fffffff
mov eax [ ebp + 0x18 ]
mov edx ebx
mov edi [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
cmp edi [ ebp - 0x1c ]
jl r-xdata
push edx
mov edx [ ebp - 0x2c ]
call sub_48e837
add esp 0x4
test eax eax
je r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi 0x1
jl r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x14 ]
movsx esi [ esi + r--data ]
movsx edi [ edi + r--data ]
test esi esi
mov [ ebp - 0x1c ] esi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x10 ] edi
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x7c ]
jae r-xdata
mov edi [ ebp - 0x8 ]
jmp r-xdata
mov edi [ ebp - 0xc ]
cmp eax 0xff
ja r-xdata
cmp eax 0x7f
jbe r-xdata
cmp edi 0x2e
jb r-xdata
cmp edi 0x2e
jb r-xdata
cmp ecx 0xff
ja r-xdata
cmp edi 0x1f
jne r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
shl ecx 0xa
movzx eax [ eax ]
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
mov [ ebp - 0x2c ] ecx
cmp ecx 0x1
jl r-xdata
cmp ecx 0x1
jl r-xdata
mov edi [ ebp - 0x18 ]
cmp eax 0xff
ja r-xdata
cmp eax 0x7f
jbe r-xdata
test ecx ecx
js r-xdata
mov edi [ ebp - 0x8 ]
movzx esi [ ebx + 0x2 ]
movzx ecx [ ebx ]
add ebx 0x4
mov [ ebp - 0x3c ] esi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x30 ] ebx
jmp r-xdata
jmp r-xdata
movzx ecx [ edi + 0x4 ]
mov eax [ esi + 0xa8 ]
mov [ ebp - 0x2c ] ecx
lea edi [ ecx + ecx ]
mov [ ebp - 0x14 ] edi
test eax eax
jne r-xdata
mov [ ebp - 0x14 ] 0x8a
cmp ax [ ebp - 0x14 ]
je r-xdata
mov ecx [ esi + 0x98 ]
mov eax [ esi + 0x78 ]
lea eax [ eax + ecx * 2 ]
cmp ebx eax
je r-xdata
cmp [ eax ] 0x77
jne r-xdata
movzx eax [ ebx ]
mov ecx 0x81
cmp ax cx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ esi + 0x94 ] eax
jmp r-xdata
inc eax
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
cmp eax [ esi + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax 0xfffffff4
jmp r-xdata
cmp eax edi
jb r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
je r-xdata
mov edx 0x1
jmp r-xdata
xor edx edx
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ecx 0x7fffffff
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ecx eax
mov [ ebp - 0x20 ] ecx
cmp [ ebp - 0x24 ] edx
je r-xdata
mov esi [ ebp - 0x28 ]
and ecx 0x7
mov eax 0x1
shl eax cl
mov ecx [ ebp - 0x2c ]
shr ecx 0x3
test [ ecx + esi ] al
mov esi [ ebp + 0x10 ]
je r-xdata
cmp edi 0x6e
je r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
shl ecx 0xa
movzx eax [ eax ]
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
mov [ ebp - 0x14 ] ecx
jmp r-xdata
cmp ecx 0xff
ja r-xdata
add eax 0x2
add ebx 0x4
mov [ ebp - 0x8 ] eax
jmp r-xdata
lea ebx [ ebx + edx * 2 ]
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x30 ] ebx
cmp edi ecx
je r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
shl ecx 0xa
movzx eax [ eax ]
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
mov [ ebp - 0x14 ] ecx
mov eax [ esi + 0x3c ]
movzx eax [ eax + edi ]
cmp eax ecx
jne r-xdata
mov eax [ esi + 0x3c ]
movzx ecx [ eax + ecx ]
mov eax 0xfffffff2
jmp r-xdata
jmp [ eax * 4 + jump_table_450112 ]
cmp edi 0x10
je r-xdata
lea eax [ eax + 0x4 ]
cmp edx ecx
je r-xdata
cmp edx [ esi + 0x88 ]
jmp r-xdata
test edi edi
jle r-xdata
mov eax edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ ebx + 0x2 ]
lea eax [ ebx + ecx * 2 ]
cmp [ esi + 0x80 ] eax
jae r-xdata
test edx edx
je r-xdata
add [ ebp - 0x8 ] 0x2
jmp r-xdata
mov eax [ ebp + 0x18 ]
inc eax
cmp [ ebx ] 0x7a
push eax
push [ ebp + 0x14 ]
push esi
push edx
push ecx
mov ecx [ ebp - 0x8 ]
jne r-xdata
add ebx 0x4
mov [ ebp - 0x30 ] ebx
jmp r-xdata
movzx eax [ ebx ]
mov edx 0x82
cmp ax dx
je r-xdata
jmp r-xdata
test ecx ecx
jne r-xdata
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 2 ]
cmp [ esi + 0x80 ] eax
jae r-xdata
mov ecx [ esi + 0x10 ]
mov edx [ ebp - 0x8 ]
sub edx [ esi + 0x78 ]
sub ecx [ ebp - 0x2c ]
mov eax [ esi + 0xc ]
sar edx 0x1
mov [ eax + ecx * 4 ] edx
cmp edi 0x88
jb r-xdata
mov eax [ ebp - 0x34 ]
mov ecx 0x2
movzx eax [ eax + r--data ]
sub ecx eax
lea ebx [ edx + ecx * 2 ]
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x1c ]
movzx eax [ edx + 0x2 ]
cmp [ edx + eax * 2 ] 0x77
lea edx [ edx + eax * 2 ]
je r-xdata
mov ecx 0x1
jmp r-xdata
cmp eax [ ecx + 0x4 ]
je r-xdata
mov eax [ esi + 0xa8 ]
mov [ ebp - 0x1c ] 0x0
mov eax [ eax + 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x24 ]
mov ecx [ ebp - 0x14 ]
lea ecx [ ecx + eax * 2 ]
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x14 ] ecx
test eax eax
jg r-xdata
mov eax [ esi + 0xc ]
cmp [ eax + ecx * 4 ] 0x0
jge r-xdata
mov eax [ esi + 0x50 ]
mov [ ebp - 0x24 ] eax
mov eax [ esi ]
cmp eax [ esi + 0x4 ]
jb r-xdata
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov [ esi + 0x9c ] 0x2
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x28 ]
mov eax [ esi + 0x90 ]
add ebx 0x4
mov [ ebp - 0x30 ] ebx
mov [ ebp + 0xc ] eax
jmp r-xdata
movzx eax [ ebx + 0x2 ]
cmp [ ebx + eax * 2 ] 0x77
lea ebx [ ebx + eax * 2 ]
je r-xdata
cmp [ ebx ] 0x77
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ eax ] 0x77
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
movzx eax [ edi ]
push esi
push [ ebp + 0xc ]
movzx eax [ eax + r--data ]
push [ ebp + 0x8 ]
lea edx [ edi + eax * 2 ]
call sub_4149c0
mov ecx [ ebp - 0x48 ]
add esp 0x14
shl ecx 0x2
mov edi eax
push ecx
push [ ebp - 0x4c ]
push [ esi + 0xc ]
call sub_420fc0
mov eax [ ebp - 0x44 ]
add esp 0xc
mov [ esi + 0x94 ] eax
mov eax [ ebp - 0x54 ]
mov [ esi + 0xa8 ] eax
cmp edi 0x1
je r-xdata
mov [ esi + 0x9c ] 0x2
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1c ]
mov [ esi + 0x94 ] eax
jmp r-xdata
cmp [ eax ] 0x77
jne r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx edi
mov ax [ ecx ]
cmp ax [ esi + 0x34 ]
jne r-xdata
push [ ebp - 0x24 ]
lea eax [ esi + 0x1c ]
push eax
push ecx
mov ecx [ ebp - 0x8 ]
call sub_48e77e
add esp 0xc
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x2 ]
cmp ax [ esi + 0x36 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x2 ]
cmp ax [ esi + 0x36 ]
jne r-xdata
cmp ecx edi
jne r-xdata
cmp ecx edi
je r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
mov ecx eax
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x10
je r-xdata
mov ecx 0x1
jmp r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x10
je r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
lea edi [ ecx - 0x5e ]
jmp r-xdata
cmp ecx 0x100
jae r-xdata
cmp ecx 0x5f
je r-xdata
cmp [ esi + 0x58 ] 0x0
je r-xdata
movzx eax [ edx + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
add ecx 0x10000
cmp [ esi + 0x1c ] 0x2
jne r-xdata
jmp r-xdata
cmp [ eax ] 0xa
jne r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
jbe r-xdata
jmp r-xdata
cmp ecx 0x2000
jb r-xdata
cmp ecx 0x1680
je r-xdata
je r-xdata
jmp r-xdata
cmp ecx 0x2000
jb r-xdata
cmp ecx 0x1680
jne r-xdata
je r-xdata
jmp r-xdata
cmp ecx 0xd
jbe r-xdata
jmp r-xdata
cmp eax [ esi + 0x7c ]
jb r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
jns r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x10 ] eax
jge r-xdata
mov [ ebp - 0x14 ] 0x1
cmp eax [ esi + 0x7c ]
jae r-xdata
mov edi eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
cmp eax edi
jle r-xdata
mov eax [ ebp - 0x8 ]
and ecx 0x3ff
shl ecx 0xa
movzx eax [ eax ]
and eax 0x3ff
or ecx eax
add ecx 0x10000
add [ ebp - 0x8 ] 0x2
mov edi [ ebp - 0x8 ]
movzx eax [ eax ]
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp [ ebp - 0xc ] eax
jne r-xdata
cmp ecx [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x2c ] 0x1
cmp ecx 0x1
jl r-xdata
mov eax [ esi + 0x40 ]
movzx eax [ eax + edi ]
mov edi [ ebp - 0xc ]
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax edi
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
xor edi edi
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0xc ]
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax edx
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
cmp ecx edx
je r-xdata
mov eax [ esi + 0x40 ]
movzx ecx [ eax + ecx ]
cmp edx 0x7f
jbe r-xdata
cmp edx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x7c ]
jae r-xdata
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x14 ] 0x1
je r-xdata
mov eax [ esi + 0x40 ]
movzx eax [ eax + edi ]
mov edi [ ebp - 0x18 ]
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax edi
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
cmp edi 0x16
jne r-xdata
cmp ecx 0xa
ja r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x4 ] ecx
jne r-xdata
mov eax [ esi + 0x94 ]
and eax 0xffff0000
or eax ecx
mov [ esi + 0x94 ] eax
cmp edi [ esi + 0x14 ]
jge r-xdata
mov [ ebp - 0x14 ] 0x86
cmp ax [ ebp - 0x14 ]
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0xb8 ]
sub eax ebx
neg eax
sbb eax eax
and edx eax
cmp eax 0x77
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx ecx [ eax * 8 + r--data ]
mov eax 0x1
shl eax cl
test [ edx * 4 + r--data ] eax
jne r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ esi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov edi 0x2
add ecx 0x10000
jmp r-xdata
movsx ecx [ eax + r--data ]
mov [ ebp - 0x10 ] ecx
movsx ecx [ eax + r--data ]
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] ecx
test ecx ecx
jne r-xdata
mov [ ebp - 0x1c ] ecx
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov edx [ ebp - 0x1c ]
cmp [ ebp - 0x10 ] edx
jge r-xdata
mov ecx [ ebp - 0x1c ]
cmp [ ebp - 0x10 ] ecx
jge r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
cmp edi 0x6e
je r-xdata
mov esi [ ebp - 0x28 ]
and ecx 0x7
mov eax 0x1
shl eax cl
mov ecx [ ebp - 0x14 ]
shr ecx 0x3
test [ ecx + esi ] al
mov esi [ ebp + 0x10 ]
je r-xdata
mov eax edi
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax edi
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
add ebx 0x2
add [ ebp - 0x8 ] 0x2
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x30 ] ebx
jmp r-xdata
mov al [ ecx * 8 + r--data ]
cmp al 0x9
je r-xdata
cmp edi 0xf
je r-xdata
movzx ecx [ ecx * 8 + r--data ]
xor edx edx
movzx eax [ ebx + 0x4 ]
cmp eax [ ecx * 4 + r--data ]
setne dl
xor eax eax
cmp edi 0x10
sete al
cmp edx eax
je r-xdata
movzx eax [ ecx * 8 + r--data ]
jmp r-xdata
movzx eax [ ecx * 8 + r--data ]
movzx eax [ ecx * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
cmp edx 0x180e
ja r-xdata
movzx eax [ ecx * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
cmp edx 0x24
je r-xdata
jmp r-xdata
cmp edi 0x10
jne r-xdata
mov ecx [ eax ]
cmp edx ecx
jae r-xdata
jmp r-xdata
cmp [ ebx ] 0x77
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ esi + 0x94 ] eax
movzx eax [ ebx + 0x2 ]
lea ebx [ ebx + eax * 2 ]
mov eax [ ebp - 0x1c ]
mov [ esi + 0xb0 ] eax
cmp [ ebx ] 0x77
je r-xdata
mov edx [ ebp - 0x14 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
lea edx [ ebx + 0x4 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi + 0x94 ] eax
movzx eax [ ebx + 0x2 ]
cmp [ ebx + eax * 2 ] 0x77
lea ebx [ ebx + eax * 2 ]
je r-xdata
cmp [ ebx ] 0x77
je r-xdata
lea ebx [ ebx + eax * 2 ]
mov [ ebp - 0x30 ] ebx
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x34 ]
movzx eax [ eax + r--data ]
jmp r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ esi + 0x24 ]
lea edx [ edx + eax * 2 ]
mov [ ebp - 0x2c ] edx
mov edx [ ebp - 0x8 ]
test ecx ecx
jg r-xdata
movzx ecx [ ecx ]
dec eax
add ecx ecx
mov [ ebp - 0x2c ] eax
cmp ecx [ ebp + 0xc ]
jge r-xdata
jmp r-xdata
jmp r-xdata
cmp [ eax ] 0x77
jne r-xdata
add ebx 0x4
mov [ ebp - 0x30 ] ebx
jmp r-xdata
cmp eax [ esi + 0x88 ]
jae r-xdata
mov eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x14c ]
cmp eax ecx
je r-xdata
cmp edi 0xfffffc19
je r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
jmp r-xdata
cmp [ esi + 0x1c ] 0x1
je r-xdata
jmp r-xdata
cmp [ esi + 0x1c ] 0x2
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ax [ ebx ]
add ebx 0x2
mov [ ebp - 0x30 ] ebx
cmp ax 0x5
jne r-xdata
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov edi 0x1
jmp r-xdata
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
cmp eax [ esi + 0x7c ]
jae r-xdata
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x10
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
js r-xdata
cmp ecx 0x100
jae r-xdata
cmp ecx 0x5f
jne r-xdata
mov ax [ eax ]
cmp ax [ esi + 0x34 ]
jne r-xdata
add eax 0x2
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp eax [ esi + 0x88 ]
jbe r-xdata
cmp ecx 0xc
ja r-xdata
cmp ecx 0x200a
jbe r-xdata
jmp r-xdata
cmp ecx 0x9
je r-xdata
cmp ecx 0x200a
jbe r-xdata
jmp r-xdata
cmp ecx 0x9
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] 0x1
cmp edi 0x1
jl r-xdata
test edi edi
je r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov edx [ ebp - 0x24 ]
movzx ecx [ eax ]
mov edi [ ebp - 0x8 ]
test edx edx
je r-xdata
test ecx ecx
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
cmp eax ecx
jle r-xdata
test edx edx
jne r-xdata
cmp ecx [ ebp - 0x18 ]
je r-xdata
cmp eax [ esi + 0x7c ]
jae r-xdata
mov edx [ ebp - 0x20 ]
add ecx eax
movzx eax [ ecx * 2 + r--data ]
mov ecx [ ebp - 0x10 ]
mov eax [ eax * 8 + r--data ]
add eax edi
jmp r-xdata
dec eax
or eax 0xffffff80
inc eax
mov eax [ esi + 0x7c ]
sub eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x8 ]
cmp ecx eax
ja r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
add ecx eax
movzx eax [ ecx * 2 + r--data ]
mov ecx [ eax * 8 + r--data ]
add ecx edx
cmp ecx edx
je r-xdata
dec eax
or eax 0xffffff80
inc eax
add ebx 0x4
jmp r-xdata
cmp edx 0xff
ja r-xdata
mov eax edx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0x14 ]
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax edx
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
jmp r-xdata
test edx edx
jne r-xdata
movzx eax [ ecx ]
add ecx 0x2
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x18 ] eax
je r-xdata
movzx edi [ eax ]
add eax 0x2
mov [ ebp - 0x8 ] eax
mov eax edi
and eax 0xfc00
cmp eax 0xd800
mov eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ecx 0x1
jl r-xdata
cmp ecx 0x1
jge r-xdata
mov edx [ ebp - 0x20 ]
add ecx eax
movzx eax [ ecx * 2 + r--data ]
mov ecx [ ebp - 0x10 ]
mov eax [ eax * 8 + r--data ]
add eax edi
jmp r-xdata
dec eax
or eax 0xffffff80
inc eax
cmp [ ebp - 0x24 ] 0x0
lea ecx [ edi - 0x6 ]
je r-xdata
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x28 ] 0x1
cmp edx 0x1
jl r-xdata
jmp [ ecx * 4 + jump_table_450196 ]
mov eax edi
mov [ ebp - 0x10 ] eax
test ecx ecx
js r-xdata
test ecx ecx
jns r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x80 ] eax
mov eax 0x1
jmp r-xdata
or eax 0x10000
mov [ esi + 0x94 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp edi ecx
jg r-xdata
mov [ ebp - 0x14 ] 0x8b
cmp ax [ ebp - 0x14 ]
je r-xdata
movzx eax [ ebx + 0x2 ]
neg eax
lea ebx [ ebx + eax * 2 ]
movzx eax [ ebx + 0x2 ]
cmp [ ebx + eax * 2 ] 0x77
lea ebx [ ebx + eax * 2 ]
je r-xdata
lea esi [ esi + edi * 2 ]
mov [ ebp - 0x14 ] ecx
cmp esi ebx
jb r-xdata
mov ebx [ ebp - 0x30 ]
mov edi [ ebp - 0x2c ]
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x10 ] eax
jge r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x10 ] eax
jge r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x14 ]
inc ecx
mov [ ebp - 0x14 ] ecx
cmp ecx [ ebp - 0x10 ]
jle r-xdata
jmp r-xdata
mov ecx [ ebp - 0x2c ]
inc ecx
mov [ ebp - 0x2c ] ecx
cmp ecx [ ebp - 0x10 ]
jle r-xdata
add ecx eax
movzx eax [ ecx * 2 + r--data ]
mov eax [ eax * 8 + r--data ]
add eax edi
cmp [ ebp - 0x14 ] eax
jne r-xdata
dec eax
or eax 0xffffff80
inc eax
mov ecx 0x1
jmp r-xdata
cmp al 0x5
je r-xdata
jmp r-xdata
jmp r-xdata
xor ecx ecx
cmp [ ebx + 0x4 ] ax
setne cl
xor eax eax
cmp edi 0x10
sete al
cmp ecx eax
je r-xdata
jmp r-xdata
cmp eax 0x3
je r-xdata
cmp edx 0x202f
ja r-xdata
je r-xdata
cmp eax 0x3
je r-xdata
cmp edx 0x40
je r-xdata
mov edx [ ebp - 0x8 ]
add ebx 0x6
mov [ ebp - 0x30 ] ebx
jmp r-xdata
jmp r-xdata
xor edx edx
cmp [ eax ] 0x77
jne r-xdata
add ebx 0x4
jmp r-xdata
mov ebx [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
jne r-xdata
cmp [ eax ] 0x77
jne r-xdata
mov eax [ ebp - 0x2c ]
dec ecx
movzx eax [ eax ]
cmp eax [ ebp - 0x14 ]
je r-xdata
jmp r-xdata
cmp [ ebx ] 0x78
je r-xdata
jmp r-xdata
mov eax [ esi + 0x84 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x80 ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
push eax
call [ r--data ]
add esp 0x4
cmp edi 0xfffffc1c
jl r-xdata
add ebx 0x4
mov [ ebp - 0x30 ] ebx
jmp r-xdata
mov ax [ ecx + 0x2 ]
cmp ax [ esi + 0x36 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax ]
cmp ax [ esi + 0x34 ]
jne r-xdata
cmp eax 0x3
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edi 0x1
jmp r-xdata
cmp eax 0x3
jne r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x10
je r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax [ ebp - 0x8 ]
lea edi [ ecx - 0x5e ]
jmp r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
jmp r-xdata
cmp ecx 0x202f
je r-xdata
cmp ecx 0x20
je r-xdata
cmp ecx 0x202f
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov edx [ ebp - 0x28 ]
cmp edi edx
je r-xdata
push [ ebp - 0x34 ]
mov edx eax
push esi
push ecx
mov ecx [ ebp - 0x10 ]
call sub_48e50e
mov ecx eax
add esp 0xc
test ecx ecx
js r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
movzx ecx [ edi ]
add edi 0x2
mov edx [ ebp - 0x24 ]
test edx edx
je r-xdata
mov edi [ ebp - 0x8 ]
cmp eax [ esi + 0x88 ]
jbe r-xdata
push edx
mov edx [ ebp - 0x2c ]
call sub_48e837
add esp 0x4
test eax eax
je r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx eax
mov edi [ ebp - 0x18 ]
mov [ ebp - 0x28 ] edx
cmp ecx edi
jge r-xdata
test edx edx
jne r-xdata
movzx esi [ eax ]
mov [ ebp - 0x14 ] esi
cmp edi esi
mov esi [ ebp + 0x10 ]
je r-xdata
test edi edi
jle r-xdata
mov eax [ ebp - 0x1c ]
add eax eax
push eax
push [ ebp - 0x14 ]
push ecx
call sub_421604
add esp 0xc
test eax eax
jne r-xdata
cmp ecx [ ebp - 0x18 ]
je r-xdata
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x68 ]
call sub_48ec7b
mov edx [ ebp - 0x20 ]
mov edi eax
mov ecx [ ebp - 0x10 ]
jmp r-xdata
mov eax edx
mov eax [ esi + 0x40 ]
movzx eax [ eax + edx ]
jmp r-xdata
add ecx eax
movzx eax [ ecx * 2 + r--data ]
mov ecx [ ebp - 0x2c ]
mov eax [ eax * 8 + r--data ]
add eax edx
jmp r-xdata
dec eax
or eax 0xffffff80
inc eax
mov eax [ ebp + 0x18 ]
mov edx ebx
mov edi [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp [ ebp - 0x24 ] 0x0
mov edx eax
mov [ ebp - 0x1c ] edx
je r-xdata
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
cmp eax edi
jle r-xdata
cmp [ ebp - 0x18 ] edi
je r-xdata
movzx eax [ eax ]
and edi 0x3ff
and eax 0x3ff
shl edi 0xa
or edi eax
mov eax [ ebp - 0x8 ]
add edi 0x10000
add eax 0x2
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
je r-xdata
cmp eax [ esi + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
cmp ecx 0xf
ja r-xdata
cmp ecx 0xf
ja r-xdata
cmp edx [ ebp - 0x18 ]
je r-xdata
mov eax [ esi + 0x7c ]
mov [ ebp - 0x2c ] eax
cmp edi eax
jae r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x14 ] 0x1
cmp edx 0x1
jl r-xdata
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x14 ] 0x1
cmp edx 0x1
jl r-xdata
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x14 ] 0x1
cmp edx 0x1
jl r-xdata
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x14 ] 0x1
cmp edx 0x1
jl r-xdata
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x14 ] 0x1
cmp edx 0x1
jl r-xdata
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x14 ] 0x1
cmp edx 0x1
jl r-xdata
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x2c ] 0x1
cmp edx 0x1
jl r-xdata
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x14 ] 0x1
cmp edx 0x1
jl r-xdata
mov edi [ ebp - 0x8 ]
mov edx 0x1
cmp [ ebp - 0xc ] edx
jl r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx 0x16
jne r-xdata
cmp ecx 0xa
ja r-xdata
cmp ecx 0xa
ja r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
cmp [ ebp - 0x1c ] 0x16
je r-xdata
mov edi [ ebp - 0x1c ]
mov ecx [ ebp - 0x28 ]
jmp r-xdata
mov eax [ esi + 0xc ]
lea edx [ eax + ecx * 4 ]
lea ecx [ eax + edi * 4 ]
cmp edx ecx
jae r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
sub eax [ ebp - 0x2c ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + eax * 4 ]
mov [ ecx + edi * 4 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx [ esi + 0x78 ]
mov eax [ esi + 0xc ]
sar ecx 0x1
mov [ eax + edi * 4 + 0x4 ] ecx
cmp [ ebp + 0xc ] edi
jg r-xdata
cmp [ ebx ] 0x78
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
mov edi 0x1
movzx ecx [ esi ]
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x7c ]
jae r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ esi + 0x7c ]
jae r-xdata
cmp eax ecx
jb r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
movzx edx [ eax ]
cmp edx 0xff
jbe r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
mov edi [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov ecx 0x1
mov [ ebp - 0x14 ] ecx
cmp eax [ esi + 0x7c ]
jae r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
xor eax eax
cmp edi 0xf
sete al
cmp ecx eax
je r-xdata
cmp al 0x8
je r-xdata
xor ecx ecx
jmp r-xdata
cmp edx 0x205f
je r-xdata
je r-xdata
cmp edx 0x85
ja r-xdata
cmp edx 0x5f
je r-xdata
cmp edx 0x60
je r-xdata
mov [ ebp - 0x30 ] ebx
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x20 ]
mov [ ecx + eax ] edx
mov eax [ esi + 0xc ]
mov edx [ ebp - 0x30 ]
mov [ ecx + eax + 0x4 ] edx
mov ecx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
sub ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x18 ]
mov [ eax + ecx * 4 ] edx
mov eax [ ebp - 0x1c ]
jmp r-xdata
test edi edi
jne r-xdata
cmp edi 0xfffffc20
jle r-xdata
jmp r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jle r-xdata
lea ecx [ eax - 0x2 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edi 0x1
jmp r-xdata
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
cmp eax [ esi + 0x7c ]
jae r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
lea eax [ eax + ecx * 2 ]
mov ecx [ ebp - 0x14 ]
inc ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] ecx
cmp ecx edi
mov ecx [ ebp - 0x1c ]
jle r-xdata
cmp edi [ esi + 0x88 ]
jmp r-xdata
push edx
mov edx [ ebp - 0x2c ]
call sub_48e837
add esp 0x4
test eax eax
je r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
mov ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
inc edi
mov [ ebp - 0x10 ] edi
lea eax [ eax + ecx * 2 ]
mov [ ebp - 0x8 ] eax
cmp edi [ ebp - 0x1c ]
jl r-xdata
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov [ ebp - 0x14 ] 0x2
add ecx 0x10000
mov eax edi
sub edi 0x2
cmp eax [ ebp - 0x28 ]
je r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x18 ]
jge r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x18 ]
mov edx ebx
mov edi [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov edx eax
mov [ ebp - 0x28 ] edx
cmp ecx [ ebp - 0x18 ]
jge r-xdata
inc [ ebp - 0x2c ]
add eax 0x2
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x2c ] ecx
jle r-xdata
mov edi [ ebp - 0x1c ]
cmp edi [ ebp - 0x14 ]
mov edi [ ebp - 0xc ]
jne r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov eax [ esi + 0x7c ]
lea edx [ edi + edi ]
sub eax edx
cmp ecx eax
ja r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x2c ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
test edx edx
jne r-xdata
mov [ ebp - 0x28 ] edi
mov [ ebp - 0xc ] 0x1
cmp ecx 0x1
jge r-xdata
cmp eax ecx
je r-xdata
cmp edx ecx
je r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
cmp ecx edi
jge r-xdata
cmp ecx edi
jge r-xdata
cmp ecx [ esi + 0x7c ]
jae r-xdata
mov ecx [ ebp - 0x10 ]
mov edi [ ebp - 0x14 ]
inc edi
mov [ ebp - 0x14 ] edi
cmp edi ecx
jle r-xdata
test edx edx
jne r-xdata
movzx edi [ eax ]
cmp [ ebp - 0x18 ] edi
je r-xdata
movzx edi [ eax ]
add eax 0x2
mov [ ebp - 0x8 ] eax
mov eax edi
and eax 0xfc00
cmp eax 0xd800
mov eax [ ebp - 0x8 ]
jne r-xdata
jmp [ ecx * 4 + jump_table_450236 ]
jmp [ ecx * 4 + jump_table_4501f6 ]
movzx ecx [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] edi
je r-xdata
mov edi [ ebp - 0x8 ]
mov edx 0x1
cmp [ ebp - 0xc ] edx
jl r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x24 ]
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
mov edx [ ebp - 0xc ]
jmp r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp [ ebp - 0x24 ] 0x0
lea eax [ ecx - 0x6 ]
je r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
jmp [ ecx * 4 + jump_table_450276 ]
jmp [ ecx * 4 + jump_table_450356 ]
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
sub ecx edx
mov edi edx
dec ecx
shr ecx 0x2
inc ecx
or eax 0xffffffff
[ edi ]
mov edi [ ebp - 0x14 ]
jmp r-xdata
lea eax [ edi + 0x2 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
cmp eax ecx
jne r-xdata
mov eax 0x81
cmp [ edi ] ax
je r-xdata
movzx edx [ eax ]
add eax 0x2
mov [ ebp - 0x8 ] eax
cmp edx 0xff
jbe r-xdata
movzx edx [ ecx ]
add ecx 0x2
mov eax edx
mov [ ebp - 0x8 ] ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0x20 ]
cmp eax [ esi + 0x88 ]
jbe r-xdata
mov ecx edx
mov eax 0x1
and ecx 0x7
shr edx 0x3
shl eax cl
mov ecx [ ebp - 0x28 ]
test [ edx + ecx ] al
mov eax [ ebp - 0x8 ]
je r-xdata
cmp edi 0x6e
jne r-xdata
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
movzx edx [ eax ]
mov eax edx
and eax 0xfc00
cmp eax 0xd800
je r-xdata
jmp r-xdata
xor ecx ecx
jmp r-xdata
cmp edx 0x3000
je r-xdata
add edx 0xffffe000
cmp edx 0x29
ja r-xdata
cmp edx 0xa0
je r-xdata
je r-xdata
xor ecx ecx
jmp r-xdata
cmp edx 0xa0
jb r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x14c ]
cmp eax ecx
je r-xdata
mov edi [ ebp - 0x14 ]
lea eax [ ebp - 0x54 ]
mov [ esi + 0xa8 ] eax
movzx eax [ edi + 0x2 ]
cmp [ edi + eax * 2 ] 0x77
lea edi [ edi + eax * 2 ]
mov [ ebp - 0x14 ] edi
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edi 0x1
jmp r-xdata
cmp eax 0x3
jne r-xdata
mov [ ebp - 0x14 ] eax
cmp edi edx
jl r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
mov edi [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc [ ebp - 0x10 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
mov eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp eax edx
je r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
movzx eax [ eax ]
cmp edx eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax [ esi + 0x7c ]
jae r-xdata
cmp ecx [ esi + 0x7c ]
jb r-xdata
lea eax [ edi + edi ]
push eax
lea eax [ ebp - 0x68 ]
push eax
push ecx
call sub_421604
add esp 0xc
test eax eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
inc edx
mov [ ebp - 0xc ] edx
cmp edx ecx
jle r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
mov edi [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov edx eax
mov [ ebp - 0x28 ] edx
cmp ecx [ ebp - 0x18 ]
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov edx [ ebp - 0x18 ]
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov edi 0x1
cmp eax [ esi + 0x7c ]
jae r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
mov edi [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp [ ebp - 0x24 ] 0x0
mov edx eax
mov [ ebp - 0x20 ] edx
je r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
cmp [ ebp - 0x18 ] edi
je r-xdata
movzx eax [ eax ]
and edi 0x3ff
and eax 0x3ff
shl edi 0xa
or edi eax
mov eax [ ebp - 0x8 ]
add edi 0x10000
add eax 0x2
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x14 ] 0x1
cmp edx 0x1
jl r-xdata
mov eax [ esi + 0x7c ]
lea ecx [ edx + edx ]
mov edi [ ebp - 0x8 ]
sub eax ecx
cmp edi eax
ja r-xdata
mov edi [ ebp - 0x8 ]
mov edx 0x1
cmp [ ebp - 0xc ] edx
jl r-xdata
mov edi [ ebp - 0x8 ]
mov edx 0x1
cmp [ ebp - 0xc ] edx
jl r-xdata
mov edi [ ebp - 0x8 ]
mov edx 0x1
cmp [ ebp - 0xc ] edx
jl r-xdata
mov edi [ ebp - 0x8 ]
mov edx 0x1
cmp [ ebp - 0xc ] edx
jl r-xdata
mov edi [ ebp - 0x8 ]
mov ecx 0x1
cmp edx ecx
jl r-xdata
mov edi [ ebp - 0x8 ]
mov edx 0x1
cmp [ ebp - 0xc ] edx
jl r-xdata
mov edi [ ebp - 0x8 ]
mov edx 0x1
cmp [ ebp - 0xc ] edx
jl r-xdata
mov edi [ ebp - 0x8 ]
mov edx 0x1
cmp [ ebp - 0xc ] edx
jl r-xdata
mov edi [ ebp - 0x8 ]
mov edx 0x1
cmp [ ebp - 0xc ] edx
jl r-xdata
mov edi [ ebp - 0x8 ]
mov edx 0x1
cmp [ ebp - 0xc ] edx
jl r-xdata
mov edi [ ebp - 0x8 ]
mov edx 0x1
cmp [ ebp - 0xc ] edx
jl r-xdata
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x14 ] 0x1
cmp edx 0x1
jl r-xdata
mov edi [ ebp - 0x8 ]
mov edx 0x1
cmp [ ebp - 0xc ] edx
jl r-xdata
mov eax [ esi + 0x7c ]
lea ecx [ edx + edx ]
mov edi [ ebp - 0x8 ]
sub eax ecx
cmp edi eax
ja r-xdata
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x14 ] 0x1
cmp edx 0x1
jl r-xdata
mov edi [ ebp - 0x8 ]
mov edx 0x1
cmp [ ebp - 0xc ] edx
jl r-xdata
mov edi [ ebp - 0x8 ]
mov edx 0x1
cmp [ ebp - 0xc ] edx
jl r-xdata
mov edi [ ebp - 0x8 ]
mov edx 0x1
cmp [ ebp - 0xc ] edx
jl r-xdata
mov edi [ ebp - 0x8 ]
mov edx 0x1
cmp [ ebp - 0xc ] edx
jl r-xdata
mov edi [ ebp - 0x8 ]
mov edx 0x1
cmp [ ebp - 0xc ] edx
jl r-xdata
mov edi [ ebp - 0x8 ]
mov edx 0x1
cmp [ ebp - 0xc ] edx
jl r-xdata
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x14 ] 0x1
cmp edx 0x1
jl r-xdata
mov edi [ ebp - 0x8 ]
mov edx 0x1
cmp [ ebp - 0xc ] edx
jl r-xdata
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x14 ] 0x1
cmp edx 0x1
jl r-xdata
mov edi [ ebp - 0x8 ]
mov edx 0x1
cmp [ ebp - 0xc ] edx
jl r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] edi
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] edi
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] edi
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] edi
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] edi
je r-xdata
movzx ecx [ edi ]
add edi 0x2
mov [ ebp - 0x8 ] edi
test eax eax
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edi
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] edi
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] edi
je r-xdata
cmp eax 0xf
ja r-xdata
cmp eax 0xf
ja r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ esi + 0x7c ]
mov [ ebp - 0x2c ] eax
cmp edi eax
jae r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp [ ebp - 0xc ] eax
jge r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx ecx [ ebx ]
cmp ecx 0x7b
je r-xdata
mov edx eax
jmp r-xdata
mov eax [ ebp + 0x18 ]
lea edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
add ebx 0x4
mov [ ebp - 0x30 ] ebx
jmp r-xdata
mov ecx edx
mov eax 0x1
and ecx 0x7
shr edx 0x3
shl eax cl
mov ecx [ ebp - 0x28 ]
test [ edx + ecx ] al
je r-xdata
cmp edi 0x6e
je r-xdata
cmp edx 0xff
jbe r-xdata
movzx eax [ ecx ]
and edx 0x3ff
shl edx 0xa
and eax 0x3ff
or edx eax
add edx 0x10000
add ecx 0x2
mov [ ebp - 0x8 ] ecx
sub edi 0x2
cmp edi [ ebp - 0x20 ]
jae r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
mov ecx [ ebp - 0x10 ]
inc ecx
add eax 0x2
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x10 ] ecx
cmp ecx [ ebp - 0x1c ]
jl r-xdata
jmp r-xdata
mov eax edi
sub edi 0x2
cmp eax [ ebp - 0x20 ]
je r-xdata
cmp eax [ esi + 0x88 ]
jbe r-xdata
mov eax [ ebp - 0x8 ]
and edx 0x3ff
shl edx 0xa
mov ecx 0x2
mov [ ebp - 0x14 ] ecx
movzx eax [ eax + 0x2 ]
and eax 0x3ff
or edx eax
add edx 0x10000
jmp r-xdata
cmp edx 0xff
ja r-xdata
jmp r-xdata
movzx eax [ ecx * 8 + r--data ]
xor ecx ecx
cmp [ eax * 4 + r--data ] 0x6
sete cl
movzx eax [ edx + lookup_table_450146 ]
jmp [ eax * 4 + jump_table_45013e ]
cmp edx 0x1680
je r-xdata
cmp edx 0x9
jb r-xdata
cmp edx 0xe000
jae r-xdata
cmp edx 0xd7ff
jbe r-xdata
add ebx 0x4
mov [ ebp - 0x30 ] ebx
jmp r-xdata
push eax
call [ r--data ]
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x14c ]
mov [ esi + 0xa8 ] eax
mov eax [ ebp - 0x4c ]
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x2c ]
jmp r-xdata
push [ ebp - 0x34 ]
mov edx eax
push esi
push ecx
mov ecx [ ebp - 0x10 ]
call sub_48e50e
add esp 0xc
test eax eax
js r-xdata
mov edi eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
cmp [ ebp - 0x2c ] eax
jge r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
mov ax [ edi ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
movzx eax [ edi ]
add edi 0x2
cmp [ ebp - 0xc ] eax
jne r-xdata
mov edx [ ebp - 0x8 ]
mov edi [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
cmp eax [ esi + 0x88 ]
jbe r-xdata
mov eax [ ebp - 0x8 ]
add [ ebp - 0x8 ] 0x2
inc ecx
mov eax [ ebp - 0x8 ]
cmp ecx edi
jl r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp eax edx
je r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
movzx edx [ eax ]
cmp edi edx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi + edi ]
add [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
lea ecx [ edx + edx ]
mov [ ebp - 0x2c ] ecx
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ esi + 0x7c ]
sub eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x8 ]
cmp ecx eax
ja r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp eax edx
je r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
movzx eax [ eax ]
cmp edx eax
je r-xdata
cmp eax edx
je r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
movzx edx [ eax ]
mov ecx [ ebp - 0x8 ]
mov eax edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov edi [ ebp - 0xc ]
cmp ecx edi
je r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
cmp ecx [ ebp - 0xc ]
jge r-xdata
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov edi [ ebp - 0x14 ]
add eax 0x2
inc edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] edi
cmp edi ecx
jle r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
mov ecx [ ebp - 0x10 ]
jmp r-xdata
mov ecx [ esi + 0x7c ]
cmp edi ecx
jae r-xdata
mov eax [ ebp - 0x20 ]
add edi ecx
mov [ ebp - 0x8 ] edi
jmp r-xdata
mov edx [ ebp - 0xc ]
mov ecx [ esi + 0x7c ]
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
lea eax [ edi + 0x2 ]
mov [ ebp - 0x28 ] eax
mov ecx [ esi + 0x7c ]
mov eax [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
add edi ecx
mov [ ebp - 0x8 ] edi
jmp r-xdata
mov edx [ esi + 0x7c ]
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
mov edx [ esi + 0x7c ]
mov eax [ ebp - 0xc ]
cmp edi [ esi + 0x7c ]
jae r-xdata
mov edx [ esi + 0x7c ]
mov eax [ ebp - 0xc ]
cmp edi [ esi + 0x7c ]
jae r-xdata
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx ecx [ eax * 8 + r--data ]
mov eax [ esi + 0x7c ]
mov [ ebp - 0x14 ] ecx
cmp edi eax
jae r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
mov [ ebp - 0x8 ] edi
movzx ecx [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] edi
je r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0x180e
ja r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0x14 ]
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax edx
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax [ ebp - 0x3c ]
mov edx [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
cmp ecx edx
jb r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0x24
je r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
jmp [ eax * 4 + jump_table_450316 ]
jmp [ eax * 4 + jump_table_4502d6 ]
cmp edi eax
je r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] edi
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] 0x1
cmp edi [ esi + 0x7c ]
jae r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi [ esi + 0x7c ]
jae r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi [ esi + 0x7c ]
jae r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi [ esi + 0x7c ]
jae r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi [ esi + 0x7c ]
jae r-xdata
mov eax 0x1
mov [ ebp - 0x2c ] eax
cmp edi [ esi + 0x7c ]
jae r-xdata
mov [ ebp - 0x2c ] 0x1
cmp edi [ esi + 0x7c ]
jae r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi [ esi + 0x7c ]
jae r-xdata
mov edx 0x1
cmp edi [ esi + 0x7c ]
jae r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x18 ]
cmp [ ebp - 0xc ] eax
jge r-xdata
mov eax [ ebp - 0x18 ]
cmp [ ebp - 0xc ] eax
jge r-xdata
mov eax [ ebp - 0x18 ]
cmp [ ebp - 0xc ] eax
jge r-xdata
mov eax [ ebp - 0x18 ]
cmp [ ebp - 0xc ] eax
jge r-xdata
mov eax [ ebp - 0x18 ]
cmp [ ebp - 0xc ] eax
jge r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x18 ]
cmp [ ebp - 0xc ] eax
jge r-xdata
mov eax [ ebp - 0x18 ]
cmp [ ebp - 0xc ] eax
jge r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x18 ]
jge r-xdata
lea esp [ esp ]
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x80 ] ecx
mov [ esi + 0x84 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x90 ] eax
mov eax 0xfffffc1a
jmp r-xdata
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ecx 0x7a
jne r-xdata
mov [ esi + 0xb8 ] edi
mov eax 0xfffffc1b
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
mov ecx [ ebp - 0x8 ]
inc eax
inc [ ebp - 0x10 ]
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
jmp r-xdata
mov ecx edx
mov eax 0x1
and ecx 0x7
shr edx 0x3
shl eax cl
mov ecx [ ebp - 0x28 ]
test [ edx + ecx ] al
je r-xdata
cmp edi 0x6e
je r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
cmp eax [ esi + 0x7c ]
jae r-xdata
jmp r-xdata
mov ax [ edi ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
mov [ esi + 0x68 ] ecx
cmp [ esi + 0x8c ] ecx
jg r-xdata
cmp edi 0x6e
je r-xdata
mov ecx edx
mov eax 0x1
and ecx 0x7
shr edx 0x3
shl eax cl
mov ecx [ ebp - 0x28 ]
test [ edx + ecx ] al
jne r-xdata
jmp r-xdata
cmp edx 0xd
jbe r-xdata
xor ecx ecx
jmp r-xdata
push eax
call [ r--data ]
add esp 0x4
jmp r-xdata
test eax eax
je r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov edx [ ebp - 0x8 ]
inc edi
mov ecx [ ebp - 0x1c ]
lea edx [ edx + eax * 2 ]
mov [ ebp - 0x8 ] edx
cmp edi [ ebp - 0x28 ]
jl r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov edx edi
push esi
push [ ebp - 0x1c ]
call sub_48e50e
add esp 0xc
test eax eax
js r-xdata
jmp r-xdata
sub edi 0x2
mov eax [ ebp + 0x18 ]
inc ecx
inc eax
mov [ ebp - 0x10 ] ecx
push eax
push [ ebp + 0x14 ]
mov edx ebx
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
cmp edi [ ebp - 0x28 ]
jne r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
cmp eax [ esi + 0x7c ]
jae r-xdata
movzx ecx [ edi ]
cmp [ ebp - 0xc ] ecx
je r-xdata
mov edi [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
cmp eax [ esi + 0x88 ]
jbe r-xdata
add eax 0x2
inc ecx
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0x18 ]
jl r-xdata
cmp [ ebp - 0x1c ] edx
jne r-xdata
cmp ecx [ esi + 0x88 ]
mov eax [ esi + 0x7c ]
sub eax ecx
cmp edi eax
ja r-xdata
cmp eax edx
je r-xdata
test edi edi
jle r-xdata
mov eax [ ebp - 0x1c ]
add eax eax
push eax
push [ ebp - 0x14 ]
push ecx
call sub_421604
add esp 0xc
test eax eax
jne r-xdata
movzx eax [ edi ]
add edi 0x2
cmp [ ebp - 0x18 ] eax
je r-xdata
movzx ecx [ edi ]
add edi 0x2
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov edi [ ebp - 0x8 ]
mov edx [ ebp - 0x1c ]
cmp eax [ esi + 0x88 ]
jbe r-xdata
mov eax [ ebp - 0x8 ]
add [ ebp - 0x8 ] 0x2
inc ecx
mov eax [ ebp - 0x8 ]
cmp ecx edi
jl r-xdata
mov edi [ ebp - 0x8 ]
mov edx [ ebp - 0x1c ]
cmp eax [ esi + 0x88 ]
jbe r-xdata
cmp [ ebp - 0x18 ] edx
je r-xdata
movzx eax [ ecx + 0x2 ]
and edx 0x3ff
and eax 0x3ff
shl edx 0xa
or edx eax
mov edi 0x2
add edx 0x10000
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax [ esi + 0x7c ]
jae r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov edi 0x1
cmp eax [ esi + 0x7c ]
jae r-xdata
mov edi [ ebp - 0x18 ]
mov edi [ ebp - 0x14 ]
inc edi
mov [ ebp - 0x14 ] edi
cmp edi ecx
jle r-xdata
mov edx [ esi + 0x18 ]
test edx edx
je r-xdata
movzx eax [ edi ]
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp eax 0xd
jg r-xdata
movzx ecx [ edi ]
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp ecx 0x180e
jg r-xdata
movzx ecx [ edi ]
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp ecx 0x180e
jg r-xdata
movzx ecx [ edi ]
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp ecx 0x85
jg r-xdata
movzx eax [ edi ]
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp eax 0x85
jg r-xdata
movzx eax [ edi ]
mov ecx 0xff
cmp ax cx
ja r-xdata
movzx eax [ edi ]
mov ecx 0xff
cmp ax cx
ja r-xdata
movzx eax [ edi ]
mov ecx 0xff
cmp ax cx
ja r-xdata
movzx eax [ edi ]
mov ecx 0xff
cmp ax cx
ja r-xdata
movzx eax [ edi ]
mov ecx 0xff
cmp ax cx
ja r-xdata
movzx eax [ edi ]
mov ecx 0xff
cmp ax cx
ja r-xdata
mov edx [ esi + 0x18 ]
test edx edx
je r-xdata
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp edi ecx
jae r-xdata
movzx ecx [ edi ]
add edi 0x2
mov eax ecx
mov [ ebp - 0x8 ] edi
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx ecx [ edi ]
add edi 0x2
mov eax ecx
mov [ ebp - 0x8 ] edi
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx ecx [ edi ]
add edi 0x2
mov eax ecx
mov [ ebp - 0x8 ] edi
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx ecx [ edi ]
add edi 0x2
mov eax ecx
mov [ ebp - 0x8 ] edi
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx ecx [ edi ]
add edi 0x2
mov eax ecx
mov [ ebp - 0x8 ] edi
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx ecx [ edi ]
add edi 0x2
mov eax ecx
mov [ ebp - 0x8 ] edi
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx ecx [ edi ]
cmp ecx 0x80
jae r-xdata
movzx ecx [ edi ]
cmp ecx 0x80
jae r-xdata
movzx ecx [ edi ]
cmp ecx 0x80
jae r-xdata
movzx ecx [ edi ]
cmp ecx 0x80
jae r-xdata
movzx ecx [ edi ]
cmp ecx 0x80
jae r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov ebx [ ebp - 0x24 ]
mov esi ecx
inc edx
cmp edx [ ebp - 0xc ]
jle r-xdata
and ecx 0xfc00
cmp ecx 0xd800
jne r-xdata
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp eax 0x9
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
mov [ ebp - 0x8 ] edi
mov edx [ ebp - 0x3c ]
add eax ecx
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] edx
sete cl
cmp ecx [ ebp - 0x38 ]
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
mov [ ebp - 0x8 ] edi
add eax ecx
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp eax [ ebp - 0x3c ]
sete cl
cmp ecx [ ebp - 0x38 ]
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
mov [ ebp - 0x8 ] edi
add eax ecx
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp eax [ ebp - 0x3c ]
sete cl
cmp ecx [ ebp - 0x38 ]
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
mov [ ebp - 0x8 ] edi
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp ecx 0x202f
ja r-xdata
je r-xdata
mov eax [ ebp - 0x24 ]
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
mov [ ebp - 0x8 ] edi
add ecx eax
movzx eax [ ecx * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
dec eax
or eax 0xffffff80
inc eax
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edi
cmp [ ebp - 0x38 ] 0x0
je r-xdata
lea eax [ eax + 0x4 ]
cmp ecx edx
je r-xdata
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
mov [ ebp - 0x8 ] edi
mov eax 0x1
cmp ecx 0x40
je r-xdata
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp edx [ ebp - 0x18 ]
jge r-xdata
mov ecx [ esi + 0x7c ]
mov eax ecx
sub [ ebp - 0x18 ] edx
sub eax edi
mov edx [ ebp - 0x18 ]
sar eax 0x1
cmp edx eax
jbe r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
mov ecx [ ebp - 0x18 ]
cmp edx ecx
jge r-xdata
mov ecx [ ebp - 0x18 ]
cmp edx ecx
jge r-xdata
mov ecx [ ebp - 0x18 ]
cmp edx ecx
jge r-xdata
mov ecx [ ebp - 0x18 ]
cmp edx ecx
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x18 ]
cmp eax 0x7fffffff
jge r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx 0x7fffffff
jge r-xdata
mov ecx [ esi + 0x7c ]
mov eax ecx
sub [ ebp - 0x18 ] edx
sub eax edi
mov edx [ ebp - 0x18 ]
sar eax 0x1
cmp edx eax
ja r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp edx [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp edi [ esi + 0x88 ]
jbe r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp edi eax
je r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
cmp [ ebp - 0x24 ] 0x0
movzx ecx [ edi ]
je r-xdata
cmp [ ebp - 0x24 ] 0x0
movzx ecx [ edi ]
je r-xdata
cmp [ ebp - 0x24 ] 0x0
movzx ecx [ edi ]
je r-xdata
cmp [ ebp - 0x24 ] 0x0
movzx ecx [ edi ]
je r-xdata
cmp [ ebp - 0x24 ] 0x0
movzx ecx [ edi ]
je r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
cmp [ ebp - 0x24 ] 0x0
movzx ecx [ edi ]
je r-xdata
cmp [ ebp - 0x24 ] 0x0
movzx ecx [ edi ]
mov [ ebp - 0x14 ] ecx
je r-xdata
cmp [ ebp - 0x24 ] 0x0
movzx ecx [ edi ]
je r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
cmp [ ebp - 0x24 ] 0x0
movzx ecx [ edi ]
je r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ecx [ esi + 0x7c ]
cmp edi ecx
jae r-xdata
mov ecx [ esi + 0x7c ]
cmp edi ecx
jae r-xdata
mov edx edi
mov edi [ ebp - 0x8 ]
mov ecx edi
call sub_4149c0
add esp 0x14
cmp eax 0xfffffc1b
jne r-xdata
mov edi [ ebp - 0x8 ]
lea edx [ ebx + 0x4 ]
mov ecx edi
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
sub edi 0x2
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp edx 0x20
je r-xdata
mov edx [ ebp - 0x8 ]
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
neg eax
lea edx [ edx + eax * 2 ]
mov [ ebp - 0x8 ] edx
cmp edx edi
jae r-xdata
cmp eax 0xfffffffe
jne r-xdata
inc [ ebp - 0x2c ]
lea edi [ edi + eax * 2 ]
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
sub edi 0x2
add esp 0x14
mov [ ebp - 0x8 ] edi
test eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
inc eax
add edi 0x2
mov [ ebp - 0x10 ] eax
mov edx ebx
mov eax [ ebp + 0x18 ]
mov ecx edi
inc eax
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] ecx
jne r-xdata
cmp edi [ ebp - 0x28 ]
jne r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
jmp r-xdata
mov edx [ ebp - 0x28 ]
test edx edx
jle r-xdata
lea eax [ edx + edx ]
push eax
push [ ebp - 0x14 ]
push edi
call sub_421604
add esp 0xc
test eax eax
jne r-xdata
mov edi [ ebp - 0x8 ]
cmp [ esi + 0x8c ] 0x0
mov eax [ ebp - 0x8 ]
je r-xdata
mov eax [ esi + 0x7c ]
lea edx [ edi + edi ]
sub eax edx
cmp ecx eax
ja r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x2c ]
jmp r-xdata
mov eax [ ebp + 0x18 ]
inc ecx
inc eax
mov [ ebp - 0x10 ] ecx
push eax
push [ ebp + 0x14 ]
mov edx ebx
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] ecx
je r-xdata
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
sub edi 0x2
mov [ ebp - 0x8 ] edi
cmp edi [ ebp - 0x1c ]
jne r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
cmp eax [ esi + 0x7c ]
jae r-xdata
mov ax [ edi - 0x2 ]
sub edi 0x2
mov ecx 0xfc00
mov [ ebp - 0x8 ] edi
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
mov [ esi + 0x68 ] edi
cmp [ esi + 0x8c ] edi
jg r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
lea ecx [ ecx + edi * 2 ]
inc eax
mov [ ebp - 0x8 ] ecx
cmp eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax ecx
jl r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp eax edx
je r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
movzx edx [ eax ]
cmp edi edx
je r-xdata
cmp eax edx
je r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
movzx edx [ eax ]
mov ecx [ ebp - 0x8 ]
mov eax edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
jmp r-xdata
mov edx [ esi + 0x1c ]
lea eax [ edx + edx ]
sub ecx eax
cmp edi ecx
ja r-xdata
lea eax [ esi + 0x1c ]
push 0x0
push eax
push ecx
mov ecx edi
call sub_415e9f
add esp 0xc
test eax eax
jne r-xdata
cmp eax 0x85
je r-xdata
je r-xdata
cmp ecx 0x205f
jg r-xdata
je r-xdata
cmp ecx 0x205f
jg r-xdata
je r-xdata
cmp ecx 0x2028
jl r-xdata
je r-xdata
add eax 0xffffdfd8
cmp eax 0x1
ja r-xdata
je r-xdata
add edi 0x2
inc edx
mov [ ebp - 0x8 ] edi
cmp edx [ ebp - 0xc ]
jle r-xdata
mov ecx eax
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x4
jne r-xdata
mov ecx eax
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x4
je r-xdata
add edi 0x2
inc edx
mov [ ebp - 0x8 ] edi
cmp edx [ ebp - 0xc ]
jle r-xdata
mov ecx eax
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x1
jne r-xdata
mov ecx eax
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x1
je r-xdata
add edi 0x2
inc edx
mov [ ebp - 0x8 ] edi
cmp edx [ ebp - 0xc ]
jle r-xdata
mov ecx eax
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x10
jne r-xdata
mov ecx eax
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x10
je r-xdata
mov edx [ esi + 0x1c ]
lea eax [ edx + edx ]
sub ecx eax
cmp edi ecx
ja r-xdata
push [ ebp - 0x24 ]
lea eax [ esi + 0x1c ]
push eax
push ecx
mov ecx edi
call sub_415e9f
add esp 0xc
test eax eax
jne r-xdata
inc edx
cmp edx eax
jle r-xdata
mov ax [ edi ]
mov [ ebp - 0x14 ] 0xfc00
and ax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] 0xdc00
cmp ax [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
jne r-xdata
cmp ecx 0xd
ja r-xdata
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp ecx 0x180e
ja r-xdata
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp ecx 0x180e
ja r-xdata
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp ecx 0x85
ja r-xdata
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp ecx 0x85
ja r-xdata
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp ecx 0x80
jae r-xdata
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
mov [ ebp - 0x8 ] edi
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x4
je r-xdata
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp edi edx
jae r-xdata
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x1
jne r-xdata
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x1
je r-xdata
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp edi edx
jae r-xdata
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x10
jne r-xdata
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x10
je r-xdata
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
inc ecx
mov [ ebp - 0x28 ] ecx
cmp ecx edx
jle r-xdata
cmp edi eax
jb r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
jmp r-xdata
add edi 0x2
mov [ ebp - 0x8 ] edi
mov eax 0x1
cmp eax 0x5
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
inc ecx
mov [ ebp - 0x14 ] ecx
cmp ecx edx
jle r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
inc ecx
mov [ ebp - 0x14 ] ecx
cmp ecx edx
jle r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
inc ecx
mov [ ebp - 0x14 ] ecx
cmp ecx edx
jle r-xdata
mov eax 0x1
cmp eax 0x3
je r-xdata
cmp ecx 0x205f
je r-xdata
je r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp ecx 0x85
ja r-xdata
mov eax 0x1
cmp eax 0x3
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
inc ecx
mov [ ebp - 0x14 ] ecx
cmp ecx edx
jle r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp ecx edx
jae r-xdata
inc edx
cmp edx [ ebp - 0xc ]
jle r-xdata
cmp ecx 0x60
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov ecx [ esi + 0x7c ]
cmp edi ecx
jae r-xdata
lea edi [ edi + edx * 2 ]
mov [ ebp - 0x8 ] edi
jmp r-xdata
mov edi ecx
mov [ ebp - 0x8 ] edi
mov ecx [ esi + 0x7c ]
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edx eax
jge r-xdata
cmp edx eax
jge r-xdata
mov edi [ esi + 0x7c ]
jmp r-xdata
cmp edx ecx
jge r-xdata
mov edi ecx
lea edi [ edi + edx * 2 ]
mov [ ebp - 0x8 ] edi
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ esi + 0x7c ]
mov edx 0x1
cmp edi [ esi + 0x7c ]
jae r-xdata
mov edx 0x1
cmp edi [ esi + 0x7c ]
jae r-xdata
mov edx 0x1
cmp edi [ esi + 0x7c ]
jae r-xdata
mov edx 0x1
cmp edi [ esi + 0x7c ]
jae r-xdata
mov edx 0x1
cmp edi [ esi + 0x7c ]
jae r-xdata
mov edx 0x1
cmp edi [ esi + 0x7c ]
jae r-xdata
mov edx 0x1
cmp edi [ esi + 0x7c ]
jae r-xdata
mov edx 0x1
cmp edi [ esi + 0x7c ]
jae r-xdata
sub edi 0x2
mov [ ebp - 0x8 ] edi
cmp [ ebp - 0x24 ] eax
jne r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx ecx [ eax * 8 + r--data ]
mov eax [ esi + 0x7c ]
mov [ ebp - 0x14 ] ecx
cmp edi eax
jae r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
mov [ ebp - 0x8 ] edi
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp edi [ esi + 0x88 ]
jbe r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
mov ax [ edi ]
mov [ ebp - 0x14 ] 0xfc00
and ax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] 0xd800
cmp ax [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
jne r-xdata
cmp edi [ esi + 0x88 ]
jbe r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp edi [ esi + 0x88 ]
jbe r-xdata
cmp ecx 0x180e
ja r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0x14 ]
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax edx
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax [ ebp - 0x3c ]
mov edx [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
cmp ecx edx
jb r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp edi [ esi + 0x88 ]
jbe r-xdata
cmp ecx 0x24
je r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx eax [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x14 ] ecx
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax [ ebp - 0x1c ]
cmp eax 0xc
jne r-xdata
cmp [ ebp - 0x1c ] 0xc
jne r-xdata
test eax eax
jne r-xdata
mov ecx [ ebp - 0x1c ]
cmp [ esi + 0xb8 ] ecx
jne r-xdata
mov ebx [ ebp - 0x1c ]
mov ecx 0x81
movzx eax [ ebx ]
cmp ax cx
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc [ ebp - 0x10 ]
inc eax
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
lea eax [ eax + ecx * 2 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
cmp eax [ ebp - 0x1c ]
jl r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x7c ]
cmp eax [ esi + 0x88 ]
jbe r-xdata
mov edi [ ebp - 0x14 ]
cmp edx edi
jb r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov edi [ esi + 0x7c ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
sub edi 0x2
add esp 0x14
mov [ ebp - 0x8 ] edi
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x7c ]
lea ecx [ edx + edx ]
sub eax ecx
cmp edi eax
ja r-xdata
add edi [ ebp - 0x2c ]
jmp r-xdata
mov ax [ edi - 0x2 ]
sub edi 0x2
mov ecx 0xfc00
mov [ ebp - 0x8 ] edi
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
mov edx [ ebp - 0x28 ]
cmp eax [ esi + 0x7c ]
jb r-xdata
lea eax [ edi + edi ]
push eax
lea eax [ ebp - 0x68 ]
push eax
push ecx
call sub_421604
add esp 0xc
test eax eax
jne r-xdata
add [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
inc edx
inc eax
mov [ ebp - 0x10 ] edx
push eax
push [ ebp + 0x14 ]
mov edx ebx
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
cmp edi [ ebp - 0x1c ]
jne r-xdata
sub edi 0x2
mov [ ebp - 0x8 ] edi
jmp r-xdata
movzx ecx [ edi ]
cmp [ ebp - 0x18 ] ecx
je r-xdata
movzx ecx [ edi ]
add edi 0x2
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov edi [ ebp - 0x8 ]
mov edx [ ebp - 0x20 ]
cmp eax [ esi + 0x88 ]
jbe r-xdata
cmp [ ebp - 0x1c ] edx
je r-xdata
mov edi [ ebp - 0x8 ]
mov edx [ ebp - 0x20 ]
cmp eax [ esi + 0x88 ]
jbe r-xdata
cmp [ ebp - 0x18 ] edx
je r-xdata
movzx eax [ ecx + 0x2 ]
and edx 0x3ff
and eax 0x3ff
shl edx 0xa
or edx eax
mov edi 0x2
add edx 0x10000
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov ax [ edi ]
cmp ax [ esi + 0x34 ]
jne r-xdata
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
jne r-xdata
add eax 0xffffdfd8
cmp eax 0x1
ja r-xdata
cmp edi ecx
jae r-xdata
cmp eax 0xa
je r-xdata
cmp ecx 0x3000
je r-xdata
je r-xdata
cmp ecx 0xa0
jg r-xdata
cmp ecx 0x3000
jne r-xdata
je r-xdata
inc edx
cmp edx [ ebp - 0xc ]
jle r-xdata
cmp ecx 0xa0
jg r-xdata
inc edx
cmp edx [ ebp - 0xc ]
jle r-xdata
cmp ecx 0x2029
jle r-xdata
cmp ecx 0xa
jl r-xdata
inc ecx
cmp ecx edx
jle r-xdata
add eax 0xfffffff6
cmp eax 0x3
ja r-xdata
jmp r-xdata
add edi 0x2
inc edx
mov [ ebp - 0x8 ] edi
cmp edx [ ebp - 0xc ]
jle r-xdata
jmp r-xdata
add edi 0x2
inc edx
mov [ ebp - 0x8 ] edi
cmp edx [ ebp - 0xc ]
jle r-xdata
jmp r-xdata
add edi 0x2
inc edx
mov [ ebp - 0x8 ] edi
cmp edx [ ebp - 0xc ]
jle r-xdata
mov edx [ ebp - 0x28 ]
mov ax [ edi ]
cmp ax [ esi + 0x34 ]
jne r-xdata
cmp edi ecx
jae r-xdata
jmp r-xdata
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp ecx 0x85
je r-xdata
je r-xdata
cmp ecx 0x205f
ja r-xdata
je r-xdata
cmp ecx 0x205f
ja r-xdata
je r-xdata
cmp ecx 0x2028
jb r-xdata
je r-xdata
lea eax [ ecx - 0x2028 ]
cmp eax 0x1
ja r-xdata
je r-xdata
inc edx
cmp edx [ ebp - 0xc ]
jle r-xdata
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x4
jne r-xdata
add edi 0x2
inc edx
mov [ ebp - 0x8 ] edi
cmp edx [ ebp - 0xc ]
jle r-xdata
mov ecx [ ebp - 0x14 ]
inc ecx
mov [ ebp - 0x14 ] ecx
cmp ecx eax
jle r-xdata
mov ax [ edi ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
mov eax [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0xc ]
add edi 0x2
inc edx
mov [ ebp - 0x8 ] edi
cmp edx [ ebp - 0xc ]
jle r-xdata
mov ecx [ ebp - 0x14 ]
inc ecx
mov [ ebp - 0x14 ] ecx
cmp ecx eax
jle r-xdata
mov ax [ edi ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
mov eax [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0xc ]
add edi 0x2
inc edx
mov [ ebp - 0x8 ] edi
cmp edx [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
cmp edi [ esi + 0x88 ]
jbe r-xdata
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx ecx [ eax * 8 + r--data ]
mov eax 0x1
shl eax cl
test [ esi * 4 + r--data ] eax
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov [ ebp - 0x14 ] 0x2
add ecx 0x10000
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
inc ecx
mov [ ebp - 0x14 ] ecx
cmp ecx edx
jle r-xdata
cmp eax 0x8
je r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
inc ecx
mov [ ebp - 0x14 ] ecx
cmp ecx edx
jle r-xdata
xor eax eax
jmp r-xdata
cmp ecx 0x3000
je r-xdata
lea eax [ ecx - 0x2000 ]
cmp eax 0x29
ja r-xdata
mov ecx [ ebp - 0x14 ]
inc ecx
mov [ ebp - 0x14 ] ecx
cmp ecx edx
jle r-xdata
cmp ecx 0xa0
je r-xdata
je r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0xc ]
inc ecx
mov [ ebp - 0x2c ] ecx
cmp ecx edx
jle r-xdata
cmp edx 0x5f
je r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp ecx 0xa0
jb r-xdata
cmp edi [ ebp - 0x10 ]
je r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov edx [ esi + 0x18 ]
test edx edx
je r-xdata
cmp edi [ esi + 0x88 ]
jbe r-xdata
movzx eax [ edi ]
cmp eax 0xd
jne r-xdata
movzx eax [ edi ]
cmp eax 0x180e
jg r-xdata
movzx eax [ edi ]
cmp eax 0x180e
jg r-xdata
movzx eax [ edi ]
cmp eax 0x85
jg r-xdata
movzx eax [ edi ]
cmp eax 0x85
jg r-xdata
movzx eax [ edi ]
mov ecx 0xff
cmp ax cx
ja r-xdata
movzx eax [ edi ]
mov ecx 0xff
cmp ax cx
ja r-xdata
movzx eax [ edi ]
mov ecx 0xff
cmp ax cx
ja r-xdata
movzx eax [ edi ]
mov ecx 0xff
cmp ax cx
ja r-xdata
movzx eax [ edi ]
mov ecx 0xff
cmp ax cx
ja r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
movzx eax [ edi ]
mov ecx 0xff
cmp ax cx
ja r-xdata
lea eax [ edi + 0x2 ]
mov [ ebp - 0x28 ] eax
lea eax [ edi + 0x2 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x8 ] edi
mov ecx [ esi + 0x7c ]
mov eax [ ebp - 0x18 ]
cmp edi [ esi + 0x88 ]
jbe r-xdata
cmp edi [ ebp - 0x10 ]
je r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
movzx ecx [ edi ]
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx ecx [ edi ]
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx ecx [ edi ]
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx ecx [ edi ]
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx ecx [ edi ]
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx ecx [ edi ]
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx ecx [ edi ]
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx ecx [ edi ]
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
movzx ecx [ edi ]
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov ax [ edi ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
movzx ecx [ edi ]
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov ebx [ ebp - 0x24 ]
mov esi ecx
sub edi 0x2
mov [ ebp - 0x8 ] edi
cmp [ ebp - 0x24 ] eax
je r-xdata
mov [ esi + 0x68 ] ecx
cmp [ esi + 0x8c ] ecx
jle r-xdata
inc edx
lea edi [ edi + ecx * 2 ]
mov [ ebp - 0x8 ] edi
cmp edx eax
jl r-xdata
mov ecx 0x2
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jle r-xdata
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp eax 0x9
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov [ ebp - 0x14 ] 0x2
add ecx 0x10000
mov edx [ ebp - 0x3c ]
add eax ecx
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] edx
sete cl
cmp ecx [ ebp - 0x38 ]
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov [ ebp - 0x14 ] 0x2
add ecx 0x10000
add eax ecx
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp eax [ ebp - 0x3c ]
sete cl
cmp ecx [ ebp - 0x38 ]
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov [ ebp - 0x14 ] 0x2
add ecx 0x10000
add eax ecx
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp eax [ ebp - 0x3c ]
sete cl
cmp ecx [ ebp - 0x38 ]
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov [ ebp - 0x14 ] 0x2
add ecx 0x10000
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov [ ebp - 0x14 ] 0x2
add ecx 0x10000
mov [ esi + 0x68 ] eax
cmp [ esi + 0x8c ] eax
jle r-xdata
cmp ecx 0x202f
ja r-xdata
je r-xdata
mov eax [ ebp - 0x2c ]
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov eax 0x2
add ecx 0x10000
mov [ ebp - 0x2c ] eax
jmp r-xdata
add ecx eax
movzx eax [ ecx * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
dec eax
or eax 0xffffff80
inc eax
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov [ ebp - 0x2c ] 0x2
add ecx 0x10000
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x38 ] 0x0
je r-xdata
lea eax [ eax + 0x4 ]
cmp ecx edx
je r-xdata
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov [ ebp - 0x14 ] 0x2
add ecx 0x10000
mov [ esi + 0x68 ] edx
cmp [ esi + 0x8c ] edx
jg r-xdata
mov eax 0x1
cmp ecx 0x40
je r-xdata
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov edx 0x2
add ecx 0x10000
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0x180e
ja r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
mov edx [ ebp - 0x14 ]
sar eax 0x7
movzx ecx [ eax + r--data ]
mov eax edx
shl ecx 0x7
and eax 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax [ ebp - 0x3c ]
mov edx [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
cmp ecx edx
jb r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp ecx 0x24
je r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx ecx [ eax * 8 + r--data ]
mov eax [ esi + 0x7c ]
mov [ ebp - 0x14 ] ecx
cmp edi eax
jae r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
movzx ecx [ edi ]
add eax 0xfffffffa
add edi 0x2
cmp eax 0xf
ja r-xdata
mov edx [ esi + 0x18 ]
test edx edx
je r-xdata
movzx ecx [ edi ]
add edi 0x2
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
je r-xdata
mov edx [ esi + 0x18 ]
test edx edx
je r-xdata
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov ecx 0x88
cmp ax cx
jb r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
cmp edi [ esi + 0x7c ]
jb r-xdata
lea eax [ edx + edx ]
push eax
lea eax [ ebp - 0x68 ]
push eax
push edi
call sub_421604
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc [ ebp - 0x10 ]
inc eax
push eax
push [ ebp + 0x14 ]
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
mov ecx [ ebp - 0x2c ]
add esp 0x14
mov edx [ ebp - 0x1c ]
test eax eax
je r-xdata
cmp edi [ ebp - 0x28 ]
jne r-xdata
sub edi 0x2
mov [ ebp - 0x8 ] edi
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x88 ]
jbe r-xdata
lea eax [ edi + edi ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x1c ] ecx
je r-xdata
cmp [ ebp - 0x18 ] ecx
je r-xdata
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
sub edi 0x2
mov [ ebp - 0x8 ] edi
cmp edi [ ebp - 0x20 ]
jne r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
add eax 0x2
inc ecx
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jl r-xdata
mov ax [ edi - 0x2 ]
sub edi 0x2
mov ecx 0xfc00
mov [ ebp - 0x8 ] edi
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
mov [ esi + 0x68 ] edi
cmp [ esi + 0x8c ] edi
jg r-xdata
mov eax [ ebp - 0x8 ]
cmp [ ebp - 0x1c ] edx
je r-xdata
mov edx [ ebp - 0x14 ]
add edi 0x2
inc edx
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x14 ] edx
cmp edx [ ebp - 0xc ]
jle r-xdata
lea eax [ edi + 0x2 ]
cmp eax [ esi + 0x7c ]
jb r-xdata
cmp edx 0x1
je r-xdata
inc edx
cmp edx [ ebp - 0xc ]
jle r-xdata
cmp [ edi ] 0xa
jne r-xdata
add eax 0xfffffff5
cmp eax 0x1
ja r-xdata
inc edx
cmp edx [ ebp - 0xc ]
jle r-xdata
cmp ecx 0x2000
jl r-xdata
cmp ecx 0x1680
je r-xdata
je r-xdata
cmp ecx 0x2000
jl r-xdata
jmp r-xdata
cmp ecx 0x1680
jne r-xdata
je r-xdata
jmp r-xdata
cmp ecx 0xd
jle r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
add edi 0x2
add edx 0x2
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x28 ] edx
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edx [ esi + 0x7c ]
jb r-xdata
cmp edx 0x1
je r-xdata
cmp [ esi + 0x6c ] 0x0
jne r-xdata
lea eax [ ecx - 0x2028 ]
cmp eax 0x1
ja r-xdata
cmp edi edx
jae r-xdata
cmp ecx 0xa
je r-xdata
cmp ecx 0x3000
je r-xdata
je r-xdata
cmp ecx 0xa0
ja r-xdata
cmp ecx 0x3000
jne r-xdata
je r-xdata
inc edx
cmp edx [ ebp - 0xc ]
jle r-xdata
cmp ecx 0xa0
ja r-xdata
inc edx
cmp edx [ ebp - 0xc ]
jle r-xdata
cmp ecx 0x2029
jbe r-xdata
cmp ecx 0xa
jb r-xdata
inc edx
cmp edx [ ebp - 0xc ]
jle r-xdata
lea eax [ ecx - 0xa ]
cmp eax 0x3
ja r-xdata
jmp r-xdata
jmp r-xdata
cmp edi edx
jae r-xdata
jmp r-xdata
add edi 0x2
mov [ ebp - 0x8 ] edi
jmp r-xdata
cmp edi edx
jae r-xdata
jmp r-xdata
add edi 0x2
mov [ ebp - 0x8 ] edi
jmp r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
mov eax [ ebp - 0x2c ]
mov eax [ ebp - 0x14 ]
mov esi ecx
lea edi [ edi + eax * 2 ]
mov eax [ ebp - 0x2c ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
cmp eax [ ebp - 0x38 ]
je r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
movzx eax [ eax + lookup_table_4501ca ]
jmp [ eax * 4 + jump_table_4501c2 ]
cmp edi [ esi + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
cmp ecx 0x1680
jne r-xdata
cmp ecx 0x9
jb r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
xor eax eax
jmp r-xdata
cmp ecx 0xe000
jae r-xdata
cmp ecx 0xd7ff
jbe r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
mov edx [ esi + 0x1c ]
lea eax [ edx + edx ]
sub ecx eax
cmp edi ecx
ja r-xdata
lea eax [ esi + 0x1c ]
push 0x0
push eax
push ecx
mov ecx edi
call sub_415e9f
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jle r-xdata
cmp eax 0xa
je r-xdata
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp edi ecx
jae r-xdata
cmp eax 0x205f
jg r-xdata
je r-xdata
cmp eax 0x205f
jg r-xdata
je r-xdata
cmp eax 0x2028
jl r-xdata
je r-xdata
add eax 0xffffdfd8
cmp eax 0x1
ja r-xdata
je r-xdata
add edi 0x2
inc edx
mov [ ebp - 0x8 ] edi
cmp edx [ ebp - 0x18 ]
jl r-xdata
mov ecx eax
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x4
jne r-xdata
mov ecx eax
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x4
je r-xdata
add edi 0x2
inc edx
mov [ ebp - 0x8 ] edi
cmp edx [ ebp - 0x18 ]
jl r-xdata
mov ecx eax
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x1
jne r-xdata
mov ecx eax
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x1
je r-xdata
add edi 0x2
inc edx
mov [ ebp - 0x8 ] edi
cmp edx [ ebp - 0x18 ]
jl r-xdata
mov ecx eax
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x10
jne r-xdata
cmp edi [ esi + 0x88 ]
jbe r-xdata
mov ecx eax
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x10
je r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov edx [ esi + 0x18 ]
test edx edx
je r-xdata
mov edx [ esi + 0x18 ]
test edx edx
je r-xdata
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp edi ecx
jae r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jle r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
cmp edi [ esi + 0x88 ]
jbe r-xdata
cmp ecx 0xd
jne r-xdata
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov edx 0x2
add ecx 0x10000
cmp ecx 0x180e
ja r-xdata
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov edx 0x2
add ecx 0x10000
cmp ecx 0x85
ja r-xdata
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov edx 0x2
add ecx 0x10000
cmp ecx 0x100
jae r-xdata
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov edx 0x2
add ecx 0x10000
cmp ecx 0x100
jae r-xdata
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov edx 0x2
add ecx 0x10000
cmp ecx 0x100
jae r-xdata
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov edx 0x2
add ecx 0x10000
cmp ecx 0x100
jae r-xdata
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov edx 0x2
add ecx 0x10000
cmp ecx 0x100
jae r-xdata
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov edx 0x2
add ecx 0x10000
cmp edi [ esi + 0x88 ]
jbe r-xdata
cmp ecx 0x100
jae r-xdata
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov edx 0x2
add ecx 0x10000
movzx ecx [ edi ]
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
sub edi 0x2
mov [ ebp - 0x8 ] edi
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp edi eax
jb r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp edi [ ebp - 0x10 ]
jne r-xdata
mov ax [ edi ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
jmp r-xdata
mov ecx 0x1
cmp edi [ esi + 0x7c ]
jae r-xdata
jmp r-xdata
jmp r-xdata
mov eax 0x1
cmp eax 0x5
je r-xdata
mov eax [ ebp - 0x14 ]
lea edi [ edi + eax * 2 ]
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
mov eax [ ebp - 0x14 ]
lea edi [ edi + eax * 2 ]
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
mov eax [ ebp - 0x14 ]
lea edi [ edi + eax * 2 ]
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
mov eax 0x1
cmp eax 0x3
je r-xdata
jmp r-xdata
cmp ecx 0x205f
je r-xdata
je r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp ecx 0x85
ja r-xdata
mov eax 0x1
cmp eax 0x3
je r-xdata
mov eax [ ebp - 0x14 ]
lea edi [ edi + eax * 2 ]
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp [ ebp - 0x38 ] 0x0
je r-xdata
mov edx [ eax ]
cmp ecx edx
jae r-xdata
mov eax [ ebp - 0xc ]
lea edi [ edi + edx * 2 ]
inc eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp ecx 0x60
je r-xdata
mov eax [ ebp + 0x18 ]
inc ecx
inc eax
mov [ ebp - 0xc ] ecx
push eax
push [ ebp + 0x14 ]
mov edx ebx
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
add edi 0x2
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp eax 0x9
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
mov edx [ ebp - 0x3c ]
add eax ecx
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] edx
sete cl
cmp ecx [ ebp - 0x38 ]
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
add eax ecx
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp eax [ ebp - 0x3c ]
sete cl
cmp ecx [ ebp - 0x38 ]
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
add eax ecx
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp eax [ ebp - 0x3c ]
sete cl
cmp ecx [ ebp - 0x38 ]
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
cmp ecx 0x202f
ja r-xdata
je r-xdata
mov eax [ ebp - 0xc ]
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
add ecx eax
movzx eax [ ecx * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
je r-xdata
dec eax
or eax 0xffffff80
inc eax
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x38 ] 0x0
je r-xdata
lea eax [ eax + 0x4 ]
cmp ecx edx
je r-xdata
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
mov eax 0x1
cmp ecx 0x40
je r-xdata
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov ebx ecx
jmp [ eax * 4 + r-xdata ]
mov edx [ esi + 0x1c ]
lea eax [ edx + edx ]
sub ecx eax
cmp edi ecx
ja r-xdata
push 0x0
lea eax [ esi + 0x1c ]
push eax
push ecx
mov ecx edi
call sub_415e9f
add esp 0xc
test eax eax
jne r-xdata
movzx eax [ edi ]
and ecx 0x3ff
shl ecx 0xa
and eax 0x3ff
or ecx eax
add ecx 0x10000
add edi 0x2
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax 0xc
jne r-xdata
mov edx [ esi + 0x1c ]
lea eax [ edx + edx ]
sub ecx eax
cmp edi ecx
ja r-xdata
push [ ebp - 0x24 ]
lea eax [ esi + 0x1c ]
push eax
push ecx
mov ecx edi
call sub_415e9f
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
lea edx [ ebx + 0x4 ]
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
add ebx 0x4
jmp r-xdata
mov eax 0x81
cmp [ ecx ] ax
je r-xdata
mov [ esi + 0xb8 ] ebx
mov eax 0xfffffc1b
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
jmp r-xdata
cmp edi [ esi + 0x88 ]
jmp r-xdata
mov ecx [ ebp - 0x28 ]
lea edi [ edi + ecx * 2 ]
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
inc eax
add edi 0x2
mov [ ebp - 0x10 ] eax
mov edx ebx
mov eax [ ebp + 0x18 ]
mov ecx edi
inc eax
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] ecx
je r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
cmp edi [ ebp - 0x20 ]
jne r-xdata
sub edi 0x2
mov [ ebp - 0x8 ] edi
jmp r-xdata
lea ecx [ ecx + edi * 2 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
inc ecx
mov [ ebp - 0x10 ] ecx
cmp ecx [ ebp - 0xc ]
jl r-xdata
jmp r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov ax [ edi + 0x2 ]
cmp ax [ esi + 0x36 ]
je r-xdata
cmp edi ecx
jae r-xdata
jmp r-xdata
add edi 0x2
mov [ ebp - 0x8 ] edi
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp ecx 0x200a
jle r-xdata
jmp r-xdata
cmp ecx 0x9
je r-xdata
cmp ecx 0x200a
jle r-xdata
jmp r-xdata
cmp ecx 0x9
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
inc edx
mov [ ebp - 0x14 ] edx
cmp edx [ ebp - 0xc ]
jle r-xdata
mov ax [ edi ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov edx [ ebp - 0x28 ]
mov ax [ edx ]
cmp ax [ esi + 0x36 ]
je r-xdata
mov ecx [ ebp - 0x14 ]
inc ecx
mov [ ebp - 0x14 ] ecx
cmp ecx [ ebp - 0xc ]
jle r-xdata
cmp [ edi ] 0xa
jne r-xdata
lea eax [ ecx - 0xb ]
cmp eax 0x1
ja r-xdata
inc edx
cmp edx [ ebp - 0xc ]
jle r-xdata
cmp ecx 0x2000
jb r-xdata
cmp ecx 0x1680
je r-xdata
je r-xdata
cmp ecx 0x2000
jb r-xdata
jmp r-xdata
cmp ecx 0x1680
jne r-xdata
je r-xdata
jmp r-xdata
cmp ecx 0xd
jbe r-xdata
jmp r-xdata
jmp r-xdata
movzx ecx [ edi ]
mov [ ebp - 0x14 ] 0x1
test ebx ebx
je r-xdata
jmp r-xdata
cmp eax [ ebp - 0x38 ]
je r-xdata
add eax ecx
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] 0x6
sete cl
cmp ecx [ ebp - 0x38 ]
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
mov eax [ ebp - 0x24 ]
jmp r-xdata
cmp ecx 0xd
jbe r-xdata
cmp eax [ ebp - 0x38 ]
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
sub edi 0x2
cmp [ ebp - 0x1c ] 0x11
mov [ ebp - 0x8 ] edi
jne r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov ax [ edi ]
cmp ax [ esi + 0x34 ]
jne r-xdata
jmp r-xdata
jmp r-xdata
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp [ esi + 0x6c ] 0x0
jne r-xdata
cmp [ edi ] 0xa
je r-xdata
cmp eax 0x3000
je r-xdata
je r-xdata
cmp eax 0xa0
jg r-xdata
cmp eax 0x3000
jne r-xdata
je r-xdata
add edi 0x2
inc edx
mov [ ebp - 0x8 ] edi
cmp edx ecx
jl r-xdata
cmp eax 0xa0
jg r-xdata
add edi 0x2
inc edx
mov [ ebp - 0x8 ] edi
cmp edx ecx
jl r-xdata
cmp eax 0x2029
jle r-xdata
cmp eax 0xa
jl r-xdata
add edi 0x2
inc edx
mov [ ebp - 0x8 ] edi
cmp edx ecx
jl r-xdata
add eax 0xfffffff6
cmp eax 0x3
jbe r-xdata
jmp r-xdata
add edi 0x2
inc edx
mov [ ebp - 0x8 ] edi
cmp edx [ ebp - 0x18 ]
jl r-xdata
jmp r-xdata
add edi 0x2
inc edx
mov [ ebp - 0x8 ] edi
cmp edx [ ebp - 0x18 ]
jl r-xdata
jmp r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
add edi 0x2
inc edx
mov [ ebp - 0x8 ] edi
cmp edx [ ebp - 0x18 ]
jl r-xdata
mov edx [ esi + 0x1c ]
lea eax [ edx + edx ]
sub ecx eax
cmp edi ecx
ja r-xdata
push [ ebp - 0x24 ]
lea eax [ esi + 0x1c ]
push eax
push ecx
mov ecx edi
call sub_415e9f
add esp 0xc
test eax eax
jne r-xdata
mov edx [ esi + 0x1c ]
lea eax [ edx + edx ]
sub ecx eax
cmp edi ecx
ja r-xdata
push [ ebp - 0x24 ]
lea eax [ esi + 0x1c ]
push eax
push ecx
mov ecx edi
call sub_415e9f
add esp 0xc
test eax eax
jne r-xdata
inc edx
cmp edx eax
jl r-xdata
mov ax [ edi ]
mov [ ebp - 0x14 ] 0xfc00
and ax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] 0xdc00
cmp ax [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
jne r-xdata
jmp r-xdata
mov ax [ edi - 0x2 ]
sub edi 0x2
mov ecx 0xfc00
mov [ ebp - 0x8 ] edi
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
mov [ esi + 0x68 ] edx
cmp [ esi + 0x8c ] edx
jle r-xdata
cmp ecx 0xa
je r-xdata
mov eax [ esi + 0x7c ]
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp edi eax
jae r-xdata
cmp ecx 0x205f
ja r-xdata
je r-xdata
lea eax [ ecx - 0x2028 ]
cmp eax 0x1
ja r-xdata
je r-xdata
mov eax [ ebp - 0xc ]
lea edi [ edi + edx * 2 ]
inc eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x4
jne r-xdata
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x4
je r-xdata
mov eax [ ebp - 0xc ]
lea edi [ edi + edx * 2 ]
inc eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x1
jne r-xdata
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
lea edi [ edi + edx * 2 ]
inc eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x10
jne r-xdata
mov [ esi + 0x68 ] edx
cmp [ esi + 0x8c ] edx
jg r-xdata
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x10
je r-xdata
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
add ecx 0x10000
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
mov [ ebp - 0x2c ] eax
dec ecx
or ecx 0xffffff80
inc ecx
jmp r-xdata
cmp edi [ esi + 0x88 ]
jbe r-xdata
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx ecx [ eax * 8 + r--data ]
mov eax 0x1
shl eax cl
test [ esi * 4 + r--data ] eax
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov [ ebp - 0x14 ] 0x2
add ecx 0x10000
jmp r-xdata
sub edi 0x2
mov [ ebp - 0x8 ] edi
mov eax [ ebp - 0x14 ]
lea edi [ edi + eax * 2 ]
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax 0x8
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
lea edi [ edi + eax * 2 ]
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
xor eax eax
jmp r-xdata
cmp ecx 0x3000
je r-xdata
lea eax [ ecx - 0x2000 ]
cmp eax 0x29
ja r-xdata
inc edx
lea edi [ edi + eax * 2 ]
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] edx
cmp edx [ ebp - 0x18 ]
jl r-xdata
cmp ecx 0xa0
je r-xdata
je r-xdata
mov eax [ ebp - 0x2c ]
lea edi [ edi + eax * 2 ]
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp edx 0x5f
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp ecx 0xa0
jb r-xdata
jmp r-xdata
mov eax 0x1
cmp eax 0x5
je r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc [ ebp - 0xc ]
inc eax
push eax
push [ ebp + 0x14 ]
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc [ ebp - 0xc ]
inc eax
push eax
push [ ebp + 0x14 ]
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc [ ebp - 0xc ]
inc eax
push eax
push [ ebp + 0x14 ]
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
mov eax 0x1
cmp eax 0x3
je r-xdata
cmp ecx 0x205f
je r-xdata
je r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp ecx 0x85
ja r-xdata
mov eax 0x1
cmp eax 0x3
je r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc [ ebp - 0xc ]
inc eax
push eax
push [ ebp + 0x14 ]
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp ecx edx
jae r-xdata
mov eax [ ebp + 0x18 ]
inc edx
inc eax
mov [ ebp - 0xc ] edx
push eax
push [ ebp + 0x14 ]
mov edx ebx
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
cmp ecx 0x60
je r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc [ ebp - 0xc ]
inc eax
push eax
push [ ebp + 0x14 ]
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
cmp edi eax
jb r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov ax [ edi ]
cmp ax [ esi + 0x34 ]
jne r-xdata
jmp r-xdata
add eax 0xfffffffa
cmp eax 0xf
ja r-xdata
cmp [ esi + 0x8c ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov ax [ edi ]
cmp ax [ esi + 0x34 ]
jne r-xdata
mov eax [ ebp - 0x1c ]
mov [ esi + 0xb8 ] eax
mov eax 0xfffffc1b
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
inc edx
inc eax
mov [ ebp - 0x10 ] edx
push eax
push [ ebp + 0x14 ]
mov edx ebx
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc eax
mov ecx edi
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
cmp [ esi + 0x1c ] 0x2
jne r-xdata
cmp ecx 0x202f
je r-xdata
cmp ecx 0x20
je r-xdata
cmp ecx 0x202f
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ esi + 0x7c ]
cmp edi ecx
jae r-xdata
jmp r-xdata
add edi 0x2
add edx 0x2
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x28 ] edx
cmp [ esi + 0x1c ] 0x2
jne r-xdata
jmp r-xdata
cmp edi edx
jae r-xdata
jmp r-xdata
add edi 0x2
mov [ ebp - 0x8 ] edi
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp ecx 0x200a
jbe r-xdata
jmp r-xdata
cmp ecx 0x9
je r-xdata
cmp ecx 0x200a
jbe r-xdata
jmp r-xdata
cmp ecx 0x9
je r-xdata
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov ebx [ ebp - 0x30 ]
mov [ ebp - 0x8 ] edi
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x24 ]
jmp r-xdata
cmp ecx 0x20
jne r-xdata
cmp eax [ ebp - 0x38 ]
je r-xdata
cmp edi ecx
cmp edi ecx
jbe r-xdata
mov eax [ ebp - 0xc ]
add edi 0x2
inc eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
lea eax [ edi + 0x2 ]
cmp eax [ esi + 0x7c ]
jb r-xdata
cmp edx 0x1
je r-xdata
cmp edi ecx
jae r-xdata
jmp r-xdata
cmp eax 0xb
je r-xdata
jmp r-xdata
add edi 0x2
inc edx
mov [ ebp - 0x8 ] edi
cmp edx ecx
jl r-xdata
cmp eax 0x2000
jl r-xdata
cmp eax 0x1680
jne r-xdata
je r-xdata
cmp eax 0x2000
jl r-xdata
jmp r-xdata
cmp eax 0x1680
je r-xdata
je r-xdata
jmp r-xdata
cmp eax 0xd
jg r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x28 ]
mov ax [ edi ]
cmp ax [ esi + 0x34 ]
jne r-xdata
mov edx [ ebp - 0x28 ]
mov ax [ edi ]
cmp ax [ esi + 0x34 ]
jne r-xdata
cmp edi ecx
jae r-xdata
jmp r-xdata
add edi 0x2
mov [ ebp - 0x8 ] edi
cmp [ ebp - 0x1c ] 0x11
mov ecx [ ebp - 0x10 ]
jne r-xdata
sub edi 0x2
mov [ ebp - 0x8 ] edi
jmp r-xdata
mov eax [ esi + 0x7c ]
lea edi [ edi + edx * 2 ]
cmp [ esi + 0x6c ] 0x0
jne r-xdata
cmp [ edi ] 0xa
jne r-xdata
cmp ecx 0x3000
je r-xdata
je r-xdata
mov ecx 0x1
cmp ecx 0xa0
ja r-xdata
xor ecx ecx
mov ecx 0x1
jmp r-xdata
cmp ecx 0xa
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
lea edi [ edi + edx * 2 ]
inc eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
lea edi [ edi + edx * 2 ]
inc eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
lea edi [ edi + edx * 2 ]
inc eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp [ ebp - 0x24 ] 0x0
lea edx [ edi - 0x2 ]
mov [ ebp - 0x14 ] edx
jne r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
mov eax [ ebp - 0x2c ]
mov eax [ ebp - 0x14 ]
mov esi ecx
lea edi [ edi + eax * 2 ]
mov eax [ ebp - 0x2c ]
cmp edi eax
jb r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
cmp eax [ ebp - 0x38 ]
je r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
movzx eax [ eax + lookup_table_4502aa ]
jmp [ eax * 4 + jump_table_4502a2 ]
jmp r-xdata
cmp ecx 0x1680
jne r-xdata
cmp ecx 0x9
jb r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
cmp ecx 0xe000
jae r-xdata
cmp ecx 0xd7ff
jbe r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc [ ebp - 0xc ]
inc eax
push eax
push [ ebp + 0x14 ]
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
cmp eax 0x8
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc [ ebp - 0xc ]
inc eax
push eax
push [ ebp + 0x14 ]
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
cmp ecx 0x3000
je r-xdata
lea eax [ ecx - 0x2000 ]
cmp eax 0x29
ja r-xdata
inc eax
mov edx ebx
mov [ ebp - 0xc ] eax
mov ecx edi
mov eax [ ebp + 0x18 ]
inc eax
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
cmp ecx 0xa0
je r-xdata
je r-xdata
mov eax [ ebp + 0x18 ]
mov edx ebx
inc [ ebp - 0xc ]
inc eax
push eax
push [ ebp + 0x14 ]
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
cmp edx 0x5f
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp ecx 0xa0
jb r-xdata
jmp r-xdata
cmp edi [ esi + 0x88 ]
jbe r-xdata
add eax ecx
movzx eax [ eax * 2 + r--data ]
movzx ecx [ eax * 8 + r--data ]
mov eax 0x1
shl eax cl
test [ ebx * 4 + r--data ] eax
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
movzx eax [ edi + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
mov [ ebp - 0x14 ] 0x2
add ecx 0x10000
mov eax [ ebp + 0x18 ]
inc edx
inc eax
mov [ ebp - 0xc ] edx
push eax
push [ ebp + 0x14 ]
mov edx ebx
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
je r-xdata
cmp edi [ esi + 0x7c ]
jb r-xdata
cmp edx 0x1
je r-xdata
jmp [ eax * 4 + jump_table_4503b6 ]
cmp edi [ esi + 0x7c ]
jb r-xdata
mov eax [ ebp + 0x18 ]
inc edx
inc eax
mov [ ebp - 0xc ] edx
push eax
push [ ebp + 0x14 ]
mov edx ebx
mov ecx edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4149c0
add esp 0x14
test eax eax
jne r-xdata
cmp edx 0x1
je r-xdata
jmp r-xdata
mov ax [ edi ]
cmp ax [ esi + 0x34 ]
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ax [ edi ]
cmp ax [ esi + 0x34 ]
jne r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
cmp ecx 0x202f
je r-xdata
cmp ecx 0x20
je r-xdata
cmp ecx 0x202f
jne r-xdata
cmp ecx 0x20
jne r-xdata
jmp r-xdata
jmp r-xdata
jne r-xdata
cmp [ edi ] 0xa
jne r-xdata
jmp r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov ax [ edi + 0x2 ]
cmp ax [ esi + 0x36 ]
je r-xdata
cmp eax 0xc
je r-xdata
inc edx
cmp edx [ ebp - 0x18 ]
jl r-xdata
jmp r-xdata
cmp eax 0x200a
jle r-xdata
jmp r-xdata
cmp eax 0x9
je r-xdata
cmp eax 0x200a
jle r-xdata
jmp r-xdata
cmp eax 0x9
je r-xdata
jmp r-xdata
add edi 0x2
add edx 0x2
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x28 ] edx
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edx [ esi + 0x7c ]
jb r-xdata
cmp edx 0x1
je r-xdata
add edi 0x2
add edx 0x2
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x28 ] edx
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp edx [ esi + 0x7c ]
jb r-xdata
cmp edx 0x1
je r-xdata
cmp edi ecx
cmp edi ecx
jbe r-xdata
mov edx 0x1
cmp edi eax
jae r-xdata
jmp r-xdata
cmp ecx 0xb
je r-xdata
mov ecx [ ebp - 0xc ]
inc ecx
mov [ ebp - 0xc ] ecx
cmp ecx [ ebp - 0x18 ]
jl r-xdata
add edi 0x2
jmp r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx 0x2000
jb r-xdata
mov eax [ ebp - 0xc ]
lea edi [ edi + edx * 2 ]
inc eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp ecx 0x1680
jne r-xdata
je r-xdata
mov eax [ ebp - 0xc ]
lea edi [ edi + edx * 2 ]
inc eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] 0x14
sete al
cmp ecx eax
je r-xdata
cmp ecx 0xd
jbe r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ax [ edx ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
movzx ecx [ edx ]
jmp r-xdata
movzx ecx [ edi ]
mov [ ebp - 0x14 ] 0x1
test ebx ebx
je r-xdata
jmp r-xdata
cmp eax [ ebp - 0x38 ]
je r-xdata
add eax ecx
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] 0x6
sete cl
cmp ecx [ ebp - 0x38 ]
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
mov eax [ ebp - 0x2c ]
jmp r-xdata
cmp ecx 0xd
jbe r-xdata
cmp eax [ ebp - 0x38 ]
je r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
cmp eax [ ebp - 0x38 ]
je r-xdata
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
movzx eax [ eax + lookup_table_45038a ]
jmp [ eax * 4 + jump_table_450382 ]
jmp r-xdata
cmp ecx 0x1680
jne r-xdata
cmp ecx 0x9
jb r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
cmp ecx 0xe000
jae r-xdata
cmp ecx 0xd7ff
jbe r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
mov eax [ esi + 0x7c ]
mov eax [ ebp - 0x14 ]
mov ebx ecx
lea edi [ edi + eax * 2 ]
mov eax [ esi + 0x7c ]
cmp edi eax
jb r-xdata
jmp r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov ax [ edi + 0x2 ]
cmp ax [ esi + 0x36 ]
je r-xdata
cmp ecx 0xd
ja r-xdata
cmp ecx 0x180e
ja r-xdata
cmp ecx 0x180e
ja r-xdata
cmp ecx 0x85
ja r-xdata
cmp ecx 0x85
ja r-xdata
cmp ecx 0x100
jae r-xdata
cmp ecx 0x100
jae r-xdata
cmp ecx 0x100
jae r-xdata
cmp ecx 0x100
jae r-xdata
cmp ecx 0x100
jae r-xdata
cmp ecx 0x100
jae r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
jmp r-xdata
mov ax [ edi + 0x2 ]
cmp ax [ esi + 0x36 ]
je r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp [ edi - 0x2 ] 0xd
jne r-xdata
cmp [ esi + 0x1c ] 0x2
jne r-xdata
cmp eax 0x85
je r-xdata
cmp eax 0x202f
jne r-xdata
cmp eax 0x20
jne r-xdata
cmp eax 0x202f
je r-xdata
cmp eax 0x20
je r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
mov ax [ edi ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov edx [ ebp - 0x28 ]
mov ax [ edx ]
cmp ax [ esi + 0x36 ]
jne r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x18 ]
jl r-xdata
mov ax [ edi ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov edx [ ebp - 0x28 ]
mov ax [ edx ]
cmp ax [ esi + 0x36 ]
jne r-xdata
jmp r-xdata
jne r-xdata
cmp [ edi ] 0xa
jne r-xdata
cmp ecx 0xc
je r-xdata
mov [ ebp - 0x8 ] edi
xor eax eax
cmp [ ebp - 0x1c ] 0x12
sete al
cmp ecx eax
je r-xdata
cmp ecx 0x200a
jbe r-xdata
jmp r-xdata
jmp r-xdata
cmp ecx 0x9
je r-xdata
jmp r-xdata
movzx ecx [ edx ]
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
sub edx 0x2
mov [ ebp - 0x14 ] edx
mov eax ecx
cdq
and edx 0x7f
add eax edx
sar eax 0x7
movzx eax [ eax + r--data ]
shl eax 0x7
and ecx 0x8000007f
jns r-xdata
mov esi [ ebp + 0x10 ]
mov ebx [ ebp - 0x30 ]
mov [ ebp - 0x8 ] edi
mov eax [ ebp - 0x2c ]
mov edx [ ebp - 0xc ]
jmp r-xdata
cmp ecx 0x20
jne r-xdata
cmp eax [ ebp - 0x38 ]
je r-xdata
cmp eax [ ebp - 0x38 ]
je r-xdata
add eax ecx
xor ecx ecx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
cmp [ eax * 4 + r--data ] 0x6
sete cl
cmp ecx [ ebp - 0x38 ]
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
mov eax [ ebp - 0xc ]
jmp r-xdata
cmp ecx 0xd
jbe r-xdata
cmp eax [ ebp - 0x38 ]
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
movzx ecx [ edi ]
mov [ ebp - 0x14 ] 0x1
je r-xdata
jmp r-xdata
cmp [ esi + 0x1c ] 0x2
jne r-xdata
cmp ecx 0x85
je r-xdata
je r-xdata
cmp ecx 0x205f
ja r-xdata
je r-xdata
cmp ecx 0x205f
ja r-xdata
je r-xdata
cmp ecx 0x2028
jb r-xdata
je r-xdata
lea eax [ ecx - 0x2028 ]
cmp eax 0x1
ja r-xdata
je r-xdata
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x4
jne r-xdata
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x4
je r-xdata
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x1
jne r-xdata
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x1
je r-xdata
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x10
jne r-xdata
mov eax [ esi + 0x44 ]
test [ ecx + eax ] 0x10
je r-xdata
cmp [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x18 ]
jge r-xdata
jmp r-xdata
add edi 0xfffffffe
mov [ ebp - 0x8 ] edi
mov ax [ edi ]
cmp ax [ esi + 0x34 ]
jne r-xdata
cmp eax 0x2028
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ esi + 0x7c ]
cmp edi ecx
jae r-xdata
jmp r-xdata
add edi 0x2
add edx 0x2
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x28 ] edx
cmp [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ esi + 0x7c ]
cmp edi ecx
jae r-xdata
jmp r-xdata
add edi 0x2
add edx 0x2
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x28 ] edx
cmp [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
jmp r-xdata
cmp [ edi - 0x2 ] 0xd
jne r-xdata
cmp ecx 0x85
je r-xdata
cmp ecx 0x202f
jne r-xdata
cmp ecx 0x20
jne r-xdata
movzx eax [ edx + 0x2 ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
add ecx 0x10000
add eax ecx
mov ecx [ ebp - 0x2c ]
movzx eax [ eax * 2 + r--data ]
movzx edx [ eax * 8 + r--data ]
mov eax 0x1
shl eax cl
test [ edx * 4 + r--data ] eax
je r-xdata
dec ecx
or ecx 0xffffff80
inc ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
cmp ecx 0x20
jne r-xdata
cmp eax [ ebp - 0x38 ]
je r-xdata
mov ebx [ ebp - 0x30 ]
movzx eax [ esi + 0x34 ]
cmp ecx eax
jne r-xdata
cmp [ esi + 0x6c ] 0x0
jne r-xdata
lea eax [ ecx - 0x2028 ]
cmp eax 0x1
ja r-xdata
cmp edi [ esi + 0x7c ]
jae r-xdata
cmp ecx 0xa
je r-xdata
cmp ecx 0x3000
je r-xdata
je r-xdata
cmp ecx 0xa0
ja r-xdata
cmp ecx 0x3000
jne r-xdata
je r-xdata
cmp ecx 0xa0
ja r-xdata
cmp ecx 0x2029
jbe r-xdata
cmp ecx 0xa
jb r-xdata
jmp r-xdata
lea eax [ ecx - 0xa ]
cmp eax 0x3
ja r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
movzx eax [ esi + 0x34 ]
cmp ecx eax
jne r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
cmp eax 0x2029
jne r-xdata
mov ax [ edi ]
cmp ax [ esi + 0x34 ]
jne r-xdata
mov ax [ edi ]
cmp ax [ esi + 0x34 ]
jne r-xdata
add edi 0xfffffffe
mov [ ebp - 0x8 ] edi
cmp ecx 0x2028
je r-xdata
jmp r-xdata
mov edi [ ebp - 0x14 ]
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x2c ] edx
jmp r-xdata
jmp r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
jmp r-xdata
cmp [ edi ] 0xa
jne r-xdata
lea eax [ ecx - 0xb ]
cmp eax 0x1
ja r-xdata
jmp r-xdata
cmp ecx 0x2000
jb r-xdata
cmp ecx 0x1680
je r-xdata
je r-xdata
jmp r-xdata
cmp ecx 0x2000
jb r-xdata
cmp ecx 0x1680
jne r-xdata
je r-xdata
jmp r-xdata
cmp ecx 0xd
jbe r-xdata
jmp r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ esi + 0x8c ] 0x1
jg r-xdata
cmp ecx 0x2029
jne r-xdata
cmp edi [ ebp - 0x10 ]
je r-xdata
jmp r-xdata
add edi 0x2
jmp r-xdata
jmp r-xdata
cmp ecx 0x200a
jbe r-xdata
jmp r-xdata
cmp ecx 0x9
je r-xdata
cmp ecx 0x200a
jbe r-xdata
jmp r-xdata
cmp ecx 0x9
je r-xdata
jmp r-xdata
jmp r-xdata
cmp ecx 0x202f
je r-xdata
cmp ecx 0x20
je r-xdata
cmp ecx 0x202f
jne r-xdata
cmp ecx 0x20
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub_415608
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
xor eax eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
cmp [ edi ] 0xffffffff
je r-xdata
mov edx [ esi + 0x1c ]
cmp [ edi ] edx
jg r-xdata
push [ esi + 0x24 ]
mov eax [ esi + 0x34 ]
push [ esi + 0x20 ]
or eax [ esi + 0x2c ]
push eax
push [ edi ]
push edx
push [ esi ]
mov edx [ esi + 0x18 ]
call sub_414140
add esp 0x18
mov [ esi + 0x28 ] eax
test eax eax
jle r-xdata
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ eax + 0x4 ]
and [ esi + 0x2c ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov [ edi ] ecx
mov eax [ esi + 0x28 ]
mov edx [ eax ]
cmp edx [ eax + 0x4 ]
je r-xdata
and [ esi + 0x2c ] 0x0
inc [ edi ]
jmp r-xdata
mov eax [ esi + 0x1c ]
cmp edx eax
jne r-xdata
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
mov [ esi + 0x2c ] 0x10000010
jmp r-xdata
lea ecx [ eax + 0x1 ]
jmp r-xdata
sub_415680
push ebp
mov ebp esp
sub esp 0x4c
mov [ ebp - 0xc ] ecx
mov eax 0x8
xor ecx ecx
mov [ ebp - 0x24 ] 0x0
mov edx 0x2
mov [ ebp - 0x20 ] 0x8
mul edx
push ebx
push esi
seto cl
neg ecx
or ecx eax
push edi
push ecx
call sub_420f36
add esp 0x4
mov [ ebp - 0x28 ] eax
xor ecx ecx
mov [ eax ] cx
push 0x4
call sub_420f36
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
test esi esi
je r-xdata
xor esi esi
mov [ ebp - 0x14 ] esi
jmp r-xdata
mov [ esi ] 0x1
mov ebx [ ebp + 0xc ]
xor edi edi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] edi
mov ecx [ ebx + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
dec eax
mov [ ecx ] eax
mov ecx ebx
call sub_408189
xor ecx ecx
mov [ ebx + 0x8 ] 0x8
mov eax 0x8
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420ee5
add esp 0x4
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebx ]
xor ecx ecx
mov [ ebx + 0x4 ] edi
mov [ eax ] cx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
jle r-xdata
xor eax eax
mov [ ebp - 0x30 ] 0x8
mov [ ebp - 0x8 ] eax
xor ecx ecx
mov [ ebp - 0x34 ] eax
mov edx 0x2
mov eax 0x8
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
add esp 0x4
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov [ ebp - 0x38 ] eax
mov [ eax ] cx
push 0x4
call sub_420f36
mov ecx eax
add esp 0x4
mov [ ebp - 0xc ] ecx
test ecx ecx
je r-xdata
fld [ r--data ]
fld [ r--data ]
fld [ r--data ]
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov [ ecx ] 0x1
lea edx [ ecx + eax * 2 ]
jmp r-xdata
lea edx [ ecx + edi * 2 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x2c ] ecx
mov edx [ eax + 0x4 ]
cmp edi edx
ja r-xdata
mov edi edx
jmp r-xdata
mov eax edx
sub eax edi
mov [ ebp + 0xc ] eax
jne r-xdata
cmp [ edx ] 0x5c
je r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi eax
je r-xdata
cmp edi eax
jae r-xdata
cmp edi edx
jae r-xdata
mov edi [ ebp - 0x4 ]
mov eax [ esi + 0x4 ]
cmp edi eax
jl r-xdata
fstp st2
mov ecx esi
fstp st0
push edi
fstp st0
call sub_407b20
cmp [ eax ] 0x5c
je r-xdata
lea edx [ ecx + eax * 2 ]
jmp r-xdata
lea edx [ ecx + edi * 2 ]
cmp eax 0xffffffff
je r-xdata
push ebx
lea eax [ ebp - 0x48 ]
mov ecx ebx
push eax
call sub_457f03
push eax
mov ecx ebx
call sub_4081a7
lea ecx [ ebp - 0x48 ]
call sub_405a64
jmp r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov ecx [ esi ]
cmp edi eax
jae r-xdata
mov esi [ ebp - 0x1c ]
fstp st2
fstp st0
mov [ ebp - 0x14 ] esi
fstp st0
push edi
inc edi
mov ecx esi
mov [ ebp - 0x4 ] edi
call sub_407b20
mov ecx ebx
movzx eax [ eax ]
push eax
call sub_407a84
jmp r-xdata
push edi
mov ecx esi
call sub_407b20
cmp [ eax ] 0x24
je r-xdata
cmp [ edx ] 0x24
je r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
fstp st2
push eax
fstp st0
push esi
fstp st0
call sub_45f825
test eax eax
jns r-xdata
mov edx edi
inc edi
mov [ ebp - 0x4 ] edi
cmp edx eax
jae r-xdata
mov [ ebp + 0xc ] eax
add eax edi
cmp eax edx
mov eax [ ebp + 0xc ]
jbe r-xdata
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebx + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jle r-xdata
dec [ ecx ]
jne r-xdata
fld [ r--data ]
fld [ r--data ]
fld [ r--data ]
jmp r-xdata
push edi
mov ecx esi
call sub_407b20
movzx eax [ eax ]
push eax
call sub_423ddf
add esp 0x4
test eax eax
je r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0xc ]
push eax
call sub_456511
lea eax [ ebp - 0x28 ]
mov ecx ebx
push eax
call sub_407c8e
inc [ ebp - 0x10 ]
mov edi [ ebp - 0x4 ]
mov edi [ ebp - 0x4 ]
lea eax [ ecx + eax * 2 ]
jmp r-xdata
lea eax [ ecx + edx * 2 ]
push eax
lea ecx [ ebp - 0x38 ]
call sub_408087
mov eax [ ebp - 0x38 ]
mov esi [ ebp + 0xc ]
lea eax [ edx - 0x1 ]
mov [ ecx ] eax
lea ecx [ ebp - 0x38 ]
call sub_408189
mov esi [ ebp + 0xc ]
lea eax [ esi + 0x1 ]
push eax
call sub_408170
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
add esp 0x4
jmp r-xdata
mov edx [ ecx ]
cmp edx 0x1
jle r-xdata
mov eax [ ebx + 0x4 ]
mov ecx ebx
add eax edx
push eax
call sub_407cb3
dec eax
mov [ ecx ] eax
mov ecx ebx
call sub_408189
mov ecx [ ebp - 0x8 ]
mov eax [ ebx + 0x4 ]
inc ecx
add eax ecx
push eax
call sub_408170
xor ecx ecx
mov [ ebx + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov ecx [ ebx + 0x4 ]
add esp 0x4
mov esi eax
lea ecx [ ecx * 2 + 0x2 ]
push ecx
push [ ebx ]
push esi
call sub_420fc0
mov [ ebx ] esi
add esp 0xc
mov esi [ ebp - 0x14 ]
jmp r-xdata
mov ebx [ ebp - 0x10 ]
test ebx ebx
jne r-xdata
push edi
call j_sub_422ed5#3
add esp 0x4
push [ ebp - 0xc ]
call j_sub_422ed5#3
add esp 0x4
push 0x0
lea eax [ ebp - 0x4 ]
dec edi
push eax
push esi
mov [ ebp - 0x4 ] edi
call sub_45f825
mov ecx [ ebx + 0xc ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
fstp st2
dec eax
mov [ ecx ] eax
fstp st0
mov ecx ebx
fstp st0
call sub_408189
mov eax [ ebx + 0x4 ]
add eax 0x2
push eax
call sub_408170
xor ecx ecx
mov [ ebx + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov esi eax
add esp 0x4
mov eax [ ebx + 0x4 ]
lea eax [ eax * 2 + 0x2 ]
push eax
push [ ebx ]
push esi
call sub_420fc0
mov [ ebx ] esi
add esp 0xc
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
add eax 0x2
cmp [ ebx + 0x8 ] eax
jb r-xdata
lea eax [ ebp - 0x38 ]
cmp ebx eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] esi
add esi esi
push esi
mov eax [ eax ]
lea eax [ eax + edi * 2 ]
mov edi [ ebp - 0x4 ]
push eax
push edi
call sub_420fc0
mov ecx [ ebp - 0x2c ]
add esp 0xc
xor eax eax
mov [ ebp - 0xc ] ecx
mov [ esi + edi ] ax
mov esi [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebx + 0x4 ]
add eax eax
push eax
mov eax [ ebx ]
push edi
lea eax [ eax + ecx * 2 ]
push eax
call sub_420fc0
mov eax [ ebp - 0x8 ]
add esp 0xc
add [ ebx + 0x4 ] eax
xor edx edx
mov ecx [ ebx + 0x4 ]
mov eax [ ebx ]
mov [ eax + ecx * 2 ] dx
dec [ esi ]
jne r-xdata
mov ebx 0x1
fld [ r--data ]
fld [ r--data ]
fld [ r--data ]
jmp r-xdata
cmp eax 0x41c2
jae r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ebx ]
mov edx [ ebp - 0x8 ]
mov [ eax + ecx * 2 ] dx
inc [ ebx + 0x4 ]
xor edx edx
mov ecx [ ebx + 0x4 ]
mov eax [ ebx ]
mov [ eax + ecx * 2 ] dx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp - 0x28 ]
call j_sub_422ed5#3
add esp 0x4
push esi
call j_sub_422ed5#3
add esp 0x4
cmp eax 0x2000000
jae r-xdata
fstp st2
add eax eax
fstp st0
fstp st0
jmp r-xdata
fstp st2
cmp eax 0x8000000
jae r-xdata
mov [ ebp + 0xc ] eax
fstp st1
fstp st0
fild [ ebp + 0xc ]
test eax eax
jns r-xdata
push eax
mov [ ebx + 0x8 ] eax
call sub_408170
xor ecx ecx
mov [ ebx + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420ee5
mov edx [ ebx ]
add esp 0x4
mov ecx eax
mov [ ebp + 0xc ] ecx
test edx edx
je r-xdata
mov [ ebp + 0xc ] eax
fstp st0
fild [ ebp + 0xc ]
test eax eax
jns r-xdata
mov [ ebp + 0xc ] eax
fstp st1
fild [ ebp + 0xc ]
test eax eax
jns r-xdata
fstp [ ebp - 0x18 ]
fnstcw [ ebp + 0xe ]
fmul [ ebp - 0x18 ]
movzx eax [ ebp + 0xe ]
or eax 0xc00
mov [ ebp - 0x14 ] eax
fldcw [ ebp - 0x14 ]
fistp [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
fldcw [ ebp + 0xe ]
jmp r-xdata
fadd [ r--data ]
mov [ ebx ] ecx
mov eax [ ebx + 0x4 ]
lea eax [ eax * 2 + 0x2 ]
push eax
push edx
push ecx
call sub_420fc0
add esp 0xc
push [ ebx ]
call j_sub_422ed5
mov ecx [ ebp + 0xc ]
add esp 0x4
fstp [ ebp - 0x18 ]
fnstcw [ ebp + 0xe ]
fmul [ ebp - 0x18 ]
movzx eax [ ebp + 0xe ]
or eax 0xc00
mov [ ebp - 0x14 ] eax
fldcw [ ebp - 0x14 ]
fistp [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
fldcw [ ebp + 0xe ]
fadd [ r--data ]
fstp [ ebp - 0x18 ]
fnstcw [ ebp + 0xe ]
fmul [ ebp - 0x18 ]
movzx eax [ ebp + 0xe ]
or eax 0xc00
mov [ ebp - 0x14 ] eax
fldcw [ ebp - 0x14 ]
fistp [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
fldcw [ ebp + 0xe ]
jmp r-xdata
fadd [ r--data ]
mov edi [ ebp - 0x4 ]
sub_4158c0
push ebp
mov ebp esp
sub esp 0x68
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x14 ] esi
cmp [ esi + 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi [ ebp + 0x10 ]
xor eax eax
push 0xffffffff
push eax
mov ecx edi
mov [ ebp - 0x5 ] 0x0
mov [ ebp - 0x18 ] eax
call sub_407e8c
cmp [ ebp + 0xc ] 0x0
jne r-xdata
lea ecx [ ebp - 0x44 ]
call sub_4077c7
lea ecx [ ebp - 0x34 ]
call sub_4077c7
xor edx edx
xor ebx ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ebx
lea esp [ esp ]
mov [ ebp - 0x5 ] 0x1
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x1c ]
lea ecx [ ebp - 0x34 ]
sub eax ebx
push eax
push ebx
push esi
call sub_4079ab
lea eax [ ebp - 0x34 ]
mov ecx edi
push eax
call sub_407c8e
lea ecx [ ebp - 0x34 ]
call sub_405a64
lea ecx [ ebp - 0x44 ]
call sub_405a64
mov eax [ ebp - 0x18 ]
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
cmp edx 0xffffffff
je r-xdata
mov ecx [ esi + 0x1c ]
cmp edx ecx
jg r-xdata
push [ esi + 0x24 ]
mov eax [ esi + 0x34 ]
push [ esi + 0x20 ]
or eax [ esi + 0x2c ]
push eax
push edx
mov edx [ esi + 0x18 ]
push ecx
push [ esi ]
mov ecx [ esi + 0x14 ]
call sub_414140
mov ecx eax
add esp 0x18
mov [ esi + 0x28 ] ecx
test ecx ecx
jle r-xdata
cmp ecx 0xffffffff
jne r-xdata
mov eax [ esi + 0x20 ]
mov edx [ eax + 0x4 ]
mov [ esi + 0x2c ] 0x0
mov edi [ eax ]
cmp edi [ eax + 0x4 ]
mov [ ebp - 0x20 ] edi
mov edi [ ebp + 0x10 ]
je r-xdata
cmp [ esi + 0x2c ] 0x0
jne r-xdata
mov eax [ esi + 0x1c ]
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov [ ebp - 0x10 ] edx
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x10 ]
push 0x1
push eax
mov ecx esi
mov [ esi + 0x2c ] 0x0
call sub_415608
mov ecx eax
jmp r-xdata
mov [ esi + 0x2c ] 0x10000010
jmp r-xdata
lea edx [ eax + 0x1 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ebx [ eax ]
mov eax [ ebp - 0xc ]
sub ebx eax
je r-xdata
test ecx ecx
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x34 ]
call sub_407e8c
mov ebx [ ebp - 0x30 ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp eax ecx
jae r-xdata
lea eax [ ebp - 0x34 ]
cmp edi eax
je r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
lea eax [ ebp - 0x54 ]
mov ecx edi
push eax
call sub_457f03
push eax
mov ecx edi
call sub_4081a7
lea ecx [ ebp - 0x54 ]
call sub_405a64
jmp r-xdata
test ebx ebx
je r-xdata
mov ebx ecx
sub ebx eax
jmp r-xdata
add eax ebx
cmp eax ecx
ja r-xdata
lea eax [ ebp - 0x44 ]
mov ecx esi
push eax
push [ ebp + 0x8 ]
call sub_415680
add [ ebp - 0x18 ] eax
lea eax [ ebp - 0x44 ]
cmp edi eax
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
mov ecx [ ebp - 0x28 ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
mov eax [ ebp - 0xc ]
push edi
lea eax [ ebp - 0x64 ]
mov ecx edi
push eax
call sub_457f03
push eax
mov ecx edi
call sub_4081a7
lea ecx [ ebp - 0x64 ]
call sub_405a64
jmp r-xdata
mov ebx [ ebp - 0x40 ]
test ebx ebx
je r-xdata
dec eax
mov [ ecx ] eax
mov ecx edi
call sub_408189
mov eax [ edi + 0x4 ]
inc eax
add eax ebx
push eax
call sub_408170
xor ecx ecx
mov [ edi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov esi eax
add esp 0x4
mov eax [ edi + 0x4 ]
lea eax [ eax * 2 + 0x2 ]
push eax
push [ edi ]
push esi
call sub_420fc0
mov [ edi ] esi
add esp 0xc
mov esi [ ebp - 0x14 ]
jmp r-xdata
mov eax [ edi + 0x4 ]
inc eax
add eax ebx
cmp [ edi + 0x8 ] eax
jb r-xdata
dec eax
mov [ ecx ] eax
lea ecx [ ebp - 0x34 ]
call sub_408189
lea eax [ ebx + 0x1 ]
push eax
call sub_408170
xor ecx ecx
mov [ ebp - 0x2c ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
add esp 0x4
jmp r-xdata
lea eax [ ebx + 0x1 ]
cmp [ ebp - 0x2c ] eax
jb r-xdata
mov edx [ ebp - 0x10 ]
mov ebx edx
dec [ ebp + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov ecx [ edi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jg r-xdata
mov ecx [ edi + 0x4 ]
lea eax [ ebx + ebx ]
push eax
mov eax [ edi ]
push [ ebp - 0x34 ]
lea eax [ eax + ecx * 2 ]
push eax
call sub_420fc0
add [ edi + 0x4 ] ebx
add esp 0xc
mov ecx [ edi + 0x4 ]
xor edx edx
mov eax [ edi ]
mov [ eax + ecx * 2 ] dx
cmp eax 0x41c2
jae r-xdata
mov [ ebp - 0x34 ] eax
jmp r-xdata
push eax
call sub_408170
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x34 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
lea esi [ ebx + ebx ]
mov ecx [ ebp - 0xc ]
push esi
mov [ ebp - 0x30 ] ebx
mov eax [ eax ]
lea eax [ eax + ecx * 2 ]
push eax
push [ ebp - 0x34 ]
call sub_420fc0
mov eax [ ebp - 0x34 ]
add esp 0xc
xor ecx ecx
mov [ esi + eax ] cx
mov esi [ ebp - 0x14 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
dec eax
mov [ ecx ] eax
mov ecx edi
call sub_408189
mov eax [ edi + 0x4 ]
inc eax
add eax ebx
push eax
call sub_408170
xor ecx ecx
mov [ edi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov esi eax
add esp 0x4
mov eax [ edi + 0x4 ]
lea eax [ eax * 2 + 0x2 ]
push eax
push [ edi ]
push esi
call sub_420fc0
mov [ edi ] esi
add esp 0xc
mov esi [ ebp - 0x14 ]
jmp r-xdata
mov eax [ edi + 0x4 ]
inc eax
add eax ebx
cmp [ edi + 0x8 ] eax
jb r-xdata
cmp eax 0x2000000
jae r-xdata
add eax eax
jmp r-xdata
mov eax [ ebp - 0x2c ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
add esp 0x4
xor ecx ecx
mov [ eax + ebx * 2 ] cx
push eax
call j_sub_422ed5#3
add esp 0x4
mov ecx [ edi + 0x4 ]
lea eax [ ebx + ebx ]
push eax
mov eax [ edi ]
push [ ebp - 0x44 ]
lea eax [ eax + ecx * 2 ]
push eax
call sub_420fc0
add [ edi + 0x4 ] ebx
add esp 0xc
mov ecx [ edi + 0x4 ]
xor edx edx
mov eax [ edi ]
mov [ eax + ecx * 2 ] dx
cmp eax 0x41c2
jae r-xdata
cmp eax 0x8000000
jae r-xdata
mov [ ebp - 0x20 ] eax
fild [ ebp - 0x20 ]
test eax eax
jns r-xdata
push eax
mov [ edi + 0x8 ] eax
call sub_408170
xor ecx ecx
mov [ edi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420ee5
mov edx [ edi ]
add esp 0x4
mov ecx eax
mov [ ebp - 0x20 ] ecx
test edx edx
je r-xdata
cmp eax 0x2000000
jae r-xdata
add eax eax
jmp r-xdata
mov [ ebp - 0x20 ] eax
fild [ ebp - 0x20 ]
test eax eax
jns r-xdata
mov [ ebp - 0x20 ] eax
fild [ ebp - 0x20 ]
test eax eax
jns r-xdata
fstp [ ebp - 0x24 ]
fld [ ebp - 0x24 ]
fmul [ r--data ]
fnstcw [ ebp - 0xa ]
movzx eax [ ebp - 0xa ]
or eax 0xc00
mov [ ebp - 0x20 ] eax
fldcw [ ebp - 0x20 ]
fistp [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
fldcw [ ebp - 0xa ]
jmp r-xdata
fadd [ r--data ]
mov [ edi ] ecx
jmp r-xdata
mov eax [ edi + 0x4 ]
lea eax [ eax * 2 + 0x2 ]
push eax
push edx
push ecx
call sub_420fc0
add esp 0xc
push [ edi ]
call j_sub_422ed5
mov ecx [ ebp - 0x20 ]
add esp 0x4
cmp eax 0x8000000
jae r-xdata
mov [ ebp - 0x20 ] eax
fild [ ebp - 0x20 ]
test eax eax
jns r-xdata
push eax
mov [ edi + 0x8 ] eax
call sub_408170
xor ecx ecx
mov [ edi + 0x8 ] eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420ee5
mov edx [ edi ]
add esp 0x4
mov ecx eax
mov [ ebp - 0x20 ] ecx
test edx edx
je r-xdata
fstp [ ebp - 0x24 ]
fld [ ebp - 0x24 ]
fmul [ r--data ]
fnstcw [ ebp - 0xa ]
movzx eax [ ebp - 0xa ]
or eax 0xc00
mov [ ebp - 0x20 ] eax
fldcw [ ebp - 0x20 ]
fistp [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
fldcw [ ebp - 0xa ]
fadd [ r--data ]
fstp [ ebp - 0x24 ]
fld [ ebp - 0x24 ]
fmul [ r--data ]
fnstcw [ ebp - 0xa ]
movzx eax [ ebp - 0xa ]
or eax 0xc00
mov [ ebp - 0x20 ] eax
fldcw [ ebp - 0x20 ]
fistp [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
fldcw [ ebp - 0xa ]
jmp r-xdata
fadd [ r--data ]
mov ebx [ ebp - 0x30 ]
mov [ ebp - 0x20 ] eax
fild [ ebp - 0x20 ]
test eax eax
jns r-xdata
mov [ ebp - 0x20 ] eax
fild [ ebp - 0x20 ]
test eax eax
jns r-xdata
fstp [ ebp - 0x24 ]
fld [ ebp - 0x24 ]
fmul [ r--data ]
fnstcw [ ebp - 0xa ]
movzx eax [ ebp - 0xa ]
or eax 0xc00
mov [ ebp - 0x20 ] eax
fldcw [ ebp - 0x20 ]
fistp [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
fldcw [ ebp - 0xa ]
jmp r-xdata
fadd [ r--data ]
mov [ edi ] ecx
jmp r-xdata
mov eax [ edi + 0x4 ]
lea eax [ eax * 2 + 0x2 ]
push eax
push edx
push ecx
call sub_420fc0
add esp 0xc
push [ edi ]
call j_sub_422ed5
mov ecx [ ebp - 0x20 ]
add esp 0x4
fstp [ ebp - 0x24 ]
fld [ ebp - 0x24 ]
fmul [ r--data ]
fnstcw [ ebp - 0xa ]
movzx eax [ ebp - 0xa ]
or eax 0xc00
mov [ ebp - 0x20 ] eax
fldcw [ ebp - 0x20 ]
fistp [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
fldcw [ ebp - 0xa ]
fadd [ r--data ]
fstp [ ebp - 0x24 ]
fld [ ebp - 0x24 ]
fmul [ r--data ]
fnstcw [ ebp - 0xa ]
movzx eax [ ebp - 0xa ]
or eax 0xc00
mov [ ebp - 0x20 ] eax
fldcw [ ebp - 0x20 ]
fistp [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
fldcw [ ebp - 0xa ]
jmp r-xdata
fadd [ r--data ]
sub_415b8e
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi + 0x14 ] edi
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
call sub_4209c4
push 0x1
lea eax [ ebp + 0x8 ]
mov ecx esi
push eax
call sub_415608
test eax eax
jle r-xdata
cmp [ esi + 0x28 ] edi
jle r-xdata
mov eax [ esi + 0x28 ]
mov ebx edi
mov eax [ esi + 0x20 ]
mov ecx [ eax + ebx ]
mov eax [ eax + ebx + 0x4 ]
sub eax ecx
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
call sub_420951
inc edi
lea ebx [ ebx + 0x8 ]
cmp edi [ esi + 0x28 ]
jl r-xdata
sub_415bfd
push esi
mov esi ecx
call sub_4077c7
xor eax eax
mov [ esi + 0x30 ] 0x2800
mov [ esi + 0x10 ] al
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov eax esi
mov [ esi + 0x34 ] 0x2000
pop esi
retn
sub_415c2e
push ebx
push esi
mov esi ecx
cmp [ esi + 0x20 ] 0x0
jne r-xdata
push [ esi + 0x20 ]
call j_sub_422ed5#3
pop ecx
jmp r-xdata
xor ebx ebx
mov ecx esi
mov [ esi + 0x20 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
call sub_407eec
mov [ esi + 0x10 ] bl
mov [ esi + 0x30 ] 0x2800
mov [ esi + 0x34 ] 0x2000
pop esi
pop ebx
retn
sub_415c72
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
call sub_415c2e
mov ebx [ ebp + 0x8 ]
push ebx
call sub_415e12
mov ecx eax
test ecx ecx
je r-xdata
mov edx [ esi + 0x30 ]
lea eax [ ebp + 0x8 ]
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push ecx
mov ecx [ ebx ]
call sub_416841
add esp 0x10
mov [ esi + 0x14 ] eax
test eax eax
je r-xdata
mov eax [ ecx + 0x14 ]
lea edi [ esi + 0x24 ]
mov [ esi + 0x14 ] eax
mov eax [ ecx + 0x18 ]
mov [ esi + 0x18 ] eax
mov ecx [ ecx + 0x1c ]
mov [ edi ] ecx
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx eax
call sub_4162f2
pop ecx
mov ecx [ esi + 0x14 ]
lea edi [ esi + 0x24 ]
push edi
push 0x2
mov edx eax
mov [ esi + 0x18 ] eax
call sub_420789
mov eax [ edi ]
add esp 0x8
inc eax
imul eax eax 0x3
push eax
push [ esi + 0x18 ]
mov [ edi ] eax
push [ esi + 0x14 ]
push ebx
call sub_415d92
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi ]
xor ecx ecx
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov [ esi + 0x20 ] eax
xor eax eax
pop ecx
sub_415d41
push esi
push edi
mov edi rw-data
cmp [ esi + 0x14 ] 0x0
je r-xdata
pop edi
pop esi
retn
mov ecx esi
call sub_405a64
push esi
call j_sub_422ed5#3
add edi 0x4
pop ecx
cmp edi rw-data
jl r-xdata
cmp [ esi + 0x18 ] 0x0
je r-xdata
mov esi [ edi ]
test esi esi
jne r-xdata
jmp r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
push [ esi + 0x18 ]
call [ r--data ]
pop ecx
push [ esi + 0x14 ]
call [ r--data ]
pop ecx
sub_415d92
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
call sub_415e58
mov ecx [ rw-data ]
mov edi eax
mov esi [ ecx * 4 + rw-data ]
test esi esi
jne r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
push 0x20
call sub_420f36
mov esi eax
pop ecx
test esi esi
je r-xdata
push [ ebp + 0x8 ]
mov ecx esi
mov [ esi + 0x10 ] edi
call sub_4081a7
mov eax [ ebp + 0xc ]
mov [ esi + 0x14 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x1c ] eax
mov eax [ rw-data ]
push 0x40
inc eax
pop ecx
cdq
idiv ecx
pop edi
mov [ rw-data ] edx
pop esi
pop ebp
retn 0x10
cmp [ esi + 0x18 ] 0x0
je r-xdata
xor esi esi
jmp r-xdata
mov ecx esi
call sub_4077c7
cmp [ esi + 0x14 ] 0x0
je r-xdata
push [ esi + 0x18 ]
call [ r--data ]
pop ecx
mov eax [ rw-data ]
mov [ eax * 4 + rw-data ] esi
push [ esi + 0x14 ]
call [ r--data ]
pop ecx
jmp r-xdata
sub_415e12
push ebp
mov ebp esp
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_415e58
mov ebx eax
mov esi rw-data
xor eax eax
jmp r-xdata
cmp [ edi + 0x10 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov ecx edi
call sub_415ee9
test al al
je r-xdata
add esi 0x4
cmp esi rw-data
jl r-xdata
mov eax edi
mov edi [ esi ]
test edi edi
je r-xdata
sub_415e58
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
xor esi esi
mov edx [ eax + 0x4 ]
mov edi [ eax ]
add edx edx
mov eax 0x1505
test edx edx
jle r-xdata
pop edi
pop esi
pop ebp
retn 0x4
movzx ecx [ esi + edi ]
imul eax eax 0x21
add eax ecx
inc esi
cmp esi edx
jl r-xdata
sub_415e9f
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
movzx esi [ ecx ]
push edi
je r-xdata
push 0x2
pop edi
push 0xa
pop ebx
cmp edx edi
jne r-xdata
mov eax esi
and eax 0xfc00
cmp eax 0xd800
je r-xdata
cmp esi ebx
jb r-xdata
cmp esi ebx
je r-xdata
movzx eax [ ecx + 0x2 ]
mov edi 0x3ff
and esi edi
and eax edi
shl esi 0xa
or esi eax
add esi 0x10000
jmp r-xdata
xor eax eax
xor edx edx
cmp esi 0xc
jbe r-xdata
xor edx edx
jmp r-xdata
cmp esi 0xd
je r-xdata
inc edx
cmp esi 0xd
je r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
add eax 0xfffffffe
cmp ecx eax
jae r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add eax 0xfffffffe
cmp ecx eax
jae r-xdata
inc edx
cmp esi 0x85
je r-xdata
lea edi [ edx + 0x1 ]
cmp [ ecx + 0x2 ] bx
je r-xdata
lea edi [ edx + 0x1 ]
cmp [ ecx + 0x2 ] bx
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] edx
mov eax edx
jmp r-xdata
lea eax [ esi - 0x2028 ]
cmp eax edx
ja r-xdata
lea eax [ edx + 0x1 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] edi
jmp r-xdata
jmp r-xdata
sub_415ee9
push esi
mov esi [ ecx + 0x4 ]
cmp esi [ edx + 0x4 ]
jne r-xdata
xor al al
pop esi
retn
mov edx [ edx ]
mov ecx [ ecx ]
test esi esi
je r-xdata
mov al 0x1
pop esi
retn
mov ax [ ecx ]
cmp ax [ edx ]
jne r-xdata
add ecx 0x2
add edx 0x2
dec esi
jne r-xdata
sub_415f13
push ebx
push esi
push edi
mov edi edx
mov edx ecx
mov esi [ edx + 0x4 ]
cmp esi [ edi + 0x4 ]
jbe r-xdata
mov ecx [ edi ]
mov ebx esi
mov edx [ edx ]
test esi esi
je r-xdata
mov esi [ edi + 0x4 ]
cmp esi [ edi + 0x4 ]
jmp r-xdata
mov ax [ edx ]
cmp ax [ ecx ]
jne r-xdata
jae r-xdata
mov ax [ edx ]
cmp ax [ ecx ]
add edx 0x2
add ecx 0x2
dec ebx
jne r-xdata
xor al al
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_415f57
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
push 0x4
call sub_420f36
pop ecx
test eax eax
je r-xdata
push [ esi ]
call j_sub_422ed5#3
pop ecx
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ esi ] eax
mov al 0x1
pop esi
pop ebp
retn 0x4
sub_415f88
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push ebx
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x10 ]
call sub_416154
lea ecx [ edi + 0xd4 ]
call sub_416154
mov al [ ebp + 0x20 ]
lea esi [ edi + 0x14 ]
push [ ebp + 0x8 ]
mov [ edi + 0x4 ] al
mov ecx esi
mov al [ ebp + 0x1c ]
mov [ edi + 0x5 ] al
call sub_4081a7
push [ ebp + 0xc ]
lea ecx [ edi + 0x24 ]
call sub_4081a7
lea ecx [ edi + 0xa4 ]
push r--data
call sub_407d2c
mov eax [ ebp + 0x14 ]
lea ecx [ esp + 0x18 ]
xor ebx ebx
mov [ edi + 0xb4 ] 0x1
mov [ edi + 0x10 ] eax
mov [ edi + 0xc ] 0x1
mov [ edi + 0x8 ] ebx
mov [ edi + 0xb8 ] ebx
mov [ edi + 0xcc ] ebx
call sub_4077c7
lea ecx [ esp + 0x28 ]
call sub_4077c7
lea ecx [ esp + 0x38 ]
call sub_4077c7
cmp [ edi + 0x10 ] ebx
jl r-xdata
push [ edi + 0x10 ]
call sub_426c0d
pop ecx
mov [ edi + 0x10 ] eax
mov [ edi + 0xc ] bl
jmp r-xdata
cmp [ edi + 0x10 ] 0x4
je r-xdata
push esi
call sub_45afdf
mov [ edi + 0x10 ] 0x1
jmp r-xdata
cmp [ edi + 0x18 ] ebx
jne r-xdata
push ebx
mov ecx esi
call sub_407b52
cmp [ eax ] 0x5b
jne r-xdata
cmp [ edi + 0x28 ] ebx
jne r-xdata
cmp [ esp + 0x3c ] ebx
je r-xdata
mov eax [ edi + 0x18 ]
mov ecx esi
dec eax
push eax
call sub_407b52
cmp [ eax ] 0x5d
jne r-xdata
call [ GetForegroundWindow@IAT ]
push eax
mov ecx edi
call sub_415f57
mov eax [ edi ]
mov eax [ eax ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x10 ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
lea eax [ esp + 0x38 ]
mov ecx esi
push eax
call sub_4081a7
mov eax [ edi + 0x18 ]
sub eax 0x2
mov [ esp + 0x14 ] 0x1
mov [ esp + 0x10 ] eax
or [ edi + 0x8 ] 0x4
mov esi [ CharUpperBuffW@IAT ]
cmp [ edi + 0xc ] bl
jne r-xdata
mov [ edi + 0x8 ] 0x1
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
jne r-xdata
test [ edi + 0x8 ] 0x1
je r-xdata
lea ecx [ edi + 0x24 ]
call sub_407faf
push [ edi + 0x28 ]
push [ edi + 0x24 ]
call esi
mov edx r--data
lea ecx [ esp + 0x28 ]
call sub_420c63
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
jne r-xdata
push edi
push sub_45b196
cmp [ ebp + 0x18 ] bl
je r-xdata
cmp [ edi + 0xc ] bl
jne r-xdata
or ebx 0xffffffff
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov edx r--data
lea ecx [ esp + 0x28 ]
call sub_420c63
test al al
jne r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
jne r-xdata
call [ EnumWindows@IAT ]
call [ GetDesktopWindow@IAT ]
push eax
call [ EnumChildWindows@IAT ]
jmp r-xdata
lea ecx [ edi + 0x14 ]
call sub_407faf
push [ edi + 0x18 ]
push [ edi + 0x14 ]
call esi
lea ecx [ esp + 0x38 ]
call sub_405a64
lea ecx [ esp + 0x28 ]
call sub_405a64
lea ecx [ esp + 0x18 ]
call sub_405a64
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x1c
jmp r-xdata
call [ GetForegroundWindow@IAT ]
push eax
mov ecx [ esp + 0x28 ]
lea edx [ esp + 0x10 ]
call sub_46589c
push [ esp + 0x10 ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
mov ebx [ edi + 0xcc ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx edi
mov eax [ eax ]
push [ eax ]
call sub_415f57
mov ebx [ ebp + 0x10 ]
lea esi [ edi + 0xd4 ]
push esi
mov ecx ebx
call sub_45af24
mov ecx esi
call sub_416154
cmp [ edi + 0xcc ] 0x1
jl r-xdata
mov eax [ eax ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push eax
call sub_4034c2
xor ebx ebx
inc ebx
push [ esp + 0x10 ]
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
mov eax [ edi + 0x8 ]
test al 0x1
jne r-xdata
mov ecx edi
call sub_415f57
mov eax [ edi ]
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
or [ edi + 0x8 ] 0x8
lea ecx [ edi + 0xa4 ]
jmp r-xdata
push 0xfffffffd
jmp r-xdata
or eax 0x2
lea ecx [ edi + 0x34 ]
mov [ edi + 0x8 ] eax
call sub_415c2e
push ecx
lea ecx [ edi + 0x34 ]
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
or [ edi + 0x8 ] 0x10
lea ecx [ edi + 0x6c ]
call sub_415c2e
push ecx
lea ecx [ edi + 0x6c ]
lea eax [ esp + 0x28 ]
push eax
call sub_4081a7
jmp r-xdata
pop ebx
jmp r-xdata
lea eax [ esp + 0x2c ]
push eax
call sub_415c72
test eax eax
jne r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
push [ esp + 0x28 ]
or [ edi + 0x8 ] 0x80
call sub_42370a
pop ecx
mov [ edi + 0xbc ] eax
jmp r-xdata
push 0xfffffffe
jmp r-xdata
lea esi [ edi + 0x14 ]
jmp r-xdata
mov eax [ esp + 0x10 ]
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
push [ esp + 0x28 ]
or [ edi + 0x8 ] 0x100
call sub_42370a
pop ecx
mov [ edi + 0xc0 ] eax
jmp r-xdata
push eax
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x24 ]
push eax
push esi
call sub_45a1c6
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
push [ esp + 0x28 ]
or [ edi + 0x8 ] 0x200
call sub_42370a
pop ecx
mov [ edi + 0xc4 ] eax
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
push [ esp + 0x28 ]
or [ edi + 0x8 ] 0x400
call sub_42370a
pop ecx
mov [ edi + 0xc8 ] eax
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
push [ esp + 0x28 ]
or [ edi + 0x8 ] 0x20
call sub_42370a
pop ecx
mov [ edi + 0xb4 ] eax
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x28 ]
call sub_420c63
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_45a14d
test al al
jne r-xdata
mov eax [ edi + 0x8 ]
test al 0x2
jne r-xdata
or [ edi + 0x8 ] 0x40
jmp r-xdata
push 0xfffffffc
or eax 0x1
lea ecx [ esp + 0x38 ]
mov [ edi + 0x8 ] eax
sub_41608e
push esi
push edi
mov edi ecx
cmp [ edi ] 0x0
je r-xdata
lea ecx [ edi + 0xd4 ]
call sub_416181
lea ecx [ edi + 0xa4 ]
call sub_405a64
lea ecx [ edi + 0x6c ]
call sub_415c2e
lea ecx [ edi + 0x6c ]
call sub_405a64
lea ecx [ edi + 0x34 ]
call sub_415c2e
lea ecx [ edi + 0x34 ]
call sub_405a64
lea ecx [ edi + 0x24 ]
call sub_405a64
lea ecx [ edi + 0x14 ]
pop edi
pop esi
jmp sub_405a64
push [ edi ]
call j_sub_422ed5#3
pop ecx
sub_4160e7
push esi
mov esi ecx
push edi
xor edi edi
lea ecx [ esi + 0x14 ]
mov [ esi ] edi
call sub_4077c7
lea ecx [ esi + 0x24 ]
call sub_4077c7
lea ecx [ esi + 0x34 ]
call sub_415bfd
lea ecx [ esi + 0x6c ]
call sub_415bfd
lea ecx [ esi + 0xa4 ]
call sub_4077c7
push 0x4
mov [ esi + 0xd4 ] r--data
mov [ esi + 0xd8 ] edi
mov [ esi + 0xdc ] edi
mov [ esi + 0xe0 ] edi
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov eax edi
jmp r-xdata
mov [ eax ] edi
mov [ esi ] eax
mov eax esi
pop edi
pop esi
retn
sub_416154
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi + 0x8 ] edi
ja r-xdata
mov eax [ esi + 0x4 ]
push [ eax + edi * 4 ]
call j_sub_422ed5#3
pop ecx
mov eax [ esi + 0x4 ]
and [ eax + edi * 4 ] 0x0
inc edi
cmp edi [ esi + 0x8 ]
jae r-xdata
and [ esi + 0x8 ] 0x0
pop edi
pop esi
retn
jmp r-xdata
sub_41619a
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push 0x1388
push 0x2
xor eax eax
push eax
push eax
push eax
push [ ebp + 0x8 ]
call [ SendMessageTimeoutW@IAT ]
neg eax
sbb al al
inc al
mov esp ebp
pop ebp
retn 0x4
sub_4161c3
push ebp
mov ebp esp
push esi
mov esi ecx
push [ esi ]
call sub_41619a
test al al
jne r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
push [ eax ]
push 0x0
push 0xc
push [ esi ]
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push 0x1
push 0x0
push [ esi ]
call [ GetParent@IAT ]
push eax
call [ InvalidateRect@IAT ]
jmp r-xdata
mov al 0x1
sub_4161fe
push esi
push edi
mov edi ecx
cmp [ edi ] 0x0
je r-xdata
lea esi [ edi + 0xec ]
mov ecx esi
call sub_415c2e
mov ecx esi
call sub_405a64
lea ecx [ edi + 0xbc ]
call sub_405a64
lea ecx [ edi + 0xac ]
call sub_405a64
lea ecx [ edi + 0x9c ]
call sub_405a64
lea ecx [ edi + 0x8c ]
call sub_405a64
lea ecx [ edi + 0x8 ]
pop edi
pop esi
jmp sub_4162c5
push [ edi ]
call j_sub_422ed5#3
pop ecx
sub_416259
push esi
mov esi ecx
and [ esi ] 0x0
lea ecx [ esi + 0x8 ]
call sub_4162e0
lea ecx [ esi + 0x8c ]
call sub_4077c7
lea ecx [ esi + 0x9c ]
call sub_4077c7
lea ecx [ esi + 0xac ]
call sub_4077c7
lea ecx [ esi + 0xbc ]
call sub_4077c7
lea ecx [ esi + 0xec ]
call sub_415bfd
push 0x4
call sub_420f36
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
push r--data
mov [ esi ] eax
call [ RegisterWindowMessageW@IAT ]
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
retn
sub_4162c5
push esi
push edi
mov edi ecx
xor esi esi
push 0x8000
push 0x0
push eax
push [ edi + esi * 8 ]
call [ VirtualFreeEx@IAT ]
push [ edi + esi * 8 ]
call [ CloseHandle@IAT ]
jmp r-xdata
inc esi
cmp esi 0x10
jl r-xdata
mov eax [ edi + esi * 8 + 0x4 ]
test eax eax
jne r-xdata
pop edi
pop esi
retn
sub_4162f2
push ebp
mov ebp esp
sub esp 0xb0
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov esi ecx
and [ edi ] ebx
test esi esi
je r-xdata
mov [ edi ] r--data
cmp [ esi ] 0x50435245
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test [ esi + 0xc ] 0x2
je r-xdata
mov [ edi ] r--data
jmp r-xdata
movzx eax [ esi + 0x24 ]
movzx ecx [ esi + 0x26 ]
imul ecx eax
movzx eax [ esi + 0x22 ]
add ecx eax
test [ esi + 0x8 ] 0x10
lea eax [ esi + ecx * 2 ]
mov [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
jmp r-xdata
push 0x0
push [ esi + 0x8 ]
mov edx eax
mov ecx esi
push eax
call sub_41649c
add esp 0xc
mov [ ebp + 0x8 ] eax
cmp eax 0xfffffffd
je r-xdata
test [ esi + 0xc ] 0x110
jne r-xdata
mov [ edi ] r--data
jmp r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0x30 ]
mov [ ebp - 0x4 ] ecx
test ecx ecx
jne r-xdata
mov [ edi ] r--data
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
lea eax [ ecx + 0x100 ]
mov [ ebp - 0xb0 ] ecx
mov [ ebp - 0xac ] eax
lea eax [ ecx + 0x200 ]
mov [ ebp - 0xa8 ] eax
lea eax [ ecx + 0x340 ]
push 0x20
mov [ ebp - 0xa4 ] eax
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_422f60
mov eax [ esi + 0x8 ]
lea ecx [ ebp - 0xb0 ]
shr eax 0xb
lea edx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp + 0x8 ]
and eax 0x1
push eax
call sub_420371
xor ecx ecx
add esp 0x14
inc ecx
cmp eax ecx
jne r-xdata
lea eax [ ebp - 0x4 ]
xor edx edx
push eax
push 0xb
mov ecx esi
call sub_420789
mov ecx [ ebp - 0x4 ]
add esp 0x8
push 0x4c
call [ r--data ]
mov ebx eax
xor eax eax
pop ecx
test ebx ebx
je r-xdata
test eax eax
jle r-xdata
and [ ebp - 0x4 ] ebx
cmp eax 0x3
jne r-xdata
mov [ ebp - 0x4 ] ecx
mov [ edi ] r--data
jmp r-xdata
lea esi [ ebx + 0x20 ]
inc eax
xor edi edi
mov [ ebx ] eax
mov [ ebx + 0x4 ] esi
mov [ esi ] 0x2c
mov [ esi + 0x4 ] edi
push 0x20
cmp [ ebp - 0x4 ] edi
je r-xdata
mov eax ebx
mov eax [ ebp + 0x8 ]
lea eax [ esi + 0x8 ]
push edi
push eax
call sub_422f60
jmp r-xdata
mov [ esi + 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ esi + 0x8 ]
push eax
call sub_420fc0
mov eax [ ebp + 0x8 ]
add esp 0xc
test eax eax
jle r-xdata
mov [ esi + 0x28 ] edi
jmp r-xdata
or [ esi + 0x4 ] 0x2
mov [ esi + 0x28 ] eax
sub_41649c
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0xc ]
or [ ebp - 0x14 ] 0xffffffff
and [ ebp - 0x10 ] 0x0
shr eax 0xb
push ebx
and eax 0x1
mov [ ebp - 0x8 ] ecx
push esi
mov [ ebp - 0xc ] eax
lea esi [ edx + 0x4 ]
movzx eax [ edx ]
mov ecx 0x85
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp ax cx
je r-xdata
add esi 0x2
add ecx 0x5
cmp ax cx
je r-xdata
push 0xfffffffd
jmp r-xdata
movzx eax [ ecx + lookup_table_416690 ]
jmp [ eax * 4 + jump_table_416630 ]
mov ecx 0x86
cmp ax cx
je r-xdata
pop eax
jmp r-xdata
add esi 0x4
inc edi
mov [ ebp - 0x4 ] edi
inc edi
add esi 0x4
mov eax [ ebp - 0x14 ]
test eax eax
jns r-xdata
cmp edx 0x70
je r-xdata
movzx eax [ ebx + r--data ]
push 0x77
pop edi
lea esi [ esi + eax * 2 ]
push [ ebp + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41649c
add esp 0xc
test eax eax
js r-xdata
movzx eax [ esi + 0x2 ]
push 0x10
pop edx
cmp ax dx
je r-xdata
movzx eax [ ecx + r--data ]
push 0x77
pop edi
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
movzx eax [ esi + 0x2 ]
push 0x77
pop ecx
lea eax [ esi + eax * 2 ]
cmp [ eax ] cx
je r-xdata
movzx eax [ esi ]
movzx eax [ eax + r--data ]
jmp r-xdata
movzx eax [ esi + 0x2 ]
inc edi
push 0x10
pop ecx
mov [ ebp - 0x4 ] edi
cmp ax cx
je r-xdata
movzx eax [ esi + 0x2 ]
add edi eax
add esi 0x6
jmp r-xdata
movzx eax [ esi + 0x2 ]
add edi eax
movzx eax [ esi + 0x4 ]
push 0x10
pop ecx
mov [ ebp - 0x4 ] edi
cmp ax cx
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
movzx eax [ esi + 0x4 ]
push 0x10
pop ebx
cmp ax bx
je r-xdata
test [ ebp + 0xc ] 0x2000000
jne r-xdata
test [ ebp + 0xc ] 0x2000000
jne r-xdata
movzx eax [ esi + 0x2 ]
mov ebx [ ebp + 0x8 ]
push 0x77
pop edi
lea ecx [ ebx + eax * 2 ]
mov edx ecx
movzx eax [ ecx + r--data ]
lea esi [ esi + eax * 2 ]
jmp r-xdata
movzx eax [ esi + 0x2 ]
movzx ecx [ ecx + r--data ]
add ecx eax
lea esi [ esi + ecx * 2 ]
jmp r-xdata
add ecx 0x5
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx ebx [ esi ]
mov edx ebx
mov ecx edx
cmp ecx 0xa1
ja r-xdata
mov ax [ esi - 0x2 ]
mov ecx 0xfc00
and ax cx
mov ecx 0xd800
cmp edi eax
jge r-xdata
mov eax edi
mov [ ebp - 0x14 ] eax
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
jmp r-xdata
add esi 0x22
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] di
je r-xdata
mov edi [ ebp - 0x4 ]
add edi eax
push 0x77
mov [ ebp - 0x4 ] edi
pop edi
add esi 0x4
jmp r-xdata
push 0xf
pop edx
cmp ax dx
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] di
je r-xdata
lea esi [ eax + 0x4 ]
jmp r-xdata
lea esi [ esi + eax * 2 ]
jmp r-xdata
push 0x4
push 0xf
pop ecx
cmp ax cx
je r-xdata
mov [ ebp - 0x4 ] edi
push 0x2
pop eax
push 0xf
pop ecx
cmp ax cx
je r-xdata
jmp r-xdata
push 0xf
pop ebx
cmp ax bx
jmp r-xdata
xor ebx ebx
mov ebx [ ebp - 0x8 ]
movzx ecx [ esi + 0x2 ]
movzx edx [ esi + 0x4 ]
movzx eax [ ebx + 0x24 ]
imul ecx eax
movzx eax [ ebx + 0x22 ]
add ecx eax
lea ecx [ ebx + ecx * 2 ]
mov ebx 0x7fffffff
jmp r-xdata
xor ebx ebx
movzx eax [ esi + 0x2 ]
mov ebx [ ebp + 0x8 ]
mov ecx ebx
mov edx [ ebp - 0xc ]
push eax
call sub_48d8ad
mov edx eax
pop ecx
mov ecx edx
test edx edx
je r-xdata
movzx eax [ ecx + 0x2 ]
lea ecx [ ecx + eax * 2 ]
cmp [ ecx ] di
je r-xdata
mov edi [ ebp - 0x4 ]
cmp esi edx
jbe r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp ax cx
jne r-xdata
jmp r-xdata
push 0x77
pop ecx
cmp dx cx
je r-xdata
jmp r-xdata
xor edi edi
add esi 0x4
and [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] edi
jmp r-xdata
movzx eax [ esi ]
add eax 0xffffff9e
cmp eax 0xb
jbe r-xdata
movzx eax [ eax + lookup_table_416740 ]
jmp [ eax * 4 + jump_table_416734 ]
inc edi
jmp r-xdata
mov edi [ ebp - 0x4 ]
push 0x2
jmp r-xdata
add esi 0x6
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
movzx eax [ esi ]
add eax 0xffffff9e
cmp eax 0xb
ja r-xdata
mov [ ebp - 0x18 ] ecx
test edx edx
jg r-xdata
xor eax eax
inc eax
movzx eax [ eax + lookup_table_4513aa ]
jmp [ eax * 4 + jump_table_45139e ]
push 0xfffffffe
push 0x77
pop edi
mov eax [ ebp + 0x10 ]
cmp eax 0xa
jg r-xdata
cmp esi ecx
jb r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
movzx eax [ esi + 0x2 ]
add edi eax
mov [ ebp - 0x4 ] edi
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] di
jne r-xdata
pop eax
jmp r-xdata
lea esi [ esi + eax * 2 ]
jmp r-xdata
movzx eax [ ecx ]
dec edx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0xc ]
push eax
call sub_48d8ad
mov edx eax
pop ecx
mov ecx edx
test edx edx
je r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] edi
jmp r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
movzx eax [ esi + 0x2 ]
add esi 0x6
jmp r-xdata
movzx eax [ ecx + 0x2 ]
lea ecx [ ecx + eax * 2 ]
cmp [ ecx ] di
je r-xdata
mov edi [ ebp - 0x4 ]
cmp esi edx
jbe r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x8 ]
inc eax
push eax
push [ ebp + 0xc ]
push ebx
call sub_41649c
add esp 0xc
add edi eax
mov [ ebp - 0x4 ] edi
jmp r-xdata
jmp r-xdata
push 0x77
pop edi
add esi 0x6
jmp r-xdata
add esi 0x2
jmp r-xdata
imul eax ebx
add edi eax
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp - 0x8 ]
push [ ebp + 0xc ]
push ebx
call sub_41649c
add esp 0xc
mov ebx eax
jmp r-xdata
cmp esi ecx
jae r-xdata
add esi 0x4
jmp r-xdata
movzx eax [ ecx + 0x2 ]
lea ecx [ ecx + eax * 2 ]
cmp [ ecx ] di
je r-xdata
mov edi [ ebp - 0x4 ]
cmp esi edx
jbe r-xdata
add esi 0x4
mov [ ebp - 0x10 ] 0x1
push [ ebp + 0x10 ]
mov ecx [ ebp - 0x8 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41649c
add esp 0xc
cmp eax ebx
jge r-xdata
cmp esi ecx
jae r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
movzx eax [ eax + 0x24 ]
lea ecx [ ecx + eax * 2 ]
mov ebx eax
mov [ ebp - 0x10 ] 0x1
sub_41674c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov [ ebp - 0x4 ] edx
push [ ebp + 0xc ]
jmp r-xdata
cmp eax 0x84
je r-xdata
mov edx [ ebp - 0x4 ]
cmp eax 0x88
je r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x89
je r-xdata
movzx eax [ ebx + 0x2 ]
lea ebx [ ebx + eax * 2 ]
cmp [ ebx ] 0x77
je r-xdata
cmp eax 0x85
je r-xdata
movzx eax [ ebx ]
xor edx edx
movzx eax [ eax + r--data ]
lea ecx [ ebx + eax * 2 ]
call sub_418605
mov esi eax
movzx eax [ esi ]
cmp eax 0x83
je r-xdata
xor eax eax
inc eax
jmp r-xdata
movzx ecx [ esi + 0x4 ]
xor edx edx
inc edx
cmp ecx 0x20
jge r-xdata
cmp eax 0x86
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ ebp + 0xc ]
or edx [ ebp - 0x4 ]
jmp r-xdata
shl edx cl
cmp eax 0x8a
je r-xdata
push edi
mov ecx esi
call sub_41674c
pop ecx
pop ecx
test eax eax
je r-xdata
cmp eax 0x8b
je r-xdata
cmp eax 0x7d
je r-xdata
cmp eax 0x87
je r-xdata
cmp eax 0x81
je r-xdata
mov eax [ ebp + 0xc ]
inc eax
push eax
jmp r-xdata
cmp eax 0x82
je r-xdata
cmp eax 0x55
je r-xdata
cmp [ esi + 0x2 ] 0xd
jne r-xdata
cmp eax 0x56
je r-xdata
mov eax [ ebp - 0x4 ]
test [ edi + 0x50 ] eax
jne r-xdata
cmp eax 0x5e
je r-xdata
cmp [ ebp + 0xc ] edx
jg r-xdata
cmp eax 0x1
je r-xdata
cmp [ edi + 0x70 ] edx
jmp r-xdata
cmp eax 0x2
je r-xdata
je r-xdata
cmp eax 0x1b
sub_416841
push ebp
mov ebp esp
mov eax 0x11c4
call sub_431ac0
or [ ebp - 0x28 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
mov eax [ ebp + 0xc ]
push ebx
push esi
mov ebx edx
xor edx edx
push edi
mov edi ecx
mov [ ebp - 0x14 ] ebx
xor ecx ecx
mov [ ebp - 0x10 ] edi
inc edx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x30 ] edx
mov esi ecx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x24 ] edi
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
jmp r-xdata
mov [ eax ] ecx
mov [ ebp - 0xd0 ] r--data
mov [ ebp - 0xcc ] r--data
mov [ ebp - 0xc8 ] r--data
mov [ ebp - 0xc4 ] r--data
test ebx 0xd8008580
jne r-xdata
pop esi
jmp r-xdata
push 0x11
jmp r-xdata
test ebx 0x10000
jne r-xdata
mov ecx esi
call sub_48dec9
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
pop esi
jmp r-xdata
mov [ ebp - 0x18 ] edx
jmp r-xdata
push 0x28
pop edx
mov [ ebp - 0x6c ] ecx
cmp [ edi ] dx
je r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp + 0x10 ]
sub eax [ ebp - 0x10 ]
sar eax 0x1
mov [ ecx ] eax
cmp [ edi + esi * 2 + 0x2 ] 0x2a
jne r-xdata
test ebx 0x800
je r-xdata
mov eax [ ebp + 0x10 ]
xor ecx ecx
jmp r-xdata
lea edi [ edi + esi * 2 ]
mov edx r--data
add edi 0x4
push 0x6
mov ecx edi
call sub_41832a
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x4
mov edx r--data
mov ecx edi
call sub_41832a
pop ecx
test eax eax
je r-xdata
add esi 0x8
jmp r-xdata
mov ecx 0x1800000
mov eax ebx
and eax ecx
cmp eax ecx
je r-xdata
push 0x4e
jmp r-xdata
test ebx 0x2000
je r-xdata
add esi 0x6
push 0x4
mov edx r--data
mov ecx edi
call sub_41832a
pop ecx
test eax eax
jne r-xdata
or ebx 0x800
jmp r-xdata
push 0x38
jmp r-xdata
mov eax ebx
push 0x2
pop ecx
and eax 0x700000
jne r-xdata
push eax
or edx 0xffffffff
mov ecx edi
call sub_48ecb1
mov [ ebp - 0x8 ] eax
pop ecx
test eax eax
je r-xdata
mov [ ebp - 0x14 ] ebx
push 0x10
mov edx r--data
mov ecx edi
call sub_41832a
pop ecx
test eax eax
jne r-xdata
add esi 0x6
or ebx 0x20000000
jmp r-xdata
cmp eax 0x100000
je r-xdata
mov [ ebp - 0x54 ] ecx
jmp r-xdata
jmp r-xdata
push 0xd
mov edx r--data
mov ecx edi
call sub_41832a
pop ecx
test eax eax
jne r-xdata
add esi 0x12
or ebx 0x20000
jmp r-xdata
push 0xd
cmp eax 0x200000
je r-xdata
lea eax [ edi + ecx * 2 ]
mov [ ebp - 0x68 ] edx
mov [ ebp - 0xb4 ] eax
mov ecx ebx
lea eax [ edi + esi * 2 ]
mov [ ebp - 0x78 ] edx
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x11c0 ]
mov [ ebp - 0x18 ] eax
mov eax 0x83
mov [ ebp - 0x11c0 ] ax
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0xd0 ]
mov [ ebp - 0x74 ] edx
push eax
push edx
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x88 ] edx
push eax
lea eax [ ebp - 0x1c ]
mov [ ebp - 0xac ] edx
push eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x70 ] ebx
push eax
lea eax [ ebp - 0x3c ]
push eax
push edx
push edx
push edx
push edx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x18 ]
call sub_416dbd
mov esi [ ebp - 0x8 ]
add esp 0x34
test esi esi
jne r-xdata
lea eax [ eax + 0x2 ]
inc ecx
cmp [ eax ] dx
jne r-xdata
push 0x4a
push 0xc
mov edx r--data
mov ecx edi
call sub_41832a
pop ecx
test eax eax
jne r-xdata
add esi 0xf
or ebx 0x4000000
jmp r-xdata
lea eax [ ebp - 0x11c0 ]
mov [ ebp - 0x84 ] edx
mov ecx edx
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb0 ] eax
mov [ ebp - 0xc0 ] eax
lea eax [ ebp - 0x1c0 ]
mov [ ebp - 0xa8 ] eax
mov eax edi
mov [ ebp - 0x80 ] edx
mov [ ebp - 0x8c ] edx
mov [ ebp - 0x90 ] edx
mov [ ebp - 0xa0 ] edx
mov [ ebp - 0x9c ] edx
mov [ ebp - 0xa4 ] edx
mov [ ebp - 0x58 ] edx
mov [ ebp - 0x7c ] edx
mov [ ebp - 0x94 ] 0x800
mov [ ebp - 0x98 ] 0x14
mov [ ebp - 0xb8 ] edi
cmp [ edi ] dx
je r-xdata
push 0xa
jmp r-xdata
cmp eax 0x300000
je r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] ecx
cmp ecx 0x10000
jg r-xdata
push 0x10
mov edx r--data
mov ecx edi
call sub_41832a
pop ecx
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
lea edi [ esi + 0xe ]
mov [ ebp - 0xc ] eax
movzx eax [ ecx + edi * 2 ]
push eax
call sub_423ddf
pop ecx
test eax eax
je r-xdata
xor edx edx
mov [ ebp - 0x50 ] 0x1
pop eax
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x4c ] ax
jmp r-xdata
push 0xd
pop eax
push 0xa
mov [ ebp - 0x4c ] ax
xor edx edx
pop eax
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x4a ] ax
jmp r-xdata
cmp eax __dos_header
je r-xdata
push 0x14
jmp r-xdata
cmp [ ebp - 0x58 ] esi
jne r-xdata
push 0x3
mov edx r--data
mov ecx edi
call sub_41832a
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0xc ] eax
lea edi [ esi + 0x12 ]
mov eax [ ebp - 0x10 ]
movzx eax [ eax + edi * 2 ]
push eax
call sub_423ddf
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
push 0x29
pop ecx
mov ax [ eax + edi * 2 ]
cmp ax cx
jne r-xdata
mov ebx [ ebp - 0xc ]
mov esi [ ebp - 0x10 ]
mov [ ebp - 0x54 ] 0x1
jmp r-xdata
cmp eax r--data
je r-xdata
mov eax [ ebp - 0x7c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x9c ]
imul eax [ ebp - 0xa0 ]
add eax ecx
lea esi [ eax * 2 + 0x38 ]
push esi
call [ r--data ]
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
push 0x3
mov edx r--data
mov ecx edi
call sub_41832a
pop ecx
test eax eax
jne r-xdata
add esi 0x5
mov eax 0x100000
jmp r-xdata
mov eax [ ebp - 0x10 ]
push 0x29
pop ecx
mov ax [ eax + edi * 2 ]
cmp ax cx
jne r-xdata
mov ebx [ ebp - 0xc ]
mov esi [ ebp - 0x10 ]
mov edi [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x28 ]
jae r-xdata
mov esi [ ebp - 0x4 ]
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x14 ]
imul ecx ebx 0xa
movzx ebx [ esi + edi * 2 ]
add ecx 0xffffffd0
add ebx ecx
inc edi
movzx eax [ esi + edi * 2 ]
push eax
call sub_423ddf
pop ecx
test eax eax
jne r-xdata
xor edx edx
jmp r-xdata
lea ecx [ ecx + eax * 2 ]
mov [ ebp - 0x30 ] ecx
jmp r-xdata
push 0x15
mov [ ebx + 0x4 ] esi
xor esi esi
mov [ ebx ] 0x50435245
mov eax [ ebp - 0x70 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x6c ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x28 ]
mov [ ebx + 0x10 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
push 0x1c
pop eax
mov [ ebx + 0x22 ] ax
mov ax [ ebp - 0x9c ]
mov [ ebx + 0x24 ] ax
mov ax [ ebp - 0xa0 ]
mov [ ebx + 0x26 ] ax
xor eax eax
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] eax
mov [ ebx + 0x30 ] esi
mov [ ebx + 0x34 ] esi
mov eax [ ebp - 0x90 ]
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x78 ] esi
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x90 ] esi
mov [ ebp - 0x88 ] esi
movzx eax [ ebx + 0x22 ]
lea edx [ ebx + eax * 2 ]
mov [ ebp - 0xa4 ] edx
movzx eax [ ebx + 0x24 ]
movzx ecx [ ebx + 0x26 ]
imul ecx eax
mov eax [ ebp - 0xc0 ]
mov [ ebp - 0xb0 ] eax
mov eax [ ebp - 0xa0 ]
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x64 ] esi
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x5c ] esi
mov [ ebp - 0xac ] esi
lea edi [ edx + ecx * 2 ]
mov [ ebp - 0x20 ] edi
mov [ ebp - 0xbc ] edi
test eax eax
jg r-xdata
push 0x5
mov edx r--data
mov ecx edi
call sub_41832a
pop ecx
test eax eax
jne r-xdata
add esi 0x5
mov eax 0x200000
jmp r-xdata
and ebx 0xff8fffff
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x20 ]
jae r-xdata
mov esi [ ebp - 0x4 ]
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x14 ]
imul ecx ebx 0xa
movzx ebx [ esi + edi * 2 ]
add ecx 0xffffffd0
add ebx ecx
inc edi
movzx eax [ esi + edi * 2 ]
push eax
call sub_423ddf
pop ecx
test eax eax
jne r-xdata
lea esi [ edi + 0x1 ]
jmp r-xdata
or [ ebp - 0x6c ] 0x2000
mov [ ebp - 0x28 ] eax
jmp r-xdata
cmp ebx 0x19999998
ja r-xdata
mov [ ebp - 0xa0 ] esi
mov edi eax
mov esi [ ebp - 0xa8 ]
add esi 0x4
mov eax [ ebp - 0x38 ]
lea edx [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
mov eax 0x83
push esi
mov [ edi ] ax
lea eax [ ebp - 0xd0 ]
push eax
push esi
mov ecx [ ebx + 0x8 ]
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] edi
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push esi
push esi
push esi
push esi
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call sub_416dbd
mov ax [ ebp - 0x90 ]
add esp 0x34
mov [ ebx + 0x1e ] ax
mov ax [ ebp - 0x84 ]
mov [ ebx + 0x20 ] ax
mov ax [ ebp - 0x88 ]
mov [ ebx + 0x1c ] ax
mov eax [ ebp - 0x6c ]
or eax 0x2
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x64 ] 0x0
jne r-xdata
push 0x4
mov edx r--data
mov ecx edi
call sub_41832a
pop ecx
test eax eax
jne r-xdata
add esi 0x7
mov eax 0x300000
jmp r-xdata
or ebx eax
or [ ebp - 0x6c ] 0x4000
mov [ ebp - 0x20 ] eax
cmp ebx 0x19999998
ja r-xdata
mov edi [ ebp - 0x10 ]
push 0x28
pop eax
mov [ ebp - 0x4 ] esi
cmp [ edi + esi * 2 ] ax
je r-xdata
push [ esi + 0x4 ]
mov edx [ esi - 0x4 ]
lea ecx [ ebp - 0xd0 ]
push [ esi ]
call sub_48da60
dec edi
lea esi [ esi + 0xc ]
pop ecx
pop ecx
test edi edi
jg r-xdata
mov edi [ ebp - 0x20 ]
xor esi esi
cmp [ ebp - 0x98 ] 0x14
jle r-xdata
mov eax esi
mov [ ebp - 0x34 ] eax
or eax 0xffffffff
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
push 0x8
mov edx r--data
mov ecx edi
call sub_41832a
pop ecx
test eax eax
jne r-xdata
add esi 0x6
mov eax __dos_header
jmp r-xdata
push [ ebp - 0xa8 ]
call [ r--data ]
pop ecx
jmp r-xdata
mov esi [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x8 ] esi
test esi esi
jne r-xdata
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov [ eax ] cx
add eax 0x2
mov [ ebp - 0x18 ] eax
sub eax edi
sar eax 0x1
cmp eax [ ebp - 0x30 ]
jg r-xdata
mov eax [ ebp - 0x24 ]
cmp [ eax ] dx
jne r-xdata
push 0xc
mov edx r--data
mov ecx edi
call sub_41832a
pop ecx
test eax eax
jne r-xdata
add esi 0xa
mov eax r--data
push 0x17
pop esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xc0 ]
cmp eax ecx
ja r-xdata
push 0x16
pop esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
push 0xc
mov edx r--data
mov ecx edi
call sub_41832a
pop ecx
test eax eax
jne r-xdata
mov eax 0x800000
jmp r-xdata
or [ ebp - 0x1c ] 0xffffffff
test esi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x800
jg r-xdata
mov eax 0x1000000
add esi 0xe
and ebx 0xfe7fffff
cmp eax ecx
jbe r-xdata
push ecx
call [ r--data ]
pop ecx
jmp r-xdata
xor eax eax
mov [ ebp - 0xc0 ] eax
test esi esi
jne r-xdata
sub eax 0x2
mov [ ebp - 0xb0 ] eax
movzx eax [ eax ]
mov [ ebp - 0x2c ] eax
movzx eax [ edi + eax * 2 ]
cmp eax [ ebp - 0x1c ]
je r-xdata
test [ ebp - 0x14 ] 0x20000
mov esi [ ebp - 0x4 ]
jne r-xdata
mov ax [ ebx + 0x20 ]
cmp ax [ ebx + 0x1e ]
ja r-xdata
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx edi
push eax
call sub_48d8ad
pop ecx
mov ecx [ ebp - 0x2c ]
mov edx eax
movzx eax [ edi + ecx * 2 ]
mov ecx [ ebp - 0xc0 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
lea eax [ ebp - 0xd0 ]
mov edx esi
push eax
mov ecx edi
call sub_418720
pop ecx
push 0xf
pop esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
push 0x35
pop esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov ecx edx
sub ecx edi
sar ecx 0x1
mov [ edi + eax * 2 ] cx
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xc0 ]
jmp r-xdata
push 0xffffffff
mov edx esi
mov ecx edi
call sub_48d8ad
mov [ ebp - 0x1c ] eax
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x8 ]
xor ecx ecx
cmp [ eax + 0x2 ] cx
jne r-xdata
push ebx
call [ r--data ]
pop ecx
mov eax [ ebx + 0x8 ]
mov esi 0x80
mov [ ebp - 0x38 ] eax
mov [ ebp + 0xc ] esi
lea ecx [ esi + 0x7f ]
test al 0x10
jne r-xdata
push 0xffffffff
lea ecx [ eax + 0x4 ]
mov edx esi
call sub_48d8ad
mov [ ebp - 0x1c ] eax
pop ecx
test eax eax
jne r-xdata
movzx edi [ eax - 0x2 ]
movzx esi [ eax + edi * 2 - 0x4 ]
mov [ eax + edi * 2 - 0x4 ] cx
lea ecx [ ebp - 0xd0 ]
mov edx [ ebx + 0x8 ]
push ecx
shr edx 0xb
mov ecx eax
and edx 0x1
push 0x1
call sub_48dee9
pop ecx
pop ecx
mov ecx eax
mov eax [ ebp - 0x1c ]
mov [ eax + edi * 2 - 0x4 ] si
test ecx ecx
js r-xdata
mov eax [ ebp - 0x28 ]
test eax eax
jns r-xdata
xor esi esi
lea eax [ ebp - 0xd0 ]
push esi
push eax
xor edx edx
mov ecx edi
call sub_41674c
pop ecx
pop ecx
test eax eax
jne r-xdata
mov esi [ ebp - 0x8 ]
jmp r-xdata
cmp ecx 0xfffffffe
jne r-xdata
cmp ecx [ ebp - 0x88 ]
jle r-xdata
test [ ebx + 0x8 ] 0x10
jne r-xdata
mov esi [ ebp - 0x18 ]
mov eax [ ebp - 0x38 ]
or eax 0x10
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
test eax eax
jns r-xdata
mov edi [ ebp - 0x20 ]
jmp r-xdata
cmp ecx 0xfffffffc
je r-xdata
push 0x24
jmp r-xdata
mov esi [ ebp - 0x4 ]
mov [ eax + 0x2 ] cx
mov [ ebp - 0x88 ] ecx
test al 0x2
je r-xdata
mov edx [ ebp - 0x34 ]
mov [ ebx + 0x1a ] dx
test al 0x1
je r-xdata
or [ ebx + 0xc ] 0x8000
jmp r-xdata
movzx eax [ edi + 0x2 ]
lea edi [ edi + eax * 2 ]
cmp [ edi ] 0x77
je r-xdata
mov esi 0x80
lea ecx [ esi + 0x7f ]
mov edx [ ebp - 0x3c ]
push esi
lea edx [ ebp - 0xc ]
mov ecx edi
call sub_418de4
mov edx eax
mov eax [ ebp - 0xc ]
pop ecx
test eax eax
jns r-xdata
test esi esi
jne r-xdata
push 0x46
push 0x19
pop esi
pop esi
jmp r-xdata
or [ ebx + 0xc ] 0x40
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebx
xor eax eax
mov edx esi
push eax
lea eax [ ebp - 0xd0 ]
mov ecx edi
push eax
push [ ebp - 0x4 ]
call sub_418413
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] esi
mov esi 0x80
je r-xdata
mov esi 0x80
lea ecx [ esi + 0x7f ]
mov [ ebx + 0x18 ] dx
test al 0x1
jne r-xdata
lea eax [ ebp - 0xd0 ]
xor edx edx
push esi
push eax
mov ecx edi
call sub_418eac
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp dx cx
ja r-xdata
cmp dx si
jae r-xdata
mov ecx 0xff
cmp dx cx
ja r-xdata
cmp dx si
jb r-xdata
or [ ebx + 0xc ] 0x100
jmp r-xdata
jmp r-xdata
movzx esi dx
mov eax esi
shr eax 0x7
movzx ecx [ eax + r--data ]
mov eax esi
cdq
idiv [ ebp + 0xc ]
shl ecx 0x7
add ecx edx
movzx eax [ ecx * 2 + r--data ]
mov eax [ eax * 8 + r--data ]
add eax esi
cmp eax esi
je r-xdata
mov eax [ ebp - 0xcc ]
movzx ecx dx
movzx eax [ ecx + eax ]
cmp ax dx
jne r-xdata
or [ ebx + 0xc ] 0x10
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xcc ]
movzx ecx dx
movzx eax [ ecx + eax ]
cmp ax dx
movzx esi dx
mov eax esi
shr eax 0x7
movzx ecx [ eax + r--data ]
mov eax esi
cdq
idiv [ ebp + 0xc ]
shl ecx 0x7
add ecx edx
movzx eax [ ecx * 2 + r--data ]
mov eax [ eax * 8 + r--data ]
add eax esi
cmp eax esi
mov esi 0x80
jmp r-xdata
mov eax 0x80
or [ ebx + 0xc ] eax
jmp r-xdata
or [ ebx + 0xc ] esi
jmp r-xdata
or [ ebx + 0xc ] 0x20
jmp r-xdata
mov ecx 0xff
je r-xdata
sub_416dbd
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x64
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ edx ]
mov eax [ eax ]
push edi
xor edi edi
mov [ esp + 0x20 ] eax
mov eax [ rw-data ]
mov [ esp + 0x50 ] edx
mov [ esp + 0x40 ] ecx
mov [ esp + 0x14 ] esi
mov [ esp + 0x4c ] esi
mov [ esp + 0x44 ] edi
mov [ esp + 0x48 ] edi
test eax eax
jne r-xdata
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x30 ]
mov edx [ ebp + 0x18 ]
mov [ esp + 0x68 ] eax
push 0xfffffffe
pop eax
mov [ esp + 0x10 ] eax
lea ecx [ edx + 0x4 ]
mov [ esp + 0x30 ] eax
mov eax 0x85
mov [ esp + 0x6c ] esi
mov [ esp + 0x1c ] edi
mov [ esp + 0x2c ] edi
mov edi [ ebp + 0x34 ]
mov [ esp + 0xc ] ecx
cmp [ esi ] ax
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x55
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ esp + 0x48 ] eax
mov [ esp + 0x64 ] ax
mov eax [ edi + 0x24 ]
mov [ esp + 0x60 ] eax
xor eax eax
mov [ esp + 0x66 ] ax
lea eax [ esp + 0x60 ]
mov [ edi + 0x24 ] eax
jmp r-xdata
lea eax [ esi + 0x2 ]
xor ebx ebx
mov [ esp + 0x5c ] eax
mov [ eax ] bx
lea eax [ edx * 2 + 0x4 ]
mov [ esp + 0x54 ] eax
add esi eax
mov eax [ edi + 0x40 ]
push 0x7c
mov [ esp + 0x38 ] eax
mov [ esp + 0x5c ] eax
pop edx
xor eax eax
jmp r-xdata
mov [ edi + 0x40 ] eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi ] dx
xor eax eax
add esi 0x2
mov [ esp + 0x44 ] esi
mov [ esi ] ax
add esi 0x2
add ecx 0x2
mov [ esp + 0x18 ] esi
mov [ esp + 0xc ] ecx
jmp r-xdata
mov esi [ ebp + 0x38 ]
lea ecx [ esp + 0xc ]
mov eax esi
lea edx [ esp + 0x18 ]
neg eax
sbb eax eax
and eax ecx
lea ecx [ esp + 0x40 ]
push eax
push edi
push [ ebp + 0x1c ]
lea eax [ esp + 0x74 ]
push eax
lea eax [ esp + 0x34 ]
push eax
lea eax [ esp + 0x3c ]
push eax
lea eax [ esp + 0x50 ]
push eax
lea eax [ esp + 0x58 ]
push eax
push [ ebp + 0xc ]
lea eax [ esp + 0x44 ]
push eax
call sub_4170fe
add esp 0x28
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ esp + 0x20 ]
mov [ ecx ] eax
mov eax [ esp + 0x34 ]
cmp [ edi + 0x40 ] eax
ja r-xdata
mov eax [ edi + 0x40 ]
mov [ esp + 0x34 ] eax
jmp r-xdata
test esi esi
mov esi [ esp + 0x18 ]
jne r-xdata
mov ebx [ esp + 0x20 ]
push 0x7c
pop edx
cmp [ ebx ] dx
je r-xdata
push 0x77
pop eax
cmp [ ebx ] ax
je r-xdata
cmp [ ebp + 0x38 ] 0x0
mov ecx [ esp + 0xc ]
je r-xdata
cmp [ ebp + 0x38 ] 0x0
jne r-xdata
mov ecx [ esp + 0x30 ]
mov eax [ esp + 0x38 ]
mov edx [ esp + 0x3c ]
test ecx ecx
jns r-xdata
mov eax [ esp + 0x3c ]
mov edx [ esp + 0x28 ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x38 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x1c ] edx
mov [ esp + 0x10 ] eax
push 0x77
pop eax
mov [ esi ] ax
mov eax esi
sub eax [ esp + 0x14 ]
sar eax 0x1
mov [ esi + 0x2 ] ax
mov [ esp + 0x14 ] esi
mov [ esp + 0x6c ] esi
add esi 0x4
jmp r-xdata
mov eax [ esp + 0x50 ]
mov esi [ eax ]
add esi [ esp + 0x54 ]
add ecx 0x2
mov [ esp + 0xc ] ecx
mov ecx [ esp + 0x4c ]
push 0x78
pop eax
mov [ esi ] ax
mov eax esi
sub eax ecx
sar eax 0x1
mov [ esi + 0x2 ] ax
add esi 0x4
cmp [ esp + 0x48 ] 0x0
jg r-xdata
mov edi [ esp + 0x14 ]
mov edx esi
sub edx edi
sar edx 0x1
cmp ecx eax
jne r-xdata
test eax eax
js r-xdata
mov edx [ esp + 0x40 ]
xor eax eax
shr edx 0xb
mov ecx ebx
push edi
and edx 0x1
mov [ esi ] ax
push eax
call sub_48dee9
pop ecx
pop ecx
mov ecx eax
cmp ecx 0xfffffffd
jne r-xdata
mov eax [ esp + 0x58 ]
add ebx 0x2
mov [ esp + 0x20 ] ebx
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
mov ebx [ esp + 0x14 ]
mov [ esp + 0x18 ] esi
jne r-xdata
mov eax [ edi + 0x24 ]
xor edx edx
cmp [ eax + 0x6 ] dx
jne r-xdata
mov ecx [ esp + 0xc ]
movzx ecx [ edi + 0x2 ]
mov eax ecx
mov [ edi + 0x2 ] dx
neg eax
mov edx ecx
lea edi [ edi + eax * 2 ]
test ecx ecx
jg r-xdata
mov edi [ ebp + 0x34 ]
cmp [ esp + 0x10 ] 0x0
jge r-xdata
mov edi [ ebp + 0x34 ]
cmp [ esp + 0x2c ] edx
je r-xdata
mov ecx [ esp + 0x24 ]
mov ecx [ esp + 0x24 ]
test ecx ecx
jns r-xdata
test ecx ecx
js r-xdata
mov [ edi + 0x74 ] 0x1
jmp r-xdata
mov eax esi
sub eax ecx
and eax 0xfffffffe
push eax
push ecx
lea eax [ ecx + 0x4 ]
push eax
call sub_427f60
mov ecx [ esp + 0x58 ]
mov eax 0x81
add esp 0xc
mov [ ecx ] ax
lea eax [ esi + 0x4 ]
sub eax ecx
mov ecx [ esp + 0x5c ]
sar eax 0x1
push 0x78
mov [ ecx ] ax
pop ecx
mov [ esi + 0x4 ] cx
mov ecx [ esp + 0xc ]
mov [ esi + 0x6 ] ax
add esi 0x8
add ecx 0x4
jmp r-xdata
mov ecx [ esp + 0xc ]
xor eax eax
inc eax
mov edx [ ebx ]
mov eax 0x7fffffeb
sub eax edx
cmp eax ecx
jl r-xdata
or ecx 0xffffffff
mov [ esp + 0x30 ] ecx
mov ebx [ esp + 0x2c ]
mov [ esp + 0x1c ] ebx
mov ebx [ esp + 0x14 ]
mov [ esp + 0x10 ] ecx
test ecx ecx
js r-xdata
mov eax ecx
xor eax [ esp + 0x10 ]
test eax 0xfffffffd
je r-xdata
mov edx [ esp + 0x28 ]
jmp r-xdata
mov ecx eax
mov [ esp + 0x28 ] edx
mov [ esp + 0x24 ] ecx
cmp ecx 0xfffffffe
jne r-xdata
cmp ecx [ edi + 0x48 ]
jle r-xdata
mov eax [ edi + 0x24 ]
mov eax [ eax ]
mov [ edi + 0x24 ] eax
jmp r-xdata
mov eax [ esp + 0x34 ]
mov edx [ esp + 0x2c ]
mov [ edi + 0x40 ] eax
mov eax [ esp + 0x50 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x38 ]
mov [ eax ] edx
mov eax [ ebp + 0x24 ]
mov edx [ esp + 0x30 ]
mov [ eax ] edx
mov eax [ ebp + 0x28 ]
mov edx [ esp + 0x1c ]
mov [ eax ] edx
mov eax [ ebp + 0x2c ]
mov edx [ esp + 0x10 ]
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x14
jmp r-xdata
add ecx edx
mov [ ebx ] ecx
cmp [ esp + 0x1c ] edx
jne r-xdata
or [ esp + 0x10 ] 0xffffffff
jmp r-xdata
xor eax eax
cmp ecx 0xfffffffc
setne al
dec eax
and eax 0x2d
add eax 0x19
push 0x24
pop eax
jmp r-xdata
mov eax [ esp + 0x44 ]
mov [ eax ] cx
jmp r-xdata
mov [ edi + 0x48 ] ecx
or [ esp + 0x10 ] ecx
mov [ esp + 0x1c ] edx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
sub_4170fe
push ebp
mov ebp esp
sub esp 0x184
mov eax ecx
mov [ ebp - 0x140 ] edx
xor ecx ecx
mov [ ebp - 0x120 ] eax
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x58 ] ecx
mov eax [ eax ]
mov [ ebp - 0x98 ] ecx
mov [ ebp - 0x84 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x9c ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x80 ] ecx
mov [ ebp - 0x48 ] ecx
push ebx
mov ebx [ edx ]
mov edx ecx
mov ecx eax
mov [ ebp - 0x34 ] eax
shr ecx 0xb
and ecx 0x1
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x44 ] ecx
mov ecx eax
shr ecx 0x9
and ecx 0x1
movsx eax al
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xe0 ] ecx
xor ecx 0x1
push edi
mov [ ebp - 0xe4 ] ecx
xor ecx ecx
and eax [ ebp - 0xc ]
mov esi [ esi ]
push 0xfffffffe
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x7c ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x6c ] ecx
pop ecx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xa4 ] ebx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x8c ] eax
mov [ ebp - 0xd8 ] 0xff
mov [ ebp - 0x100 ] 0xfc00
mov [ ebp - 0x108 ] 0xdc00
mov [ ebp - 0x148 ] 0x2b
mov [ ebp - 0x128 ] 0x7b
mov [ ebp - 0xb0 ] 0x30
mov [ ebp - 0x104 ] 0x29
mov [ ebp - 0x88 ] 0x39
mov [ ebp - 0x154 ] 0x3c
mov [ ebp - 0x13c ] 0x52
mov [ ebp - 0xdc ] 0x27
mov [ ebp - 0x158 ] 0x2d
mov [ ebp - 0x110 ] 0x10
mov [ ebp - 0xfc ] 0x81
mov [ ebp - 0xf8 ] 0x17
mov [ ebp - 0x114 ] 0x20
mov [ ebp - 0x134 ] 0x1d
mov [ ebp - 0x10c ] 0x1e
mov [ ebp - 0x14c ] 0x1f
mov [ ebp - 0x11c ] 0x6e
mov [ ebp - 0x150 ] 0x6f
mov [ ebp - 0x124 ] 0x70
mov [ ebp - 0x144 ] 0x71
mov [ ebp - 0x12c ] 0x73
mov [ ebp - 0x118 ] 0xf
test edx edx
je r-xdata
mov eax [ ebp + 0x28 ]
mov edx [ ebp + 0x2c ]
mov ecx [ eax + 0x3c ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 2 ]
add eax 0xffffff38
test edx edx
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x28 ]
cmp [ ecx + 0x20 ] eax
ja r-xdata
cmp ebx eax
ja r-xdata
mov esi edx
xor eax eax
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x40 ] eax
movzx edi [ esi ]
mov [ ebp - 0x24 ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x34
jmp r-xdata
mov eax [ ebp - 0xa8 ]
cmp ebx eax
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov ebx eax
mov [ ebp - 0x8 ] ebx
jmp r-xdata
mov edx [ edx ]
mov ecx ebx
sub ecx eax
mov eax 0x7fffffeb
sar ecx 0x1
sub eax edx
cmp eax ecx
jl r-xdata
test edi edi
je r-xdata
mov edx [ ebp - 0x34 ]
mov ebx edx
and ebx 0x8
mov [ ebp - 0x54 ] ebx
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x14
jmp r-xdata
lea eax [ edx + ecx ]
mov ecx [ ebp + 0x2c ]
mov edx [ ebp - 0x10 ]
mov [ ecx ] eax
test edx edx
je r-xdata
push 0x5c
pop eax
cmp edi eax
jne r-xdata
mov ebx 0xff
jmp r-xdata
push 0x2a
pop eax
cmp edi eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
xor eax eax
jmp r-xdata
mov ebx [ ebp - 0xa4 ]
mov ecx [ ebp - 0xa4 ]
cmp edx ecx
jbe r-xdata
mov eax [ ebp - 0x80 ]
test eax eax
je r-xdata
push 0x45
pop edx
cmp [ esi + 0x2 ] dx
mov edx [ ebp + 0x2c ]
jne r-xdata
cmp edi ebx
ja r-xdata
mov ecx [ ebp - 0xc ]
push 0x2b
pop eax
cmp edi eax
je r-xdata
mov ecx [ ebp + 0x28 ]
mov edx [ ebp + 0x2c ]
mov [ ebp - 0xa8 ] ebx
mov eax ebx
sub eax edx
and eax 0xfffffffe
push eax
push edx
push ecx
call sub_427f60
mov edx [ ebp - 0x10 ]
add esp 0xc
mov ecx [ ebp - 0xa4 ]
sub edx ecx
mov esi [ ebp - 0x4 ]
sar edx 0x1
neg edx
mov [ ebp - 0x10 ] ecx
lea ebx [ ebx + edx * 2 ]
jmp r-xdata
test [ ebp - 0x34 ] 0x4000
je r-xdata
test edx edx
jne r-xdata
xor ecx ecx
add esi 0x2
mov [ ebp - 0x3c ] ecx
jmp r-xdata
push 0x23
pop eax
cmp edi eax
jne r-xdata
mov eax [ ecx + 0xc ]
push 0x2
pop edx
test edx 0x4000
jne r-xdata
push 0x3f
pop eax
cmp edi eax
je r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp - 0x44 ] 0x0
mov ecx [ ebp - 0xc ]
mov ebx ecx
mov [ ebp - 0xf4 ] di
je r-xdata
push 0x76
pop eax
mov [ ebx ] ax
mov edx 0xff
lea eax [ ebx + 0x2 ]
mov [ ebp - 0x80 ] ebx
mov [ eax ] dx
sub esi [ ecx + 0x18 ]
xor ecx ecx
push 0x2
pop edx
add eax edx
sar esi 0x1
mov [ eax ] si
mov [ eax + 0x2 ] cx
add eax 0x4
mov esi [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x80 ] eax
sub esi [ ecx + 0x18 ]
sar esi 0x1
sub si [ eax + 0x4 ]
mov [ eax + 0x6 ] si
mov esi [ ebp - 0x4 ]
mov edx [ ebp - 0x40 ]
mov ebx [ ebp - 0x54 ]
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x24 ] edi
jmp r-xdata
push 0x2
pop edx
jmp r-xdata
mov [ ebp - 0x24 ] edi
add esi edx
mov [ ebp - 0x4 ] esi
movzx edi [ esi ]
cmp edi ebx
jbe r-xdata
test ecx ecx
jne r-xdata
mov edx [ ebp - 0x8 ]
push 0x7b
pop eax
cmp edi eax
je r-xdata
push 0x2
mov eax edi
mov edx 0xfc00
and eax edx
cmp eax 0xd800
je r-xdata
movzx edi [ esi ]
mov [ ebp - 0x24 ] edi
test edi edi
je r-xdata
add esi edx
mov [ ebp - 0x4 ] esi
test [ eax + edi ] 0x1
je r-xdata
test eax eax
jne r-xdata
mov eax edi
sub eax 0x5b
je r-xdata
je r-xdata
lea ecx [ esi + 0x2 ]
call sub_48e399
mov edx [ ebp - 0x34 ]
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp - 0x80 ] eax
mov ecx eax
mov eax [ ebp - 0x40 ]
jne r-xdata
mov ecx [ ebp - 0xc ]
test cl al
push 0x0
pop eax
setne al
push 0x1d
pop ecx
add eax ecx
mov [ edx ] ax
add edx esi
mov [ ebp - 0x8 ] edx
test ebx ebx
je r-xdata
test cl al
je r-xdata
add esi 0x2
push 0x2
mov ax [ esi ]
and ax dx
mov edx 0xdc00
cmp ax dx
jne r-xdata
mov edx [ ecx + 0x7c ]
test edx edx
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
push 0x76
pop edx
mov [ ebp - 0x80 ] eax
mov [ eax ] dx
add eax 0x2
mov edx 0xff
push 0x2
mov [ eax ] dx
pop edx
add eax edx
mov edx [ ebp + 0x28 ]
sub esi [ edx + 0x18 ]
sar esi 0x1
xor edx edx
mov [ eax + 0x2 ] dx
lea edx [ eax + 0x4 ]
mov [ eax ] si
mov esi [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
lea edi [ esi + 0x2 ]
mov edx r--data
push 0x6
mov ecx edi
call sub_41832a
pop ecx
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi [ ebp - 0xc ]
xor eax eax
mov edx eax
mov eax edi
xor ecx ecx
sub eax ecx
je r-xdata
jmp r-xdata
test eax eax
jne r-xdata
mov eax [ ebp - 0x24 ]
push 0xd
pop ecx
cmp ax cx
je r-xdata
mov ecx ebx
lea esi [ ebp - 0xf4 ]
shr ecx 0x1
mov edi edx
[ edi ] [ esi ]
adc ecx ecx
lea edx [ edx + ebx * 2 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] edx
movzx ecx di
mov edx 0xfc00
mov eax ecx
and eax edx
mov edx 0xd800
cmp eax edx
je r-xdata
pop esi
mov [ ebp - 0x4 ] esi
mov ax [ esi ]
pop esi
mov [ ebp - 0xf2 ] ax
mov ebx esi
jmp r-xdata
mov edx [ ecx + 0x80 ]
mov ecx [ ecx + 0x1c ]
lea eax [ edx + edx ]
sub ecx eax
cmp esi ecx
mov ecx [ ebp + 0x28 ]
ja r-xdata
cmp esi [ ecx + 0x1c ]
jae r-xdata
movzx edi [ esi ]
jmp r-xdata
push 0x3f
pop eax
cmp edi eax
ja r-xdata
lea edx [ esi + 0xe ]
mov esi r--data
jmp r-xdata
push 0x6
mov edx r--data
mov ecx edi
call sub_41832a
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x28 ]
lea edx [ ebp - 0x90 ]
xor ebx ebx
mov [ ebp - 0x74 ] esi
push ebx
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x4 ]
push [ eax + 0x40 ]
push [ ebp + 0xc ]
call sub_418359
mov edx [ ebp + 0xc ]
add esp 0x10
mov edi eax
cmp [ edx ] ebx
jne r-xdata
dec eax
je r-xdata
push 0x9
jmp r-xdata
test edx edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x6c ]
mov ebx [ ebp + 0x2c ]
mov [ eax ] ecx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x2c ]
mov [ eax ] ecx
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x64 ]
mov [ eax ] ecx
mov eax [ ebp + 0x1c ]
mov ecx [ ebp - 0x60 ]
mov [ eax ] ecx
mov eax [ ebp - 0x140 ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
test ebx ebx
je r-xdata
sub eax 0x24
je r-xdata
mov eax [ ebp - 0x98 ]
dec [ ebp - 0x98 ]
test eax eax
jg r-xdata
mov edx [ ebp + 0x28 ]
or [ edx + 0x64 ] 0x800
jmp r-xdata
push 0xa
pop ecx
cmp ax cx
je r-xdata
mov eax [ ebp - 0xf2 ]
mov edx 0x3ff
and ecx edx
and eax edx
shl ecx 0xa
or ecx eax
add ecx 0x10000
jmp r-xdata
mov eax ecx
mov ecx 0x80
cdq
idiv ecx
movzx eax [ eax + r--data ]
shl eax 0x7
add eax edx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
test eax eax
jne r-xdata
cmp [ ebp - 0x44 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x10 ] edx
je r-xdata
push 0x2
pop edx
add esi edx
cmp [ ebp - 0x44 ] 0x0
mov [ ebp - 0x4 ] esi
je r-xdata
cmp di [ ecx + 0x84 ]
jne r-xdata
push [ ebp - 0x44 ]
lea eax [ ecx + 0x80 ]
push eax
push [ ecx + 0x1c ]
mov ecx esi
call sub_415e9f
mov ecx [ ebp + 0x28 ]
add esp 0xc
test eax eax
je r-xdata
push 0x2
pop ebx
sub esi ebx
mov [ ebp - 0x40 ] edx
mov ebx [ ebp - 0x8 ]
jmp r-xdata
lea edx [ esi + 0xe ]
mov esi r--data
mov eax [ ebp - 0x8 ]
push 0x3a
mov [ ebp - 0x10 ] eax
movzx eax [ edi ]
pop ebx
cmp ax bx
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
test edi edi
jne r-xdata
mov eax [ ebp + 0x28 ]
test [ eax + 0x60 ] 0x2000000
je r-xdata
dec eax
je r-xdata
pop ecx
mov [ eax ] ecx
jmp r-xdata
mov eax edx
mov [ ebp - 0x50 ] ecx
sub eax edi
neg eax
sbb eax eax
and eax 0x2
mov [ ebp - 0x68 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x7c ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
sub edx [ ebp - 0xa8 ]
mov ecx 0x7fffffeb
mov eax [ ebx ]
sub ecx eax
sar edx 0x1
cmp ecx edx
jl r-xdata
mov ebx [ ebp - 0x8 ]
xor eax eax
test [ ebp - 0x34 ] 0x2
mov [ ebp - 0x10 ] eax
setne al
add eax 0x19
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp - 0x40 ]
jmp r-xdata
cmp [ ebp + 0x2c ] ecx
jne r-xdata
mov ecx [ ebp - 0x2c ]
cmp ecx 0xfffffffe
je r-xdata
mov edx [ ebp + 0x28 ]
mov ebx [ ebp - 0x8 ]
push 0x10
pop ecx
push 0x9
mov [ ebx ] cx
add ebx esi
pop ecx
mov [ ebx ] cx
add ebx esi
mov [ ebx ] ax
add ebx esi
cmp [ ebp - 0x2c ] 0xfffffffe
mov [ ebp - 0x8 ] ebx
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x34 ]
movzx edi [ esi ]
test di di
jne r-xdata
mov ax [ esi ]
mov edi 0xfc00
and ax di
mov edi 0xdc00
cmp ax di
jne r-xdata
cmp edx [ ebp - 0xc ]
je r-xdata
mov eax [ ecx + 0x80 ]
lea esi [ esi + eax * 2 ]
mov [ ebp - 0x4 ] esi
push 0x2
pop eax
add esi eax
mov [ ebp - 0x4 ] esi
jmp r-xdata
lea edx [ ebp - 0x74 ]
mov ecx esi
call sub_48dd94
test eax eax
je r-xdata
push 0x2e
pop ecx
cmp ax cx
je r-xdata
cmp edi 0x1a
je r-xdata
cmp [ ebp - 0x90 ] 0xffff
ja r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x40
jmp r-xdata
xor eax eax
test [ ebp - 0x34 ] 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
sub eax 0x1d
je r-xdata
add esi 0x2
jmp r-xdata
lea ecx [ esi + 0x2 ]
movzx eax [ ecx ]
push 0x2b
pop ebx
cmp ax bx
je r-xdata
lea ecx [ eax + edx ]
mov [ ebx ] ecx
mov [ ebx ] ax
push 0x2
jmp r-xdata
mov ecx [ ebp + 0x28 ]
xor ebx ebx
mov eax [ ebp - 0x34 ]
push 0x2
mov [ ebp - 0x68 ] eax
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x48 ] edx
pop edx
add esi edx
mov [ ebp - 0x14 ] ebx
push 0x2a
mov [ ebp - 0x4 ] esi
pop edi
movzx edx [ esi ]
mov [ ebp - 0x1c ] 0x85
mov [ ebp - 0x4c ] ebx
cmp dx di
je r-xdata
dec eax
je r-xdata
xor eax eax
mov [ ebp - 0x80 ] eax
jmp r-xdata
mov eax [ ebp + 0x28 ]
sub esi [ eax + 0x18 ]
mov eax [ ebp - 0x80 ]
sar esi 0x1
sub si [ eax + 0x4 ]
mov [ eax + 0x6 ] si
mov esi [ ebp - 0x4 ]
mov ecx [ ebp - 0x64 ]
or [ ebp - 0x70 ] 0xffffffff
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp - 0x60 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0xc ]
cmp ebx ecx
jne r-xdata
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x20 ] eax
cmp ebx [ ebp - 0xc ]
jne r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov ax [ esi + 0x2 ]
cmp ax [ ecx + 0x86 ]
je r-xdata
push 0x2
pop edx
push 0x5c
pop ecx
push 0x45
xor eax eax
pop edi
xor eax eax
cmp [ esi + 0x2 ] bx
push 0x1f
setne al
dec eax
pop ecx
and eax 0xffffffee
add eax ecx
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
push 0x3d
pop ecx
cmp ax cx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x5c
pop eax
cmp [ esi + 0x2 ] ax
jne r-xdata
cmp edi 0x19
je r-xdata
cmp [ ebp - 0x44 ] ebx
je r-xdata
mov di [ ebp - 0x90 ]
push 0x1b
cmp [ ebp - 0x2c ] 0xfffffffe
jne r-xdata
test ecx ecx
je r-xdata
dec eax
jne r-xdata
push 0x2
pop edx
xor eax eax
mov esi ecx
mov ebx eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] esi
jmp r-xdata
push 0x3f
pop ebx
cmp ax bx
je r-xdata
pop eax
add ebx eax
lea ebx [ esi + 0x2 ]
movzx eax [ ebx ]
push 0x3a
pop edi
mov [ ebp - 0x54 ] ebx
cmp ax di
je r-xdata
push 0x3f
pop edi
cmp dx di
je r-xdata
dec eax
je r-xdata
cmp [ ebp - 0x8c ] 0x0
je r-xdata
movzx eax ax
cmp ebx ecx
mov ebx [ ebp - 0x8 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x2c ] eax
je r-xdata
cmp [ ebp - 0x8c ] 0x0
jne r-xdata
mov ebx [ ebp - 0x8 ]
movzx eax [ ebx - 0x2 ]
mov [ ebp - 0x64 ] eax
mov eax [ edx + 0x68 ]
or eax [ ebp - 0x8c ]
or [ ebp - 0x70 ] 0xffffffff
lea ecx [ esi + 0x2 ]
cmp [ ecx ] di
je r-xdata
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x3c ] eax
jmp r-xdata
push 0x45
pop ecx
cmp [ esi + 0x4 ] cx
jne r-xdata
mov ebx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x2c ]
cmp ecx 0xfffffffe
jne r-xdata
mov ecx [ ebp - 0x90 ]
jmp r-xdata
push 0x1c
jmp r-xdata
or [ ebp - 0x2c ] 0xffffffff
push [ ebp + 0xc ]
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ esi + 0x2 ]
lea edx [ ebp - 0x5c ]
call sub_48e40b
mov esi eax
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
xor ecx ecx
mov [ ebp - 0x4 ] esi
cmp [ eax ] ecx
jne r-xdata
push 0x23
pop eax
cmp [ esi ] ax
je r-xdata
mov ecx [ ebx + 0xc ]
mov eax [ ebp - 0x10 ]
push 0x75
pop ecx
cmp [ eax ] cx
je r-xdata
mov ebx [ ebp - 0xe4 ]
mov esi ecx
mov [ ebp - 0x4 ] esi
jmp r-xdata
mov ebx [ ebp - 0xe0 ]
xor eax eax
mov esi ebx
mov [ ebp - 0x38 ] eax
mov edi 0xff
mov [ ebp - 0x24 ] eax
mov edx r--data
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] esi
movzx eax [ esi ]
mov [ ebp - 0x30 ] edx
cmp ax di
ja r-xdata
mov edi 0xff
cmp ax di
ja r-xdata
push 0x2
pop edx
add esi edx
mov [ ebp - 0x4 ] esi
movzx edi [ esi ]
mov eax edi
cmp eax 0x3a
jle r-xdata
test eax 0x1000
jne r-xdata
mov edx ecx
dec eax
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov esi ecx
jmp r-xdata
push 0x3
mov edx r--data
call sub_41832a
pop ecx
test eax eax
jne r-xdata
push 0x5d
pop ecx
cmp ebx ecx
je r-xdata
cmp ebx 0x5e
je r-xdata
mov ebx [ ebp - 0x8 ]
jmp r-xdata
add esi 0x4
jmp r-xdata
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x60 ]
push 0x1b
mov [ ebp - 0x20 ] eax
pop eax
mov [ ebp - 0x70 ] ecx
cmp edi eax
je r-xdata
lea eax [ edi - 0x6 ]
cmp eax 0x10
ja r-xdata
lea edx [ ebp - 0xf4 ]
call sub_48ec7b
mov di [ ebp - 0xf4 ]
mov ebx eax
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x24 ] edi
jmp r-xdata
mov ebx [ ebp - 0x8 ]
pop eax
jmp r-xdata
mov edi [ ebp - 0x58 ]
mov edx [ ebp - 0x5c ]
jmp r-xdata
add esi edx
mov edi [ ebp - 0x58 ]
add esi 0xfffffffe
mov edx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] esi
jmp r-xdata
add esi edx
movzx eax [ esi ]
cmp ax di
jbe r-xdata
mov esi [ ebp - 0x10 ]
push 0x4
pop eax
push eax
lea eax [ esi + 0x4 ]
push esi
push eax
call sub_427f60
add [ ebp - 0x8 ] 0x8
add esp 0xc
cmp [ ebp + 0x2c ] 0x0
mov eax 0x81
mov [ esi ] ax
push 0x4
pop eax
push 0x78
pop ecx
mov [ esi + 0x2 ] ax
mov [ esi + 0x8 ] cx
mov [ esi + 0xa ] ax
mov [ ebp - 0x84 ] 0x6
jne r-xdata
movzx ecx [ eax ]
cmp cx [ ebp - 0x134 ]
je r-xdata
mov [ ebp - 0x14 ] ebx
mov eax esi
sub eax ebx
push 0x3a
sar eax 0x1
pop ecx
mov [ ebp - 0x4c ] eax
cmp [ esi ] cx
jne r-xdata
mov ecx [ ecx + 0xc ]
push 0x2
pop edx
mov eax [ ebp - 0x34 ]
xor ebx ebx
jmp r-xdata
mov ecx eax
mov eax [ ebp + 0x28 ]
mov eax [ eax + 0xc ]
test [ ecx + eax ] 0x2
mov ecx [ ebp + 0x28 ]
je r-xdata
push 0x3a
pop ecx
cmp eax ecx
je r-xdata
sub eax 0x3c
je r-xdata
mov ebx 0x83
jmp r-xdata
mov eax [ ebp + 0x28 ]
mov edx [ ebp - 0x8 ]
inc [ eax + 0x40 ]
mov ax [ eax + 0x40 ]
mov [ edx + 0x4 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x58 ] edi
mov edx [ ebp - 0xc ]
jmp r-xdata
sub eax 0x3
je r-xdata
or [ ebp - 0x60 ] 0xffffffff
or [ ebp - 0x2c ] 0xffffffff
movzx ecx [ ebx - 0x2 ]
mov eax [ edx + 0x68 ]
mov [ ebp - 0x64 ] ecx
jmp r-xdata
push 0x5c
pop ecx
jmp r-xdata
mov edi [ ebp - 0x8 ]
xor edx edx
push 0x20
pop eax
push eax
add edi 0x6
mov [ ebp - 0x28 ] edx
push edx
lea eax [ ebp - 0xd0 ]
mov [ ebp - 0x54 ] edx
push eax
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x78 ] edi
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4c ] edx
call sub_422f60
mov esi [ ebp - 0x4 ]
add esp 0xc
test ebx ebx
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x28 ]
test [ ecx + 0x60 ] 0x2000000
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
mov edi [ ebp + 0x28 ]
xor ebx ebx
mov esi [ ebp - 0x4 ]
push 0x2
mov eax [ edi + 0x20 ]
mov [ ebp - 0x48 ] eax
pop eax
add esi eax
push 0x3c
pop eax
mov [ ebp - 0x4 ] esi
cmp [ esi ] ax
lea edx [ esi + 0x2 ]
push 0x17
setne bl
mov [ ebp - 0x54 ] edx
pop eax
dec ebx
and ebx eax
push 0x27
pop eax
add ebx eax
xor eax eax
push 0x2b
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4c ] eax
movzx eax [ edx ]
pop ecx
mov [ ebp - 0x68 ] ebx
cmp eax ecx
je r-xdata
push 0x1c
pop eax
cmp edi eax
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp - 0x10 ]
test ecx ecx
je r-xdata
mov edx [ ebx + 0x7c ]
test edx edx
je r-xdata
jmp r-xdata
movzx eax ax
test [ eax + ecx ] 0x1
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x5c ]
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x28 ]
push 0x2
pop edx
mov ecx [ eax + 0x20 ]
mov eax [ eax + 0x10 ]
add eax edx
cmp ecx eax
jb r-xdata
push 0x1e
mov eax ecx
pop edx
sub eax edx
je r-xdata
cmp cx [ ebp - 0x10c ]
je r-xdata
push 0x29
pop ecx
cmp [ esi ] cx
jne r-xdata
push 0x2
pop ecx
add esi ecx
mov [ ebp - 0x4 ] esi
mov edi esi
mov [ ebp - 0x24 ] edi
movzx eax [ esi ]
test ax ax
je r-xdata
mov edx [ ebp - 0x30 ]
add esi edx
mov [ ebp - 0x4 ] esi
movzx eax [ esi ]
cmp ax di
jbe r-xdata
mov ebx 0x83
jmp r-xdata
cmp eax 0x28
jg r-xdata
movzx eax [ esi + 0x2 ]
push 0x21
mov ecx eax
pop ebx
cmp ecx ebx
je r-xdata
dec eax
je r-xdata
mov edx [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] edi
jmp r-xdata
mov [ edx ] bx
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x50 ] edx
mov edx eax
mov eax [ ebp + 0x2c ]
mov edi [ edx + 0x68 ]
mov esi [ edx + 0x40 ]
xor edx edx
neg eax
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x84 ] edx
sbb eax eax
and eax ecx
mov ecx 0x87
cmp ebx ecx
je r-xdata
or edi 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x2c ]
cmp edx 0xfffffffe
jne r-xdata
mov [ ebp - 0x60 ] eax
add esi edx
mov [ ebp - 0x4 ] esi
movzx ebx [ esi ]
mov [ ebp - 0x24 ] ebx
cmp ebx ecx
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x6
jmp r-xdata
cmp [ ebp - 0x44 ] 0x0
je r-xdata
mov eax [ ebp - 0x38 ]
add esi 0x6
push 0x2
pop edx
mov ebx [ ebp - 0x8 ]
neg eax
sbb eax eax
and eax 0xffffff70
add eax 0x9d
mov [ ebx ] ax
add ebx edx
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x8 ] ebx
cmp edx 0xfffffffe
jne r-xdata
mov [ ebp - 0x38 ] eax
lea ecx [ esi + 0x4 ]
movzx eax [ ecx ]
push 0x30
pop edi
cmp ax di
jb r-xdata
push 0x2d
pop ecx
cmp eax ecx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x3c
pop edi
movzx eax [ esi + 0x2 ]
cmp ax di
je r-xdata
test edi edi
js r-xdata
mov edx [ ebx + 0x80 ]
mov ecx [ ebx + 0x1c ]
lea eax [ edx + edx ]
sub ecx eax
cmp esi ecx
ja r-xdata
cmp esi [ ebx + 0x1c ]
jae r-xdata
movzx eax [ esi ]
mov edi 0xff
mov ebx [ ebp + 0x28 ]
cmp ax di
ja r-xdata
movzx edx [ ecx - 0x2 ]
mov eax esi
mov esi [ ebp + 0x28 ]
push 0x2
sub eax [ esi + 0x14 ]
pop esi
add eax esi
sar eax 0x1
cmp edx eax
jne r-xdata
push 0xd
dec eax
je r-xdata
cmp cx [ ebp - 0x14c ]
je r-xdata
push 0x3c
jmp r-xdata
xor ecx ecx
mov ebx r--data
mov [ ebp - 0x18 ] ecx
mov ecx esi
sub ecx edi
sar ecx 0x1
mov [ ebp - 0x38 ] ecx
cmp ecx 0xffff
ja r-xdata
push 0x29
pop ebx
movzx eax ax
test [ eax + ecx ] 0x2
je r-xdata
add esi edx
jmp r-xdata
push 0x2b
pop ecx
cmp eax ecx
je r-xdata
je r-xdata
mov ebx 0x80
jmp r-xdata
push 0x3d
pop ebx
cmp ecx ebx
je r-xdata
inc [ ecx + 0x5c ]
push 0x7d
pop eax
mov ebx eax
dec eax
je r-xdata
push 0x52
pop edi
mov edx [ ebp - 0xc ]
jmp r-xdata
cmp ebx 0x7f
je r-xdata
mov ecx [ ebp - 0x64 ]
mov eax [ ebp - 0x60 ]
mov edi [ ebp - 0x6c ]
mov ebx [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
push 0x4
mov [ ebp - 0x28 ] ecx
pop ecx
movsx eax al
push 0x30
mov [ ebp - 0x7c ] edi
and eax ecx
pop edi
or eax edi
mov [ ebp - 0x70 ] edx
mov [ ebp - 0x10 ] ebx
shr eax 0x2
or edx 0xffffffff
mov [ ebp - 0x2c ] edx
mov edx [ ebp + 0x2c ]
test edx edx
je r-xdata
mov eax ebx
mov ecx 0xfc00
and eax ecx
mov edx 0xd800
cmp eax edx
je r-xdata
mov edi [ ebp - 0x6c ]
mov [ ebp - 0x7c ] edi
mov [ ebp - 0x70 ] edx
jmp r-xdata
or edx 0xffffffff
mov [ ebp - 0x2c ] edx
cmp [ ecx ] bx
je r-xdata
push 0x2
pop edx
push 0x30
pop ecx
cmp eax ecx
jb r-xdata
add esi 0x2
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] esi
movzx eax [ esi ]
cmp ax di
jne r-xdata
cmp ax [ ebp - 0xdc ]
je r-xdata
mov edx [ ebp + 0x28 ]
neg edi
jmp r-xdata
push 0xf
pop esi
cmp edi esi
je r-xdata
push 0x2
pop edx
add esi edx
cmp [ ebp - 0x44 ] 0x0
je r-xdata
cmp di [ ebx + 0x84 ]
jne r-xdata
push [ ebp - 0x44 ]
lea eax [ ebx + 0x80 ]
mov ecx esi
push eax
push [ ebx + 0x1c ]
call sub_415e9f
add esp 0xc
test eax eax
je r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx - 0x2 ] ax
movzx ebx [ ebx - 0x2 ]
push 0x1e
pop eax
cmp cx ax
ja r-xdata
lea edx [ ebx - 0x2 ]
mov ax [ edx ]
and ax [ ebp - 0x100 ]
cmp ax [ ebp - 0x108 ]
jne r-xdata
push 0x1a
pop edi
jmp r-xdata
dec eax
je r-xdata
cmp cx [ ebp - 0x114 ]
je r-xdata
mov eax [ ebp + 0xc ]
inc edx
add ebx 0xc
add edx edi
inc ecx
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x18 ] ecx
cmp ebx r--data
jl r-xdata
mov ecx [ ebp - 0x54 ]
push eax
call sub_41832a
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x4b
jmp r-xdata
mov eax [ ebp - 0x4c ]
add esi ecx
mov [ ebp - 0x4 ] esi
movzx eax [ esi ]
test ax ax
jne r-xdata
mov [ ebp - 0x4 ] esi
jmp r-xdata
push 0x29
pop eax
mov ebx eax
mov [ ebp - 0x68 ] ebx
jmp r-xdata
push 0x2d
pop ecx
cmp eax ecx
je r-xdata
push 0x3f
pop eax
mov ebx 0x87
mov edx esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x74 ] edx
cmp [ esi + 0x2 ] ax
jne r-xdata
push 0x21
pop ecx
sub eax ecx
je r-xdata
mov edx [ ebp + 0x28 ]
push 0x4
inc [ edx + 0x5c ]
push 0x7f
pop ebx
mov ebx 0xff
cmp ax bx
ja r-xdata
mov ebx 0x81
jmp r-xdata
sub eax 0x5
je r-xdata
xor ecx ecx
mov ecx [ ebp - 0xc ]
jmp r-xdata
add ecx 0xfffffff9
cmp ebx ecx
je r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x78 ]
cmp edi eax
ja r-xdata
movzx ebx [ esi ]
mov eax ebx
mov [ ebp - 0x24 ] ebx
and eax ecx
cmp eax edx
jne r-xdata
mov esi edx
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0xc ]
push 0x39
pop ecx
mov [ eax ] ecx
jmp r-xdata
mov edx [ ebp - 0x54 ]
add ecx edx
movzx eax [ ecx ]
cmp ax di
jae r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp eax 0x39
jbe r-xdata
push 0x27
xor ebx ebx
pop ecx
cmp ax cx
push 0x7d
setne bl
dec ebx
and ebx 0xffffffaa
pop eax
add ebx eax
push 0x3e
pop eax
mov ebx eax
jmp r-xdata
cmp ax [ ebp - 0x128 ]
je r-xdata
mov eax [ ebp - 0xc ]
push edx
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x68 ] ebx
push eax
lea eax [ ebp - 0x68 ]
mov [ ebp - 0x4c ] ebx
push eax
lea edx [ ebp - 0x130 ]
lea ecx [ ebp - 0x4 ]
call sub_48e27b
add esp 0xc
test eax eax
je r-xdata
push 0x10
pop eax
cmp edi eax
je r-xdata
movzx edi [ esi ]
test di di
jne r-xdata
mov ax [ esi ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
cmp edx [ ebp - 0xc ]
je r-xdata
mov eax [ ebx + 0x80 ]
lea esi [ esi + eax * 2 ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
push 0x10
pop edx
movzx eax [ ecx ]
cmp ax dx
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp - 0x5c ] eax
jle r-xdata
mov ax [ edx ]
mov ecx 0xfc00
and ax cx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
cmp [ ebp - 0x44 ] 0x0
mov ebx [ ebp - 0x8 ]
je r-xdata
push 0x27
jmp r-xdata
xor eax eax
jmp r-xdata
cmp cx [ ebp - 0xf8 ]
jb r-xdata
mov edi [ ebx ]
cmp eax edi
jne r-xdata
jmp r-xdata
imul eax [ ebp - 0x18 ] 0xc
mov edi 0x9e
mov ecx [ eax + r--data ]
cmp ecx edi
jne r-xdata
mov eax [ ebp - 0x4c ]
mov edx [ ebp - 0x30 ]
mov ecx [ ebp - 0x18 ]
cmp ax bx
je r-xdata
movzx edi [ esi ]
push 0x2b
mov edx edi
pop eax
mov [ ebp - 0x54 ] edx
cmp edx eax
jne r-xdata
cmp eax 0x2f
jle r-xdata
cmp [ edx + 0x2 ] ax
jne r-xdata
push 0x43
pop ecx
cmp [ esi + 0x4 ] cx
jne r-xdata
add esi edx
push 0x29
pop eax
mov [ ebp - 0x4 ] esi
cmp [ esi ] ax
jne r-xdata
sub eax edx
je r-xdata
mov eax [ ebp + 0xc ]
add esi edx
mov [ eax ] 0x18
jmp r-xdata
mov eax [ ebp + 0x28 ]
push 0x10
pop ebx
mov eax [ eax + 0xc ]
test [ ecx + eax ] bl
je r-xdata
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
push 0x76
mov [ ebp - 0x98 ] eax
pop eax
mov [ ebx ] ax
mov esi [ ebp - 0x4 ]
mov [ ebp - 0x80 ] ebx
add ebx edx
xor eax eax
push 0x30
mov ecx eax
pop edi
jmp r-xdata
push 0xd
pop ecx
sub eax ecx
je r-xdata
mov eax [ ebp + 0x28 ]
mov ecx 0x81
dec [ eax + 0x58 ]
cmp ebx ecx
je r-xdata
push eax
push [ ebp + 0x28 ]
lea eax [ ebp - 0x94 ]
push [ ebp + 0x20 ]
push eax
lea eax [ ebp - 0xac ]
push eax
lea eax [ ebp - 0xa0 ]
push eax
lea eax [ ebp - 0xd4 ]
push eax
mov eax [ ebp + 0x24 ]
add eax edx
lea edx [ ebp - 0x50 ]
push eax
push [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
push [ ebp - 0x4c ]
push ecx
push [ ebp + 0xc ]
mov ecx [ ebp - 0x68 ]
push eax
call sub_416dbd
add esp 0x34
test eax eax
je r-xdata
push 0x5c
pop eax
cmp ebx eax
jne r-xdata
cmp ebx 0x5b
je r-xdata
mov ecx [ ebp - 0xc ]
sub edi eax
sar edi 0x1
add [ edx ] edi
mov edi eax
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x1c ] edi
jmp r-xdata
add esi 0x2
mov ecx 0x3ff
and ebx ecx
shl ebx 0xa
movzx eax [ esi ]
and eax ecx
mov [ ebp - 0x4 ] esi
or ebx eax
add ebx 0x10000
mov [ ebp - 0x24 ] ebx
jmp r-xdata
push 0x2d
pop eax
cmp edx eax
jne r-xdata
push 0x2
pop eax
add esi eax
push 0x30
mov [ ebp - 0x4 ] esi
pop edi
movzx eax [ esi ]
cmp ax di
jb r-xdata
cmp ax [ ebp - 0x88 ]
ja r-xdata
push 0x2
pop eax
add esi eax
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x4c ] esi
movzx eax [ esi ]
cmp ax cx
jb r-xdata
mov ecx 0xff
cmp ax cx
ja r-xdata
push 0x39
pop ecx
cmp ax cx
ja r-xdata
mov edi [ ebp + 0x28 ]
push 0x30
pop ecx
push 0x45
pop eax
mov [ edx ] eax
jmp r-xdata
test [ ebp - 0x34 ] al
mov ebx [ ebp - 0x8 ]
push 0x0
pop eax
setne al
mov [ ebp - 0x10 ] ebx
push 0x71
pop ecx
add eax ecx
mov [ ebx ] ax
push 0x2
pop eax
add ebx eax
push 0x20
mov [ ebx ] di
add ebx eax
pop eax
cmp edi eax
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0xc ]
jge r-xdata
or [ ebp - 0x2c ] 0xffffffff
mov ebx [ ebp - 0x8 ]
xor eax eax
push 0x10
pop ecx
cmp edi ecx
mov [ ebp - 0x10 ] ebx
push 0x2
sete al
xor ecx ecx
cmp eax [ ebp - 0x130 ]
mov ax [ ebp - 0x68 ]
setne cl
add ecx esi
mov [ ebx ] cx
pop edx
add ebx edx
mov [ ebx ] ax
add ebx edx
mov ax [ ebp - 0x4c ]
mov [ ebx ] ax
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp edi 0x5
je r-xdata
mov ax [ esi + 0x2 ]
cmp ax [ ebx + 0x86 ]
je r-xdata
movzx eax [ ecx + 0x4 ]
movzx edx [ ecx + 0x2 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
push 0xf
pop edx
cmp ax dx
je r-xdata
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x64 ] ebx
mov eax [ eax + 0x68 ]
or eax [ ebp - 0x8c ]
mov [ ebp - 0x60 ] eax
jmp r-xdata
sub ebx edx
sar ebx 0x1
lea eax [ ebx + ebx ]
push eax
push edx
lea eax [ ebp - 0x184 ]
push eax
call sub_420fc0
mov esi [ ebp - 0x4 ]
add esp 0xc
or ebx 0x10000000
jmp r-xdata
push 0x2
pop eax
sub edx eax
pop eax
mov edi eax
push 0x34
pop edi
mov ebx ecx
cmp cx [ ebp - 0x11c ]
jne r-xdata
push 0x9
pop eax
cmp [ ebp - 0x18 ] eax
jl r-xdata
mov ebx [ ebp - 0x38 ]
test ebx ebx
jne r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
xor ecx ecx
push 0x29
mov eax ecx
mov edx ecx
pop ebx
mov [ ebp - 0x38 ] eax
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] edx
cmp di bx
je r-xdata
push 0x39
pop ecx
cmp eax ecx
jg r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0x8d
push 0x2
or edi 0xffffffff
xor edx edx
mov [ ebp - 0x18 ] edx
mov ebx edx
mov [ eax + 0x4 ] cx
or ecx edi
mov esi [ ebp - 0x4 ]
pop eax
add esi eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x24 ] ecx
movzx eax [ esi ]
cmp ax [ ebp - 0x13c ]
jne r-xdata
movzx eax [ edx + 0x4 ]
push 0x3d
pop ecx
cmp ax cx
je r-xdata
movzx eax [ esi + 0x6 ]
push 0x3
pop ecx
push 0x30
pop edi
jmp r-xdata
mov edx [ ebp + 0x28 ]
push 0x7e
pop ebx
inc [ edx + 0x5c ]
jmp r-xdata
movzx eax [ esi + 0x2 ]
push 0x2a
pop ecx
cmp ax cx
je r-xdata
add esi edx
mov [ ebp - 0x4 ] esi
movzx eax [ esi ]
test ax ax
je r-xdata
sub eax 0x3
je r-xdata
push 0x3c
pop eax
xor ecx ecx
cmp di ax
push 0x17
setne cl
add esi edx
pop eax
dec ecx
mov [ ebp - 0x4 ] esi
and ecx eax
mov ebx esi
push 0x27
pop eax
add ecx eax
mov [ ebp - 0x30 ] ebx
movzx eax [ esi ]
push 0x30
pop edx
cmp ax dx
jb r-xdata
add esi edx
mov [ ebp - 0x4 ] esi
movzx eax [ esi ]
cmp ax di
jae r-xdata
add esi edx
push 0x3d
mov [ ebp - 0x4 ] esi
pop eax
movzx edi [ esi ]
cmp di ax
je r-xdata
sub eax edx
je r-xdata
cmp [ eax + 0x40 ] esi
ja r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
push 0x45
pop ecx
cmp [ esi + 0x2 ] cx
jne r-xdata
movzx edi [ esi + 0x2 ]
push 0x3a
pop eax
cmp di ax
je r-xdata
push 0x5c
pop eax
cmp ebx eax
je r-xdata
xor eax eax
push 0x30
mov edi eax
movzx eax [ esi ]
pop ecx
cmp ax cx
jb r-xdata
movzx eax [ esi + 0x2 ]
cmp ax [ ebp - 0xb0 ]
jb r-xdata
push 0x3f
jmp r-xdata
push 0x39
pop ecx
cmp ax cx
jbe r-xdata
mov eax [ ebp - 0x4c ]
mov edi esi
mov ecx [ ebp + 0x2c ]
sub edi eax
sar edi 0x1
test ecx ecx
je r-xdata
mov ecx [ edi + 0xc ]
mov edi 0xff
push 0x2
pop edx
mov [ edx ] 0x54
jmp r-xdata
or [ edx + 0x50 ] eax
cmp edi [ edx + 0x4c ]
jle r-xdata
mov ecx edi
shl eax cl
add ebx edx
jmp r-xdata
mov edx [ ebp + 0x28 ]
cmp [ edx + 0x48 ] ebx
jne r-xdata
push 0x4
pop eax
cmp edi eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x18 ] edx
test eax eax
je r-xdata
or [ ebp - 0x1c ] 0xffffffff
or edx 0xffffffff
cmp cx [ ebp - 0x150 ]
je r-xdata
test edi edi
je r-xdata
xor ecx ecx
cmp [ eax + r--data ] ecx
jl r-xdata
test ecx ecx
js r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x3b
jmp r-xdata
mov ebx [ ebp + 0x28 ]
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx [ ebx + 0x24 ]
mov [ ebx + 0x6c ] eax
test ecx ecx
je r-xdata
or edx [ ebp - 0x34 ]
not eax
and edx eax
mov [ ebp - 0x68 ] edx
cmp [ esi ] bx
jne r-xdata
push 0x2
pop edx
cmp ax [ ebp - 0x154 ]
jne r-xdata
push 0x26
pop ecx
cmp [ esi + 0x2 ] cx
mov ecx [ ebp - 0x24 ]
jne r-xdata
push 0x21
pop ecx
cmp ax cx
je r-xdata
cmp ax di
jae r-xdata
push 0x2b
pop ecx
cmp ax cx
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x12
jmp r-xdata
push 0x29
pop ecx
push 0x29
pop eax
mov ebx eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
dec eax
je r-xdata
mov edi [ ebp + 0x28 ]
mov edx 0xff
cmp ax dx
ja r-xdata
push 0x39
pop edx
cmp ax dx
jbe r-xdata
cmp ax [ ebp - 0x88 ]
ja r-xdata
push 0x29
pop eax
cmp [ esi ] ax
jne r-xdata
mov [ ebp - 0x18 ] ebx
push 0x3e
pop eax
cmp di ax
je r-xdata
add esi edx
mov [ ebp - 0x4 ] esi
jmp r-xdata
push 0x2a
pop ecx
sub eax ecx
je r-xdata
mov ecx [ ebp - 0xa0 ]
mov eax [ ebp - 0x94 ]
mov esi [ ebp - 0x8 ]
mov ecx 0x82
mov [ esi ] cx
jmp r-xdata
mov eax 0x87
cmp ebx eax
je r-xdata
add ecx 0x3
cmp ebx ecx
jle r-xdata
push 0x45
pop ebx
jmp r-xdata
push 0xd
pop eax
mov ecx esi
cmp ebx eax
je r-xdata
xor ecx ecx
add esi 0x2
mov [ ebp - 0x3c ] ecx
jmp r-xdata
lea edx [ ebp - 0x74 ]
mov ecx esi
call sub_48dd94
test eax eax
je r-xdata
push 0x2e
pop eax
cmp di ax
je r-xdata
push [ ebp - 0xc ]
mov ebx [ ebp + 0x28 ]
lea edx [ ebp - 0x90 ]
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x4 ]
push [ ebx + 0x40 ]
push [ ebp + 0xc ]
call sub_418359
mov edx [ ebp + 0xc ]
xor ecx ecx
add esp 0x10
mov esi eax
cmp [ edx ] ecx
jne r-xdata
cmp [ esi ] bx
jne r-xdata
push 0x2
pop edx
push 0x39
pop ebx
cmp ax [ ebp - 0x88 ]
ja r-xdata
mov edx [ ebp + 0x28 ]
xor ebx ebx
mov ecx [ edx + 0x2c ]
mov [ ebp - 0x38 ] ecx
cmp ebx [ edx + 0x30 ]
jge r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp - 0x30 ] esi
add esi edx
mov [ ebp - 0x4 ] esi
movzx eax [ esi ]
cmp ax di
jbe r-xdata
mov ecx [ edx + 0x24 ]
jmp r-xdata
mov [ edx + 0x4c ] edi
mov [ ebp - 0x8 ] ebx
jmp r-xdata
push 0x1d
pop eax
cmp edi eax
jge r-xdata
mov [ edx + 0x48 ] ecx
jmp r-xdata
cmp edi ecx
je r-xdata
mov ebx [ ebp - 0x8 ]
jmp r-xdata
add [ ebp - 0x14 ] edi
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
cmp cx [ ebp - 0x124 ]
je r-xdata
mov ebx eax
mov [ ebp - 0x8 ] ebx
jmp r-xdata
test edx edx
jne r-xdata
movzx eax [ eax + r--data ]
mov edi [ ebp - 0x8 ]
mov esi eax
push 0x2
mov [ edi ] ax
pop eax
add edi eax
mov [ edi ] bx
add edi eax
lea eax [ ebx + ebx ]
push eax
push [ ebp - 0x24 ]
push edi
call sub_420fc0
add esp 0xc
lea edi [ edi + ebx * 2 ]
xor eax eax
mov [ edi ] ax
push 0x2
pop eax
add edi eax
mov [ ebp - 0x8 ] edi
mov eax [ ebp + 0xc ]
mov [ eax ] 0x42
jmp r-xdata
movzx eax cx
mov ecx [ ebp - 0x8 ]
mov esi eax
push 0x2
mov [ ecx ] ax
pop eax
add ecx eax
mov [ ebp - 0x8 ] ecx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebx + 0x5c ] ecx
push 0x2
setg al
add eax edi
mov [ edx ] ax
movzx esi ax
pop eax
add edx eax
cmp [ ebp - 0x2c ] 0xfffffffe
mov [ ebp - 0x8 ] edx
jne r-xdata
push 0x2
pop esi
mov ebx 0x83
push 0x2
jmp r-xdata
mov edi [ ebp + 0x28 ]
mov ebx [ ebp - 0x8 ]
push 0x4
pop ecx
mov eax [ edi + 0x14 ]
add eax ecx
cmp ebx eax
je r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x38 ]
movzx eax di
add esi edx
mov [ ebp - 0x4 ] esi
cmp eax 0x69
jg r-xdata
cmp ax [ ebp - 0xdc ]
je r-xdata
push 0x3e
jmp r-xdata
push 0x4
pop eax
or edx edi
mov ecx 0x8f
add esi eax
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] esi
mov [ eax + 0x4 ] cx
mov esi [ ebp - 0x4 ]
push 0x3c
pop ecx
cmp ax cx
je r-xdata
cmp ax [ ebp - 0x88 ]
ja r-xdata
push 0x29
pop eax
cmp [ esi + ecx * 2 ] ax
push 0x3f
pop eax
jne r-xdata
push 0x3f
pop ecx
cmp ax cx
je r-xdata
cmp [ esi ] bx
jne r-xdata
add esi edx
mov [ ebp - 0x4 ] esi
movzx eax [ esi ]
test ax ax
jne r-xdata
mov edx [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
mov edx esi
sub edx ebx
sar edx 0x1
cmp [ ebp + 0x2c ] 0x0
mov [ ebp - 0x18 ] edx
je r-xdata
mov edx [ edi + 0xc ]
push 0x2
pop ebx
mov eax [ ebp + 0xc ]
mov [ eax ] 0x54
jmp r-xdata
imul ecx ecx 0xa
movzx eax ax
add eax 0xffffffd0
add ecx eax
push 0x27
jmp r-xdata
mov eax 0xff
cmp ecx eax
jle r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
push 0x3c
pop ecx
cmp di cx
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0xc ]
mov [ eax ] 0xe
jmp r-xdata
mov edx [ ebp + 0x2c ]
test edx edx
jne r-xdata
push 0x7d
pop ecx
cmp ebx ecx
jl r-xdata
cmp [ ebp + 0x2c ] 0x0
jne r-xdata
dec [ eax + 0x5c ]
jmp r-xdata
cmp [ esi + 0x4 ] bx
jne r-xdata
mov eax [ ebp + 0x28 ]
or [ eax + 0x64 ] 0x800
jmp r-xdata
push 0xa
pop eax
cmp ebx eax
je r-xdata
mov ecx [ ebp - 0x20 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x28 ]
push 0x3a
mov ebx [ eax + 0x8 ]
pop eax
cmp di ax
jne r-xdata
push 0x3d
pop eax
cmp di ax
jne r-xdata
test esi esi
jne r-xdata
push 0x1d
jmp r-xdata
push 0x2d
pop eax
cmp edx eax
jne r-xdata
mov edx [ ebp - 0x54 ]
mov ebx [ ebp - 0x68 ]
imul ecx edi 0xa
add esi edx
movzx edi ax
push 0x30
mov [ ebp - 0x4 ] esi
movzx eax [ esi ]
add ecx 0xffffffd0
add edi ecx
pop ecx
cmp ax cx
jae r-xdata
add esi 0x2
mov [ ebp - 0x4 ] esi
push 0xf
jmp r-xdata
mov esi ecx
push 0x3e
cmp [ esi ] bx
jne r-xdata
movzx eax ax
test [ eax + ecx ] 0x10
je r-xdata
test ecx ecx
jne r-xdata
cmp edi 0x22
jg r-xdata
mov ebx [ ebp - 0x8 ]
lea eax [ edi - 0x6 ]
push 0x10
pop ecx
cmp ecx eax
sbb edx edx
not edx
and edx ebx
cmp [ ebp - 0x44 ] 0x0
mov [ ebp - 0x10 ] edx
je r-xdata
mov edi [ ebp + 0x28 ]
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x68 ]
or [ edi + 0x68 ] eax
jmp r-xdata
cmp [ ebp - 0x5c ] 0x1
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
cmp cx [ ebp - 0x144 ]
je r-xdata
cmp edx [ ebp - 0xc ]
jne r-xdata
cmp edi 0xffffffff
je r-xdata
mov esi [ ebp - 0x4 ]
cmp esi 0x99
jle r-xdata
mov ebx [ ebp + 0x28 ]
cmp esi 0x96
jl r-xdata
or [ ebp - 0x2c ] 0xffffffff
jmp r-xdata
mov eax 0xa0
mov [ edx ] ax
add edx esi
mov ax [ ecx + 0x4 ]
mov [ edx ] ax
add edx esi
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
pop eax
add esi eax
mov eax [ ebp + 0x2c ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax edx
shr eax 0x9
and eax ecx
mov [ ebp - 0xe0 ] eax
xor eax ecx
mov [ ebp - 0xe4 ] eax
movsx eax dl
and eax ecx
mov [ ebp - 0x8c ] eax
cmp eax 0x6d
je r-xdata
jne r-xdata
push 0x27
mov [ ebp - 0x10 ] edx
cmp ax [ ebp - 0x158 ]
je r-xdata
pop eax
mov edx eax
push 0x2
pop eax
add esi eax
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] esi
jmp r-xdata
mov ecx 0xff
cmp ax cx
ja r-xdata
push 0x39
pop ecx
cmp ax cx
jbe r-xdata
inc ecx
movzx eax [ esi + ecx * 2 ]
lea edx [ ecx + 0x1 ]
lea edx [ esi + edx * 2 ]
mov [ ebp - 0x74 ] edx
push 0x7b
pop ecx
cmp ax cx
jne r-xdata
cmp ax cx
je r-xdata
push 0x2
pop eax
add esi eax
mov [ ebp - 0x4 ] esi
jmp r-xdata
mov eax [ edi + 0x40 ]
inc eax
mov [ ebp - 0x38 ] eax
cmp [ esi ] cx
jne r-xdata
mov ebx [ ebp - 0x30 ]
add esi ebx
mov [ ebp - 0x4 ] esi
movzx eax [ esi ]
cmp ax [ ebp - 0xd8 ]
jbe r-xdata
mov [ ebx ] cx
add ebx edx
mov ecx [ ebp + 0x28 ]
mov eax [ ebp - 0x4 ]
push 0x4
sub eax [ ecx + 0x18 ]
sar eax 0x1
inc eax
mov [ ebx ] ax
xor eax eax
mov [ ebx + 0x2 ] ax
pop eax
add ebx eax
push 0x26
jmp r-xdata
push 0x29
pop eax
mov ebx eax
push 0x29
jmp r-xdata
mov edi [ ebp - 0x84 ]
mov ecx 0x7fffffeb
mov edx [ edx ]
sub ecx edx
lea eax [ edi - 0x4 ]
cmp ecx eax
jl r-xdata
mov edx [ ebp - 0x50 ]
mov [ ebp - 0x8 ] edx
mov edx 0x91
cmp ebx edx
je r-xdata
xor eax eax
mov ecx esi
push 0x78
mov edx eax
pop edi
mov ebx [ ebp - 0x24 ]
mov edx [ ebp + 0xc ]
jmp r-xdata
add esi 0x4
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x4 ] esi
cmp [ esi + 0x2 ] di
je r-xdata
mov edi [ ebp - 0x3c ]
test edi edi
jne r-xdata
mov eax [ ebp - 0x3c ]
push 0x1f
push 0x4
pop eax
add esi eax
push 0x5e
pop eax
mov [ ebp - 0x4 ] esi
cmp [ esi ] ax
jne r-xdata
cmp esi 0x5
jne r-xdata
mov ebx [ ebp - 0x90 ]
push 0x2b
pop eax
cmp edx eax
jne r-xdata
test edi edi
je r-xdata
cmp ax bx
ja r-xdata
mov edx [ ebp + 0x28 ]
inc ebx
mov eax [ edx + 0x34 ]
lea esi [ esi + eax * 2 ]
mov eax [ ebp - 0x4c ]
cmp ebx [ edx + 0x30 ]
jl r-xdata
cmp [ esi + edi * 2 + 0x2 ] ax
jne r-xdata
push 0x2a
jmp r-xdata
push 0x20
pop ecx
cmp edi ecx
jg r-xdata
movzx eax [ ecx + 0x4 ]
cmp eax edi
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov esi [ edi * 4 + r--data ]
add edx 0x2
jmp r-xdata
cmp edi 0xe
jne r-xdata
push 0x2
mov [ ebx ] di
pop edx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
lea eax [ edi + 0x29 ]
push 0x2
pop esi
mov [ ecx ] ax
lea edi [ ecx + 0x2 ]
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x58 ]
mov [ edi ] ax
add edi esi
mov [ ebp - 0x8 ] edi
test ecx ecx
jns r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
mov esi [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
push 0x2
lea edi [ ecx + 0x2 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x21
cmp ecx 0x72
je r-xdata
lea eax [ ebx + 0x68 ]
mov ebx [ ebp - 0x8 ]
push 0x2
mov [ ebx ] ax
pop eax
add ebx eax
push eax
lea eax [ edi + 0x1 ]
mov [ ebx ] dx
pop edx
add ebx edx
neg eax
sbb eax eax
and eax edi
mov [ ebp - 0x58 ] eax
jmp r-xdata
cmp edi 0xffffffff
jne r-xdata
lea eax [ ebx + 0x62 ]
jmp r-xdata
cmp edi [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebx + 0x70 ] eax
cmp esi 0x9b
jg r-xdata
mov [ edi + 0x60 ] edx
jmp r-xdata
cmp [ eax ] ecx
jne r-xdata
or [ ecx ] edx
jmp r-xdata
push 0x73
pop edi
cmp eax edi
je r-xdata
push 0x2d
pop edi
cmp eax edi
je r-xdata
mov eax [ ebp - 0xc ]
movzx eax [ esi ]
push 0x30
pop ecx
cmp ax cx
jb r-xdata
mov edi eax
push 0x2
pop eax
add esi eax
mov [ ebp - 0x4 ] esi
test edi edi
js r-xdata
cmp ax [ ebp - 0x148 ]
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x1c
jmp r-xdata
movzx ecx ax
mov eax [ ebp + 0x28 ]
mov eax [ eax + 0xc ]
test [ ecx + eax ] 0x10
je r-xdata
mov ebx [ ebp - 0x8 ]
mov eax 0x9d
mov [ ebx ] ax
add ebx edx
jmp r-xdata
lea ecx [ esi + 0x4 ]
call sub_48e399
test eax eax
jne r-xdata
push 0x2a
jmp r-xdata
cmp [ edi + 0x30 ] 0x2710
jge r-xdata
movzx eax ax
test [ eax + edx ] 0x10
je r-xdata
mov ebx [ ebp - 0x8 ]
lea eax [ edi - 0x4 ]
mov ecx [ ebp + 0x2c ]
add eax edx
push 0x2
pop edx
add ebx edx
mov [ ecx ] eax
push 0x78
pop eax
mov [ ebx ] dx
add ebx edx
mov [ ebx ] ax
add ebx edx
mov [ ebx ] dx
mov edx [ ebp - 0x64 ]
and [ ebp - 0x9c ] 0x0
mov [ ebp - 0x28 ] edx
mov edx [ ebp - 0x60 ]
mov [ ebp - 0x20 ] edx
mov edx [ ebp - 0x6c ]
mov [ ebp - 0x7c ] edx
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x70 ] edx
cmp ebx 0x81
jl r-xdata
movzx eax [ ecx + 0x2 ]
inc edx
lea ecx [ ecx + eax * 2 ]
cmp [ ecx ] di
jne r-xdata
mov edi [ ebp - 0x54 ]
mov eax 0x91
cmp [ esi + 0x4 ] ax
jne r-xdata
mov eax [ ebp - 0x18 ]
push 0x2
pop ecx
cmp eax ecx
jl r-xdata
push 0x2d
pop eax
cmp [ esi + 0x2 ] ax
je r-xdata
mov ebx [ ebp - 0x40 ]
test ebx ebx
je r-xdata
cmp ebx 0x5d
jne r-xdata
mov edi [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov edi eax
push 0x2
mov [ ebp - 0x28 ] eax
pop eax
add esi eax
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x4 ] esi
jmp r-xdata
cmp esi 0xc
je r-xdata
push 0x8
pop ebx
jmp r-xdata
push 0x5c
pop edi
cmp [ esi + 0x2 ] di
je r-xdata
mov edx [ ebp + 0x28 ]
test edi edi
je r-xdata
push 0x3a
jmp r-xdata
mov edx [ ebp + 0x28 ]
mov eax [ edx + 0x40 ]
sub eax edi
lea edi [ eax + 0x1 ]
test edi edi
jg r-xdata
push edi
lea edx [ esi + 0x2 ]
mov ecx eax
call sub_48e749
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x38 ] esi
mov esi [ ebp - 0x30 ]
mov ecx [ ebp - 0x38 ]
cmp ebx [ edx + 0x30 ]
jge r-xdata
mov edx [ ebp + 0x28 ]
jmp r-xdata
pop eax
mov [ edx ] eax
jmp r-xdata
push 0x30
jmp r-xdata
mov edx [ ebp + 0x28 ]
xor ecx ecx
mov ebx ecx
mov esi [ edx + 0x28 ]
cmp [ edx + 0x30 ] ecx
jle r-xdata
mov eax [ ebp - 0xc ]
mov [ ecx + 0x6 ] ax
jmp r-xdata
mov ecx [ ecx ]
push 0xd
pop eax
mov edi eax
jmp r-xdata
cmp ecx eax
je r-xdata
cmp [ ebp - 0x44 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] ecx
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x23
jmp r-xdata
add eax 0x27
mov [ ecx ] ax
mov eax [ ebp - 0x58 ]
jmp r-xdata
add eax 0x25
mov [ ebp - 0x8 ] edi
mov [ ecx ] ax
jmp r-xdata
mov [ edi ] bx
mov ebx [ ebp - 0x8 ]
add ebx eax
mov [ ebp - 0x8 ] ebx
test ebx 0x10000000
jne r-xdata
cmp cx [ ebp - 0x12c ]
je r-xdata
mov [ ebx ] ax
lea eax [ ebx + 0x64 ]
jmp r-xdata
mov ebx [ ebp - 0x8 ]
push 0x2
pop edx
lea eax [ ebx + 0x66 ]
or [ ebx + 0x64 ] 0x1000
jmp r-xdata
mov eax [ ebp - 0x120 ]
mov [ ebp - 0x34 ] edx
mov [ eax ] edx
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
movzx edi [ esi ]
cmp di bx
jne r-xdata
push 0x4
pop eax
jmp r-xdata
push 0x78
pop edi
cmp eax edi
jne r-xdata
lea ecx [ ebp - 0x38 ]
jmp r-xdata
cmp eax 0x4a
je r-xdata
push 0x3a
pop eax
cmp di ax
je r-xdata
movzx eax [ esi ]
cmp ax [ ebp - 0xb0 ]
jb r-xdata
cmp ax [ ebp - 0xb0 ]
jb r-xdata
push 0x2
pop eax
mov [ ebp - 0x18 ] esi
mov ecx 0xff
add esi eax
mov [ ebp - 0x4 ] esi
movzx eax [ esi ]
cmp ax cx
ja r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x2
pop edx
mov eax [ ebp + 0xc ]
mov [ eax ] 0x31
jmp r-xdata
lea eax [ edx + 0x2 ]
cmp eax [ edi + 0x34 ]
jle r-xdata
push 0x7d
pop ecx
cmp ebx ecx
jne r-xdata
cmp edx 0xfffffffe
je r-xdata
push 0x2
pop eax
cmp edx eax
jg r-xdata
cmp edx [ ebp - 0xc ]
jg r-xdata
inc eax
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp eax [ ebp - 0xc ]
je r-xdata
push 0x4
pop eax
add esi eax
push 0x5c
pop eax
mov [ ebp - 0x4 ] esi
cmp [ esi ] ax
push 0x4
pop eax
je r-xdata
mov esi ebx
xor ebx ebx
mov [ ebp - 0x40 ] ebx
push 0x2
pop ebx
add esi ebx
mov [ ebp - 0x4 ] esi
movzx ebx [ esi ]
mov [ ebp - 0x24 ] ebx
test ebx ebx
jne r-xdata
test eax eax
jne r-xdata
push 0x1e
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
test dl al
push 0x2
pop edx
je r-xdata
mov edx [ ebp - 0x74 ]
mov ecx esi
sub edx esi
sar edx 0x1
call sub_48dd47
mov ecx eax
test ecx ecx
js r-xdata
mov [ edx ] 0x47
jmp r-xdata
cmp esi 0x1a
jne r-xdata
mov esi [ ebp - 0x4 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
push 0x75
pop eax
mov [ ebx ] ax
sub esi [ edx + 0x14 ]
xor edx edx
sar esi 0x1
push 0x4
pop eax
mov [ ebx + 0x2 ] si
add ebx eax
cmp [ ebp - 0x2c ] 0xfffffffe
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x9c ] edx
jne r-xdata
xor eax eax
mov [ ebx ] ax
test edi edi
je r-xdata
mov edx [ ebp + 0x28 ]
add edi [ edx + 0x40 ]
jmp r-xdata
cmp [ ebp + 0x2c ] 0x0
mov ebx [ ebp - 0x8 ]
mov esi [ edx + 0x14 ]
mov [ ebp - 0x10 ] ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
movzx edi [ ecx ]
mov [ ebp - 0x54 ] edi
jne r-xdata
cmp ebx [ edx + 0x30 ]
jge r-xdata
cmp edi [ esi + 0x4 ]
jne r-xdata
mov esi [ ebp - 0x1c ]
push 0x2
cmp [ ebp - 0x44 ] 0x0
je r-xdata
mov [ edi ] bx
add edi esi
test edx edx
js r-xdata
test ebx 0x10000000
je r-xdata
mov eax [ ebp - 0x14 ]
lea edi [ ecx + 0x2 ]
mov esi [ ebp - 0x1c ]
add eax 0x27
mov [ ecx ] ax
mov eax [ ebp - 0x58 ]
dec eax
mov [ edi ] ax
push 0x2
pop eax
add edi eax
mov [ ebp - 0x8 ] edi
jmp r-xdata
mov ecx [ ebp - 0x10 ]
lea edi [ ecx + 0x2 ]
mov [ ecx ] ax
mov [ ebp - 0x8 ] edi
mov [ edi ] ax
pop eax
jmp r-xdata
pop eax
mov [ ebx ] dx
push 0x2
pop edx
add ebx edx
mov [ ebx ] si
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
and ebx 0x7
lea eax [ ebx + ebx ]
push eax
lea eax [ ebp - 0x184 ]
push eax
push edi
call sub_420fc0
mov edx [ ebp - 0x18 ]
lea edi [ edi + ebx * 2 ]
add esp 0xc
mov [ ebp - 0x8 ] edi
mov ebx edi
jmp r-xdata
cmp ecx 0x74
je r-xdata
mov eax [ ebp - 0x50 ]
movzx ecx [ eax ]
cmp ecx 0x50
jg r-xdata
or [ ecx ] eax
mov eax [ ebp + 0xc ]
sub esi edx
mov [ eax ] 0xc
jmp r-xdata
or [ ecx ] 0x8
jmp r-xdata
mov eax [ ebp + 0x28 ]
or [ ecx ] 0x80000
or [ eax + 0x64 ] 0x400
jmp r-xdata
cmp eax 0x55
je r-xdata
mov ax [ esi ]
add esi 0x2
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x4 ] esi
cmp ax [ ebp - 0x104 ]
jne r-xdata
push 0x39
pop ecx
cmp ax cx
ja r-xdata
cmp ax [ ebp - 0x88 ]
ja r-xdata
mov eax [ ebp + 0x2c ]
mov ecx esi
sub ecx [ ebp - 0x18 ]
sar ecx 0x1
mov [ ebp - 0x24 ] ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x28 ]
push 0x2
pop edx
mov ecx [ ecx + 0xc ]
mov ecx [ ebp + 0x28 ]
xor eax eax
mov edi [ edi + 0x28 ]
mov ebx eax
cmp [ ecx + 0x30 ] eax
jle r-xdata
push 0x20
mov [ edi + 0x34 ] eax
pop eax
cmp edx eax
jle r-xdata
jmp r-xdata
test ecx ecx
js r-xdata
test ecx ecx
jns r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x1b
jmp r-xdata
cmp edx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x36
jmp r-xdata
mov ebx eax
jmp r-xdata
push 0x5d
pop eax
cmp [ esi + 0x2 ] ax
jne r-xdata
push ebx
push ebx
push [ ebp + 0x28 ]
push 0x5c
pop edx
push 0x45
pop edi
movzx eax [ esi ]
test ax ax
je r-xdata
mov eax [ ebp - 0xc ]
cmp edi [ ebp - 0x78 ]
ja r-xdata
test eax 0x20000000
je r-xdata
cmp ecx edx
jg r-xdata
mov ecx [ ebp - 0x20 ]
cmp esi 0x19
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x5c
pop eax
cmp [ esi + 0x2 ] ax
jne r-xdata
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ ebp + 0x28 ]
mov edx [ ebp - 0x44 ]
push edi
mov ecx [ eax + 0x14 ]
call sub_48d8ad
mov edx [ ebp + 0x28 ]
mov esi eax
pop ecx
xor eax eax
cmp [ edx + 0x78 ] eax
je r-xdata
mov edi ecx
mov edi [ esi + 0x8 ]
jmp r-xdata
inc ebx
add esi 0xc
cmp ebx [ edx + 0x30 ]
jl r-xdata
mov edx [ esi ]
mov ecx eax
push edi
call sub_48e749
mov edx [ ebp + 0x28 ]
pop ecx
test eax eax
je r-xdata
mov [ edi ] bx
add edi esi
test ebx 0x10000000
je r-xdata
mov esi [ ebp - 0x1c ]
mov [ edi ] dx
add edi esi
mov esi [ ebp - 0x1c ]
push 0x2
pop eax
mov [ edi ] si
add edi eax
jmp r-xdata
mov esi ebx
and esi 0x7
lea eax [ esi + esi ]
push eax
lea eax [ ebp - 0x184 ]
push eax
push edi
call sub_420fc0
mov edx [ ebp - 0x18 ]
lea edi [ edi + esi * 2 ]
add esp 0xc
cmp [ ebp - 0x44 ] 0x0
je r-xdata
add edi eax
mov [ ebp - 0x8 ] edi
jmp r-xdata
mov esi [ ebp - 0x4 ]
add ebx edx
mov [ ebp - 0x8 ] ebx
xor edi edi
xor edi edi
test edx edx
jns r-xdata
push 0x7d
pop eax
cmp cx ax
jb r-xdata
push 0x5d
pop eax
cmp ecx eax
je r-xdata
je r-xdata
or [ ecx ] 0x200
jmp r-xdata
cmp eax 0x58
jne r-xdata
push 0x2
pop eax
sub esi eax
mov eax [ ebp + 0xc ]
mov [ eax ] 0x1a
jmp r-xdata
cmp [ ebp + 0x2c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ebx 0xa
push 0x2
movzx ebx ax
pop eax
add esi eax
add ecx 0xffffffd0
mov [ ebp - 0x4 ] esi
add ebx ecx
push 0x30
movzx eax [ esi ]
pop ecx
cmp ax cx
jae r-xdata
xor eax eax
mov edi eax
jmp r-xdata
test edx edx
jle r-xdata
inc [ eax ]
mov edx [ ebp - 0x10 ]
add esi edx
mov [ ebp - 0x4 ] esi
movzx eax [ esi ]
cmp ax [ ebp - 0xd8 ]
jbe r-xdata
cmp ebx [ ecx + 0x30 ]
jl r-xdata
cmp edx [ edi + 0x4 ]
jne r-xdata
push 0x30
jmp r-xdata
test eax eax
jns r-xdata
or [ ebp - 0x2c ] 0xffffffff
mov edx [ ebp - 0xd4 ]
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x6c ] edx
mov [ ebp - 0x9c ] ecx
jmp r-xdata
test eax eax
jns r-xdata
or eax 0xffffffff
or ecx eax
mov [ ebp - 0x94 ] eax
mov [ ebp - 0xa0 ] ecx
jmp r-xdata
jmp r-xdata
cmp [ esi ] dx
mov ebx [ ebp - 0x24 ]
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x3c ]
jne r-xdata
add esi eax
mov [ ebp - 0x4 ] esi
cmp [ esi ] dx
je r-xdata
mov esi ecx
mov [ ebp - 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov ebx [ ebp - 0x2c ]
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0x54 ]
imul esi ecx 0x3
push 0x20
pop eax
push eax
mov eax [ esi * 4 + r--data ]
add eax ebx
push eax
lea eax [ ebp - 0x178 ]
push eax
call sub_420fc0
mov eax [ esi * 4 + r--data ]
add esp 0xc
mov esi [ esi * 4 + r--data ]
test eax eax
js r-xdata
mov eax edi
neg eax
sbb eax eax
and eax 0xe
add eax ecx
mov esi [ eax * 4 + r--data ]
test esi esi
je r-xdata
xor ecx ecx
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
inc ecx
mov edi [ ebx + 0x8 ]
add eax 0x2
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] eax
cmp esi 0x10
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x3c ] eax
jmp r-xdata
push 0x45
pop ecx
cmp [ esi + 0x4 ] cx
je r-xdata
or [ ebp - 0x2c ] 0xffffffff
jmp r-xdata
xor eax eax
cmp [ esi + 0x2 ] ax
jne r-xdata
cmp edi [ edx + 0x44 ]
jg r-xdata
mov ecx [ ebp - 0x2c ]
mov eax [ edx + 0x34 ]
mov esi [ ebp - 0xc ]
mov [ ebp - 0x78 ] ebx
inc ebx
lea edx [ ecx + eax * 2 ]
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x30 ] edx
cmp ebx [ eax + 0x30 ]
jge r-xdata
inc [ edx + 0x54 ]
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
xor ecx ecx
mov eax [ ebp - 0x4c ]
mov esi [ ebp - 0x1c ]
mov [ edi ] dx
add edi esi
mov esi [ ebp - 0x1c ]
mov [ edi ] si
add edi 0x2
jmp r-xdata
mov esi ebx
and esi 0x7
lea eax [ esi + esi ]
push eax
lea eax [ ebp - 0x184 ]
push eax
push edi
call sub_420fc0
mov edx [ ebp - 0x18 ]
lea edi [ edi + esi * 2 ]
mov ecx [ ebp - 0x58 ]
add esp 0xc
mov eax [ ebp - 0x5c ]
push 0x2
pop esi
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x21
push 0x2
jmp r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
mov eax 0x9d
cmp cx ax
je r-xdata
add eax 0xa
cmp cx ax
ja r-xdata
mov eax [ ebp - 0x50 ]
movzx eax [ eax + 0x4 ]
cmp ax [ ebp - 0x110 ]
je r-xdata
cmp ecx 0x6d
jle r-xdata
movzx eax [ ecx + r--data ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x44 ]
lea ecx [ ecx + eax * 2 ]
mov [ ebp - 0x50 ] ecx
test edx edx
je r-xdata
push 0x1d
pop eax
cmp ecx eax
jl r-xdata
or [ ecx ] 0x40
jmp r-xdata
mov ebx [ ebp - 0x1c ]
test edi edi
js r-xdata
mov ax [ esi ]
add esi 0x2
mov [ ebp - 0x4 ] esi
cmp ax dx
je r-xdata
movzx eax ax
test [ eax + ecx ] 0x10
je r-xdata
mov ebx [ ebp + 0x28 ]
mov eax [ ebx + 0x38 ]
cmp [ ebx + 0x30 ] eax
jl r-xdata
mov eax [ ebp - 0x38 ]
cmp [ edi + 0x8 ] eax
jne r-xdata
mov ecx [ ebp - 0x30 ]
push edx
mov edx [ edi ]
call sub_48e749
pop ecx
test eax eax
jne r-xdata
mov ecx [ ebp - 0xac ]
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x60 ] eax
jmp r-xdata
or [ ebp - 0x70 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0xd4 ]
mov [ ebp - 0xac ] eax
mov eax ecx
or eax edi
mov [ ebp - 0x94 ] eax
jmp r-xdata
mov esi [ ebp - 0x4 ]
push 0x29
pop edx
cmp [ esi ] dx
jne r-xdata
mov eax [ ebp - 0x64 ]
add esi ecx
mov [ ebp - 0x4 ] esi
mov esi [ ebp - 0x38 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x20 ] eax
test esi esi
je r-xdata
cmp [ esi + 0x2 ] 0x51
jne r-xdata
cmp [ esi + 0x2 ] di
jne r-xdata
cmp [ ebp - 0x44 ] 0x0
mov edi eax
mov [ ebp - 0x30 ] edi
je r-xdata
push 0x5d
pop edi
cmp ax di
je r-xdata
or ebx 0xffffffff
mov [ ebp - 0x2c ] ebx
jmp r-xdata
mov esi [ ebp - 0x6c ]
mov [ ebp - 0x70 ] ebx
mov ebx [ ebp - 0x64 ]
mov [ ebp - 0x28 ] ebx
mov ebx [ ebp - 0x60 ]
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x20 ] ebx
test eax eax
jne r-xdata
test esi esi
jns r-xdata
xor ecx ecx
lea edx [ eax + ebx ]
push 0x20
pop edi
test esi esi
js r-xdata
mov eax ecx
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x74 ]
add eax 0x2
add esi 0xfffffffe
mov [ ebp - 0x40 ] eax
jmp r-xdata
cmp esi 0x12
je r-xdata
push 0xf
pop ebx
cmp esi ebx
jge r-xdata
mov edx [ ebp - 0x28 ]
push 0x2
pop ebx
add esi ebx
mov [ ebp - 0x4 ] esi
movzx ebx [ esi ]
mov [ ebp - 0x24 ] ebx
test ebx ebx
je r-xdata
add esi 0x4
cmp [ ebp + 0x24 ] eax
jg r-xdata
mov eax [ ebp + 0xc ]
push 0xf
pop ecx
mov [ eax ] ecx
jmp r-xdata
mov eax [ edx + 0x14 ]
mov ecx [ edx + 0x3c ]
lea esi [ eax + edi * 2 ]
mov eax [ edx + 0x10 ]
lea eax [ eax + ecx * 2 ]
add eax 0xffffff38
cmp [ edx + 0x20 ] eax
jb r-xdata
mov edx eax
jmp r-xdata
lea edi [ ecx + 0x2 ]
add eax 0x27
mov [ edi ] ax
pop eax
add edi eax
mov [ edi ] cx
add eax 0x25
sub ecx eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x58 ] ecx
push 0x2
cmp ecx [ ebp - 0xc ]
jne r-xdata
test edx edx
js r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0xb
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov ebx eax
mov [ ebp - 0x24 ] edx
sub ebx [ ebp - 0x10 ]
mov [ ebp - 0x1c ] edx
mov edx 0x87
sar ebx 0x1
cmp cx dx
mov edx [ ebp - 0x5c ]
mov [ ebp - 0x18 ] ebx
je r-xdata
mov eax edx
cmp ax [ ebp - 0x118 ]
mov eax edi
jne r-xdata
mov edx [ ebp - 0x44 ]
push 0x6f
pop eax
cmp ecx eax
jle r-xdata
mov ecx [ ebp - 0x50 ]
mov edi ebx
sub edi ecx
sar edi 0x1
test edi edi
jle r-xdata
mov ax [ ecx - 0x2 ]
mov ecx 0xfc00
and ax cx
mov ecx 0xd800
cmp ax cx
jne r-xdata
push 0x20
pop eax
cmp ecx eax
jle r-xdata
mov ebx [ ebp + 0x28 ]
xor edi edi
mov eax [ ebx + 0x2c ]
mov ebx [ ebx + 0x30 ]
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
imul ecx [ ebx + 0x30 ] 0xc
mov eax [ ebx + 0x28 ]
mov edx [ ebp - 0x30 ]
mov [ ecx + eax ] edx
imul ecx [ ebx + 0x30 ] 0xc
mov eax [ ebx + 0x28 ]
mov edx [ ebp - 0x18 ]
mov [ ecx + eax + 0x4 ] edx
imul ecx [ ebx + 0x30 ] 0xc
mov eax [ ebx + 0x28 ]
mov edx [ ebp - 0x38 ]
mov [ ecx + eax + 0x8 ] edx
inc [ ebx + 0x30 ]
mov esi [ ebp - 0x4 ]
lea edi [ eax + eax ]
imul eax edi 0xc
push eax
call [ r--data ]
mov esi eax
pop ecx
test esi esi
je r-xdata
mov edx [ ebp - 0x18 ]
inc ebx
add edi 0xc
cmp ebx [ ecx + 0x30 ]
jl r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x41
jmp r-xdata
mov ecx [ ebp + 0x28 ]
mov eax [ ebp - 0x38 ]
cmp [ edi + 0x8 ] eax
je r-xdata
cmp [ ebp - 0x44 ] 0x0
je r-xdata
mov edx [ ebp - 0x2c ]
cmp edx 0xfffffffe
jne r-xdata
add esi eax
push 0x5c
pop eax
mov [ ebp - 0x4 ] esi
cmp [ esi ] ax
push 0x4
pop eax
jne r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov ecx 0xfc00
and eax ecx
mov ecx 0xd800
cmp eax ecx
je r-xdata
test edx edx
je r-xdata
mov esi [ ebp - 0x38 ]
xor eax eax
mov ebx [ ebp - 0x8 ]
cmp esi edx
push 0x6e
setne al
pop ecx
add eax ecx
mov [ ebx ] ax
push 0x2
pop eax
add ebx eax
cmp [ ebp + 0x2c ] 0x0
jne r-xdata
mov ebx [ ebp - 0xc ]
push 0x2
pop edx
cmp esi ebx
jne r-xdata
neg esi
mov al [ edx + ecx ]
not al
and [ ebp + ecx - 0x178 ] al
inc ecx
cmp ecx edi
jb r-xdata
mov al [ edx + ecx ]
or [ ebp + ecx - 0x178 ] al
inc ecx
cmp ecx edi
jb r-xdata
push 0xb
dec eax
je r-xdata
mov edi [ ebp - 0x14 ]
jmp r-xdata
push r--data
jmp r-xdata
cmp esi 0x13
je r-xdata
xor eax eax
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x4c ] eax
lea eax [ ebp - 0x4c ]
push edx
push eax
lea eax [ ebp - 0x68 ]
push eax
lea edx [ ebp - 0x138 ]
call sub_48e27b
add esp 0xc
test eax eax
je r-xdata
sub esi 0x6
je r-xdata
push edx
push [ ebp - 0x44 ]
mov edx ebx
mov ecx esi
push [ ebp + 0x20 ]
call sub_48de0f
add esp 0xc
test eax eax
jne r-xdata
mov eax [ edx + 0x20 ]
mov ecx ebx
sub ecx [ edx + 0x14 ]
push 0x2
pop edi
add ecx edi
sar ecx 0x1
mov [ eax ] cx
add [ edx + 0x20 ] edi
jmp r-xdata
mov ecx edx
call sub_48de4d
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
mov edi [ ebp - 0x54 ]
cmp esi eax
jle r-xdata
mov ecx [ ebp + 0x28 ]
inc esi
inc ebx
mov eax [ ecx + 0x34 ]
lea edx [ edx + eax * 2 ]
mov [ ebp - 0x30 ] edx
cmp ebx [ ecx + 0x30 ]
jl r-xdata
mov ebx [ ebp - 0x10 ]
mov edx 0x91
cmp [ ebx + 0x4 ] dx
mov ebx [ ebp - 0x18 ]
mov edx [ ebp - 0x5c ]
je r-xdata
cmp cx [ ebp - 0xfc ]
jb r-xdata
movzx eax [ ecx ]
push 0x76
pop esi
cmp eax esi
jae r-xdata
movzx ecx [ ecx + r--data ]
add ecx eax
mov eax [ ebp - 0x50 ]
lea eax [ eax + ecx * 2 ]
mov [ ebp - 0x50 ] eax
add [ ebp - 0x50 ] 0x22
jmp r-xdata
mov edx [ ebp - 0x44 ]
push 0x70
pop eax
cmp ecx eax
jne r-xdata
push 0x2
pop eax
add [ ebp - 0x50 ] eax
jmp r-xdata
push 0x29
pop eax
cmp ecx eax
je r-xdata
cmp edi ebx
jge r-xdata
mov esi eax
mov eax [ ebp + 0xc ]
mov [ eax ] 0x23
jmp r-xdata
mov edx [ ebp + 0x28 ]
test edi edi
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x15
jmp r-xdata
imul eax [ ebx + 0x38 ] 0xc
push eax
push [ ebx + 0x28 ]
push esi
call sub_420fc0
add esp 0xc
cmp [ ebx + 0x38 ] 0x14
jle r-xdata
jmp r-xdata
mov ecx [ ebp + 0x28 ]
test [ ebp - 0x34 ] 0x80000
je r-xdata
mov di bx
jmp r-xdata
cmp ebx 0xffff
ja r-xdata
mov esi [ ebp - 0x44 ]
mov edi [ ebp - 0x6c ]
mov ecx [ ebp - 0x34 ]
mov eax [ ebp - 0xc ]
mov [ ebp - 0x7c ] edi
mov [ ebp - 0x70 ] edx
test esi esi
je r-xdata
or edx 0xffffffff
mov [ ebp - 0x2c ] edx
mov edi [ ebp - 0xc ]
mov [ ebp - 0x3c ] edi
jmp r-xdata
push 0x45
pop eax
cmp [ esi + 0x2 ] ax
push 0x4
pop eax
jne r-xdata
mov ecx [ ebp + 0xc ]
push 0x5c
pop eax
cmp edi eax
je r-xdata
add esi 0x2
mov ecx 0x3ff
and edi ecx
shl edi 0xa
movzx eax [ esi ]
and eax ecx
mov [ ebp - 0x4 ] esi
or edi eax
add edi 0x10000
mov [ ebp - 0x30 ] edi
jmp r-xdata
mov edx [ ebp - 0x8 ]
xor eax eax
mov esi [ ebp - 0x38 ]
mov ebx [ ebp - 0x4c ]
mov [ edi ] ax
push 0x2
pop eax
add edi eax
push 0x70
pop eax
mov [ edx ] ax
push 0x4
pop eax
add edx eax
xor eax eax
test esi esi
setne al
mov [ edx ] ax
test ebx ebx
je r-xdata
test [ ebp - 0x34 ] 0x20000000
je r-xdata
push 0x20
test esi esi
jne r-xdata
cmp esi edx
jne r-xdata
and [ ebp - 0x177 ] 0xc3
jmp r-xdata
mov edi [ ebp - 0x30 ]
jmp r-xdata
mov [ ebp - 0x14 ] edi
push 0xc
jmp r-xdata
dec eax
jne r-xdata
push ebx
push [ ebp - 0x34 ]
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0xd0 ]
call sub_48db00
add esp 0xc
push 0xffffffff
push r--data
cmp esi 0x14
je r-xdata
mov edi [ ebp - 0x14 ]
xor eax eax
push 0x10
pop ecx
cmp esi ecx
push 0x2
sete al
xor ecx ecx
cmp eax [ ebp - 0x138 ]
mov ax [ ebp - 0x68 ]
sete cl
add ecx 0x3
mov [ edi ] cx
pop ecx
add edi ecx
mov [ edi ] ax
add edi ecx
mov ax [ ebp - 0x4c ]
mov [ edi ] ax
add edi ecx
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
dec ecx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4c ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
xor eax eax
push 0x20
mov [ ebp - 0x28 ] edx
mov ecx eax
pop edx
dec esi
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x28
jmp r-xdata
mov edx [ ebp + 0x28 ]
mov edx [ ebp + 0x28 ]
mov edx [ ebp + 0x28 ]
mov ecx [ ebp - 0x2c ]
jmp r-xdata
cmp [ ebp - 0x2c ] 0xfffffffe
jne r-xdata
add edx 0x2
mov ecx edi
call sub_48e719
mov edx [ ebp - 0x30 ]
test eax eax
jne r-xdata
jmp r-xdata
test edx edx
jg r-xdata
mov ecx [ ebp - 0xc ]
push [ ebp - 0x48 ]
xor eax eax
push [ ebp + 0x28 ]
mov [ ebx ] ax
mov ecx [ ebp - 0x50 ]
push edx
push 0x2
pop eax
mov edx eax
call sub_418633
add esp 0xc
lea eax [ edi + edi ]
push eax
mov eax [ ebp - 0x50 ]
push eax
add eax 0x4
push eax
call sub_427f60
add esp 0xc
push 0x4
pop eax
add ebx eax
mov eax [ ebp - 0x50 ]
push 0x2
pop ecx
push 0x78
add edi ecx
lea edx [ ecx + 0x7f ]
mov [ eax ] dx
pop eax
mov [ ebx ] ax
add ebx ecx
mov [ ebx ] di
add ebx ecx
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x8 ] ebx
mov [ eax + 0x2 ] di
mov al [ eax + r--data ]
test al al
je r-xdata
mov ecx [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
movzx ecx [ ecx + 0x2 ]
lea eax [ eax + ecx * 2 ]
mov [ ebp - 0x50 ] eax
jmp r-xdata
cmp ecx 0x36
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ eax ]
mov esi [ ebp - 0xc ]
mov [ ebp - 0x54 ] edi
inc edi
mov [ ebp - 0x78 ] ecx
cmp edi ebx
jge r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x38 ] esi
mov esi [ ebp - 0x30 ]
mov eax [ ebp - 0x38 ]
mov eax [ ebp + 0x28 ]
inc edi
mov ecx [ ebp - 0x24 ]
mov eax [ eax + 0x34 ]
lea esi [ esi + eax * 2 ]
cmp edi ebx
jl r-xdata
test ebx ebx
jle r-xdata
push 0x2d
pop eax
cmp edi eax
jne r-xdata
mov [ ebx + 0x28 ] esi
mov [ ebx + 0x38 ] edi
push [ ebx + 0x28 ]
call [ r--data ]
pop ecx
push 0x2b
jmp r-xdata
mov ecx [ ebp + 0x28 ]
mov eax [ ebp - 0xc ]
mov [ ecx + 0x78 ] eax
mov ecx [ ebp - 0xc ]
mov ebx ecx
mov [ ebp - 0x24 ] edi
mov [ ebp - 0xf4 ] di
jmp r-xdata
mov ecx ebx
test al cl
test al cl
je r-xdata
add esi eax
push 0x5c
pop eax
mov [ ebp - 0x4 ] esi
cmp [ esi ] ax
push 0x4
pop eax
je r-xdata
mov [ ecx ] 0x8
jmp r-xdata
je r-xdata
push [ ebp - 0xc ]
mov eax [ ebp + 0x28 ]
lea ecx [ ebp - 0x4 ]
push [ ebp - 0x34 ]
push [ eax + 0x40 ]
push edx
lea edx [ ebp - 0x30 ]
call sub_418359
mov ecx [ ebp + 0xc ]
xor edx edx
add esp 0x10
cmp [ ecx ] edx
jne r-xdata
cmp edi 0x5b
je r-xdata
test ecx ecx
jle r-xdata
or eax 0x4
mov [ edx ] ax
push 0x20
xor eax eax
pop ecx
jmp r-xdata
push 0x20
pop eax
push eax
lea eax [ ebp - 0xd0 ]
push eax
push ebx
call sub_420fc0
add esp 0xc
xor eax eax
mov ecx eax
push 0x20
pop edx
test edi edi
je r-xdata
and [ ebp - 0x16d ] 0x7f
pop ecx
push 0xd
pop eax
mov ecx eax
jmp r-xdata
mov esi [ ebp - 0x4 ]
mov edi [ ebp - 0x1c ]
mov ecx [ ebp - 0x20 ]
jmp r-xdata
push r--data
cmp esi 0x15
je r-xdata
mov [ ebp - 0x20 ] ecx
mov al [ edi + ecx + 0x40 ]
not al
or [ ebp + ecx - 0xd0 ] al
inc ecx
cmp ecx edx
jb r-xdata
jmp r-xdata
xor eax eax
mov ecx eax
dec esi
je r-xdata
cmp ecx 0xfffffffe
jne r-xdata
test [ ebp - 0x34 ] al
mov ebx [ ebp - 0x8 ]
push 0x0
pop eax
setne al
mov [ ebp - 0x10 ] ebx
push 0x73
pop ecx
add eax ecx
mov [ ebx ] ax
mov eax [ ebp - 0x78 ]
push 0x2
pop ecx
add ebx ecx
mov [ ebx ] ax
add ebx ecx
mov [ ebx ] si
add ebx ecx
mov esi [ ebp - 0x38 ]
mov [ ebp - 0x8 ] ebx
cmp esi edx
jae r-xdata
or [ ebp - 0x2c ] 0xffffffff
mov ecx [ ebp - 0xc ]
test edi edi
js r-xdata
cmp edx ecx
jle r-xdata
push [ ebp - 0x48 ]
push [ ebp + 0x28 ]
push [ ebp - 0x44 ]
cmp edi ecx
jg r-xdata
movzx eax al
mov [ ecx ] ax
jmp r-xdata
push 0x43
pop eax
cmp ecx eax
jne r-xdata
mov eax [ ebp - 0x18 ]
push 0x52
pop edi
cmp [ eax ] di
jne r-xdata
mov edx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x28 ]
mov ebx [ ecx + 0x34 ]
add ebx ebx
push ecx
mov ecx [ ebp - 0x18 ]
lea edx [ esi + 0x2 ]
call sub_48e749
pop ecx
test eax eax
je r-xdata
cmp ebx [ edx + 0x44 ]
jg r-xdata
add ebx [ edx + 0x40 ]
mov eax [ edx + 0x40 ]
sub eax ebx
lea ebx [ eax + 0x1 ]
jmp r-xdata
mov [ ecx ] bx
mov ebx [ ebp - 0x8 ]
jmp r-xdata
cmp ebx 0xffff
jbe r-xdata
push 0x0
pop eax
push 0x1f
pop ecx
setne al
add eax ecx
mov ecx [ ebp - 0x8 ]
push 0x2
pop edx
mov [ ecx ] ax
add ecx edx
mov [ ebp - 0x8 ] ecx
test esi esi
je r-xdata
mov eax ebx
mov edi 0x80
cdq
idiv edi
movzx eax [ eax + r--data ]
shl eax 0x7
add eax edx
movzx eax [ eax * 2 + r--data ]
movzx eax [ eax * 8 + r--data ]
test eax eax
je r-xdata
jmp r-xdata
push 0x2
pop eax
push 0xd
mov [ ebp - 0x18 ] eax
pop eax
cmp edi eax
je r-xdata
mov esi [ ebp - 0x4 ]
test eax eax
je r-xdata
movzx eax [ esi + 0x2 ]
push 0x3a
pop ecx
cmp ax cx
je r-xdata
mov ebx edi
mov [ ebp - 0x8 ] edi
push 0x2
pop eax
or [ edx ] ax
add edx eax
mov eax edi
mov [ ebp - 0x8 ] edx
sub eax edx
and eax 0xfffffffe
push eax
push edx
lea eax [ edx + 0x20 ]
push eax
call sub_427f60
add esp 0xc
test esi esi
je r-xdata
not [ ebp + eax - 0xd0 ]
inc eax
cmp eax ecx
jb r-xdata
mov al [ ebp + ecx - 0x178 ]
or [ ebp + ecx - 0xd0 ] al
inc ecx
cmp ecx edx
jb r-xdata
mov al [ ebp + ecx - 0x178 ]
not al
or [ ebp + ecx - 0xd0 ] al
inc ecx
cmp ecx edx
jb r-xdata
mov esi [ ebp - 0x74 ]
xor eax eax
test edi edi
mov edi [ ebp - 0x14 ]
setne al
add eax 0x3
mov [ edi ] ax
add edi edx
xor eax eax
mov [ edi ] cx
add edi edx
mov ecx [ ebp - 0x20 ]
mov [ edi ] ax
add edi edx
mov eax [ ebp - 0xc ]
add esi 0x2
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4c ] eax
jmp r-xdata
push 0xffffffff
push r--data
jmp r-xdata
add esi 0xffffffe3
cmp esi 0x5
jbe r-xdata
mov esi [ ebp - 0x4 ]
mov al [ edi + ecx + 0x40 ]
or [ ebp + ecx - 0xd0 ] al
inc ecx
push 0x20
pop eax
cmp ecx eax
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x28 ] eax
xor eax eax
mov edx eax
lea eax [ ebp - 0xd0 ]
sub edi eax
dec esi
je r-xdata
mov edi [ ebp - 0x30 ]
mov ebx [ ebp + 0x28 ]
mov edi ecx
mov [ ebp - 0x58 ] edi
jmp r-xdata
cmp edi ecx
jle r-xdata
test edi edi
jle r-xdata
mov ecx [ ebp + 0x2c ]
test ecx ecx
je r-xdata
xor ecx ecx
mov [ eax ] cx
mov ecx [ ebp - 0x10 ]
push 0x3
pop edx
call sub_418633
add esp 0xc
lea eax [ ebx + ebx ]
mov ebx [ ebp - 0x10 ]
push eax
lea eax [ ebx + 0x6 ]
push ebx
push eax
call sub_427f60
mov eax [ ebp - 0x14 ]
add esp 0xc
add [ ebp - 0x8 ] 0x6
add eax 0x92
mov [ ebx ] ax
mov eax 0x83
push 0x2
pop edx
add ebx edx
mov [ ebx ] ax
add ebx edx
xor eax eax
mov [ ebp - 0x24 ] ebx
mov [ ebx ] ax
add ebx edx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov edx [ ebp - 0xc ]
xor ecx ecx
mov [ eax ] cx
mov ecx [ ebp - 0x10 ]
call sub_418633
mov ecx [ ebp - 0x10 ]
lea eax [ ebx + ebx ]
add esp 0xc
lea esi [ ecx + 0x2 ]
push eax
push ecx
push esi
call sub_427f60
mov ebx [ ebp - 0x8 ]
add esp 0xc
push 0x2
pop eax
add ebx eax
mov [ ebp - 0x8 ] ebx
test edi edi
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x24 ] 0x6
jne r-xdata
mov ebx [ ebp - 0x24 ]
xor ecx ecx
mov edx [ ebp - 0xc ]
cmp ebx 0x1
jle r-xdata
mov [ edx + 0x6 ] cx
jmp r-xdata
cmp esi [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp + 0x28 ]
inc esi
inc edi
cmp edi [ eax + 0x30 ]
mov eax [ ebp - 0x38 ]
jl r-xdata
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6 ] bx
jmp r-xdata
mov edx ecx
mov ecx ebx
call sub_48ec7b
mov ebx edx
lea ebx [ ebx + eax * 2 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
push 0xf
pop ecx
push 0x2
mov [ ebx ] cx
pop ecx
add ebx ecx
push 0x9
pop edx
mov [ ebx ] dx
add ebx ecx
mov [ ebx ] ax
add ebx ecx
jmp r-xdata
mov eax [ ebp + 0x28 ]
or [ eax + 0x64 ] 0x800
jmp r-xdata
push 0xa
pop eax
cmp edi eax
je r-xdata
mov edi [ ebp - 0x30 ]
jmp r-xdata
cmp eax 0x5
jne r-xdata
lea edx [ ebp - 0x74 ]
mov ecx esi
call sub_48dd94
test eax eax
je r-xdata
push 0x2e
pop ecx
cmp ax cx
je r-xdata
push 0x20
pop eax
push eax
lea eax [ ebp - 0xd0 ]
push eax
push [ ebp - 0x8 ]
call sub_420fc0
lea ebx [ edi + 0x20 ]
add esp 0xc
mov [ ebp - 0x8 ] ebx
jmp r-xdata
test ebx ebx
jne r-xdata
jmp r-xdata
mov esi [ ebp - 0x74 ]
mov ecx ebx
push 0x2
pop edx
add esi edx
mov [ ebp - 0x18 ] edx
jmp r-xdata
jmp r-xdata
push ebx
push [ ebp - 0x34 ]
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0xd0 ]
call sub_48d9fe
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ esi * 4 + r--data ]
push 0x2
mov [ ebp - 0x40 ] eax
pop eax
sub esi eax
dec ecx
test [ ebp - 0x34 ] 0x40
mov esi [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp - 0xd0 ]
add ecx edx
push 0x20
mov al [ ecx + edi ]
not al
or [ ecx ] al
inc edx
pop eax
cmp edx eax
jb r-xdata
jmp r-xdata
xor eax eax
mov edx eax
lea eax [ ebp - 0xd0 ]
sub edi eax
dec esi
je r-xdata
or [ ebx + 0x50 ] eax
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov ecx edx
shl eax cl
test edx edx
jne r-xdata
js r-xdata
sub edi edx
jmp r-xdata
cmp [ ebp - 0x9c ] 0x0
je r-xdata
lea eax [ edx - 0x1 ]
mov edi eax
imul [ ebp - 0x84 ]
imul edi [ ebp - 0x84 ]
test edx edx
jg r-xdata
mov esi [ ebp - 0x4 ]
dec edi
mov eax [ ebp - 0x10 ]
mov ecx 0xa1
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
add eax 0x92
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x10 ] esi
mov [ ecx ] ax
push 0x6
mov edx r--data
mov ecx eax
call sub_41832a
pop ecx
test eax eax
jne r-xdata
mov ecx 0xffff
push 0x30
pop edi
mov esi [ ebp - 0x4 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x78 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x14 ] 0x3
inc [ edx + 0x4 ]
mov [ edx + 0x6 ] ax
mov [ edx + 0x8 ] si
jmp r-xdata
push [ ebp - 0x24 ]
mov ecx [ ebp - 0x18 ]
add eax ebx
mov [ ebp - 0x38 ] eax
lea edx [ eax + 0x2 ]
call sub_48e749
pop ecx
test eax eax
jne r-xdata
push edi
push ebx
push eax
jmp r-xdata
mov eax [ ebp + 0x28 ]
cmp edi ebx
jb r-xdata
mov [ ecx ] 0x53
jmp r-xdata
push 0x8
pop edi
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x53
jmp r-xdata
push 0x3d
pop ecx
cmp ax cx
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov eax ebx
sub eax ecx
sar eax 0x1
mov [ ecx + 0x2 ] ax
jmp r-xdata
push 0x20
xor eax eax
pop ecx
mov edi [ ebp - 0x14 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov [ edx ] 0x7
jmp r-xdata
movzx ebx [ esi ]
dec ecx
push 0x2
mov [ ebp - 0x20 ] ecx
pop ecx
sub eax ecx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] eax
jmp r-xdata
lea ecx [ ebp - 0xd0 ]
add ecx edx
push 0x20
mov al [ ecx + edi ]
or [ ecx ] al
inc edx
pop eax
cmp edx eax
jb r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
xor eax eax
push 0x20
mov [ ebp - 0x28 ] edx
mov ecx eax
pop edx
dec esi
jne r-xdata
mov ecx [ ebx + 0x24 ]
jmp r-xdata
mov [ ebx + 0x4c ] edx
mov ecx [ ebp - 0x8 ]
mov edx 0x81
add ecx 0xfffffffc
mov edi ecx
mov [ ebp - 0x30 ] ecx
lea esi [ edx + 0x1 ]
movzx eax [ ecx + 0x2 ]
add eax eax
sub edi eax
movzx eax [ edi ]
cmp ax dx
je r-xdata
mov ebx [ ebp + 0x2c ]
test ebx ebx
jne r-xdata
mov [ ebp - 0x58 ] edi
test edi edi
mov edi [ ebp - 0xc ]
mov [ ebp - 0x4c ] edi
cmp edx edi
jle r-xdata
cmp [ ebp - 0x60 ] 0x0
jge r-xdata
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax 0x91
mov ebx [ ebp - 0x1c ]
mov [ edx + 0x4 ] ax
mov eax [ ebp - 0xc ]
mov esi [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp ax [ ebp - 0x88 ]
ja r-xdata
push [ ebp - 0x34 ]
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0xd0 ]
call sub_418286
mov ecx [ ebp - 0x20 ]
add esp 0x10
mov edi [ ebp - 0x1c ]
add ecx eax
not [ ebp + eax - 0xd0 ]
inc eax
cmp eax ecx
jb r-xdata
xor ecx ecx
mov al [ edi + ecx + 0xa0 ]
not al
or [ ebp + ecx - 0xd0 ] al
inc ecx
cmp ecx edx
jb r-xdata
jmp r-xdata
xor eax eax
mov ecx eax
test ecx ecx
jne r-xdata
cmp [ ebp - 0x38 ] 0x0
je r-xdata
cmp ax si
jne r-xdata
test edi edi
jle r-xdata
dec edi
jns r-xdata
mov edi [ ebp - 0x58 ]
add ebx ebx
mov [ ebp - 0x54 ] ebx
jmp r-xdata
mov ecx [ ebp - 0x6c ]
mov [ ebp - 0x64 ] ecx
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x60 ] ecx
mov ecx [ ecx ]
mov eax 0x7fffffeb
sub eax ecx
cmp eax edi
jl r-xdata
cmp eax 0x7fffffff
ja r-xdata
mov eax [ ebp + 0x28 ]
inc [ eax + 0x58 ]
cmp [ eax + 0x58 ] 0xfa
jg r-xdata
imul ecx ecx 0xa
add eax 0xffffffd0
add ecx eax
mov eax [ ebp - 0x18 ]
inc edx
cmp edx ebx
jl r-xdata
mov al [ edi + ecx + 0xa0 ]
or [ ebp + ecx - 0xd0 ] al
inc ecx
push 0x20
pop eax
cmp ecx eax
jb r-xdata
jmp r-xdata
movzx eax [ ecx + 0x4 ]
cmp eax edx
je r-xdata
jmp r-xdata
movzx ebx [ edi ]
cmp bx dx
je r-xdata
mov eax 0x83
mov [ edi ] ax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
add ebx 0x92
mov [ ebp - 0x54 ] ebx
lea ecx [ eax + eax ]
mov [ ebp - 0x78 ] ecx
xor edi edi
mov ecx [ ebp + 0x28 ]
push ebx
push [ ebp - 0x10 ]
mov esi [ ecx + 0x20 ]
push eax
call sub_420fc0
mov eax [ ebp + 0x28 ]
add esp 0xc
mov edx [ eax + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0x5c ]
lea eax [ edi + ecx ]
mov ecx [ ebp + 0x2c ]
mov [ ecx ] eax
jmp r-xdata
movzx eax [ eax + edx * 2 ]
cmp ax di
jb r-xdata
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ecx + 0x6 ] ax
mov ecx [ ecx ]
mov eax [ ebx + 0x34 ]
lea esi [ esi + eax * 2 ]
cmp esi edi
jb r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x79
mov [ ecx ] ax
jmp r-xdata
cmp bx si
je r-xdata
mov eax [ ebp - 0x84 ]
add eax 0x5
mov ecx eax
imul ecx edi
push 0x4
pop edx
sub ecx edx
imul edi
xor edi edi
cmp edx edi
jg r-xdata
push ecx
push [ ebp - 0x10 ]
push edx
call sub_420fc0
mov eax [ ebp + 0x28 ]
add esp 0xc
mov edx [ eax + 0x10 ]
jmp r-xdata
mov eax 0x83
mov [ edx ] ax
push 0x2
pop eax
add edx eax
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x24 ]
test edx edx
jne r-xdata
mov ecx edx
sub ecx ebx
sar ecx 0x1
inc ecx
lea eax [ ecx + ecx ]
sub edx eax
movzx eax [ edx + 0x2 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x3c ]
mov ecx esi
sub ecx [ ebp - 0x48 ]
sar ecx 0x1
sub eax ecx
mov ecx [ ebp + 0x28 ]
add eax 0xffffff9c
lea eax [ edx + eax * 2 ]
cmp [ ecx + 0x20 ] eax
ja r-xdata
mov edx [ ebp - 0x8 ]
mov eax 0x8f
mov [ edx + 0x4 ] ax
jmp r-xdata
movzx edx [ esi ]
push 0x20
pop eax
cmp edx eax
mov eax [ ebp - 0xc ]
jge r-xdata
jmp r-xdata
cmp [ ebp + 0x2c ] 0x0
jne r-xdata
jl r-xdata
mov eax [ eax + 0x3c ]
mov ecx esi
sub ecx [ ebp - 0x48 ]
sar ecx 0x1
sub eax ecx
mov ecx [ ebp + 0x28 ]
add eax 0xffffff9c
lea eax [ edx + eax * 2 ]
cmp [ ecx + 0x20 ] eax
ja r-xdata
mov eax [ ebp - 0x8 ]
sub eax edx
sar eax 0x1
xor eax eax
jmp r-xdata
neg eax
lea ebx [ ebx + eax * 2 ]
mov ebx edi
jmp r-xdata
mov eax [ ebp - 0x48 ]
sub esi edx
sub eax edx
sar esi 0x1
sar eax 0x1
mov [ ebp - 0x48 ] eax
call sub_48de4d
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x48 ] esi
jae r-xdata
cmp [ ebp - 0x38 ] 0x0
je r-xdata
mov esi edi
mov edx [ ebx ]
mov eax 0x7fffffeb
sub eax edx
cmp eax ecx
jl r-xdata
cmp eax 0x7fffffff
ja r-xdata
mov eax [ ebp - 0x48 ]
sub esi edx
sub eax edx
sar esi 0x1
sar eax 0x1
mov [ ebp - 0x48 ] eax
call sub_48de4d
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0x48 ]
cmp ecx esi
jae r-xdata
mov edx [ ebp - 0x8 ]
push 0x2
mov [ ebp - 0x24 ] edx
mov [ edx ] ax
pop eax
add edx eax
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
push 0x78
pop esi
push 0x2
mov [ eax ] si
pop esi
add eax esi
mov [ eax ] cx
add eax esi
mov [ edx + 0x2 ] cx
mov edx eax
mov [ ebp - 0x8 ] eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x28 ]
mov ecx [ ebp - 0x48 ]
mov edx [ eax + 0x10 ]
lea ecx [ edx + ecx * 2 ]
mov [ ebp - 0x48 ] ecx
lea esi [ edx + esi * 2 ]
mov ecx [ ebp - 0x8 ]
inc edi
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x5c ]
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x4c ] edi
lea ecx [ ecx + eax * 2 ]
mov [ ebp - 0x8 ] ecx
cmp edi edx
jl r-xdata
mov edx [ ebp - 0x18 ]
mov ebx ecx
mov edi [ ebp - 0x48 ]
mov eax [ ebp - 0x14 ]
add eax 0x79
mov [ ecx ] ax
mov esi [ ebp - 0x4 ]
jmp r-xdata
movzx eax [ edi ]
mov edx 0x87
cmp ax dx
je r-xdata
lea eax [ ebx + 0x5 ]
mov [ edi ] ax
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] 0x77
jne r-xdata
lea eax [ ecx + edx ]
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp + 0x28 ]
mov ecx [ ebp - 0x48 ]
mov edx [ eax + 0x10 ]
lea ecx [ edx + ecx * 2 ]
mov [ ebp - 0x48 ] ecx
lea esi [ edx + esi * 2 ]
dec edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x78 ]
mov [ ebp - 0x48 ] esi
lea edx [ edx + eax * 2 ]
mov [ ebp - 0x8 ] edx
jns r-xdata
mov edx [ ebp - 0x18 ]
mov ebx [ ebp + 0x28 ]
mov eax [ ebp - 0x8 ]
mov esi [ ebp - 0x4 ]
mov cx [ edi ]
mov eax [ ebx + 0x20 ]
add cx dx
push 0x2
mov [ eax ] cx
pop eax
add [ ebx + 0x20 ] eax
add edi eax
cmp edi esi
jb r-xdata
mov edi [ ebp - 0x4c ]
mov ebx [ ebp - 0x54 ]
push [ ebp - 0x48 ]
mov ebx [ ebp - 0x8 ]
xor eax eax
push [ ebp + 0x28 ]
mov esi ebx
mov ecx edi
push [ ebp - 0x44 ]
mov [ ebx ] ax
sub esi edi
push 0x2
pop eax
mov edx eax
sar esi 0x1
call sub_418633
add esp 0xc
lea eax [ esi + esi ]
push eax
lea eax [ edi + 0x4 ]
push edi
push eax
call sub_427f60
add esp 0xc
push 0x4
pop eax
add ebx eax
mov eax 0x84
push 0x2
pop edx
mov [ edi ] ax
add esi edx
push 0x7b
pop eax
mov [ ebx ] ax
add ebx edx
mov [ ebx ] si
add ebx edx
mov [ ebp - 0x8 ] ebx
mov [ edi + 0x2 ] si
add edx 0x5
cmp ax dx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x28 ]
push 0x2
mov esi [ eax + 0x20 ]
pop eax
mov [ edx ] bx
add edx eax
mov [ ebp - 0x8 ] edx
test edi edi
je r-xdata
mov esi [ ebp - 0x4 ]
xor edi edi
jmp r-xdata
mov cx [ ecx ]
xor eax eax
test edi edi
push 0x2
setne al
add cx dx
lea eax [ eax * 2 + 0x1 ]
add cx ax
mov eax [ ebx + 0x20 ]
mov [ eax ] cx
mov ecx [ ebp - 0x48 ]
pop eax
add [ ebx + 0x20 ] eax
add ecx eax
mov [ ebp - 0x48 ] ecx
cmp ecx esi
jb r-xdata
mov ebx [ ebp - 0x54 ]
cmp [ ebp - 0x5c ] edx
jge r-xdata
mov ecx 0x94
mov [ eax ] cx
inc eax
push 0x7b
mov [ edi ] ax
pop eax
push 0x2
mov [ ecx ] ax
pop edx
jmp r-xdata
xor eax eax
mov edx ecx
push eax
push [ ebp + 0x28 ]
mov ecx esi
push [ ebp - 0x44 ]
call sub_418413
mov ecx [ ebp - 0x30 ]
add esp 0xc
test eax eax
jne r-xdata
mov ebx [ ebp - 0x24 ]
test ebx ebx
jne r-xdata
mov esi [ ebp - 0x4 ]
xor edi edi
mov [ ebp - 0x38 ] edi
jmp r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
mov ebx [ ebp - 0x8 ]
push 0x2
pop edx
jmp r-xdata
sub_418286
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov eax 0xff
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] ecx
cmp edi eax
ja r-xdata
mov ecx eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx edi
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov esi [ ebp + 0x10 ]
mov [ ebp - 0xc ] esi
test al 0x1
jne r-xdata
mov [ ebp - 0x18 ] esi
test eax 0x800
je r-xdata
and eax 0x800
mov [ ebp + 0x8 ] eax
je r-xdata
cmp esi ecx
ja r-xdata
and eax 0xfffffffe
mov [ ebp + 0x8 ] eax
mov ecx 0xffff
cmp edi ecx
jbe r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
cmp esi ecx
ja r-xdata
mov edi [ ebp - 0x4 ]
mov ebx ecx
sub ebx esi
mov esi [ ebp - 0x18 ]
inc ebx
mov [ ebp - 0x14 ] ebx
mov ebx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
jle r-xdata
mov edi ecx
mov [ ebp + 0x14 ] edi
jmp r-xdata
cmp esi 0xff
ja r-xdata
mov eax ecx
inc ebx
sub eax esi
mov edi ecx
add ebx eax
mov [ ebp - 0x14 ] ebx
mov ebx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
movzx ecx [ esi + eax ]
mov al 0x1
mov edx ecx
and ecx 0x7
shr edx 0x3
shl al cl
or [ edx + ebx ] al
inc esi
cmp esi edi
jbe r-xdata
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
mov ebx [ ebp - 0x14 ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp - 0x14 ]
cmp edx esi
jb r-xdata
push [ ebp + 0x10 ]
mov edx [ ebp - 0x10 ]
lea eax [ eax * 4 + r--data ]
mov ecx [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_48d9fe
jmp r-xdata
cmp edi esi
jae r-xdata
mov esi 0x100
mov edx esi
mov ecx esi
shr edx 0x3
and ecx 0x7
mov al 0x1
shl al cl
or [ edx + ebx ] al
inc esi
cmp esi edi
jbe r-xdata
mov esi [ ebp - 0xc ]
mov edi [ ebp + 0x14 ]
mov ebx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
lea eax [ esi - 0x1 ]
cmp ecx eax
jb r-xdata
cmp ecx edi
jbe r-xdata
add esp 0x10
add ebx eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov edx [ edx ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx edi
jbe r-xdata
mov esi edx
mov [ ebp - 0xc ] esi
jmp r-xdata
lea eax [ ebp - 0x14 ]
mov edx edi
push eax
lea eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_48e1bf
pop ecx
pop ecx
test eax eax
js r-xdata
cmp esi edi
jae r-xdata
cmp esi edi
jae r-xdata
push ecx
mov ecx [ ebp - 0x8 ]
push edx
push [ ebp + 0xc ]
mov edx [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call sub_418286
lea eax [ edi + 0x1 ]
cmp edx eax
ja r-xdata
jne r-xdata
push 0x2
pop eax
mov [ edx ] ax
add edx eax
mov [ edx ] si
add edx eax
mov [ edx ] di
jmp r-xdata
jne r-xdata
push 0x2
pop eax
mov [ edx ] ax
mov ecx esi
add edx eax
call sub_48ec7b
mov ecx edi
lea edx [ edx + eax * 2 ]
jmp r-xdata
mov edi ecx
mov [ ebp + 0x14 ] edi
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax ] edx
jmp r-xdata
xor eax eax
inc eax
mov [ edx ] ax
push 0x2
pop eax
add edx eax
mov [ edx ] si
add edx eax
xor eax eax
mov ecx esi
inc eax
mov [ edx ] ax
add edx 0x2
call sub_48ec7b
lea edx [ edx + eax * 2 ]
jmp r-xdata
sub_41832a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor eax eax
jmp r-xdata
movzx edi [ ecx ]
dec esi
movzx eax [ edx ]
lea ecx [ ecx + 0x2 ]
inc edx
cmp ax di
je r-xdata
pop edi
pop esi
pop ebp
retn
test esi esi
je r-xdata
sbb eax eax
neg eax
lea eax [ eax * 2 - 0x1 ]
sub_418359
push ebp
mov ebp esp
sub esp 0x24
mov eax ecx
mov [ ebp - 0x24 ] edx
mov ecx [ ebp + 0x10 ]
xor edx edx
push ebx
push esi
mov esi [ eax ]
inc edx
shr ecx 0xb
xor ebx ebx
push edi
and ecx edx
mov [ ebp - 0x20 ] eax
movzx edi [ esi + 0x2 ]
add esi 0x4
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
test ecx ecx
je r-xdata
sub esi 0x2
test edi edi
je r-xdata
mov eax edi
and eax 0xfc00
cmp eax 0xd800
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
jmp r-xdata
push 0x30
pop eax
mov [ ebp - 0x4 ] eax
cmp edi eax
jae r-xdata
movzx eax [ esi ]
and edi 0x3ff
shl edi 0xa
and eax 0x3ff
or edi eax
add edi 0x10000
add esi 0x2
jmp r-xdata
test [ ebp + 0x10 ] 0x20000000
jne r-xdata
cmp edi 0x7a
ja r-xdata
lea ecx [ ebx - 0x6 ]
cmp ecx 0x5
ja r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] esi
mov eax [ ebp - 0x24 ]
mov [ eax ] edi
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ edi - 0x30 ]
mov [ ebp - 0x14 ] 0x7b
movsx eax [ edx * 2 + r--data ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
add ebx 0x17
jmp r-xdata
cmp edi 0x67
ja r-xdata
jle r-xdata
cmp edi 0x6c
je r-xdata
je r-xdata
mov ebx eax
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x25
jmp r-xdata
cmp edi 0x6f
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push 0x30
pop ecx
cmp edi ecx
je r-xdata
jmp r-xdata
cmp ebx 0xc
jne r-xdata
cmp [ esi + 0x2 ] 0x7b
je r-xdata
cmp edi 0x75
je r-xdata
lea eax [ esi + 0x2 ]
mov [ ebp - 0x1c ] eax
movzx eax [ eax ]
cmp eax 0x3c
je r-xdata
push 0x37
sub edi ecx
pop edx
jbe r-xdata
mov eax [ ebp - 0x14 ]
cmp [ esi + 0x2 ] ax
jne r-xdata
add esi 0x4
mov edi ebx
push 0x30
pop edx
movzx eax [ esi ]
cmp ax dx
jb r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x51
jmp r-xdata
test [ ebp + 0x10 ] 0x2000000
je r-xdata
cmp edi 0x78
jne r-xdata
push 0x1b
cmp eax 0x27
je r-xdata
cmp ax dx
ja r-xdata
test [ ebp + 0x10 ] 0x40
je r-xdata
push 0x39
pop ecx
cmp edi ecx
jbe r-xdata
lea ecx [ esi + 0x4 ]
call sub_48e399
test eax eax
cmp [ esi ] 0x7d
je r-xdata
push 0x37
pop edx
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x25
jmp r-xdata
movzx eax [ esi + 0x2 ]
mov ecx 0xff
cmp ax cx
ja r-xdata
test [ ebp + 0x10 ] 0x2000000
mov ecx 0xff
je r-xdata
push 0x39
pop edx
push 0x2d
pop ecx
mov [ ebp - 0x18 ] 0x7d
mov [ ebp - 0xc ] ecx
cmp ax [ ebp - 0x14 ]
jne r-xdata
add esi 0x2
movzx eax [ esi ]
add eax 0xffffffd0
lea edi [ eax + edi * 8 ]
mov eax [ ebp - 0x8 ]
cmp eax 0x2
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp edi 0x4c
je r-xdata
test ecx ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x50
jmp r-xdata
add esi 0x2
movzx eax ax
test edi edi
jne r-xdata
test [ eax + r--data ] 0x8
je r-xdata
cmp [ esi + 0x2 ] 0x7b
mov edi ebx
jne r-xdata
movzx eax [ esi + 0x2 ]
cmp ax cx
ja r-xdata
mov [ ebp - 0x8 ] ebx
lea ecx [ esi + 0x4 ]
movzx eax [ ecx ]
test ax ax
je r-xdata
inc eax
mov [ ebp - 0x8 ] eax
movzx eax [ esi + 0x2 ]
cmp ax [ ebp - 0x4 ]
jb r-xdata
jmp r-xdata
movzx edi [ esi ]
cmp edi 0x38
jae r-xdata
lea eax [ esi + 0x2 ]
mov [ ebp - 0x18 ] esi
mov [ ebp - 0xc ] eax
movzx eax [ eax ]
cmp ax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
jb r-xdata
cmp edi 0x55
je r-xdata
lea eax [ edi - 0xd800 ]
cmp eax 0x7ff
ja r-xdata
add eax 0xffffffd0
lea edi [ eax + edi * 8 ]
mov eax ecx
neg eax
sbb eax eax
and eax 0x100000
add eax 0xffff
cmp edi eax
jbe r-xdata
cmp eax 0x30
je r-xdata
movzx eax [ esi + 0x4 ]
cmp ax cx
ja r-xdata
push 0x37
pop edx
add esi 0x4
movzx eax [ esi ]
cmp ax cx
ja r-xdata
test [ eax + r--data ] 0x8
je r-xdata
mov [ ebp - 0x10 ] ebx
add esi 0x2
jmp r-xdata
mov esi [ ebp - 0x1c ]
push 0x2d
mov [ ebp - 0x8 ] 0x1
pop ecx
jmp r-xdata
cmp ax [ ebp - 0x18 ]
je r-xdata
push 0x30
pop ecx
cmp edx 0x8
jl r-xdata
mov eax [ ebp - 0x10 ]
test [ ebp + 0x10 ] 0x2000000
jmp r-xdata
cmp edi 0x63
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x49
jmp r-xdata
movzx eax [ esi ]
cmp ax [ ebp - 0x4 ]
jae r-xdata
push 0x30
pop ecx
jmp r-xdata
test [ eax + r--data ] 0x8
je r-xdata
test [ eax + r--data ] 0x8
je r-xdata
cmp [ esi ] 0x7d
jne r-xdata
push 0x37
pop edx
movzx eax [ esi + 0x4 ]
cmp ax cx
ja r-xdata
lea eax [ esi + 0x2 ]
mov [ ebp - 0xc ] eax
movzx eax [ eax ]
cmp ax [ ebp - 0x4 ]
jae r-xdata
mov ecx ebx
jmp r-xdata
cmp [ esi + 0x2 ] cx
jne r-xdata
movzx eax [ ecx ]
test ax ax
je r-xdata
cmp ax [ ebp - 0xc ]
je r-xdata
mov ebx edx
jmp r-xdata
cmp edx [ ebp + 0xc ]
jle r-xdata
mov eax [ ebp - 0x8 ]
push 0x30
cmp edx 0xccccccb
jg r-xdata
jne r-xdata
push 0x2
pop ecx
add esi ecx
movzx edi [ esi ]
test edi edi
jne r-xdata
cmp ax dx
ja r-xdata
movzx eax [ esi ]
cmp ax cx
jae r-xdata
movzx eax [ esi + 0x6 ]
cmp ax cx
ja r-xdata
mov esi [ ebp - 0x1c ]
movzx eax [ esi ]
mov [ ebp - 0x10 ] eax
cmp eax 0x61
jb r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x4f
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jmp r-xdata
add esi 0x2
test edi edi
jne r-xdata
test [ eax + r--data ] 0x8
je r-xdata
cmp ax dx
ja r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
push 0x7d
pop ecx
cmp ax cx
je r-xdata
add ecx 0x2
movzx eax [ ecx ]
test ax ax
jne r-xdata
cmp ax [ ebp - 0x4 ]
jb r-xdata
neg ebx
mov esi [ ebp - 0x18 ]
lea ecx [ esi + 0x2 ]
movzx eax [ ecx ]
pop edx
cmp ax dx
jb r-xdata
mov esi [ ebp - 0xc ]
imul ecx edx 0xa
movzx edx [ esi ]
lea eax [ esi + 0x2 ]
add edx 0xffffffd0
mov [ ebp - 0xc ] eax
movzx eax [ eax ]
add edx ecx
pop ecx
push 0x39
cmp ax cx
pop ecx
jae r-xdata
cmp edi 0x7f
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
cmp ax dx
ja r-xdata
jmp r-xdata
test [ eax + r--data ] 0x8
je r-xdata
cmp eax 0x41
sbb eax eax
shl edi 0x4
and eax 0xfffffff9
add eax edx
sub edi eax
mov eax [ ebp - 0x8 ]
add edi [ ebp - 0x10 ]
cmp eax 0x2
jl r-xdata
sub eax 0x20
mov [ ebp - 0x10 ] eax
je r-xdata
cmp eax 0x61
jb r-xdata
cmp eax 0x30
je r-xdata
push 0x37
mov edi ebx
mov [ ebp - 0x10 ] 0x2
pop edx
cmp ecx 0xccccccb
jg r-xdata
test ecx ecx
jne r-xdata
add esi 0x2
push 0x7d
pop eax
cmp [ esi ] ax
jne r-xdata
push 0x1c
jmp r-xdata
cmp ax dx
ja r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3d
jmp r-xdata
push 0x39
pop edx
cmp ax cx
ja r-xdata
lea eax [ edi - 0x61 ]
cmp eax 0x19
ja r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x44
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x22
jmp r-xdata
add esi 0x2
movzx eax [ esi + 0x8 ]
cmp ax cx
ja r-xdata
inc eax
mov [ ebp - 0x8 ] eax
lea eax [ esi + 0x2 ]
mov [ ebp - 0x1c ] eax
movzx eax [ eax ]
cmp ax cx
ja r-xdata
jmp r-xdata
cmp eax 0x41
sbb eax eax
shl edi 0x4
and eax 0xfffffff9
add eax edx
sub edi eax
mov eax [ ebp - 0xc ]
add edi [ ebp - 0x10 ]
neg eax
sbb eax eax
and eax 0x100000
add eax 0xffff
cmp edi eax
ja r-xdata
sub eax 0x20
mov [ ebp - 0x10 ] eax
movzx eax [ esi ]
cmp ax cx
jbe r-xdata
cmp ecx 0x41
sbb eax eax
shl edi 0x4
and eax 0xfffffff9
add eax edx
sub edi eax
add edi ecx
dec [ ebp - 0x10 ]
jne r-xdata
sub ecx 0x20
lea ecx [ esi + 0x2 ]
movzx eax [ ecx ]
cmp ax [ ebp - 0x4 ]
jae r-xdata
mov esi [ ebp - 0xc ]
imul ecx ecx 0xa
movzx eax [ esi ]
add eax 0xffffffd0
add ecx eax
cmp [ ebp - 0x10 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3a
jmp r-xdata
pop ebx
jmp r-xdata
mov esi ecx
lea ecx [ esi + 0x2 ]
movzx eax [ ecx ]
cmp ax [ ebp - 0x4 ]
jae r-xdata
xor edi 0x40
jmp r-xdata
sub edi 0x20
test [ eax + r--data ] 0x8
je r-xdata
movzx eax [ esi ]
cmp ax cx
jbe r-xdata
movzx eax ax
mov [ ebp - 0x10 ] eax
test [ eax + r--data ] 0x8
je r-xdata
add esi 0x2
movzx ecx [ esi ]
cmp ecx 0x61
jb r-xdata
jmp r-xdata
cmp ax dx
ja r-xdata
jmp r-xdata
mov ebx ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp ecx eax
jle r-xdata
cmp ax dx
ja r-xdata
push 0x37
mov edi ebx
mov [ ebp - 0x10 ] 0x4
pop edx
movzx eax ax
test [ eax + r--data ] 0x8
je r-xdata
mov esi ecx
sub eax ecx
lea ecx [ eax + 0x1 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xf
jmp r-xdata
cmp ecx 0x41
sbb eax eax
shl edi 0x4
and eax 0xfffffff9
add eax edx
sub edi eax
add edi ecx
dec [ ebp - 0x10 ]
jne r-xdata
sub ecx 0x20
add esi 0x2
add esi 0x2
movzx ecx [ esi ]
cmp ecx 0x61
jb r-xdata
mov ecx [ ebp - 0xc ]
mov eax ecx
neg eax
sbb eax eax
and eax 0x100000
add eax 0xffff
cmp edi eax
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x4c
jmp r-xdata
sub_418413
push ebp
mov ebp esp
sub esp 0x10
movzx eax [ ecx ]
push ebx
push esi
push edi
movzx eax [ eax + r--data ]
mov edi edx
xor edx edx
mov [ ebp - 0x4 ] edi
inc edx
lea ecx [ ecx + eax * 2 ]
call sub_418605
mov esi eax
cmp esi edi
jae r-xdata
xor eax eax
inc eax
jmp r-xdata
push 0x77
pop ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] bx
je r-xdata
cmp edi 0x75
je r-xdata
jmp r-xdata
mov edx [ ebp + 0xc ]
movzx eax [ esi + 0x2 ]
mov ecx [ edx + 0x14 ]
lea ebx [ ecx + eax * 2 ]
mov ecx [ edx + 0x10 ]
test ecx ecx
je r-xdata
mov eax 0x92
cmp di ax
je r-xdata
movzx edi [ esi ]
jmp r-xdata
push 0x77
mov ecx ebx
pop edx
cmp ecx [ edx + 0x20 ]
jae r-xdata
movzx eax [ edi + r--data ]
lea esi [ esi + eax * 2 ]
inc eax
cmp di ax
je r-xdata
movzx eax di
xor edx edx
inc edx
movzx eax [ eax + r--data ]
lea ecx [ esi + eax * 2 ]
call sub_418605
mov esi eax
cmp esi [ ebp - 0x4 ]
jae r-xdata
movzx eax [ ecx + 0x2 ]
lea ecx [ ecx + eax * 2 ]
cmp [ ecx ] dx
je r-xdata
mov edx [ ebp + 0xc ]
cmp esi ebx
jb r-xdata
xor eax eax
cmp [ ebx + 0x2 ] ax
je r-xdata
mov eax [ ebp + 0xc ]
mov edx esi
sub edx [ eax + 0x14 ]
add edx 0x2
sar edx 0x1
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] bx
je r-xdata
jmp r-xdata
mov eax 0xa1
cmp di ax
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax ecx
test ecx ecx
je r-xdata
cmp esi ecx
jbe r-xdata
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
add ecx 0x2
cmp ecx [ eax + 0x20 ]
jb r-xdata
add eax 0xfffffff3
cmp di ax
je r-xdata
movzx edi [ esi ]
xor edx edx
push 0x10
pop ecx
cmp edi 0x7d
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ebx
cmp [ eax + 0x4 ] ebx
je r-xdata
push 0x77
movzx eax [ ecx ]
cmp eax edx
je r-xdata
mov edx eax
lea eax [ ecx + 0x78 ]
cmp di ax
je r-xdata
pop ebx
movzx eax [ ebx + 0x2 ]
lea ebx [ ebx + eax * 2 ]
pop eax
cmp [ ebx ] ax
jne r-xdata
test eax eax
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] bx
je r-xdata
inc eax
cmp di ax
je r-xdata
xor eax eax
mov edx [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
lea eax [ ecx + 0x7a ]
cmp di ax
je r-xdata
lea eax [ ebp - 0xc ]
mov ecx ebx
push eax
push edx
push [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_418413
add esp 0xc
push 0x77
test eax eax
jne r-xdata
inc eax
cmp di ax
je r-xdata
lea eax [ ecx + 0x73 ]
cmp di ax
je r-xdata
movzx eax [ esi + 0x2 ]
test ax ax
je r-xdata
inc eax
cmp di ax
je r-xdata
mov ecx 0x87
cmp di cx
jne r-xdata
lea eax [ ecx + 0x75 ]
cmp di ax
je r-xdata
mov edi edx
lea eax [ esi + eax * 2 ]
cmp [ eax ] bx
jne r-xdata
inc eax
cmp di ax
je r-xdata
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] bx
je r-xdata
push edx
push [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_418413
add esp 0xc
test eax eax
je r-xdata
mov esi eax
lea eax [ ecx + 0x71 ]
cmp di ax
je r-xdata
test edi edi
jne r-xdata
test edi edi
je r-xdata
xor edx edx
inc edi
inc eax
cmp di ax
je r-xdata
jmp r-xdata
lea eax [ ecx + 0x77 ]
cmp di ax
je r-xdata
lea eax [ edi - 0x6 ]
cmp eax 0x95
ja r-xdata
movzx eax [ eax + lookup_table_41856f ]
jmp [ eax * 4 + jump_table_418547 ]
lea ecx [ esi + 0x22 ]
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
mov ecx esi
jmp r-xdata
movzx eax [ esi + 0x2 ]
cmp ax cx
je r-xdata
movzx eax [ esi + 0x4 ]
push 0x10
pop edx
cmp ax dx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
jmp r-xdata
jmp r-xdata
movzx eax [ ecx ]
add eax 0xffffff9e
cmp eax 0xb
ja r-xdata
add esi 0x4
jmp r-xdata
push 0xf
pop ecx
cmp ax cx
jmp r-xdata
jmp r-xdata
mov ax [ esi + 0x2 ]
mov edx 0xfc00
and ax dx
mov edx 0xd800
cmp ax dx
jmp r-xdata
jmp r-xdata
movzx eax [ eax + lookup_table_454f48 ]
jmp [ eax * 4 + jump_table_454f3c ]
jne r-xdata
push 0xf
pop edx
cmp ax dx
jne r-xdata
mov ax [ esi + 0x4 ]
mov ecx 0xfc00
and ax cx
mov ecx 0xd800
cmp ax cx
cmp [ ecx + 0x2 ] dx
ja r-xdata
add esi 0x2
jmp r-xdata
jmp r-xdata
sub_418605
movzx eax [ ecx ]
cmp eax 0x4
jl r-xdata
mov eax ecx
retn
cmp eax 0x5
jle r-xdata
test edx edx
je r-xdata
cmp eax 0x76
je r-xdata
movzx eax [ eax + r--data ]
lea ecx [ ecx + eax * 2 ]
jmp sub_418605
cmp eax 0x7d
jg r-xdata
cmp eax 0x80
jle r-xdata
test edx edx
je r-xdata
cmp eax 0x8c
jle r-xdata
movzx eax [ ecx + 0x2 ]
lea ecx [ ecx + eax * 2 ]
cmp [ ecx ] 0x77
je r-xdata
cmp eax 0x91
jg r-xdata
movzx eax [ ecx ]
jmp r-xdata
jmp r-xdata
sub_418633
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx edx
push edi
mov edi ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x10 ]
mov edx eax
cmp eax [ esi + 0x20 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edx [ esi + 0x20 ]
jb r-xdata
mov eax [ esi + 0x14 ]
lea edi [ ecx + 0x2 ]
mov [ ebp - 0x8 ] edi
add ecx 0x4
jmp r-xdata
movzx edx [ ecx + 0x2 ]
mov eax [ esi + 0x14 ]
lea eax [ eax + edx * 2 ]
cmp eax edi
jb r-xdata
lea eax [ ebx + edi ]
mov [ edx ] ax
mov eax [ esi + 0x14 ]
add edx 0x2
cmp edx [ esi + 0x20 ]
jb r-xdata
mov edx [ ebp + 0x8 ]
call sub_41865e
mov ecx eax
test ecx ecx
jne r-xdata
lea eax [ ebx + edx ]
mov [ ecx + 0x2 ] ax
movzx edi [ edx ]
lea eax [ eax + edi * 2 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
jmp r-xdata
mov edi [ ebp - 0x4 ]
sub_41865e
push ebp
mov ebp esp
push ecx
push ecx
movzx eax [ ecx ]
push ebx
push esi
push edi
mov edi edx
test ax ax
je r-xdata
xor eax eax
push 0x10
pop esi
mov ebx 0x95
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0xf
mov eax ecx
jmp r-xdata
cmp ax 0x70
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax [ ecx + 0x2 ]
lea ecx [ ecx + eax * 2 ]
jmp r-xdata
movzx edx ax
cmp edx ebx
jg r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
mov eax edx
sub eax 0x97
je r-xdata
je r-xdata
cmp ax 0x75
je r-xdata
movzx eax [ ecx + 0x2 ]
lea ecx [ ecx + eax * 2 ]
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp edx 0x55
jl r-xdata
movzx eax [ edx + r--data ]
lea ecx [ ecx + eax * 2 ]
test edi edi
je r-xdata
dec eax
dec eax
jne r-xdata
cmp edx 0x5a
jle r-xdata
lea eax [ edx - 0x1d ]
cmp eax 0x37
jbe r-xdata
jmp r-xdata
movzx eax [ ecx + 0x2 ]
cmp ax si
je r-xdata
cmp edx 0x5d
jle r-xdata
mov ax [ ecx - 0x2 ]
mov edx 0xfc00
and ax dx
mov edx 0xd800
cmp ax dx
jne r-xdata
add ecx 0x4
jmp r-xdata
cmp ax [ ebp - 0x4 ]
jne r-xdata
movzx eax [ ecx + 0x4 ]
cmp ax [ ebp - 0x8 ]
je r-xdata
cmp edx 0x60
jle r-xdata
add ecx 0x2
jmp r-xdata
add ecx 0x4
cmp ax [ ebp - 0x4 ]
jne r-xdata
cmp edx 0x61
je r-xdata
push 0x10
pop esi
jmp r-xdata
sub_418720
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
push 0x70
mov ebx edx
mov [ ebp - 0x8 ] 0xf
pop edx
push 0x10
mov esi ecx
pop edi
call sub_418f99
mov di [ ebp - 0x4 ]
push 0x21
pop ecx
sub cx ax
add di cx
cmp di 0x28
ja r-xdata
mov ax cx
cmp ax 0x6e
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx ebx
push eax
mov eax [ ebp + 0x8 ]
mov ecx esi
push [ eax + 0x4 ]
call sub_418c30
pop ecx
pop ecx
cmp ax dx
je r-xdata
cmp ax 0x6f
je r-xdata
push 0x21
pop ecx
cmp di cx
je r-xdata
xor ecx ecx
inc ecx
jmp r-xdata
cmp di 0x23
je r-xdata
movzx eax [ esi + 0x2 ]
lea edi [ esi + eax * 2 ]
jmp r-xdata
lea edi [ esi + 0x22 ]
cmp ax dx
je r-xdata
mov [ ebp - 0x24 ] ecx
test eax eax
je r-xdata
cmp di 0x25
je r-xdata
movzx eax [ edi ]
push 0x7
mov [ ebp - 0x4 ] eax
add eax 0xffffff9e
pop ecx
cmp ax cx
ja r-xdata
movzx eax [ esi ]
push 0x10
mov [ ebp - 0x4 ] eax
pop edi
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx ebx
push eax
mov eax [ ebp + 0x8 ]
mov ecx esi
push [ eax + 0x4 ]
call sub_418c30
mov cl [ ebp - 0x4 ]
mov edx ebx
not cl
movzx ecx cl
and ecx 0x1
mov [ ebp - 0x24 ] ecx
lea ecx [ ebp - 0x28 ]
push eax
push ecx
push [ ebp + 0x8 ]
mov ecx eax
call sub_418968
add esp 0x14
test eax eax
je r-xdata
movzx ecx ax
cmp ecx edx
jg r-xdata
push 0x70
pop edx
push eax
lea ecx [ ebp - 0x28 ]
mov edx ebx
push ecx
push [ ebp + 0x8 ]
mov ecx eax
call sub_418968
add esp 0xc
test eax eax
je r-xdata
cmp di 0x27
je r-xdata
movzx eax [ ebp - 0x4 ]
add eax 0xffffff9e
cmp eax 0x7
ja r-xdata
mov eax ecx
sub eax 0x95
je r-xdata
je r-xdata
jmp r-xdata
xor ecx ecx
jmp [ eax * 4 + jump_table_418948 ]
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp ecx 0x5d
jg r-xdata
movzx eax di
push 0x7
add eax 0xffffffdf
pop edi
cmp eax edi
ja r-xdata
push 0x6a
push 0x6c
jmp r-xdata
push 0x6b
jmp r-xdata
push 0x6d
jmp r-xdata
movzx eax [ ecx + r--data ]
lea esi [ esi + eax * 2 ]
test ebx ebx
je r-xdata
dec eax
dec eax
je r-xdata
cmp ecx 0x60
jle r-xdata
cmp ecx 0x5b
jge r-xdata
jmp [ eax * 4 + jump_table_4550b5 ]
pop eax
mov [ edi ] ax
movzx ecx [ esi ]
mov [ ebp - 0x4 ] ecx
lea eax [ ecx - 0x21 ]
cmp ax 0x40
jbe r-xdata
lea eax [ ecx - 0x1d ]
cmp eax 0x37
ja r-xdata
dec eax
dec eax
jne r-xdata
movzx eax [ esi + 0x2 ]
cmp ax di
je r-xdata
cmp ecx 0x61
jne r-xdata
movzx eax [ esi + 0x4 ]
cmp ax di
je r-xdata
test ecx ecx
je r-xdata
add [ esi ] 0x9
jmp r-xdata
push 0x8
jmp r-xdata
push 0x6
add [ esi ] di
jmp r-xdata
add [ esi ] 0x5
jmp r-xdata
mov ax [ esi - 0x2 ]
mov ecx 0xfc00
and ax cx
mov ecx 0xd800
cmp ax cx
jne r-xdata
jmp r-xdata
add esi 0x4
jmp r-xdata
cmp ax [ ebp - 0x8 ]
jne r-xdata
jmp r-xdata
add esi 0x4
cmp ax [ ebp - 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0x54
jg r-xdata
pop eax
add [ esi ] ax
jmp r-xdata
add esi 0x2
jmp r-xdata
push 0x70
pop edx
jmp r-xdata
cmp ecx 0x5a
jg r-xdata
sub_418968
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push esi
push edi
push 0x77
mov ebx ecx
mov [ ebp - 0xc ] edx
pop ecx
mov [ ebp - 0x10 ] 0x83
mov [ ebp - 0x18 ] 0x81
mov [ ebp - 0x1c ] 0x82
mov [ ebp - 0x14 ] 0x85
add ebx 0x8
jmp r-xdata
cmp ax cx
je r-xdata
movzx eax [ ebx ]
cmp eax 0x76
je r-xdata
movzx eax [ ebx + 0x2 ]
lea ebx [ ebx + eax * 2 ]
cmp [ ebx ] cx
je r-xdata
movzx esi ax
mov eax 0x83
cmp esi eax
jg r-xdata
movzx eax [ ebx ]
jmp r-xdata
mov eax 0x85
cmp esi eax
je r-xdata
add eax 0xfffffffe
cmp esi eax
jge r-xdata
movzx eax [ ebx + 0x2 ]
lea edi [ ebx + eax * 2 ]
movzx eax [ esi + r--data ]
lea ebx [ ebx + eax * 2 ]
cmp [ edi ] cx
jne r-xdata
lea eax [ esi - 0x92 ]
cmp eax 0x1
ja r-xdata
test esi esi
je r-xdata
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x3c ]
mov ecx ebx
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call sub_418c30
mov ebx eax
mov [ ebp - 0x8 ] ebx
pop ecx
pop ecx
test ebx ebx
je r-xdata
lea ecx [ ebx + 0x2 ]
movzx eax [ ecx ]
cmp ax [ ebp - 0x14 ]
jne r-xdata
xor eax eax
cmp [ edi + 0x4 ] eax
setne al
jmp r-xdata
cmp esi 0x78
je r-xdata
xor eax eax
jmp r-xdata
movzx eax [ edi + 0x2 ]
lea ebx [ edi + 0x4 ]
mov edx [ ebp - 0xc ]
push 0x77
pop ecx
lea edi [ edi + eax * 2 ]
cmp [ edi ] cx
je r-xdata
mov edx [ edi ]
cmp edx 0x1d
je r-xdata
cmp ax [ ebp - 0x10 ]
je r-xdata
push 0x77
pop edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp esi 0x7b
je r-xdata
push [ ebp + 0x10 ]
mov ecx ebx
push esi
push [ ebp + 0x8 ]
call sub_418968
add esp 0xc
test eax eax
je r-xdata
mov edi esi
jmp r-xdata
lea eax [ edi + 0x8 ]
lea edi [ ebp - 0x3c ]
jmp r-xdata
mov ecx [ ebp - 0x3c ]
cmp ecx 0x1d
je r-xdata
cmp ax [ ebp - 0x18 ]
je r-xdata
movzx eax [ ecx + 0x2 ]
lea ecx [ ecx + eax * 2 ]
cmp [ ecx ] dx
je r-xdata
push [ ebp + 0x10 ]
mov edx [ ebp - 0xc ]
add ecx 0x4
push edi
push [ ebp + 0x8 ]
call sub_418968
add esp 0xc
test eax eax
je r-xdata
movzx ecx [ ebx + 0x2 ]
mov eax ebx
add ecx ecx
sub eax ecx
movzx eax [ eax ]
cmp eax 0x7d
jl r-xdata
mov ebx [ edi ]
lea esi [ edi + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x34 ]
cmp edx 0x6e
jne r-xdata
cmp ax [ ebp - 0x1c ]
jne r-xdata
movzx eax [ esi + r--data ]
lea ebx [ ebx + eax * 2 ]
movzx eax [ esi + r--data ]
lea ebx [ ebx + eax * 2 ]
jmp r-xdata
mov ecx 0x82
cmp eax ecx
jle r-xdata
mov eax ebx
sub eax 0x6f
je r-xdata
jne r-xdata
cmp ecx 0x6e
je r-xdata
mov eax [ edi + 0x8 ]
lea esi [ ebp - 0x3c ]
mov edx [ ebp + 0x10 ]
jmp r-xdata
push 0x77
pop ecx
jmp r-xdata
xor eax eax
inc eax
cmp ecx 0xff
ja r-xdata
dec eax
jne r-xdata
lea eax [ ebx - 0x6 ]
cmp eax 0x19
ja r-xdata
cmp ecx 0xff
ja r-xdata
mov eax [ ebp - 0x34 ]
mov edx ebx
mov esi edi
jmp r-xdata
push 0x10
pop esi
cmp edx esi
je r-xdata
je r-xdata
cmp eax 0xb
je r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x3c ]
cmp edi eax
je r-xdata
movzx eax [ eax + lookup_table_4556e1 ]
jmp [ eax * 4 + jump_table_4556a5 ]
add eax 0x4
mov [ ebp - 0x4 ] eax
mov ecx [ eax ]
cmp ecx 0xffffffff
jne r-xdata
mov esi [ ebp - 0x8 ]
lea eax [ ebp - 0x3c ]
cmp edi eax
je r-xdata
add eax eax
xor edi edi
sub edx eax
mov eax [ esi ]
cmp eax 0xa
jbe r-xdata
cmp ecx 0x18
je r-xdata
cmp edx 0xf
je r-xdata
xor edi edi
inc edi
sub eax 0x6
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
add ecx 0xa0
jmp r-xdata
cmp eax 0x6d
jbe r-xdata
mov eax [ esi ]
push [ ebp - 0xc ]
add eax eax
sub edx eax
add edx 0x2
call sub_48e837
pop ecx
test eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax esi
mov edx [ eax ]
mov eax esi
mov edx [ eax ]
mov edx [ esi ]
xor eax eax
cmp ebx 0xf
sete al
push eax
push [ edi + 0xc ]
call sub_48db8f
pop ecx
pop ecx
test eax eax
cmp ecx 0x100
jae r-xdata
cmp ecx 0xff
ja r-xdata
cmp ecx 0x100
jae r-xdata
cmp ecx 0xff
ja r-xdata
cmp ecx 0xff
jae r-xdata
cmp ecx 0xff
ja r-xdata
mov edx 0x180e
cmp ecx edx
ja r-xdata
mov edx 0x180e
cmp ecx edx
ja r-xdata
cmp ecx 0xa
jb r-xdata
cmp ecx 0xa
jb r-xdata
cmp ebx 0x6e
ja r-xdata
cmp [ ebp - 0x38 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx ecx
add eax eax
shr edx 0x3
sub edx eax
and ecx 0x7
xor eax eax
inc eax
shl eax cl
test [ edx + esi ] al
jne r-xdata
mov esi [ ebp + 0x10 ]
cmp [ ebp - 0x38 ] 0x0
je r-xdata
cmp ecx esi
je r-xdata
lea eax [ edx - 0x6 ]
cmp eax esi
ja r-xdata
lea esi [ edx + 0x20 ]
test edi edi
jne r-xdata
xor edi edi
inc edi
dec eax
je r-xdata
cmp eax 0x6f
ja r-xdata
jmp r-xdata
mov edx [ ebp + 0x10 ]
add eax 0x4
mov edx [ eax ]
cmp edx 0xffffffff
jne r-xdata
cmp [ eax ] 0xffffffff
jmp r-xdata
add eax 0x4
mov edx [ eax ]
cmp edx 0xffffffff
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
test [ ecx + eax ] 0x4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
test [ ecx + eax ] 0x4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
test [ ecx + eax ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
test [ ecx + eax ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
test [ ecx + eax ] 0x10
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
test [ ecx + eax ] 0x10
jmp r-xdata
cmp ecx 0x2000
jb r-xdata
je r-xdata
cmp ecx 0x2000
jb r-xdata
je r-xdata
cmp ecx 0xd
jbe r-xdata
cmp ecx 0xd
jbe r-xdata
mov ebx [ ebp - 0x8 ]
lea esi [ edi + 0x8 ]
jmp r-xdata
xor eax eax
cmp edx ecx
sete al
xor ebx ebx
cmp edx esi
mov [ ebp - 0x4 ] eax
sete bl
xor edx edx
cmp ecx esi
sete dl
test ebx ebx
je r-xdata
cmp ecx 0xf
jne r-xdata
lea eax [ ecx - 0x6 ]
cmp eax 0x14
ja r-xdata
sub ecx edx
jmp r-xdata
mov al [ ecx ]
and al [ edx ]
inc ecx
inc edx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
add ecx 0x40
jmp r-xdata
dec eax
je r-xdata
cmp eax 0x70
jne r-xdata
lea eax [ ebp - 0x3c ]
mov ecx ebx
cmp esi eax
jne r-xdata
cmp ecx edx
je r-xdata
jmp r-xdata
je r-xdata
cmp ecx edx
je r-xdata
jne r-xdata
cmp ecx 0x200a
jbe r-xdata
cmp ecx 0x9
je r-xdata
cmp ecx 0x200a
jbe r-xdata
cmp ecx 0x9
je r-xdata
mov eax 0x85
cmp ecx eax
je r-xdata
mov eax 0x85
cmp ecx eax
je r-xdata
mov edx [ ebp - 0xc ]
xor esi esi
test edx edx
je r-xdata
imul eax edx 0x15
cmp [ eax + ecx + r--data ] 0x0
je r-xdata
movzx eax [ ecx + edx ]
not eax
and al [ edx ]
inc edx
test al al
jne r-xdata
cmp edx esi
jb r-xdata
xor edi edi
inc edi
dec eax
jne r-xdata
lea eax [ ebp - 0x3c ]
mov ecx ebx
cmp esi eax
je r-xdata
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
add eax eax
sub ecx eax
cmp ecx 0x202f
je r-xdata
cmp ecx 0x20
je r-xdata
cmp ecx 0x202f
je r-xdata
cmp ecx 0x20
je r-xdata
cmp ecx 0x2027
jbe r-xdata
lea eax [ ecx - 0x2028 ]
cmp eax 0x1
ja r-xdata
movzx eax [ eax + lookup_table_455721 ]
jmp [ eax * 4 + jump_table_4556fd ]
xor esi esi
inc esi
jmp r-xdata
jmp r-xdata
cmp edx esi
jb r-xdata
cmp [ ebp - 0x38 ] 0x0
jmp r-xdata
mov eax [ esi + 0x8 ]
add eax eax
sub ecx eax
movzx eax [ ecx + 0x2 ]
test al 0x4
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx 0x205f
je r-xdata
cmp ecx 0xa0
je r-xdata
cmp ecx 0x205f
je r-xdata
cmp ecx 0xa0
je r-xdata
cmp ecx 0x2029
jbe r-xdata
jmp r-xdata
mov eax [ edi + 0xc ]
xor ecx ecx
cmp eax [ ebp - 0x30 ]
sete cl
cmp ecx [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jmp r-xdata
test edx edx
je r-xdata
test ebx ebx
je r-xdata
test edx edx
je r-xdata
test ebx ebx
je r-xdata
test edx edx
je r-xdata
test ebx ebx
je r-xdata
test esi esi
imul ecx [ edi + 0x8 ] 0xb
mov eax [ ebp - 0x34 ]
movzx ecx [ ecx + eax + r--data ]
lea eax [ ecx - 0x1 ]
cmp eax 0x10
ja r-xdata
jmp r-xdata
mov edi [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
jmp r-xdata
test al 0x2
jne r-xdata
cmp ecx 0x3000
jmp r-xdata
cmp ecx 0x1680
jmp r-xdata
cmp ecx 0x3000
jmp r-xdata
cmp ecx 0x1680
jmp r-xdata
jmp r-xdata
je r-xdata
jne r-xdata
imul ecx [ edi + 0xc ] 0x1e
mov eax [ ebp - 0x30 ]
jmp r-xdata
jmp r-xdata
movzx eax [ ecx * 4 + r--data ]
cmp [ ebp - 0x30 ] eax
je r-xdata
movzx eax [ ecx * 4 + r--data ]
cmp [ edi + 0xc ] eax
je r-xdata
movzx eax [ ecx * 4 + r--data ]
mov edx [ ebp - 0x30 ]
imul eax eax 0x1e
cmp [ eax + edx + r--data ] 0x0
je r-xdata
xor esi esi
movzx eax [ ecx * 4 + r--data ]
mov esi [ edi + 0xc ]
imul eax eax 0x1e
cmp [ eax + esi + r--data ] 0x0
je r-xdata
mov ebx [ ebp - 0x8 ]
add ecx 0x4
jmp r-xdata
cmp [ ebp - 0x38 ] edi
jmp r-xdata
jmp r-xdata
movzx eax [ ecx + eax + r--data ]
cmp eax [ ebp - 0x4 ]
jmp r-xdata
imul ecx [ ebp - 0x30 ] 0x1e
mov eax [ edi + 0xc ]
xor eax eax
movzx eax [ ecx * 4 + r--data ]
cmp [ ebp - 0x30 ] eax
je r-xdata
xor eax eax
movzx eax [ ecx * 4 + r--data ]
cmp [ edi + 0xc ] eax
je r-xdata
movzx eax [ ecx * 4 + r--data ]
imul eax eax 0x1e
cmp [ eax + edx + r--data ] 0x0
je r-xdata
xor eax eax
movzx eax [ ecx * 4 + r--data ]
imul eax eax 0x1e
cmp [ eax + esi + r--data ] 0x0
je r-xdata
jne r-xdata
movzx eax [ ecx * 4 + r--data ]
cmp [ ebp - 0x30 ] eax
jmp r-xdata
movzx eax [ ecx * 4 + r--data ]
cmp [ edi + 0xc ] eax
jne r-xdata
jmp r-xdata
movzx eax [ ecx * 4 + r--data ]
cmp esi eax
jne r-xdata
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
test edx edx
jne r-xdata
movzx eax [ ecx * 4 + r--data ]
cmp edx eax
xor eax eax
inc eax
jmp r-xdata
test edx edx
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
test ebx ebx
jne r-xdata
cmp edx eax
cmp edx eax
je r-xdata
cmp ebx eax
jmp r-xdata
sub_418c30
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
push edi
mov edi [ ebp + 0xc ]
push 0x1e
movzx ecx [ esi ]
add esi 0x2
mov eax ecx
mov [ edi ] eax
xor eax eax
mov [ edi + 0x4 ] eax
lea eax [ ecx - 0x21 ]
pop edx
cmp ax 0x40
jbe r-xdata
call sub_418f99
push 0x21
movzx edx ax
pop eax
sub eax edx
add ecx eax
push 0x29
pop eax
cmp cx 0x27
je r-xdata
movzx eax cx
cmp eax edx
jle r-xdata
add esi 0x2
jmp r-xdata
cmp cx 0x28
je r-xdata
je r-xdata
cmp eax 0x1f
je r-xdata
cmp cx 0x23
je r-xdata
cmp cx ax
je r-xdata
xor eax eax
cmp cx dx
setne al
lea eax [ eax * 2 + 0x1d ]
mov [ edi ] eax
movzx ecx [ esi ]
add esi 0x2
test ebx ebx
je r-xdata
cmp eax 0x6
jl r-xdata
movzx ecx [ esi ]
add esi 0x2
test ebx ebx
je r-xdata
cmp eax 0x20
je r-xdata
xor eax eax
jmp r-xdata
cmp cx 0x24
je r-xdata
cmp cx 0x2d
je r-xdata
mov eax 0x80
mov [ edi + 0x8 ] ecx
cmp ecx eax
jb r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
xor eax eax
jmp r-xdata
cmp eax 0xd
jle r-xdata
mov [ edi + 0x8 ] ecx
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
je r-xdata
add eax 0xffffff92
cmp eax 0x2
ja r-xdata
mov [ edi + 0x4 ] eax
mov eax edx
cmp eax 0x21
je r-xdata
cmp cx ax
je r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ ecx + eax ]
cmp ecx 0x100
jae r-xdata
movzx eax [ esi ]
mov edx 0x3ff
and ecx edx
and eax edx
shl ecx 0xa
or ecx eax
add ecx 0x10000
add esi 0x2
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax esi
jmp r-xdata
cmp eax 0xe
jle r-xdata
movzx eax [ esi ]
mov edx 0x3ff
and ecx edx
and eax edx
shl ecx 0xa
or ecx eax
add ecx 0x10000
add esi 0x2
jmp r-xdata
cmp cx 0x70
je r-xdata
mov [ edi ] 0x1d
jmp r-xdata
cmp eax 0x2e
je r-xdata
cmp cx 0x2b
je r-xdata
or [ edi + 0xc ] 0xffffffff
or [ edi + 0x10 ] 0xffffffff
jmp r-xdata
mov eax ecx
mov ebx 0x80
cdq
idiv ebx
movzx eax [ eax + r--data ]
shl eax 0x7
add eax edx
movzx eax [ eax * 2 + r--data ]
mov eax [ eax * 8 + r--data ]
add eax ecx
jmp r-xdata
test ebx ebx
je r-xdata
push 0x10
pop edx
cmp eax edx
jle r-xdata
movzx edx [ esi ]
dec edx
lea edx [ esi + edx * 2 ]
jmp r-xdata
lea edx [ esi + 0x20 ]
push 0x1e
pop edx
jmp r-xdata
push 0x1e
pop edx
mov [ edi ] edx
jmp r-xdata
cmp eax 0x3b
je r-xdata
xor eax eax
inc eax
mov [ edi + 0xc ] eax
cmp ecx eax
je r-xdata
movzx eax [ esi ]
cmp eax 0x9
je r-xdata
cmp eax 0x1a
jle r-xdata
movzx eax [ edx ]
add eax 0xffffff9e
cmp eax 0xb
ja r-xdata
mov ecx edx
mov eax edx
sub ecx esi
sar ecx 0x1
mov [ edi + 0x8 ] ecx
movzx eax [ eax + lookup_table_418dd8 ]
jmp [ eax * 4 + jump_table_418dcc ]
movzx ecx [ edi ]
jmp r-xdata
mov [ edi ] 0x1f
jmp r-xdata
cmp eax 0x48
je r-xdata
movzx eax [ esi + 0x2 ]
lea edx [ edi + 0x8 ]
lea ebx [ eax * 4 + r--data ]
mov [ edi + 0x8 ] eax
movzx eax [ esi + 0x2 ]
jmp r-xdata
cmp eax 0x1d
jne r-xdata
mov [ edi + 0x4 ] 0x1
add edx 0x2
xor ecx ecx
xor eax eax
cmp [ edx + 0x2 ] ax
sete cl
add edx 0x6
mov [ edi + 0x4 ] ecx
jmp r-xdata
mov [ edi ] 0x20
jmp r-xdata
push 0x1e
pop edx
cmp eax 0x55
jne r-xdata
movzx eax [ esi + 0x4 ]
mov [ edi + 0x8 ] eax
movzx eax [ esi + 0x6 ]
mov eax [ ebx ]
mov [ edx ] eax
add edx 0x4
mov eax [ ebx ]
add ebx 0x4
cmp eax 0xffffffff
jne r-xdata
mov [ edi + 0xc ] eax
jmp r-xdata
movzx eax [ esi ]
add esi 0x2
mov [ edi ] eax
lea eax [ esi + 0x4 ]
jmp r-xdata
lea eax [ edi + 0x20 ]
cmp edx eax
jae r-xdata
jmp r-xdata
push 0x10
xor eax eax
pop edx
cmp cx dx
setne al
lea eax [ eax * 2 + 0x1d ]
mov [ edi ] eax
sub_418de4
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov eax edx
mov [ ebp - 0x4 ] 0x7d
push edi
xor edi edi
mov [ ebp - 0xc ] eax
or esi 0xffffffff
mov ebx ecx
mov [ eax ] esi
xor eax eax
inc eax
jmp r-xdata
add ecx 0x5
cmp ax cx
je r-xdata
lea eax [ eax + 0x2 ]
xor edx edx
lea ecx [ ebx + eax * 2 ]
inc edx
call sub_418605
mov ecx eax
movzx edx [ ecx ]
mov eax edx
cmp eax 0x31
jg r-xdata
cmp ax dx
je r-xdata
cmp eax 0x36
je r-xdata
cmp eax 0x30
jge r-xdata
lea ecx [ edx + 0x5 ]
cmp ax cx
je r-xdata
add ecx 0x2
cmp eax 0x38
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp eax 0x1d
jne r-xdata
xor eax eax
xor eax eax
test esi esi
jns r-xdata
cmp eax 0x7d
je r-xdata
cmp eax 0x1e
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
movzx eax [ ecx + 0x2 ]
cmp edi eax
xor esi esi
inc esi
jmp r-xdata
xor eax eax
cmp dx [ ebp - 0x4 ]
lea edx [ ebp - 0x8 ]
sete al
push eax
call sub_418de4
pop ecx
mov ecx [ ebp - 0x8 ]
test ecx ecx
js r-xdata
cmp eax 0x80
jle r-xdata
cmp eax 0x22
jle r-xdata
test esi esi
jns r-xdata
movzx eax [ ebx + 0x2 ]
lea ebx [ ebx + eax * 2 ]
cmp [ ebx ] 0x77
je r-xdata
movzx edi [ ecx + 0x2 ]
jmp r-xdata
test esi esi
jns r-xdata
jmp r-xdata
jmp r-xdata
xor esi esi
movzx eax [ ebx ]
mov edx 0x86
lea ecx [ edx - 0x1 ]
cmp ax cx
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax ] esi
mov eax edi
jmp r-xdata
cmp edi eax
jne r-xdata
mov edi eax
mov esi ecx
jmp r-xdata
cmp eax 0x86
jle r-xdata
cmp eax 0x24
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp esi ecx
jmp r-xdata
add eax 0xffffff76
cmp eax 0x1
ja r-xdata
cmp eax 0x29
je r-xdata
jne r-xdata
add ecx 0x2
jmp r-xdata
cmp eax 0x2b
jne r-xdata
jmp r-xdata
sub_418eac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx edx
mov [ ebp - 0x4 ] ecx
add esi 0x4
cmp [ esi ] 0x76
jne r-xdata
cmp eax 0x83
je r-xdata
movzx eax [ esi ]
cmp eax 0x8d
jl r-xdata
add esi 0x8
push [ ebp + 0xc ]
jmp r-xdata
cmp eax 0x84
je r-xdata
push [ ebp + 0xc ]
mov edx ebx
mov ecx esi
push edi
call sub_418eac
pop ecx
pop ecx
test eax eax
je r-xdata
cmp eax 0x91
jle r-xdata
mov edx ebx
cmp eax 0x88
je r-xdata
xor eax eax
push 0x77
pop ecx
mov ecx [ ebp - 0x4 ]
push 0x77
movzx eax [ ecx + 0x2 ]
lea ecx [ ecx + eax * 2 ]
pop eax
mov [ ebp - 0x4 ] ecx
cmp [ ecx ] ax
je r-xdata
cmp eax 0x89
je r-xdata
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] cx
je r-xdata
lea ecx [ esi + 0x4 ]
xor edx edx
call sub_418605
mov esi eax
movzx eax [ esi ]
jmp r-xdata
movzx eax [ ecx ]
xor edx edx
movzx eax [ eax + r--data ]
lea ecx [ ecx + eax * 2 ]
call sub_418605
mov esi eax
movzx eax [ esi ]
cmp eax 0x87
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp eax 0x85
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ esi + 0x4 ]
xor edx edx
inc edx
cmp ecx 0x20
jge r-xdata
cmp eax 0x86
je r-xdata
push [ ebp + 0xc ]
or edx ebx
jmp r-xdata
shl edx cl
jmp r-xdata
cmp eax 0x8a
je r-xdata
push edi
mov ecx esi
call sub_418eac
pop ecx
pop ecx
test eax eax
je r-xdata
cmp eax 0x8b
je r-xdata
cmp eax 0x7d
je r-xdata
cmp eax 0x81
je r-xdata
mov eax [ ebp + 0xc ]
inc eax
push eax
jmp r-xdata
cmp eax 0x82
je r-xdata
cmp eax 0x55
je r-xdata
cmp [ esi + 0x2 ] 0xc
jne r-xdata
cmp eax 0x56
je r-xdata
test [ edi + 0x50 ] ebx
jne r-xdata
cmp eax 0x5e
je r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp eax 0x1b
je r-xdata
cmp [ edi + 0x70 ] 0x0
jmp r-xdata
cmp eax 0x1c
je r-xdata
sub_418f99
cmp cx 0x61
ja r-xdata
movzx eax cx
retn
push 0x55
pop eax
cmp cx ax
jb r-xdata
push 0x48
pop eax
cmp cx ax
jae r-xdata
retn
push 0x3b
pop eax
cmp cx ax
jae r-xdata
push 0x2e
pop edx
cmp cx dx
sbb eax eax
and eax 0xfffffff3
add eax edx
retn
sub_418fd0
push ebp
mov ebp esp
mov eax [ rw-data ]
test al 0x1
je r-xdata
or eax 0x1
mov [ rw-data ] sub_411887
mov [ rw-data ] eax
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_472a3a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4118c9
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_473c05
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_472abe
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_472b18
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_472a7c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_473d76
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_411a54
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_411a96
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_473f4f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_473fa6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_473fd1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_472b4f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4816f8
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_481731
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4817b6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_472b70
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0xff
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_472bc2
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_472bf3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0xff
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_472c45
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_472dd6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_472e3c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0xff
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47401f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47405d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_43b6cf
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0xff
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46a3dc
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_472e8e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_472ef5
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_472fa9
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47407c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47427a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_481225
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4120a6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47436a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4834e7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4835d4
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x5
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_483aa5
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_483ae4
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_483b20
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_483b5c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_483bf8
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_483c4d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_483d84
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_483e0b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_483e4b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x6
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4841ce
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x5
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4842b7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x5
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_48434a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x5
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4843bc
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4843fb
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x5
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4120e1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47302d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46a5a2
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46a61a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46a654
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46a862
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46a8da
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47e037
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x43
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47e04b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x42
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47e05f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47e0de
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47e13e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47e4ea
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47e54b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47e5e5
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47e693
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47e79b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47e8b2
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47e906
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46a931
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46ab64
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46ac17
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46acca
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46ad9c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46b038
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x5
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46b249
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46b2a9
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46b32c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46b3bf
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46b487
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46b54f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_43b6cf
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x8
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4743a5
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_474413
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_474477
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4744cf
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_474570
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_473133
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46b65a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46b697
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46b71f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46b880
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46b9c7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x9
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46bcb9
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46bd0c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46bd48
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46beec
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46c09b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46c0ef
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46c160
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46c25b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46c307
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46c423
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46c37f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46c75d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46c7e8
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46cb5f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46cc06
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46cf72
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46d107
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46d388
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x6
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_412123
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_41222e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46d3a0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46d51d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46d5b8
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46d601
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x6
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46d619
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x5
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46d925
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46dbd3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46dc2f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46dca6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46dee9
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46defd
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_473175
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_471a10
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_474621
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_41236a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x8
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f6df
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x8
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f6f3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f707
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f71b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f72f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f743
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f757
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f76b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_41245d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x5
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f77f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f793
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x8
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f7a7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f7bb
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f7cf
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f7e3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f7f7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f80b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f81f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f833
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f847
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f85b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f86f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f883
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f897
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f8ab
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f8bf
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f8d3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f8e7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f8fb
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_412471
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f90f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f95c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46f991
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46fa17
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46fb9a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46fcd0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46fe0f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46fe81
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46fedd
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46ff39
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46ff79
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46fffd
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_470052
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4700a7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4124ab
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x8
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_470191
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47023d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_470291
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_470397
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x5
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_470423
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47046d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4704ad
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_470502
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x5
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4705ef
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47062b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_470770
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_470901
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4709ca
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_470ad4
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_412572
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_470ca1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x5
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_470d2a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_470d90
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x6
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_470e93
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_470eed
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4125c7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4126bd
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_470f5f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_470fc4
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47100f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_41270e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_412817
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_471c7e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_471c92
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4731dc
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_471cf6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_471d67
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_471ea5
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47212b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4721f3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46df11
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46dffe
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46e0be
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46e3ef
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46e5fd
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46e77b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_46e823
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4746a4
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0xa
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_412a79
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_474a78
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_473248
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_47327d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_474aa0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_474ad5
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47ea12
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4732b2
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_474b4c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_473336
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_473383
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_474ba4
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_47340c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_473441
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_478170
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_473479
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4734ae
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_4734e3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_474c0e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_474c92
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_474d0a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_474d84
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_412ab7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_473525
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_474dfc
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x5
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_474fb1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x5
mov [ rw-data ] 0x6
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4750d7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_475113
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47523d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47534f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_475395
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4753d1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_475452
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x5
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_412cc2
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4781a8
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4784d0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_478702
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4789c0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_478d5b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4755de
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47571c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_411a96
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_475848
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_475a2c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_475b63
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_475c2f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x5
mov [ rw-data ] 0x8
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47ea47
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47ebdd
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47ec69
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47ef21
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47f113
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47f1fb
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47f281
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_475ec5
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_475eda
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_475eef
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47362a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_473659
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47fd9c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4800c2
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_48026f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_480465
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4808e2
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_412d18
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47f367
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47f37d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x5
mov [ rw-data ] 0x8
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47f393
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x5
mov [ rw-data ] 0x8
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47f3ef
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_475fb6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_484737
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_476019
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_476078
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47f44b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x5
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47f463
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x5
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47f4c1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_412dc0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_412e02
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4760b7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_476109
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47616c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_476181
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_476196
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0xa
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47381b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4737fe
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4847a8
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_48133f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_481360
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_481491
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4814e1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47385d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_481982
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4819e3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_412e5b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x21
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_481a5f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_481bfb
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x6
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_481d93
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_481df3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_481d33
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_481e53
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_481eb3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_481ee3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_481f13
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_481f73
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_481fdc
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_48203c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_48209c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_482112
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_482147
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4130dd
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_413190
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_413633
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4821aa
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x5
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_482343
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_482487
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_413723
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_482501
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_482562
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_482727
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4828ff
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4139ef
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_482a00
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_482a79
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_473882
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4761ca
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47623a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_476289
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_476399
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47647f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_476530
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_476679
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4766f0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47672a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_413a70
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_413ad6
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4848f8
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x6
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_482c8f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_482ca3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_482cb7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_482d34
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_482d6e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_482dbb
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_482e07
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_482e69
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_482f6f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_482fb4
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_482ffe
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_48302e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_48309c
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_48319a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_483208
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_48322d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_476778
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_413b18
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] sub_47685d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4769d7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_476ac0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_476c19
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_476ef1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4766f0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47672a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_47706d
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_484ca8
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_484d72
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_484dd8
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_484e42
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_484e8b
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_484f57
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_485051
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4850d1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4851bb
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_485220
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_485355
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4853df
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_48548a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_48551f
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_48559a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4855fd
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_485802
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x9
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_4859cd
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_485a01
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_485a35
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_485c3e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_485cdd
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_413b6e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_485d7a
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x3
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_485e2e
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_485e86
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_485ede
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] sub_485f36
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
jmp r-xdata
test al 0x2
je r-xdata
or eax 0x2
mov [ ecx ] 0x196
mov [ rw-data ] eax
mov [ rw-data ] 0x196
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea eax [ eax + eax * 8 ]
lea eax [ eax * 4 + rw-data ]
pop ebp
retn 0x4
sub_41fa57
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
je r-xdata
dec [ esi + 0x4 ]
pop esi
retn
cmp [ esi + 0xd ] 0x0
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
mov edi [ ecx + 0x10 ]
test ecx ecx
je r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov [ esi + 0x8 ] edi
mov [ esi + 0xd ] 0x0
jmp r-xdata
push ecx
call sub_41fb26
mov ecx [ esi + 0x8 ]
mov edi [ ecx + 0x10 ]
test ecx ecx
je r-xdata
mov [ esi + 0xd ] 0x1
mov [ esi + 0x8 ] edi
mov [ esi + 0xd ] 0x0
jmp r-xdata
push ecx
call sub_41fb26
pop edi
sub_41fac4
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0xd ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov ecx [ esi ]
call sub_409e9c
push [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
call sub_409e9c
mov [ esi + 0xd ] 0x0
jmp r-xdata
push edi
push 0x18
call sub_420f36
mov edi eax
pop ecx
test edi edi
je r-xdata
inc [ esi + 0x4 ]
pop esi
pop ebp
retn 0x4
xor edi edi
jmp r-xdata
push [ ebp + 0x8 ]
and [ edi + 0x8 ] 0x0
mov ecx edi
call sub_409ac0
mov eax [ esi + 0x8 ]
mov [ edi + 0x10 ] eax
mov [ esi + 0x8 ] edi
pop edi
jmp r-xdata
sub_41fb3b
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov eax ecx
mov esi edx
push edi
push eax
mov [ ebp - 0xc ] eax
call sub_422d7c
and [ esi ] 0x0
xor ebx ebx
and [ esi + 0x4 ] 0x0
inc ebx
pop ecx
xor ecx ecx
lea edi [ eax - 0x1 ]
and [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] ecx
jle r-xdata
cmp edi 0xffffffff
jne r-xdata
push 0x30
pop edx
and [ esi ] 0x0
and [ esi + 0x4 ] 0x0
xor al al
jmp r-xdata
mov al 0x1
mov eax [ ebp - 0xc ]
movzx eax [ eax + edi * 2 ]
cmp eax 0x39
ja r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x41
jb r-xdata
cmp ax dx
jb r-xdata
cmp eax 0x61
jb r-xdata
cmp eax 0x46
ja r-xdata
sub eax edx
cmp eax 0x66
ja r-xdata
sub eax 0x37
jmp r-xdata
test edi edi
js r-xdata
sub eax 0x57
jmp r-xdata
push ecx
push ebx
cdq
push edx
push eax
call sub_436130
add [ esi ] eax
mov ecx [ ebp - 0x4 ]
adc [ esi + 0x4 ] edx
dec edi
mov eax [ ebp - 0x8 ]
shld ecx ebx 0x4
push 0x30
shl ebx 0x4
inc eax
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
pop edx
cmp eax [ ebp + 0x8 ]
jl r-xdata
sub_41fbe2
push ebp
mov ebp esp
mov eax ecx
test ecx ecx
js r-xdata
neg eax
jmp r-xdata
fld1
fld st0
fld [ ebp + 0x8 ]
shr eax 0x1
je r-xdata
fmul st1
fstp st0
test ecx ecx
js r-xdata
fld st0
fmulp st1
jmp r-xdata
fdivp st1
pop ebp
retn
fstp st1
pop ebp
retn
test al 0x1
je r-xdata
sub_41fc14
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
sub esp 0x10
fldz
fucom st1
fnstsw ax
test ah 0x44
jpo r-xdata
fstp st1
xor eax eax
fstp st0
xor edx edx
jmp r-xdata
fld [ r--data ]
fucomp st2
fnstsw ax
test ah 0x44
jpo r-xdata
mov esp ebp
pop ebp
retn
fxch st1
push ebx
fst [ ebp - 0x10 ]
push esi
push edi
fld st0
call sub_43b536
mov ebx [ ebp - 0x10 ]
mov esi eax
mov [ ebp + 0x10 ] esi
mov [ ebp + 0x14 ] edx
fild [ ebp + 0x10 ]
fst [ ebp + 0x10 ]
fxch st1
fcomp st2
fnstsw ax
fstp st1
test ah 0x5
mov eax [ ebp - 0xc ]
jpo r-xdata
fsub [ r--data ]
fstp [ ebp - 0x8 ]
mov edi [ ebp - 0x8 ]
sub edi [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
sbb ecx [ ebp + 0x14 ]
sub edi 0xa
sbb ecx 0x0
sub ebx [ ebp + 0x10 ]
sbb eax [ ebp + 0x14 ]
cmp eax ecx
jl r-xdata
fadd [ r--data ]
fstp [ ebp - 0x8 ]
mov edi [ ebp - 0x8 ]
sub edi [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
sbb ecx [ ebp + 0x14 ]
sub edi 0xa
sbb ecx 0x0
sub ebx [ ebp + 0x10 ]
sbb eax [ ebp + 0x14 ]
cmp eax ecx
jl r-xdata
pop edi
mov eax esi
pop esi
pop ebx
jg r-xdata
jg r-xdata
add esi 0xffffffff
adc edx 0xffffffff
jmp r-xdata
cmp ebx edi
jb r-xdata
add esi 0x1
adc edx 0x0
jmp r-xdata
cmp ebx edi
jae r-xdata
sub_41fcb1
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
mov ebx ecx
lea edi [ ebp - 0x28 ]
push 0x8
pop ecx
mov esi r--data
mov eax edx
[ edi ] [ esi ]
mov edx [ ebp + 0xc ]
lea ecx [ eax - 0x1 ]
mov [ ebp - 0x4 ] eax
movsw [ edi ] [ esi ]
mov esi [ ebp + 0x8 ]
test ecx ecx
js r-xdata
xor ecx ecx
or esi edx
pop edi
pop esi
mov [ ebx + eax * 2 ] cx
pop ebx
jne r-xdata
mov eax esi
and eax 0xf
shrd esi edx 0x4
shr edx 0x4
mov ax [ ebp + eax * 2 - 0x28 ]
mov [ ebx + ecx * 2 ] ax
dec ecx
jns r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41fd0f
push esi
mov esi ecx
push edi
cmp [ esi + 0x9 ] 0x0
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ ecx + 0x30 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ esi + 0x4 ] edi
mov [ esi + 0x9 ] 0x0
jmp r-xdata
push ecx
call sub_45696e
mov [ esi + 0x9 ] 0x1
jmp r-xdata
mov edi [ esi + 0x4 ]
push ebx
mov ebx [ edi + 0x30 ]
test edi edi
je r-xdata
dec [ esi ]
pop edi
pop esi
retn
mov [ esi + 0x4 ] ebx
mov [ esi + 0x9 ] 0x0
pop ebx
lea ecx [ edi + 0x20 ]
call sub_409a20
lea ecx [ edi + 0x10 ]
call sub_409a20
push edi
call j_sub_422ed5#3
pop ecx
sub_41fd66
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x9 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
call sub_47a3ae
mov [ esi + 0x9 ] 0x0
jmp r-xdata
push edi
push 0x38
call sub_420f36
mov edi eax
pop ecx
test edi edi
je r-xdata
inc [ esi ]
pop esi
pop ebp
retn 0x4
xor edi edi
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx edi
call sub_41fda4
mov eax [ esi + 0x4 ]
mov [ edi + 0x30 ] eax
mov [ esi + 0x4 ] edi
pop edi
sub_41fda4
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov eax [ esi ]
mov [ edi ] eax
lea ecx [ edi + 0x10 ]
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax [ esi + 0xc ]
mov [ edi + 0xc ] eax
lea eax [ esi + 0x10 ]
and [ ecx + 0x8 ] 0x0
push eax
call sub_409ac0
lea eax [ esi + 0x20 ]
lea ecx [ edi + 0x20 ]
and [ ecx + 0x8 ] 0x0
push eax
call sub_409ac0
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_41fe06
push esi
push edi
mov edi ecx
push edi
call sub_422d7c
xor ecx ecx
inc eax
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov esi eax
push edi
push esi
call sub_422f3c
add esp 0x10
mov eax esi
pop edi
pop esi
retn
sub_41fe36
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
cmp [ ecx ] dx
je r-xdata
mov eax ecx
pop ebp
retn
add ecx 0x2
dec eax
jne r-xdata
sub_41fe53
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
lea ebx [ ecx + 0x4 ]
push edi
mov edi [ eax ]
mov ecx ebx
call sub_41feda
mov esi eax
mov ecx esi
call sub_409a20
mov ecx ebx
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
call sub_41feda
pop edi
pop esi
pop ebx
mov [ eax + 0x10 ] 0x0
pop ebp
retn 0x8
sub_41fea1
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx + 0x4 ]
mov ecx edi
call sub_41feda
mov esi eax
lea ecx [ esi + 0x20 ]
call sub_409a20
mov edx [ ebp + 0x8 ]
mov ecx edi
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x20 ] edx
call sub_41feda
mov cl [ ebp + 0xc ]
pop edi
pop esi
mov [ eax + 0x30 ] cl
pop ebp
retn 0x8
sub_41fee8
push esi
mov esi ecx
push edi
cmp [ esi + 0x9 ] 0x0
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ ecx + 0x38 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ esi + 0x4 ] edi
mov [ esi + 0x9 ] 0x0
jmp r-xdata
push ecx
call sub_41ff5c
mov [ esi + 0x9 ] 0x1
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ ecx + 0x38 ]
test ecx ecx
je r-xdata
dec [ esi ]
pop edi
pop esi
retn
mov [ esi + 0x4 ] edi
mov [ esi + 0x9 ] 0x0
push ecx
call sub_41ff5c
sub_41ff1e
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x9 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
call sub_469b90
mov [ esi + 0x9 ] 0x0
jmp r-xdata
push edi
push 0x40
call sub_420f36
mov edi eax
pop ecx
test edi edi
je r-xdata
inc [ esi ]
pop esi
pop ebp
retn 0x4
xor edi edi
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx edi
call sub_41ff7b
mov eax [ esi + 0x4 ]
mov [ edi + 0x38 ] eax
mov [ esi + 0x4 ] edi
pop edi
sub_41ff7b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
push esi
and [ edi + 0x8 ] 0x0
call sub_409ac0
mov al [ esi + 0x10 ]
lea ecx [ edi + 0x20 ]
mov [ edi + 0x10 ] al
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov al [ esi + 0x18 ]
mov [ edi + 0x18 ] al
lea eax [ esi + 0x20 ]
and [ ecx + 0x8 ] 0x0
push eax
call sub_409ac0
mov al [ esi + 0x30 ]
mov [ edi + 0x30 ] al
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_41ffbf
xor edx edx
xor eax eax
mov [ ecx ] edx
inc eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x8 ] edx
mov [ ecx + 0x10 ] dl
mov [ ecx + 0x14 ] edx
mov [ ecx + 0x18 ] dl
mov [ ecx + 0x2c ] eax
mov eax ecx
mov [ ecx + 0x20 ] edx
mov [ ecx + 0x28 ] edx
mov [ ecx + 0x30 ] dl
retn
sub_41ffe4
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x9 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax [ eax ]
mov [ edx ] eax
mov [ esi + 0x9 ] 0x0
jmp r-xdata
push 0x8
call sub_420f36
mov edx eax
pop ecx
test edx edx
je r-xdata
inc [ esi ]
pop esi
pop ebp
retn 0x4
xor edx edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ edx ] ecx
mov eax [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
mov [ esi + 0x4 ] edx
sub_42002b
push esi
push edi
mov edi ecx
cmp [ edi + 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x4 ]
push eax
mov esi [ eax + 0x4 ]
call j_sub_422ed5#3
pop ecx
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ edi + 0x9 ] 0x1
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
mov esi [ eax + 0x4 ]
call j_sub_422ed5#3
pop ecx
mov [ edi + 0x4 ] esi
mov [ edi + 0x9 ] 0x0
dec [ edi ]
pop edi
pop esi
retn
sub_42005e
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
push esi
jmp r-xdata
retn
mov esi [ eax + 0x4 ]
push eax
call j_sub_422ed5#3
mov eax esi
pop ecx
test esi esi
jne r-xdata
pop esi
retn
sub_42006c
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ecx + 0x4 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ecx ]
call sub_4727fc
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
call sub_456aca
mov ecx [ ebp - 0x4 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
test ecx ecx
jne r-xdata
sub_420083
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor ecx ecx
mov [ ebp - 0x4 ] ecx
push esi
mov eax [ eax + 0x4 ]
mov [ eax + rw-data ] r--data
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov ecx rw-data
call sub_42015c
mov ecx rw-data
call sub_42015c
mov esi rw-data
mov ecx esi
call sub_4077c7
push r--data
mov ecx esi
call sub_407d2c
mov eax rw-data
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4200e9
push edi
mov edi ecx
lea ecx [ edi - 0x88 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
mov [ eax + edi - 0x88 ] r--data
call sub_42006c
lea ecx [ edi - 0x78 ]
call sub_420125
mov ecx [ edi - 0x84 ]
test ecx ecx
jne r-xdata
push esi
jmp r-xdata
and [ edi - 0x7c ] 0x0
pop edi
retn
mov esi [ ecx + 0x4 ]
push ecx
call sub_4717c4
mov ecx esi
test esi esi
jne r-xdata
pop esi
jmp r-xdata
sub_42017b
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x8 ]
xor edx edx
push ebx
xor ebx ebx
mov [ ebp - 0x4 ] edx
push esi
inc ebx
mov [ ebp - 0x10 ] edx
push edi
cmp [ eax + 0x4 ] edx
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ eax ] dl
mov eax [ ebp + 0x10 ]
mov [ ecx ] dl
mov ecx [ ebp + 0x14 ]
mov [ edi ] edx
mov edi edx
mov [ eax ] dl
mov [ ebp - 0xc ] 0x2b
mov [ ecx ] dl
mov [ ebp - 0x8 ] 0x23
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp ax [ ebp - 0xc ]
jne r-xdata
cmp ax cx
je r-xdata
cmp ax cx
jne r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
cmp ax dx
je r-xdata
cmp ax dx
jne r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
mov [ eax ] bl
cmp ax [ ebp - 0x8 ]
je r-xdata
push 0x23
pop ecx
cmp ax cx
jne r-xdata
mov eax [ ebp + 0x18 ]
jmp r-xdata
push edi
mov ecx esi
call sub_407b20
push 0x2b
pop ecx
push 0x5e
movzx eax [ eax ]
cmp ax cx
pop ecx
push 0x21
pop edx
je r-xdata
push edi
inc edi
mov ecx esi
mov [ ebp + 0x1c ] edi
call sub_407b20
mov esi [ ebp - 0x10 ]
mov edi [ ebp + 0xc ]
movzx eax [ eax ]
cmp eax 0x7b
jne r-xdata
inc edi
jmp r-xdata
mov eax [ ebp + 0x1c ]
push eax
call [ VkKeyScanW@IAT ]
cwde
mov [ edi ] eax
cmp eax 0xffffffff
je r-xdata
push 0x40
lea ecx [ ebp - 0x20 ]
call sub_407b76
lea eax [ ebp + 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
push 0x7d
call sub_420292
test al al
je r-xdata
test eax 0x200
je r-xdata
xor bl bl
jmp r-xdata
push [ ebp - 0x20 ]
push [ esi * 4 + r--data ]
call sub_42307d
pop ecx
pop ecx
test eax eax
je r-xdata
test eax 0x400
je r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] bl
lea ecx [ ebp - 0x20 ]
call sub_405a64
cmp esi 0x63
je r-xdata
inc esi
cmp esi 0x63
jl r-xdata
test eax 0x100
je r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ecx ] bl
push 0x0
lea ecx [ ebp - 0x20 ]
call sub_407b52
movzx eax [ eax ]
push eax
call [ VkKeyScanW@IAT ]
cwde
mov [ edi ] eax
cmp eax 0xffffffff
je r-xdata
cmp [ esi + r--data ] 0x0
jne r-xdata
and [ edi ] 0xff
mov al bl
mov eax [ ebp + 0x10 ]
mov [ eax ] bl
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_405a64
test eax 0x200
je r-xdata
movzx eax [ esi + r--data ]
mov [ edi ] eax
test eax 0x400
je r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] bl
test eax 0x100
je r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ecx ] bl
mov eax [ ebp + 0x10 ]
mov [ eax ] bl
jmp r-xdata
sub_420292
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
push ebx
push esi
call sub_407eec
mov esi [ ebp + 0x14 ]
xor bl bl
cmp [ ebp + 0x8 ] 0x0
mov al 0x1
je r-xdata
test bl bl
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
mov al bl
cmp ax [ ebp + 0x8 ]
je r-xdata
mov bl 0x1
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push eax
call sub_407a84
inc [ esi ]
jmp r-xdata
push [ esi ]
mov ecx [ ebp + 0xc ]
call sub_407b20
movzx eax [ eax ]
test ax ax
je r-xdata
sub_4202e2
push ebx
push esi
mov esi [ MapVirtualKeyW@IAT ]
xor ebx ebx
push edi
mov edi ecx
push 0x5
pop eax
push ebx
mov [ edi ] eax
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0x1
mov [ edi + 0x10 ] ebx
mov [ edi + 0x14 ] ebx
mov [ edi + 0x18 ] ebx
mov [ edi + 0x1c ] ebx
push 0x5b
mov [ edi + 0xc ] 0x4
call esi
push ebx
push 0x10
mov [ edi + 0x29 ] al
call esi
push ebx
push 0xa0
mov [ edi + 0x26 ] al
call esi
push ebx
push 0xa1
mov [ edi + 0x27 ] al
call esi
push ebx
push 0x11
mov [ edi + 0x28 ] al
call esi
push ebx
push 0x12
mov [ edi + 0x24 ] al
call esi
mov [ edi + 0x25 ] al
pop edi
pop esi
pop ebx
retn
sub_42034a
push esi
push edi
mov esi ecx
call [ timeGetTime@IAT ]
mov ecx eax
mov edi 0x7fffffff
sub eax esi
xor edx edx
cmp esi edi
ja r-xdata
cmp ecx edi
jbe r-xdata
cmp ecx edi
ja r-xdata
pop edi
pop esi
retn
jmp r-xdata
cdq
sub_420371
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx ecx
mov [ ebp - 0x10 ] ecx
push esi
xor ecx ecx
push edi
mov edi edx
inc ecx
mov [ ebp - 0xc ] edi
xor edx edx
mov [ ebp - 0x8 ] ecx
add esi 0x2
jmp r-xdata
add ecx 0x5
cmp ax cx
je r-xdata
movzx eax [ esi ]
cmp eax 0xa1
ja r-xdata
mov ecx 0x86
cmp ax cx
je r-xdata
push 0x3
jmp r-xdata
movzx eax [ eax + lookup_table_420549 ]
jmp [ eax * 4 + jump_table_4204c9 ]
add ecx 0x5
cmp ax cx
je r-xdata
pop eax
jmp r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push edx
cmp [ esi ] 0x70
mov ecx edx
je r-xdata
xor eax eax
jmp r-xdata
add esi 0x8
jmp r-xdata
push 0x77
pop edi
jmp r-xdata
add esi 0x2
jmp r-xdata
or [ edi + 0x1f ] 0x80
jmp r-xdata
add esi 0x2
jmp r-xdata
push 0x2
pop ecx
mov [ ebp - 0x8 ] ecx
jmp r-xdata
add esi 0x2
jmp r-xdata
add esi 0x2
jmp r-xdata
push 0x2
jmp r-xdata
push [ ebp + 0xc ]
mov edx edi
mov ecx esi
push [ ebp + 0x8 ]
call sub_420371
pop ecx
pop ecx
test eax eax
je r-xdata
add esi 0x4
jmp r-xdata
push [ ebp + 0xc ]
add esi 0x2
mov edx edi
push [ ebp + 0x8 ]
mov ecx esi
call sub_420371
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x77
add esi 0x2
pop edi
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push edx
jmp r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push 0x1
jmp r-xdata
movzx eax [ esi + 0x2 ]
cmp eax 0xa
jg r-xdata
movzx eax [ esi + 0x4 ]
test al 0x4
jne r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push 0x1
jmp r-xdata
or [ edi + 0x1 ] 0x2
or [ edi + 0x4 ] 0x1
or [ edi + 0x14 ] 0x1
jmp r-xdata
or [ edi + 0x1 ] 0x3c
or [ edi + 0x10 ] 0x20
push [ ebp + 0xc ]
push ecx
push 0x40
pop edx
jmp r-xdata
push [ ebp + 0xc ]
mov edx 0xa0
push ecx
push [ ebp + 0xc ]
push ecx
push 0x40
pop edx
push [ ebp + 0xc ]
xor edx edx
push ecx
mov ecx edi
call sub_48e4d2
add esp 0x8
or [ edi + 0x1 ] 0x8
jmp r-xdata
push [ ebp + 0xc ]
movzx ebx [ edi + 0x1 ]
xor edx edx
push ecx
mov ecx edi
call sub_48e4f1
mov al [ edi + 0x1 ]
add esp 0x8
and al 0xf7
or al bl
mov [ edi + 0x1 ] al
jmp r-xdata
push [ ebp + 0xc ]
mov edx 0xa0
push ecx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax [ ebx ]
lea esi [ ebx + 0x4 ]
mov ecx 0x85
mov [ ebp - 0x4 ] 0x1
cmp ax cx
je r-xdata
mov eax ecx
test [ esi + 0x4 ] 0x2
je r-xdata
lea ecx [ esi + 0x2 ]
add esi 0x22
mov eax [ ebp - 0x4 ]
jmp r-xdata
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] di
je r-xdata
mov ebx [ ebp - 0x10 ]
push 0x77
movzx eax [ ebx + 0x2 ]
lea ebx [ ebx + eax * 2 ]
pop eax
mov [ ebp - 0x10 ] ebx
cmp [ ebx ] ax
je r-xdata
cmp eax 0x3
je r-xdata
cmp eax 0x3
je r-xdata
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] di
je r-xdata
jmp r-xdata
lea edx [ esi + 0x2 ]
jmp r-xdata
mov ecx edi
call sub_4205eb
add esp 0xc
mov esi eax
jmp r-xdata
lea edx [ esi + 0x4 ]
sub eax 0xb
je r-xdata
je r-xdata
test al 0x2
jne r-xdata
lea edx [ esi + 0x2 ]
mov ecx edi
call sub_4205eb
add esp 0xc
or [ edi + 0x1f ] 0x80
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx edi
call sub_48e4d2
jmp r-xdata
add esp 0x8
jmp r-xdata
xor edx edx
mov ecx edi
call sub_48e4f1
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
jmp r-xdata
lea ecx [ esi + 0x6 ]
movzx eax [ esi ]
add eax 0xffffff9e
cmp eax 0xb
jbe r-xdata
push 0x20
mov edx edi
sub ecx edi
pop ebx
xor edx edx
test eax eax
je r-xdata
jmp r-xdata
cmp eax 0x1
je r-xdata
push 0x77
pop edi
mov edi [ ebp - 0xc ]
jmp r-xdata
mov edx 0xa0
sub eax 0x6
je r-xdata
mov edx 0xa0
sub eax 0x6
je r-xdata
test al 0x1
jne r-xdata
test ecx ecx
je r-xdata
movzx eax [ eax + lookup_table_455ea5 ]
jmp [ eax * 4 + jump_table_455e99 ]
mov eax edx
mov [ ebp - 0x4 ] eax
mov al [ ecx + edx ]
or [ edx ] al
inc edx
dec ebx
jne r-xdata
xor edx edx
jmp r-xdata
push 0x77
pop edi
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] di
je r-xdata
jmp r-xdata
or [ edi + 0x1 ] 0x3c
or [ edi + 0x10 ] 0x20
dec eax
dec eax
je r-xdata
mov ecx edi
call sub_48e4d2
jmp r-xdata
push [ ebp + 0xc ]
push ecx
push 0x40
pop edx
dec eax
je r-xdata
jmp r-xdata
cmp [ esi + 0x2 ] dx
jne r-xdata
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] di
je r-xdata
or [ edi + 0x1f ] 0x80
jmp r-xdata
or [ edi + 0x1 ] 0x2
or [ edi + 0x4 ] 0x1
or [ edi + 0x14 ] 0x1
jmp r-xdata
dec eax
dec eax
jne r-xdata
add esp 0x8
push [ ebp + 0xc ]
push ecx
push 0x40
pop edx
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx edi
call sub_48e4f1
xor edx edx
jmp r-xdata
dec eax
jne r-xdata
add esi 0x6
push [ ebp + 0xc ]
push ecx
jmp r-xdata
xor edx edx
jmp r-xdata
push [ ebp + 0xc ]
push ecx
sub_4205eb
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x8 ] ecx
push edi
mov eax 0xff
movzx edi [ esi ]
cmp edi eax
ja r-xdata
and [ ebp - 0x4 ] 0x0
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edi
inc ebx
and ecx 0x7
mov al bl
mov edx edi
shl al cl
mov ecx [ ebp - 0x8 ]
shr edx 0x3
or [ edx + ecx ] al
cmp edi 0x7f
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
movzx ecx [ esi ]
add esi 0x2
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0xc ]
test [ edi + eax ] 0x2
je r-xdata
lea eax [ esi + 0x2 ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
movzx eax [ esi ]
mov edx 0x3ff
and ecx edx
and eax edx
shl ecx 0xa
or ecx eax
add ecx 0x10000
add esi 0x2
mov eax [ ecx + 0x4 ]
movzx ecx [ eax + edi ]
mov eax ecx
and ecx 0x7
shl bl cl
mov ecx [ ebp - 0x8 ]
shr eax 0x3
or [ eax + ecx ] bl
jmp r-xdata
mov eax esi
jmp r-xdata
mov eax ecx
mov edi 0x80
cdq
idiv edi
movzx eax [ eax + r--data ]
shl eax 0x7
add eax edx
movzx eax [ eax * 2 + r--data ]
add ecx [ eax * 8 + r--data ]
lea eax [ edi + 0x7f ]
cmp ecx eax
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ecx
and ecx 0x7
shl bl cl
mov ecx [ ebp - 0x8 ]
shr eax 0x3
or [ eax + ecx ] bl
mov ecx eax
sub_42068b
push ebp
mov ebp esp
mov eax 0x10004
call sub_431ac0
push esi
lea eax [ ebp - 0x4 ]
mov esi edx
push eax
lea eax [ ebp - 0x10004 ]
push eax
push 0x7fff
push [ ecx ]
call [ GetFullPathNameW@IAT ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x10004 ]
call sub_4206dd
lea eax [ ebp - 0x10004 ]
mov ecx esi
push eax
call sub_407d2c
pop esi
mov esp ebp
pop ebp
retn
xor ecx ecx
mov [ eax ] cx
sub_4206dd
push esi
mov esi ecx
push esi
call sub_422d7c
pop ecx
test eax eax
je r-xdata
pop esi
retn
cmp [ esi + eax * 2 - 0x2 ] 0x5c
jne r-xdata
xor ecx ecx
mov [ esi + eax * 2 - 0x2 ] cx
sub_4206fc
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov edi ecx
call sub_4081a7
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov eax [ esi + 0x18 ]
mov [ edi + 0x18 ] eax
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov al [ esi + 0x20 ]
mov [ edi + 0x20 ] al
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_420756
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x8 ]
push esi
push eax
mov esi ecx
call [ QueryPerformanceFrequency@IAT ]
test eax eax
je r-xdata
fldz
jmp r-xdata
fild [ ebp - 0x8 ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fdiv [ r--data ]
fstp [ esi ]
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_420789
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor edi edi
mov ebx edx
mov edx edi
test ecx ecx
je r-xdata
push 0xfffffffe
jmp r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
pop eax
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
cmp eax 0x50435245
jne r-xdata
test [ ebx ] 0x1
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] 0x45524350
setne al
dec eax
and eax 0xffffffe7
add eax 0xfffffffc
jmp r-xdata
mov eax [ ecx + 0xc ]
test al 0x2
je r-xdata
mov edx [ ebx + 0x4 ]
push 0xffffffe4
jmp r-xdata
cmp [ ebp + 0x8 ] 0x19
ja r-xdata
push 0xfffffffd
jmp r-xdata
mov esi [ ebp + 0x8 ]
jmp [ esi * 4 + jump_table_42086d ]
movzx eax [ ecx + 0x1e ]
mov esi [ ebp + 0xc ]
mov [ esi ] r--data
jmp r-xdata
mov eax [ ecx + 0x8 ]
and eax 0x27ff7a7f
jmp r-xdata
mov eax [ ecx + 0x4 ]
jmp r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
movzx eax [ ecx + 0x20 ]
jmp r-xdata
movzx eax [ ecx + 0x24 ]
jmp r-xdata
movzx eax [ ecx + 0x26 ]
jmp r-xdata
movzx eax [ ecx + 0x22 ]
lea eax [ ecx + eax * 2 ]
jmp r-xdata
shr eax 0x9
not eax
jmp r-xdata
shr eax 0xa
jmp r-xdata
shr eax 0xb
jmp r-xdata
movzx eax [ ecx + 0x1c ]
jmp r-xdata
shr eax 0xf
jmp r-xdata
mov esi [ ebp + 0xc ]
test edx edx
je r-xdata
mov esi [ ebp + 0xc ]
test al 0x10
je r-xdata
mov esi [ ebp + 0xc ]
test al 0x10
je r-xdata
mov esi [ ebp + 0xc ]
test al 0x10
je r-xdata
mov esi [ ebp + 0xc ]
test edx edx
je r-xdata
mov esi [ ebp + 0xc ]
test edx edx
je r-xdata
mov esi [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov esi [ ebp + 0xc ]
test al 0x40
je r-xdata
mov esi [ ebp + 0xc ]
test al 0x40
je r-xdata
movzx eax al
shr eax 0x6
mov esi [ ebp + 0xc ]
test eax 0x2000
je r-xdata
mov esi [ ebp + 0xc ]
test eax 0x4000
je r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
mov [ esi ] edi
jmp r-xdata
and eax 0x1
jmp r-xdata
mov edi [ edx ]
jmp r-xdata
shr eax 0x8
or eax 0xfffffffe
jmp r-xdata
movzx eax [ ecx + 0x18 ]
jmp r-xdata
movzx edi [ ecx + 0x18 ]
jmp r-xdata
shr eax 0x7
and eax 0x2
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
test [ edx + 0x4 ] 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
test [ edx + 0x4 ] 0x2
je r-xdata
test [ ebx ] 0x40
je r-xdata
movzx eax [ ecx + 0x1a ]
jmp r-xdata
jmp r-xdata
push 0xffffffdf
mov eax [ ecx + 0x10 ]
jmp r-xdata
mov eax [ ecx + 0x14 ]
jmp r-xdata
mov [ esi ] eax
mov edi [ ebx + 0x4 ]
add edi 0x8
jmp r-xdata
mov eax [ edx + 0x28 ]
jmp r-xdata
cmp [ ebx + 0x1c ] edi
je r-xdata
movzx edi [ ecx + 0x1a ]
xor edi edi
inc edi
jmp r-xdata
sub_4208d5
push esi
mov esi ecx
push edi
xor edi edi
mov [ esi ] r--data
cmp [ esi + 0x8 ] edi
ja r-xdata
mov eax [ esi + 0x4 ]
push [ eax + edi * 4 ]
call j_sub_422ed5#3
pop ecx
mov eax [ esi + 0x4 ]
and [ eax + edi * 4 ] 0x0
inc edi
cmp edi [ esi + 0x8 ]
jae r-xdata
push [ esi + 0x4 ]
and [ esi + 0x8 ] 0x0
call j_sub_422ed5#3
pop ecx
pop edi
pop esi
retn
jmp r-xdata
sub_420911
push ebp
mov ebp esp
mov eax 0x10000
call sub_431ac0
push esi
push edi
push 0x7fff
lea eax [ ebp - 0x10000 ]
mov edi edx
push eax
push [ ecx ]
call [ GetLongPathNameW@IAT ]
mov esi eax
mov ecx edi
lea eax [ ebp - 0x10000 ]
push eax
call sub_407d2c
test esi esi
pop edi
setne al
pop esi
mov esp ebp
pop ebp
retn
sub_420951
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
je r-xdata
add eax eax
cmp eax 0x8
jae r-xdata
push 0x8
call sub_420f36
mov edi eax
pop ecx
test edi edi
je r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
cmp [ esi + 0x4 ] 0x0
mov edi eax
pop ecx
jne r-xdata
push 0x8
pop eax
xor edi edi
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
mov [ edi ] ecx
mov ecx [ edx + 0x4 ]
mov [ edi + 0x4 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] edi
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edi
inc [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_420fc0
push [ esi + 0x4 ]
call j_sub_422ed5#3
add esp 0x10
jmp r-xdata
sub_4209c4
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
and [ esi + 0x8 ] 0x0
pop edi
pop esi
retn
mov eax [ esi + 0x4 ]
push [ eax + edi * 4 ]
call j_sub_422ed5#3
mov eax [ esi + 0x4 ]
pop ecx
and [ eax + edi * 4 ] 0x0
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_420a08
push esi
mov esi ecx
push edi
mov edi [ esi ]
test edi edi
je r-xdata
push esi
call j_sub_422ed5#3
pop ecx
pop edi
mov eax esi
pop esi
retn 0x4
mov ecx edi
call sub_405a64
push edi
call j_sub_422ed5#3
pop ecx
sub_420a2e
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
xor edi edi
push 0x1c
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov [ esi ] edi
mov eax esi
pop edi
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
mov ecx eax
call sub_420a5f
mov edi eax
sub_420a5f
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ ecx + 0xc ] eax
inc [ eax ]
mov al [ edx + 0x10 ]
mov [ ecx + 0x10 ] al
mov al [ edx + 0x11 ]
mov [ ecx + 0x11 ] al
mov eax [ edx + 0x14 ]
mov [ ecx + 0x14 ] eax
mov eax [ edx + 0x18 ]
mov [ ecx + 0x18 ] eax
mov eax ecx
pop ebp
retn 0x4
sub_420a9b
push esi
mov esi ecx
push edi
xor edi edi
mov [ esi ] r--data
cmp [ esi + 0x8 ] edi
ja r-xdata
mov eax [ esi + 0x4 ]
push [ eax + edi * 4 ]
call j_sub_422ed5#3
pop ecx
mov eax [ esi + 0x4 ]
and [ eax + edi * 4 ] 0x0
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push [ esi + 0x4 ]
and [ esi + 0x8 ] 0x0
call j_sub_422ed5#3
pop ecx
pop edi
pop esi
retn
jmp r-xdata
sub_420ac0
push esi
xor esi esi
push esi
push ecx
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
test esi esi
jle r-xdata
mov eax esi
pop esi
retn
movzx esi si
or esi 0x80070000
jmp r-xdata
sub_420ad7
push ebp
mov ebp esp
mov eax 0x10000
call sub_431ac0
push esi
lea eax [ ebp - 0x10000 ]
mov esi ecx
push eax
push 0x7fff
call [ GetCurrentDirectoryW@IAT ]
lea eax [ ebp - 0x10000 ]
mov ecx esi
push eax
call sub_407d2c
pop esi
mov esp ebp
pop ebp
retn
sub_420b0c
push ebp
mov ebp esp
sub esp 0x18
mov al [ rw-data ]
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] al
push 0x8000
push esi
mov edi edx
call sub_424856
pop ecx
push eax
call sub_424684
cmp [ edi + 0xc ] 0xb
mov ebx eax
pop ecx
pop ecx
je r-xdata
push esi
mov ecx edi
call sub_468801
push eax
push 0x1
call sub_4687be
push eax
call sub_4249d3
add esp 0x10
mov edi eax
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405c18
mov ecx edi
call sub_409997
lea eax [ ebp - 0x18 ]
push eax
push [ edi + 0x8 ]
call sub_405b75
push [ ebp - 0x18 ]
push r--data
push esi
call sub_424a55
add esp 0xc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push esi
call sub_424c1a
pop ecx
cmp ebx 0xffffffff
je r-xdata
mov ecx edi
call sub_409997
mov eax [ edi + 0x8 ]
push [ eax ]
call [ OutputDebugStringW@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405a64
mov edi [ ebp - 0x8 ]
push 0x4000
jmp r-xdata
push ebx
push esi
call sub_424856
pop ecx
push eax
call sub_424684
pop ecx
pop ecx
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420bb1
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] 0x1
xor eax eax
mov esi edx
mov [ ebp - 0x1 ] al
test edi edi
je r-xdata
xor al al
jmp r-xdata
mov eax [ esi ]
movzx eax [ edi + eax * 2 ]
push eax
call sub_4237bd
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
inc [ esi ]
jmp r-xdata
mov ecx [ esi ]
xor edx edx
push ebx
mov ebx [ ebp + 0x8 ]
movzx eax [ edi + ecx * 2 ]
mov [ ebx ] edx
sub eax 0x2b
je r-xdata
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
jmp r-xdata
dec eax
dec eax
je r-xdata
mov eax [ esi ]
cmp [ edi + eax * 2 ] dx
je r-xdata
or [ ebp - 0x8 ] 0xffffffff
mov ecx [ ebx ]
imul ecx [ ebp - 0x8 ]
mov al [ ebp - 0x1 ]
mov [ ebx ] ecx
pop ebx
mov eax [ esi ]
movzx eax [ edi + eax * 2 ]
push eax
call sub_423ddf
pop ecx
test eax eax
je r-xdata
imul eax [ ebx ] 0xa
mov edx [ esi ]
mov [ ebp - 0x1 ] 0x1
movzx ecx [ edi + edx * 2 ]
add eax 0xffffffd0
add eax ecx
lea ecx [ edx + 0x1 ]
mov [ ebx ] eax
xor eax eax
mov [ esi ] ecx
cmp [ edi + ecx * 2 ] ax
jne r-xdata
sub_420c53
mov eax [ rw-data ]
test eax eax
jne r-xdata
push esi
jmp r-xdata
retn
mov esi [ eax + 0x4 ]
push eax
call j_sub_422ed5#3
mov eax esi
pop ecx
test esi esi
jne r-xdata
pop esi
retn
sub_420c63
push ebx
push esi
mov ebx ecx
mov esi edx
push edi
push esi
mov edi [ ebx + 0x4 ]
call sub_422d7c
pop ecx
cmp edi eax
je r-xdata
mov ecx [ ebx ]
test edi edi
je r-xdata
xor al al
mov al 0x1
jmp r-xdata
mov ax [ ecx ]
cmp ax [ esi ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
add ecx 0x2
add esi 0x2
dec edi
jne r-xdata
sub_420c82
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x38 ]
call sub_405a64
lea ecx [ esi + 0x18 ]
call sub_405a64
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0xb
jg r-xdata
push ecx
call sub_407b3d
and [ esi + 0x10 ] 0x0
cmp eax 0xc
je r-xdata
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
jle r-xdata
mov eax [ esi + 0x8 ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
push [ esi + 0x8 ]
call j_sub_422ed5#3
pop ecx
sub eax 0x5
je r-xdata
and [ esi + 0x8 ] 0x0
push esi
mov [ esi + 0x14 ] 0x1
call j_sub_422ed5#3
pop ecx
pop edi
mov eax esi
pop esi
retn 0x4
push ecx
call sub_4571d0
jmp r-xdata
cmp eax 0xe
jle r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
sub eax 0x3
je r-xdata
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
cmp eax 0xf
jne r-xdata
push ecx
call sub_408e34
cmp [ esi + 0x8 ] 0x0
je r-xdata
dec eax
dec eax
je r-xdata
jmp r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
push [ esi + 0x8 ]
call [ VariantClear@IAT ]
push [ esi + 0x8 ]
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
jmp r-xdata
mov ecx edi
push ecx
call sub_4571e5
jmp r-xdata
pop ecx
jmp r-xdata
lea ecx [ edi + 0x8 ]
jmp r-xdata
call j_sub_422ed5#3
jmp r-xdata
call sub_405a64
push edi
jmp r-xdata
sub_420d60
mov [ ecx ] r--data
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
retn
push esi
mov esi [ ecx + 0x38 ]
push ecx
call sub_41ff5c
mov ecx esi
test esi esi
jne r-xdata
pop esi
sub_420d88
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0xc ] ebx
pushad
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0xc ]
cmp ecx 0x0
je r-xdata
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ edx + 0x4 ]
cmp eax 0x1
je r-xdata
mov eax ecx
dec eax
imul eax eax 0x18
add eax 0x30
add edx eax
add ecx esp
mov [ ebp - 0x4 ] ecx
mov eax [ edx + 0x24 ]
cmp eax 0x1
je r-xdata
mov ecx [ edx + 0x8 ]
lea eax [ edx ]
push eax
mov eax [ edx + 0x10 ]
cmp eax 0x4
je r-xdata
mov edx [ edx ]
call edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x18 ] eax
mov eax [ edx + 0x20 ]
cmp eax 0xa
je r-xdata
sub edx 0x18
jmp r-xdata
mov eax [ edx ]
push eax
jmp r-xdata
mov eax [ edx + 0x4 ]
push eax
mov eax [ edx ]
push eax
jmp r-xdata
mov ecx [ edx + 0xc ]
cmp ecx 0x0
je r-xdata
mov eax 0x0
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ edx ]
call edx
mov edx [ ebp + 0x8 ]
fstp [ edx + 0x18 ]
jmp r-xdata
cmp eax 0x9
jne r-xdata
mov eax [ edx + 0xc ]
cmp eax 0x1
je r-xdata
dec ecx
je r-xdata
popad
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
mov eax [ edx + 0x4 ]
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x4 ] esp
je r-xdata
mov eax [ edx + 0x28 ]
cmp eax 0x4
je r-xdata
mov edx [ edx ]
call edx
mov edx [ ebp + 0x8 ]
fstp [ edx + 0x18 ]
jmp r-xdata
add esp [ edx + 0x8 ]
mov edx [ edx ]
call edx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x18 ] eax
mov edx [ ebp + 0x8 ]
jmp r-xdata
sub_420e6e
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ebx
mov edx 0xbc614e
mov [ ebp - 0x4 ] edx
mov edx 0xbc614e
mov [ ebp - 0x8 ] edx
mov ecx [ edx + 0xc ]
cmp ecx 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov eax 0xbc614e
call eax
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x20 ]
cmp eax 0xa
je r-xdata
add edx 0x30
lea ebx [ ebp + 0x8 ]
fld [ esp ]
cmp eax 0x9
jne r-xdata
mov eax [ ebx ]
mov [ edx ] eax
mov eax [ ebx ]
mov [ edx ] eax
add ebx 0x4
mov eax [ ebx ]
mov [ edx + 0x4 ] eax
jmp r-xdata
pop eax
pop edx
mov ebx [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x4
add ebx 0x4
add edx 0x18
jmp r-xdata
dec ecx
je r-xdata
mov eax [ edx + 0x10 ]
cmp eax 0x4
je r-xdata
sub_420f36
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_42588c
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_423521
pop ecx
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
push 0x1
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] r--data
push eax
lea ecx [ ebp - 0x10 ]
call sub_428613
push r--data
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x10 ] r--data
push eax
call sub_42871b
int3
sub_420f87
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_428651
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422ed5#3
pop ecx
sub_420fc0
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_421494 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_421398 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_421494 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_42120c ]
jmp [ ecx * 4 + jump_table_42128c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4212f8 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_421494 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4212f8 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_421494 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_421494 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_421494 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4212f8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4212f8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4212f8 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_4212f8 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_421604
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
mov eax ebx
push esi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
jmp r-xdata
dec eax
je r-xdata
sub ecx eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
dec eax
je r-xdata
mov eax ecx
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
mov edx [ ebp + 0xc ]
dec eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
sub ecx eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax [ edx ]
movzx esi [ ecx ]
sub esi eax
je r-xdata
mov esi [ ebp + 0x8 ]
push edi
cmp ebx 0x20
jb r-xdata
movzx ecx [ edx + 0x2 ]
movzx eax [ esi + 0x2 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
add esi ebx
add edx ebx
cmp ebx 0x1f
ja r-xdata
mov eax [ esi ]
cmp eax [ edx ]
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
jmp [ ebx * 4 + jump_table_422cfc ]
xor ecx ecx
movzx edi al
movzx eax [ edx ]
sub edi eax
je r-xdata
movzx ecx [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ esi - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ esi - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ esi - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ esi - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ esi - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ esi - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ esi - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ esi - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ esi - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ esi - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ esi - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ esi - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ esi - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ esi - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ edx - 0x1 ]
movzx ecx [ esi - 0x1 ]
sub ecx eax
je r-xdata
mov eax [ esi - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ esi - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ esi - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ esi - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ esi - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ esi - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ esi - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ esi - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ esi - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ esi - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ esi - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ esi - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ esi - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ esi - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ esi - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
mov eax ecx
pop edi
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx edi [ esi + 0x1 ]
movzx eax [ edx + 0x1 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xc ]
movzx edi [ esi - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0x9 ]
movzx edi [ esi - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xa ]
movzx edi [ esi - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
jmp r-xdata
xor ecx ecx
movzx eax [ edx - 0x1f ]
movzx edi [ esi - 0x1f ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xf ]
movzx edi [ esi - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
movzx eax [ edx - 0x2 ]
movzx edi [ esi - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x4 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x2 ]
movzx eax [ edx + 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx eax [ edx - 0x9 ]
movzx edi [ esi - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1e ]
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx edi [ esi + 0x5 ]
movzx eax [ edx + 0x5 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x3 ]
movzx eax [ edx + 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx eax [ edx - 0x8 ]
movzx edi [ esi - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x8 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x6 ]
movzx eax [ edx + 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1 ]
movzx eax [ edx - 0x1 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx eax [ edx - 0x7 ]
movzx ecx [ esi - 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx edi [ esi + 0x9 ]
movzx eax [ edx + 0x9 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x7 ]
movzx eax [ edx + 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0xc ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xa ]
movzx eax [ edx + 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx edi [ esi + 0xd ]
movzx eax [ edx + 0xd ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xb ]
movzx eax [ edx + 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx eax [ edx + 0x10 ]
movzx edi [ esi + 0x10 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xe ]
movzx eax [ edx + 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx edi [ esi + 0x11 ]
movzx eax [ edx + 0x11 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xf ]
movzx eax [ edx + 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x14 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x12 ]
movzx eax [ edx + 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx edi [ esi + 0x15 ]
movzx eax [ edx + 0x15 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x13 ]
movzx eax [ edx + 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x18 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x16 ]
movzx eax [ edx + 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx edi [ esi + 0x19 ]
movzx eax [ edx + 0x19 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x17 ]
movzx eax [ edx + 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x1c ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x1a ]
movzx eax [ edx + 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
push 0x20
pop ecx
sub ebx ecx
add esi ecx
add edx ecx
cmp ebx ecx
jae r-xdata
movzx edi [ esi + 0x1d ]
movzx eax [ edx + 0x1d ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x1b ]
movzx eax [ edx + 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi + 0x1e ]
movzx eax [ edx + 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi + 0x1f ]
movzx eax [ edx + 0x1f ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
sub_422d95
push esi
push 0x4
push 0x20
call sub_428955
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_422dc4
push 0xc
push r--data
call sub_428a80
and [ ebp - 0x1c ] 0x0
call sub_423397
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_422e08
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_422e02
mov eax esi
call sub_428ac5
retn
sub_422e08
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov [ ebp - 0x4 ] eax
call esi
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp ebx eax
jb r-xdata
xor eax eax
mov edi ebx
sub edi eax
lea ecx [ edi + 0x4 ]
cmp ecx 0x4
jb r-xdata
push eax
call sub_428924
mov esi eax
lea eax [ edi + 0x4 ]
pop ecx
cmp esi eax
jae r-xdata
push [ ebp + 0x8 ]
call [ EncodePointer@IAT ]
lea ecx [ ebx + 0x4 ]
mov [ ebx ] eax
push ecx
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp esi eax
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0x4 ]
add eax esi
cmp eax esi
jb r-xdata
mov eax esi
lea eax [ esi + 0x10 ]
cmp eax esi
jb r-xdata
push eax
push ebx
call sub_4289e4
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push ebx
call sub_4289e4
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea ebx [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_422ed5
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_428ca8
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_428cbb
pop ecx
mov [ esi ] eax
pop esi
sub_422f0d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov edx eax
cmp [ eax ] cx
je r-xdata
push esi
mov esi [ ebp + 0xc ]
sub edx esi
add edx 0x2
cmp [ edx ] cx
jne r-xdata
movzx ecx [ esi ]
mov [ edx + esi ] cx
lea esi [ esi + 0x2 ]
test cx cx
jne r-xdata
pop esi
pop ebp
retn
sub_422f3c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push esi
mov esi eax
sub esi edx
movzx ecx [ edx ]
mov [ esi + edx ] cx
lea edx [ edx + 0x2 ]
test cx cx
jne r-xdata
pop esi
pop ebp
retn
sub_422f60
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
movzx eax [ esp + 0x8 ]
bt [ rw-data ] 0x1
jae r-xdata
mov edx [ esp + 0xc ]
cmp edx 0x80
jl r-xdata
mov ecx [ esp + 0xc ]
push edi
mov edi [ esp + 0x8 ]
[ edi ]
jmp r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
test eax eax
jne r-xdata
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
movd xmm0 eax
punpcklbw xmm0 xmm0
punpcklwd xmm0 xmm0
pshufd xmm0 xmm0 0x0
pxor xmm0 xmm0
jmp r-xdata
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
neg ebx
add ebx 0x10
sub edx ebx
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov ebx edx
and edx 0x7f
shr ebx 0x7
je r-xdata
push ebx
push ecx
mov ebx ecx
and ebx 0xf
test ebx ebx
jne r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec ebx
jne r-xdata
pop edx
jmp r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop eax
pop ebx
retn
mov ebx edx
shr ebx 0x4
je r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov ebx edx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec ebx
jne r-xdata
and ebx 0x3
je r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] al
inc ecx
dec ebx
jne r-xdata
sub_422ff5
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x0
test ecx ecx
jne r-xdata
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
push edi
call sub_429b2c
mov edi eax
mov [ esi + 0x8 ] edi
mov edx [ edi + 0x6c ]
mov [ esi ] edx
mov ecx [ edi + 0x68 ]
mov [ esi + 0x4 ] ecx
cmp edx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
pop edi
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx + 0x70 ]
test al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x70 ] eax
jne r-xdata
call sub_429200
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or eax 0x2
mov [ ecx + 0x70 ] eax
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_429582
mov [ esi + 0x4 ] eax
sub_42307d
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_423110
add esp 0xc
pop ebp
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
mov eax 0x7fffffff
pop ebp
retn
push ebx
push esi
push edi
push 0x41
pop edi
push 0x5a
sub edx ecx
pop ebx
mov esi eax
cmp ax bx
ja r-xdata
add ecx 0x2
test si si
je r-xdata
cmp ax bx
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
pop edi
movzx eax si
pop esi
sub eax ecx
pop ebx
pop ebp
retn
cmp si ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax di
jb r-xdata
movzx eax [ edx + ecx ]
cmp ax di
jb r-xdata
sub_423110
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push [ ebp + 0x10 ]
call sub_422ff5
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
mov edx 0x7fffffff
jmp r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
pop ebx
je r-xdata
mov eax [ ebp - 0x10 ]
push edi
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_424d57
lea ecx [ ebp - 0x10 ]
movzx edi ax
movzx eax [ esi ]
lea ebx [ ebx + 0x2 ]
push ecx
push eax
call sub_424d57
add esp 0x10
movzx eax ax
lea esi [ esi + 0x2 ]
test di di
je r-xdata
push 0x41
pop ecx
push 0x5a
sub ebx esi
pop edx
movzx edx di
movzx eax ax
sub edx eax
pop edi
cmp di ax
je r-xdata
mov edi eax
cmp ax dx
ja r-xdata
add esi 0x2
test di di
je r-xdata
cmp ax dx
ja r-xdata
add eax 0x20
movzx edi ax
jmp r-xdata
cmp di ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ esi ]
cmp ax cx
jb r-xdata
movzx eax [ ebx + esi ]
cmp ax cx
jb r-xdata
jmp r-xdata
sub_4231eb
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x0
call [ GetModuleHandleExW@IAT ]
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
push r--data
push [ ebp - 0x4 ]
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_42326f
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_42a651
push r--data
push r--data
call sub_423375
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_42a560
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_429d6b
call sub_422ec0
mov [ esp ] r--data
push r--data
call sub_42333f
cmp [ rw-data ] 0x0
pop ecx
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
xor eax eax
push rw-data
call sub_42a560
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_423307
push esi
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
push esi
call sub_423547
push esi
call sub_428efe
push esi
call sub_428606
push esi
call sub_42a6c2
push esi
call sub_42a6a4
push esi
call sub_42a8d3
add esp 0x18
pop esi
jmp sub_42a019
sub_42333f
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
sub eax esi
add eax 0x3
shr eax 0x2
cmp [ ebp + 0xc ] esi
push edi
sbb edi edi
not edi
and edi eax
jbe r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
inc ebx
cmp ebx edi
jb r-xdata
call eax
sub_423375
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_4233a9
push 0x1c
push r--data
call sub_428a80
push 0x8
call sub_429d8b
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x1
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4234c3
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] 0x1
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_428ac5
retn
mov [ rw-data ] 0x1
push 0x8
call sub_429ef5
pop ecx
push [ ebp + 0x8 ]
call sub_42321f
push r--data
push r--data
call sub_42333f
pop ecx
pop ecx
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
je r-xdata
push r--data
push r--data
call sub_42333f
pop ecx
pop ecx
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] edi
push 0x0
call [ EncodePointer@IAT ]
cmp [ edi ] eax
je r-xdata
sub edi 0x4
mov [ ebp - 0x24 ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
push [ edi ]
call esi
mov esi eax
push 0x0
call [ EncodePointer@IAT ]
mov [ edi ] eax
call esi
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov [ ebp - 0x28 ] eax
push [ rw-data ]
call esi
mov ecx [ ebp - 0x28 ]
cmp [ ebp - 0x1c ] ecx
jne r-xdata
mov [ ebp - 0x1c ] ecx
mov ebx ecx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x20 ] eax
mov edi eax
jmp r-xdata
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x24 ] edi
sub_4234ec
push ebp
mov ebp esp
push esi
push 0x4
call sub_429d8b
pop ecx
push [ rw-data ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
push 0x4
mov [ rw-data ] eax
call sub_429ef5
pop ecx
mov eax esi
pop esi
pop ebp
retn
sub_423521
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_423554
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x1
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
or eax 0xffffffff
pop ebp
retn
sub_423585
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x10 ] 0x0
push esi
mov [ ebp - 0x4 ] edx
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push edi
je r-xdata
mov edi [ ebp - 0x4 ]
mov [ ebp + 0xc ] esi
push ebx
push 0x2d
pop eax
mov [ esi ] ax
add esi 0x2
neg ecx
adc edx 0x0
neg edx
add eax 0x30
add eax 0x57
jmp r-xdata
push 0x0
push edi
push edx
push ecx
call sub_42a9c0
mov [ ebp + 0x10 ] ecx
mov ecx eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ebx
cmp eax 0x9
jbe r-xdata
jb r-xdata
mov [ esi ] ax
add esi 0x2
test edx edx
ja r-xdata
mov edi [ ebp + 0xc ]
xor eax eax
mov [ esi ] ax
sub esi 0x2
pop ebx
test ecx ecx
jne r-xdata
mov ax [ edi ]
movzx ecx [ esi ]
mov [ esi ] ax
sub esi 0x2
mov [ edi ] cx
add edi 0x2
cmp edi esi
jb r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_423610
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
xor eax eax
cmp edx 0xa
jne r-xdata
mov ecx [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_423585
mov eax [ ebp + 0x10 ]
pop ebp
retn
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] eax
jae r-xdata
sub_423640
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xa
mov eax [ ebp + 0x8 ]
push esi
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
mov esi [ ebp + 0xc ]
push esi
push eax
call sub_42366b
mov eax esi
pop esi
pop ebp
retn
sub_42366b
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
je r-xdata
push 0x2
mov edi esi
pop ebx
push 0x2d
pop eax
mov [ esi ] ax
add esi 0x2
neg ecx
mov [ esi ] ax
add esi ebx
test ecx ecx
jne r-xdata
lea eax [ edx + 0x30 ]
mov eax ecx
xor edx edx
div [ ebp + 0x10 ]
mov ecx eax
lea eax [ edx + 0x57 ]
cmp edx 0x9
ja r-xdata
xor eax eax
mov [ esi ] ax
sub esi ebx
mov ax [ edi ]
movzx ecx [ esi ]
mov [ esi ] ax
sub esi ebx
mov [ edi ] cx
add edi ebx
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4236cc
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx edi [ edx ]
movzx ecx [ esi ]
sub ecx edi
jne r-xdata
pop edi
pop esi
test ecx ecx
jns r-xdata
sub esi edx
jle r-xdata
or ecx 0xffffffff
jmp r-xdata
add edx 0x2
movzx edi [ edx ]
movzx ecx [ esi + edx ]
sub ecx edi
je r-xdata
mov eax ecx
pop ebp
retn
xor ecx ecx
inc ecx
test di di
je r-xdata
sub_42373b
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_422ff5
mov eax [ ebp + 0x8 ]
movzx ecx al
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4237e2
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
pop ebp
retn
movzx eax [ edx ]
movzx ecx [ ecx ]
sub eax ecx
pop esi
pop ebp
retn
movzx esi [ edx ]
test si si
je r-xdata
cmp si [ ecx ]
jne r-xdata
add edx 0x2
add ecx 0x2
jmp r-xdata
dec eax
je r-xdata
sub_423818
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
lea edi [ ebp - 0x1c ]
push 0x7
xor eax eax
mov [ ebp - 0x20 ] ebx
pop ecx
[ edi ]
cmp [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] 0x42
push eax
mov [ ebp - 0x1c ] 0x7fffffff
call sub_42b0ed
add esp 0x10
mov esi eax
dec [ ebp - 0x1c ]
js r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_42af9e
pop ecx
pop ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ebp - 0x20 ]
mov [ ecx ] bl
mov ecx [ ebp - 0x20 ]
inc ecx
mov [ ebp - 0x20 ] ecx
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_42af9e
pop ecx
pop ecx
mov [ ecx ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax esi
pop esi
sub_4238c0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_42394b
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push edi
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_423a01
add esp 0x10
mov edi [ ebp + 0x10 ]
xor eax eax
test edi edi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
mov eax 0x7fffffff
jmp r-xdata
push ebx
push esi
push 0x41
pop ebx
push 0x5a
pop esi
sub edx ecx
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax [ edx + ecx ]
cmp ax bx
jb r-xdata
mov esi eax
cmp ax si
ja r-xdata
add ecx 0x2
dec edi
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
movzx eax si
pop esi
sub eax ecx
pop ebx
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
sub_423a01
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
xor esi esi
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
mov eax esi
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_422ff5
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xa8 ] esi
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x14 ]
push eax
movzx eax [ ebx ]
push eax
call sub_424d57
movzx esi ax
lea eax [ ebp - 0x14 ]
push eax
movzx eax [ edi ]
push eax
call sub_424d57
add esp 0x10
movzx eax ax
dec [ ebp + 0x10 ]
lea ebx [ ebx + 0x2 ]
lea edi [ edi + 0x2 ]
je r-xdata
mov ecx [ ebp + 0x10 ]
sub ebx edi
push 0x41
pop edx
push 0x5a
pop esi
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax ax
movzx esi si
sub esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test si si
je r-xdata
movzx eax [ ebx + edi ]
cmp ax dx
jb r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
mov esi eax
cmp ax si
ja r-xdata
add edi 0x2
dec ecx
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ edi ]
cmp ax dx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
jmp r-xdata
sub_423afa
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x28
push esi
push edi
mov edi [ ebx + 0xc ]
xor eax eax
movzx ecx [ edi ]
mov [ ebp - 0x8 ] ecx
cmp ax cx
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
jne r-xdata
mov eax edi
and eax 0xfff
push 0x2
pop esi
cmp eax 0xff0
ja r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
mov edx [ ebx + 0x8 ]
movzx eax [ edx ]
test ax ax
je r-xdata
movzx eax cx
pxor xmm3 xmm3
mov ecx [ ebx + 0x8 ]
push 0x2
pop esi
movd xmm0 eax
pshuflw xmm0 xmm0 0x0
pshufd xmm4 xmm0 0x0
push 0x8
pxor xmm0 xmm0
movzx ecx cx
pop edx
movdqu xmm0 [ edi ]
jmp r-xdata
xor eax eax
and [ ebp - 0x8 ] 0x0
mov ecx eax
mov eax edx
sub eax edi
mov [ ebp - 0x4 ] eax
push 0x2
pop esi
test cx cx
je r-xdata
movzx eax [ ecx ]
xor edx edx
cmp dx ax
je r-xdata
movdqu xmm1 [ ecx ]
movdqa xmm0 xmm3
pcmpeqw xmm0 xmm1
pcmpeqw xmm1 xmm4
por xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
dec edx
jne r-xdata
add edi esi
movzx ecx [ edi ]
mov edx [ ebx + 0x8 ]
mov ecx [ ebp - 0x8 ]
movzx ecx [ edi ]
test cx cx
je r-xdata
movzx edx [ edi ]
cmp dx ax
jne r-xdata
bsf eax eax
mov [ ebp - 0x8 ] eax
shr eax 0x1
lea ecx [ ecx + eax * 2 ]
add ecx 0x10
jmp r-xdata
movzx eax cx
psrldq xmm0 0x2
pinsrw xmm0 eax 0x7
xor eax eax
cmp ax cx
je r-xdata
mov ecx [ ebp - 0x8 ]
movzx eax [ edx ]
xor edi edi
cmp di ax
je r-xdata
movdqu xmm1 [ edx ]
pcmpistri xmm0 xmm1 0xd
jbe r-xdata
mov eax edx
jmp r-xdata
mov edi [ ebx + 0xc ]
add edx esi
add eax esi
mov [ ebp - 0x4 ] eax
movzx ecx [ edx ]
test cx cx
jne r-xdata
movzx ecx [ eax + edi ]
movzx eax [ edi ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
jne r-xdata
add ecx esi
jmp r-xdata
mov edx ecx
mov eax ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
cmp ax cx
je r-xdata
jae r-xdata
add edx 0x10
cmp [ edi ] cx
je r-xdata
add edi esi
cmp [ eax + edi ] cx
jne r-xdata
movzx eax [ edi ]
and [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x8 ] ax
je r-xdata
mov eax edx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
mov ecx [ ebx + 0xc ]
mov edi edx
add edx esi
jmp r-xdata
pcmpistri xmm0 xmm1 0xd
lea edx [ edx + ecx * 2 ]
mov eax edx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
jmp r-xdata
mov eax ecx
jmp r-xdata
cmp [ edx ] ax
jne r-xdata
movdqu xmm2 [ edi ]
movdqu xmm1 [ edx ]
movdqa xmm0 xmm3
pcmpeqw xmm1 xmm2
pcmpeqw xmm0 xmm2
pcmpeqw xmm1 xmm3
por xmm1 xmm0
pmovmskb eax xmm1
test eax eax
jne r-xdata
movzx eax [ ecx ]
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x4 ] ax
je r-xdata
mov eax ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
mov edi [ ebx + 0xc ]
add edx esi
add edi esi
jmp r-xdata
bsf eax eax
mov [ ebp - 0x8 ] eax
and eax 0xfffffffe
add edx eax
add edi eax
add edx 0x10
add edi 0x10
jmp r-xdata
cmp [ edi ] ax
jne r-xdata
movdqu xmm1 [ edi ]
movdqu xmm2 [ ecx ]
pcmpistri xmm2 xmm1 0xd
jno r-xdata
mov eax edi
and eax 0xfff
cmp eax 0xff0
ja r-xdata
add edx esi
jmp r-xdata
add edi esi
add ecx esi
jmp r-xdata
js r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov eax edi
mov [ ebp - 0x4 ] ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
mov ecx [ ebp - 0x4 ]
add edi 0x10
add ecx 0x10
jmp r-xdata
sub_423d8d
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_422ff5
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
mov ecx [ ecx + 0x90 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ ecx + eax * 2 ]
and ecx 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_42bdcc
add esp 0xc
mov ecx eax
jmp r-xdata
mov eax ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_423ddf
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_423d8d
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
pop ebp
retn
sub_423e0a
push 0xc
push r--data
call sub_428a80
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
call sub_426d88
add eax 0x20
push eax
push 0x1
call sub_426dcd
pop ecx
pop ecx
mov [ ebp - 0x4 ] edi
call sub_426d88
add eax 0x20
push eax
call sub_42a911
pop ecx
mov esi eax
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp + 0x8 ]
call sub_426d88
add eax 0x20
push eax
call sub_42b0ed
mov edi eax
mov [ ebp - 0x1c ] edi
call sub_426d88
add eax 0x20
push eax
push esi
call sub_42a8e0
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423ea6
mov eax edi
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
or eax 0xffffffff
jmp r-xdata
call sub_428ac5
retn
sub_423eca
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
call sub_422ff5
test esi esi
jne r-xdata
movzx eax [ esi ]
push 0x8
push eax
call sub_42af48
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
fldz
jmp r-xdata
add esi 0x2
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_42be7d
add esp 0xc
fld [ eax + 0x10 ]
cmp [ ebp - 0x20 ] 0x0
pop esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_42c776
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x24 ]
and [ eax + 0x70 ] 0xfffffffd
sub_423f5d
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
lea edi [ ebp - 0x1c ]
push 0x7
xor eax eax
mov [ ebp - 0x20 ] ebx
pop ecx
[ edi ]
cmp [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
or eax 0xffffffff
jmp r-xdata
push esi
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
push [ ebp + 0x10 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] 0x42
push eax
mov [ ebp - 0x1c ] 0x7fffffff
call sub_42b0ed
add esp 0x10
mov esi eax
dec [ ebp - 0x1c ]
js r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_42af9e
pop ecx
pop ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ebp - 0x20 ]
mov [ ecx ] bl
mov ecx [ ebp - 0x20 ]
inc ecx
mov [ ebp - 0x20 ] ecx
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_42af9e
pop ecx
pop ecx
mov [ ecx ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax esi
pop esi
sub_424001
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push edi
xor edi edi
test ebx ebx
jne r-xdata
push esi
push 0x3bc
push 0x1
call sub_428955
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
xor eax eax
jmp r-xdata
push esi
call sub_422ed5
pop ecx
test edi edi
je r-xdata
call sub_429b2c
push [ eax + 0x6c ]
push esi
call sub_429bb3
mov eax [ ebp + 0x14 ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x58 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x54 ] ebx
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
xor eax eax
push edi
call sub_428c87
pop ecx
push eax
push [ ebp + 0x18 ]
push esi
push sub_424161
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateThread@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp + 0x10 ]
pop esi
call [ GetLastError@IAT ]
mov edi eax
sub_4240db
push ebp
mov ebp esp
push esi
call sub_429b44
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call [ ExitThread@IAT ]
cmp [ esi + 0x3b4 ] 0x0
je r-xdata
push esi
call sub_429af6
pop ecx
call sub_4241de
sub_424109
cmp [ rw-data ] 0x0
jne r-xdata
push 0x1
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
neg eax
sbb eax eax
inc eax
retn
push r--data
push 0x800
push 0x0
push r--data
call [ LoadLibraryExW@IAT ]
push eax
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
push eax
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] 0x1
retn
sub_424161
push ebp
mov ebp esp
push esi
call sub_4299bb
push eax
call sub_429f47
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov eax [ ecx + 0x54 ]
mov [ esi + 0x54 ] eax
mov eax [ ecx + 0x58 ]
mov [ esi + 0x58 ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_4299c1
mov esi [ ebp + 0x8 ]
push esi
call sub_4299bb
push eax
call sub_429f66
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_42409a
call sub_424109
mov [ esi + 0x3b4 ] eax
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call [ ExitThread@IAT ]
call sub_429fd9
mov [ esi + 0x3b4 ] eax
test eax eax
je r-xdata
sub_4241de
cmp [ rw-data ] 0x0
jne r-xdata
push [ rw-data ]
call [ DecodePointer@IAT ]
jmp eax
push r--data
push 0x800
push 0x0
push r--data
call [ LoadLibraryExW@IAT ]
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
retn
push eax
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_42422e
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi edi
test ecx ecx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
mov edx [ ebp + 0xc ]
sub edx edi
test ecx ecx
je r-xdata
dec ecx
jne r-xdata
dec ecx
je r-xdata
movzx eax [ edx + edi ]
mov [ edi ] ax
add edi 0x2
test ax ax
je r-xdata
xor eax eax
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
sub_42426e
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
mov ecx 0x100
neg eax
sbb eax eax
and eax ecx
push eax
push [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
neg eax
sbb eax eax
and eax ecx
push eax
mov eax [ ebp + 0x10 ]
push [ ebp + 0x14 ]
neg eax
sbb eax eax
and eax ecx
push eax
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
neg eax
sbb eax eax
and eax 0x3
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4242b8
add esp 0x24
pop ebp
retn
sub_4242b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
test edi edi
je r-xdata
mov edx [ ebp + 0x1c ]
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
test edx edx
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
xor esi esi
mov [ ecx ] si
cmp [ ebp + 0x18 ] ebx
je r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
test eax eax
je r-xdata
cmp [ ebp + 0x20 ] 0x0
jbe r-xdata
xor esi esi
mov [ ecx ] si
mov edx [ ebp + 0x1c ]
test edx edx
jne r-xdata
jmp r-xdata
call sub_428ca8
test edi edi
jne r-xdata
cmp [ ebp + 0x28 ] 0x0
jbe r-xdata
xor ecx ecx
mov [ edx ] cx
cmp [ ebp + 0x20 ] ebx
je r-xdata
cmp [ ebp + 0x20 ] ebx
jne r-xdata
test ebx ebx
jne r-xdata
push 0x16
pop esi
mov [ eax ] esi
call sub_428f36
mov eax esi
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
xor ebx ebx
inc ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
jmp r-xdata
push 0x22
pop ecx
mov [ eax ] ecx
mov eax ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x28 ] ebx
je r-xdata
cmp [ ebp + 0x28 ] ebx
jne r-xdata
xor eax eax
mov esi edi
inc eax
jmp r-xdata
cmp [ esi ] 0x3a
jne r-xdata
add esi 0x2
dec eax
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
cmp [ esi ] bx
je r-xdata
movzx eax [ edi ]
mov ecx ebx
mov esi edi
test ax ax
je r-xdata
xor eax eax
mov [ ecx ] ax
lea edi [ esi + 0x2 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x3
jb r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
cmp ax 0x2f
je r-xdata
mov eax [ ebp + 0x24 ]
jmp r-xdata
push 0x2
push edi
push 0xffffffff
push ecx
call sub_42d2c8
mov edx [ ebp + 0x1c ]
add esp 0x10
test ebx ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
lea ecx [ esi + 0x2 ]
cmp ax 0x5c
je r-xdata
mov edx [ ebp + 0x1c ]
test edx edx
je r-xdata
cmp ebx edi
jb r-xdata
mov [ ebp + 0x8 ] ecx
test ecx ecx
je r-xdata
cmp ax 0x2e
jne r-xdata
mov eax [ ebp + 0x24 ]
test eax eax
je r-xdata
sub esi edi
sar esi 0x1
cmp [ ebp + 0x20 ] esi
jbe r-xdata
mov edx [ ebp + 0x1c ]
test edx edx
je r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
add esi 0x2
movzx eax [ esi ]
test ax ax
jne r-xdata
mov ebx esi
jmp r-xdata
xor eax eax
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
mov eax [ ebp + 0x24 ]
push esi
push edi
push 0xffffffff
push edx
call sub_42d2c8
add esp 0x10
mov eax [ ebp + 0x24 ]
test eax eax
je r-xdata
mov eax ebx
sub eax edi
sar eax 0x1
cmp [ ebp + 0x20 ] eax
jbe r-xdata
mov edi ecx
jmp r-xdata
mov eax ecx
sub eax edi
sar eax 0x1
cmp [ ebp + 0x18 ] eax
jbe r-xdata
sub esi ebx
sar esi 0x1
cmp [ ebp + 0x28 ] esi
jbe r-xdata
push eax
push edi
push 0xffffffff
push edx
call sub_42d2c8
mov edx [ ebp + 0x1c ]
add esp 0x10
push eax
push edi
push 0xffffffff
push [ ebp + 0x14 ]
call sub_42d2c8
mov ecx [ ebp + 0x8 ]
add esp 0x10
xor ebx ebx
push esi
push ebx
push 0xffffffff
push eax
call sub_42d2c8
add esp 0x10
jmp r-xdata
sub_4244b0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_4244c0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edi edi
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_4245a8
push ebp
mov ebp esp
push ecx
call sub_429b2c
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
test ecx ecx
jne r-xdata
movzx edx [ ecx ]
xor eax eax
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test dx dx
je r-xdata
mov ecx [ eax + 0x1c ]
mov esi ecx
cmp [ ecx ] ax
je r-xdata
movzx ebx [ edi ]
mov eax [ ebp - 0x4 ]
pop edi
mov [ eax + 0x1c ] ecx
mov eax esi
sub eax ecx
neg eax
sbb eax eax
and eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx ebx [ edi ]
xor edx edx
xor edx edx
cmp [ eax ] dx
je r-xdata
mov esi ebx
cmp [ eax ] dx
jne r-xdata
movzx edx [ ecx ]
mov [ ebp + 0x8 ] edx
mov edx ebx
xor eax eax
add ecx 0x2
movzx edx [ ecx ]
test dx dx
jne r-xdata
add eax 0x2
movzx esi [ eax ]
test si si
jne r-xdata
xor eax eax
mov [ ecx ] ax
add ecx 0x2
add ecx 0x2
cmp [ ecx ] dx
jne r-xdata
xor edx edx
add eax 0x2
movzx edx [ eax ]
test dx dx
jne r-xdata
mov eax edi
test bx bx
je r-xdata
cmp si dx
je r-xdata
mov eax edi
test bx bx
je r-xdata
jmp r-xdata
cmp dx [ ebp + 0x8 ]
je r-xdata
sub_42465a
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
push 0x16
pop eax
pop ebp
retn
sub_424684
push 0x10
push r--data
call sub_428a80
and [ ebp - 0x1c ] 0x0
mov edi [ ebp + 0xc ]
cmp edi 0x4000
je r-xdata
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
cmp edi 0x8000
je r-xdata
test esi esi
js r-xdata
call sub_428ca8
mov [ eax ] 0x9
jmp r-xdata
cmp edi 0x10000
je r-xdata
call sub_428ca8
mov [ eax ] 0x9
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
cmp edi 0x40000
je r-xdata
mov eax esi
sar eax 0x5
mov [ ebp + 0xc ] eax
mov ebx esi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ eax + ebx + 0x4 ]
and eax 0x1
je r-xdata
cmp edi 0x20000
je r-xdata
push esi
call sub_42d386
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x1
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
jmp r-xdata
call sub_428ca8
mov [ eax ] 0x9
or edi 0xffffffff
push edi
push esi
call sub_424789
pop ecx
pop ecx
mov edi eax
jmp r-xdata
call sub_428f36
call sub_428ac5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424768
mov eax edi
jmp r-xdata
sub_424789
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx esi
sar ebx 0x5
and esi 0x1f
shl esi 0x6
push edi
mov edi [ ebx * 4 + rw-data ]
mov cl [ edi + esi + 0x4 ]
movzx eax cl
and eax 0x80
mov [ ebp + 0x8 ] eax
mov al [ edi + esi + 0x24 ]
add al al
movsx edx al
mov eax [ ebp + 0xc ]
sar edx 0x1
cmp eax 0x4000
je r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov eax [ ebx * 4 + rw-data ]
and [ eax + esi + 0x24 ] 0x80
cmp eax 0x8000
je r-xdata
neg edx
sbb edx edx
and edx 0xc000
lea eax [ edx + 0x4000 ]
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and cl 0x7f
mov [ edi + esi + 0x4 ] cl
jmp r-xdata
cmp eax 0x10000
je r-xdata
cmp [ ebp + 0x8 ] 0x0
pop edi
pop esi
pop ebx
jne r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov ecx [ ebx * 4 + rw-data ]
mov al [ ecx + esi + 0x24 ]
and al 0x82
or al 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov [ ecx + esi + 0x24 ] al
jmp r-xdata
cmp eax 0x40000
jne r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov ecx [ ebx * 4 + rw-data ]
mov al [ ecx + esi + 0x24 ]
and al 0x81
or al 0x1
sub_424856
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
or eax 0xffffffff
pop ebp
retn
sub_42487a
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
or eax 0xffffffff
xor edx edx
div ecx
cmp ebx eax
ja r-xdata
mov edi ecx
imul edi ebx
test [ esi + 0xc ] 0x10c
mov ebx edi
je r-xdata
mov ecx 0x1000
mov ecx [ esi + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov edx [ esi + 0xc ]
and edx 0x108
je r-xdata
mov [ ebp - 0x4 ] ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx ecx
jb r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
movsx eax [ eax ]
push eax
call sub_42af9e
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test edx edx
je r-xdata
js r-xdata
sub edi ebx
xor edx edx
mov eax edi
div [ ebp + 0xc ]
jmp r-xdata
inc [ ebp + 0x8 ]
dec ebx
mov ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] ecx
test ecx ecx
jg r-xdata
mov eax ebx
test ecx ecx
je r-xdata
push esi
call sub_424bad
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
cmp ebx eax
jae r-xdata
test ebx ebx
jne r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ebx
xor edx edx
div ecx
mov eax ebx
sub eax edx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
push [ esi ]
call sub_420fc0
mov eax [ ebp - 0x8 ]
add esp 0xc
sub [ esi + 0x4 ] eax
sub ebx eax
add [ esi ] eax
add [ ebp + 0x8 ] eax
jmp r-xdata
mov eax ebx
mov [ ebp - 0x8 ] ebx
mov ecx [ ebp - 0x8 ]
mov edx ecx
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x8 ]
push esi
call sub_424856
pop ecx
push eax
call sub_42da06
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] edx
sub ebx edx
cmp eax ecx
jb r-xdata
mov edx eax
sub_4249d3
push 0xc
push r--data
call sub_428a80
and [ ebp - 0x1c ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov esi [ ebp + 0x14 ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_426d8e
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42487a
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424a4d
mov eax edi
jmp r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
call sub_428ac5
retn
sub_424a55
push 0xc
push r--data
call sub_428a80
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
test edi edi
setne al
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] eax
setne al
test eax eax
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] edi
push edi
call sub_426d8e
pop ecx
and [ ebp - 0x4 ] ebx
test [ edi + 0xc ] 0x40
jne r-xdata
call sub_428ac5
retn
test ebx ebx
jne r-xdata
push edi
call sub_424856
pop ecx
mov edx eax
cmp edx 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424b5f
mov eax ebx
push edi
call sub_42a911
mov esi eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
push edi
call sub_42e35a
mov ebx eax
mov [ ebp - 0x1c ] ebx
push edi
push esi
call sub_42a8e0
add esp 0x1c
mov eax rw-data
cmp edx 0xfffffffe
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
or ebx 0xffffffff
mov [ ebp - 0x1c ] ebx
cmp edx 0xffffffff
je r-xdata
mov ecx edx
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov edx rw-data
cmp edx 0xfffffffe
je r-xdata
test [ eax + 0x24 ] 0x7f
jne r-xdata
mov eax edx
sar eax 0x5
and edx 0x1f
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
test [ edx + 0x24 ] 0x80
je r-xdata
sub_424b67
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_424bad
pop ecx
test eax eax
je r-xdata
push esi
call sub_424c73
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_424856
push eax
call sub_42efc6
neg eax
pop ecx
pop ecx
sbb eax eax
jmp r-xdata
sub_424bad
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ esi + 0xc ]
and al 0x3
cmp al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax ebx
and [ esi + 0x4 ] 0x0
mov [ esi ] ecx
pop esi
pop ebx
pop ebp
retn
test [ esi + 0xc ] 0x108
je r-xdata
push edi
mov edi [ esi ]
sub edi [ esi + 0x8 ]
test edi edi
jle r-xdata
pop edi
push edi
push [ esi + 0x8 ]
push esi
call sub_424856
pop ecx
push eax
call sub_42da06
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_424c1a
push 0xc
push r--data
call sub_428a80
xor edi edi
mov [ ebp - 0x1c ] edi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_426d8e
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_424b67
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424c6b
mov eax edi
push edi
call sub_424c73
pop ecx
jmp r-xdata
call sub_428ac5
retn
sub_424c73
push 0x14
push r--data
call sub_428a80
xor edi edi
mov [ ebp - 0x1c ] edi
and [ ebp - 0x24 ] edi
push 0x1
call sub_429d8b
pop ecx
and [ ebp - 0x4 ] edi
xor esi esi
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424d4e
cmp ebx 0x1
mov eax edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
call sub_428ac5
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_426dcd
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_424d1b
cmp ebx 0x1
jne r-xdata
test ebx ebx
jne r-xdata
push eax
call sub_424b67
pop ecx
cmp eax 0xffffffff
je r-xdata
test [ eax + 0xc ] 0x2
je r-xdata
inc edi
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
call sub_424b67
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_424d57
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
je r-xdata
mov esp ebp
pop ebp
retn
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_422ff5
mov esi [ ebp - 0x14 ]
mov eax [ esi + 0xa8 ]
test eax eax
jne r-xdata
mov edx 0x100
push 0x1
cmp [ ebp + 0x8 ] dx
jae r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp ax 0x19
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_42f0af
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_42af48
pop ecx
test eax eax
mov eax [ ebp + 0x8 ]
pop ecx
jne r-xdata
movzx eax cx
jmp r-xdata
add cx 0x20
movzx eax [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
movzx ecx ax
mov eax [ esi + 0x94 ]
movzx eax [ eax + ecx ]
jmp r-xdata
movzx eax ax
movzx eax ax
jmp r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x8 ] 0x0
pop esi
je r-xdata
movzx eax ax
movzx eax ax
jmp r-xdata
sub_424e19
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push edi
push [ ebp + 0xc ]
call sub_422ff5
mov ebx [ ebp + 0x8 ]
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x74 ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
call sub_428ca8
xor ecx ecx
inc ecx
mov [ eax ] 0x2a
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
mov eax ebx
lea ecx [ ebp - 0x18 ]
sar eax 0x8
mov [ ebp + 0x8 ] eax
push ecx
movzx eax al
push eax
call sub_42373b
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0x90 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_42bdcc
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
mov eax [ ecx + 0x94 ]
movzx ecx [ eax + ebx ]
je r-xdata
test eax eax
je r-xdata
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x8 ]
push 0x1
push [ eax + 0x4 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push edi
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_42f2e2
add esp 0x24
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax edx
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_424f5c
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_424e19
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp eax 0x19
ja r-xdata
mov eax ecx
pop ebp
retn
add ecx 0x20
sub_424f88
push ebp
mov ebp esp
mov cx [ ebp + 0xe ]
mov edx 0x7ff0
mov ax cx
and ax dx
cmp ax dx
jne r-xdata
movzx ecx cx
and ecx 0x8000
test ax ax
jne r-xdata
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_42c8fd
pop ecx
pop ecx
dec eax
je r-xdata
fld [ ebp + 0x8 ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax 0x200
pop ebp
retn
dec eax
je r-xdata
neg ecx
sbb ecx ecx
and ecx 0xffffff08
lea eax [ ecx + 0x100 ]
pop ebp
retn
neg ecx
sbb ecx ecx
and ecx 0xffffffe0
lea eax [ ecx + 0x40 ]
pop ebp
retn
neg ecx
sbb ecx ecx
and ecx 0xffffff90
lea eax [ ecx + 0x80 ]
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x4
dec eax
je r-xdata
push 0x2
jmp r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
sub_425030
push ebp
mov ebp esp
push ecx
push ecx
fldz
push esi
push edi
mov edi 0xffff
push edi
push 0x133f
fstp [ ebp - 0x8 ]
call sub_42d0da
pop ecx
pop ecx
mov ecx [ ebp + 0xe ]
mov esi eax
mov eax 0x7ff0
movzx ecx cx
and ecx eax
cmp cx ax
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0x7fffffff
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push edi
push esi
mov [ ebp - 0x8 ] eax
call sub_42d0da
fld [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_42c8fd
pop ecx
pop ecx
dec eax
je r-xdata
push edi
push esi
call sub_42d0da
fld [ ebp + 0x8 ]
jmp r-xdata
dec eax
je r-xdata
pop ecx
pop ecx
push edi
push esi
call sub_42d0da
fld [ ebp + 0x8 ]
fchs
jmp r-xdata
fld [ ebp + 0x8 ]
push esi
dec eax
je r-xdata
push ecx
push ecx
fstp [ esp ]
push 0x15
call sub_42cc30
add esp 0x10
jmp r-xdata
fld [ r--data ]
sub esp 0x10
fadd st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0x15
push 0x8
call sub_42c98a
add esp 0x1c
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4250f0
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0xc ]
call sub_430315
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_42f359
sub_425130
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0x14
fxch st1
fstp [ esp ]
fst [ esp + 0x8 ]
mov eax [ esp + 0xc ]
call sub_42518d
add esp 0x14
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_42f340
sub_42518d
mov ecx eax
push eax
fwait
fnstcw [ esp ]
cmp [ esp ] 0x27f
je r-xdata
and ecx 0x7ff00000
lea edx [ esp + 0x8 ]
cmp ecx 0x7ff00000
je r-xdata
call sub_4302e5
xor ecx ecx
and eax 0xfffff
or eax [ esp + 0x10 ]
jne r-xdata
call sub_430315
je r-xdata
lea edx [ esp + 0x8 ]
call sub_430315
test [ esp + 0x16 ] 0x8
jne r-xdata
lea edx [ esp + 0x8 ]
call sub_430315
xor ecx ecx
jmp r-xdata
test eax 0x7ff00000
je r-xdata
faddp st1
mov eax 0x1
jmp r-xdata
inc ecx
jmp r-xdata
test ecx ecx
jne r-xdata
or edx [ esp + 0x8 ]
jne r-xdata
mov eax [ esp + 0xc ]
mov edx eax
and eax 0x7ff00000
and edx 0xfffff
cmp eax 0x7ff00000
jne r-xdata
mov eax [ esp + 0xc ]
and eax 0xfffff
or eax [ esp + 0x8 ]
jne r-xdata
mov cl [ esp + 0xf ]
and cl 0x80
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
faddp st1
mov eax 0x7
jmp r-xdata
sub esp 0x74
mov ecx esp
push ecx
sub esp 0x10
fstp [ esp ]
fstp [ esp + 0x8 ]
fwait
fnsave [ ecx + 0x8 ]
call sub_4304c4
add esp 0x10
pop ecx
frstor [ ecx + 0x8 ]
fld [ ecx ]
add esp 0x74
test eax eax
je r-xdata
test [ esp + 0xe ] 0x8
jne r-xdata
fstp st0
mov eax [ esp + 0x14 ]
and eax 0x7fffffff
or eax [ esp + 0x10 ]
je r-xdata
fld st1
call sub_425352
fchs
test cl cl
jne r-xdata
fyl2x
call sub_4302d0
cmp cl 0x1
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
lea ecx [ rw-data ]
mov edx 0x1d
call sub_430270
pop edx
retn
mov eax 0x1
jmp r-xdata
fstp st0
fld1
jmp r-xdata
call sub_425352
mov ch [ esp + 0xf ]
shr ch 0x7
test [ esp + 0x17 ] 0x80
je r-xdata
fstp st0
fstp st0
fld [ r--data ]
mov eax 0x1
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
fchs
pop edx
retn
fldcw [ esp ]
fldz
test ch cl
je r-xdata
fld [ r--data ]
test ch cl
je r-xdata
lea ecx [ rw-data ]
mov edx 0x1d
jmp r-xdata
fchs
jmp r-xdata
mov eax 0x2
jmp r-xdata
fchs
sub esp 0x8
fst [ esp ]
mov eax [ esp + 0x4 ]
add esp 0x8
and eax 0x7ff00000
je r-xdata
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
mov eax 0x4
jae r-xdata
cmp eax 0x7ff00000
je r-xdata
cmp edx 0x1d
je r-xdata
fmul [ r--data ]
jmp r-xdata
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
mov eax 0x3
jbe r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
call sub_430270
pop edx
retn
call sub_430287
pop edx
retn
fmul [ r--data ]
jmp r-xdata
pop edx
retn
and ax 0x20
jne r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
sub_425352
fld st0
frndint
fcomp st1
mov cl 0x0
fwait
fnstsw ax
sahf
jne r-xdata
fstp st0
retn
fmul [ rw-data ]
inc cl
fld st0
frndint
fcompp
fwait
fnstsw ax
sahf
jne r-xdata
retn
inc cl
sub_42537a
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
add ecx 0x2ac18000
push 0x0
push 0x989680
adc eax 0xfe624e21
push eax
push ecx
call sub_430600
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
mov esp ebp
pop ebp
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_4253e0
push 0xc
push r--data
call sub_428a80
xor ecx ecx
mov [ ebp - 0x1c ] ecx
xor eax eax
mov edi [ ebp + 0x8 ]
test edi edi
setne al
test eax eax
jne r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
test ebx ebx
setne al
test eax eax
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
xor eax eax
cmp [ ebx ] cx
setne al
test eax eax
je r-xdata
call sub_428ac5
retn
call sub_430668
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ edi ] ax
jne r-xdata
call sub_428ca8
mov [ eax ] 0x18
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push ebx
push edi
call sub_430787
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4254a2
mov eax edi
call sub_428ca8
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_430a30
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_4254aa
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_424bad
push esi
mov edi eax
call sub_430cf7
push esi
call sub_424856
push eax
call sub_430b82
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
or edi 0xffffffff
jmp r-xdata
push [ esi + 0x1c ]
call sub_422ed5
and [ esi + 0x1c ] 0x0
pop ecx
sub_425516
push 0xc
push r--data
call sub_428a80
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
push esi
call sub_426d8e
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4254aa
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_425585
jmp r-xdata
and [ esi + 0xc ] 0x0
jmp r-xdata
mov eax edi
call sub_428ac5
retn
sub_42558d
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
je r-xdata
xor eax eax
mov ebx [ ebp + 0x14 ]
test ebx ebx
je r-xdata
test ecx ecx
jne r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ebx eax
jbe r-xdata
test esi esi
je r-xdata
push [ ebp + 0xc ]
push 0x0
push ecx
call sub_422f60
add esp 0xc
mov edi [ ebp + 0x10 ]
imul edi ebx
test [ esi + 0xc ] 0x10c
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ebx eax
ja r-xdata
mov ecx 0x1000
mov ecx [ esi + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
mov [ ebp - 0xc ] ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx ecx
jb r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
push esi
call sub_430d27
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
js r-xdata
sub edi ebx
xor edx edx
mov eax edi
div [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x7fffffff
cmp ebx 0x7fffffff
ja r-xdata
xor edx edx
cmp ebx 0x7fffffff
jbe r-xdata
or [ esi + 0xc ] 0x20
cmp ebx eax
jae r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] al
inc edx
dec ebx
mov [ ebp - 0x4 ] edx
dec ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ esi + 0x18 ]
mov [ ebp - 0xc ] ecx
cmp eax [ ebp - 0x8 ]
ja r-xdata
mov eax ebx
mov eax ebx
div ecx
mov eax ebx
mov eax 0x7fffffff
div ecx
mov eax 0x7fffffff
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp eax ecx
ja r-xdata
mov eax ebx
mov [ ebp - 0x10 ] ebx
call sub_428ca8
mov [ eax ] 0x22
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_422f60
add esp 0xc
push eax
push [ ebp - 0x4 ]
push esi
call sub_424856
pop ecx
push eax
call sub_430fdb
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
push eax
push [ esi ]
push ecx
push [ ebp - 0x4 ]
call sub_430e48
mov eax [ ebp - 0x10 ]
add esp 0x10
sub [ esi + 0x4 ] eax
sub ebx eax
add [ esi ] eax
jmp r-xdata
call sub_428f36
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
add [ ebp - 0x4 ] eax
sub [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
jmp r-xdata
sub ebx eax
test ebx ebx
jne r-xdata
sub_42576d
push 0xc
push r--data
call sub_428a80
xor edi edi
mov [ ebp - 0x1c ] edi
cmp [ ebp + 0x10 ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] edi
je r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
jne r-xdata
push esi
call sub_426d8e
pop ecx
mov [ ebp - 0x4 ] edi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42558d
add esp 0x14
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4257f6
mov eax edi
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_428ac5
retn
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_422f60
add esp 0xc
sub_425800
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
retn
test al al
je r-xdata
test al al
je r-xdata
add ecx 0x1
test al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
test ah ah
je r-xdata
test ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
test al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
test ah ah
jne r-xdata
mov edi edi
sub_42588c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_423521
pop ecx
call sub_428ca8
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
test esi esi
je r-xdata
call sub_42a2eb
push 0x1e
call sub_42a348
push 0xff
call sub_42321f
xor ecx ecx
inc ecx
mov ecx esi
jmp r-xdata
mov eax edi
pop edi
pop ebx
jmp r-xdata
push 0xc
pop ebx
cmp [ rw-data ] eax
je r-xdata
push ecx
push 0x0
push eax
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop esi
pop ebp
retn
call sub_428ca8
mov [ eax ] ebx
push esi
call sub_423521
pop ecx
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
jmp r-xdata
call sub_428ca8
mov [ eax ] ebx
sub_42592e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
and eax 0xffffffef
mov [ esi + 0xc ] eax
push edi
cmp ebx 0x1
jne r-xdata
call sub_428ca8
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
mov edi [ ebp + 0xc ]
push esi
call sub_425a40
mov edi [ ebp + 0xc ]
add edi eax
xor ebx ebx
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push esi
call sub_424bad
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push ebx
push edi
push esi
call sub_424856
pop ecx
push eax
call sub_4317af
add esp 0xc
xor ecx ecx
cmp eax 0xffffffff
setne cl
pop edi
pop ebx
lea eax [ ecx - 0x1 ]
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_4259bd
push 0xc
push r--data
call sub_428a80
and [ ebp - 0x1c ] 0x0
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
or eax 0xffffffff
jmp r-xdata
push esi
call sub_426d8e
pop ecx
and [ ebp - 0x4 ] 0x0
push edi
push [ ebp + 0xc ]
push esi
call sub_42592e
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_425a38
mov eax edi
cmp edi 0x1
je r-xdata
call sub_428ac5
retn
cmp edi 0x2
jne r-xdata
sub_425a40
push ebp
mov ebp esp
mov eax 0x1028
call sub_431ac0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x1014 ] edi
test edi edi
jne r-xdata
push ebx
push esi
push edi
call sub_424856
xor ebx ebx
mov esi eax
pop ecx
mov [ ebp - 0x1018 ] esi
cmp [ edi + 0x4 ] ebx
jge r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
or eax 0xffffffff
jmp r-xdata
push 0x1
push ebx
push esi
call sub_4317af
add esp 0xc
mov [ ebp - 0x100c ] eax
test eax eax
js r-xdata
mov [ edi + 0x4 ] ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_42c776
mov esp ebp
pop ebp
retn
or eax 0xffffffff
jmp r-xdata
mov eax esi
mov ecx esi
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov [ ebp - 0x1010 ] eax
mov [ ebp - 0x1020 ] ecx
mov edx [ eax * 4 + rw-data ]
mov eax [ edi + 0xc ]
mov [ ebp - 0x1024 ] eax
mov dl [ ecx + edx + 0x24 ]
add dl dl
sar dl 0x1
test eax 0x108
mov eax [ ebp - 0x100c ]
mov [ ebp - 0x1005 ] dl
jne r-xdata
pop esi
pop ebx
mov esi [ edi ]
mov edi [ edi + 0x8 ]
mov [ ebp - 0x101c ] edi
mov edi esi
sub edi [ ebp - 0x101c ]
test [ ebp - 0x1024 ] 0x3
mov [ ebp - 0x1028 ] edi
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test [ ebp - 0x1024 ] 0x80
jne r-xdata
cmp dl 0x1
jne r-xdata
test eax eax
jne r-xdata
call sub_428ca8
mov [ eax ] 0x16
jmp r-xdata
mov edi [ ebp - 0x1010 ]
mov eax [ edi * 4 + rw-data ]
mov edi [ ebp - 0x1028 ]
test [ ecx + eax + 0x4 ] 0x80
mov eax [ ebp - 0x100c ]
je r-xdata
mov edi [ ebp - 0x1010 ]
mov eax [ edi * 4 + rw-data ]
mov edi [ ebp - 0x1028 ]
cmp [ ecx + eax + 0x30 ] ebx
je r-xdata
test [ ebp - 0x1024 ] 0x1
je r-xdata
mov eax edi
jmp r-xdata
mov edx [ ebp - 0x101c ]
jmp r-xdata
mov eax [ ebp - 0x1014 ]
shr edi 0x1
cmp [ eax + 0x4 ] ebx
jne r-xdata
cmp dl 0x1
jne r-xdata
mov eax [ ebp - 0x1014 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
cmp edx esi
jb r-xdata
mov edx [ ebp - 0x1010 ]
push ebx
mov eax [ edx * 4 + rw-data ]
push [ ecx + eax + 0x2c ]
push [ ecx + eax + 0x28 ]
push [ ebp - 0x1018 ]
call sub_431945
mov ecx [ ebp - 0x1020 ]
mov esi eax
mov eax [ ebp - 0x1010 ]
add esp 0x10
mov eax [ eax * 4 + rw-data ]
cmp esi [ ecx + eax + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x100c ]
jmp r-xdata
add eax edi
shr edi 0x1
mov ebx [ ebp - 0x1010 ]
sub esi [ eax + 0x8 ]
add esi [ eax + 0x4 ]
push 0x0
mov eax [ ebx * 4 + rw-data ]
pop ebx
test [ ecx + eax + 0x4 ] 0x80
je r-xdata
mov eax [ ebp - 0x100c ]
mov edi ebx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov dl [ ebp - 0x1005 ]
cmp edx [ ecx + eax + 0x2c ]
jne r-xdata
mov eax [ ebp - 0x100c ]
sub eax esi
push 0x2
push ebx
push [ ebp - 0x1018 ]
call sub_4317af
mov ecx [ ebp - 0x100c ]
add esp 0xc
cmp eax ecx
jne r-xdata
inc edx
inc edi
push ebx
lea edx [ ebp - 0x101c ]
push edx
push 0x1000
lea edx [ ebp - 0x1004 ]
push edx
push [ ecx + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push ebx
push ecx
push [ ebp - 0x1018 ]
call sub_4317af
add esp 0xc
test eax eax
jns r-xdata
mov edx [ ebp - 0x1014 ]
mov eax [ edx + 0x8 ]
add eax esi
mov ecx eax
sub ecx [ edx + 0x8 ]
cmp eax [ edx + 0x8 ]
sbb eax eax
not eax
and eax ecx
mov [ ebp - 0x1020 ] eax
jbe r-xdata
mov ecx [ ebp - 0x100c ]
push ebx
push ecx
push [ ebp - 0x1018 ]
call sub_4317af
add esp 0xc
test eax eax
js r-xdata
mov eax [ ebp - 0x1014 ]
mov ecx 0x200
cmp esi ecx
ja r-xdata
test [ edx + 0xc ] 0x2000
jmp r-xdata
mov eax [ edx + 0x8 ]
mov ecx [ ebp - 0x1020 ]
mov eax [ ebp - 0x101c ]
cmp edi eax
ja r-xdata
mov esi [ eax + 0x18 ]
test [ eax + 0xc ] 0x8
je r-xdata
je r-xdata
inc eax
inc ebx
cmp ebx ecx
jb r-xdata
inc esi
lea ecx [ ebp - 0x1004 ]
test edi edi
je r-xdata
mov dl [ ebp - 0x1005 ]
cmp dl 0x1
jne r-xdata
inc esi
test [ eax + 0xc ] 0x400
mov esi ecx
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
lea eax [ ebp - 0x1004 ]
sub esi eax
lea eax [ ecx + esi ]
jmp r-xdata
mov edx ecx
add edx eax
shr esi 0x1
mov eax [ ebp - 0x1010 ]
mov ecx [ ebp - 0x1020 ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x4
mov al [ ecx ]
cmp al 0xd
jne r-xdata
movzx eax al
movsx eax [ eax + rw-data ]
add ecx eax
lea eax [ edx - 0x1 ]
cmp ecx eax
jae r-xdata
dec edi
cmp ecx edx
jae r-xdata
inc ecx
test edi edi
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov ecx eax
jmp r-xdata
sub_425dd0
push 0xc
push r--data
call sub_428a80
and [ ebp - 0x1c ] 0x0
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_426d8e
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_425a40
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_425e34
mov eax edi
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
or eax 0xffffffff
jmp r-xdata
call sub_428ac5
retn
sub_425e3c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
test ebx ebx
jne r-xdata
push edi
push 0x3bc
push 0x1
call sub_428955
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
or eax 0xffffffff
jmp r-xdata
push edi
call sub_422ed5
pop ecx
test esi esi
je r-xdata
call sub_429b2c
push [ eax + 0x6c ]
push edi
call sub_429bb3
mov eax [ ebp + 0x10 ]
pop ecx
pop ecx
push edi
push 0x4
push edi
push sub_425f47
push [ ebp + 0xc ]
mov [ edi + 0x54 ] ebx
push esi
mov [ edi + 0x58 ] eax
call [ CreateThread@IAT ]
mov esi eax
mov [ edi + 0x4 ] esi
test esi esi
jne r-xdata
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
push esi
call sub_428c87
pop ecx
push esi
call [ ResumeThread@IAT ]
cmp eax 0xffffffff
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov eax esi
jmp r-xdata
pop edi
sub_425f1c
push esi
call sub_429b44
mov esi eax
test esi esi
je r-xdata
push 0x0
call [ ExitThread@IAT ]
cmp [ esi + 0x4 ] 0xffffffff
je r-xdata
push esi
call sub_429af6
pop ecx
push [ esi + 0x4 ]
call [ CloseHandle@IAT ]
sub_425f47
push ebp
mov ebp esp
call sub_4299bb
push eax
call sub_429f47
mov edx eax
pop ecx
test edx edx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov eax [ ecx + 0x54 ]
mov [ edx + 0x54 ] eax
mov eax [ ecx + 0x58 ]
mov [ edx + 0x58 ] eax
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
call sub_4299c1
push [ ebp + 0x8 ]
call sub_4299bb
push eax
call sub_429f66
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_425edb
call [ GetLastError@IAT ]
push eax
call [ ExitThread@IAT ]
sub_425fa0
cmp [ rw-data ] 0x0
je r-xdata
mov edx r--data
jmp sub_431fba
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_431b08
sub_425fdc
cmp [ rw-data ] 0x0
je r-xdata
mov edx r--data
jmp sub_431dee
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_431af0
sub_426030
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0x4 ]
call sub_430315
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_432048
sub_426070
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_430358
call sub_4260c8
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_432030
sub_4260c8
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
mov eax [ esp + 0xc ]
cmp [ esp ] 0x27f
je r-xdata
call sub_4302fc
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test eax 0x7ff00000
je r-xdata
fldcw [ r--data ]
cmp [ rw-data ] 0x0
jne r-xdata
and eax 0x80000000
je r-xdata
test eax 0xfffff
jne r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
lea ecx [ rw-data ]
mov edx 0x1a
call sub_430287
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
jmp r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fldln2
fxch st1
fyl2x
pop edx
retn
fldcw [ esp ]
lea ecx [ rw-data ]
mov edx 0x1a
jmp r-xdata
jmp r-xdata
fstp st0
fld [ r--data ]
mov eax 0x2
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_430287
pop edx
retn
sub_426180
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0x4 ]
call sub_430315
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_4322b8
sub_4261c0
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_430358
call sub_426218
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_4322a0
sub_426218
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_4302fc
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fld1
fpatan
fldcw [ r--data ]
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
test eax 0x80000000
je r-xdata
cmp [ esp ] 0x27f
je r-xdata
mov edx 0xf
lea ecx [ rw-data ]
jmp r-xdata
mov edx 0xf
lea ecx [ rw-data ]
call sub_430287
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
fchs
jmp r-xdata
pop edx
retn
fldcw [ esp ]
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_430287
pop edx
retn
sub_4262a0
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0x4 ]
call sub_430315
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_4325a8
sub_4262e0
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_430358
call sub_426338
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_432590
sub_426338
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_4302fc
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
cmp eax 0x3ff00000
jae r-xdata
call sub_4302e5
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
ja r-xdata
fld1
fadd st1
fld1
fsub st2
fmulp st1
fsqrt
fxch st1
fpatan
cmp [ esp ] 0x27f
je r-xdata
mov edx 0xd
lea ecx [ rw-data ]
call sub_430287
pop edx
retn
mov eax [ esp + 0xc ]
mov ecx eax
and eax 0xfffff
or eax [ esp + 0x8 ]
jne r-xdata
mov edx 0xd
lea ecx [ rw-data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
and ecx 0x80000000
fstp st0
je r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
fldz
jmp r-xdata
fldpi
jmp r-xdata
pop edx
retn
and ax 0x20
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_430287
pop edx
retn
sub_4263f0
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0x4 ]
call sub_430315
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_432b08
sub_426430
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_430358
call sub_426488
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_432af0
sub_426488
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_4302fc
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
cmp eax 0x3ff00000
jae r-xdata
call sub_4302e5
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
ja r-xdata
fld1
fadd st1
fld1
fsub st2
fmulp st1
fsqrt
fpatan
cmp [ esp ] 0x27f
je r-xdata
mov edx 0xe
lea ecx [ rw-data ]
call sub_430287
pop edx
retn
mov eax [ esp + 0xc ]
mov ecx eax
and eax 0xfffff
or eax [ esp + 0x8 ]
jne r-xdata
mov edx 0xe
lea ecx [ rw-data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
and ecx 0x80000000
fstp st0
fld [ r--data ]
je r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
fchs
jmp r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_430287
pop edx
retn
sub_426540
cmp [ rw-data ] 0x0
je sub_4265cf
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne sub_4265cf
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_433088
sub_426580
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_430358
call sub_4265d8
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_433070
sub_4265d8
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_4302fc
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fptan
fwait
fnstsw ax
sahf
jpe r-xdata
fldcw [ r--data ]
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
fld [ r--data ]
fxch st1
fstp st0
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x20
lea ecx [ rw-data ]
call sub_430287
pop edx
retn
fprem1
fwait
fnstsw ax
sahf
jpe r-xdata
fstp st1
fptan
fstp st0
jmp r-xdata
mov edx 0x20
lea ecx [ rw-data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_430287
pop edx
retn
sub_426670
cmp [ rw-data ] 0x0
je sub_4266ff
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne sub_4266ff
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_4332e8
sub_4266b0
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_430358
call sub_426708
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_4332d0
sub_426708
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_4302fc
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fcos
fwait
fnstsw ax
sahf
jpe r-xdata
fldcw [ r--data ]
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
fld [ r--data ]
fxch st1
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x12
lea ecx [ rw-data ]
call sub_430287
pop edx
retn
fprem1
fwait
fnstsw ax
sahf
jpe r-xdata
fstp st1
fcos
jmp r-xdata
mov edx 0x12
lea ecx [ rw-data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_430287
pop edx
retn
sub_4267a0
cmp [ rw-data ] 0x0
je sub_42682f
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne sub_42682f
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_433498
sub_4267e0
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_430358
call sub_426838
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_433480
sub_426838
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_4302fc
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fsin
fwait
fnstsw ax
sahf
jpe r-xdata
fldcw [ r--data ]
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
fld [ r--data ]
fxch st1
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x1e
lea ecx [ rw-data ]
call sub_430287
pop edx
retn
fprem1
fwait
fnstsw ax
sahf
jpe r-xdata
fstp st1
fsin
jmp r-xdata
mov edx 0x1e
lea ecx [ rw-data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_430287
pop edx
retn
sub_42691d
push edx
fwait
fnstcw [ esp ]
mov eax [ esp + 0xc ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_4302fc
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test eax 0x80000000
jne r-xdata
call sub_4302e5
cmp [ rw-data ] 0x0
jne r-xdata
and eax 0x80000000
je r-xdata
test eax 0x7ff00000
jne r-xdata
fsqrt
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x5
lea ecx [ rw-data ]
call sub_430287
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
test eax 0xfffff
jne r-xdata
mov edx 0x5
lea ecx [ rw-data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
jmp r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_430287
pop edx
retn
sub_4269c0
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi 0xffff
push esi
push [ rw-data ]
call sub_42d0da
fld [ ebp + 0x8 ]
mov ebx eax
pop ecx
pop ecx
mov ecx [ ebp + 0xe ]
mov eax 0x7ff0
movzx ecx cx
and ecx eax
push ecx
push ecx
fstp [ esp ]
cmp cx ax
jne r-xdata
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
call sub_437e69
fst [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0x8
fucom st1
fnstsw ax
test ah 0x44
jpe r-xdata
call sub_42c8fd
pop ecx
pop ecx
test eax eax
jle r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
test bl 0x20
jne r-xdata
push esi
fstp st1
push ebx
fstp st0
call sub_42d0da
fld [ ebp - 0x8 ]
pop ecx
pop ecx
jmp r-xdata
fld [ ebp + 0x8 ]
fld [ r--data ]
push ebx
sub esp 0x10
fadd st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xb
push 0x8
jmp r-xdata
cmp eax 0x2
jle r-xdata
jmp r-xdata
push ebx
sub esp 0x10
fxch st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xb
push 0x10
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_42c98a
add esp 0x1c
push esi
push ebx
call sub_42d0da
fld [ ebp + 0x8 ]
pop ecx
pop ecx
jmp r-xdata
cmp eax 0x3
jne r-xdata
movq xmm0 [ esp + 0x4 ]
movapd xmm2 [ r--data ]
movapd xmm1 xmm0
movapd xmm7 xmm0
psrlq xmm0 0x34
movd eax xmm0
andpd xmm0 [ r--data ]
psubd xmm2 xmm0
psrlq xmm1 xmm2
test eax 0x800
jne r-xdata
fld [ ebp + 0x8 ]
push ebx
push ecx
push ecx
fstp [ esp ]
push 0xb
call sub_42cc30
add esp 0x10
jmp r-xdata
movq xmm0 [ esp + 0x4 ]
psllq xmm1 xmm2
movapd xmm3 xmm0
cmppd xmm0 xmm1 0x1
cmp eax 0xbff
jl r-xdata
cmp eax 0x3ff
jl r-xdata
cmppd xmm3 [ r--data ] 0x1
orpd xmm3 [ r--data ]
andpd xmm3 [ r--data ]
movq [ esp + 0x4 ] xmm3
fld [ esp + 0x4 ]
retn
cmp eax 0xc32
jg r-xdata
fldz
retn
psllq xmm1 xmm2
cmp eax 0x432
jg r-xdata
ucomisd xmm7 xmm7
jpo r-xdata
andpd xmm0 [ r--data ]
subsd xmm1 xmm0
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
fld [ esp + 0x4 ]
retn
mov edx 0x3ed
sub esp 0x10
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x14
mov [ esp + 0x8 ] edx
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_433648
add esp 0x10
sub_426af0
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi 0xffff
push esi
push [ rw-data ]
call sub_42d0da
fld [ ebp + 0x8 ]
mov ebx eax
pop ecx
pop ecx
mov ecx [ ebp + 0xe ]
mov eax 0x7ff0
movzx ecx cx
and ecx eax
push ecx
push ecx
fstp [ esp ]
cmp cx ax
jne r-xdata
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
call sub_437e69
fst [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0x8
fucom st1
fnstsw ax
test ah 0x44
jpe r-xdata
call sub_42c8fd
pop ecx
pop ecx
test eax eax
jle r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
test bl 0x20
jne r-xdata
push esi
fstp st1
push ebx
fstp st0
call sub_42d0da
fld [ ebp - 0x8 ]
pop ecx
pop ecx
jmp r-xdata
fld [ ebp + 0x8 ]
fld [ r--data ]
push ebx
sub esp 0x10
fadd st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x8
jmp r-xdata
cmp eax 0x2
jle r-xdata
jmp r-xdata
push ebx
sub esp 0x10
fxch st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x10
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_42c98a
add esp 0x1c
push esi
push ebx
call sub_42d0da
fld [ ebp + 0x8 ]
pop ecx
pop ecx
jmp r-xdata
cmp eax 0x3
jne r-xdata
movq xmm0 [ esp + 0x4 ]
movapd xmm2 [ r--data ]
movapd xmm1 xmm0
movapd xmm7 xmm0
psrlq xmm0 0x34
movd eax xmm0
andpd xmm0 [ r--data ]
psubd xmm2 xmm0
psrlq xmm1 xmm2
test eax 0x800
je r-xdata
fld [ ebp + 0x8 ]
push ebx
push ecx
push ecx
fstp [ esp ]
push 0xc
call sub_42cc30
add esp 0x10
jmp r-xdata
movq xmm0 [ esp + 0x4 ]
psllq xmm1 xmm2
movapd xmm3 xmm0
cmppd xmm0 xmm1 0x6
cmp eax 0x3ff
jl r-xdata
cmp eax 0xbff
jl r-xdata
cmppd xmm3 [ r--data ] 0x6
andpd xmm3 [ r--data ]
movq [ esp + 0x4 ] xmm3
fld [ esp + 0x4 ]
retn
cmp eax 0x432
jg r-xdata
fld [ r--data ]
retn
psllq xmm1 xmm2
cmp eax 0xc32
jg r-xdata
ucomisd xmm7 xmm7
jpo r-xdata
andpd xmm0 [ r--data ]
addsd xmm1 xmm0
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
fld [ esp + 0x4 ]
retn
mov edx 0x3ec
sub esp 0x10
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x14
mov [ esp + 0x8 ] edx
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_433648
add esp 0x10
sub_426c1a
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
lea edi [ ebp - 0x1c ]
push 0x7
xor eax eax
mov [ ebp - 0x20 ] ebx
pop ecx
[ edi ]
cmp [ ebp + 0x10 ] eax
jne r-xdata
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp eax 0x3fffffff
jbe r-xdata
test esi esi
jne r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
add eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
or eax 0xffffffff
jmp r-xdata
pop esi
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_42b0ed
add esp 0x10
mov edi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_42af9e
mov eax [ ebp - 0x20 ]
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_42af9e
pop ecx
pop ecx
mov [ eax ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax edi
sub_426cee
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_428955
mov [ rw-data ] eax
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_428955
mov [ rw-data ] eax
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ rw-data ]
jmp r-xdata
push 0x1a
pop eax
pop esi
retn
mov [ edx + eax ] ecx
add ecx 0x20
lea edx [ edx + 0x4 ]
cmp ecx rw-data
jge r-xdata
sub_426d8e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx rw-data
cmp esi ecx
jb r-xdata
lea eax [ esi + 0x20 ]
push eax
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov eax esi
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_429d8b
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_426dcd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_429d8b
mov eax [ ebp + 0xc ]
pop ecx
or [ eax + 0xc ] 0x8000
pop ebp
retn
sub_426dfd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_429ef5
pop ecx
pop ebp
retn
sub_426e37
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
lea eax [ ecx + 0x10 ]
push eax
call sub_429ef5
pop ecx
pop ebp
retn
sub_426e64
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_426e8d
pop ebp
retn
sub_426e8d
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
test ecx ecx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
push ebx
push edi
ja r-xdata
call sub_428ca8
push 0x16
pop esi
mov [ eax ] esi
call sub_428f36
mov eax esi
jmp r-xdata
mov edx [ ebp + 0x18 ]
xor eax eax
test edx edx
mov [ ecx ] ax
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
call sub_428ca8
push 0x16
pop esi
pop ebp
retn 0x14
mov eax [ ebp + 0x14 ]
push 0x22
add eax 0xfffffffe
pop esi
cmp eax esi
ja r-xdata
call sub_428ca8
push 0x22
jmp r-xdata
mov [ eax ] esi
call sub_428f36
mov eax esi
jmp r-xdata
xor eax eax
mov edi ecx
test edx edx
mov [ ebp + 0x18 ] eax
mov edx [ ebp + 0x8 ]
je r-xdata
pop esi
jmp r-xdata
pop edi
pop ebx
mov ecx [ ebp + 0x18 ]
mov ebx edi
push 0x2d
pop eax
mov [ ecx ] ax
lea edi [ ecx + 0x2 ]
xor eax eax
inc eax
neg edx
mov [ ebp + 0x18 ] eax
add eax 0x30
add eax 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ edi ] ax
add edi 0x2
inc ecx
test edx edx
je r-xdata
xor eax eax
mov [ edi ] ax
sub edi 0x2
xor eax eax
mov [ ecx ] ax
call sub_428ca8
mov eax edx
xor edx edx
div [ ebp + 0x14 ]
mov [ ebp + 0x8 ] edx
mov edx eax
mov eax [ ebp + 0x8 ]
cmp eax 0x9
jbe r-xdata
mov ax [ ebx ]
movzx ecx [ edi ]
mov [ edi ] ax
sub edi 0x2
mov [ ebx ] cx
add ebx 0x2
cmp ebx edi
jb r-xdata
xor eax eax
sub_426f80
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
xor ebx ebx
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
test edi edi
jne r-xdata
push 0x24
push 0xff
push edi
call sub_422f60
mov esi [ ebp + 0xc ]
add esp 0xc
test esi esi
je r-xdata
call sub_428ca8
push 0x16
pop esi
mov [ eax ] esi
call sub_428f36
cmp [ esi + 0x4 ] ebx
jg r-xdata
push 0x7
pop eax
cmp [ esi + 0x4 ] eax
jl r-xdata
jl r-xdata
call sub_433e3c
lea eax [ ebp - 0x8 ]
push eax
call sub_433b93
pop ecx
test eax eax
jne r-xdata
jg r-xdata
call sub_428ca8
push 0x16
pop esi
mov [ eax ] esi
jmp r-xdata
cmp [ esi ] ebx
jae r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_428f46
int3
lea eax [ ebp - 0xc ]
push eax
call sub_433bbd
pop ecx
test eax eax
jne r-xdata
cmp [ esi ] 0x93406fff
ja r-xdata
mov eax esi
lea eax [ ebp - 0x4 ]
push eax
call sub_433be7
pop ecx
test eax eax
jne r-xdata
mov ebx [ esi + 0x4 ]
mov ecx [ esi ]
test ebx ebx
jl r-xdata
push esi
push edi
call sub_433c11
pop ecx
pop ecx
test eax eax
jne r-xdata
jg r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] eax
je r-xdata
mov eax [ ebp - 0x4 ]
cdq
sub ecx eax
lea eax [ ebp - 0x14 ]
push eax
sbb ebx edx
mov [ ebp - 0x14 ] ecx
push edi
mov [ ebp - 0x10 ] ebx
call sub_433c11
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x3f480
jbe r-xdata
mov eax [ edi ]
cdq
mov ebx eax
mov esi edx
mov eax [ ebp - 0x4 ]
cdq
sub ebx eax
sbb esi edx
push edi
call sub_433e8c
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] eax
je r-xdata
push 0x0
push 0x3c
push esi
push ebx
call sub_4345d0
mov esi eax
mov ebx edx
mov eax [ edi + 0x4 ]
cdq
add esi eax
push 0x0
push 0x3c
adc ebx edx
push ebx
push esi
call sub_434680
mov [ edi + 0x4 ] eax
test eax eax
jns r-xdata
add eax 0x3c
add ebx 0xffffffc4
mov [ edi ] eax
adc esi 0xffffffff
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x4 ]
cdq
mov ecx eax
mov [ edi + 0x20 ] 0x1
mov eax [ edi ]
mov esi edx
cdq
mov ebx eax
sub ebx ecx
sbb edx esi
mov [ ebp + 0x8 ] edx
mov esi edx
jmp r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_433e8c
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x3c
push ebx
push esi
call sub_4345d0
mov esi eax
mov ebx edx
mov eax [ edi + 0x8 ]
cdq
add esi eax
push 0x0
push 0x18
adc ebx edx
push ebx
push esi
call sub_434680
mov [ edi + 0x8 ] eax
test eax eax
jns r-xdata
add eax 0x3c
add esi 0xffffffc4
mov [ edi + 0x4 ] eax
adc ebx 0xffffffff
push 0x0
push 0x3c
push esi
push ebx
call sub_434680
mov [ edi ] eax
test eax eax
jns r-xdata
mov eax [ ebp - 0xc ]
cdq
sub [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
sbb [ ebp - 0x10 ] edx
push edi
call sub_433c11
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x0
push 0x18
push ebx
push esi
call sub_4345d0
mov ecx eax
test edx edx
jl r-xdata
add eax 0x18
add esi 0xffffffe8
mov [ edi + 0x8 ] eax
adc ebx 0xffffffff
mov [ edi + 0x20 ] 0x1
jmp r-xdata
mov eax [ edi + 0x18 ]
add eax 0x7
add [ edi + 0xc ] ecx
add eax ecx
push 0x7
cdq
pop esi
idiv esi
mov eax [ edi + 0xc ]
mov [ edi + 0x18 ] edx
test eax eax
jg r-xdata
jg r-xdata
add [ edi + 0x1c ] ecx
add eax 0x1f
mov [ edi + 0x10 ] 0xb
mov [ edi + 0xc ] eax
lea eax [ ecx + 0x16d ]
add [ edi + 0x1c ] eax
dec [ edi + 0x14 ]
jmp r-xdata
mov eax [ edi + 0x18 ]
add eax ecx
push 0x7
cdq
pop esi
idiv esi
add [ edi + 0xc ] ecx
mov [ edi + 0x18 ] edx
test ecx ecx
je r-xdata
test edx edx
jg r-xdata
jl r-xdata
test ecx ecx
jae r-xdata
sub_4271fa
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
movzx eax ax
push esi
push edi
cmp eax 0x59
jg r-xdata
cmp eax 0x6d
jg r-xdata
je r-xdata
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
cmp eax 0xfffff894
jl r-xdata
cmp eax 0x49
jg r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x8 ]
test eax eax
js r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x10 ]
test eax eax
js r-xdata
sub eax 0x5a
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
cmp eax 0x1fa3
jg r-xdata
sub eax 0x4d
je r-xdata
je r-xdata
cmp eax 0x17
jg r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x18 ]
test eax eax
js r-xdata
dec eax
je r-xdata
cmp eax 0xb
jle r-xdata
call sub_433e3c
push [ ebp + 0x8 ]
xor esi esi
push 0xffffffff
mov [ ebp + 0xc ] esi
call sub_433b8d
mov ecx [ ebp + 0x10 ]
xor edx edx
mov edi [ ebp + 0x18 ]
mov ebx [ ebp + 0x14 ]
cmp [ ecx + 0x20 ] esi
setne dl
push [ eax + edx * 4 ]
lea eax [ ebp + 0xc ]
push [ edi ]
push [ ebx ]
push eax
call sub_434944
add esp 0x18
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
push 0x64
pop ecx
cdq
idiv ecx
push [ ebp + 0x20 ]
add eax 0x13
push [ ebp + 0x18 ]
imul eax eax 0x64
push [ ebp + 0x14 ]
push 0x4
add eax edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x4 ]
test eax eax
js r-xdata
push 0x6
pop ecx
sub eax ecx
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x8 ]
test eax eax
js r-xdata
sub eax 0x4
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
cmp eax 0xb
jg r-xdata
cmp eax 0x6
jg r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
dec eax
je r-xdata
inc eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp eax 0x50
jne r-xdata
cmp eax 0x16
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x18 ]
test ecx ecx
js r-xdata
dec eax
je r-xdata
push eax
jmp r-xdata
cmp eax 0x3b
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
jl r-xdata
dec eax
dec eax
je r-xdata
cmp eax 0x17
jg r-xdata
xor eax eax
inc eax
jmp r-xdata
sub eax 0x9
je r-xdata
mov ecx [ ebp + 0x1c ]
push [ ecx + 0x150 ]
mov eax [ ebp + 0x1c ]
push [ eax + 0x14c ]
jmp r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
jmp r-xdata
push 0x0
jmp r-xdata
push 0x1
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
test eax eax
js r-xdata
dec eax
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
xor eax eax
inc eax
sub eax ecx
add [ edi ] eax
mov [ edi ] esi
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_428f46
int3
cmp eax 0x22
je r-xdata
cmp ecx 0x6
jg r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x10 ]
test ecx ecx
js r-xdata
dec eax
je r-xdata
call sub_427720
add esp 0x14
jmp r-xdata
jg r-xdata
cmp [ eax ] 0x3b
jg r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x18 ]
test eax eax
js r-xdata
dec eax
dec eax
je r-xdata
push 0xc
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub eax 0x18
je r-xdata
call sub_4277e5
add esp 0xc
push [ ebp + 0x8 ]
call sub_427813
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x20 ]
cdq
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
push 0x64
pop ecx
idiv ecx
jmp r-xdata
xor eax eax
lea eax [ ecx * 2 - 0x2 ]
add [ ebx ] eax
jmp r-xdata
push [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ eax + ecx * 4 + 0xb4 ]
jmp r-xdata
cmp ecx 0xb
jg r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x1c ]
je r-xdata
dec eax
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
push [ eax ]
jmp r-xdata
cmp eax ecx
jg r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x18 ]
test eax eax
js r-xdata
dec eax
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
mov edx ecx
mov ecx [ ebp + 0x14 ]
push 0x25
pop edx
mov eax [ ecx ]
mov [ eax ] dx
mov eax [ ebp + 0x18 ]
add [ ecx ] 0x2
dec [ eax ]
jmp r-xdata
sub eax 0x1c
je r-xdata
jmp r-xdata
push edx
jmp r-xdata
push [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ eax + ecx * 4 + 0xec ]
jmp r-xdata
mov edi [ ebp + 0x18 ]
xor esi esi
mov ebx [ ebp + 0x14 ]
push edi
push ebx
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call sub_427813
add esp 0x18
test eax eax
je r-xdata
mov esi [ ebp + 0x18 ]
mov edi [ ebp + 0x14 ]
push esi
push edi
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x8 ]
call sub_427813
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0xc ] 0x1
jl r-xdata
sub eax 0x6
jne r-xdata
mov ecx eax
cmp eax ecx
jg r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x18 ]
test ecx ecx
js r-xdata
dec eax
je r-xdata
cmp [ edi ] esi
je r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ eax + 0xc ] 0x1f
jg r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x1c ]
test eax eax
js r-xdata
cmp eax 0x16d
jg r-xdata
test eax eax
je r-xdata
cmp ecx 0x6
jg r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x10 ]
test ecx ecx
js r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebx ]
push 0x20
pop ecx
push [ ebp + 0x1c ]
mov [ eax ] cx
add [ ebx ] 0x2
dec [ edi ]
push edi
push ebx
jmp r-xdata
mov eax [ edi ]
push 0x20
pop ecx
push [ ebp + 0x1c ]
mov [ eax ] cx
add [ edi ] 0x2
dec [ esi ]
push esi
push edi
jmp r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
push [ eax + 0xc ]
cmp eax 0x16d
jg r-xdata
cmp eax ecx
jge r-xdata
mov eax [ edx + 0x1c ]
test eax eax
js r-xdata
lea ecx [ eax - 0x1 ]
jmp r-xdata
push [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ eax + ecx * 4 + 0xd0 ]
jmp r-xdata
cmp ecx 0xb
jg r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x8 ]
test eax eax
js r-xdata
push [ ebp + 0x10 ]
push 0x2
push [ ebp + 0x20 ]
inc eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x3
jmp r-xdata
push 0x7
cdq
pop esi
idiv esi
cmp edx ecx
jl r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ eax + ecx * 4 + 0x11c ]
jmp r-xdata
cmp eax 0x17
sub_427720
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x18 ] esi
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
cmp eax [ ecx ]
jae r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_42778f
add esp 0xc
jmp r-xdata
mov [ ecx ] esi
dec eax
push ebx
push edi
mov edi [ ebp + 0x10 ]
lea ebx [ eax + 0x1 ]
test ebx ebx
je r-xdata
pop esi
pop ebp
retn
lea eax [ esi + esi ]
add [ edi ] eax
sub [ ecx ] esi
pop edi
pop ebx
jmp r-xdata
lea ecx [ eax + eax ]
mov eax [ ebp + 0x8 ]
cdq
mov [ ebp + 0x18 ] 0xa
idiv [ ebp + 0x18 ]
mov [ ebp + 0x18 ] eax
add edx 0x30
mov eax [ edi ]
inc esi
mov [ ecx + eax ] dx
lea ecx [ ecx - 0x2 ]
mov eax [ ebp + 0x18 ]
dec ebx
jne r-xdata
mov ecx [ ebp + 0x14 ]
sub_42778f
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ecx ]
cmp [ edi ] 0x1
jbe r-xdata
mov edx [ ecx ]
mov [ ecx ] esi
sub esi 0x2
push ebx
mov ebx [ ebp + 0x8 ]
mov ax [ edx ]
movzx ecx [ esi ]
mov [ esi ] ax
sub esi 0x2
mov [ edx ] cx
add edx 0x2
cmp edx esi
jb r-xdata
pop edi
pop esi
pop ebp
retn
pop ebx
cmp [ edi ] 0x1
ja r-xdata
mov eax ebx
push 0xa
cdq
pop ebx
idiv ebx
mov ebx eax
lea eax [ edx + 0x30 ]
mov [ esi ] ax
add esi 0x2
dec [ edi ]
test ebx ebx
jle r-xdata
sub_4277e5
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
cmp [ ecx ] 0x0
je r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
pop edi
pop esi
mov eax [ esi ]
add edx 0x2
mov [ eax ] di
add [ esi ] 0x2
dec [ ecx ]
jne r-xdata
movzx edi [ edx ]
test di di
je r-xdata
sub_427813
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x20 ] eax
mov eax ebx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x24 ] ecx
push esi
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x1c ] esi
push edi
sub eax 0x0
je r-xdata
mov edi [ ecx + 0x154 ]
dec eax
je r-xdata
movzx edx [ edi ]
test dx dx
jne r-xdata
sub ebx 0x2
mov eax 0x76c
neg ebx
sbb ebx ebx
add ax [ edx + 0x14 ]
mov [ ebp - 0x14 ] ax
not ebx
mov ax [ edx + 0x10 ]
inc ax
mov [ ebp - 0x12 ] ax
mov ax [ edx + 0xc ]
mov [ ebp - 0xe ] ax
mov ax [ edx + 0x8 ]
mov [ ebp - 0xc ] ax
mov ax [ edx + 0x4 ]
mov [ ebp - 0xa ] ax
mov ax [ edx ]
xor edx edx
push edx
mov [ ebp - 0x8 ] ax
xor eax eax
mov [ ebp - 0x6 ] ax
lea eax [ ebp - 0x14 ]
push edx
push edi
push eax
push edx
push [ ecx + 0x160 ]
and ebx 0x1
je r-xdata
mov edi [ ecx + 0x158 ]
jmp r-xdata
mov edi [ ecx + 0x15c ]
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
jmp r-xdata
call sub_434ae6
mov edx eax
mov [ ebp - 0x28 ] eax
call sub_434b2f
mov edx eax
mov [ ebp - 0x28 ] edx
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
je r-xdata
xor eax eax
inc eax
xor esi esi
mov [ ebp - 0x18 ] edi
xor eax eax
movzx ecx dx
mov ebx edi
lea ecx [ edx + edx ]
lea eax [ ecx + 0x8 ]
cmp eax ecx
jbe r-xdata
add esp 0x18
test edx edx
je r-xdata
add ebx 0x2
inc eax
cmp [ ebx ] cx
je r-xdata
movzx ecx dx
mov [ ebp - 0x18 ] ebx
mov ebx [ ebp - 0x24 ]
cmp ecx 0x64
jg r-xdata
xor esi esi
mov [ ebp - 0x18 ] esi
lea edx [ edx * 2 + 0x8 ]
cmp edx 0x400
ja r-xdata
sub ecx 0x68
je r-xdata
je r-xdata
mov esi [ ebp - 0x1c ]
jmp r-xdata
push edx
push esi
push edi
lea eax [ ebp - 0x14 ]
test ebx ebx
mov ebx [ ebp - 0x24 ]
push eax
push 0x0
push [ ebx + 0x160 ]
je r-xdata
push edx
call sub_42588c
mov esi eax
mov [ ebp - 0x18 ] eax
pop ecx
test esi esi
je r-xdata
mov eax edx
call sub_434c20
mov esi esp
mov [ ebp - 0x18 ] esp
test esi esi
je r-xdata
dec eax
je r-xdata
sub ecx 0x5
je r-xdata
dec eax
je r-xdata
cmp ecx 0x27
je r-xdata
call sub_434ae6
call sub_434b2f
jmp r-xdata
mov edx [ ebp - 0x28 ]
jmp r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
xor esi esi
inc esi
dec eax
je r-xdata
dec eax
je r-xdata
sub ecx 0x6
je r-xdata
xor esi esi
inc esi
dec eax
je r-xdata
lea edi [ edi + eax * 2 ]
test al 0x1
je r-xdata
cmp ecx 0x41
je r-xdata
push esi
call sub_427d56
pop ecx
mov ebx [ ebp - 0x1c ]
mov esi [ ebp - 0x20 ]
mov edx eax
add esp 0x18
dec edx
mov edi esi
test edx edx
jle r-xdata
test esi esi
je r-xdata
add esi 0x8
mov [ ebp - 0x18 ] esi
xor eax eax
jmp r-xdata
mov edi [ ebp - 0x18 ]
push 0x49
mov ecx [ ebp - 0x20 ]
add edi 0x2
mov esi [ ebp - 0x1c ]
mov eax [ ecx ]
mov [ eax ] dx
add [ ecx ] 0x2
dec [ esi ]
jmp r-xdata
xor esi esi
inc esi
dec eax
je r-xdata
dec eax
je r-xdata
dec ecx
je r-xdata
pop eax
push esi
mov esi [ ebp - 0x1c ]
push ebx
push esi
push [ ebp - 0x20 ]
push [ ebp - 0x2c ]
push eax
push [ ebp - 0x30 ]
call sub_4271fa
add esp 0x1c
test eax eax
je r-xdata
push 0x64
jmp r-xdata
dec eax
je r-xdata
movzx ecx [ edi ]
test cx cx
je r-xdata
push r--data
push edi
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x48
je r-xdata
mov esi [ ebp - 0x18 ]
mov ecx [ esi ]
mov ax [ edi ]
add edi 0x2
mov [ ecx ] ax
add [ esi ] 0x2
dec [ ebx ]
dec edx
test edx edx
jg r-xdata
lea esp [ ebp - 0x3c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_42c776
mov esp ebp
pop ebp
retn
push 0x4d
jmp r-xdata
jmp r-xdata
xor esi esi
inc esi
dec eax
je r-xdata
mov ecx [ ebp - 0x2c ]
cmp [ ecx + 0x8 ] 0xb
jg r-xdata
sub ecx 0x5
jne r-xdata
push 0x61
jmp r-xdata
dec eax
jne r-xdata
mov esi [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
push r--data
push edi
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
lea ecx [ edi + 0xa ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
dec eax
je r-xdata
cmp ecx 0x4d
je r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
push 0x53
jmp r-xdata
jmp r-xdata
mov edx [ ebx + 0x150 ]
mov edx [ ebx + 0x14c ]
jmp r-xdata
dec eax
dec eax
je r-xdata
push 0x41
jmp r-xdata
push 0x27
pop eax
add edi 0x2
cmp cx ax
je r-xdata
push 0x70
jmp r-xdata
lea eax [ edi + 0x6 ]
mov [ ebp - 0x18 ] eax
xor esi esi
inc esi
dec eax
je r-xdata
dec eax
je r-xdata
cmp ecx 0x61
jne r-xdata
movzx ecx [ edx ]
test cx cx
je r-xdata
cmp [ esi ] 0x0
jbe r-xdata
mov esi [ ebp - 0x1c ]
cmp eax 0x1
jne r-xdata
push 0x79
jmp r-xdata
dec eax
dec eax
jne r-xdata
mov eax [ edx ]
mov [ eax ] cx
add [ edx ] 0x2
dec [ esi ]
movzx ecx [ edi ]
test cx cx
jne r-xdata
push 0x48
jmp r-xdata
jmp r-xdata
xor esi esi
inc esi
dec eax
je r-xdata
mov ebx [ ebp - 0x20 ]
mov edi [ ebp - 0x20 ]
mov ax [ edx ]
mov ecx [ edi ]
mov [ ecx ] ax
add [ edi ] 0x2
dec [ esi ]
jmp r-xdata
push 0x59
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
jmp r-xdata
push 0x6d
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebx ]
add edx 0x2
mov [ eax ] cx
add [ ebx ] 0x2
dec [ esi ]
movzx ecx [ edx ]
test cx cx
jne r-xdata
push 0x62
jmp r-xdata
dec eax
jne r-xdata
cmp [ esi ] 0x0
jbe r-xdata
jmp r-xdata
push 0x42
jmp r-xdata
sub_427c13
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
push ebx
push esi
push edi
push [ ebp + 0x1c ]
xor esi esi
mov [ ebp - 0xc ] eax
call sub_422ff5
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x14 ]
and [ ecx + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x10 ]
xor ecx ecx
mov [ eax ] cx
test edi edi
je r-xdata
mov edx [ ebp + 0x18 ]
test edx edx
jne r-xdata
mov eax ebx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x1c ]
mov edx [ eax + 0x9c ]
mov [ ebp + 0x18 ] edx
mov eax esi
mov ecx [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] edx
ja r-xdata
test eax eax
je r-xdata
mov ebx [ ebp - 0x8 ]
cmp bx 0x25
mov ebx [ ebp + 0xc ]
je r-xdata
call sub_428ca8
mov [ eax ] 0x22
jmp r-xdata
xor eax eax
mov esi ebx
mov [ ecx ] ax
sub esi [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp + 0x14 ] esi
je r-xdata
mov eax [ ebp - 0x8 ]
add edi 0x2
mov [ ecx ] ax
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
add ecx 0x2
dec eax
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add edi 0x2
mov eax esi
cmp [ edi ] 0x23
jne r-xdata
mov edx [ ebp + 0x18 ]
test eax eax
jne r-xdata
push eax
push edx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x14 ]
movzx eax [ edi ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_4271fa
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
inc eax
add edi 0x2
movzx ebx [ edi ]
mov [ ebp - 0x8 ] ebx
movzx ebx bx
test ebx ebx
mov ebx [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov ecx [ ebp + 0x8 ]
add edi 0x2
mov eax [ ebp - 0x4 ]
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
xor edx edx
mov [ ecx ] dx
test eax eax
jne r-xdata
sub_427d56
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_422ed5
pop ecx
sub_427d91
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx ecx [ eax ]
test cx cx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
movzx ebx [ edi ]
add eax 0x2
movzx ecx [ eax ]
test cx cx
jne r-xdata
mov edx ebx
mov esi edi
test bx bx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
add esi 0x2
movzx edx [ esi ]
test dx dx
jne r-xdata
cmp dx cx
je r-xdata
sub_427dd3
push 0x14
push r--data
call sub_428a80
call sub_429f88
movzx esi ax
push 0x2
call sub_434fba
pop ecx
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
mov [ ebp - 0x1c ] ebx
call sub_428cfc
test eax eax
jne r-xdata
xor ebx ebx
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_429c66
test eax eax
jne r-xdata
push 0x1c
call sub_427f23
cmp [ eax + r--data ] ebx
setne bl
call sub_429d4b
and [ ebp - 0x4 ] 0x0
call sub_42d752
test eax eax
jns r-xdata
push 0x10
call sub_427f23
call [ GetCommandLineW@IAT ]
mov [ rw-data ] eax
call sub_4350a3
mov [ rw-data ] eax
call sub_434c9b
test eax eax
jns r-xdata
push 0x1b
call sub_427f23
call sub_434ed8
test eax eax
jns r-xdata
push 0x8
call sub_423235
push 0x1
call sub_42326f
pop ecx
test eax eax
je r-xdata
push 0x9
call sub_423235
call sub_435100
push esi
push eax
push 0x0
push __dos_header
call sub_40492e
mov esi eax
mov [ ebp - 0x24 ] esi
test ebx ebx
jne r-xdata
push eax
call sub_423235
call sub_423260
jmp sub_427f14
push esi
call sub_4234d8
sub_427f60
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_428434 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_428338 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_428434 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4281ac ]
jmp [ ecx * 4 + jump_table_42822c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_428298 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_428434 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_428298 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_428434 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_428434 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_428434 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_428298 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_428298 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_428298 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_428298 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_4285c3
call sub_42a6b5
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_42a6de
pop ecx
push 0x3
call sub_4232f3
int3
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push 0x1
push 0x40000015
push 0x3
call sub_428dd9
add esp 0xc
push 0x7
pop ecx
int 0x29
sub_42862e
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_42865c
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42865c
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_4286f2
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
push [ edi + 0x4 ]
mov ecx esi
call sub_4286b4
jmp r-xdata
sub_42868f
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_4286f2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422ed5#3
pop ecx
sub_4286b4
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
mov ebx ecx
je r-xdata
pop ebx
pop ebp
retn 0x4
push edi
push [ ebp + 0x8 ]
call sub_4238c0
lea edi [ eax + 0x1 ]
push edi
call sub_42588c
mov [ ebx + 0x4 ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
pop edi
push [ ebp + 0x8 ]
push edi
push eax
call sub_434732
add esp 0xc
mov [ ebx + 0x8 ] 0x1
sub_42871b
push ebp
mov ebp esp
sub esp 0x20
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] esi
test esi esi
je r-xdata
test [ esi ] 0x10
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
test [ esi ] 0x8
je r-xdata
mov ecx [ edi ]
sub ecx 0x4
push ecx
mov eax [ ecx ]
mov esi [ eax + 0x18 ]
call [ eax + 0x20 ]
mov [ ebp - 0xc ] 0x1994000
sub_42878c
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_42877e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422ed5#3
pop ecx
sub_4287ab
push ebp
mov ebp esp
and [ rw-data ] 0x0
sub esp 0x1c
push ebx
xor ebx ebx
inc ebx
or [ rw-data ] ebx
push 0xa
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
mov [ rw-data ] ebx
xor eax eax
cpuid
push esi
mov esi [ rw-data ]
push edi
lea edi [ ebp - 0x1c ]
or esi 0x2
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
xor ecx 0x49656e69
mov eax [ ebp - 0x14 ]
xor eax 0x6c65746e
mov [ rw-data ] esi
or ecx eax
mov eax [ ebp - 0x18 ]
xor eax 0x756e6547
or ecx eax
neg ecx
push 0x1
sbb cl cl
pop eax
inc cl
push 0x0
pop ecx
cpuid
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] ecx
je r-xdata
mov edi [ rw-data ]
mov eax [ ebp - 0x1c ]
and eax 0xfff3ff0
cmp eax 0x106c0
je r-xdata
xor eax eax
push 0x7
xor ecx ecx
lea esi [ ebp - 0x1c ]
pop eax
cpuid
mov [ esi ] eax
mov eax esi
mov esi [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x18 ]
test eax 0x200
je r-xdata
mov edi [ rw-data ]
or edi 0x1
mov [ rw-data ] edi
jmp r-xdata
cmp eax 0x20660
je r-xdata
pop edi
pop esi
or esi 0x4
mov [ rw-data ] 0x2
mov [ rw-data ] esi
test ecx 0x8000000
je r-xdata
test ecx 0x100000
je r-xdata
or edi 0x2
mov [ rw-data ] edi
jmp r-xdata
cmp [ ebp - 0xc ] 0x7
jl r-xdata
cmp eax 0x20670
je r-xdata
test ecx 0x10000000
je r-xdata
cmp eax 0x30650
je r-xdata
or esi 0x8
mov [ rw-data ] 0x3
mov [ rw-data ] esi
test al 0x20
je r-xdata
cmp eax 0x30660
je r-xdata
or esi 0x20
mov [ rw-data ] 0x5
mov [ rw-data ] esi
cmp eax 0x30670
jne r-xdata
sub_428924
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
or eax 0xffffffff
pop ebp
retn
sub_428955
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call sub_42a2b2
add esi 0x3e8
pop ecx
cmp esi [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_435376
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_42899d
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ rw-data ]
xor esi esi
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test edi edi
je r-xdata
push esi
call sub_42a2b2
mov edi [ rw-data ]
add esi 0x3e8
pop ecx
cmp esi edi
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0x8 ]
call sub_42588c
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
sub_4289e4
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call sub_42a2b2
add esi 0x3e8
pop ecx
cmp esi [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_435262
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_428a2e
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call sub_42a2b2
add esi 0x3e8
pop ecx
cmp esi [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43530d
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_428a80
push sub_428ae0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_428ae0
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov edi [ ebx + 0x8 ]
lea esi [ ebx + 0x10 ]
xor edi [ rw-data ]
mov [ ebp - 0xc ] 0x1
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0xc ]
add ecx esi
xor ecx [ eax + esi ]
call sub_42c776
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_42c776
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebx - 0x4 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x8 ] eax
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push esi
mov ecx ebx
mov edx 0xfffffffe
call sub_430b6b
lea eax [ eax + eax * 2 ]
lea eax [ eax + 0x4 ]
mov ecx [ edi + eax * 4 + 0x4 ]
lea eax [ edi + eax * 4 ]
mov ebx [ eax ]
mov [ ebp - 0x10 ] eax
test ecx ecx
je r-xdata
mov edx [ edi + 0x8 ]
mov ecx [ edi + 0xc ]
add ecx esi
xor ecx [ edx + esi ]
call sub_42c776
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_42c776
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_430b22
mov cl 0x1
mov [ ebp - 0x1 ] cl
test eax eax
js r-xdata
test cl cl
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jle r-xdata
jmp r-xdata
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov [ ebp - 0x8 ] ebx
mov eax ebx
cmp ebx 0xfffffffe
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_430b52
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
cmp [ eax + 0xc ] edx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push esi
mov ecx eax
call sub_430b6b
mov eax [ ebp + 0xc ]
push rw-data
call sub_42a560
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0xc ]
add ecx esi
xor ecx [ eax + esi ]
call sub_42c776
mov ecx [ ebp - 0x10 ]
mov edx esi
mov ecx [ ecx + 0x8 ]
call sub_430b39
int3
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call [ rw-data ]
add esp 0x8
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_42c776
sub_428c87
push ebp
mov ebp esp
push esi
call sub_428c74
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_428cbb
pop ecx
mov esi eax
call sub_428ca8
mov [ eax ] esi
pop esi
pop ebp
retn
sub_428cbb
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + rw-data ]
pop ebp
retn
inc eax
cmp eax 0x2d
jb r-xdata
cmp ecx [ eax * 8 + rw-data ]
je r-xdata
lea eax [ ecx - 0x13 ]
cmp eax 0x11
ja r-xdata
lea eax [ ecx - 0xbc ]
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_428dd9
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
push edi
je r-xdata
and [ ebp - 0x320 ] 0x0
lea eax [ ebp - 0x31c ]
push 0x4c
push 0x0
push eax
call sub_422f60
lea eax [ ebp - 0x320 ]
add esp 0xc
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov eax [ eax - 0x4 ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x320 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x31c ] eax
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
mov edi eax
lea eax [ ebp - 0x328 ]
push eax
call sub_42a2d5
pop ecx
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_4353f0
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_42c776
mov esp ebp
pop ebp
retn
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call sub_4353f0
pop ecx
sub_428f0b
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_428f46
int3
pop ebp
jmp eax
sub_428f46
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_428dd9
push esi
call sub_42a2c0
add esp 0x10
pop esi
retn
push 0x5
pop ecx
int 0x29
sub_428f71
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
push ebx
push esi
inc ecx
push edi
mov eax ecx
[ edx ] eax
mov esi [ edx + 0x78 ]
test esi esi
je r-xdata
mov esi [ edx + 0x80 ]
test esi esi
je r-xdata
mov eax ecx
[ esi ] eax
mov esi [ edx + 0x7c ]
test esi esi
je r-xdata
mov eax ecx
[ esi ] eax
mov esi [ edx + 0x88 ]
test esi esi
je r-xdata
mov eax ecx
[ esi ] eax
push 0x6
lea esi [ edx + 0x1c ]
pop ebx
mov eax ecx
[ esi ] eax
cmp [ esi - 0xc ] 0x0
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
add esi 0x10
dec ebx
jne r-xdata
mov edi [ esi - 0x4 ]
test edi edi
je r-xdata
mov eax ecx
[ edi ] eax
cmp [ esi - 0x8 ] rw-data
je r-xdata
mov eax [ edx + 0x9c ]
add eax 0xb0
[ eax ] ecx
inc ecx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ecx
[ edi ] eax
sub_429006
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov eax [ esi + 0x84 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0x9c ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0x78 ]
test eax eax
je r-xdata
push 0x6
pop eax
lea ebx [ esi + 0xa0 ]
mov [ ebp + 0x8 ] eax
lea edi [ esi + 0x1c ]
cmp [ eax + 0xb0 ] ebx
jne r-xdata
mov eax [ esi + 0x8c ]
sub eax 0xfe
push eax
call sub_422ed5
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_422ed5
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_422ed5
push [ esi + 0x88 ]
call sub_422ed5
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0xc ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push eax
call sub_43555b
push [ esi + 0x9c ]
call sub_422ed5
pop ecx
pop ecx
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
add ebx 0x4
add edi 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
mov eax [ edi - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_422ed5
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_422ed5
push [ ebx ]
call sub_422ed5
pop ecx
pop ecx
push [ esi + 0x78 ]
call sub_422ed5
push [ esi + 0x84 ]
call sub_422ed5
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_422ed5
push [ esi + 0x84 ]
call sub_4353f8
pop ecx
pop ecx
push eax
call sub_422ed5
pop ecx
push eax
call sub_422ed5
push [ esi + 0x84 ]
call sub_4354f4
pop ecx
pop ecx
sub_429160
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
mov eax edx
pop ebp
retn
push ebx
push esi
or esi 0xffffffff
push edi
mov eax esi
[ edx ] eax
mov ecx [ edx + 0x78 ]
test ecx ecx
je r-xdata
mov ecx [ edx + 0x80 ]
test ecx ecx
je r-xdata
mov eax esi
[ ecx ] eax
mov ecx [ edx + 0x7c ]
test ecx ecx
je r-xdata
mov eax esi
[ ecx ] eax
mov ecx [ edx + 0x88 ]
test ecx ecx
je r-xdata
mov eax esi
[ ecx ] eax
push 0x6
lea ecx [ edx + 0x1c ]
pop ebx
mov eax esi
[ ecx ] eax
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov edi [ ecx ]
test edi edi
je r-xdata
add ecx 0x10
dec ebx
jne r-xdata
mov edi [ ecx - 0x4 ]
test edi edi
je r-xdata
mov eax esi
[ edi ] eax
cmp [ ecx - 0x8 ] rw-data
je r-xdata
mov ecx [ edx + 0x9c ]
add ecx 0xb0
[ ecx ] esi
dec esi
pop edi
pop esi
pop ebx
mov eax esi
[ edi ] eax
sub_429200
push 0xc
push r--data
call sub_428a80
and [ ebp - 0x1c ] 0x0
call sub_429b2c
mov esi eax
mov ecx [ rw-data ]
test [ esi + 0x70 ] ecx
je r-xdata
push 0xc
call sub_429d8b
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
lea eax [ esi + 0x6c ]
push eax
call sub_429280
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_429277
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_429b2c
mov esi [ eax + 0x6c ]
mov eax esi
call sub_428ac5
retn
push 0x20
call sub_423235
sub_429280
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_428f71
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_429160
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_429006
pop ecx
sub_4292e9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x3a4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0xd
je r-xdata
mov eax [ r--data ]
pop ebp
retn
dec eax
je r-xdata
mov eax [ r--data ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_429323
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push 0x0
call sub_422ff5
and [ rw-data ] 0x0
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] 0x1
mov eax [ eax + 0x4 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_429391
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x101
xor edi edi
lea esi [ ebx + 0x18 ]
push edi
push esi
call sub_422f60
mov [ ebx + 0x4 ] edi
xor eax eax
mov [ ebx + 0x8 ] edi
add esp 0xc
mov [ ebx + 0x21c ] edi
mov ecx 0x101
lea edi [ ebx + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi rw-data
sub edi ebx
mov al [ edi + esi ]
mov [ esi ] al
inc esi
dec ecx
jne r-xdata
lea ecx [ ebx + 0x119 ]
mov edx 0x100
mov al [ ecx + edi ]
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4293f0
push ebp
mov ebp esp
sub esp 0x520
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x518 ]
push edi
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
xor ebx ebx
mov edi 0x100
test eax eax
je r-xdata
push 0xffffff9f
lea edx [ esi + 0x119 ]
mov ecx ebx
pop eax
sub eax edx
mov [ ebp - 0x520 ] eax
mov eax ebx
cmp [ ebp - 0x51c ] 0x19
ja r-xdata
or [ esi + ecx + 0x19 ] 0x10
lea eax [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
lea ecx [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
jmp r-xdata
mov [ edx ] bl
lea eax [ esi + ecx ]
or [ eax + 0x19 ] 0x20
lea eax [ ecx - 0x20 ]
mov [ edx ] al
jmp r-xdata
test al al
jne r-xdata
add edx ecx
add eax edx
mov [ ebp - 0x51c ] eax
add eax 0x20
cmp eax 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_42c776
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x520 ]
lea edx [ esi + 0x119 ]
inc ecx
cmp ecx edi
jb r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax al
jmp r-xdata
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x504 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push ebx
call sub_4359d3
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0x21c ]
push ebx
call sub_42f2e2
add esp 0x40
lea eax [ ebp - 0x304 ]
push ebx
push [ esi + 0x4 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0x21c ]
push ebx
call sub_42f2e2
add esp 0x24
mov ecx ebx
cmp eax edx
jbe r-xdata
test al 0x2
je r-xdata
or [ esi + ecx + 0x19 ] 0x10
mov al [ ebp + ecx - 0x204 ]
jmp r-xdata
cmp eax edi
jae r-xdata
add ecx 0x2
mov al [ ecx ]
mov [ esi + ecx + 0x119 ] bl
or [ esi + ecx + 0x19 ] 0x20
mov al [ ebp + ecx - 0x304 ]
mov [ esi + ecx + 0x119 ] al
jmp r-xdata
mov [ ebp + eax - 0x104 ] 0x20
inc eax
movzx eax [ ebp + ecx * 2 - 0x504 ]
test al 0x1
je r-xdata
jmp r-xdata
inc ecx
cmp ecx edi
jb r-xdata
sub_429582
push 0xc
push r--data
call sub_428a80
xor esi esi
mov [ ebp - 0x1c ] esi
call sub_429b2c
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x70 ] ecx
je r-xdata
push 0xd
call sub_429d8b
pop ecx
mov [ ebp - 0x4 ] esi
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] esi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42961f
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
xor eax eax
inc eax
[ esi ] eax
or eax 0xffffffff
[ esi ] eax
jne r-xdata
mov eax esi
call sub_428ac5
retn
push 0x20
call sub_423235
cmp esi rw-data
je r-xdata
push esi
call sub_422ed5
pop ecx
sub_429628
push 0x10
push r--data
call sub_428a80
or edi 0xffffffff
call sub_429b2c
mov ebx eax
mov [ ebp - 0x20 ] ebx
call sub_429582
mov esi [ ebx + 0x68 ]
push [ ebp + 0x8 ]
call sub_429323
pop ecx
mov [ ebp + 0x8 ] eax
cmp eax [ esi + 0x4 ]
je r-xdata
xor edi edi
push 0x220
call sub_42899d
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
call sub_428ac5
retn
mov ecx 0x88
mov eax [ ebp - 0x20 ]
mov esi [ eax + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
xor esi esi
mov [ ebx ] esi
push ebx
push [ ebp + 0x8 ]
call sub_4297d0
pop ecx
pop ecx
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x68 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ eax + 0x68 ] ebx
xor eax eax
inc eax
[ ebx ] eax
mov eax [ ebp - 0x20 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov ecx [ eax + 0x68 ]
cmp ecx rw-data
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_422ed5
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push ecx
call sub_422ed5
pop ecx
mov eax [ ebp - 0x20 ]
push 0xd
call sub_429d8b
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x21c ]
mov [ rw-data ] eax
mov ecx esi
mov ecx esi
mov ax [ ebx + ecx * 2 + 0xc ]
mov [ ecx * 2 + rw-data ] ax
inc ecx
jmp r-xdata
mov [ ebp - 0x1c ] esi
cmp esi 0x100
jge r-xdata
mov al [ ecx + ebx + 0x18 ]
mov [ ecx + rw-data ] al
inc ecx
jmp r-xdata
mov [ ebp - 0x1c ] ecx
cmp ecx 0x5
jge r-xdata
mov eax [ rw-data ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov al [ esi + ebx + 0x119 ]
mov [ esi + rw-data ] al
inc esi
jmp r-xdata
mov [ ebp - 0x1c ] ecx
cmp ecx 0x101
jge r-xdata
mov [ rw-data ] ebx
xor eax eax
inc eax
[ ebx ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42979a
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
push eax
call sub_422ed5
pop ecx
sub_4297d0
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
call sub_429323
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push edi
xor edi edi
mov ecx edi
mov eax edi
mov [ ebp - 0x1c ] ecx
push esi
call sub_429391
pop ecx
xor eax eax
jmp r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_422f60
add esp 0xc
imul eax [ ebp - 0x1c ] 0x30
mov [ ebp - 0x20 ] eax
lea eax [ eax + rw-data ]
mov [ ebp - 0x1c ] eax
inc ecx
add eax 0x30
mov [ ebp - 0x1c ] ecx
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_42c776
mov esp ebp
pop ebp
retn
inc edi
add eax 0x8
mov [ ebp - 0x1c ] eax
cmp edi 0x4
jb r-xdata
mov al [ ecx + 0x1 ]
test al al
je r-xdata
cmp [ eax + rw-data ] ebx
je r-xdata
cmp ebx 0xfde8
je r-xdata
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
push ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x1
call sub_4292e9
add esp 0x4
mov [ esi + 0x21c ] eax
mov eax [ ebp - 0x20 ]
lea ecx [ esi + 0xc ]
push 0x6
lea edx [ eax + rw-data ]
pop edi
mov eax [ ebp - 0x1c ]
movzx edx [ ecx ]
movzx eax al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx 0xfde9
je r-xdata
mov ax [ edx ]
lea edx [ edx + 0x2 ]
mov [ ecx ] ax
lea ecx [ ecx + 0x2 ]
dec edi
jne r-xdata
push esi
call sub_4293f0
cmp edx eax
jbe r-xdata
pop edi
movzx eax bx
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edx 0x100
jae r-xdata
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ edi + rw-data ]
or [ esi + edx + 0x19 ] al
inc edx
movzx eax [ ecx + 0x1 ]
cmp [ rw-data ] edi
je r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_422f60
mov [ esi + 0x4 ] ebx
add esp 0xc
xor ebx ebx
mov [ esi + 0x21c ] edi
inc ebx
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
push esi
call sub_429391
jmp r-xdata
mov [ esi + 0x8 ] edi
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
pop ecx
xor eax eax
lea eax [ esi + 0x1a ]
mov ecx 0xfe
mov cl [ eax + 0x1 ]
test cl cl
je r-xdata
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
push [ esi + 0x4 ]
call sub_4292e9
add esp 0x4
mov [ esi + 0x21c ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
movzx edx cl
movzx ecx [ eax ]
jmp r-xdata
xor eax eax
lea edi [ esi + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp ecx edx
jbe r-xdata
or [ esi + ecx + 0x19 ] 0x4
inc ecx
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
sub_4299c1
push 0x8
push r--data
call sub_428a80
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_428ac5
retn 0x4
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x2c ] 0x0
je r-xdata
push [ esi + 0x24 ]
call sub_422ed5
pop ecx
cmp [ esi + 0x34 ] 0x0
je r-xdata
push [ esi + 0x2c ]
call sub_422ed5
pop ecx
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0x34 ]
call sub_422ed5
pop ecx
cmp [ esi + 0x40 ] 0x0
je r-xdata
push [ esi + 0x3c ]
call sub_422ed5
pop ecx
cmp [ esi + 0x44 ] 0x0
je r-xdata
push [ esi + 0x40 ]
call sub_422ed5
pop ecx
cmp [ esi + 0x48 ] 0x0
je r-xdata
push [ esi + 0x44 ]
call sub_422ed5
pop ecx
cmp [ esi + 0x5c ] r--data
je r-xdata
push [ esi + 0x48 ]
call sub_422ed5
pop ecx
push 0xd
call sub_429d8b
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
push [ esi + 0x5c ]
call sub_422ed5
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_429ae1
push 0xc
call sub_429d8b
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_429aed
push esi
call sub_422ed5
pop ecx
push edi
call sub_429160
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp ecx rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push ecx
call sub_422ed5
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_429006
pop ecx
sub_429af6
push ebp
mov ebp esp
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x0
push eax
call sub_429f66
pop ecx
pop ecx
push esi
call sub_4299c1
pop esi
push eax
call sub_429f47
mov esi eax
mov eax [ rw-data ]
pop ecx
sub_429b44
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_429f47
mov esi eax
pop ecx
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x3bc
push 0x1
call sub_428955
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
call sub_429f66
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
call sub_422ed5
pop ecx
xor esi esi
push 0x0
push esi
call sub_429bb3
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_429bb3
push 0x8
push r--data
call sub_428a80
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
push 0x43
pop eax
mov [ esi + 0xb8 ] ax
mov [ esi + 0x1be ] ax
mov [ esi + 0x68 ] rw-data
and [ esi + 0x3b8 ] 0x0
push 0xd
call sub_429d8b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x68 ]
mov ecx edi
[ eax ] ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_429c54
push 0xc
call sub_429d8b
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_428f71
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_429c5d
call sub_428ac5
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_429c66
call sub_423307
call sub_429ebc
test eax eax
jne r-xdata
push sub_4299c1
call sub_429f0a
mov [ rw-data ] eax
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_429cdc
xor eax eax
retn
push esi
push 0x3bc
push 0x1
call sub_428955
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_429cdc
xor eax eax
pop esi
retn
push esi
push [ rw-data ]
call sub_429f66
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x0
push esi
call sub_429bb3
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
pop esi
retn
sub_429cf9
push 0x8
push r--data
call sub_428a80
mov esi rw-data
cmp [ rw-data ] esi
je r-xdata
call sub_428ac5
retn
push 0xc
call sub_429d8b
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push rw-data
call sub_429280
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_429d42
sub_429d4b
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_429d6b
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_429d8b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi * 8 + rw-data ] 0x0
jne r-xdata
push [ esi * 8 + rw-data ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push esi
call sub_429e13
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_423235
sub_429dbf
push esi
push edi
mov esi rw-data
mov edi esi
push ebx
add edi 0x8
cmp edi rw-data
jl r-xdata
cmp [ edi + 0x4 ] 0x1
je r-xdata
mov ebx [ edi ]
test ebx ebx
je r-xdata
pop ebx
push ebx
call [ DeleteCriticalSection@IAT ]
push ebx
call sub_422ed5
and [ edi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
retn
push [ esi ]
call [ DeleteCriticalSection@IAT ]
sub_429e13
push 0x8
push r--data
call sub_428a80
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp [ edi * 8 + rw-data ] ebx
jne r-xdata
call sub_42a2eb
push 0x1e
call sub_42a348
push 0xff
call sub_42321f
xor eax eax
inc eax
push 0x18
call sub_42899d
pop ecx
mov esi eax
test esi esi
jne r-xdata
push 0xa
call sub_429d8b
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ edi * 8 + rw-data ] ebx
jne r-xdata
call sub_428ca8
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
push esi
call sub_422ed5
pop ecx
push ebx
push 0xfa0
push esi
call sub_429fab
add esp 0xc
mov [ edi * 8 + rw-data ] esi
jmp r-xdata
call sub_428ac5
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_429eb3
sub_429ebc
push esi
push edi
mov esi rw-data
mov edi rw-data
add esi 0x8
cmp esi rw-data
jl r-xdata
push 0x0
mov [ esi ] edi
add edi 0x18
push 0xfa0
push [ esi ]
call sub_429fab
add esp 0xc
cmp [ esi + 0x4 ] 0x1
jne r-xdata
xor eax eax
pop edi
inc eax
pop esi
retn
sub_429f66
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsSetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_429f88
push ebp
mov ebp esp
sub esp 0x44
lea eax [ ebp - 0x44 ]
push eax
call [ GetStartupInfoW@IAT ]
test [ ebp - 0x18 ] 0x1
je r-xdata
push 0xa
pop eax
movzx eax [ ebp - 0x14 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_429fab
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
xor eax eax
inc eax
pop ebp
retn
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_429fd9
push ebp
mov ebp esp
push ecx
push esi
mov esi [ rw-data ]
test esi esi
jns r-xdata
xor eax eax
test esi esi
pop esi
setg al
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
xor esi esi
xor eax [ rw-data ]
mov [ ebp - 0x4 ] esi
je r-xdata
mov [ rw-data ] esi
push esi
lea ecx [ ebp - 0x4 ]
push ecx
call eax
cmp eax 0x7a
jne r-xdata
inc esi
sub_42a019
push esi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ GetProcAddress@IAT ]
mov edi eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
mov [ rw-data ] eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
mov [ rw-data ] eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
pop edi
mov [ rw-data ] eax
pop esi
retn
sub_42a2eb
push 0x3
call sub_434fc7
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_42a348
push 0xff
call sub_42a348
pop ecx
pop ecx
push 0x3
call sub_434fc7
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_42a324
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x17
jb r-xdata
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_42a348
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_42a324
mov edi eax
pop ecx
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_42c776
mov esp ebp
pop ebp
retn
push ebx
push 0x3
call sub_434fc7
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x3
call sub_434fc7
pop ecx
test eax eax
jne r-xdata
pop ebx
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor ebx ebx
mov ecx ebx
push r--data
push 0x314
push rw-data
call sub_434787
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
mov [ ebp - 0x5 ] bl
push eax
lea eax [ ebp - 0x1f8 ]
push eax
call sub_4238c0
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc ecx
cmp ecx 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_428f46
int3
push 0x104
push rw-data
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov esi 0x2fb
test eax eax
jne r-xdata
mov al [ edi + ecx * 2 ]
mov [ ebp + ecx - 0x1f8 ] al
cmp [ edi + ecx * 2 ] bx
je r-xdata
push rw-data
call sub_422d7c
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push esi
push rw-data
call sub_434787
add esp 0xc
test eax eax
jne r-xdata
push r--data
push 0x314
mov esi rw-data
push esi
call sub_435b71
add esp 0xc
test eax eax
jne r-xdata
push rw-data
call sub_422d7c
push 0x3
push r--data
lea ecx [ eax * 2 + rw-data ]
mov eax ecx
sub eax rw-data
sar eax 0x1
sub esi eax
push esi
push ecx
call sub_42d2c8
add esp 0x14
test eax eax
jne r-xdata
push edi
push 0x314
push esi
call sub_435b71
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push esi
call sub_435bfc
add esp 0xc
jmp r-xdata
sub_42a510
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push ebx
push esi
push edi
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
movzx ebx [ ecx + 0x6 ]
add eax 0x18
add eax ecx
test ebx ebx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx ebx
jb r-xdata
mov ecx [ eax + 0x8 ]
add ecx esi
cmp edi ecx
jb r-xdata
mov esi [ eax + 0xc ]
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42a560
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_428ae0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_42a620
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_42a510
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a620
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x5a4d
cmp [ eax ] cx
je r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
xor eax eax
cmp [ ecx ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov edx 0x10b
cmp [ ecx + 0x18 ] dx
sete al
sub_42a6de
push 0x24
push r--data
call sub_428a80
and [ ebp - 0x2c ] 0x0
and [ ebp - 0x30 ] 0x0
xor ebx ebx
mov [ ebp - 0x20 ] ebx
xor edi edi
mov [ ebp - 0x28 ] edi
mov esi [ ebp + 0x8 ]
cmp esi 0xb
jg r-xdata
mov eax esi
sub eax 0xf
je r-xdata
je r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_429b44
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax esi
push 0x2
pop ecx
sub eax ecx
je r-xdata
xor eax eax
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
push esi
call sub_42a899
pop ecx
pop ecx
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax [ eax ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
test ebx ebx
je r-xdata
push 0x3
call sub_4232f3
xor ebx ebx
inc ebx
mov [ ebp - 0x20 ] ebx
push eax
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
jmp r-xdata
mov [ ebp - 0x24 ] eax
cmp eax 0x1
je r-xdata
call sub_428ac5
retn
sub eax ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi 0x8
je r-xdata
push 0x0
call sub_429d8b
pop ecx
sub eax ecx
jne r-xdata
mov eax [ edi + 0x60 ]
mov [ ebp - 0x2c ] eax
and [ edi + 0x60 ] 0x0
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
mov eax [ edi + 0x64 ]
mov [ ebp - 0x30 ] eax
mov [ edi + 0x64 ] 0x8c
cmp esi 0x4
jne r-xdata
push esi
call [ ebp - 0x24 ]
push [ edi + 0x64 ]
push esi
call [ ebp - 0x24 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov edx ecx
mov [ ebp - 0x34 ] edx
cmp esi 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
pop ecx
cmp esi 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a85f
cmp esi 0x8
jne r-xdata
imul ecx edx 0xc
mov eax [ edi + 0x5c ]
and [ eax + ecx + 0x8 ] 0x0
inc edx
mov [ ebp - 0x34 ] edx
mov ecx [ r--data ]
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp esi 0x4
jne r-xdata
mov eax [ r--data ]
add eax ecx
cmp edx eax
jge r-xdata
sub_42a899
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov ecx [ r--data ]
push esi
mov esi [ ebp + 0x8 ]
imul ecx ecx 0xc
add ecx [ ebp + 0xc ]
cmp edx ecx
jae r-xdata
imul eax ecx 0xc
add edx 0xc
add eax [ ebp + 0xc ]
cmp edx eax
jb r-xdata
xor eax eax
cmp [ edx + 0x4 ] esi
jne r-xdata
cmp [ edx + 0x4 ] esi
je r-xdata
mov eax edx
jmp r-xdata
pop esi
pop ebp
retn
sub_42a8e0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_424bad
and [ esi + 0xc ] 0xffffeeff
xor eax eax
pop ecx
mov [ esi + 0x18 ] eax
mov [ esi ] eax
mov [ esi + 0x8 ] eax
sub_42a911
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_424856
push eax
call sub_435deb
pop ecx
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
push edi
call sub_426d88
add eax 0x20
cmp esi eax
jne r-xdata
call sub_426d88
add eax 0x40
cmp esi eax
jne r-xdata
xor edi edi
jmp r-xdata
xor eax eax
xor edi edi
inc edi
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
cmp [ edi * 4 + rw-data ] 0x0
push ebx
mov ebx 0x1000
jne r-xdata
mov ecx [ edi * 4 + rw-data ]
mov [ esi + 0x8 ] ecx
mov [ esi ] ecx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_42899d
mov [ edi * 4 + rw-data ] eax
pop ecx
test eax eax
jne r-xdata
pop edi
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
inc eax
pop ebx
jmp r-xdata
sub_42a9c0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_42aa55
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0xc
mov ecx [ ebp + 0x8 ]
test eax eax
je r-xdata
test ecx ecx
jne r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
xor eax eax
jmp r-xdata
push ebx
push esi
push edi
movzx edi [ ecx ]
lea esi [ ecx + 0x2 ]
xor ebx ebx
jmp r-xdata
cmp eax 0x2
jl r-xdata
mov esp ebp
pop ebp
retn
push 0x8
push edi
call sub_42af48
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp eax 0x24
jg r-xdata
movzx edi [ esi ]
add esi 0x2
mov eax [ ebp + 0x14 ]
cmp di 0x2d
jne r-xdata
cmp di 0x2b
jne r-xdata
or eax 0x2
jmp r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
movzx edi [ esi ]
add esi 0x2
cmp eax 0x10
jne r-xdata
push edi
call sub_435e3f
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
push edi
call sub_435e3f
pop ecx
test eax eax
jne r-xdata
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
cmp edx ecx
jae r-xdata
push 0x41
pop eax
cmp ax di
ja r-xdata
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
push 0x10
pop eax
mov [ ebp + 0x10 ] eax
push 0x58
pop ecx
cmp ax cx
je r-xdata
mov edi [ ebp + 0xc ]
mov edi [ ebp - 0x8 ]
or eax 0x8
mov [ ebp - 0x4 ] eax
cmp ebx edi
jb r-xdata
push 0x19
lea eax [ edi - 0x61 ]
pop ecx
cmp ax cx
jbe r-xdata
cmp di 0x5a
jbe r-xdata
movzx edi [ esi + 0x2 ]
add esi 0x4
push 0x58
pop ecx
cmp ax cx
jne r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
test al 0x4
jne r-xdata
test edi edi
je r-xdata
imul ebx ecx
add ebx edx
jne r-xdata
lea eax [ edi - 0x61 ]
movzx edx di
cmp ax cx
ja r-xdata
mov eax [ ebp - 0x4 ]
push 0x19
pop ecx
call sub_428ca8
mov [ eax ] 0x22
mov eax [ ebp - 0x4 ]
test al 0x1
je r-xdata
test al 0x1
jne r-xdata
xor ebx ebx
jmp r-xdata
mov esi [ ebp + 0x8 ]
push edi
call sub_435e3f
mov edx eax
pop ecx
cmp edx 0xffffffff
jne r-xdata
mov edi [ ebp + 0xc ]
or eax 0x4
mov [ ebp - 0x4 ] eax
test edi edi
je r-xdata
cmp edx [ ebp - 0xc ]
jbe r-xdata
add edx 0xffffffc9
sub edx 0x20
test al 0x2
push 0x0
pop ebx
setne bl
add ebx 0x7fffffff
or ebx 0xffffffff
jmp r-xdata
test edi edi
je r-xdata
mov ecx eax
and ecx 0x2
je r-xdata
sub esi 0x2
test al 0x8
jne r-xdata
jmp r-xdata
test al 0x2
je r-xdata
mov [ edi ] esi
test ecx ecx
jne r-xdata
cmp ebx 0x80000000
ja r-xdata
movzx edi [ esi ]
add esi 0x2
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
neg ebx
cmp ebx 0x7fffffff
jbe r-xdata
sub_42ac4e
push ebp
mov ebp esp
sub esp 0x34
lea ecx [ ebp - 0x34 ]
push [ ebp + 0x8 ]
call sub_422ff5
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test eax eax
je r-xdata
push ebx
push esi
xor edx edx
push edi
test ecx ecx
je r-xdata
mov [ eax ] ecx
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
jmp r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor ecx ecx
mov eax ecx
mov edi ecx
movzx ebx [ ecx ]
lea esi [ ecx + 0x2 ]
mov edi edx
mov [ ebp - 0x4 ] edx
push 0x8
push ebx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0xc ] ebx
call sub_42af48
pop ecx
pop ecx
test eax eax
je r-xdata
cmp eax 0x2
jl r-xdata
mov edx edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x18 ]
cmp bx 0x2d
jne r-xdata
movzx edi [ esi ]
add esi 0x2
push 0x8
push edi
mov [ ebp - 0xc ] edi
call sub_42af48
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp eax 0x24
jle r-xdata
cmp bx 0x2b
jne r-xdata
or eax 0x2
jmp r-xdata
mov edi [ ebp - 0x14 ]
mov ebx [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
movzx ebx [ esi ]
add esi 0x2
mov [ ebp - 0xc ] ebx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
cmp eax 0x24
jg r-xdata
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
push ebx
call sub_435e3f
pop ecx
test eax eax
je r-xdata
cdq
mov ecx edx
mov [ ebp - 0x24 ] eax
push ecx
push eax
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x20 ] ecx
call sub_42a9c0
mov [ ebp - 0x18 ] ebx
mov ebx [ ebp - 0xc ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] edx
push ebx
call sub_435e3f
pop ecx
test eax eax
jne r-xdata
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
push 0xa
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
cmp ecx [ ebp + 0x14 ]
jae r-xdata
push 0x41
pop eax
cmp ax bx
ja r-xdata
mov eax [ ebp + 0x14 ]
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
push 0x10
pop eax
mov [ ebp + 0x14 ] eax
push 0x58
pop ecx
cmp ax cx
je r-xdata
mov ecx [ ebp + 0x10 ]
or ebx 0x8
mov [ ebp - 0x8 ] ebx
cmp edi [ ebp - 0x14 ]
jb r-xdata
push 0x19
lea eax [ ebx - 0x61 ]
pop ecx
cmp ax cx
jbe r-xdata
cmp bx 0x5a
jbe r-xdata
movzx ebx [ esi + 0x2 ]
add esi 0x4
mov [ ebp - 0xc ] ebx
push 0x58
pop ecx
cmp ax cx
jne r-xdata
push 0x8
jmp r-xdata
test bl 0x4
jne r-xdata
test ecx ecx
je r-xdata
push edi
push eax
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
call sub_436130
add eax [ ebp - 0xc ]
mov edi edx
push 0x0
mov [ ebp - 0x4 ] eax
pop eax
adc edi eax
mov edx [ ebp - 0x10 ]
ja r-xdata
lea eax [ ebx - 0x61 ]
cmp ax cx
movzx eax bx
ja r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x8 ]
push 0x19
pop ecx
pop eax
mov [ ebp + 0x14 ] eax
jmp r-xdata
call sub_428ca8
mov [ eax ] 0x22
test bl 0x1
je r-xdata
test bl 0x1
jne r-xdata
xor edx edx
mov eax edx
mov edi edx
jmp r-xdata
mov esi [ ebp + 0xc ]
push ebx
call sub_435e3f
pop ecx
mov ecx eax
mov [ ebp - 0xc ] eax
cmp ecx 0xffffffff
jne r-xdata
cmp eax edx
jne r-xdata
cmp eax edx
jb r-xdata
lea ecx [ eax - 0x37 ]
mov [ ebp - 0xc ] ecx
sub eax 0x20
test bl 0x2
je r-xdata
or eax 0xffffffff
or edi 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx ebx
and ecx 0x2
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x10 ]
or ebx 0x4
mov [ ebp - 0x8 ] ebx
test ecx ecx
je r-xdata
cmp edi [ ebp - 0x14 ]
jne r-xdata
or eax 0xffffffff
mov edi 0x7fffffff
jmp r-xdata
xor edx edx
mov edi 0x80000000
mov eax edx
jmp r-xdata
xor edx edx
test bl 0x2
je r-xdata
mov [ ecx ] esi
xor edx edx
cmp edi 0x80000000
ja r-xdata
sub esi 0x2
test bl 0x8
jne r-xdata
jmp r-xdata
xor edx edx
cmp edx [ ebp - 0x18 ]
jb r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
neg eax
adc edi edx
neg edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
cmp edi 0x7fffffff
jb r-xdata
jb r-xdata
movzx ebx [ esi ]
add esi 0x2
jmp r-xdata
ja r-xdata
ja r-xdata
xor edx edx
cmp eax edx
ja r-xdata
cmp ecx [ ebp - 0x1c ]
jbe r-xdata
cmp eax 0xffffffff
jbe r-xdata
jmp r-xdata
test ecx ecx
jne r-xdata
sub_42af1e
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rw-data
jmp r-xdata
call sub_42ac4e
add esp 0x14
pop ebp
retn
sub_42af48
push ebp
mov ebp esp
push ecx
mov ax [ ebp + 0x8 ]
mov ecx 0xffff
cmp ax cx
jne r-xdata
mov ecx 0x100
cmp ax cx
jae r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
neg eax
sbb eax eax
and eax [ ebp - 0x4 ]
movzx eax ax
movzx ecx ax
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
movzx ecx cx
and eax ecx
sub_42af9e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call sub_424856
pop ecx
mov ecx [ esi + 0xc ]
mov edi eax
test cl 0x82
jne r-xdata
test cl 0x40
je r-xdata
call sub_428ca8
mov [ eax ] 0x9
push ebx
xor ebx ebx
test cl 0x1
je r-xdata
call sub_428ca8
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
mov [ esi + 0x4 ] ebx
or eax 0x2
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test cl 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
je r-xdata
call sub_426d88
add eax 0x20
cmp esi eax
je r-xdata
or ecx 0x20
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
and ecx 0xfffffffe
mov [ esi ] eax
mov [ esi + 0xc ] ecx
xor eax eax
inc eax
push eax
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0x8 ]
push eax
push edi
call sub_42da06
add esp 0xc
mov ebx eax
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
sub ecx edx
mov [ ebp + 0xc ] ecx
lea eax [ edx + 0x1 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
dec eax
mov [ esi + 0x4 ] eax
test ecx ecx
jle r-xdata
push edi
call sub_435deb
pop ecx
test eax eax
jne r-xdata
call sub_426d88
add eax 0x40
cmp esi eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax al
or [ esi + 0xc ] 0x20
cmp edi 0xffffffff
je r-xdata
push ecx
push edx
push edi
call sub_42da06
add esp 0xc
mov ebx eax
jmp r-xdata
push esi
call sub_436164
pop ecx
pop ebx
mov ecx rw-data
cmp edi 0xfffffffe
je r-xdata
mov ecx [ esi + 0x8 ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
jmp r-xdata
push 0x2
push ebx
push ebx
push edi
call sub_431945
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax edi
mov ecx edi
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
test [ ecx + 0x4 ] 0x20
je r-xdata
sub_42b0ed
push ebp
mov ebp esp
sub esp 0x488
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x450 ]
push ebx
push esi
mov [ ebp - 0x428 ] eax
mov eax [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x408 ] eax
xor eax eax
mov ebx eax
mov [ ebp - 0x410 ] edi
mov [ ebp - 0x45c ] eax
mov esi eax
mov [ ebp - 0x414 ] ebx
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x458 ] eax
mov [ ebp - 0x440 ] eax
mov [ ebp - 0x42c ] eax
call sub_422ff5
call sub_428ca8
mov [ ebp - 0x464 ] eax
cmp [ ebp - 0x428 ] ebx
jne r-xdata
mov edx [ ebp - 0x408 ]
test edx edx
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
cmp [ ebp - 0x444 ] bl
je r-xdata
movzx edx [ edx ]
xor ecx ecx
mov [ ebp - 0x40c ] ecx
mov eax ecx
mov [ ebp - 0x420 ] eax
mov [ ebp - 0x434 ] ecx
mov [ ebp - 0x454 ] ecx
mov [ ebp - 0x41c ] edx
test dx dx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x448 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x444 ] 0x0
je r-xdata
mov [ ebp - 0x470 ] 0x58
mov [ ebp - 0x474 ] 0x64
mov [ ebp - 0x478 ] 0x69
mov [ ebp - 0x468 ] 0x6f
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_42c776
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x448 ]
and [ ecx + 0x70 ] 0xfffffffd
push 0x58
lea eax [ edx - 0x20 ]
pop edi
cmp ax di
ja r-xdata
xor eax eax
movzx eax dx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov eax [ ebp - 0x408 ]
jmp [ eax * 4 + jump_table_42bcd1 ]
mov edi [ ebp - 0x434 ]
movsx edi [ edi + eax * 8 + r--data ]
mov eax edi
mov [ ebp - 0x434 ] edi
mov edi [ ebp - 0x410 ]
sar eax 0x4
mov [ ebp - 0x434 ] eax
cmp eax 0x7
ja r-xdata
add [ ebp - 0x408 ] 0x2
test eax eax
js r-xdata
xor eax eax
or [ ebp - 0x418 ] 0xffffffff
mov ebx eax
mov [ ebp - 0x458 ] eax
mov [ ebp - 0x440 ] eax
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x414 ] ebx
mov [ ebp - 0x42c ] eax
jmp r-xdata
movzx eax dx
push 0x20
pop edx
sub eax edx
je r-xdata
push 0x2a
pop eax
cmp dx ax
jne r-xdata
xor eax eax
mov [ ebp - 0x418 ] eax
jmp r-xdata
push 0x2a
pop eax
cmp dx ax
jne r-xdata
movzx eax dx
cmp eax 0x49
je r-xdata
lea eax [ ebp - 0x420 ]
mov [ ebp - 0x42c ] 0x1
push eax
push [ ebp - 0x428 ]
push edx
call sub_42bcf1
add esp 0xc
jmp r-xdata
movzx eax dx
cmp eax 0x64
jg r-xdata
or ebx 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
imul ecx [ ebp - 0x430 ] 0xa
movzx eax dx
add ecx 0xffffffd0
add eax ecx
mov [ ebp - 0x430 ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x410 ] edi
mov [ ebp - 0x430 ] eax
test eax eax
jns r-xdata
imul ecx [ ebp - 0x418 ] 0xa
movzx eax dx
add ecx 0xffffffd0
add eax ecx
mov [ ebp - 0x418 ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] eax
test eax eax
mov eax [ ebp - 0x408 ]
mov [ ebp - 0x410 ] edi
jns r-xdata
mov eax [ ebp - 0x408 ]
movzx eax [ eax ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
mov ecx [ ebp - 0x40c ]
cmp eax 0x70
jg r-xdata
je r-xdata
mov [ ebp - 0x414 ] ebx
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or ebx 0x4
neg eax
mov [ ebp - 0x414 ] ebx
mov [ ebp - 0x430 ] eax
jmp r-xdata
movzx edx [ eax ]
mov eax [ ebp - 0x420 ]
mov [ ebp - 0x41c ] edx
test dx dx
jne r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x34
jne r-xdata
push 0x20
pop eax
or ebx eax
jmp r-xdata
push 0x6c
pop edx
cmp eax edx
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or ebx 0x40
mov [ ebp - 0x414 ] ebx
cmp eax 0x53
jg r-xdata
or ebx 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp ax [ ebp - 0x474 ]
je r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x32
jne r-xdata
mov eax edi
add eax 0x4
or ebx 0x8000
mov [ ebp - 0x408 ] eax
jmp r-xdata
mov eax [ ebp - 0x408 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x77
mov eax [ ebp - 0x408 ]
jne r-xdata
mov edx [ ebp - 0x418 ]
mov edi 0x7fffffff
cmp edx 0xffffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x418 ] 0x8
cmp eax 0x65
jl r-xdata
mov ecx [ edi ]
add edi 0x8
mov [ ebp - 0x410 ] edi
mov edi [ edi - 0x4 ]
jmp r-xdata
test ebx 0x1000
je r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or ebx 0x4
sub eax 0x3
mov eax [ ebp - 0x408 ]
jne r-xdata
cmp ax [ ebp - 0x478 ]
je r-xdata
mov eax edi
add eax 0x4
and ebx 0xffff7fff
mov [ ebp - 0x408 ] eax
jmp r-xdata
mov [ ebp - 0x414 ] ebx
jmp r-xdata
or ebx 0x10
jmp r-xdata
add eax 0x2
or ebx 0x1000
mov [ ebp - 0x408 ] eax
jmp r-xdata
or ebx 0x800
jmp r-xdata
mov esi [ ebp - 0x410 ]
add esi 0x4
mov [ ebp - 0x410 ] esi
mov esi [ esi - 0x4 ]
test bl 0x20
je r-xdata
mov edi edx
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
mov [ ebp - 0x41c ] 0x10
pop eax
mov [ ebp - 0x45c ] eax
test bl bl
jns r-xdata
cmp [ ebp - 0x440 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
xor eax eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x410 ] edi
test bl 0x20
je r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
test ebx 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or ebx 0x8
cmp ax [ ebp - 0x468 ]
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push 0x27
test ebx 0x8000
jne r-xdata
push 0x30
pop ecx
add eax 0x51
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x424 ] 0x2
jmp r-xdata
mov eax [ ebp - 0x454 ]
test eax eax
je r-xdata
test bl 0x40
je r-xdata
mov eax [ ebp - 0x418 ]
lea esi [ ebp - 0x404 ]
or ebx 0x40
mov ecx 0x200
mov [ ebp - 0x414 ] ebx
mov [ ebp - 0x40c ] ecx
test eax eax
jns r-xdata
push 0x69
pop edx
cmp eax edx
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x410 ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x414 ] ebx
push 0x20
pop eax
add edx eax
mov [ ebp - 0x458 ] 0x1
mov [ ebp - 0x41c ] edx
dec eax
dec eax
je r-xdata
cmp eax 0x75
je r-xdata
mov [ ebp - 0x42c ] 0x1
mov ecx esi
test edi edi
je r-xdata
mov esi [ rw-data ]
xor ecx ecx
mov eax esi
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x40c ] ecx
test edi edi
jle r-xdata
mov esi [ rw-data ]
push eax
call sub_422ed5
xor eax eax
pop ecx
mov [ ebp - 0x454 ] eax
push 0x20
pop edx
test ebx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x418 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
test ebx 0x9000
jne r-xdata
cmp edi eax
jg r-xdata
mov ecx [ edi - 0x4 ]
xor eax eax
mov edi eax
mov eax [ edi - 0x4 ]
movzx eax [ edi - 0x4 ]
jmp r-xdata
movsx eax [ edi - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
dec eax
dec eax
jne r-xdata
test ebx 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp eax 0x78
je r-xdata
sub ecx esi
xor eax eax
mov al [ eax ]
test al al
je r-xdata
push [ ebp - 0x464 ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call sub_42bd53
add esp 0x14
test bl 0x8
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push edx
call sub_42bd27
mov eax [ ebp - 0x424 ]
add esp 0x10
test bl 0x1
je r-xdata
push 0x2d
cmp eax ecx
jle r-xdata
push 0x67
pop eax
cmp dx ax
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x488 ] eax
mov [ ebp - 0x410 ] edi
mov eax [ edi - 0x4 ]
mov [ ebp - 0x484 ] eax
lea eax [ ebp - 0x450 ]
push eax
push [ ebp - 0x458 ]
movsx eax dl
push [ ebp - 0x418 ]
push eax
push [ ebp - 0x40c ]
lea eax [ ebp - 0x488 ]
push esi
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
mov edi ebx
add esp 0x1c
and edi 0x80
je r-xdata
add edi 0x4
mov [ ebp - 0x410 ] edi
mov edi [ edi - 0x4 ]
call sub_4361aa
test eax eax
je r-xdata
push 0x6f
pop edx
cmp eax edx
jne r-xdata
mov edx [ ebp - 0x418 ]
test edx edx
jns r-xdata
mov edi eax
jl r-xdata
cdq
mov ecx eax
mov edi edx
mov [ ebp - 0x40c ] ecx
test ebx 0x800
je r-xdata
movzx eax [ edi ]
add edi 0x4
mov [ ebp - 0x42c ] 0x1
mov [ ebp - 0x410 ] edi
mov [ ebp - 0x460 ] eax
test bl 0x20
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x414 ] ebx
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp ax [ ebp - 0x470 ]
je r-xdata
add ecx 0x2
test edi edi
jne r-xdata
lea ecx [ ebp - 0x450 ]
movzx eax al
push ecx
push eax
call sub_42373b
pop ecx
test eax eax
mov eax [ ebp - 0x41c ]
pop ecx
je r-xdata
cmp [ ebp - 0x42c ] 0x0
mov eax [ ebp - 0x40c ]
jne r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
push 0x2b
jmp r-xdata
cmp eax 0xa3
jle r-xdata
mov eax ecx
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x418 ] 0x1
jmp r-xdata
push 0x67
pop eax
cmp [ ebp - 0x41c ] ax
jne r-xdata
cmp [ ebp - 0x418 ] 0x0
jne r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
cmp [ ebp - 0x444 ] 0x0
je r-xdata
mov eax [ ebp - 0x420 ]
test bl 0x20
je r-xdata
mov [ ebp - 0x41c ] 0x8
test bl bl
jns r-xdata
and ebx 0xfffffff7
mov [ ebp - 0x414 ] ebx
cmp edx 0x200
jle r-xdata
xor edx edx
inc edx
jmp r-xdata
neg ecx
adc edi eax
neg edi
or ebx 0x100
mov [ ebp - 0x414 ] ebx
cmp ecx eax
jae r-xdata
xor ecx ecx
mov [ ebp - 0x42c ] ecx
movsx ecx [ eax ]
jmp r-xdata
movsx eax [ eax ]
cdq
sub eax edx
mov [ ebp - 0x42c ] 0x1
mov ecx eax
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x43c ] al
xor eax eax
mov [ ebp - 0x43b ] al
lea eax [ ebp - 0x450 ]
push eax
mov eax [ ebp - 0x450 ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x43c ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_436345
add esp 0x10
test eax eax
jns r-xdata
xor eax eax
mov [ ebp - 0x434 ] eax
dec edi
cmp [ ecx ] ax
je r-xdata
mov ecx [ ebp - 0x40c ]
inc eax
inc ecx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x40c ] ecx
cmp ecx edi
jl r-xdata
inc eax
push [ ebp - 0x464 ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
push esi
call sub_42bd53
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x30
pop eax
push eax
call sub_42bd27
add esp 0x10
push 0x20
pop edx
mov [ ebp - 0x438 ] dx
mov [ ebp - 0x424 ] 0x1
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x424 ] 0x1
lea edi [ eax + 0x15d ]
push edi
call sub_42899d
mov edx [ ebp - 0x41c ]
mov [ ebp - 0x454 ] eax
pop ecx
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x450 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov ecx [ ebp - 0x448 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov [ edi ] eax
mov [ edi ] ax
jmp r-xdata
or ebx 0x200
mov [ ebp - 0x414 ] ebx
jmp r-xdata
mov eax ecx
or eax edi
jne r-xdata
mov edx 0x200
sar ecx 0x1
xor ecx ecx
lea esi [ ebp - 0x404 ]
inc ecx
jmp r-xdata
mov [ ebp - 0x440 ] 0x1
jmp r-xdata
jmp r-xdata
test bl 0x4
je r-xdata
mov ecx esi
mov [ ebp - 0x41c ] esi
mov edi [ ebp - 0x430 ]
mov eax [ ebp - 0x424 ]
sub edi ecx
sub edi eax
test bl 0xc
jne r-xdata
mov [ ebp - 0x418 ] 0xa3
mov esi eax
mov [ ebp - 0x40c ] edi
jmp r-xdata
push esi
call sub_4238c0
pop ecx
mov ecx eax
jmp r-xdata
or ebx 0x100
inc esi
mov [ ebp - 0x414 ] ebx
jmp r-xdata
lea eax [ ebp - 0x450 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ ebp - 0x440 ] 0x1
jmp r-xdata
lea esi [ ebp - 0x205 ]
mov [ ebp - 0x424 ] eax
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x20
pop eax
push eax
call sub_42bd27
add esp 0x10
or eax 0xffffffff
mov [ ebp - 0x420 ] eax
jmp r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push [ ebp - 0x460 ]
call sub_42bcf1
mov ecx [ ebp - 0x41c ]
add esp 0xc
add ecx [ ebp - 0x46c ]
mov eax [ ebp - 0x47c ]
mov [ ebp - 0x41c ] ecx
test eax eax
jg r-xdata
mov edi [ ebp - 0x410 ]
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push edi
push ecx
call sub_42a9c0
add ecx 0x30
mov [ ebp - 0x47c ] ebx
mov [ ebp - 0x40c ] eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ecx
or eax edi
je r-xdata
test eax eax
js r-xdata
dec eax
mov [ ebp - 0x47c ] eax
lea eax [ ebp - 0x450 ]
push eax
mov eax [ ebp - 0x450 ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x460 ]
push ecx
push eax
call sub_436345
add esp 0x10
mov [ ebp - 0x46c ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov edx [ ebp - 0x418 ]
mov [ esi ] cl
dec esi
mov ecx [ ebp - 0x40c ]
jmp r-xdata
add ecx [ ebp - 0x45c ]
mov ebx [ ebp - 0x414 ]
lea ecx [ ebp - 0x205 ]
sub ecx esi
inc esi
mov [ ebp - 0x40c ] ecx
test ebx 0x200
je r-xdata
mov eax [ ebp - 0x420 ]
mov eax edx
dec edx
mov [ ebp - 0x418 ] edx
test eax eax
jg r-xdata
test ecx ecx
je r-xdata
dec esi
inc ecx
push 0x30
pop eax
mov [ esi ] al
jmp r-xdata
cmp [ esi ] 0x30
je r-xdata
sub_42bcf1
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_4361bf
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
inc [ eax ]
pop ebp
retn
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
pop ebp
retn
sub_42bd27
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
test esi esi
jg r-xdata
push edi
push [ ebp + 0x10 ]
dec esi
push [ ebp + 0x8 ]
call sub_42bcf1
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_42bd53
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x10 ]
mov eax [ esi ]
mov [ ebp + 0x18 ] eax
test [ edi + 0xc ] 0x40
je r-xdata
and [ esi ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jle r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
test ebx ebx
jg r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop edi
pop esi
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
dec ebx
push edi
movzx eax [ eax ]
push eax
call sub_42bcf1
mov eax [ ebp + 0x14 ]
add esp 0xc
add [ ebp + 0x8 ] 0x2
cmp [ eax ] 0xffffffff
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
push eax
push edi
push 0x3f
call sub_42bcf1
mov eax [ ebp + 0x14 ]
add esp 0xc
pop ebx
mov eax [ ebp + 0x18 ]
sub_42bdcc
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push [ ebp + 0x10 ]
call sub_422ff5
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov eax ebx
lea ecx [ ebp - 0x18 ]
sar eax 0x8
mov [ ebp + 0x8 ] eax
push ecx
movzx eax al
push eax
call sub_42373b
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_4359d3
add esp 0x1c
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_42be7d
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
mov [ ebp - 0x24 ] eax
xor esi esi
mov eax [ ebp + 0x10 ]
mov edi esi
push eax
push esi
push esi
push esi
push esi
push ecx
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_42bf26
mov ebx eax
add esp 0x20
test bl 0x4
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_436452
pop ecx
pop ecx
test bl 0x2
jne r-xdata
mov edi 0x200
mov eax esi
jmp r-xdata
mov edi 0x80
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x20 ]
sub ecx [ ebp - 0x1c ]
sar ecx 0x1
mov [ edx ] edi
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
pop edi
mov [ edx + 0x10 ] esi
xor ecx ebp
pop esi
mov [ edx + 0x14 ] eax
mov eax edx
pop ebx
call sub_42c776
mov esp ebp
pop ebp
retn
or edi 0x100
cmp eax 0x2
jne r-xdata
test bl 0x1
jne r-xdata
mov esi [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
sub_42bf26
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x80 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x78 ] eax
xor eax eax
push ebx
xor ebx ebx
inc eax
push esi
mov [ ebp - 0x64 ] eax
mov esi ebx
mov eax ebx
mov [ ebp - 0x7c ] ebx
push edi
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x50 ] ebx
cmp [ ebp + 0x24 ] eax
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x5c ] 0x9
mov [ ebp - 0x60 ] 0xa
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
xor eax eax
jmp r-xdata
add edx 0x2
jmp r-xdata
cmp cx [ ebp - 0x5c ]
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_42c776
mov esp ebp
pop ebp
retn
movzx ecx [ edx ]
cmp ecx 0x20
je r-xdata
cmp cx [ ebp - 0x60 ]
je r-xdata
cmp ecx 0xd
jne r-xdata
mov [ ebp - 0x74 ] 0x8
mov [ ebp - 0x5c ] 0x30
mov [ ebp - 0x60 ] 0x39
push 0xa
pop ecx
cmp eax ecx
jne r-xdata
jmp [ eax * 4 + jump_table_42c746 ]
movzx ecx [ edx ]
add edx 0x2
mov [ ebp - 0x68 ] ecx
cmp eax 0xb
ja r-xdata
jmp r-xdata
lea eax [ ecx - 0x31 ]
cmp ax [ ebp - 0x74 ]
ja r-xdata
xor eax eax
inc eax
mov [ ebp - 0x6c ] eax
lea eax [ ecx - 0x31 ]
cmp ax [ ebp - 0x74 ]
jbe r-xdata
lea eax [ ecx - 0x31 ]
push 0x8
pop ecx
cmp ax cx
jbe r-xdata
xor eax eax
inc eax
push 0x30
mov [ ebp - 0x6c ] eax
pop eax
cmp cx ax
jb r-xdata
xor eax eax
inc eax
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x58 ] eax
test esi esi
jne r-xdata
xor eax eax
inc eax
mov [ ebp - 0x58 ] eax
lea eax [ ecx - 0x30 ]
push 0x9
pop ecx
cmp ax cx
ja r-xdata
lea eax [ edx - 0x4 ]
mov [ ebp - 0x4c ] eax
lea eax [ ecx - 0x31 ]
cmp ax [ ebp - 0x74 ]
ja r-xdata
xor eax eax
inc eax
push 0x30
mov [ ebp - 0x70 ] eax
pop eax
jmp r-xdata
lea eax [ ecx - 0x31 ]
cmp ax [ ebp - 0x74 ]
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
xor eax eax
mov esi ebx
inc eax
mov [ ebp - 0x70 ] eax
jmp r-xdata
mov esi ebx
mov eax [ ebp + 0x24 ]
movzx ecx cx
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
movsx eax [ eax ]
cmp ecx eax
jne r-xdata
push 0x3
mov eax [ ebp + 0x24 ]
movzx ecx cx
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
movsx eax [ eax ]
cmp ecx eax
jne r-xdata
mov eax [ ebp + 0x24 ]
mov esi [ ebp - 0x68 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
movsx ecx [ eax ]
movzx eax si
cmp eax ecx
jne r-xdata
mov eax [ ebp + 0x24 ]
movzx ecx cx
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
movsx eax [ eax ]
cmp ecx eax
je r-xdata
mov ebx [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
push 0x30
pop eax
cmp cx ax
mov eax [ ebp - 0x50 ]
jne r-xdata
mov edx [ ebp - 0x4c ]
jmp r-xdata
push 0x4
jmp r-xdata
movzx eax cx
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp cx ax
je r-xdata
push 0x30
pop eax
cmp cx ax
jmp r-xdata
push 0xa
pop eax
sub edx 0x2
lea eax [ edx - 0x2 ]
mov [ ebp - 0x4c ] eax
movzx eax cx
sub eax 0x2b
je r-xdata
push 0x30
pop eax
cmp cx ax
jae r-xdata
mov eax ebx
mov esi ebx
push 0x4
mov eax [ ebp - 0x54 ]
cmp eax 0x18
jbe r-xdata
sub ecx 0x2b
je r-xdata
push 0x5
cmp ecx 0x2b
je r-xdata
push 0x4
jmp r-xdata
push 0x30
pop eax
cmp si ax
jne r-xdata
push 0x5
pop eax
cmp ecx 0x2b
je r-xdata
mov [ ebp - 0x50 ] ebx
xor ebx ebx
mov [ ebp - 0x54 ] esi
cmp esi 0x19
jae r-xdata
movzx eax cx
cmp eax 0x2b
je r-xdata
cmp cx [ ebp - 0x60 ]
ja r-xdata
cmp cx [ ebp - 0x5c ]
jb r-xdata
movzx ecx [ edx ]
dec eax
add edx 0x2
cmp cx [ ebp - 0x5c ]
je r-xdata
pop eax
sub edx 0x2
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
movzx ecx [ edx ]
add edx 0x2
lea eax [ ecx - 0x31 ]
push 0x8
pop ecx
cmp ax cx
jbe r-xdata
jne r-xdata
dec eax
dec eax
jne r-xdata
cmp cx [ ebp - 0x60 ]
ja r-xdata
jmp r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ ebp - 0x9 ]
cmp al 0x5
jl r-xdata
push 0x2
pop eax
mov [ ebp - 0x7c ] ebx
jmp r-xdata
dec ecx
dec ecx
je r-xdata
sub edx 0x2
push 0xb
jmp r-xdata
cmp ecx 0x2d
je r-xdata
pop eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp ecx 0x2d
je r-xdata
inc ebx
sub cl 0x30
inc esi
mov [ edi ] cl
inc edi
jmp r-xdata
cmp eax 0x2d
je r-xdata
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x54 ] esi
cmp esi 0x19
jae r-xdata
mov [ ebp - 0x50 ] eax
jmp r-xdata
push 0x7
or ecx 0xffffffff
pop eax
mov [ ebp - 0x64 ] ecx
jmp r-xdata
sub eax 0x3
sub edx 0x2
push 0x8
jmp r-xdata
or [ ebp - 0x64 ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
cmp cx ax
jae r-xdata
imul ecx esi 0xa
mov esi [ ebp - 0x68 ]
movzx esi si
add esi 0xffffffd0
add esi ecx
cmp esi 0x1450
jg r-xdata
mov ecx ebx
mov eax ebx
mov esi ebx
mov edx ebx
jmp r-xdata
dec edi
cmp [ edi ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
dec edi
push 0x18
inc ecx
pop eax
mov [ ebp - 0x50 ] ecx
jmp r-xdata
inc al
mov [ ebp - 0x9 ] al
push 0x2
mov ecx 0x8000
pop eax
mov [ ebp - 0x7c ] ecx
jmp r-xdata
sub ecx 0x3
jne r-xdata
push 0x30
pop eax
cmp ecx eax
je r-xdata
mov esi [ ebp - 0x54 ]
jmp r-xdata
jmp r-xdata
cmp cx [ ebp - 0x60 ]
ja r-xdata
movzx ecx [ edx ]
add edx 0x2
cmp cx ax
jae r-xdata
cmp eax 0x43
jle r-xdata
movzx ecx [ edx ]
add edx 0x2
cmp cx [ ebp - 0x5c ]
jae r-xdata
sub cl 0x30
inc esi
mov [ edi ] cl
inc edi
dec eax
cmp cx [ ebp - 0x60 ]
ja r-xdata
sub edx 0x2
jmp r-xdata
mov ecx [ ebp - 0x68 ]
mov esi 0x1451
push 0x30
pop eax
jmp r-xdata
movzx ecx [ edx ]
add edx 0x2
mov [ ebp - 0x68 ] ecx
mov edi [ ebp - 0x80 ]
or eax [ ebp - 0x7c ]
mov [ edi + 0xa ] ax
mov eax ebx
mov [ edi ] cx
mov [ edi + 0x2 ] edx
mov [ edi + 0x6 ] esi
lea ecx [ ebp - 0x3c ]
push ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_436f36
mov ecx [ ebp - 0x64 ]
add esp 0xc
test ecx ecx
jns r-xdata
dec eax
inc ecx
dec edi
cmp [ edi ] 0x0
je r-xdata
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp ecx 0x43
jle r-xdata
cmp eax 0x45
jle r-xdata
movzx ecx [ edx ]
add edx 0x2
mov eax [ ebp - 0x78 ]
mov [ eax ] edx
mov eax [ ebp - 0x6c ]
test eax eax
je r-xdata
add esi [ ebp - 0x50 ]
mov eax [ ebp - 0x70 ]
test eax eax
jne r-xdata
neg esi
mov [ ebp - 0x50 ] ecx
cmp ecx 0x45
jle r-xdata
push 0x6
jmp r-xdata
add eax 0xffffff9c
jmp r-xdata
mov eax [ ebp - 0x58 ]
test eax eax
jne r-xdata
add esi [ ebp + 0x18 ]
lea eax [ ecx - 0x64 ]
xor ecx ecx
inc ecx
cmp eax ecx
ja r-xdata
cmp esi 0x1450
jg r-xdata
sub esi [ ebp + 0x1c ]
mov eax 0x7fff
mov esi 0x80000000
push 0x2
jmp r-xdata
cmp esi 0xffffebb0
jl r-xdata
mov ecx ebx
mov edx ebx
pop ebx
mov ecx ebx
mov eax ebx
mov esi ebx
mov edx ebx
xor ebx ebx
inc ebx
jmp r-xdata
mov edx rw-data
sub edx 0x60
test esi esi
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x3a ]
mov esi [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jns r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov edx rw-data
neg esi
sub edx 0x60
test esi esi
jne r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax esi
add edx 0x54
sar esi 0x3
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x54 ] esi
and eax 0x7
je r-xdata
imul ecx eax 0xc
mov eax 0x8000
add ecx edx
mov [ ebp - 0x6c ] ecx
cmp [ ecx ] ax
jb r-xdata
movzx edi [ ecx + 0xa ]
mov edx [ ebp - 0x32 ]
mov eax edi
xor eax edx
mov [ ebp - 0x74 ] ebx
and eax 0x8000
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x5c ] eax
mov eax 0x7fff
and edx eax
mov [ ebp - 0x28 ] ebx
and edi eax
mov [ ebp - 0x24 ] ebx
lea eax [ edi + edx ]
movzx esi ax
mov eax 0x7fff
mov [ ebp - 0x64 ] esi
cmp dx ax
jae r-xdata
mov esi ecx
lea edi [ ebp - 0x48 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x6c ] ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
xor eax eax
cmp [ ebp - 0x5c ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x34 ] eax
cmp di ax
jae r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
test dx dx
jne r-xdata
mov [ ebp - 0x34 ] ebx
jmp r-xdata
test di di
jne r-xdata
inc esi
test [ ebp - 0x34 ] 0x7fffffff
mov [ ebp - 0x64 ] esi
jne r-xdata
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x3c ] ebx
push 0x5
mov eax ebx
lea edx [ ebp - 0x28 ]
pop edi
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x68 ] edi
inc esi
test [ ecx + 0x8 ] 0x7fffffff
mov [ ebp - 0x64 ] esi
jne r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
add edx 0x2
inc eax
dec edi
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x68 ] edi
test edi edi
jg r-xdata
lea esi [ ebp - 0x3c ]
lea esi [ esi + eax * 2 ]
lea eax [ ecx + 0x8 ]
mov [ ebp - 0x70 ] eax
cmp [ ecx + 0x4 ] ebx
jne r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov [ ebp - 0x78 ] edi
test edi edi
jle r-xdata
mov esi [ ebp - 0x64 ]
mov edx [ ebp - 0x24 ]
add esi 0xc002
mov edi [ ebp - 0x2c ]
mov [ ebp - 0x4c ] edx
test si si
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp ecx [ ebp - 0x58 ]
jae r-xdata
cmp [ ecx ] ebx
je r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
mov eax 0xffff
add esi eax
test si si
jns r-xdata
test edx edx
js r-xdata
mov [ edx - 0x4 ] ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x78 ]
mov edx [ ebp - 0x50 ]
mov ax [ ebp - 0x2c ]
mov ebx [ ebp - 0x74 ]
mov eax esi
neg eax
movzx eax ax
mov [ ebp - 0x58 ] eax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0x28 ]
mov edx edi
shr edx 0x1f
mov ecx eax
add eax eax
shr ecx 0x1f
or eax edx
add edi edi
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x28 ] eax
add edx edx
mov eax 0xffff
mov [ ebp - 0x2c ] edi
or edx ecx
add esi eax
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x24 ] edx
test si si
jg r-xdata
sub [ ebp - 0x70 ] 0x2
add esi 0x2
dec edi
test edi edi
jg r-xdata
inc [ edx ]
mov eax [ ebp - 0x2a ]
cmp eax 0xffffffff
jne r-xdata
and edi 0x1ffff
cmp edi 0x18000
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov eax edx
shl eax 0x1f
mov [ ebp - 0x4c ] ecx
shr [ ebp - 0x4c ] 0x1
or [ ebp - 0x4c ] eax
mov eax [ ebp - 0x4c ]
shl ecx 0x1f
shr edi 0x1
shr edx 0x1
or edi ecx
dec [ ebp - 0x58 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2c ] edi
jne r-xdata
inc ebx
movzx eax [ esi ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x70 ]
mov ecx [ ebp - 0x58 ]
mov [ ebp - 0x78 ] ebx
movzx eax [ eax ]
imul ecx eax
mov [ ebp - 0x58 ] ecx
add ecx [ edx - 0x4 ]
cmp ecx [ edx - 0x4 ]
jb r-xdata
mov ecx [ ebp - 0x6c ]
mov edi [ ebp - 0x68 ]
mov eax [ ebp - 0x60 ]
inc eax
mov [ ebp - 0x2a ] eax
mov eax [ ebp - 0x26 ]
mov [ ebp - 0x2a ] ebx
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4c ]
test [ ebp - 0x2c ] 0x1
je r-xdata
push 0x0
test ebx ebx
mov [ ebp - 0x4c ] edx
pop ebx
je r-xdata
mov ax [ ebp - 0x2a ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov [ ebp - 0x36 ] ecx
mov [ ebp - 0x32 ] si
jmp r-xdata
xor eax eax
mov [ ebp - 0x38 ] ebx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x3c ] ebx
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x34 ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x26 ] eax
mov ax [ ebp - 0x22 ]
mov ecx 0xffff
mov [ ebp - 0x26 ] ebx
cmp ax cx
jne r-xdata
xor ecx ecx
mov ax di
inc ecx
or ax cx
mov [ ebp - 0x2c ] ax
mov edi [ ebp - 0x2c ]
jmp r-xdata
mov esi [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
mov eax 0x7fff
cmp si ax
jb r-xdata
inc ax
mov [ ebp - 0x22 ] ax
jmp r-xdata
mov [ ebp - 0x22 ] dx
inc esi
jmp r-xdata
mov edx 0x8000
cmp ax dx
ja r-xdata
mov ecx [ ebp - 0x24 ]
jmp r-xdata
sub_42c7fc
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fldz
fucom st1
fnstsw ax
push edi
test ah 0x44
jpe r-xdata
push esi
mov si [ ebp + 0xe ]
movzx eax si
test eax 0x7ff0
jne r-xdata
fstp st1
xor edi edi
jmp r-xdata
push 0x0
push ecx
fstp st0
push ecx
fstp [ esp ]
call sub_42c8ce
movzx edi si
add esp 0xc
shr edi 0x4
and edi 0x7ff
sub edi 0x3fe
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
test ecx 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
pop edi
pop ebp
retn
fcompp
mov edi 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
test edx edx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
mov ecx 0xffef
and si cx
mov [ ebp + 0xe ] si
test eax eax
je r-xdata
add ecx ecx
mov [ ebp + 0xc ] ecx
test edx edx
jns r-xdata
test [ ebp + 0xe ] 0x10
jne r-xdata
fld [ ebp + 0x8 ]
push 0x0
push ecx
push ecx
fstp [ esp ]
call sub_42c8ce
add esp 0xc
jmp r-xdata
mov eax 0x8000
or si ax
mov [ ebp + 0xe ] si
add edx edx
dec edi
test [ ebp + 0xe ] 0x10
je r-xdata
or ecx 0x1
mov [ ebp + 0xc ] ecx
pop esi
mov si [ ebp + 0xe ]
mov [ ebp + 0x8 ] edx
sub_42c8ce
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xe ]
fld [ ebp + 0x8 ]
movzx eax ax
lea ecx [ ecx + 0x3fe ]
and eax 0x800f
shl ecx 0x4
fstp [ ebp - 0x8 ]
or ecx eax
mov [ ebp - 0x2 ] cx
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_42c8fd
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x7ff00000
mov eax [ ebp + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
test eax eax
jne r-xdata
mov ecx [ ebp + 0xe ]
mov edx 0x7ff8
and cx dx
cmp cx dx
jne r-xdata
test eax eax
jne r-xdata
inc eax
pop ebp
retn
mov edx 0x7ff0
cmp cx dx
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_42c958
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
pop ebp
retn
push 0x3
sub_42c98a
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebx + 0x20 ]
lea eax [ ebx + 0x18 ]
push esi
push eax
push [ ebx + 0x8 ]
call sub_42ca52
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_42c958
cmp [ rw-data ] 0x0
pop ecx
jne r-xdata
and [ ebp - 0x40 ] 0xfffffffe
push eax
lea eax [ ebx + 0x18 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x20 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_42cca1
mov esi [ ebx + 0x20 ]
add esp 0x1c
push eax
call sub_42cf86
mov [ esp ] 0xffff
push esi
call sub_42d0da
fld [ ebx + 0x18 ]
pop ecx
pop ecx
test eax eax
je r-xdata
fld [ ebx + 0x18 ]
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push eax
call sub_42cfb3
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_42c776
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_42ca52
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ebx
and esi 0x1f
test bl 0x8
je r-xdata
test bl 0x4
je r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
test bl 0x1
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
push 0x1
call sub_42d105
pop ecx
and esi 0xfffffff7
jmp r-xdata
test bl 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
push 0x4
call sub_42d105
pop ecx
and esi 0xfffffffb
jmp r-xdata
test bl 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_42d105
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
mov esp ebp
pop ebp
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
push edi
xor edi edi
test bl 0x10
je r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_42d105
pop ecx
and esi 0xffffffef
mov ecx [ ebp + 0xc ]
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
inc edi
fld [ rw-data ]
fld [ rw-data ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
xor edi edi
inc edi
fld [ ecx ]
lea eax [ ebp + 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_42c7fc
mov eax [ ebp + 0x8 ]
add esp 0xc
add eax 0xfffffa00
mov [ ebp + 0x8 ] eax
fst [ ebp - 0xc ]
fldz
cmp eax 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ rw-data ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and esi 0xfffffffd
push 0x10
call sub_42d105
pop ecx
fcompp
xor edx edx
fnstsw ax
test ah 0x41
jne r-xdata
xor edi edi
fmulp st1
inc edi
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
fld [ rw-data ]
test ah 0x5
jpo r-xdata
mov eax [ ebp - 0x6 ]
mov ecx 0xfffffc03
and eax 0xf
or eax 0x10
mov [ ebp - 0x6 ] ax
mov eax [ ebp + 0x8 ]
cmp eax ecx
jge r-xdata
inc edx
mov eax [ ebp + 0xc ]
fstp [ eax ]
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0xc ]
test edx edx
je r-xdata
sub ecx eax
mov eax [ ebp - 0xc ]
test edi edi
pop edi
je r-xdata
fchs
shr eax 0x1
test [ ebp - 0x8 ] 0x1
mov [ ebp - 0xc ] eax
je r-xdata
test edi edi
jne r-xdata
shr [ ebp - 0x8 ] 0x1
dec ecx
jne r-xdata
or eax 0x80000000
mov [ ebp - 0xc ] eax
inc edi
test [ ebp - 0xc ] 0x1
je r-xdata
sub_42cc30
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
call sub_428ca8
push 0xffff
push [ ebp + 0x14 ]
mov [ eax ] 0x21
call sub_42d0da
fld [ ebp + 0xc ]
pop ecx
pop ecx
pop ebp
retn
push [ ebp + 0x14 ]
fld [ ebp + 0xc ]
sub esp 0x18
fst [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fstp [ esp ]
push [ ebp + 0x8 ]
push 0x1
call sub_42cfb3
add esp 0x24
pop ebp
retn
sub_42cc80
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42cca1
add esp 0x1c
pop ebp
retn
sub_42cca1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
xor ebx ebx
inc ebx
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push edi
mov edi 0xc000000d
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0x10 ]
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008f
or [ eax + 0x4 ] ebx
test cl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000093
or [ eax + 0x4 ] 0x2
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000091
or [ eax + 0x4 ] 0x4
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008e
or [ eax + 0x4 ] 0x8
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
shl eax 0x4
not eax
xor eax [ ecx + 0x8 ]
and eax 0x10
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
add eax eax
not eax
xor eax [ ecx + 0x8 ]
and eax 0x8
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
shr eax 0x1
not eax
xor eax [ ecx + 0x8 ]
and eax 0x4
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
shr eax 0x3
not eax
xor eax [ ecx + 0x8 ]
and eax 0x2
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
shr eax 0x5
not eax
xor eax [ ecx + 0x8 ]
and eax ebx
xor [ ecx + 0x8 ] eax
call sub_42d15d
mov edx eax
test dl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000090
or [ eax + 0x4 ] 0x10
test dl 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test dl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x8
test dl 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x4
test dl 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffeb
or eax 0x8
cmp eax 0x200
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffd
or eax ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x20 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x20 ] eax
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
mov eax [ ecx + 0x60 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x60 ] eax
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ eax + 0x60 ] 0xffffffe1
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffe7
or eax 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffe
or eax 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_42d0c9
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
push edi
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] 0x1
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
mov edx 0xfffff3ff
and eax 0x3
sub eax 0x0
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
dec eax
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
dec eax
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
dec eax
je r-xdata
fld [ ecx + 0x50 ]
fstp [ ebx ]
fld [ ecx + 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
dec eax
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
dec eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] 0x0
pop esi
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax 0x0
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_42cf86
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x1
je r-xdata
call sub_428ca8
mov [ eax ] 0x21
add eax 0xfffffffe
cmp eax 0x1
ja r-xdata
pop ebp
retn
call sub_428ca8
mov [ eax ] 0x22
pop ebp
retn
sub_42cfb3
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub esp 0x20
xor ecx ecx
mov eax ecx
mov ecx [ eax * 8 + rw-data ]
inc eax
cmp eax 0x1d
jl r-xdata
push 0xffff
push [ ebp + 0x28 ]
call sub_42d0da
push [ ebp + 0x8 ]
call sub_42cf86
fld [ ebp + 0x20 ]
add esp 0xc
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_42d0da
lea eax [ ebp - 0x20 ]
push eax
call sub_437bdb
add esp 0xc
test eax eax
jne r-xdata
cmp [ eax * 8 + rw-data ] edx
je r-xdata
jmp r-xdata
fld [ ebp - 0x8 ]
pop esi
jmp r-xdata
push esi
call sub_42cf86
pop ecx
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
sub_42d053
push 0x8
push r--data
call sub_428a80
cmp [ rw-data ] 0x1
jl r-xdata
call sub_428ac5
retn
mov eax [ ebp + 0x8 ]
test al 0x40
je r-xdata
and eax 0xffffffbf
mov [ ebp + 0x8 ] eax
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_42d0da
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
not ecx
and eax [ ebp + 0xc ]
and cx [ ebp - 0x4 ]
or cx ax
movzx eax cx
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_42d105
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rw-data ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
mov esp ebp
pop ebp
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_42d16d
push ebp
mov ebp esp
push esi
call sub_429b44
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov edx [ esi + 0x5c ]
mov ecx edx
push edi
mov edi [ ebp + 0x8 ]
lea eax [ edx + 0x90 ]
cmp ecx eax
jae r-xdata
add ecx 0xc
lea eax [ edx + 0x90 ]
cmp ecx eax
jb r-xdata
xor ecx ecx
cmp [ ecx ] edi
je r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
mov edx [ ecx + 0x8 ]
test edx edx
je r-xdata
test ecx ecx
je r-xdata
cmp edx 0x5
jne r-xdata
cmp edx 0x1
jne r-xdata
and [ ecx + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] eax
cmp [ ecx + 0x4 ] 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop edi
push [ ecx + 0x4 ]
and [ ecx + 0x8 ] 0x0
call edx
push 0x24
pop edi
mov eax [ esi + 0x5c ]
and [ edi + eax + 0x8 ] 0x0
add edi 0xc
cmp edi 0x90
jl r-xdata
cmp [ ecx ] 0xc000008e
mov edi [ esi + 0x64 ]
jne r-xdata
cmp [ ecx ] 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp [ ecx ] 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp [ ecx ] 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
or eax 0xffffffff
pop ebx
jmp r-xdata
cmp [ ecx ] 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp [ ecx ] 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp [ ecx ] 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp [ ecx ] 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp [ ecx ] 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_42d2c8
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_428ca8
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
xor eax eax
mov [ ecx ] ax
jmp r-xdata
pop esi
pop ebp
retn
push ebx
mov ebx ecx
push edi
mov edi eax
cmp edx 0xffffffff
jne r-xdata
xor eax eax
mov [ ecx ] ax
sub esi ecx
sub ebx esi
test edx edx
jne r-xdata
dec edi
je r-xdata
test edi edi
pop edi
pop ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ebx ] ax
dec edx
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
movzx eax [ esi ]
mov [ ebx + esi ] ax
lea esi [ esi + 0x2 ]
test ax ax
je r-xdata
jmp r-xdata
movzx eax [ esi + ebx ]
mov [ ebx ] ax
lea ebx [ ebx + 0x2 ]
test ax ax
je r-xdata
xor eax eax
mov [ ecx ] ax
call sub_428ca8
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
push 0x50
mov [ ecx + eax * 2 - 0x2 ] dx
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_428f36
mov eax esi
sub_42d386
push 0x8
push r--data
call sub_428a80
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
add eax 0xc
add eax edi
push eax
call [ EnterCriticalSection@IAT ]
xor eax eax
inc eax
call sub_428ac5
retn
push 0xa
call sub_429d8b
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42d40b
push ebx
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_429fab
add esp 0xc
inc [ esi + 0x8 ]
sub_42d414
push 0x18
push r--data
call sub_428a80
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
and [ ebp - 0x24 ] 0x0
push 0xb
call sub_429e13
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_429d8b
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
or eax esi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42d5b4
mov eax esi
mov edi [ ebx * 4 + rw-data ]
test edi edi
je r-xdata
call sub_428ac5
retn
push 0x40
push 0x20
call sub_428955
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x20 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x20 ] edi
mov eax [ ebx * 4 + rw-data ]
add eax 0x800
cmp edi eax
jae r-xdata
mov [ ebx * 4 + rw-data ] ecx
add [ rw-data ] 0x20
cmp esi 0xffffffff
jne r-xdata
test [ edi + 0x4 ] 0x1
jne r-xdata
mov esi ebx
shl esi 0x5
mov [ ebp - 0x1c ] esi
mov eax esi
sar eax 0x5
mov ecx esi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push esi
call sub_42d386
pop ecx
test eax eax
jne r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
and [ ecx + 0x8 ] 0x0
add ecx 0x40
mov [ ebp - 0x20 ] ecx
jmp r-xdata
inc ebx
jmp r-xdata
add edi 0x40
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
mov eax [ ebx * 4 + rw-data ]
add eax 0x800
cmp ecx eax
jae r-xdata
mov [ ebp - 0x28 ] ebx
cmp ebx 0x40
jge r-xdata
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
push 0xa
call sub_429d8b
pop ecx
mov [ ebp - 0x4 ] 0x1
cmp [ edi + 0x8 ] 0x0
jne r-xdata
lea eax [ edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
test [ edi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_42d4ec
push 0x0
push 0xfa0
lea eax [ edi + 0xc ]
push eax
call sub_429fab
add esp 0xc
inc [ edi + 0x8 ]
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
lea eax [ edi + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
mov [ edi + 0x4 ] 0x1
or [ edi ] 0xffffffff
mov esi edi
sub esi [ ebx * 4 + rw-data ]
sar esi 0x6
mov eax ebx
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_42d5bd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_428ca8
mov [ eax ] 0x9
call sub_428c74
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov edi eax
mov esi eax
sar edi 0x5
and esi 0x1f
shl esi 0x6
mov ecx [ edi * 4 + rw-data ]
test [ esi + ecx + 0x4 ] 0x1
je r-xdata
cmp [ esi + ecx ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi * 4 + rw-data ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
xor ecx ecx
sub eax ecx
je r-xdata
pop edi
pop esi
pop ebp
retn
push ecx
push 0xfffffff6
dec eax
je r-xdata
push ecx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ecx
push 0xfffffff4
jmp r-xdata
sub_42d643
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_428c74
and [ eax ] 0x0
call sub_428ca8
mov [ eax ] 0x9
jmp r-xdata
call sub_428c74
and [ eax ] 0x0
call sub_428ca8
mov [ eax ] 0x9
call sub_428f36
cmp ecx [ rw-data ]
jae r-xdata
or eax 0xffffffff
pop ebp
retn
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_42d6aa
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push edi
test ecx ecx
js r-xdata
call sub_428ca8
mov [ eax ] 0x9
call sub_428c74
and [ eax ] 0x0
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov ebx ecx
mov edi ecx
sar ebx 0x5
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
cmp [ edi + eax ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push esi
mov esi [ ebp + 0xc ]
jne r-xdata
mov eax [ ebx * 4 + rw-data ]
mov [ edi + eax ] esi
xor eax eax
pop esi
jmp r-xdata
sub ecx 0x0
je r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
push 0xfffffff6
dec ecx
je r-xdata
push esi
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push esi
push 0xfffffff4
jmp r-xdata
sub_42d72c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
add ecx 0xc
mov eax [ eax * 4 + rw-data ]
add eax ecx
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_42d752
push 0x64
push r--data
call sub_428a80
push 0xb
call sub_429d8b
pop ecx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x40
push 0x20
pop edi
push edi
call sub_428955
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
mov [ rw-data ] eax
mov [ rw-data ] edi
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_430a30
add esp 0xc
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x74 ]
push eax
call [ GetStartupInfoW@IAT ]
cmp [ ebp - 0x42 ] 0x0
je r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov al [ ecx + 0x24 ]
and al 0x7f
mov [ ecx + 0x24 ] al
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
mov eax [ rw-data ]
jmp r-xdata
call sub_428ac5
retn
push 0xfffffffe
pop ebx
mov eax [ ebp - 0x40 ]
test eax eax
je r-xdata
add eax 0x800
cmp ecx eax
jae r-xdata
mov [ ebp - 0x4 ] ebx
call sub_42d9fd
xor eax eax
mov esi edi
shl esi 0x6
add esi [ rw-data ]
mov [ ebp - 0x24 ] esi
cmp [ esi ] 0xffffffff
je r-xdata
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
add eax 0x4
mov [ ebp - 0x28 ] eax
add eax ecx
mov [ ebp - 0x20 ] eax
mov eax 0x800
cmp ecx eax
jl r-xdata
mov [ esi + 0x4 ] 0x81
test edi edi
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor esi esi
inc esi
mov [ ebp - 0x30 ] esi
mov ecx eax
mov [ ebp - 0x1c ] ecx
lea eax [ edi - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x80
mov [ esi + 0x4 ] al
jmp r-xdata
mov edi ebx
mov [ ebp - 0x2c ] edi
push 0xfffffffe
pop ebx
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x20 ]
push 0x40
push edi
call sub_428955
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
mov [ esi + 0x4 ] al
mov [ esi ] ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
je r-xdata
inc edi
jmp r-xdata
xor edi edi
mov esi [ edx ]
cmp esi 0xffffffff
je r-xdata
mov [ esi * 4 + rw-data ] ecx
add [ rw-data ] edi
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov eax [ eax + edi * 4 ]
mov [ eax + 0x10 ] ebx
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x2c ] edi
cmp edi 0x3
jge r-xdata
inc edi
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
add edx 0x4
mov [ ebp - 0x20 ] edx
jmp r-xdata
cmp esi ebx
je r-xdata
inc esi
mov [ ebp - 0x30 ] esi
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov [ esi ] ecx
and eax 0xff
cmp eax 0x2
jne r-xdata
cmp edi ecx
jge r-xdata
mov al [ eax ]
test al 0x1
je r-xdata
cmp [ rw-data ] ecx
jge r-xdata
mov eax [ esi * 4 + rw-data ]
add eax 0x800
cmp ecx eax
jae r-xdata
cmp eax 0x3
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
jmp r-xdata
test al 0x8
jne r-xdata
push 0x0
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_429fab
add esp 0xc
inc [ esi + 0x8 ]
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x8
mov [ esi + 0x4 ] al
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x24 ] esi
mov eax [ edx ]
mov [ esi ] eax
mov eax [ ebp - 0x28 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0x0
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_429fab
add esp 0xc
inc [ esi + 0x8 ]
mov edx [ ebp - 0x20 ]
push esi
call [ GetFileType@IAT ]
mov edx [ ebp - 0x20 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x1c ]
sub_42da06
push 0x10
push r--data
call sub_428a80
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_428c74
mov [ eax ] ebx
call sub_428ca8
mov [ eax ] 0x9
jmp r-xdata
call sub_428c74
mov [ eax ] ebx
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
jne r-xdata
push esi
call sub_42d386
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_428c74
and [ eax ] 0x0
jmp r-xdata
call sub_428ca8
mov [ eax ] 0x9
call sub_428c74
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_42daf5
add esp 0xc
mov edi eax
jmp r-xdata
call sub_428ca8
mov [ eax ] 0x9
call sub_428f36
call sub_428ac5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42dacd
mov eax edi
jmp r-xdata
sub_42daf5
push ebp
mov ebp esp
mov eax 0x1af0
call sub_431ac0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x1abc ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1ac8 ] eax
push edi
xor edi edi
mov [ ebp - 0x1ad0 ] ecx
mov [ ebp - 0x1ac0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
jmp r-xdata
mov edx eax
mov ecx eax
sar edx 0x5
and ecx 0x1f
shl ecx 0x6
mov [ ebp - 0x1ad8 ] edx
push ebx
mov edx [ edx * 4 + rw-data ]
mov [ ebp - 0x1adc ] ecx
mov bl [ ecx + edx + 0x24 ]
add bl bl
sar bl 0x1
cmp bl 0x2
je r-xdata
call sub_428c74
and [ eax ] esi
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_42c776
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
not eax
test al 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x1ac8 ]
call sub_428c74
and [ eax ] esi
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
jmp r-xdata
test [ ecx + edx + 0x4 ] 0x20
je r-xdata
push [ ebp - 0x1ac8 ]
call sub_435deb
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push eax
call sub_431a41
add esp 0x10
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
mov ecx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1adc ]
test [ eax + ecx + 0x4 ] 0x80
je r-xdata
mov eax [ ebp - 0x1ad8 ]
mov ecx [ ebp - 0x1adc ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push 0x0
lea edx [ ebp - 0x1ae0 ]
push edx
push [ ebp + 0x10 ]
push [ ebp - 0x1ad0 ]
push [ eax + ecx ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ad0 ]
xor edi edi
mov [ ebp - 0x1acc ] edi
test bl bl
jne r-xdata
call sub_429b2c
xor ecx ecx
mov eax [ eax + 0x6c ]
cmp [ eax + 0xa8 ] ecx
lea eax [ ebp - 0x1ae8 ]
push eax
mov eax [ ebp - 0x1ad8 ]
sete cl
mov [ ebp - 0x1ac4 ] ecx
mov ecx [ ebp - 0x1adc ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
mov esi [ ebp - 0x1ae0 ]
xor edi edi
jmp r-xdata
mov ecx edx
cmp bl 0x2
jne r-xdata
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x1ac8 ] edx
test ebx ebx
je r-xdata
cmp [ ebp - 0x1ac4 ] esi
je r-xdata
mov ecx [ ebp - 0x1abc ]
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x1ac8 ] ecx
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax [ ebp - 0x1ad8 ]
mov ecx [ ebp - 0x1adc ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x40
je r-xdata
xor ecx ecx
lea edi [ ebp - 0x140c ]
mov eax edx
mov [ ebp - 0x1ac4 ] ecx
sub eax [ ebp - 0x1ad0 ]
call [ GetConsoleCP@IAT ]
mov edx [ ebp - 0x1ad0 ]
xor ecx ecx
and [ ebp - 0x1ac8 ] ecx
mov [ ebp - 0x1af0 ] eax
mov [ ebp - 0x1acc ] ecx
mov [ ebp - 0x1ad4 ] edx
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
test bl bl
je r-xdata
sub esi ecx
mov eax esi
test edi edi
je r-xdata
mov [ ebp - 0x1aec ] 0xa
mov [ ebp - 0x1aec ] 0xa
call sub_428ca8
mov [ eax ] 0x1c
call sub_428c74
and [ eax ] 0x0
cmp [ edx ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1adc ]
lea eax [ ebp - 0x140c ]
sub edi eax
lea eax [ ebp - 0x1ae0 ]
push 0x0
push eax
push edi
lea eax [ ebp - 0x140c ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov cl [ edx ]
inc edx
inc eax
mov [ ebp - 0x1ae1 ] cl
cmp cl 0xa
mov [ ebp - 0x1ac8 ] edx
mov ecx [ ebp - 0x1ac4 ]
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
xor edx edx
mov [ ebp - 0x1ac0 ] edx
mov [ ebp - 0x1aec ] 0xa
mov edx [ ebp - 0x1ad0 ]
push 0x5
pop ebx
cmp edi ebx
jne r-xdata
xor esi esi
lea ecx [ ebp - 0xd64 ]
push esi
push esi
push 0xd55
push ecx
lea ecx [ ebp - 0x1ab8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov esi [ ebp - 0x1ac0 ]
mov edi [ ebp - 0x1acc ]
mov [ ebp - 0x1ac4 ] eax
test eax eax
je r-xdata
movzx esi [ edi ]
add ecx 0x2
add edi 0x2
mov [ ebp - 0x1ac8 ] edi
cmp si [ ebp - 0x1aec ]
jne r-xdata
lea eax [ ebp - 0x140c ]
mov [ ebp - 0x1ac4 ] ecx
mov ecx [ ebp - 0x1adc ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ae0 ]
push eax
push ebx
lea eax [ ebp - 0x140c ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
mov esi [ ebp - 0x1ac0 ]
mov edi [ ebp - 0x1acc ]
test eax eax
je r-xdata
movzx edi [ ecx ]
add eax 0x2
add ecx 0x2
cmp di [ ebp - 0x1aec ]
jne r-xdata
xor eax eax
jmp r-xdata
add esi [ ebp - 0x1ae0 ]
cmp [ ebp - 0x1ae0 ] edi
jl r-xdata
mov dl [ ebp - 0x1ae1 ]
mov [ edi ] dl
inc edi
mov edx [ ebp - 0x1ac8 ]
inc ecx
mov [ ebp - 0x1ac4 ] ecx
cmp ecx 0x13ff
jb r-xdata
inc [ ebp - 0x1abc ]
mov [ edi ] 0xd
inc edi
inc ecx
cmp bl 0x1
je r-xdata
mov dl [ eax ]
xor eax eax
mov ecx [ ebp - 0x1adc ]
cmp dl 0xa
sete al
mov [ ebp - 0x1ae8 ] eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
mov [ ebp - 0x1ac4 ] eax
cmp [ ecx + eax + 0x38 ] edi
je r-xdata
push edi
call sub_428c87
pop ecx
jmp r-xdata
call sub_428ca8
mov [ eax ] 0x9
call sub_428c74
mov [ eax ] ebx
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x1ac0 ] ecx
mov [ eax ] si
add edx 0x2
add eax 0x2
cmp edx 0x6a8
jb r-xdata
push 0xd
pop edi
mov [ eax ] di
add eax 0x2
mov edi [ ebp - 0x1ac8 ]
add edx 0x2
add esi [ ebp - 0x1ae0 ]
mov [ ebp - 0x1ac0 ] esi
cmp [ ebp - 0x1ae0 ] ebx
jl r-xdata
mov [ ebx ] di
add edx 0x2
add ebx 0x2
cmp edx 0x13fe
jb r-xdata
add [ ebp - 0x1abc ] 0x2
mov [ ebx ] si
add ebx 0x2
add edx 0x2
mov edi [ ebp - 0x1acc ]
mov edx [ ebp - 0x1ac8 ]
mov eax edx
sub eax [ ebp - 0x1ad0 ]
cmp eax ebx
jb r-xdata
cmp eax ebx
jae r-xdata
movzx ecx [ eax ]
xor edx edx
cmp cx [ ebp - 0x1aec ]
mov [ ebp - 0x1acc ] ecx
sete dl
add eax 0x2
mov [ ebp - 0x1ac4 ] edx
mov edx [ ebp - 0x1ac0 ]
add edx 0x2
mov [ ebp - 0x1ad4 ] eax
mov [ ebp - 0x1ac0 ] edx
cmp bl 0x2
jne r-xdata
movsx eax dl
push eax
call sub_423775
pop ecx
test eax eax
je r-xdata
mov al [ ecx + eax + 0x34 ]
mov [ ebp - 0xc ] al
mov eax [ ebp - 0x1ac4 ]
mov [ ebp - 0xb ] dl
push 0x2
and [ ecx + eax + 0x38 ] edi
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x1ac0 ]
mov edi eax
mov eax [ ebp - 0x1ac4 ]
mov [ ebp - 0x1acc ] edi
mov ecx [ ebp - 0x1ac0 ]
add ecx [ ebp - 0x1ae0 ]
mov eax [ ebp - 0x1ac4 ]
mov [ ebp - 0x1ac0 ] ecx
cmp eax ecx
jg r-xdata
cmp ecx ebx
jae r-xdata
mov ecx [ ebp - 0x1ac4 ]
mov eax ecx
mov edx [ ebp - 0x1ad0 ]
sub eax edx
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
push ecx
call sub_437bde
pop ecx
mov ecx [ ebp - 0x1acc ]
cmp ax cx
jne r-xdata
cmp bl 0x2
jne r-xdata
cmp bl 0x1
je r-xdata
push 0x1
push [ ebp - 0x1ad4 ]
mov eax [ ebp - 0x1ad0 ]
mov edx [ ebp - 0x1ad4 ]
sub eax edx
add eax [ ebp + 0x10 ]
cmp eax 0x1
jbe r-xdata
lea eax [ ebp - 0x1acc ]
push eax
call sub_43643a
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x1ac8 ]
mov esi ecx
mov edx [ ebp - 0x1ad0 ]
sub esi edx
mov [ ebp - 0x1ac0 ] esi
cmp esi ebx
jb r-xdata
push 0x0
sub eax ecx
lea edx [ ebp - 0x1ae0 ]
push edx
push eax
lea eax [ ebp - 0xd64 ]
add eax ecx
mov ecx [ ebp - 0x1adc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
and [ ebp - 0x1ae8 ] 0x0
lea ebx [ ebp - 0x140c ]
mov eax ecx
push 0xd
sub eax edx
mov edx [ ebp - 0x1ae8 ]
pop esi
jmp r-xdata
add esi 0x2
cmp [ ebp - 0x1ac4 ] edi
je r-xdata
cmp edx [ ebp + 0x10 ]
jb r-xdata
mov eax [ ebp - 0x1ad4 ]
mov ebx [ ebp - 0x1ad8 ]
inc esi
mov al [ edx ]
mov edx [ ebp - 0x1adc ]
mov ecx [ ebx * 4 + rw-data ]
mov [ edx + ecx + 0x34 ] al
mov eax [ ebx * 4 + rw-data ]
mov [ edx + eax + 0x38 ] 0x1
jmp r-xdata
push 0x2
push edx
lea eax [ ebp - 0x1acc ]
push eax
call sub_43643a
add esp 0xc
cmp eax 0xffffffff
je r-xdata
and [ ebp - 0x1ae8 ] 0x0
lea eax [ ebp - 0x1ab8 ]
mov edi [ ebp - 0x1ac8 ]
sub ecx edx
mov edx [ ebp - 0x1ae8 ]
jmp r-xdata
cmp eax ecx
jg r-xdata
mov edx [ ebp - 0x1ac0 ]
mov eax [ ebp - 0x1ad4 ]
push 0xd
pop eax
push eax
mov [ ebp - 0x1acc ] eax
call sub_437bde
pop ecx
mov ecx [ ebp - 0x1acc ]
cmp ax cx
jne r-xdata
and [ ebp - 0x1ac4 ] edi
test bl bl
jne r-xdata
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x1ac8 ]
push ecx
mov ecx [ ebp - 0x1adc ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1ad4 ]
inc eax
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc esi
inc [ ebp - 0x1abc ]
mov esi [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1abc ]
add esi ecx
mov eax [ ebp - 0x1ac4 ]
cmp [ ebp - 0x1ac8 ] eax
jl r-xdata
xor ecx ecx
inc eax
inc [ ebp - 0x1ac0 ]
push ecx
push ecx
push 0x5
mov [ ebp - 0x1ad4 ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp - 0x1acc ]
push eax
push ecx
push [ ebp - 0x1af0 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x1ac4 ] eax
test eax eax
je r-xdata
test esi esi
jne r-xdata
cmp [ ebp - 0x1ae8 ] edi
je r-xdata
mov ecx [ ebp - 0x1acc ]
jmp r-xdata
mov ecx [ ebp - 0x1adc ]
lea eax [ ebp - 0x1ac8 ]
push 0x0
push eax
push 0x1
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] 0xd
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x1
jl r-xdata
inc [ ebp - 0x1abc ]
inc esi
sub_42e35a
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x270 ]
push ebx
push esi
mov [ ebp - 0x230 ] eax
mov eax [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x210 ] eax
xor eax eax
mov ebx eax
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x254 ] eax
mov esi eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x238 ] eax
call sub_422ff5
call sub_428ca8
mov [ ebp - 0x258 ] eax
mov eax [ ebp - 0x230 ]
test eax eax
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
jne r-xdata
cmp [ ebp - 0x264 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
mov edx [ ebp - 0x210 ]
test edx edx
je r-xdata
push eax
call sub_424856
pop ecx
mov ecx eax
cmp ecx 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_42c776
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x268 ]
and [ ecx + 0x70 ] 0xfffffffd
mov dl [ edx ]
xor eax eax
mov [ ebp - 0x224 ] eax
mov ecx eax
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x250 ] eax
mov [ ebp - 0x211 ] dl
mov [ ebp - 0x248 ] dl
test dl dl
je r-xdata
mov edx rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax ecx
mov eax [ ebp - 0x210 ]
cmp ecx 0xffffffff
je r-xdata
mov edx ecx
sar eax 0x5
and edx 0x1f
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov ecx rw-data
cmp ecx 0xfffffffe
je r-xdata
test [ edx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x210 ]
jmp [ eax * 4 + jump_table_42eeba ]
mov edi [ ebp - 0x244 ]
movsx edi [ edi + eax * 8 + r--data ]
mov eax edi
mov [ ebp - 0x244 ] edi
mov edi [ ebp - 0x21c ]
sar eax 0x4
mov [ ebp - 0x244 ] eax
cmp eax 0x7
ja r-xdata
test [ ecx + 0x24 ] 0x80
jne r-xdata
inc eax
mov [ ebp - 0x210 ] eax
test ecx ecx
js r-xdata
xor eax eax
or [ ebp - 0x228 ] 0xffffffff
mov ebx eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x238 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
xor eax eax
mov [ ebp - 0x228 ] eax
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
xor eax eax
movsx eax dl
cmp eax 0x64
jg r-xdata
or ebx 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
imul ecx [ ebp - 0x240 ] 0xa
movsx eax dl
add ecx 0xffffffd0
add eax ecx
mov [ ebp - 0x240 ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x240 ] eax
test eax eax
jns r-xdata
imul ecx [ ebp - 0x228 ] 0xa
movsx eax dl
add ecx 0xffffffd0
add eax ecx
mov [ ebp - 0x228 ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x228 ] eax
test eax eax
mov eax [ ebp - 0x210 ]
mov [ ebp - 0x21c ] edi
jns r-xdata
mov eax [ ebp - 0x210 ]
mov al [ eax ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push [ ebp - 0x248 ]
call sub_42eeda
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push [ ebp - 0x248 ]
call sub_42eeda
mov ecx [ ebp - 0x210 ]
add esp 0xc
mov al [ ecx ]
inc ecx
mov [ ebp - 0x248 ] al
mov [ ebp - 0x210 ] ecx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
mov [ ebp - 0x218 ] ebx
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov ecx [ ebp - 0x220 ]
or ebx 0x4
neg eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x240 ] eax
jmp r-xdata
mov dl [ eax ]
mov [ ebp - 0x211 ] dl
mov [ ebp - 0x248 ] dl
test dl dl
jne r-xdata
or [ ebp - 0x228 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
mov edi [ ebp - 0x210 ]
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or ebx 0x20
jmp r-xdata
mov eax [ ebp - 0x210 ]
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or ebx 0x40
mov [ ebp - 0x218 ] ebx
cmp eax 0x53
jg r-xdata
or ebx 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
mov edi [ ebp - 0x210 ]
cmp [ edi + 0x1 ] 0x32
jne r-xdata
mov eax edi
add eax 0x2
or ebx 0x8000
jmp r-xdata
cmp [ eax ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov edx [ ebp - 0x228 ]
mov ecx 0x7fffffff
cmp edx 0xffffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x228 ] 0x8
cmp eax 0x65
jl r-xdata
mov ecx [ edi ]
add edi 0x8
mov [ ebp - 0x21c ] edi
xor esi esi
mov edi [ edi - 0x4 ]
jmp r-xdata
test ebx 0x1000
je r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or ebx 0x4
sub eax 0x3
mov eax [ ebp - 0x210 ]
jne r-xdata
cmp al 0x69
je r-xdata
mov eax edi
add eax 0x2
and ebx 0xffff7fff
jmp r-xdata
mov [ ebp - 0x218 ] ebx
jmp r-xdata
or ebx 0x10
jmp r-xdata
inc eax
or ebx 0x1000
jmp r-xdata
or ebx 0x800
jmp r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test ebx 0x810
je r-xdata
mov ecx edx
mov [ ebp - 0x224 ] 0xa
sub eax 0x3
jne r-xdata
mov [ ebp - 0x224 ] 0x10
pop eax
mov [ ebp - 0x254 ] eax
test bl bl
jns r-xdata
cmp [ ebp - 0x24c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
test bl 0x40
je r-xdata
add edi 0x4
xor esi esi
mov [ ebp - 0x21c ] edi
test bl 0x20
je r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
test ebx 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or ebx 0x8
cmp al 0x6f
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push 0x27
test ebx 0x8000
jne r-xdata
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x234 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x220 ]
test bl 0x40
je r-xdata
mov eax [ ebp - 0x228 ]
lea esi [ ebp - 0x20c ]
or ebx 0x40
mov ecx 0x200
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x23c ] ecx
test eax eax
jns r-xdata
cmp eax 0x69
je r-xdata
test ebx 0x9000
jne r-xdata
cmp edi esi
jg r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
or ebx 0x800
mov [ ebp - 0x218 ] ebx
add dl 0x20
mov [ ebp - 0x25c ] 0x1
mov [ ebp - 0x211 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax esi
jmp r-xdata
mov esi [ rw-data ]
mov [ ebp - 0x238 ] 0x1
mov eax esi
test ecx ecx
je r-xdata
mov esi [ rw-data ]
push eax
call sub_422ed5
xor eax eax
pop ecx
mov [ ebp - 0x250 ] eax
mov edi [ ebp - 0x240 ]
sub edi [ ebp - 0x224 ]
mov eax [ ebp - 0x234 ]
sub edi eax
test bl 0xc
jne r-xdata
test ebx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x228 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
mov edx [ ebp - 0x228 ]
test edx edx
jns r-xdata
mov edi esi
jl r-xdata
mov ecx [ edi - 0x4 ]
mov edi esi
mov eax [ edi - 0x4 ]
movzx eax [ edi - 0x4 ]
jmp r-xdata
movsx eax [ edi - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
dec eax
dec eax
jne r-xdata
test ebx 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
sub eax esi
sar eax 0x1
jmp r-xdata
xor edx edx
push [ ebp - 0x258 ]
lea ecx [ ebp - 0x220 ]
push ecx
push [ ebp - 0x230 ]
push eax
lea eax [ ebp - 0x22c ]
push eax
call sub_42ef4e
add esp 0x14
test bl 0x8
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x20
call sub_42ef22
mov eax [ ebp - 0x234 ]
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp eax ecx
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x278 ] eax
mov [ ebp - 0x21c ] edi
mov eax [ edi - 0x4 ]
mov [ ebp - 0x274 ] eax
lea eax [ ebp - 0x270 ]
push eax
push [ ebp - 0x25c ]
movsx eax dl
push [ ebp - 0x228 ]
push eax
push [ ebp - 0x23c ]
lea eax [ ebp - 0x278 ]
push esi
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
mov edi ebx
add esp 0x1c
and edi 0x80
je r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
call sub_4361aa
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
and ebx 0xfffffff7
mov eax 0x200
mov [ ebp - 0x218 ] ebx
cmp edx eax
jle r-xdata
xor edx edx
inc edx
jmp r-xdata
neg ecx
adc edi esi
neg edi
or ebx 0x100
mov [ ebp - 0x218 ] ebx
cmp ecx esi
jae r-xdata
cdq
mov ecx eax
mov edi edx
jmp r-xdata
mov [ ebp - 0x224 ] eax
movsx eax [ eax ]
test ebx 0x800
je r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
test ebx 0x810
je r-xdata
or ebx 0x800
mov [ ebp - 0x218 ] ebx
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax esi
add eax 0x2
test ecx ecx
jne r-xdata
cmp [ ebp - 0x238 ] 0x0
mov eax [ ebp - 0x224 ]
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x234 ] 0x1
cmp eax 0xa3
jle r-xdata
mov eax ecx
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x228 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x228 ] 0x0
jne r-xdata
mov eax [ ebp - 0x220 ]
test bl 0x20
je r-xdata
mov [ ebp - 0x224 ] 0x8
test bl bl
jns r-xdata
mov eax ecx
or eax edi
jne r-xdata
mov edx eax
xor ecx ecx
mov [ ebp - 0x238 ] ecx
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x238 ] 0x1
sar eax 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x224 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x224 ]
push eax
call sub_437d45
add esp 0x10
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x244 ] eax
jmp r-xdata
inc eax
dec ecx
cmp [ eax ] dx
je r-xdata
push [ ebp - 0x258 ]
lea ecx [ ebp - 0x220 ]
push ecx
push [ ebp - 0x230 ]
push eax
push esi
call sub_42ef4e
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x30
call sub_42ef22
add esp 0x10
mov [ ebp - 0x22c ] 0x20
lea edi [ eax + 0x15d ]
push edi
call sub_42899d
mov dl [ ebp - 0x211 ]
mov [ ebp - 0x250 ] eax
pop ecx
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x270 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ edi ] eax
mov [ edi ] ax
jmp r-xdata
or ebx 0x200
mov [ ebp - 0x218 ] ebx
jmp r-xdata
lea esi [ ebp - 0xd ]
mov [ ebp - 0x234 ] esi
lea esi [ ebp - 0x20c ]
jmp r-xdata
mov [ ebp - 0x24c ] 0x1
jmp r-xdata
mov [ ebp - 0x238 ] eax
lea eax [ ebp - 0x270 ]
push eax
movzx eax dl
push eax
call sub_42373b
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x250 ]
test eax eax
je r-xdata
test bl 0x4
je r-xdata
mov ecx esi
mov [ ebp - 0x228 ] 0xa3
mov esi eax
mov [ ebp - 0x23c ] edi
jmp r-xdata
push esi
call sub_4238c0
pop ecx
jmp r-xdata
or ebx 0x100
inc esi
mov [ ebp - 0x218 ] ebx
jmp r-xdata
lea eax [ ebp - 0x270 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ ebp - 0x24c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x224 ]
cdq
push edx
push eax
push edi
push ecx
call sub_42a9c0
add ecx 0x30
mov [ ebp - 0x27c ] ebx
mov [ ebp - 0x23c ] eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ecx
or eax edi
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x20
call sub_42ef22
add esp 0x10
or ecx 0xffffffff
mov [ ebp - 0x220 ] ecx
jmp r-xdata
cmp [ ebp - 0x260 ] eax
je r-xdata
mov edi [ ebp - 0x21c ]
mov edx [ ebp - 0x228 ]
mov [ esi ] cl
dec esi
mov ecx [ ebp - 0x23c ]
jmp r-xdata
add ecx [ ebp - 0x254 ]
mov ebx [ ebp - 0x218 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
mov [ ebp - 0x224 ] eax
test ebx 0x200
je r-xdata
test ecx ecx
js r-xdata
push [ ebp - 0x258 ]
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
lea eax [ ebp - 0xc ]
push [ ebp - 0x260 ]
push eax
call sub_42ef4e
mov eax [ ebp - 0x23c ]
add esp 0x14
mov ecx [ ebp - 0x27c ]
test eax eax
jne r-xdata
mov eax edx
dec edx
mov [ ebp - 0x228 ] edx
test eax eax
jg r-xdata
test eax eax
je r-xdata
dec eax
mov [ ebp - 0x23c ] eax
movzx eax [ ecx ]
add ecx 0x2
push eax
push 0x6
lea eax [ ebp - 0xc ]
mov [ ebp - 0x27c ] ecx
push eax
lea eax [ ebp - 0x260 ]
push eax
call sub_437d45
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec esi
inc [ ebp - 0x224 ]
mov [ esi ] 0x30
jmp r-xdata
cmp [ esi ] 0x30
je r-xdata
mov ecx [ ebp - 0x220 ]
sub_42eeda
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
test [ edx + 0xc ] 0x40
je r-xdata
dec [ edx + 0x4 ]
js r-xdata
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push edx
movsx eax al
push eax
call sub_42af9e
pop ecx
pop ecx
mov eax [ edx ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
inc [ edx ]
movzx eax cl
jmp r-xdata
mov eax [ ebp + 0x10 ]
inc [ eax ]
pop ebp
retn
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
jne r-xdata
sub_42ef22
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
test esi esi
jg r-xdata
push edi
push [ ebp + 0x10 ]
dec esi
push [ ebp + 0x8 ]
call sub_42eeda
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_42ef4e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x10 ]
mov eax [ esi ]
mov [ ebp + 0x18 ] eax
test [ edi + 0xc ] 0x40
je r-xdata
and [ esi ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jle r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
test ebx ebx
jg r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop edi
pop esi
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
dec ebx
push edi
movzx eax [ eax ]
push eax
call sub_42eeda
mov eax [ ebp + 0x14 ]
add esp 0xc
inc [ ebp + 0x8 ]
cmp [ eax ] 0xffffffff
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
push eax
push edi
push 0x3f
call sub_42eeda
mov eax [ ebp + 0x14 ]
add esp 0xc
pop ebx
mov eax [ ebp + 0x18 ]
sub_42efc6
push 0x14
push r--data
call sub_428a80
xor esi esi
mov [ ebp - 0x1c ] esi
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_428ca8
mov [ eax ] 0x9
jmp r-xdata
call sub_428ca8
mov [ eax ] 0x9
call sub_428f36
cmp edi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax edi
sar eax 0x5
mov [ ebp - 0x20 ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ ebx + eax + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_42d386
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebp - 0x20 ]
mov eax [ eax * 4 + rw-data ]
test [ ebx + eax + 0x4 ] 0x1
je r-xdata
call sub_428ca8
mov [ eax ] 0x9
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
push edi
call sub_42d643
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
call sub_428ac5
retn
mov [ ebp - 0x1c ] esi
test esi esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42f08e
mov eax esi
jmp r-xdata
call sub_428c74
mov [ eax ] esi
sub_42f0af
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_434b64
add esp 0x18
pop ebp
retn
push eax
push [ ebp + 0x10 ]
call sub_435bdd
pop ecx
pop ecx
sub_42f0de
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
test esi esi
jle r-xdata
mov ecx [ ebp + 0x24 ]
xor edi edi
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx esi
xor eax eax
cmp [ ebp + 0x28 ] eax
push 0x0
push 0x0
push esi
push [ ebp + 0x14 ]
setne al
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ecx eax
mov [ ebp - 0x8 ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov ecx eax
mov [ ebp + 0x24 ] eax
mov eax esi
sub eax ecx
dec eax
cmp eax esi
lea esi [ eax + 0x1 ]
jl r-xdata
inc eax
test ecx ecx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov esi eax
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_42c776
mov esp ebp
pop ebp
retn
push ecx
push ebx
push esi
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
add ecx ecx
lea eax [ ecx + 0x8 ]
cmp eax ecx
jbe r-xdata
push ebx
call sub_427d56
pop ecx
mov eax edi
mov esi [ ebp - 0x8 ]
push 0x0
push 0x0
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_434b64
mov edi eax
add esp 0x18
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
lea eax [ eax * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
test [ ebp + 0x10 ] 0x400
je r-xdata
push eax
call sub_42588c
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
call sub_434c20
mov ebx esp
test ebx ebx
je r-xdata
test edi edi
jle r-xdata
mov ecx [ ebp + 0x20 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp edi ecx
jg r-xdata
test ebx ebx
je r-xdata
add ebx 0x8
mov eax [ ebp - 0x8 ]
push edi
push esi
push eax
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_434b64
add esp 0x18
test eax eax
je r-xdata
lea ecx [ edi + edi ]
lea eax [ ecx + 0x8 ]
cmp eax ecx
jbe r-xdata
push ecx
push [ ebp + 0x1c ]
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_434b64
add esp 0x18
jmp r-xdata
push esi
call sub_427d56
pop ecx
xor eax eax
push eax
push eax
cmp [ ebp + 0x20 ] eax
jne r-xdata
lea eax [ edi * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push eax
jmp r-xdata
push eax
call sub_42588c
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_434c20
mov esi esp
test esi esi
je r-xdata
push edi
push esi
push eax
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_42f2e2
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_422ff5
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_42f0de
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_42f359
movlpd xmm0 [ esp + 0x4 ]
movlpd xmm7 [ r--data ]
movlpd xmm2 [ r--data ]
andpd xmm7 xmm0
movsd xmm4 xmm0
psrlq xmm0 0x2c
pextrw eax xmm0 0x0
orpd xmm7 xmm2
pextrw ecx xmm4 0x3
and eax 0xff
add eax 0x1
and eax 0x1fe
mulsd xmm7 [ eax * 4 + r--data ]
movlpd xmm5 [ eax * 4 + r--data ]
add eax eax
movapd xmm6 [ eax * 4 + r--data ]
mov edx 0x7fef
sub edx ecx
sub ecx 0x10
or ecx edx
cmp ecx 0x80000000
jae r-xdata
movlpd xmm1 [ esp + 0xc ]
movlpd xmm3 [ r--data ]
movd eax xmm1
movsd xmm2 xmm1
andpd xmm1 xmm3
psrlq xmm1 0x20
movd ecx xmm1
cmp ecx 0x7ff00000
jae r-xdata
mov ecx 0x0
mov edx 0x3fe7f
movlpd xmm7 [ esp + 0x4 ]
movlpd xmm4 [ esp + 0x4 ]
movd edx xmm7
psrlq xmm7 0x20
movd eax xmm7
mov ecx eax
and eax 0x7fffffff
cmp eax 0x7ff00000
jb r-xdata
or eax ecx
cmp eax 0x0
je r-xdata
movlpd xmm4 [ esp + 0x4 ]
movlpd xmm2 [ esp + 0xc ]
movlpd xmm3 [ r--data ]
xorpd xmm1 xmm1
andpd xmm3 xmm2
pcmpeqd xmm1 xmm3
pmovmskb eax xmm1
and eax 0xff
cmp eax 0xff
jne r-xdata
and edx 0x7ff0
sub eax 0x3ff0
add eax edx
mov edx 0x40a0
sub edx eax
sub eax 0x3c70
or edx eax
cmp edx 0x80000000
jae r-xdata
movlpd xmm3 [ r--data ]
xorpd xmm1 xmm1
andpd xmm3 xmm2
pcmpeqd xmm1 xmm3
pmovmskb eax xmm1
and eax 0xff
cmp eax 0xff
jne r-xdata
ja r-xdata
movd eax xmm4
psrlq xmm4 0x20
movd edx xmm4
and edx 0x7fffffff
mov ecx eax
or eax edx
movlpd xmm0 [ r--data ]
mov edx 0x1a
cmp eax 0x0
je r-xdata
cmp edx 0x0
jge r-xdata
addsd xmm2 xmm2
movsd xmm0 xmm2
mov edx 0x3ee
jmp r-xdata
movd eax xmm4
cmp eax 0x0
jne r-xdata
pshufd xmm4 xmm1 0x44
mulpd xmm4 xmm6
pextrw eax xmm4 0x3
and eax 0x7ff0
mov edx 0x40a0
sub edx eax
sub eax 0x3c70
or edx eax
cmp edx 0x80000000
jb r-xdata
subsd xmm4 xmm6
subsd xmm2 xmm4
movlpd xmm4 [ r--data ]
andpd xmm3 xmm1
andpd xmm4 xmm6
subsd xmm0 xmm2
xorpd xmm2 xmm2
mov edx 0x4060
pinsrw xmm2 edx 0x3
movsd xmm5 xmm3
mulsd xmm3 xmm4
subsd xmm6 xmm4
subsd xmm1 xmm5
mulsd xmm3 xmm2
mulsd xmm5 xmm6
movapd xmm2 [ r--data ]
mulsd xmm4 xmm1
cvtsd2si eax xmm3
mulsd xmm6 xmm1
movapd xmm1 [ r--data ]
addsd xmm5 xmm4
pshufd xmm4 xmm6 0xee
addsd xmm5 xmm6
mov edx 0x1ff7f
sub edx eax
add eax 0x1e1ff
or edx eax
sub eax 0x1e1ff
cmp edx 0x0
jle r-xdata
pextrw eax xmm2 0x3
movlpd xmm4 [ esp + 0x4 ]
and eax 0x8000
xor ecx 0xbff00000
or edx ecx
cmp edx 0x0
je r-xdata
addsd xmm4 xmm4
movsd xmm0 xmm4
mov edx 0x3ee
jmp r-xdata
cmp edx 0x0
ja r-xdata
sub esp 0x1c
movlpd [ esp + 0x10 ] xmm0
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
add edx 0x18
mov [ esp + 0x4 ] edx
sub edx 0x8
mov [ esp ] edx
call sub_433648
fld [ esp + 0x10 ]
add esp 0x1c
retn
movd eax xmm4
mov edx 0x1d
and eax 0x7fffffff
cmp eax 0x7ff00000
ja r-xdata
mov ecx 0x0
neg edx
add edx 0x7fef
psllq xmm3 0x34
orpd xmm2 xmm3
mov ecx 0x3f3
movd xmm3 ecx
psrlq xmm1 0x14
psubd xmm1 xmm3
pxor xmm3 xmm3
pmaxsw xmm1 xmm3
psllq xmm2 xmm1
pcmpeqd xmm2 xmm3
pmovmskb eax xmm2
mov ecx edx
and edx 0x7fff
cmp edx 0x7ff0
jae r-xdata
psrlq xmm4 0x20
movd edx xmm4
cmp edx 0x3ff00000
je r-xdata
cmp eax 0x80000000
jb r-xdata
cmp eax 0x0
jle r-xdata
add ecx eax
and eax 0x7f
and ecx 0xffffff80
add ecx 0x1ff80
addsd xmm4 xmm0
movsd xmm0 xmm3
addsd xmm3 [ r--data ]
mulpd xmm2 xmm7
subsd xmm3 [ r--data ]
mulpd xmm7 xmm7
subsd xmm0 xmm3
add eax eax
add eax eax
add eax eax
add eax eax
movapd xmm3 [ eax + r--data ]
movapd xmm6 [ r--data ]
mulpd xmm1 xmm7
addpd xmm2 xmm1
pshufd xmm1 xmm2 0xee
mulsd xmm2 xmm7
xorpd xmm7 xmm7
mov edx 0x3f80
addsd xmm2 xmm1
pinsrw xmm7 edx 0x3
addsd xmm2 xmm4
movlpd xmm4 [ r--data ]
movd xmm1 ecx
mulsd xmm2 [ esp + 0xc ]
mulsd xmm0 xmm7
psllq xmm1 0x2d
pshufd xmm1 xmm1 0x44
movapd xmm7 [ r--data ]
addsd xmm5 xmm2
mulpd xmm3 xmm1
addsd xmm0 xmm5
unpcklpd xmm0 xmm0
mulpd xmm6 xmm0
mulsd xmm4 xmm0
mulpd xmm0 xmm0
addpd xmm7 xmm6
mulpd xmm7 xmm0
mulsd xmm0 xmm3
pshufd xmm6 xmm7 0xee
mulsd xmm0 xmm7
pshufd xmm5 xmm3 0xee
mulsd xmm6 xmm3
mulsd xmm4 xmm3
addsd xmm0 xmm5
sub esp 0x10
addsd xmm0 xmm6
addsd xmm0 xmm4
addsd xmm0 xmm3
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm0 [ r--data ]
mov edx 0x1c
cmp eax 0x0
je r-xdata
jmp r-xdata
jb r-xdata
mov edx eax
and edx 0x7fffffff
cmp edx 0x0
jne r-xdata
andpd xmm7 xmm0
movsd xmm4 xmm0
andpd xmm0 [ r--data ]
psrlq xmm0 0x2c
pextrw eax xmm0 0x0
orpd xmm7 xmm2
and eax 0xff
add eax 0x1
and eax 0x1fe
mulsd xmm7 [ eax * 4 + r--data ]
movlpd xmm5 [ eax * 4 + r--data ]
add eax eax
movapd xmm6 [ eax * 4 + r--data ]
mov edx 0x43e7f
jmp r-xdata
movlpd xmm3 [ r--data ]
xorpd xmm1 xmm1
andpd xmm3 xmm4
pcmpeqd xmm1 xmm3
pmovmskb ecx xmm1
and ecx 0xff
cmp ecx 0xff
jne r-xdata
and eax 0xff
cmp eax 0xff
jne r-xdata
cmp edx 0xbff00000
jne r-xdata
movlpd xmm4 [ esp + 0x4 ]
pextrw edx xmm4 0x3
and edx 0x7ff0
sub edx 0x3ff0
pextrw eax xmm1 0x3
xor eax edx
and eax 0x8000
cmp eax 0x0
jne r-xdata
or ecx 0x1ff80
movd xmm0 ecx
psllq xmm0 0x2d
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
cmp eax 0xfffc0200
jle r-xdata
cmp eax 0x40000
jae r-xdata
pextrw eax xmm4 0x3
and eax 0x7ff0
cmp eax 0x3ff0
jae r-xdata
pextrw eax xmm4 0x3
and eax 0x7ff0
cmp eax 0x3ff0
jb r-xdata
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
cmp ecx 0x0
ja r-xdata
mov edx [ esp + 0x10 ]
and edx 0x80000000
cmp edx 0x0
je r-xdata
movd xmm1 edx
psubq xmm0 xmm1
psrlq xmm0 0x8
cvtdq2pd xmm0 xmm0
movlpd xmm1 [ r--data ]
movsd xmm3 xmm7
psrlq xmm7 0x26
pextrw eax xmm7 0x0
andpd xmm4 [ r--data ]
and eax 0xff
add eax 0x1
and eax 0x1fe
mulsd xmm3 [ eax * 4 + r--data ]
mulsd xmm5 [ eax * 4 + r--data ]
add eax eax
addpd xmm6 [ eax * 4 + r--data ]
orpd xmm4 [ r--data ]
addsd xmm6 xmm0
andpd xmm1 xmm4
movsd xmm2 xmm3
psrlq xmm3 0x1f
pextrw eax xmm3 0x0
movlpd xmm0 [ r--data ]
subsd xmm4 xmm1
movlpd xmm7 [ r--data ]
and eax 0x1ff
add eax 0x1
and eax 0x3fe
mulsd xmm5 [ eax * 4 + r--data ]
mulsd xmm2 [ eax * 4 + r--data ]
addpd xmm6 [ eax * 8 + r--data ]
andpd xmm0 xmm5
subsd xmm5 xmm0
addsd xmm7 xmm2
movsd xmm3 xmm0
mulsd xmm0 xmm1
mulsd xmm1 xmm5
mulsd xmm3 xmm4
subsd xmm2 xmm0
mulsd xmm4 xmm5
movsd xmm0 xmm6
subsd xmm2 xmm1
addsd xmm6 xmm7
movlpd xmm1 [ esp + 0xc ]
pextrw eax xmm1 0x3
subsd xmm2 xmm3
subsd xmm0 xmm6
movlpd xmm3 [ r--data ]
pextrw edx xmm6 0x3
subsd xmm2 xmm4
movsd xmm4 xmm6
addsd xmm0 xmm7
subsd xmm7 xmm2
subsd xmm6 xmm2
unpcklpd xmm7 xmm7
and eax 0x7ff0
cmp eax 0x7ff0
jae r-xdata
pextrw ecx xmm4 0x3
and ecx 0x8000
cmp ecx 0x0
je r-xdata
movlpd xmm2 [ esp + 0x4 ]
movd eax xmm2
psrlq xmm2 0x20
movd edx xmm2
and edx 0x7fffffff
or eax edx
mov ecx 0x0
cmp eax 0x0
je r-xdata
movlpd xmm1 [ esp + 0xc ]
movlpd xmm2 [ esp + 0xc ]
mov ecx 0x3f4
movd xmm3 ecx
andpd xmm1 [ r--data ]
psrlq xmm1 0x34
psubd xmm1 xmm3
movlpd xmm3 [ r--data ]
psllq xmm2 xmm1
pcmpeqd xmm2 xmm3
pmovmskb eax xmm2
and eax 0xff
mov ecx 0x3ff01
add ecx eax
and ecx 0x40000
cmp edx 0x10
jb r-xdata
fld1
retn
movlpd xmm0 [ r--data ]
movd xmm1 ecx
mulsd xmm0 xmm0
psllq xmm1 0x2d
orpd xmm0 xmm1
mov edx 0x19
jmp r-xdata
jmp r-xdata
push esi
mov edx eax
and eax 0x7f
add ecx 0x80
and edx 0xffffff80
add edx 0x3fe80
push edi
mov edi 0x0
mov edx 0x18
cmp ecx 0x0
je r-xdata
push esi
mov edx eax
and eax 0x7f
add ecx 0x3ff00
sub edx 0x80
and edx 0xffffff80
push edi
mov edi 0x3ff0
jmp r-xdata
fld [ r--data ]
retn
fldz
retn
fldz
retn
shl ecx 0xd
and eax ecx
cmp eax 0x0
jne r-xdata
shl ecx 0xd
and eax ecx
mov edx 0x7ff00000
or edx eax
movd xmm0 edx
psllq xmm0 0x20
movlpd xmm1 [ r--data ]
movlpd xmm2 [ esp + 0x4 ]
divsd xmm1 xmm2
mov edx 0x1b
jmp r-xdata
movlpd xmm1 [ esp + 0xc ]
pextrw eax xmm1 0x3
and eax 0x8000
cmp eax 0x0
je r-xdata
and eax 0xff
cmp eax 0xff
jne r-xdata
movlpd xmm1 [ r--data ]
movlpd xmm0 [ r--data ]
mulsd xmm1 xmm1
mov edx 0x1c
jmp r-xdata
xorpd xmm0 xmm0
mov eax 0x43f0
pinsrw xmm0 eax 0x3
movlpd xmm7 [ r--data ]
movlpd xmm2 [ r--data ]
mulsd xmm0 xmm4
movd edx xmm4
psrlq xmm4 0x20
movd eax xmm4
cmp edx 0x0
je r-xdata
mov edx 0xbfe7f
movlpd xmm3 [ r--data ]
movlpd xmm2 [ r--data ]
jmp r-xdata
pop esi
addsd xmm0 xmm1
mulsd xmm0 xmm7
mulsd xmm6 xmm0
addsd xmm0 xmm6
pextrw eax xmm0 0x3
and eax 0x7ff0
mov edx 0x18
cmp eax 0x7ff0
je r-xdata
pop esi
mulsd xmm0 xmm7
mulsd xmm1 xmm7
addsd xmm0 xmm1
mulsd xmm6 xmm0
addsd xmm0 xmm6
pextrw eax xmm0 0x3
and eax 0x7ff0
mov edx 0x18
cmp eax 0x7ff0
je r-xdata
movlpd xmm0 [ r--data ]
mulsd xmm0 xmm0
jmp r-xdata
movlpd xmm0 [ r--data ]
mulsd xmm0 [ r--data ]
jmp r-xdata
addsd xmm4 xmm0
movsd xmm0 xmm3
addsd xmm3 [ r--data ]
mov esi edx
sub esi 0x1ff80
mulpd xmm2 xmm7
subsd xmm3 [ r--data ]
mulpd xmm7 xmm7
subsd xmm0 xmm3
add eax eax
add eax eax
add eax eax
add eax eax
movapd xmm3 [ eax + r--data ]
movapd xmm6 [ r--data ]
mulpd xmm1 xmm7
addpd xmm2 xmm1
pshufd xmm1 xmm2 0xee
mulsd xmm2 xmm7
addsd xmm2 xmm1
addsd xmm2 xmm4
movlpd xmm4 [ r--data ]
movd xmm1 edx
sub edx 0x1ff80
neg edx
sar edx 0x7
add edx 0x2
mov eax edx
and eax 0x20
add edx eax
xorpd xmm7 xmm7
mov eax 0x3f80
pinsrw xmm7 eax 0x3
mulsd xmm2 [ esp + 0x14 ]
mulsd xmm0 xmm7
psllq xmm1 0x2d
pshufd xmm1 xmm1 0x44
movapd xmm7 [ r--data ]
addsd xmm5 xmm2
mulpd xmm3 xmm1
addsd xmm0 xmm5
unpcklpd xmm0 xmm0
mulpd xmm6 xmm0
mulsd xmm4 xmm0
mulpd xmm0 xmm0
addpd xmm7 xmm6
mulpd xmm7 xmm0
mulsd xmm0 xmm3
pshufd xmm6 xmm7 0xee
mulsd xmm0 xmm7
pshufd xmm5 xmm3 0xee
mulsd xmm6 xmm3
mulsd xmm4 xmm3
movd xmm7 ecx
psllq xmm7 0x2d
movd xmm2 edx
pcmpeqd xmm1 xmm1
psllq xmm1 xmm2
addsd xmm0 xmm5
addsd xmm0 xmm6
andpd xmm1 xmm3
addsd xmm0 xmm4
xorpd xmm6 xmm6
pcmpeqd xmm4 xmm4
psllq xmm4 xmm2
subsd xmm3 xmm1
movsd xmm2 xmm1
addsd xmm1 xmm0
andpd xmm1 xmm4
pinsrw xmm6 edi 0x3
pop edi
subsd xmm2 xmm1
addsd xmm0 xmm2
addsd xmm0 xmm3
cmp esi 0x0
jg r-xdata
fld [ r--data ]
retn
fldz
retn
fldz
retn
movlpd xmm1 [ esp + 0xc ]
pextrw eax xmm1 0x3
and eax 0x8000
cmp eax 0x0
je r-xdata
movlpd xmm1 [ esp + 0xc ]
movlpd xmm2 [ esp + 0xc ]
mov ecx 0x3f4
movd xmm3 ecx
andpd xmm1 [ r--data ]
psrlq xmm1 0x34
psubd xmm1 xmm3
pxor xmm3 xmm3
psllq xmm2 xmm1
pcmpeqd xmm2 xmm3
pmovmskb eax xmm2
and eax 0xff
cmp eax 0xff
je r-xdata
mov edx 0x19
cmp eax 0x0
je r-xdata
mov edx 0x19
cmp eax 0x0
je r-xdata
fldz
retn
movlpd xmm1 [ esp + 0xc ]
pextrw eax xmm1 0x3
and eax 0x8000
cmp eax 0x0
je r-xdata
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
fld [ r--data ]
retn
sub_42fea0
mov [ ebp - 0x90 ] 0xfe
or ch ch
jne r-xdata
call sub_430031
or eax eax
je r-xdata
fxch st1
jmp sub_430246
xor ch ch
cmp eax 0x2
je r-xdata
call sub_42ffee
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
fxch st1
fabs
jmp r-xdata
not ch
test dl 0x40
jne r-xdata
fld1
fdivrp st1
fyl2x
jmp r-xdata
or ch ch
je r-xdata
fscale
jmp sub_430198
fchs
sub_42feb1
mov [ ebp - 0x90 ] 0xfe
xor ch ch
fldl2e
fmulp st1
call sub_42ffee
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
test dl 0x40
jne r-xdata
fld1
fdivrp st1
or ch ch
je r-xdata
fscale
jmp sub_430198
fchs
sub_42ff5d
call sub_430031
fstp st0
fstp st0
or cl cl
jne r-xdata
mov [ ebp - 0x90 ] 0x2
fld [ r--data ]
cmp eax 0x1
jne r-xdata
fldz
cmp eax 0x1
jne r-xdata
retn
or ch ch
je r-xdata
or ch ch
je r-xdata
fchs
jmp r-xdata
fchs
sub_42ffee
fld st0
fabs
fld [ r--data ]
fcompp
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x41
jne r-xdata
pop eax
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x1
jne r-xdata
fld st0
frndint
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
mov dl [ ebp - 0x9f ]
fxch st1
fsub st1
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fabs
f2xm1
retn
mov [ ebp - 0x90 ] 0x4
jmp sub_4301a6
fstp st0
fld [ r--data ]
or ch ch
je r-xdata
retn
fchs
sub_430031
fld st0
frndint
fcomp st1
fwait
fnstsw ax
sahf
jne r-xdata
mov eax 0x0
jmp r-xdata
fld st0
fmul [ r--data ]
fld st0
frndint
fcompp
fwait
fnstsw ax
sahf
je r-xdata
retn
mov eax 0x2
jmp r-xdata
mov eax 0x1
sub_430065
push esi
sub esp 0x74
mov esi esp
push esi
sub esp 0x8
fstp [ esp ]
sub esp 0x8
fstp [ esp ]
fwait
fnsave [ esi + 0x8 ]
call sub_4304c4
add esp 0x14
frstor [ esi + 0x8 ]
fld [ esi ]
add esp 0x74
pop esi
test eax eax
je r-xdata
retn
jmp sub_430259
sub_4300a0
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx r--data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fwait
mov cl [ ebp - 0x9f ]
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_430107
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx r--data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fxch st1
mov cl [ ebp - 0x9f ]
fxam
fwait
fnstsw [ ebp - 0xa0 ]
fxch st1
mov ch [ ebp - 0x9f ]
shl ch 0x1
sar ch 0x1
rol ch 0x1
mov al ch
and al 0xf
xlat
mov ah al
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
shl ah 0x1
shl ah 0x1
or al ah
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_430207
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x7
jmp r-xdata
faddp st1
retn
sub_430270
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_437d60
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_430287
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_437d60
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_430315
mov eax [ edx + 0x4 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ edx + 0x4 ]
sub esp 0xa
or eax 0x7fff0000
mov [ esp + 0x6 ] eax
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
shld eax ecx 0xb
shl ecx 0xb
mov [ esp + 0x4 ] eax
mov [ esp ] ecx
fld [ esp ]
add esp 0xa
test eax 0x0
mov eax [ edx + 0x4 ]
retn
fld [ edx ]
retn
sub_43045c
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_424f88
pop ecx
pop ecx
test al 0x90
jne r-xdata
xor eax eax
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_437e69
fld [ ebp + 0x8 ]
fucom st1
fnstsw ax
pop ecx
pop ecx
fstp st1
test ah 0x44
jpe r-xdata
fstp st0
fmul [ r--data ]
push ecx
push ecx
fst [ ebp - 0x8 ]
fstp [ esp ]
call sub_437e69
fld [ ebp - 0x8 ]
fucompp
fnstsw ax
pop ecx
pop ecx
test ah 0x44
jpe r-xdata
xor eax eax
inc eax
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4304c4
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
mov ecx 0x7ff00000
push esi
xor esi esi
fabs
mov eax 0xfff00000
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp + 0x14 ] eax
jne r-xdata
cmp [ ebp + 0x10 ] esi
jne r-xdata
fstp st0
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp + 0x10 ] esi
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp [ ebp + 0x8 ] esi
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
fcom st1
fnstsw ax
fstp st1
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st1
fstp st0
fld [ rw-data ]
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
cmp [ ebp + 0x8 ] esi
jne r-xdata
fldz
fld [ ebp + 0x10 ]
fcom st1
fnstsw ax
test ah 0x41
je r-xdata
fcompp
fnstsw ax
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st1
fstp st0
fldz
jmp r-xdata
fstp [ eax ]
jmp r-xdata
fstp st0
fldz
jmp r-xdata
mov eax [ ebp + 0x18 ]
fld [ ebp + 0x10 ]
push ecx
push ecx
fstp [ esp ]
call sub_43045c
fldz
fld [ ebp + 0x10 ]
pop ecx
pop ecx
fcom st1
mov ecx eax
fnstsw ax
test ah 0x41
jne r-xdata
fcomp st1
fnstsw ax
test ah 0x5
mov eax [ ebp + 0x18 ]
jpo r-xdata
fld [ rw-data ]
xor esi esi
fstp [ eax ]
inc esi
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld [ rw-data ]
cmp ecx 0x1
jne r-xdata
fstp st0
fld1
jmp r-xdata
mov ecx [ ebp + 0x18 ]
fstp st0
fld1
fstp [ ecx ]
cmp ecx 0x1
jne r-xdata
fchs
jmp r-xdata
fstp st0
fld [ rw-data ]
sub_430600
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_430668
push 0x10
push r--data
call sub_428a80
xor ebx ebx
mov esi ebx
mov [ ebp - 0x1c ] esi
push 0x1
call sub_429d8b
pop ecx
mov [ ebp - 0x4 ] ebx
mov edi ebx
test esi esi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43077e
mov eax esi
call sub_428ac5
retn
and [ esi + 0xc ] 0x8000
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi ] ebx
mov [ esi + 0x1c ] ebx
or [ esi + 0x10 ] 0xffffffff
push 0x38
call sub_42899d
pop ecx
mov ecx eax
mov eax [ rw-data ]
mov [ eax + edi * 4 ] ecx
test ecx ecx
je r-xdata
test [ eax + 0xc ] 0x83
jne r-xdata
push ebx
push 0xfa0
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
add eax 0x20
push eax
call sub_429fab
add esp 0xc
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov esi [ eax + edi * 4 ]
mov [ ebp - 0x1c ] esi
mov [ esi + 0xc ] ebx
inc edi
jmp r-xdata
test [ eax + 0xc ] 0x8000
jne r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
lea eax [ edi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + edi * 4 ]
push edi
call sub_426dcd
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ edi + 0x10 ]
push eax
call sub_429e13
pop ecx
test eax eax
je r-xdata
mov esi eax
mov [ ebp - 0x1c ] esi
jmp r-xdata
push eax
push edi
call sub_426e37
pop ecx
pop ecx
sub_430787
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ecx ecx
push edi
mov edi [ rw-data ]
mov edx ecx
push 0x20
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
pop eax
jmp r-xdata
cmp [ esi ] ax
je r-xdata
add esi 0x2
movzx eax [ esi ]
cmp eax 0x61
je r-xdata
mov ebx 0x109
cmp eax 0x72
je r-xdata
push 0x20
pop eax
jmp r-xdata
mov [ ebp + 0xc ] 0x1000
mov ebx ecx
or edi 0x1
jmp r-xdata
cmp eax 0x77
je r-xdata
cmp [ esi ] ax
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
movzx eax ax
cmp eax 0x53
jg r-xdata
add esi 0x2
xor ecx ecx
inc ecx
movzx eax [ esi ]
test ax ax
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
add esi 0x2
xor eax eax
cmp [ esi ] ax
jne r-xdata
push 0x20
pop eax
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or edi 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_438721
add esp 0x14
test eax eax
jne r-xdata
cmp [ esi ] ax
je r-xdata
mov eax [ ebp + 0xc ]
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] ecx
add esi 0x2
push 0x3
push esi
push r--data
call sub_4237e2
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x20
jmp r-xdata
add esi 0x2
movzx eax [ esi ]
test ax ax
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x6
pop eax
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] ax
je r-xdata
inc edx
or edi 0x4000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0x6
jne r-xdata
and ebx 0xfffffffe
and edi 0xfffffffc
or ebx 0x2
or edi 0x80
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
add esi 0x2
cmp [ esi ] 0x3d
jne r-xdata
inc edx
and edi 0xffffbfff
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
add esi 0x2
cmp [ esi ] ax
je r-xdata
or ebx 0x4000
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_42394b
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_42394b
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_42394b
add esp 0xc
test eax eax
jne r-xdata
add esi 0x10
or ebx 0x20000
jmp r-xdata
add esi 0xe
or ebx 0x10000
sub_430a30
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_430ac0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_438855
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_438874
jmp r-xdata
sub_430ac0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_42c776
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_430a30
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_430b22
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_430b52
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_430b82
push 0x10
push r--data
call sub_428a80
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_428c74
mov [ eax ] ebx
call sub_428ca8
mov [ eax ] 0x9
jmp r-xdata
call sub_428c74
mov [ eax ] ebx
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
jne r-xdata
push esi
call sub_42d386
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_428c74
and [ eax ] 0x0
jmp r-xdata
call sub_428ca8
mov [ eax ] 0x9
or edi 0xffffffff
push esi
call sub_430c5d
pop ecx
mov edi eax
jmp r-xdata
call sub_428ca8
mov [ eax ] 0x9
call sub_428f36
call sub_428ac5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_430c35
mov eax edi
jmp r-xdata
sub_430c5d
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_42d643
pop ecx
cmp eax 0xffffffff
je r-xdata
xor esi esi
mov eax [ rw-data ]
cmp edi 0x1
jne r-xdata
xor eax eax
push esi
call sub_428c87
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp edi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push edi
call sub_42d643
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_42d643
push 0x1
mov esi eax
call sub_42d643
pop ecx
pop ecx
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
jmp r-xdata
push edi
call sub_42d5bd
pop ecx
mov ecx edi
and edi 0x1f
sar ecx 0x5
shl edi 0x6
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edi + 0x4 ] 0x0
test esi esi
je r-xdata
sub_430cf7
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test [ esi + 0xc ] 0x83
je r-xdata
pop esi
pop ebp
retn
test [ esi + 0xc ] 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_422ed5
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_430d27
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
mov eax [ edi + 0xc ]
test al 0x83
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ edi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ edi ] eax
push edi
call sub_436164
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ edi + 0xc ] eax
and [ edi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ edi + 0x18 ]
push [ edi + 0x8 ]
push edi
call sub_424856
pop ecx
push eax
call sub_430ec7
add esp 0xc
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
test [ edi + 0xc ] 0x82
jne r-xdata
cmp [ edi + 0x18 ] 0x200
jne r-xdata
push edi
call sub_424856
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ edi ]
dec [ edi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ edi ] ecx
jmp r-xdata
test [ edi + 0xc ] 0x8
je r-xdata
mov eax rw-data
push edi
call sub_424856
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop ebp
retn
test [ edi + 0xc ] 0x400
jne r-xdata
or [ edi + 0xc ] 0x2000
push esi
push edi
call sub_424856
mov esi eax
push edi
sar esi 0x5
call sub_424856
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
pop esi
jmp r-xdata
mov [ edi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_430e48
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_428ca8
push 0x16
pop esi
mov [ eax ] esi
call sub_428f36
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_422f60
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_428ca8
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_420fc0
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_428ca8
push 0x22
pop esi
mov [ eax ] esi
call sub_428f36
mov eax esi
jmp r-xdata
pop edi
sub_430ec7
push 0x10
push r--data
call sub_428a80
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_428c74
mov [ eax ] ebx
call sub_428ca8
mov [ eax ] 0x9
jmp r-xdata
call sub_428c74
mov [ eax ] ebx
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
jne r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
call sub_428c74
and [ eax ] 0x0
jmp r-xdata
push esi
call sub_42d386
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_428c74
and [ eax ] 0x0
call sub_428ca8
mov [ eax ] 0x16
jmp r-xdata
call sub_428ca8
mov [ eax ] 0x9
call sub_428ca8
mov [ eax ] 0x9
call sub_428c74
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_430fdb
add esp 0xc
mov edi eax
jmp r-xdata
call sub_428f36
call sub_428ac5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_430fb3
mov eax edi
jmp r-xdata
sub_430fdb
push ebp
mov ebp esp
sub esp 0x28
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
push 0xfffffffe
pop ecx
xor edi edi
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x28 ] esi
cmp eax ecx
jne r-xdata
test eax eax
js r-xdata
call sub_428c74
mov [ eax ] edi
call sub_428ca8
mov [ eax ] 0x9
jmp r-xdata
call sub_428c74
mov [ eax ] edi
call sub_428ca8
mov [ eax ] 0x9
cmp eax [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ecx eax
mov ebx eax
sar ecx 0x5
and ebx 0x1f
shl ebx 0x6
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x24 ] ebx
mov edx [ ecx * 4 + rw-data ]
mov al [ edx + ebx + 0x4 ]
test al 0x1
je r-xdata
cmp esi 0x7fffffff
jbe r-xdata
test esi esi
je r-xdata
call sub_428c74
mov [ eax ] edi
xor eax eax
jmp r-xdata
test al 0x2
jne r-xdata
call sub_428f36
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] edi
jne r-xdata
mov al [ edx + ebx + 0x24 ]
add al al
sar al 0x1
mov [ ebp + 0x13 ] al
movsx eax al
dec eax
je r-xdata
call sub_428c74
and [ eax ] edi
jmp r-xdata
mov eax esi
not eax
test al 0x1
je r-xdata
dec eax
jne r-xdata
call sub_428ca8
mov [ eax ] 0x16
jmp r-xdata
shr esi 0x1
cmp esi 0x4
jae r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax esi
not eax
test al 0x1
je r-xdata
push esi
call sub_42899d
mov [ ebp - 0x10 ] eax
pop ecx
test eax eax
jne r-xdata
push 0x4
pop esi
mov edx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x1c ] eax
test [ edx + ebx + 0x4 ] 0x48
je r-xdata
and esi 0xfffffffe
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_431a41
mov ecx [ ebp - 0xc ]
add esp 0x10
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + ebx + 0x28 ] eax
mov eax [ ebp - 0x10 ]
mov [ ecx + ebx + 0x2c ] edx
mov ecx [ ebp - 0xc ]
call sub_428ca8
mov [ eax ] 0xc
call sub_428c74
mov [ eax ] 0x8
jmp r-xdata
push [ ebp + 0x8 ]
call sub_435deb
test eax eax
mov eax [ ebp - 0xc ]
pop ecx
je r-xdata
mov dl [ edx + ebx + 0x5 ]
cmp dl 0xa
je r-xdata
mov eax [ eax * 4 + rw-data ]
lea ecx [ ebp - 0x14 ]
push 0x0
push ecx
push esi
push [ ebp - 0x1c ]
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ eax * 4 + rw-data ]
test [ ecx + ebx + 0x4 ] 0x80
je r-xdata
test esi esi
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x14 ]
test ecx ecx
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ecx + ebx ]
call [ GetConsoleMode@IAT ]
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ eax ] dl
xor edi edi
lea edx [ eax + 0x1 ]
inc edi
mov eax [ ecx * 4 + rw-data ]
dec esi
cmp [ ebp + 0x13 ] 0x0
mov [ ebp - 0x1c ] edx
mov [ eax + ebx + 0x5 ] 0xa
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_428ca8
mov [ eax ] 0x9
call sub_428c74
mov [ eax ] esi
jmp r-xdata
cmp ecx esi
ja r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x13 ] 0x2
jne r-xdata
mov eax [ ecx * 4 + rw-data ]
mov al [ eax + ebx + 0x25 ]
cmp al 0xa
je r-xdata
push eax
call sub_428c87
pop ecx
xor ebx ebx
jmp r-xdata
or ebx 0xffffffff
mov edx [ ebp - 0xc ]
add edi ecx
mov esi [ edx * 4 + rw-data ]
mov al [ esi + ebx + 0x4 ]
test al al
jns r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
shr esi 0x1
push eax
mov eax [ ebp - 0xc ]
push esi
push [ ebp - 0x1c ]
mov eax [ eax * 4 + rw-data ]
push [ eax + ebx ]
call [ ReadConsoleW@IAT ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x13 ] 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
lea ecx [ eax + eax ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ edx ] al
inc edx
mov eax [ ecx * 4 + rw-data ]
dec esi
cmp [ ebp + 0x13 ] 0x1
push 0x2
mov [ ebp - 0x1c ] edx
pop edi
mov [ eax + ebx + 0x25 ] 0xa
jne r-xdata
cmp ebx 0xfffffffe
je r-xdata
push eax
call sub_422ed5
pop ecx
cmp [ ebp - 0x20 ] 0x0
je r-xdata
test ecx ecx
je r-xdata
mov eax [ ecx * 4 + rw-data ]
mov al [ eax + ebx + 0x26 ]
cmp al 0xa
je r-xdata
mov eax edi
jmp r-xdata
mov edi ebx
test ecx ecx
je r-xdata
mov esi [ ebp - 0x10 ]
mov eax edi
cdq
mov edi esi
sub eax edx
mov ecx esi
sar eax 0x1
lea edx [ edi + eax * 2 ]
cmp edi edx
jae r-xdata
and al 0xfb
mov ecx [ ebp - 0x10 ]
cmp [ ecx ] 0xa
jne r-xdata
test esi esi
je r-xdata
and al 0xfb
mov ecx [ ebp - 0x10 ]
push 0xa
pop edx
cmp [ ecx ] dx
mov edx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
and edi 0xfffffffe
jmp r-xdata
push 0xd
mov [ ebp + 0x10 ] 0x1a
pop edi
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
cmp [ ebp + 0x13 ] 0x1
jne r-xdata
push 0xd
pop ecx
mov edi eax
or al 0x4
jmp r-xdata
push 0x3
mov [ edx ] al
inc edx
mov eax [ ecx * 4 + rw-data ]
dec esi
pop edi
push 0xa
pop ecx
mov [ ebp - 0x1c ] edx
mov [ eax + ebx + 0x26 ] cl
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
jmp r-xdata
push 0xd
pop ecx
mov [ ebp + 0x10 ] 0x1a
mov edi eax
or al 0x4
jmp r-xdata
mov ebx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
mov eax [ eax * 4 + rw-data ]
or [ eax + ebx + 0x4 ] 0x2
cmp ax di
je r-xdata
test edi edi
je r-xdata
mov ecx [ edx * 4 + rw-data ]
mov al [ ecx + ebx + 0x4 ]
test al 0x40
jne r-xdata
cmp al cl
je r-xdata
mov [ esi + ebx + 0x4 ] al
mov eax [ ebp - 0x10 ]
mov esi eax
mov [ ebp - 0x20 ] eax
lea ecx [ eax + edi ]
mov [ ebp - 0x1c ] ecx
cmp eax ecx
jae r-xdata
mov ecx [ edx * 4 + rw-data ]
mov al [ ecx + ebx + 0x4 ]
test al 0x40
jne r-xdata
cmp ax cx
je r-xdata
mov [ esi + ebx + 0x4 ] al
mov eax [ ebp - 0x10 ]
mov esi eax
mov [ ebp - 0x28 ] eax
lea ecx [ eax + edi ]
mov [ ebp - 0x20 ] ecx
cmp eax ecx
jae r-xdata
lea eax [ edx - 0x2 ]
cmp ecx eax
jae r-xdata
mov [ esi ] ax
add esi 0x2
add ecx 0x2
jmp r-xdata
dec esi
mov al [ esi ]
test al al
js r-xdata
mov al [ edi ]
mov [ esi ] al
inc esi
or al 0x2
mov [ ecx + ebx + 0x4 ] al
jmp r-xdata
mov eax [ ebp - 0x1c ]
dec eax
cmp edi eax
jae r-xdata
mov [ esi ] al
inc esi
inc edi
jmp r-xdata
mov ax [ edi ]
mov [ esi ] ax
add esi 0x2
or al 0x2
mov [ ecx + ebx + 0x4 ] al
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xfffffffe
cmp edi eax
jae r-xdata
mov [ esi ] ax
jmp r-xdata
cmp ecx edx
jb r-xdata
add ecx 0x2
push 0xa
pop eax
cmp [ ecx ] ax
je r-xdata
movzx eax al
xor edx edx
inc edx
cmp [ eax + rw-data ] 0x0
jne r-xdata
inc esi
jmp r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
inc edi
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edx * 4 + rw-data ]
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
cmp edi [ ebp - 0x1c ]
jb r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
add edi 0x2
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edx * 4 + rw-data ]
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push 0xa
pop edx
cmp [ edi + 0x2 ] dx
mov edx [ ebp - 0xc ]
jne r-xdata
add esi 0x2
add edi 0x2
jmp r-xdata
movzx eax [ ecx ]
cmp ax [ ebp + 0x10 ]
je r-xdata
jmp r-xdata
mov [ esi ] ax
add esi 0x2
push 0xd
pop eax
push eax
pop edi
movzx eax [ esi ]
movsx eax [ eax + rw-data ]
test eax eax
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0x28 ]
mov edi [ ebp - 0x10 ]
sub esi edi
shr eax 0x1
push eax
push [ ebp + 0xc ]
push esi
push edi
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov edi eax
test edi edi
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ esi ] cl
mov edi eax
inc esi
jmp r-xdata
push 0xa
pop eax
add edi 0x2
mov [ esi ] al
jmp r-xdata
mov al [ edi ]
cmp al 0x1a
je r-xdata
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ esi ] cx
push 0xa
pop eax
add edi 0x4
mov [ esi ] ax
jmp r-xdata
cmp edi [ ebp - 0x20 ]
jb r-xdata
inc eax
cmp eax edx
jne r-xdata
call sub_428ca8
mov [ eax ] 0x2a
jmp r-xdata
mov ebx [ ebp - 0x24 ]
cmp esi ebx
jb r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
cmp edi esi
setne cl
add edi edi
mov eax [ eax * 4 + rw-data ]
mov [ eax + ebx + 0x30 ] ecx
mov edx [ ebp - 0xc ]
push 0xd
pop ecx
mov [ esi ] cl
inc esi
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x48
je r-xdata
inc esi
jmp r-xdata
mov edx [ ebp - 0xc ]
push 0xd
pop ecx
mov [ esi ] cx
add esi 0x2
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x48
je r-xdata
add esi 0x2
jmp r-xdata
movzx eax [ edi ]
cmp ax [ ebp + 0x10 ]
je r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax * 4 + rw-data ]
test [ ecx + ebx + 0x4 ] 0x48
je r-xdata
add esi edx
jmp r-xdata
dec esi
inc edx
movzx eax [ esi ]
cmp [ eax + rw-data ] 0x0
je r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
push 0xa
pop eax
push 0xd
cmp [ ebp - 0x1 ] al
jne r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
push 0xa
pop eax
push 0xd
cmp [ ebp - 0x8 ] ax
jne r-xdata
neg edx
mov eax edx
push 0x1
cdq
push edx
push eax
push [ ebp + 0x8 ]
call sub_431a41
add esp 0x10
mov al [ esi ]
inc esi
mov [ ecx + ebx + 0x5 ] al
mov eax [ ebp - 0xc ]
cmp edx 0x2
jl r-xdata
cmp edx 0x4
jg r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_431a41
mov edx [ ebp - 0xc ]
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x1 ] al
je r-xdata
push 0xa
pop eax
cmp [ ebp - 0x1 ] al
jne r-xdata
mov [ esi ] 0xd
inc esi
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x1 ]
mov [ ecx + ebx + 0x5 ] al
jmp r-xdata
mov [ esi ] al
inc esi
jmp r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_431a41
mov edx [ ebp - 0xc ]
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x8 ] ax
je r-xdata
push 0xa
pop eax
cmp [ ebp - 0x8 ] ax
jne r-xdata
pop eax
mov [ esi ] ax
add esi 0x2
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x8 ]
push 0xa
mov [ ecx + ebx + 0x5 ] al
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x7 ]
mov [ ecx + ebx + 0x25 ] al
mov eax [ edx * 4 + rw-data ]
pop ecx
mov [ eax + ebx + 0x26 ] cl
mov [ esi ] ax
add esi 0x2
jmp r-xdata
cmp edx 0x3
jne r-xdata
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
inc esi
mov [ ecx + ebx + 0x25 ] al
mov eax [ ebp - 0xc ]
push 0xd
push 0xd
pop ecx
mov [ esi ] cl
mov [ esi ] al
inc esi
pop ecx
push 0xd
push 0xd
pop ecx
mov [ esi ] cx
mov [ esi ] ax
add esi 0x2
jmp r-xdata
pop ecx
sub esi edx
jmp r-xdata
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
inc esi
mov [ ecx + ebx + 0x26 ] al
sub_431770
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_431790
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_4317af
push 0x10
push r--data
call sub_428a80
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_428c74
mov [ eax ] ebx
call sub_428ca8
mov [ eax ] 0x9
jmp r-xdata
call sub_428c74
mov [ eax ] ebx
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
jne r-xdata
push esi
call sub_42d386
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_428c74
and [ eax ] 0x0
jmp r-xdata
call sub_428ca8
mov [ eax ] 0x9
call sub_428c74
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_43189e
add esp 0xc
mov edi eax
jmp r-xdata
call sub_428ca8
mov [ eax ] 0x9
call sub_428f36
call sub_428ac5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_431876
mov eax edi
jmp r-xdata
sub_43189e
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_42d643
mov edi eax
pop ecx
cmp edi 0xffffffff
jne r-xdata
push ebx
mov ebx [ SetFilePointerEx@IAT ]
lea eax [ ebp - 0x8 ]
push 0x1
push eax
push 0x0
push 0x0
push edi
call ebx
test eax eax
je r-xdata
call sub_428ca8
mov [ eax ] 0x9
or eax edi
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call sub_428c87
pop ecx
jmp r-xdata
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
push ecx
cdq
push edx
push eax
push edi
call ebx
test eax eax
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
pop ebx
mov eax esi
and esi 0x1f
sar eax 0x5
shl esi 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + esi + 0x4 ] 0xfd
mov eax [ ebp - 0x10 ]
push 0x0
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push edi
call ebx
call sub_428ca8
mov [ eax ] 0x16
sub_431945
push 0x18
push r--data
call sub_428a80
or esi 0xffffffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] esi
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_428c74
and [ eax ] 0x0
call sub_428ca8
mov [ eax ] 0x9
jmp r-xdata
call sub_428c74
and [ eax ] 0x0
call sub_428ca8
mov [ eax ] 0x9
call sub_428f36
cmp edi [ rw-data ]
jae r-xdata
mov edx esi
mov eax edi
sar eax 0x5
mov [ ebp - 0x1c ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ eax + ebx + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_42d386
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x1
je r-xdata
call sub_428ca8
mov [ eax ] 0x9
call sub_428c74
and [ eax ] 0x0
mov ebx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_431a41
add esp 0x10
mov esi eax
mov ebx edx
jmp r-xdata
mov eax esi
call sub_428ac5
retn
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_431a17
mov edx ebx
jmp r-xdata
sub_431a41
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_42d643
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
call sub_428ca8
mov [ eax ] 0x9
mov eax esi
and esi 0x1f
sar eax 0x5
shl esi 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + esi + 0x4 ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
push eax
call sub_428c87
pop ecx
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax edi
mov edx edi
jmp r-xdata
sub_431ac0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_431b0e
unpcklpd xmm0 xmm0
movapd xmm1 [ r--data ]
movapd xmm6 [ r--data ]
movapd xmm2 [ r--data ]
movapd xmm3 [ r--data ]
pextrw eax xmm0 0x3
and eax 0x7fff
mov edx 0x408f
sub edx eax
sub eax 0x3c90
or edx eax
cmp edx 0x80000000
jae r-xdata
mov eax [ esp + 0x8 ]
and eax 0x7fffffff
cmp eax 0x40900000
jae r-xdata
mulpd xmm1 xmm0
addpd xmm1 xmm6
movapd xmm7 xmm1
subpd xmm1 xmm6
mulpd xmm2 xmm1
movapd xmm4 [ r--data ]
mulpd xmm3 xmm1
movapd xmm5 [ r--data ]
subpd xmm0 xmm2
movd eax xmm7
mov ecx eax
and ecx 0x3f
shl ecx 0x4
sar eax 0x6
mov edx eax
subpd xmm0 xmm3
movapd xmm2 [ ecx + r--data ]
mulpd xmm4 xmm0
movapd xmm1 xmm0
mulpd xmm0 xmm0
addpd xmm5 xmm4
mulsd xmm0 xmm0
addsd xmm1 xmm2
unpckhpd xmm2 xmm2
movdqa xmm6 [ r--data ]
pand xmm7 xmm6
movdqa xmm6 [ r--data ]
paddq xmm7 xmm6
psllq xmm7 0x2e
mulpd xmm0 xmm5
addsd xmm1 xmm0
orpd xmm2 xmm7
unpckhpd xmm0 xmm0
addsd xmm0 xmm1
add edx 0x37e
cmp edx 0x77c
ja r-xdata
cmp eax 0x7ff00000
jae r-xdata
movlpd xmm0 [ esp + 0x4 ]
addsd xmm0 [ r--data ]
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
sub esp 0x12
fwait
fnstcw [ esp + 0x10 ]
mov dx [ esp + 0x10 ]
or dx 0x300
mov [ esp ] dx
fldcw [ esp ]
mov edx eax
sar eax 0x1
sub edx eax
movdqa xmm6 [ r--data ]
pandn xmm6 xmm2
add eax 0x3ff
movd xmm3 eax
psllq xmm3 0x34
orpd xmm6 xmm3
add edx 0x3ff
movd xmm4 edx
psllq xmm4 0x34
movlpd [ esp ] xmm0
fld [ esp ]
movlpd [ esp + 0x8 ] xmm6
fld [ esp + 0x8 ]
fmul st1
faddp st1
movlpd [ esp ] xmm4
fld [ esp ]
fmulp st1
fstp [ esp ]
movlpd xmm0 [ esp ]
fldcw [ esp + 0x10 ]
add esp 0x12
pextrw ecx xmm0 0x3
and ecx 0x7ff0
cmp ecx 0x7ff0
jae r-xdata
mulsd xmm0 xmm2
sub esp 0x10
addsd xmm0 xmm2
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
mov edx [ esp + 0x4 ]
cmp eax 0x7ff00000
ja r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x80000000
jae r-xdata
mov edx 0xe
jmp r-xdata
cmp ecx 0x0
je r-xdata
mov edx 0x3ea
jmp r-xdata
cmp edx 0x0
jne r-xdata
movlpd xmm0 [ r--data ]
mulsd xmm0 xmm0
mov edx 0xf
jmp r-xdata
movlpd xmm0 [ r--data ]
mulsd xmm0 xmm0
mov edx 0xe
jmp r-xdata
sub esp 0x1c
movlpd [ esp + 0x10 ] xmm0
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
add edx 0x10
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_433648
movlpd xmm0 [ esp + 0x10 ]
add esp 0x1c
mov edx 0xf
jmp r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x7ff00000
jne r-xdata
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
fld [ r--data ]
retn
fld [ r--data ]
retn
sub_431db0
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
fwait
fnstcw [ ebp - 0xa4 ]
fwait
cmp [ rw-data ] 0x0
je r-xdata
fxch st1
fst [ ebp - 0x86 ]
fxch st1
fst [ ebp - 0x7e ]
jmp r-xdata
call sub_430107
or [ ebp - 0x2c8 ] 0x3
call sub_431e73
pop ebx
leave
retn
sub_431dee
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
fwait
fnstcw [ ebp - 0xa4 ]
cmp [ rw-data ] 0x0
je r-xdata
fst [ ebp - 0x86 ]
jmp r-xdata
call sub_4300a0
or [ ebp - 0x2c8 ] 0x1
and [ ebp - 0x2c8 ] 0xfd
call sub_431e73
pop ebx
leave
retn
sub_431e2b
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_431fed
add esp 0x8
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_431fed
add esp 0x8
fwait
fnstcw [ ebp - 0xa4 ]
or [ ebp - 0x2c8 ] 0x2
call sub_430107
call sub_431e6c
pop ebx
leave
retn
sub_431e73
cmp [ rw-data ] 0x0
jne r-xdata
fldcw [ ebp - 0xa4 ]
fwait
retn
fst [ ebp - 0x2d0 ]
mov al [ ebp - 0x90 ]
or al al
je r-xdata
mov ax [ ebp - 0xa4 ]
and ax 0x20
jne r-xdata
cmp al 0xff
je r-xdata
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov ax [ ebp - 0x2ca ]
and ax 0x7ff0
cmp ax 0x7ff0
je r-xdata
cmp al 0xfe
je r-xdata
mov [ ebp - 0x8e ] 0x8
jmp r-xdata
mov [ ebp - 0x8e ] 0x3
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
jbe r-xdata
jmp r-xdata
mov ax [ ebp - 0x2ca ]
and ax 0x7ff0
or ax ax
je r-xdata
or al al
je r-xdata
push esi
push edi
mov ebx [ ebp - 0x94 ]
inc ebx
mov [ ebp - 0x8a ] ebx
test [ ebp - 0x2c8 ] 0x1
jne r-xdata
fmul [ r--data ]
mov [ ebp - 0x8e ] 0x4
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
jae r-xdata
cmp ax 0x7ff0
je r-xdata
movsx eax al
mov [ ebp - 0x8e ] eax
jmp r-xdata
fstp [ ebp - 0x76 ]
lea eax [ ebp - 0x8e ]
lea ebx [ ebp - 0xa4 ]
push ebx
push eax
mov ebx [ ebp - 0x94 ]
mov al [ ebx + 0xe ]
movsx eax al
push eax
call sub_437d60
add esp 0xc
pop edi
pop esi
fld [ ebp - 0x76 ]
jmp r-xdata
cld
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x86 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebx + 0xc ] 0x1
je r-xdata
fmul [ r--data ]
jmp r-xdata
jmp r-xdata
lea esi [ ebp + 0x10 ]
lea edi [ ebp - 0x7e ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub_431fba
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_431fed
add esp 0x8
fwait
fnstcw [ ebp - 0xa4 ]
and [ ebp - 0x2c8 ] 0xfd
call sub_4300a0
call sub_431e6c
pop ebx
leave
retn
sub_431fed
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ax [ ebp + 0xe ]
mov bx ax
and ax 0x7ff0
cmp ax 0x7ff0
jne r-xdata
fld [ ebp + 0x8 ]
or bx 0x7fff
mov [ ebp - 0x2 ] bx
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
shld eax ebx 0xb
mov [ ebp - 0x6 ] eax
mov [ ebp - 0xa ] ebx
fld [ ebp - 0xa ]
jmp r-xdata
pop ebx
leave
retn
sub_43204e
mov edx 0x0
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
cmpsd xmm1 xmm0 0x0
pextrw eax xmm1 0x0
cmp eax 0x0
ja r-xdata
sub ecx 0x3fe
add ecx edx
cvtsi2sd xmm6 ecx
unpcklpd xmm6 xmm6
shl ecx 0xa
add eax ecx
mov ecx 0x10
mov edx 0x0
cmp eax 0x0
cmove edx ecx
movapd xmm1 [ r--data ]
movapd xmm3 xmm0
movapd xmm2 [ r--data ]
mulpd xmm1 xmm0
mulpd xmm3 xmm3
addpd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm3
movapd xmm5 [ r--data ]
mulpd xmm6 xmm5
movapd xmm5 [ edx + r--data ]
andpd xmm4 xmm5
addpd xmm7 xmm6
addpd xmm7 xmm4
mulpd xmm1 xmm0
mulsd xmm3 xmm0
addpd xmm1 xmm2
movapd xmm6 xmm7
unpckhpd xmm6 xmm6
mulpd xmm1 xmm3
sub esp 0x10
movapd xmm0 xmm1
unpckhpd xmm1 xmm1
addsd xmm0 xmm1
addsd xmm0 xmm6
addsd xmm0 xmm7
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm2 [ r--data ]
divsd xmm2 xmm0
movlpd xmm1 [ r--data ]
mov edx 0x2
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
sub esp 0x1c
movlpd [ esp + 0x10 ] xmm1
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
add edx 0x10
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_433648
fld [ esp + 0x10 ]
add esp 0x1c
retn
movlpd xmm1 [ r--data ]
mulsd xmm0 xmm1
mov edx 0xffffffcc
jmp r-xdata
cmp ecx 0x7fe
ja r-xdata
movapd xmm5 xmm0
unpcklpd xmm0 xmm0
psrlq xmm5 0x34
pextrw ecx xmm5 0x0
movapd xmm1 [ r--data ]
movapd xmm3 [ r--data ]
movapd xmm4 [ r--data ]
movapd xmm6 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm3
addpd xmm4 xmm0
pextrw eax xmm4 0x0
and eax 0x7f0
movapd xmm4 [ eax + r--data ]
movapd xmm7 [ eax + r--data ]
andpd xmm6 xmm0
subpd xmm0 xmm6
mulpd xmm6 xmm4
subpd xmm6 xmm3
addsd xmm7 xmm6
mulpd xmm0 xmm4
movapd xmm4 xmm0
addpd xmm0 xmm6
and ecx 0xfff
sub ecx 0x1
cmp ecx 0x7fd
ja r-xdata
add ecx 0x1
and ecx 0x7ff
cmp ecx 0x7ff
jae r-xdata
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
movapd xmm2 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm2
cmpsd xmm2 xmm0 0x0
pextrw eax xmm2 0x0
cmp eax 0x0
je r-xdata
movlpd xmm2 [ esp + 0x4 ]
movlpd xmm0 [ esp + 0x4 ]
movd eax xmm2
psrlq xmm2 0x20
movd ecx xmm2
and ecx 0xfffff
or eax ecx
cmp eax 0x0
je r-xdata
xorpd xmm1 xmm1
divsd xmm1 xmm1
mov edx 0x3
mov edx 0x3e8
jmp r-xdata
fld [ r--data ]
retn
mov edx 0x3e8
jmp r-xdata
sub_4322be
unpcklpd xmm7 xmm7
movapd xmm2 xmm7
andpd xmm2 [ r--data ]
comisd xmm2 [ r--data ]
jpe r-xdata
mov edx 0x3eb
sub esp 0x10
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x14
mov [ esp + 0x8 ] edx
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_433648
add esp 0x10
fld [ esp + 0x4 ]
retn
jae r-xdata
movq xmm0 xmm2
movq xmm3 [ r--data ]
andpd xmm0 xmm3
ucomisd xmm0 xmm3
jpe r-xdata
comisd xmm2 [ r--data ]
jae r-xdata
mov eax [ esp + 0x8 ]
shr eax 0x1f
fld [ r--data ]
fadd [ eax * 8 + r--data ]
retn
comisd xmm2 [ r--data ]
jae r-xdata
comisd xmm2 [ r--data ]
jb r-xdata
movq xmm6 xmm7
xorpd xmm6 xmm2
comisd xmm2 [ r--data ]
jae r-xdata
movapd xmm1 xmm2
mulpd xmm1 xmm2
movapd xmm3 xmm1
mulpd xmm3 xmm1
movapd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulsd xmm5 xmm1
movapd xmm3 xmm5
shufpd xmm3 xmm3 0x1
addsd xmm5 xmm3
mulsd xmm5 xmm7
subsd xmm7 xmm5
movq [ esp + 0x4 ] xmm7
fld [ esp + 0x4 ]
retn
comisd xmm2 [ r--data ]
jne r-xdata
movapd xmm1 xmm2
mulpd xmm1 xmm2
movapd xmm3 xmm1
mulpd xmm3 xmm1
movapd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulsd xmm5 xmm1
movapd xmm3 xmm5
shufpd xmm3 xmm3 0x1
addsd xmm5 xmm3
mulsd xmm5 xmm7
subsd xmm7 xmm5
movq [ esp + 0x4 ] xmm7
fld [ esp + 0x4 ]
retn
mov eax 0x300
movq xmm0 xmm2
movq xmm2 [ r--data ]
divsd xmm2 xmm0
unpcklpd xmm2 xmm2
movq xmm0 [ r--data ]
movq xmm5 [ r--data ]
movq xmm3 xmm2
addsd xmm3 xmm0
psrlq xmm3 0x2c
psubd xmm3 xmm5
movd eax xmm3
lea eax [ eax + eax * 2 ]
movq xmm5 [ eax * 8 + r--data ]
movq xmm3 xmm2
subsd xmm2 xmm5
mulsd xmm3 xmm5
addsd xmm3 [ r--data ]
divsd xmm2 xmm3
unpcklpd xmm2 xmm2
jmp r-xdata
comisd xmm2 [ r--data ]
jae r-xdata
fld [ esp + 0x4 ]
retn
movq xmm0 [ eax * 8 + r--data ]
movq xmm4 [ eax * 8 + r--data ]
movapd xmm1 xmm2
mulpd xmm1 xmm2
movapd xmm3 xmm1
mulpd xmm3 xmm1
movapd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulpd xmm5 xmm3
addpd xmm5 [ r--data ]
mulsd xmm5 xmm1
movapd xmm3 xmm5
shufpd xmm3 xmm3 0x1
addsd xmm5 xmm3
mulsd xmm5 xmm2
subsd xmm5 xmm4
subsd xmm5 xmm2
subsd xmm0 xmm5
orpd xmm0 xmm6
movq [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
retn
fld [ r--data ]
fmul [ r--data ]
fadd [ esp + 0x4 ]
retn
fld [ r--data ]
fmul [ r--data ]
sub esp 0x8
fstp [ esp ]
fld [ esp ]
add esp 0x8
fadd [ esp + 0x4 ]
retn
sub_4325ae
movlpd xmm4 [ r--data ]
movlpd xmm3 [ r--data ]
xorpd xmm5 xmm5
movlpd xmm2 [ r--data ]
movsd xmm1 xmm0
psrlq xmm0 0x2c
movd edx xmm0
movsd xmm7 xmm1
mov ecx 0x2000
pinsrw xmm5 ecx 0x2
movsd xmm0 xmm1
mov eax 0x7ffff
and eax edx
sub eax 0x3fb00
cmp eax 0x3bb
jae r-xdata
sub eax 0x3bb
cmp eax 0x41
jae r-xdata
mulsd xmm1 xmm1
and edx 0xffff
subsd xmm3 xmm1
sqrtsd xmm3 xmm3
andpd xmm2 xmm7
and edx 0xfffffffc
sub edx 0xfb00
movlpd xmm1 [ edx * 2 + r--data ]
orpd xmm2 xmm5
movapd xmm4 [ edx * 4 + r--data ]
movsd xmm6 xmm7
addsd xmm7 xmm2
subsd xmm0 xmm2
mulsd xmm7 xmm0
mulsd xmm6 xmm1
mulsd xmm3 xmm2
movsd xmm1 xmm6
addsd xmm6 xmm3
divsd xmm7 xmm6
movlpd xmm0 [ r--data ]
movlpd xmm5 [ r--data ]
subsd xmm1 xmm3
psrlq xmm2 0x3f
movsd xmm3 xmm1
psllq xmm2 0x3f
mulsd xmm1 xmm1
pshufd xmm2 xmm2 0x44
movlpd xmm6 [ r--data ]
mulsd xmm3 xmm1
mulsd xmm0 xmm1
sub esp 0x10
xorpd xmm4 xmm2
mulsd xmm5 xmm3
subpd xmm4 [ r--data ]
mulsd xmm3 xmm1
addsd xmm0 xmm6
mulsd xmm0 xmm3
subsd xmm5 xmm4
pshufd xmm4 xmm4 0xee
addsd xmm0 xmm5
subsd xmm0 xmm7
subsd xmm0 xmm4
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
add eax 0x3bbb
cmp eax 0x3800
jae r-xdata
psrlq xmm7 0x26
psllq xmm7 0x26
pmovmskb eax xmm0
andnpd xmm4 xmm0
subsd xmm1 xmm7
movsd xmm6 xmm7
mulsd xmm7 xmm7
addsd xmm0 xmm6
orpd xmm5 xmm4
subsd xmm3 xmm7
mulsd xmm0 xmm1
movsd xmm4 xmm3
subsd xmm3 xmm0
sqrtsd xmm3 xmm3
and eax 0x80
shr eax 0x7
neg eax
movsd xmm7 xmm3
andpd xmm2 xmm3
psllq xmm3 0x2
pextrw edx xmm3 0x3
orpd xmm2 xmm5
movd xmm3 eax
pshufd xmm3 xmm3 0x0
sub edx 0xfec0
add edx edx
mulsd xmm7 [ edx * 4 + r--data ]
mulsd xmm6 xmm2
mulsd xmm1 xmm2
mulsd xmm2 xmm2
subsd xmm6 xmm7
andpd xmm3 [ r--data ]
addsd xmm6 xmm1
subsd xmm4 xmm2
addsd xmm7 xmm7
movlpd xmm5 [ r--data ]
subsd xmm4 xmm0
addsd xmm7 xmm6
movlpd xmm0 [ r--data ]
divsd xmm4 xmm7
movlpd xmm2 [ r--data ]
addpd xmm3 [ edx * 8 + r--data ]
movsd xmm1 xmm6
mulsd xmm6 xmm6
mulsd xmm0 xmm6
mulsd xmm1 xmm6
sub esp 0x10
mulsd xmm5 xmm1
mulsd xmm1 xmm6
addsd xmm0 xmm2
pxor xmm6 xmm6
mulsd xmm0 xmm1
addsd xmm5 xmm3
addsd xmm0 xmm5
and eax 0x8000
pinsrw xmm6 eax 0x3
movsd xmm5 xmm4
pshufd xmm3 xmm3 0xee
addsd xmm4 xmm3
subsd xmm3 xmm4
addsd xmm5 xmm3
addsd xmm0 xmm5
addsd xmm0 xmm4
xorpd xmm0 xmm6
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
sub eax 0x3bfc
cmp eax 0x4
jae r-xdata
unpcklpd xmm0 xmm0
movapd xmm6 [ r--data ]
unpcklpd xmm1 xmm0
movapd xmm2 [ r--data ]
movapd xmm4 [ r--data ]
mulpd xmm0 xmm0
movapd xmm5 [ r--data ]
sub esp 0x10
mulpd xmm1 xmm0
mulpd xmm6 xmm0
mulpd xmm0 xmm0
movsd xmm3 xmm1
mulsd xmm1 xmm1
addpd xmm6 xmm2
mulpd xmm4 xmm0
mulsd xmm1 xmm3
addpd xmm6 xmm4
pshufd xmm0 xmm5 0xee
mulpd xmm1 xmm6
pshufd xmm6 xmm5 0xee
subsd xmm0 xmm7
pshufd xmm2 xmm1 0xee
subsd xmm5 xmm1
subsd xmm6 xmm0
subsd xmm5 xmm2
subsd xmm7 xmm6
subsd xmm5 xmm7
addsd xmm0 xmm5
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
add eax 0x3fefc
cmp eax 0x3ff00
jb r-xdata
xorpd xmm6 xmm6
andpd xmm7 [ r--data ]
movlpd xmm4 [ r--data ]
movapd xmm1 [ r--data ]
mulsd xmm7 xmm4
movapd xmm2 [ r--data ]
subsd xmm4 xmm7
movapd xmm3 [ r--data ]
pshufd xmm7 xmm4 0x44
sqrtsd xmm4 xmm4
mulpd xmm1 xmm7
pshufd xmm5 xmm7 0x44
pextrw eax xmm0 0x3
mulpd xmm7 xmm7
addpd xmm2 xmm1
movlpd xmm1 [ r--data ]
mulpd xmm3 xmm7
cmpsd xmm0 xmm6 0x1
mulsd xmm7 xmm5
addpd xmm2 xmm3
pshufd xmm0 xmm0 0x44
mulsd xmm2 xmm7
andpd xmm0 [ r--data ]
mulpd xmm2 xmm5
andpd xmm1 xmm4
pshufd xmm3 xmm4 0x44
subsd xmm4 xmm1
addsd xmm3 xmm3
mulsd xmm1 xmm1
subsd xmm3 xmm4
subsd xmm5 xmm1
mulsd xmm4 xmm3
pshufd xmm3 xmm3 0xee
subsd xmm5 xmm4
divsd xmm5 xmm3
sub esp 0x10
addpd xmm3 xmm3
mulpd xmm2 xmm3
pshufd xmm4 xmm2 0xee
addsd xmm2 xmm0
and eax 0x8000
pinsrw xmm6 eax 0x3
pshufd xmm0 xmm0 0xee
addsd xmm2 xmm4
addsd xmm2 xmm5
addsd xmm2 xmm3
addsd xmm0 xmm2
xorpd xmm0 xmm6
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm2 [ r--data ]
movlpd xmm0 [ r--data ]
addsd xmm0 xmm2
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movd ecx xmm7
psrlq xmm7 0x20
movd edx xmm7
and edx 0x7fffffff
mov eax 0x3ff00000
sub eax edx
or eax ecx
cmp eax 0x0
je r-xdata
pextrw edx xmm7 0x1
shr edx 0xf
neg edx
movd xmm7 edx
pshufd xmm7 xmm7 0x0
movlpd xmm2 [ r--data ]
movlpd xmm0 [ r--data ]
andpd xmm2 xmm7
andpd xmm0 xmm7
addsd xmm0 xmm2
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm2 [ esp + 0x4 ]
movd edx xmm2
psrlq xmm2 0x20
movd ecx xmm2
and ecx 0x7fffffff
sub edx 0x1
sbb ecx 0x7ff00000
cmp ecx 0x0
jge r-xdata
xorpd xmm6 xmm6
addsd xmm0 xmm6
mov edx 0x3f0
jmp r-xdata
xorpd xmm1 xmm1
xorpd xmm0 xmm0
mov edx 0x7ff0
pinsrw xmm1 edx 0x3
mulsd xmm0 xmm1
mov edx 0x3a
sub esp 0x1c
movlpd [ esp + 0x10 ] xmm0
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
add edx 0x10
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_433648
movlpd xmm0 [ esp + 0x10 ]
add esp 0x1c
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
sub_432b0e
movlpd xmm4 [ r--data ]
movlpd xmm3 [ r--data ]
xorpd xmm5 xmm5
movlpd xmm2 [ r--data ]
movsd xmm1 xmm0
psrlq xmm0 0x2c
movd edx xmm0
movsd xmm7 xmm1
mov ecx 0x2000
pinsrw xmm5 ecx 0x2
movsd xmm0 xmm1
mov eax 0x7ffff
and eax edx
sub eax 0x3fb00
cmp eax 0x3bb
jae r-xdata
sub eax 0x3bb
cmp eax 0x43
jae r-xdata
mulsd xmm1 xmm1
and edx 0xffff
subsd xmm3 xmm1
sqrtsd xmm3 xmm3
andpd xmm2 xmm7
and edx 0xfffffffc
sub edx 0xfb00
movlpd xmm1 [ edx * 2 + r--data ]
orpd xmm2 xmm5
movapd xmm4 [ edx * 4 + r--data ]
movsd xmm6 xmm7
addsd xmm7 xmm2
subsd xmm0 xmm2
mulsd xmm0 xmm7
mulsd xmm6 xmm1
mulsd xmm3 xmm2
movsd xmm1 xmm6
addsd xmm6 xmm3
divsd xmm0 xmm6
movlpd xmm7 [ r--data ]
movlpd xmm5 [ r--data ]
subsd xmm1 xmm3
psrlq xmm2 0x3f
movsd xmm3 xmm1
psllq xmm2 0x3f
mulsd xmm1 xmm1
pshufd xmm2 xmm2 0x44
movlpd xmm6 [ r--data ]
mulsd xmm3 xmm1
mulsd xmm7 xmm1
sub esp 0x10
xorpd xmm4 xmm2
mulsd xmm5 xmm3
mulsd xmm3 xmm1
addsd xmm6 xmm7
mulsd xmm6 xmm3
addsd xmm5 xmm4
pshufd xmm4 xmm4 0xee
addsd xmm6 xmm5
addsd xmm0 xmm6
addsd xmm0 xmm4
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
add eax 0x3bbb
cmp eax 0x3800
jae r-xdata
mulsd xmm1 xmm1
subsd xmm3 xmm1
sqrtsd xmm3 xmm3
pmovmskb eax xmm7
psllq xmm0 0x1
andpd xmm7 [ r--data ]
psrlq xmm0 0x1
movsd xmm1 xmm0
movlpd xmm4 [ r--data ]
movsd xmm6 xmm7
subsd xmm1 xmm7
mulsd xmm7 xmm7
addsd xmm0 xmm6
subsd xmm4 xmm7
mulsd xmm0 xmm1
movsd xmm7 xmm3
andpd xmm2 xmm3
psllq xmm3 0x2
pextrw edx xmm3 0x3
orpd xmm2 xmm5
sub edx 0xfec0
add edx edx
mulsd xmm7 [ edx * 4 + r--data ]
mulsd xmm6 xmm2
movapd xmm3 [ r--data ]
mulsd xmm1 xmm2
mulsd xmm2 xmm2
subsd xmm6 xmm7
addsd xmm6 xmm1
subsd xmm4 xmm2
addsd xmm7 xmm7
movlpd xmm5 [ r--data ]
subsd xmm4 xmm0
addsd xmm7 xmm6
movlpd xmm0 [ r--data ]
divsd xmm4 xmm7
movlpd xmm2 [ r--data ]
subpd xmm3 [ edx * 8 + r--data ]
movsd xmm1 xmm6
mulsd xmm6 xmm6
and eax 0x80
shl eax 0x8
mulsd xmm0 xmm6
mulsd xmm1 xmm6
sub esp 0x10
mulsd xmm5 xmm1
mulsd xmm1 xmm6
addsd xmm0 xmm2
pxor xmm6 xmm6
mulsd xmm0 xmm1
addsd xmm5 xmm3
pinsrw xmm6 eax 0x3
addsd xmm0 xmm5
pshufd xmm3 xmm3 0xee
subsd xmm0 xmm4
addsd xmm0 xmm3
orpd xmm0 xmm6
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
sub eax 0x3bfe
cmp eax 0x2
jae r-xdata
unpcklpd xmm7 xmm7
movapd xmm6 [ r--data ]
unpcklpd xmm1 xmm7
movapd xmm2 [ r--data ]
movapd xmm4 [ r--data ]
mulpd xmm7 xmm7
sub esp 0x10
mulpd xmm1 xmm7
mulpd xmm6 xmm7
mulpd xmm7 xmm7
movsd xmm3 xmm1
mulsd xmm1 xmm1
addpd xmm6 xmm2
mulpd xmm4 xmm7
mulsd xmm1 xmm3
addpd xmm6 xmm4
mulpd xmm1 xmm6
pshufd xmm2 xmm1 0xee
addsd xmm1 xmm2
addsd xmm0 xmm1
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
add eax 0x3fefe
cmp eax 0x3ff00
jb r-xdata
mulsd xmm1 xmm1
subsd xmm3 xmm1
sqrtsd xmm3 xmm3
pextrw eax xmm7 0x3
andpd xmm7 [ r--data ]
pshufd xmm5 xmm3 0x44
andpd xmm3 [ r--data ]
movsd xmm1 xmm7
movlpd xmm4 [ r--data ]
movsd xmm6 xmm7
subsd xmm0 xmm7
mulsd xmm7 xmm7
addsd xmm1 xmm1
mulsd xmm1 xmm0
subsd xmm4 xmm7
movsd xmm6 xmm3
mulsd xmm3 xmm3
mulsd xmm0 xmm0
subsd xmm4 xmm1
subsd xmm6 xmm5
addsd xmm5 xmm5
subsd xmm4 xmm3
movapd xmm2 [ r--data ]
pshufd xmm3 xmm5 0xee
subsd xmm4 xmm0
addsd xmm5 xmm6
pshufd xmm7 xmm3 0xee
addsd xmm3 xmm3
mulsd xmm5 xmm6
addsd xmm4 xmm5
pshufd xmm6 xmm7 0xee
divsd xmm4 xmm3
movapd xmm1 [ r--data ]
movapd xmm5 [ r--data ]
movapd xmm0 [ r--data ]
mulpd xmm7 xmm7
movsd xmm3 xmm6
mulpd xmm2 xmm7
mulpd xmm6 xmm7
and eax 0x8000
mulsd xmm1 xmm7
mulpd xmm7 xmm7
addpd xmm5 xmm2
movapd xmm2 xmm6
mulsd xmm6 xmm6
mulpd xmm7 xmm0
movapd xmm0 [ r--data ]
mulsd xmm2 xmm6
addpd xmm7 xmm5
pshufd xmm5 xmm1 0xee
mulsd xmm6 xmm2
sub esp 0x10
mulpd xmm7 xmm2
addsd xmm1 xmm5
xorpd xmm5 xmm5
pshufd xmm2 xmm7 0xee
mulsd xmm1 xmm6
pshufd xmm6 xmm0 0xee
addsd xmm7 xmm2
movsd xmm2 xmm3
pinsrw xmm5 eax 0x3
subsd xmm3 xmm6
addsd xmm0 xmm1
addsd xmm6 xmm3
addsd xmm7 xmm4
subsd xmm2 xmm6
subsd xmm0 xmm7
subsd xmm0 xmm2
subsd xmm0 xmm3
orpd xmm0 xmm5
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm0 [ esp + 0x4 ]
xorpd xmm6 xmm6
sub esp 0x10
movsd xmm7 xmm0
pextrw edx xmm0 0x3
and edx 0x7ff0
sub edx 0x10
cmp edx 0x7fe0
jb r-xdata
movd ecx xmm0
psrlq xmm0 0x20
movd edx xmm0
and edx 0x7fffffff
mov eax 0x3ff00000
sub eax edx
or eax ecx
cmp eax 0x0
je r-xdata
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
addsd xmm6 xmm0
orpd xmm0 xmm6
mulsd xmm7 xmm0
movlpd xmm1 [ r--data ]
movlpd xmm2 [ r--data ]
movlpd xmm0 [ r--data ]
addsd xmm0 xmm2
andnpd xmm1 xmm7
orpd xmm0 xmm1
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm2 [ esp + 0x4 ]
movd edx xmm2
psrlq xmm2 0x20
movd ecx xmm2
and ecx 0x7fffffff
sub edx 0x1
sbb ecx 0x7ff00000
cmp ecx 0x0
jge r-xdata
movlpd xmm0 [ esp + 0x4 ]
xorpd xmm6 xmm6
addsd xmm0 xmm6
mov edx 0x3f1
jmp r-xdata
xorpd xmm1 xmm1
xorpd xmm0 xmm0
mov edx 0x7ff0
pinsrw xmm1 edx 0x3
mulsd xmm0 xmm1
mov edx 0x3d
sub esp 0x1c
movlpd [ esp + 0x10 ] xmm0
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
add edx 0x10
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_433648
movlpd xmm0 [ esp + 0x10 ]
add esp 0x1c
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
sub_43308e
pextrw eax xmm0 0x3
and ax 0x7fff
sub ax 0x3820
cmp ax 0x8a8
ja r-xdata
jg r-xdata
unpcklpd xmm0 xmm0
movapd xmm1 [ r--data ]
mulpd xmm1 xmm0
cvtsd2si edx xmm1
movapd xmm2 [ r--data ]
addpd xmm1 xmm2
movapd xmm3 [ r--data ]
subpd xmm1 xmm2
movlpd xmm5 [ r--data ]
add edx 0x72900
movapd xmm4 [ r--data ]
mulpd xmm3 xmm1
and edx 0x1f
mulsd xmm5 xmm1
mov ecx edx
mulpd xmm4 xmm1
shl ecx 0x1
subpd xmm0 xmm3
mulpd xmm1 [ r--data ]
add edx ecx
shl ecx 0x2
add edx ecx
addsd xmm5 xmm0
movapd xmm2 xmm0
subpd xmm0 xmm4
movlpd xmm6 [ r--data ]
shl edx 0x4
lea eax [ r--data ]
andpd xmm5 [ r--data ]
movapd xmm3 xmm0
add eax edx
subpd xmm2 xmm0
unpckhpd xmm0 xmm0
divsd xmm6 xmm5
subpd xmm2 xmm4
movapd xmm7 [ eax + 0x10 ]
subsd xmm3 xmm5
mulpd xmm7 xmm0
subpd xmm2 xmm1
movapd xmm1 [ eax + 0x30 ]
mulpd xmm1 xmm0
movapd xmm4 [ eax + 0x60 ]
mulpd xmm4 xmm0
addsd xmm2 xmm3
movapd xmm3 xmm0
mulpd xmm0 xmm0
addpd xmm7 [ eax ]
addpd xmm1 [ eax + 0x20 ]
mulpd xmm1 xmm0
addpd xmm4 [ eax + 0x50 ]
addpd xmm7 xmm1
movapd xmm1 [ eax + 0x70 ]
mulpd xmm1 xmm0
mulpd xmm0 xmm0
addpd xmm4 xmm1
movapd xmm1 [ eax + 0x40 ]
mulpd xmm1 xmm0
addpd xmm7 xmm1
movapd xmm1 xmm3
mulpd xmm3 xmm0
mulsd xmm0 xmm0
mulpd xmm1 [ eax + 0x90 ]
mulpd xmm4 xmm3
movsd xmm3 xmm1
addpd xmm7 xmm4
movsd xmm4 xmm1
mulsd xmm0 xmm7
unpckhpd xmm7 xmm7
addsd xmm0 xmm7
unpckhpd xmm1 xmm1
addsd xmm3 xmm1
subsd xmm4 xmm3
addsd xmm1 xmm4
movsd xmm4 xmm2
movlpd xmm7 [ eax + 0x90 ]
unpckhpd xmm2 xmm2
addsd xmm7 [ eax + 0x98 ]
mulsd xmm7 xmm2
addsd xmm7 [ eax + 0x88 ]
addsd xmm7 xmm1
addsd xmm0 xmm7
movlpd xmm7 [ r--data ]
mulsd xmm4 xmm6
movlpd xmm2 [ eax + 0xa8 ]
andpd xmm2 xmm6
mulsd xmm5 xmm2
mulsd xmm6 [ eax + 0xa0 ]
subsd xmm7 xmm5
subsd xmm2 [ eax + 0x80 ]
subsd xmm7 xmm4
mulsd xmm7 xmm6
movsd xmm4 xmm3
subsd xmm3 xmm2
addsd xmm2 xmm3
subsd xmm4 xmm2
addsd xmm0 xmm4
subsd xmm0 xmm7
sub esp 0x10
addsd xmm0 xmm3
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
jmp sub_4265cf
sub esp 0x10
shr ax 0x4
cmp ax 0xc7e
jne r-xdata
movlpd xmm3 [ r--data ]
mulsd xmm3 xmm0
addsd xmm3 xmm0
mulsd xmm3 [ r--data ]
movlpd [ esp + 0x4 ] xmm3
fld [ esp + 0x4 ]
add esp 0x10
retn
movsd xmm3 xmm0
mulsd xmm3 [ r--data ]
sub_4332ee
pextrw eax xmm0 0x3
and ax 0x7fff
sub ax 0x3030
cmp ax 0x10c5
ja r-xdata
jg r-xdata
movlpd xmm1 [ r--data ]
mulsd xmm1 xmm0
movlpd xmm2 [ r--data ]
cvtsd2si edx xmm1
addsd xmm1 xmm2
movlpd xmm3 [ r--data ]
subsd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm1
unpcklpd xmm1 xmm1
add edx 0x1c7610
movsd xmm4 xmm0
and edx 0x3f
movapd xmm5 [ r--data ]
lea eax [ r--data ]
shl edx 0x5
add eax edx
mulpd xmm2 xmm1
subsd xmm0 xmm3
mulsd xmm1 [ r--data ]
subsd xmm4 xmm3
movlpd xmm7 [ eax + 0x8 ]
unpcklpd xmm0 xmm0
movsd xmm3 xmm4
subsd xmm4 xmm2
mulpd xmm5 xmm0
subpd xmm0 xmm2
movapd xmm6 [ r--data ]
mulsd xmm7 xmm4
subsd xmm3 xmm4
mulpd xmm5 xmm0
mulpd xmm0 xmm0
subsd xmm3 xmm2
movapd xmm2 [ eax ]
subsd xmm1 xmm3
movlpd xmm3 [ eax + 0x18 ]
addsd xmm2 xmm3
subsd xmm7 xmm2
mulsd xmm2 xmm4
mulpd xmm6 xmm0
mulsd xmm3 xmm4
mulpd xmm2 xmm0
mulpd xmm0 xmm0
addpd xmm5 [ r--data ]
mulsd xmm4 [ eax ]
addpd xmm6 [ r--data ]
mulpd xmm5 xmm0
movsd xmm0 xmm3
addsd xmm3 [ eax + 0x8 ]
mulsd xmm1 xmm7
movsd xmm7 xmm4
addsd xmm4 xmm3
addpd xmm6 xmm5
movlpd xmm5 [ eax + 0x8 ]
subsd xmm5 xmm3
subsd xmm3 xmm4
addsd xmm1 [ eax + 0x10 ]
mulpd xmm6 xmm2
addsd xmm5 xmm0
addsd xmm3 xmm7
addsd xmm1 xmm5
addsd xmm1 xmm3
addsd xmm1 xmm6
unpckhpd xmm6 xmm6
addsd xmm1 xmm6
sub esp 0x10
addsd xmm4 xmm1
movlpd [ esp + 0x4 ] xmm4
fld [ esp + 0x4 ]
add esp 0x10
retn
jmp sub_4266ff
pextrw eax xmm0 0x3
and ax 0x7fff
pinsrw xmm0 eax 0x3
sub esp 0x10
movlpd xmm1 [ r--data ]
subsd xmm1 xmm0
movlpd [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
add esp 0x10
retn
sub_43349e
pextrw eax xmm0 0x3
and ax 0x7fff
sub ax 0x3030
cmp ax 0x10c5
ja r-xdata
jg r-xdata
movlpd xmm1 [ r--data ]
mulsd xmm1 xmm0
movlpd xmm2 [ r--data ]
cvtsd2si edx xmm1
addsd xmm1 xmm2
movlpd xmm3 [ r--data ]
subsd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm1
unpcklpd xmm1 xmm1
add edx 0x1c7600
movsd xmm4 xmm0
and edx 0x3f
movapd xmm5 [ r--data ]
lea eax [ r--data ]
shl edx 0x5
add eax edx
mulpd xmm2 xmm1
subsd xmm0 xmm3
mulsd xmm1 [ r--data ]
subsd xmm4 xmm3
movlpd xmm7 [ eax + 0x8 ]
unpcklpd xmm0 xmm0
movsd xmm3 xmm4
subsd xmm4 xmm2
mulpd xmm5 xmm0
subpd xmm0 xmm2
movapd xmm6 [ r--data ]
mulsd xmm7 xmm4
subsd xmm3 xmm4
mulpd xmm5 xmm0
mulpd xmm0 xmm0
subsd xmm3 xmm2
movapd xmm2 [ eax ]
subsd xmm1 xmm3
movlpd xmm3 [ eax + 0x18 ]
addsd xmm2 xmm3
subsd xmm7 xmm2
mulsd xmm2 xmm4
mulpd xmm6 xmm0
mulsd xmm3 xmm4
mulpd xmm2 xmm0
mulpd xmm0 xmm0
addpd xmm5 [ r--data ]
mulsd xmm4 [ eax ]
addpd xmm6 [ r--data ]
mulpd xmm5 xmm0
movsd xmm0 xmm3
addsd xmm3 [ eax + 0x8 ]
mulsd xmm1 xmm7
movsd xmm7 xmm4
addsd xmm4 xmm3
addpd xmm6 xmm5
movlpd xmm5 [ eax + 0x8 ]
subsd xmm5 xmm3
subsd xmm3 xmm4
addsd xmm1 [ eax + 0x10 ]
mulpd xmm6 xmm2
addsd xmm5 xmm0
addsd xmm3 xmm7
addsd xmm1 xmm5
addsd xmm1 xmm3
addsd xmm1 xmm6
unpckhpd xmm6 xmm6
addsd xmm1 xmm6
sub esp 0x10
addsd xmm4 xmm1
movlpd [ esp + 0x4 ] xmm4
fld [ esp + 0x4 ]
add esp 0x10
retn
jmp sub_42682f
sub esp 0x10
shr ax 0x4
cmp ax 0xcfd
jne r-xdata
movlpd xmm3 [ r--data ]
mulsd xmm3 xmm0
subsd xmm3 xmm0
mulsd xmm3 [ r--data ]
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
mulsd xmm0 [ r--data ]
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
sub_433648
push ebp
mov ebp esp
sub esp 0x28
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] eax
je r-xdata
mov ecx sub_437bdb
push [ rw-data ]
call [ DecodePointer@IAT ]
mov ecx eax
jmp r-xdata
add eax 0xfffffc18
cmp eax 0xd
ja r-xdata
je r-xdata
mov eax [ ebp + 0x14 ]
mov edx 0xa6
push esi
cmp eax edx
jg r-xdata
pop esi
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_4338f8 ]
mov [ ebp - 0x28 ] 0x3
mov [ ebp - 0x24 ] r--data
jmp r-xdata
cmp eax 0x19
jg r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x20 ]
fld [ eax ]
lea eax [ ebp - 0x28 ]
fstp [ ebp - 0x18 ]
fld [ esi ]
push eax
fstp [ ebp - 0x10 ]
call ecx
pop ecx
test eax eax
jne r-xdata
sub eax 0x1a
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
fld [ eax ]
fstp [ esi ]
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x28 ] 0x1
push eax
fstp [ ebp - 0x10 ]
call ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
fld [ eax ]
fmul [ ebp - 0x8 ]
fst [ esi ]
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x20 ]
fld [ eax ]
fstp [ ebp - 0x18 ]
jmp r-xdata
fld [ ebp - 0x10 ]
fstp [ esi ]
call sub_428ca8
mov [ eax ] 0x21
call sub_428ca8
mov [ eax ] 0x22
jmp r-xdata
mov eax [ ebp + 0x10 ]
fld1
fstp [ eax ]
jmp r-xdata
dec eax
je r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
push 0x2
pop edx
sub eax edx
je r-xdata
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x20 ]
fld [ eax ]
fstp [ ebp - 0x18 ]
fld [ esi ]
mov [ ebp - 0x28 ] 0x2
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x28 ] 0x4
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x20 ]
fld [ eax ]
lea eax [ ebp - 0x28 ]
fstp [ ebp - 0x18 ]
fld [ esi ]
push eax
fstp [ ebp - 0x10 ]
call ecx
pop ecx
jmp r-xdata
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] r--data
jmp r-xdata
dec eax
je r-xdata
mov [ ebp - 0x24 ] r--data
dec eax
je r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
sub eax 0x5
je r-xdata
mov [ ebp - 0x24 ] r--data
sub eax 0x14
je r-xdata
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] r--data
jmp r-xdata
dec eax
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
sub eax 0x5
je r-xdata
sub eax 0x3
jne r-xdata
mov [ ebp - 0x28 ] 0x3
mov [ ebp - 0x24 ] r--data
jmp r-xdata
dec eax
je r-xdata
mov [ ebp - 0x24 ] r--data
sub eax 0x9
jne r-xdata
mov [ ebp - 0x28 ] 0x3
sub_433ade
push 0x10
push r--data
call sub_428a80
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_429d8b
pop ecx
and [ ebp - 0x4 ] edi
push 0x3
pop esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_433b72
mov eax edi
call sub_428ac5
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
cmp esi 0x14
jl r-xdata
push eax
call sub_425516
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_422ed5
pop ecx
mov eax [ rw-data ]
and [ eax + esi * 4 ] 0x0
inc edi
mov [ ebp - 0x1c ] edi
sub_433b93
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
push 0x16
pop eax
pop ebp
retn
sub_433bbd
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
push 0x16
pop eax
pop ebp
retn
sub_433be7
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
push 0x16
pop eax
pop ebp
retn
sub_433c11
push ebp
mov ebp esp
sub esp 0x18
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push esi
test eax eax
jne r-xdata
push 0x24
push 0xff
push eax
call sub_422f60
mov eax [ ebp + 0xc ]
add esp 0xc
test eax eax
je r-xdata
call sub_428ca8
push 0x16
pop esi
mov [ eax ] esi
call sub_428f36
mov eax esi
jmp r-xdata
push ebx
mov ebx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jg r-xdata
pop esi
mov esp ebp
pop ebp
retn
push 0x7
pop ecx
cmp eax ecx
jl r-xdata
jl r-xdata
push edi
push 0x0
push 0x1e13380
push eax
push ebx
call sub_4345d0
add eax 0x46
mov ecx 0x190
mov [ ebp - 0x8 ] eax
push 0x64
pop edi
lea esi [ eax - 0x1 ]
mov [ ebp - 0x10 ] ecx
add eax 0x12b
mov [ ebp - 0x18 ] esi
cdq
idiv ecx
push 0xffffffff
mov ecx eax
mov [ ebp - 0xc ] edi
mov eax esi
cdq
idiv edi
push 0xfffffe93
sub ecx eax
mov eax esi
cdq
and edx 0x3
add eax edx
sar eax 0x2
add eax 0xffffffef
add eax ecx
cdq
mov esi eax
mov edi edx
mov eax [ ebp - 0x8 ]
add eax 0xffffffba
cdq
push edx
push eax
call sub_436130
sub eax esi
push 0x0
push 0x15180
sbb edx edi
push edx
push eax
call sub_436130
mov esi [ ebp - 0x14 ]
add ebx eax
adc esi edx
xor edi edi
inc edi
test esi esi
jg r-xdata
jg r-xdata
call sub_428ca8
push 0x16
pop esi
mov [ eax ] esi
mov eax esi
jmp r-xdata
cmp ebx 0xffff5740
jb r-xdata
mov ecx [ ebp - 0x8 ]
mov eax ecx
and eax 0x80000003
jns r-xdata
jl r-xdata
cmp ebx 0x934126cf
jbe r-xdata
pop ebx
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
mov ecx [ ebp - 0x18 ]
add ebx 0x1e13380
mov eax ecx
adc esi 0x0
and eax 0x80000003
jns r-xdata
test ebx ebx
jae r-xdata
lea eax [ ecx + 0x76c ]
cdq
idiv [ ebp - 0x10 ]
test edx edx
jne r-xdata
mov eax ecx
cdq
idiv [ ebp - 0xc ]
test edx edx
jne r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
mov edi [ ebp + 0x8 ]
push 0x0
push 0x15180
push esi
push ebx
mov [ edi + 0x14 ] ecx
call sub_4345d0
push 0xffffffff
mov [ edi + 0x1c ] eax
cdq
push 0xfffeae80
push edx
push eax
call sub_436130
add ebx eax
mov ecx rw-data
adc esi edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ ecx + 0x76c ]
cdq
idiv [ ebp - 0x10 ]
test edx edx
jne r-xdata
mov eax ecx
cdq
idiv [ ebp - 0xc ]
test edx edx
jne r-xdata
mov edx [ edi + 0x1c ]
xor eax eax
inc eax
cmp [ ecx + 0x4 ] edx
jge r-xdata
mov ecx rw-data
add ebx 0x15180
adc esi 0x0
jmp r-xdata
dec eax
mov [ edi + 0x10 ] eax
push 0x0
push 0x15180
sub edx [ ecx + eax * 4 ]
mov eax [ ebp + 0xc ]
mov [ edi + 0xc ] edx
push [ eax + 0x4 ]
push [ eax ]
call sub_4345d0
push 0x7
pop ecx
add eax 0x4
cdq
idiv ecx
push 0x0
push 0xe10
push esi
push ebx
mov [ edi + 0x18 ] edx
call sub_4345d0
push 0xffffffff
mov [ edi + 0x8 ] eax
cdq
push 0xfffff1f0
push edx
push eax
call sub_436130
add ebx eax
push 0x0
push 0x3c
adc esi edx
push esi
push ebx
call sub_4345d0
and [ edi + 0x20 ] 0x0
mov [ edi + 0x4 ] eax
imul eax eax 0x3c
sub ebx eax
xor eax eax
mov [ edi ] ebx
pop edi
inc eax
cmp [ ecx + eax * 4 ] edx
jl r-xdata
sub_433e3c
push 0x8
push r--data
call sub_428a80
cmp [ rw-data ] 0x0
jne r-xdata
call sub_428ac5
retn
push 0x6
call sub_429d8b
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_433e83
call sub_4340ba
inc [ rw-data ]
sub_433e8c
push 0xc
push r--data
call sub_428a80
and [ ebp - 0x1c ] 0x0
push 0x6
call sub_429d8b
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_433ed6
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_433ecd
mov eax esi
call sub_428ac5
retn
sub_433ed6
push ebp
mov ebp esp
push ecx
push ebx
lea eax [ ebp - 0x4 ]
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_433b93
pop ecx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_428f46
int3
cmp [ ebp - 0x4 ] ebx
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
inc edi
mov ecx [ esi + 0x14 ]
cmp ecx [ rw-data ]
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp ecx [ rw-data ]
je r-xdata
push 0x3
pop eax
push 0x2
pop edx
xor ebx ebx
push 0xb
inc ebx
pop edi
cmp ecx 0x6b
jge r-xdata
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] bx
jne r-xdata
mov edx [ rw-data ]
mov edi [ rw-data ]
mov ecx [ esi + 0x1c ]
cmp edx edi
jge r-xdata
push 0x0
push 0x0
push 0x0
push 0x2
push 0x0
push 0x0
push edx
push eax
push ecx
push 0x1
push 0x1
call sub_4343ec
xor eax eax
push eax
push eax
push eax
push 0x2
push eax
push eax
push ebx
push edi
push [ esi + 0x14 ]
push 0x1
push eax
call sub_4343ec
add esp 0x58
push 0x4
pop eax
push 0xa
pop edi
xor edx edx
push 0x5
inc edx
pop ebx
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push ebx
push ebx
push eax
push ecx
push ebx
movzx eax [ rw-data ]
push ebx
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
push ecx
push edi
jmp r-xdata
cmp ecx edi
jl r-xdata
cmp ecx edx
jl r-xdata
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push ebx
push ebx
push eax
push [ esi + 0x14 ]
push ebx
movzx eax [ rw-data ]
push ebx
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
push [ esi + 0x14 ]
push edi
jmp r-xdata
push edi
call sub_4343ec
movzx eax [ rw-data ]
add esp 0x2c
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] bx
jne r-xdata
xor eax eax
inc eax
cmp ecx edx
jg r-xdata
xor eax eax
jmp r-xdata
cmp ecx edi
jg r-xdata
push ebx
call sub_4343ec
add esp 0x2c
jmp r-xdata
cmp ecx edi
jle r-xdata
pop edi
pop esi
cmp ecx edx
jle r-xdata
imul eax [ esi + 0x8 ] 0x3c
add eax [ esi + 0x4 ]
imul eax eax 0x3c
add eax [ esi ]
imul esi eax 0x3e8
xor eax eax
cmp ecx edx
jne r-xdata
cmp ecx edx
jge r-xdata
cmp ecx edi
jge r-xdata
cmp esi [ rw-data ]
setl al
jmp r-xdata
cmp esi [ rw-data ]
setge al
jmp r-xdata
sub_4340ba
push 0x30
push r--data
call sub_428a80
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x3c ] ebx
push 0x7
call sub_429d8b
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_433b8d
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_433be7
pop ecx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_428f46
lea eax [ ebp - 0x24 ]
push eax
call sub_433b93
pop ecx
test eax eax
jne r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
xor esi esi
inc esi
cmp eax 0xffffffff
je r-xdata
push eax
call sub_422ed5
pop ecx
mov [ rw-data ] ebx
lea eax [ ebp - 0x28 ]
push eax
call sub_433bbd
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x2c ] esi
mov [ rw-data ] esi
imul ecx [ rw-data ] 0x3c
mov [ ebp - 0x1c ] ecx
cmp [ rw-data ] 0x0
je r-xdata
call sub_435a13
mov [ ebp - 0x38 ] eax
mov [ rw-data ] ebx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
push r--data
call sub_43888b
pop ecx
mov edi eax
mov [ ebp - 0x3c ] edi
test edi edi
je r-xdata
call sub_428ac5
retn
push 0x3
push edi
push 0x40
mov esi [ ebp - 0x20 ]
push [ esi ]
call sub_43514d
add esp 0x10
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
imul eax [ rw-data ] 0x3c
add ecx eax
mov [ ebp - 0x1c ] ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ edi ] bl
je r-xdata
add edi 0x3
cmp [ edi ] 0x2d
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
call sub_438877
pop ecx
imul ecx eax 0xe10
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x34 ] 0x1
inc edi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] esi
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
push edi
call sub_4238c0
inc eax
push eax
call sub_42899d
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
push eax
push edi
call sub_425800
pop ecx
pop ecx
test eax eax
je r-xdata
inc edi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x38 ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
push edi
push edi
call sub_4238c0
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_434732
add esp 0xc
test eax eax
je r-xdata
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov al [ edi ]
cmp al 0x2b
je r-xdata
cmp [ edi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x38 ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov esi [ ebp - 0x1c ]
call sub_433b87
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_433b7b
mov [ eax ] esi
mov esi [ ebp - 0x28 ]
call sub_433b81
mov [ eax ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43434a
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
push eax
call sub_422ed5
pop ecx
cmp [ ebp - 0x34 ] 0x0
je r-xdata
inc edi
push edi
call sub_438877
pop ecx
imul eax eax 0x3c
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
neg ecx
mov [ ebp - 0x1c ] ecx
mov al [ edi ]
cmp al 0x30
jge r-xdata
mov [ ebp - 0x24 ] ebx
mov eax [ esi + 0x4 ]
mov [ eax ] bl
mov [ ebp - 0x24 ] 0x1
push 0x3
push edi
push 0x40
push [ esi + 0x4 ]
call sub_43514d
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ edi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_433b87
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_433b7b
mov [ eax ] esi
jmp r-xdata
inc edi
inc edi
push edi
call sub_438877
pop ecx
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov al [ edi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc edi
sub_4343ec
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
push ebx
mov ebx [ ebp + 0x10 ]
mov eax ebx
push esi
push edi
jne r-xdata
and eax 0x80000003
jns r-xdata
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
push 0x64
mov [ ebp - 0xc ] eax
mov esi 0x190
pop ecx
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ ebx + 0x76c ]
mov ecx 0x190
cdq
idiv ecx
test edx edx
je r-xdata
mov eax ebx
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
lea eax [ ebx + 0x76c ]
cdq
idiv esi
test edx edx
je r-xdata
mov eax ebx
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov edi [ eax * 4 + rw-data ]
mov eax [ ebp + 0x14 ]
mov edi [ eax * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
shl eax 0x2
mov edi [ eax + rw-data ]
mov eax [ ebp + 0x14 ]
shl eax 0x2
mov edi [ eax + rw-data ]
jmp r-xdata
mov [ rw-data ] eax
lea eax [ ebp - 0x4 ]
push eax
mov [ rw-data ] edi
call sub_433bbd
pop ecx
test eax eax
jne r-xdata
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] ebx
add edi [ ebp + 0x20 ]
add eax [ ebp + 0x1c ]
add edi eax
cmp ecx 0x5
jne r-xdata
add eax 0xfffffff9
mov [ ebp + 0xc ] eax
inc edi
lea eax [ ebx + 0x12b ]
cdq
idiv esi
push 0x7
mov esi eax
lea eax [ ebx - 0x1 ]
cdq
idiv ecx
imul ecx ebx 0x16d
sub esi eax
lea eax [ ebx - 0x1 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
add ecx 0xffff9c25
add eax edi
add eax esi
add eax ecx
mov ecx [ ebp + 0x18 ]
cdq
pop esi
idiv esi
imul eax ecx 0x7
sub eax edx
cmp edx [ ebp + 0x1c ]
jg r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call sub_428f46
int3
imul eax [ ebp - 0x4 ] 0x3e8
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
jns r-xdata
imul eax [ ebp + 0x24 ] 0x3c
add eax [ ebp + 0x28 ]
imul eax eax 0x3c
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax 0x5265c00
cmp ecx eax
jl r-xdata
add ecx 0x5265c00
dec [ rw-data ]
jmp r-xdata
lea eax [ ebx + 0x76c ]
mov ecx 0x190
cdq
idiv ecx
test edx edx
je r-xdata
mov eax ebx
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
mov [ rw-data ] ebx
jmp r-xdata
sub ecx eax
inc [ rw-data ]
mov [ rw-data ] ecx
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub edi esi
jmp r-xdata
cmp edi eax
jle r-xdata
sub_4345d0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_434680
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_434732
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_428ca8
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
mov [ esi ] cl
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi ] dl
call sub_428ca8
push 0x22
jmp r-xdata
mov al [ ecx ]
mov [ edi + ecx ] al
inc ecx
test al al
je r-xdata
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_428f36
mov eax esi
sub_434787
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_428ca8
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
xor eax eax
mov [ esi ] ax
xor eax eax
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_428ca8
push 0x22
jmp r-xdata
movzx eax [ ecx ]
mov [ edi + ecx ] ax
lea ecx [ ecx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_428f36
mov eax esi
sub_4347e3
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x14
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
test edi edi
je r-xdata
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
test eax eax
je r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_422ff5
mov eax [ ebp - 0x14 ]
test edi edi
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
mov [ edi ] ax
cmp [ eax + 0xa8 ] esi
jne r-xdata
cmp [ eax + 0xa8 ] esi
jne r-xdata
pop ebx
push esi
push esi
or esi 0xffffffff
push esi
push ebx
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_4238c0
pop ecx
push [ ebp + 0x10 ]
or esi 0xffffffff
push edi
push esi
push ebx
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] esi
jbe r-xdata
lea esi [ eax - 0x1 ]
call sub_428ca8
mov [ eax ] 0x2a
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
movzx eax [ esi + ebx ]
mov [ edi ] ax
cmp [ esi + ebx ] 0x0
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_428ca8
mov [ eax ] 0x2a
xor eax eax
mov [ edi ] ax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax ebx
jmp r-xdata
inc esi
add edi 0x2
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov [ ebp + 0x8 ] eax
test ecx ecx
jne r-xdata
jmp r-xdata
dec ecx
mov [ ebp - 0x4 ] ecx
mov cl [ eax ]
test cl cl
je r-xdata
push [ ebp + 0x10 ]
sub eax ebx
push edi
push eax
mov eax [ ebp - 0x14 ]
push ebx
push 0x1
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
movzx eax cl
push eax
call sub_42373b
pop ecx
test eax eax
mov eax [ ebp + 0x8 ]
pop ecx
je r-xdata
mov esi eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
inc eax
inc eax
cmp [ eax ] 0x0
je r-xdata
sub_434944
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
test edi edi
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] ax
call sub_428ca8
push 0x16
pop esi
mov [ eax ] esi
call sub_428f36
jmp r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
jmp r-xdata
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
call sub_422ff5
mov eax ebx
cmp [ ebp + 0x18 ] ebx
ja r-xdata
mov [ eax ] esi
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
push [ ebp + 0x14 ]
push edi
call sub_4347e3
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
call sub_428ca8
push 0x16
jmp r-xdata
inc eax
test edi edi
je r-xdata
test edi edi
je r-xdata
pop esi
mov [ eax ] esi
call sub_428f36
jmp r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
cmp eax ebx
jbe r-xdata
call sub_428ca8
mov esi [ eax ]
jmp r-xdata
xor eax eax
mov [ edi ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ecx ] eax
xor ecx ecx
mov [ edi + eax * 2 - 0x2 ] cx
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
push 0x50
mov eax ebx
pop esi
xor eax eax
mov [ edi ] ax
call sub_428ca8
push 0x22
sub_434a22
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov ebx 0xe3
mov eax [ esi * 8 + r--data ]
jns r-xdata
lea edi [ esi + 0x1 ]
lea ebx [ esi - 0x1 ]
jmp r-xdata
lea eax [ ebx + edi ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
push 0x55
push [ esi * 8 + r--data ]
push [ ebp + 0x8 ]
call sub_434bb0
add esp 0xc
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_434a70
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_434abc
pop ecx
push eax
call [ CompareStringW@IAT ]
pop ebp
retn
xor ecx ecx
push ecx
push ecx
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_434abc
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call sub_434a22
pop ecx
test eax eax
js r-xdata
cmp eax 0xe4
jae r-xdata
mov eax [ eax * 8 + r--data ]
pop ebp
retn
sub_434ae6
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_434abc
pop ecx
push eax
call [ GetDateFormatW@IAT ]
pop ebp
retn
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_434b2f
push ebp
mov ebp esp
push [ ebp + 0x1c ]
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call sub_434abc
pop ecx
push eax
call [ GetTimeFormatW@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_434b64
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_434abc
pop ecx
push eax
call [ LCMapStringW@IAT ]
pop ebp
retn
xor ecx ecx
push ecx
push ecx
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_434bb0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
xor eax eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
push 0x41
pop ebx
push 0x5a
pop edx
sub edi ecx
mov [ ebp + 0x10 ] edx
jmp r-xdata
movzx eax [ edi + ecx ]
cmp ax bx
jb r-xdata
mov edx eax
cmp ax dx
ja r-xdata
add ecx 0x2
dec esi
je r-xdata
cmp ax [ ebp + 0x10 ]
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
pop edi
sub eax ecx
pop ebx
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp dx ax
je r-xdata
push 0x5a
pop edx
sub_434c4c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_42a670
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
je r-xdata
sub_434c9b
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x104
mov ebx rw-data
xor eax eax
push ebx
xor edi edi
mov [ rw-data ] ax
push edi
call [ GetModuleFileNameW@IAT ]
mov esi [ rw-data ]
mov [ rw-data ] ebx
test esi esi
je r-xdata
mov esi ebx
cmp [ esi ] di
jne r-xdata
or eax 0xffffffff
mov eax [ ebp - 0x8 ]
cmp eax 0x7fffffff
jae r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push edi
push esi
call sub_434d49
mov ebx [ ebp - 0x4 ]
add esp 0x14
cmp ebx 0x3fffffff
jae r-xdata
lea ecx [ eax + ebx * 2 ]
add eax eax
add ecx ecx
cmp ecx eax
jb r-xdata
push ecx
call sub_42899d
mov edi eax
pop ecx
test edi edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ edi + ebx * 4 ]
push eax
push edi
push esi
call sub_434d49
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] edi
mov [ rw-data ] eax
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434d49
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebx ] edi
mov [ eax ] 0x1
test esi esi
je r-xdata
mov [ ebp + 0x8 ] 0x20
mov [ ebp - 0x4 ] 0x9
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
inc [ ebx ]
test edx edx
je r-xdata
xor eax eax
test edi edi
push 0x22
sete al
add ecx 0x2
mov edi eax
pop eax
jmp r-xdata
movzx eax [ ecx ]
add ecx 0x2
test ax ax
je r-xdata
mov ax [ ecx ]
mov [ edx ] ax
add edx 0x2
test edi edi
jne r-xdata
sub ecx 0x2
push 0x22
pop eax
cmp [ ecx ] ax
jne r-xdata
cmp ax [ ebp + 0x8 ]
je r-xdata
test esi esi
je r-xdata
movzx eax [ ecx ]
cmp ax [ ebp + 0x8 ]
je r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
mov esp ebp
pop ebp
retn
mov [ esi ] ebx
add ecx 0x2
jmp r-xdata
cmp ax [ ebp - 0x4 ]
jne r-xdata
mov edi [ ebp + 0x18 ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
xor eax eax
mov [ edx - 0x2 ] ax
jmp r-xdata
cmp [ ecx ] bx
je r-xdata
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp - 0x8 ]
inc [ eax ]
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
cmp [ ecx ] ax
je r-xdata
add ecx 0x2
inc ebx
push 0x22
pop eax
cmp [ ecx ] ax
push 0x5c
pop eax
jne r-xdata
test ebx ebx
jne r-xdata
test bl 0x1
jne r-xdata
dec ebx
test edx edx
je r-xdata
movzx eax [ ecx ]
test ax ax
je r-xdata
shr ebx 0x1
jmp r-xdata
test esi esi
je r-xdata
inc [ edi ]
mov [ edx ] ax
add edx 0x2
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
test edx edx
je r-xdata
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
xor eax eax
test esi esi
sete al
mov esi eax
push 0x22
pop edi
cmp [ ecx + 0x2 ] di
mov edi [ ebp + 0x18 ]
jne r-xdata
inc [ edi ]
xor ebx ebx
jmp r-xdata
xor eax eax
mov [ edx ] ax
add edx 0x2
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp ax [ ebp + 0x8 ]
je r-xdata
add ecx 0x2
jmp r-xdata
cmp [ ecx ] bx
je r-xdata
add ecx 0x2
xor ebx ebx
jmp r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0x4 ]
je r-xdata
push 0x5c
pop eax
push 0x5c
mov [ ebp - 0x8 ] 0x1
pop eax
jmp r-xdata
inc [ edi ]
mov [ edx ] ax
add edx 0x2
sub_434ed8
push ebx
push esi
mov esi [ rw-data ]
xor ebx ebx
push edi
mov edi ebx
test esi esi
jne r-xdata
movzx eax [ esi ]
push 0x3d
pop ecx
test ax ax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ax cx
je r-xdata
lea eax [ edi + 0x1 ]
push 0x4
push eax
call sub_428955
mov edi eax
mov [ rw-data ] edi
pop ecx
pop ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
push esi
call sub_422d7c
pop ecx
lea esi [ esi + eax * 2 ]
add esi 0x2
inc edi
mov esi [ rw-data ]
cmp [ esi ] bx
je r-xdata
push esi
call sub_422ed5
mov [ rw-data ] ebx
xor eax eax
mov [ edi ] ebx
mov [ rw-data ] 0x1
push esi
call sub_422d7c
pop ecx
push 0x3d
lea ebx [ eax + 0x1 ]
pop eax
cmp [ esi ] ax
je r-xdata
lea esi [ esi + ebx * 2 ]
xor ebx ebx
cmp [ esi ] bx
jne r-xdata
push 0x2
push ebx
call sub_428955
mov [ edi ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
mov esi [ rw-data ]
push [ rw-data ]
call sub_422ed5
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_434787
add esp 0xc
test eax eax
jne r-xdata
pop ecx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_428f46
int3
add edi 0x4
sub_434fc7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
js r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
or eax 0xffffffff
pop ebp
retn
cmp eax 0x2
jle r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] eax
cmp eax 0x3
jne r-xdata
mov ecx [ rw-data ]
jmp r-xdata
mov eax ecx
pop ebp
retn
sub_435007
push ebp
mov ebp esp
sub esp 0x14
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
mov eax [ rw-data ]
push esi
push edi
mov edi 0xbb40e64e
mov esi 0xffff0000
cmp eax edi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
xor [ ebp - 0x4 ] eax
call [ GetCurrentProcessId@IAT ]
xor [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor ecx [ ebp - 0x14 ]
xor ecx [ ebp - 0x4 ]
xor ecx eax
cmp ecx edi
jne r-xdata
test esi eax
je r-xdata
test esi ecx
jne r-xdata
mov ecx 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] ecx
not ecx
mov [ rw-data ] ecx
mov eax ecx
or eax 0x4711
shl eax 0x10
or ecx eax
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4350a3
push ebp
mov ebp esp
push ecx
push edi
call [ GetEnvironmentStringsW@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push ebx
xor ebx ebx
push esi
mov esi edi
cmp [ edi ] bx
je r-xdata
sub esi edi
add esi 0x2
push esi
call sub_42899d
mov [ ebp - 0x4 ] eax
pop ecx
test eax eax
je r-xdata
add esi 0x2
cmp [ esi ] bx
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
pop esi
mov eax ebx
pop ebx
push esi
push edi
push eax
call sub_420fc0
mov ebx [ ebp - 0x4 ]
add esp 0xc
add esi 0x2
cmp [ esi ] bx
jne r-xdata
sub_435100
mov ecx [ rw-data ]
xor edx edx
test ecx ecx
jne r-xdata
push esi
push 0x20
pop esi
mov ecx r--data
cmp eax 0x22
jne r-xdata
test ax ax
je r-xdata
add ecx 0x2
jmp r-xdata
xor eax eax
test edx edx
sete al
mov edx eax
mov eax ecx
pop esi
retn
test edx edx
je r-xdata
movzx eax [ ecx ]
cmp ax si
ja r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
cmp ax si
ja r-xdata
add ecx 0x2
sub_43514d
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_428ca8
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
mov [ ecx ] dl
jmp r-xdata
pop esi
pop ebp
retn
push ebx
mov ebx ecx
push edi
mov edi eax
cmp edx 0xffffffff
jne r-xdata
mov [ ecx ] 0x0
sub esi ecx
sub ebx esi
test edx edx
jne r-xdata
dec edi
je r-xdata
test edi edi
pop edi
pop ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ebx ] dl
dec edx
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
mov al [ esi ]
mov [ ebx + esi ] al
inc esi
test al al
je r-xdata
jmp r-xdata
mov al [ esi + ebx ]
mov [ ebx ] al
inc ebx
test al al
je r-xdata
mov [ ecx ] 0x0
call sub_428ca8
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ ecx + eax - 0x1 ] 0x0
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_428f36
mov eax esi
sub_4351f1
push 0xc
push r--data
call sub_428a80
push 0xe
call sub_429d8b
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_435259
call sub_428ac5
retn
mov ecx [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_422ed5
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ ecx ] eax
jne r-xdata
mov edx ecx
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
push ecx
call sub_422ed5
pop ecx
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
sub_435262
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_42588c
pop ecx
pop ebp
retn
push ebx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_422ed5
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_423521
pop ecx
call sub_428ca8
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
inc esi
mov eax ebx
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop ebx
call sub_428ca8
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_428cbb
pop ecx
mov [ esi ] eax
push esi
call sub_423521
pop ecx
test eax eax
je r-xdata
call sub_428ca8
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_428cbb
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_43530d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
test esi esi
je r-xdata
imul esi [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push ebx
call sub_435262
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
push ebx
call sub_428924
pop ecx
mov edi eax
call sub_428ca8
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax ebx
pop ebx
cmp edi esi
jae r-xdata
pop edi
pop esi
pop ebp
retn
sub esi edi
lea eax [ edi + ebx ]
push esi
push 0x0
push eax
call sub_422f60
add esp 0xc
sub_435376
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
imul esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0xc ]
jae r-xdata
xor ecx ecx
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_428ca8
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push esi
call sub_423521
pop ecx
test eax eax
jne r-xdata
mov eax ecx
mov [ eax ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov [ eax ] 0xc
sub_4353f8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422ed5
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422ed5
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422ed5
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422ed5
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422ed5
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422ed5
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422ed5
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422ed5
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422ed5
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422ed5
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422ed5
pop ecx
mov eax [ esi + 0x4c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422ed5
pop ecx
push eax
call sub_422ed5
pop ecx
sub_4354f4
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422ed5
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422ed5
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422ed5
pop ecx
mov eax [ esi + 0x34 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_422ed5
pop ecx
push eax
call sub_422ed5
pop ecx
sub_43555b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_422ed5
push [ esi + 0x8 ]
call sub_422ed5
push [ esi + 0xc ]
call sub_422ed5
push [ esi + 0x10 ]
call sub_422ed5
push [ esi + 0x14 ]
call sub_422ed5
push [ esi + 0x18 ]
call sub_422ed5
push [ esi ]
call sub_422ed5
push [ esi + 0x20 ]
call sub_422ed5
push [ esi + 0x24 ]
call sub_422ed5
push [ esi + 0x28 ]
call sub_422ed5
push [ esi + 0x2c ]
call sub_422ed5
push [ esi + 0x30 ]
call sub_422ed5
push [ esi + 0x34 ]
call sub_422ed5
push [ esi + 0x1c ]
call sub_422ed5
push [ esi + 0x38 ]
call sub_422ed5
push [ esi + 0x3c ]
call sub_422ed5
add esp 0x40
push [ esi + 0x40 ]
call sub_422ed5
push [ esi + 0x44 ]
call sub_422ed5
push [ esi + 0x48 ]
call sub_422ed5
push [ esi + 0x4c ]
call sub_422ed5
push [ esi + 0x50 ]
call sub_422ed5
push [ esi + 0x54 ]
call sub_422ed5
push [ esi + 0x58 ]
call sub_422ed5
push [ esi + 0x5c ]
call sub_422ed5
push [ esi + 0x60 ]
call sub_422ed5
push [ esi + 0x64 ]
call sub_422ed5
push [ esi + 0x68 ]
call sub_422ed5
push [ esi + 0x6c ]
call sub_422ed5
push [ esi + 0x70 ]
call sub_422ed5
push [ esi + 0x74 ]
call sub_422ed5
push [ esi + 0x78 ]
call sub_422ed5
push [ esi + 0x7c ]
call sub_422ed5
add esp 0x40
push [ esi + 0x80 ]
call sub_422ed5
push [ esi + 0x84 ]
call sub_422ed5
push [ esi + 0x88 ]
call sub_422ed5
push [ esi + 0x8c ]
call sub_422ed5
push [ esi + 0x90 ]
call sub_422ed5
push [ esi + 0x94 ]
call sub_422ed5
push [ esi + 0x98 ]
call sub_422ed5
push [ esi + 0x9c ]
call sub_422ed5
push [ esi + 0xa0 ]
call sub_422ed5
push [ esi + 0xa4 ]
call sub_422ed5
push [ esi + 0xa8 ]
call sub_422ed5
push [ esi + 0xb8 ]
call sub_422ed5
push [ esi + 0xbc ]
call sub_422ed5
push [ esi + 0xc0 ]
call sub_422ed5
push [ esi + 0xc4 ]
call sub_422ed5
push [ esi + 0xc8 ]
call sub_422ed5
add esp 0x40
push [ esi + 0xcc ]
call sub_422ed5
push [ esi + 0xb4 ]
call sub_422ed5
push [ esi + 0xd4 ]
call sub_422ed5
push [ esi + 0xd8 ]
call sub_422ed5
push [ esi + 0xdc ]
call sub_422ed5
push [ esi + 0xe0 ]
call sub_422ed5
push [ esi + 0xe4 ]
call sub_422ed5
push [ esi + 0xe8 ]
call sub_422ed5
push [ esi + 0xd0 ]
call sub_422ed5
push [ esi + 0xec ]
call sub_422ed5
push [ esi + 0xf0 ]
call sub_422ed5
push [ esi + 0xf4 ]
call sub_422ed5
push [ esi + 0xf8 ]
call sub_422ed5
push [ esi + 0xfc ]
call sub_422ed5
push [ esi + 0x100 ]
call sub_422ed5
push [ esi + 0x104 ]
call sub_422ed5
add esp 0x40
push [ esi + 0x108 ]
call sub_422ed5
push [ esi + 0x10c ]
call sub_422ed5
push [ esi + 0x110 ]
call sub_422ed5
push [ esi + 0x114 ]
call sub_422ed5
push [ esi + 0x118 ]
call sub_422ed5
push [ esi + 0x11c ]
call sub_422ed5
push [ esi + 0x120 ]
call sub_422ed5
push [ esi + 0x124 ]
call sub_422ed5
push [ esi + 0x128 ]
call sub_422ed5
push [ esi + 0x12c ]
call sub_422ed5
push [ esi + 0x130 ]
call sub_422ed5
push [ esi + 0x134 ]
call sub_422ed5
push [ esi + 0x138 ]
call sub_422ed5
push [ esi + 0x13c ]
call sub_422ed5
push [ esi + 0x140 ]
call sub_422ed5
push [ esi + 0x144 ]
call sub_422ed5
add esp 0x40
push [ esi + 0x148 ]
call sub_422ed5
push [ esi + 0x14c ]
call sub_422ed5
push [ esi + 0x150 ]
call sub_422ed5
push [ esi + 0x154 ]
call sub_422ed5
push [ esi + 0x158 ]
call sub_422ed5
push [ esi + 0x15c ]
call sub_422ed5
push [ esi + 0x160 ]
call sub_422ed5
add esp 0x1c
sub_4358db
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x1c ]
push ebx
push esi
push edi
xor edi edi
test ecx ecx
jne r-xdata
push edi
xor eax eax
cmp [ ebp + 0x20 ] eax
push edi
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov ecx eax
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
mov esi edi
cmp ebx 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_42c776
mov esp ebp
pop ebp
retn
lea eax [ ebx + ebx ]
push eax
push edi
push esi
call sub_422f60
add esp 0xc
push ebx
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea ecx [ ebx + ebx ]
lea eax [ ecx + 0x8 ]
cmp eax ecx
jbe r-xdata
push esi
call sub_427d56
pop ecx
mov eax edi
push [ ebp + 0x18 ]
push eax
push esi
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov edi eax
lea eax [ ebx * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_42588c
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_434c20
mov esi esp
test esi esi
je r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_4359d3
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_422ff5
push [ ebp + 0x20 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4358db
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_435a39
push ebp
mov ebp esp
call [ IsDebuggerPresent@IAT ]
push 0x1
mov [ rw-data ] eax
call sub_4353f0
push [ ebp + 0x8 ]
call sub_42a2d5
cmp [ rw-data ] 0x0
pop ecx
pop ecx
jne r-xdata
push 0xc0000409
call sub_42a2c0
pop ecx
pop ebp
retn
push 0x1
call sub_4353f0
pop ecx
sub_435a76
push ebp
mov ebp esp
sub esp 0x324
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x324 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov [ eax + rw-data ] 0x2
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push 0x4
pop eax
shl eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push r--data
call sub_435a39
mov esp ebp
pop ebp
retn
push 0x2
pop ecx
int 0x29
sub_435b71
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
call sub_428ca8
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi edi
xor eax eax
mov [ edi ] ax
test ecx ecx
je r-xdata
add esi 0x2
dec ecx
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
xor eax eax
test ecx ecx
jne r-xdata
dec ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ edi ] ax
call sub_428ca8
push 0x22
jmp r-xdata
movzx eax [ edx ]
mov [ esi + edx ] ax
lea edx [ edx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_428f36
mov eax esi
sub_435bdd
push ebp
mov ebp esp
xor edx edx
mov eax edx
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
add ecx 0x2
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] dx
je r-xdata
sub_435bfc
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ EncodePointer@IAT ]
push esi
push edi
mov [ ebp - 0x1c ] eax
xor esi esi
mov eax [ ebp + 0xc ]
push esi
mov [ ebp - 0x20 ] eax
call ebx
mov edi eax
mov [ ebp - 0x18 ] edi
call sub_429fd9
mov [ ebp - 0x14 ] eax
cmp [ rw-data ] esi
jne r-xdata
call [ IsDebuggerPresent@IAT ]
test eax eax
je r-xdata
push 0x800
push esi
push r--data
call [ LoadLibraryExW@IAT ]
mov edi eax
test edi edi
jne r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push r--data
push edi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
mov eax [ rw-data ]
mov ebx [ DecodePointer@IAT ]
cmp eax edi
je r-xdata
push [ rw-data ]
call [ DecodePointer@IAT ]
push 0x3
jmp r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
push eax
call [ OutputDebugStringW@IAT ]
xor eax eax
push eax
call ebx
push r--data
push edi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push edi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push edi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
test eax eax
je r-xdata
push esi
push esi
push r--data
call [ LoadLibraryExW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
cmp [ rw-data ] edi
je r-xdata
pop eax
jmp r-xdata
push 0x4
mov edi [ ebp - 0x18 ]
push r--data
push edi
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
mov edi [ ebp + 0x10 ]
push eax
call ebx
test eax eax
je r-xdata
push eax
call ebx
push [ rw-data ]
mov [ ebp - 0x14 ] eax
call ebx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_42c776
mov esp ebp
pop ebp
retn
push edi
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push esi
call eax
jmp r-xdata
call eax
mov esi eax
test esi esi
je r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
call ecx
test eax eax
je r-xdata
push eax
call ebx
test eax eax
je r-xdata
mov edi [ ebp + 0x10 ]
or edi 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call [ ebp - 0x18 ]
test eax eax
je r-xdata
push esi
call eax
mov esi eax
push [ rw-data ]
call ebx
test eax eax
je r-xdata
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_435deb
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_428ca8
mov [ eax ] 0x9
jmp r-xdata
call sub_428ca8
mov [ eax ] 0x9
call sub_428f36
cmp ecx [ rw-data ]
jae r-xdata
xor eax eax
pop ebp
retn
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ eax + ecx + 0x4 ]
and eax 0x40
pop ebp
retn
sub_435e3f
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
push 0x30
pop ecx
cmp ax cx
jb r-xdata
or eax 0xffffffff
pop ebp
retn
cmp ax 0x3a
jae r-xdata
mov edx 0xff10
cmp ax dx
jae r-xdata
movzx eax ax
sub eax ecx
pop ebp
retn
mov ecx 0xff1a
mov edx 0x660
cmp ax dx
jb r-xdata
movzx eax ax
sub eax edx
pop ebp
retn
lea ecx [ edx + 0xa ]
cmp ax cx
jae r-xdata
mov edx 0x6f0
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0x966
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0xc66
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0xe50
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
add edx 0x50
cmp ax dx
jb r-xdata
add ecx 0x50
cmp ax cx
jb r-xdata
mov edx 0x1040
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0x17e0
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
add edx 0x30
cmp ax dx
jb r-xdata
add ecx 0x30
jmp r-xdata
cmp ax cx
jb r-xdata
sub_435fde
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
call sub_422ff5
lea eax [ ebp - 0x2c ]
xor edi edi
push eax
push edi
push edi
push edi
push edi
push esi
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43890f
mov ebx eax
add esp 0x20
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_4369c4
pop ecx
pop ecx
test bl 0x3
jne r-xdata
mov ecx [ ebp - 0x18 ]
mov [ eax ] ecx
test bl 0x1
jne r-xdata
cmp eax 0x1
je r-xdata
push 0x4
jmp r-xdata
test bl 0x2
je r-xdata
push 0x3
cmp eax 0x2
jne r-xdata
pop edi
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_42c776
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x24 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_436082
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
lea ecx [ ebp - 0x28 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
call sub_422ff5
lea eax [ ebp - 0x28 ]
xor ebx ebx
push eax
push ebx
push ebx
push ebx
push ebx
push esi
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43890f
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_436452
mov ecx eax
add esp 0x28
mov eax [ ebp - 0x14 ]
test al 0x3
jne r-xdata
test al 0x1
jne r-xdata
cmp ecx 0x1
je r-xdata
push 0x4
jmp r-xdata
test al 0x2
je r-xdata
push 0x3
cmp ecx 0x2
jne r-xdata
pop ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_42c776
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x20 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_436130
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_436164
push ebp
mov ebp esp
inc [ rw-data ]
push esi
mov esi 0x1000
push esi
call sub_42899d
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] esi
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop esi
pop ebp
retn
sub_4361bf
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test [ edi + 0xc ] 0x40
jne r-xdata
add [ edi + 0x4 ] 0xfffffffe
mov eax [ ebp + 0x8 ]
js r-xdata
push edi
call sub_424856
mov ebx rw-data
pop ecx
cmp eax 0xffffffff
je r-xdata
movzx eax ax
push edi
push eax
call sub_4390b7
pop ecx
pop ecx
mov ecx [ edi ]
mov [ ecx ] ax
add [ edi ] 0x2
jmp r-xdata
mov eax ebx
push edi
call sub_424856
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_42c776
mov esp ebp
pop ebp
retn
push edi
call sub_424856
pop ecx
cmp eax 0xffffffff
je r-xdata
push edi
call sub_424856
mov esi eax
push edi
sar esi 0x5
call sub_424856
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
jmp r-xdata
mov eax ebx
push edi
call sub_424856
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push edi
call sub_424856
pop ecx
cmp eax 0xffffffff
je r-xdata
push edi
call sub_424856
mov esi eax
push edi
sar esi 0x5
call sub_424856
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
jmp r-xdata
test [ ebx + 0x4 ] 0x80
je r-xdata
push edi
call sub_424856
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_437d45
add esp 0x10
test eax eax
je r-xdata
push edi
call sub_424856
mov esi eax
push edi
sar esi 0x5
call sub_424856
mov ebx eax
and ebx 0x1f
pop ecx
shl ebx 0x6
add ebx [ esi * 4 + rw-data ]
pop ecx
xor esi esi
cmp [ ebp - 0x10 ] esi
jle r-xdata
mov eax 0xffff
jmp r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ edi + 0x4 ]
js r-xdata
movsx eax [ ebp + esi - 0xc ]
push edi
push eax
call sub_42af9e
pop ecx
pop ecx
mov ecx eax
mov ecx [ edi ]
mov al [ ebp + esi - 0xc ]
mov [ ecx ] al
mov eax [ edi ]
movzx ecx [ eax ]
inc eax
mov [ edi ] eax
jmp r-xdata
inc esi
cmp esi [ ebp - 0x10 ]
jl r-xdata
cmp ecx 0xffffffff
je r-xdata
sub_436345
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_422ff5
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_42373b
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
xor edi edi
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
inc edi
push edi
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov edi [ ebp - 0x10 ]
cmp [ edi + 0x74 ] 0x1
jle r-xdata
xor edi edi
inc edi
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_428ca8
or edi 0xffffffff
mov [ eax ] 0x2a
cmp ebx [ edi + 0x74 ]
cmp ebx [ edi + 0x74 ]
jl r-xdata
mov eax edi
pop edi
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ esi + 0x1 ] 0x0
je r-xdata
jb r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push [ edi + 0x74 ]
push esi
push 0x9
push [ edi + 0x4 ]
call [ MultiByteToWideChar@IAT ]
mov edi [ ebp - 0x10 ]
test eax eax
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ edi + 0x74 ]
jmp r-xdata
sub_436452
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx eax [ ecx + 0xa ]
xor ebx ebx
mov edi [ ebp + 0xc ]
mov edx eax
and eax 0x8000
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x44 ] eax
and edx 0x7fff
mov eax [ ecx + 0x6 ]
sub edx 0x3fff
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x2 ]
mov [ ebp - 0xc ] eax
movzx eax [ ecx ]
shl eax 0x10
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x8 ] eax
cmp edx 0xffffc001
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x24 ] edx
movsd [ edi ] [ esi ]
dec eax
mov [ ebp - 0x34 ] eax
push 0x1f
mov [ ebp - 0x2c ] ebx
movsd [ edi ] [ esi ]
lea ecx [ eax + 0x1 ]
mov eax ecx
cdq
movsd [ edi ] [ esi ]
pop esi
and edx esi
add edx eax
sar edx 0x5
mov [ ebp - 0x3c ] edx
and ecx 0x8000001f
jns r-xdata
mov esi ebx
mov eax ebx
sub esi ecx
xor eax eax
inc eax
mov [ ebp - 0x30 ] esi
mov ecx esi
or edi 0xffffffff
shl eax cl
push 0x3
pop esi
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
inc eax
cmp eax 0x3
jl r-xdata
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
lea eax [ edx + 0x1 ]
cmp eax esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov edi [ ebp - 0x40 ]
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
cmp [ ebp - 0x2c ] ebx
je r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + eax * 4 ]
sub ecx eax
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
cmp eax 0x20
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ edi + 0x4 ] esi
mov [ edi ] eax
jmp r-xdata
push 0x1f
pop eax
sub eax [ rw-data ]
mov ecx eax
mov eax [ ebp - 0x44 ]
shl esi cl
neg eax
sbb eax eax
and eax 0x80000000
or esi eax
mov eax [ rw-data ]
or esi [ ebp - 0x10 ]
cmp eax 0x40
jne r-xdata
mov edx [ rw-data ]
mov eax edx
sub eax [ rw-data ]
cmp ecx eax
jge r-xdata
inc ecx
mov eax [ ebp - 0x34 ]
cdq
push 0x1f
pop ecx
and edx ecx
add edx eax
mov eax [ ebp - 0x34 ]
sar edx 0x5
and eax 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_42c776
mov esp ebp
pop ebp
retn
mov [ edi ] esi
cmp ecx edx
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
sub ecx eax
mov [ ebp - 0x2c ] ebx
xor eax eax
inc eax
shl eax cl
mov [ ebp - 0x38 ] eax
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx [ ebp - 0x38 ]
add ecx eax
mov [ ebp - 0x28 ] ecx
cmp ecx eax
mov eax [ ebp - 0x28 ]
mov ecx ebx
push 0xffffffff
pop edi
jb r-xdata
dec eax
or eax 0xffffffe0
inc eax
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
cmp ecx [ rw-data ]
jl r-xdata
sub edx [ ebp - 0x24 ]
lea esi [ ebp - 0x1c ]
mov [ ebp - 0x30 ] edx
lea edi [ ebp - 0x10 ]
mov eax edx
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
movsd [ edi ] [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
and eax 0x8000001f
jns r-xdata
push 0x2
pop ebx
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax [ ebp - 0x38 ]
jae r-xdata
mov edx [ ebp - 0x3c ]
mov esi [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
add esi ecx
mov ecx [ rw-data ]
mov eax ecx
cdq
and edx 0x1f
mov [ ebp - 0x38 ] esi
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
mov ecx [ rw-data ]
lea edi [ ebp - 0x10 ]
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
or [ ebp - 0x10 ] 0x80000000
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x34 ] eax
and ecx 0x8000001f
jns r-xdata
mov [ ebp - 0x30 ] eax
or edi 0xffffffff
mov eax edi
mov [ ebp - 0x20 ] ebx
mov edi [ ebp - 0x30 ]
mov ecx edi
shl eax cl
not eax
push 0x20
mov [ ebp - 0x28 ] eax
pop eax
sub eax edi
push 0x3
mov [ ebp - 0x38 ] eax
pop esi
dec eax
or eax 0xffffffe0
inc eax
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
js r-xdata
push 0x20
mov [ ebp - 0x20 ] ebx
mov esi ebx
shl edi cl
mov ebx ecx
pop eax
sub eax ebx
mov [ ebp - 0x24 ] ecx
not edi
mov [ ebp - 0x24 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
or edi 0xffffffff
mov [ ebp - 0x38 ] ecx
push 0x20
shl edi cl
pop eax
sub eax ecx
mov [ ebp - 0x20 ] ebx
not edi
mov [ ebp - 0x28 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov ecx edi
mov eax edx
shr edx cl
or edx [ ebp - 0x20 ]
and eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x38 ]
shl eax cl
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x8 ]
shl eax 0x2
xor ebx ebx
push 0x2
sub edx eax
or edi 0xffffffff
mov eax [ ebp - 0x3c ]
pop ecx
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
mov [ ebp - 0x2c ] ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x28 ] edi
mov eax edi
jb r-xdata
mov edx [ ebp + esi * 4 - 0x10 ]
mov ecx ebx
mov eax edx
shr edx cl
or edx [ ebp - 0x20 ]
and eax edi
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp + esi * 4 - 0x10 ] edx
inc esi
mov [ ebp - 0x20 ] eax
cmp esi 0x3
jl r-xdata
mov edi [ ebp - 0x28 ]
lea edx [ ebp - 0x8 ]
mov esi [ ebp - 0x38 ]
mov eax edi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov eax edx
shr edx cl
and eax edi
or edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x28 ]
shl eax cl
mov ecx [ ebp - 0x38 ]
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov esi [ ebp - 0x34 ]
lea edx [ ebp - 0x8 ]
mov eax esi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
mov eax [ ebp - 0x3c ]
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
cmp ecx eax
jl r-xdata
mov ecx [ ebp - 0x34 ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add edx eax
sar edx 0x5
mov [ ebp - 0x2c ] edx
and ecx 0x8000001f
jns r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
jns r-xdata
cmp ecx edi
jl r-xdata
sub edx 0x4
dec ecx
jns r-xdata
cmp ecx esi
jl r-xdata
mov esi [ rw-data ]
xor ebx ebx
add esi [ rw-data ]
inc ebx
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
push 0x1f
pop eax
sub eax ecx
mov [ ebp - 0x30 ] eax
xor eax eax
mov ecx [ ebp - 0x30 ]
inc eax
shl eax cl
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
inc edx
cmp edx esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + edx * 4 ]
sub ecx edx
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov eax ebx
shl edi cl
push 0x20
mov [ ebp - 0x20 ] ebx
not edi
mov ebx [ ebp - 0x24 ]
pop ecx
sub ecx ebx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x24 ] ecx
dec ecx
or ecx 0xffffffe0
inc ecx
mov edi [ ebp - 0x34 ]
mov eax edi
push 0x1f
cdq
pop ecx
and edx ecx
add edx eax
sar edx 0x5
and edi 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov edx [ ebp + eax * 4 - 0x10 ]
mov ecx ebx
mov eax edx
shr edx cl
mov ecx [ ebp - 0x34 ]
and eax edi
or edx [ ebp - 0x20 ]
mov [ ebp + ecx * 4 - 0x10 ] edx
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x34 ] eax
cmp eax esi
jl r-xdata
mov esi [ ebp - 0x28 ]
lea edx [ ebp - 0x8 ]
mov eax esi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov eax [ ebp + edx * 4 - 0x10 ]
sub ecx edi
xor edi edi
inc edi
shl edi cl
mov ecx ebx
mov [ ebp - 0x24 ] edi
add edi eax
mov [ ebp - 0x20 ] edi
cmp edi eax
mov eax [ ebp - 0x20 ]
push 0xffffffff
pop edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp eax [ ebp - 0x24 ]
jae r-xdata
mov edx [ ebp - 0x2c ]
cmp ecx esi
jl r-xdata
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
js r-xdata
mov esi ebx
jmp r-xdata
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x20 ] edi
mov eax edi
jb r-xdata
xor ecx ecx
inc ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
jns r-xdata
sub_4369c4
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx eax [ ecx + 0xa ]
xor ebx ebx
mov edi [ ebp + 0xc ]
mov edx eax
and eax 0x8000
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x44 ] eax
and edx 0x7fff
mov eax [ ecx + 0x6 ]
sub edx 0x3fff
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x2 ]
mov [ ebp - 0xc ] eax
movzx eax [ ecx ]
shl eax 0x10
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x8 ] eax
cmp edx 0xffffc001
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x24 ] edx
movsd [ edi ] [ esi ]
dec eax
mov [ ebp - 0x34 ] eax
push 0x1f
mov [ ebp - 0x2c ] ebx
movsd [ edi ] [ esi ]
lea ecx [ eax + 0x1 ]
mov eax ecx
cdq
movsd [ edi ] [ esi ]
pop esi
and edx esi
add edx eax
sar edx 0x5
mov [ ebp - 0x3c ] edx
and ecx 0x8000001f
jns r-xdata
mov esi ebx
mov eax ebx
sub esi ecx
xor eax eax
inc eax
mov [ ebp - 0x30 ] esi
mov ecx esi
or edi 0xffffffff
shl eax cl
push 0x3
pop esi
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
inc eax
cmp eax 0x3
jl r-xdata
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
lea eax [ edx + 0x1 ]
cmp eax esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov edi [ ebp - 0x40 ]
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
cmp [ ebp - 0x2c ] ebx
je r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + eax * 4 ]
sub ecx eax
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
cmp eax 0x20
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ edi + 0x4 ] esi
mov [ edi ] eax
jmp r-xdata
push 0x1f
pop eax
sub eax [ rw-data ]
mov ecx eax
mov eax [ ebp - 0x44 ]
shl esi cl
neg eax
sbb eax eax
and eax 0x80000000
or esi eax
mov eax [ rw-data ]
or esi [ ebp - 0x10 ]
cmp eax 0x40
jne r-xdata
mov edx [ rw-data ]
mov eax edx
sub eax [ rw-data ]
cmp ecx eax
jge r-xdata
inc ecx
mov eax [ ebp - 0x34 ]
cdq
push 0x1f
pop ecx
and edx ecx
add edx eax
mov eax [ ebp - 0x34 ]
sar edx 0x5
and eax 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_42c776
mov esp ebp
pop ebp
retn
mov [ edi ] esi
cmp ecx edx
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
sub ecx eax
mov [ ebp - 0x2c ] ebx
xor eax eax
inc eax
shl eax cl
mov [ ebp - 0x38 ] eax
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx [ ebp - 0x38 ]
add ecx eax
mov [ ebp - 0x28 ] ecx
cmp ecx eax
mov eax [ ebp - 0x28 ]
mov ecx ebx
push 0xffffffff
pop edi
jb r-xdata
dec eax
or eax 0xffffffe0
inc eax
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
cmp ecx [ rw-data ]
jl r-xdata
sub edx [ ebp - 0x24 ]
lea esi [ ebp - 0x1c ]
mov [ ebp - 0x30 ] edx
lea edi [ ebp - 0x10 ]
mov eax edx
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
movsd [ edi ] [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
and eax 0x8000001f
jns r-xdata
push 0x2
pop ebx
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax [ ebp - 0x38 ]
jae r-xdata
mov edx [ ebp - 0x3c ]
mov esi [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
add esi ecx
mov ecx [ rw-data ]
mov eax ecx
cdq
and edx 0x1f
mov [ ebp - 0x38 ] esi
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
mov ecx [ rw-data ]
lea edi [ ebp - 0x10 ]
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
or [ ebp - 0x10 ] 0x80000000
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x34 ] eax
and ecx 0x8000001f
jns r-xdata
mov [ ebp - 0x30 ] eax
or edi 0xffffffff
mov eax edi
mov [ ebp - 0x20 ] ebx
mov edi [ ebp - 0x30 ]
mov ecx edi
shl eax cl
not eax
push 0x20
mov [ ebp - 0x28 ] eax
pop eax
sub eax edi
push 0x3
mov [ ebp - 0x38 ] eax
pop esi
dec eax
or eax 0xffffffe0
inc eax
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
js r-xdata
push 0x20
mov [ ebp - 0x20 ] ebx
mov esi ebx
shl edi cl
mov ebx ecx
pop eax
sub eax ebx
mov [ ebp - 0x24 ] ecx
not edi
mov [ ebp - 0x24 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
or edi 0xffffffff
mov [ ebp - 0x38 ] ecx
push 0x20
shl edi cl
pop eax
sub eax ecx
mov [ ebp - 0x20 ] ebx
not edi
mov [ ebp - 0x28 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov ecx edi
mov eax edx
shr edx cl
or edx [ ebp - 0x20 ]
and eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x38 ]
shl eax cl
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x8 ]
shl eax 0x2
xor ebx ebx
push 0x2
sub edx eax
or edi 0xffffffff
mov eax [ ebp - 0x3c ]
pop ecx
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
mov [ ebp - 0x2c ] ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x28 ] edi
mov eax edi
jb r-xdata
mov edx [ ebp + esi * 4 - 0x10 ]
mov ecx ebx
mov eax edx
shr edx cl
or edx [ ebp - 0x20 ]
and eax edi
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp + esi * 4 - 0x10 ] edx
inc esi
mov [ ebp - 0x20 ] eax
cmp esi 0x3
jl r-xdata
mov edi [ ebp - 0x28 ]
lea edx [ ebp - 0x8 ]
mov esi [ ebp - 0x38 ]
mov eax edi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov eax edx
shr edx cl
and eax edi
or edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x28 ]
shl eax cl
mov ecx [ ebp - 0x38 ]
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov esi [ ebp - 0x34 ]
lea edx [ ebp - 0x8 ]
mov eax esi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
mov eax [ ebp - 0x3c ]
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
cmp ecx eax
jl r-xdata
mov ecx [ ebp - 0x34 ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add edx eax
sar edx 0x5
mov [ ebp - 0x2c ] edx
and ecx 0x8000001f
jns r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
jns r-xdata
cmp ecx edi
jl r-xdata
sub edx 0x4
dec ecx
jns r-xdata
cmp ecx esi
jl r-xdata
mov esi [ rw-data ]
xor ebx ebx
add esi [ rw-data ]
inc ebx
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
push 0x1f
pop eax
sub eax ecx
mov [ ebp - 0x30 ] eax
xor eax eax
mov ecx [ ebp - 0x30 ]
inc eax
shl eax cl
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
inc edx
cmp edx esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + edx * 4 ]
sub ecx edx
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov eax ebx
shl edi cl
push 0x20
mov [ ebp - 0x20 ] ebx
not edi
mov ebx [ ebp - 0x24 ]
pop ecx
sub ecx ebx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x24 ] ecx
dec ecx
or ecx 0xffffffe0
inc ecx
mov edi [ ebp - 0x34 ]
mov eax edi
push 0x1f
cdq
pop ecx
and edx ecx
add edx eax
sar edx 0x5
and edi 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov edx [ ebp + eax * 4 - 0x10 ]
mov ecx ebx
mov eax edx
shr edx cl
mov ecx [ ebp - 0x34 ]
and eax edi
or edx [ ebp - 0x20 ]
mov [ ebp + ecx * 4 - 0x10 ] edx
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x34 ] eax
cmp eax esi
jl r-xdata
mov esi [ ebp - 0x28 ]
lea edx [ ebp - 0x8 ]
mov eax esi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov eax [ ebp + edx * 4 - 0x10 ]
sub ecx edi
xor edi edi
inc edi
shl edi cl
mov ecx ebx
mov [ ebp - 0x24 ] edi
add edi eax
mov [ ebp - 0x20 ] edi
cmp edi eax
mov eax [ ebp - 0x20 ]
push 0xffffffff
pop edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp eax [ ebp - 0x24 ]
jae r-xdata
mov edx [ ebp - 0x2c ]
cmp ecx esi
jl r-xdata
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
js r-xdata
mov esi ebx
jmp r-xdata
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x20 ] edi
mov eax edi
jb r-xdata
xor ecx ecx
inc ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
jns r-xdata
sub_436f36
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
mov eax 0x404e
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
cmp [ ebp + 0xc ] edx
jbe r-xdata
cmp [ ebx + 0x8 ] edx
jne r-xdata
mov ecx edx
mov [ ebp + 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov edx [ ebx + 0x8 ]
test edx 0x8000
jne r-xdata
mov edx [ ebx + 0x4 ]
xor ecx ecx
inc ecx
cmp eax [ ebp - 0x1c ]
jae r-xdata
pop edi
pop esi
mov [ ebx + 0xa ] ax
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx ]
mov esi [ ebx + 0x4 ]
mov ecx [ ebx ]
mov esi edx
mov eax ecx
shl edx 0x10
shr eax 0x10
or edx eax
shr esi 0x10
mov eax [ ebp - 0x4 ]
shl ecx 0x10
add eax 0xfff0
mov [ ebx ] ecx
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] esi
mov edx [ ebp - 0x18 ]
xor eax eax
lea ecx [ esi + edx ]
mov [ ebp - 0xc ] ecx
cmp ecx esi
jb r-xdata
mov eax esi
xor ecx ecx
lea esi [ eax + 0x1 ]
cmp esi eax
jb r-xdata
mov [ ebx ] eax
test ecx ecx
je r-xdata
mov eax edi
mov ecx esi
shr eax 0x1f
add esi esi
or esi eax
shr ecx 0x1f
mov eax [ ebp - 0x4 ]
add edx edx
or edx ecx
add eax 0xffff
add edi edi
mov [ ebp - 0x4 ] eax
test edx 0x8000
je r-xdata
mov [ ebx ] edi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] edx
xor eax eax
inc eax
cmp ecx edx
jae r-xdata
xor ecx ecx
inc ecx
cmp esi 0x1
jae r-xdata
mov edx [ ebp + 0x10 ]
mov eax edx
mov esi [ ebp - 0xc ]
add edx edx
add edi [ ebp - 0x14 ]
add esi esi
and [ ebp - 0x10 ] 0x0
add edi edi
shr eax 0x1f
or esi eax
shr ecx 0x1f
mov eax [ ebp + 0x8 ]
or edi ecx
mov [ ebx ] edx
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] edi
movsx eax [ eax ]
mov [ ebp + 0x10 ] esi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1c ] eax
lea ecx [ edx + eax ]
mov [ ebp - 0xc ] ecx
cmp ecx edx
jb r-xdata
inc edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] ecx
test eax eax
je r-xdata
inc edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] esi
test ecx ecx
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp ecx eax
jae r-xdata
mov [ ebx ] ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
dec eax
mov [ ebx + 0x4 ] esi
inc [ ebp + 0x8 ]
mov [ ebx + 0x8 ] edi
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
mov eax esi
xor edx edx
lea esi [ eax + 0x1 ]
mov [ ebp + 0x10 ] esi
cmp esi eax
jb r-xdata
mov edx [ ebp - 0xc ]
lea edi [ ebp - 0x1c ]
mov esi ebx
mov eax ecx
shr eax 0x1f
add edx edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp + 0x10 ]
mov ecx esi
mov edi [ ebp - 0x8 ]
add esi esi
or esi eax
shr ecx 0x1f
add edi edi
mov eax edx
or edi ecx
shr eax 0x1f
mov ecx esi
add edx edx
add esi esi
shr ecx 0x1f
or esi eax
mov [ ebx ] edx
mov eax [ ebp - 0x1c ]
add edi edi
or edi ecx
mov [ ebx + 0x4 ] esi
add eax edx
mov [ ebx + 0x8 ] edi
xor ecx ecx
mov [ ebp + 0x10 ] eax
cmp eax edx
jb r-xdata
mov eax 0x404e
xor edx edx
xor edx edx
inc edx
cmp esi 0x1
jae r-xdata
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] esi
test edx edx
je r-xdata
sub_437116
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_437137
add esp 0x1c
pop ebp
retn
sub_437137
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_437688
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_437842
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4371bd
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_437903
jmp r-xdata
sub_4371bd
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
push 0x30
pop eax
push [ ebp + 0x1c ]
mov ecx eax
mov [ ebp - 0x8 ] 0x3ff
mov [ ebp - 0x4 ] ecx
xor ebx ebx
lea ecx [ ebp - 0x2c ]
call sub_422ff5
mov edi [ ebp + 0x14 ]
test edi edi
jns r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
mov edi ebx
call sub_428ca8
push 0x16
jmp r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
pop edi
mov [ eax ] edi
call sub_428f36
jmp r-xdata
lea eax [ edi + 0xb ]
mov [ esi ] bl
cmp ecx eax
ja r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ebx [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax ebx
shr eax 0x14
and eax 0x7ff
cmp eax 0x7ff
jne r-xdata
call sub_428ca8
push 0x22
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x24 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
xor eax eax
cmp eax eax
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov ebx [ ebp + 0x18 ]
push 0x30
pop eax
mov [ esi ] al
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
mov [ esi + 0x1 ] al
mov ecx [ edx + 0x4 ]
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
add ebx 0x27
xor eax eax
or eax ecx
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov [ esi ] 0x2d
inc esi
and ebx 0x80000000
or eax ebx
je r-xdata
or eax 0xffffffff
cmp ecx eax
je r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
push 0x30
pop eax
mov [ esi + 0x2 ] al
add esi 0x3
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
and eax 0xfffff
or ecx eax
jne r-xdata
push 0x0
push edi
push eax
lea ebx [ esi + 0x2 ]
push ebx
push edx
call sub_437519
mov edi eax
add esp 0x14
test edi edi
je r-xdata
lea eax [ ecx - 0x2 ]
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ ecx ] al
mov [ ecx ] 0x0
jmp r-xdata
mov [ ebp - 0x8 ] 0x3fe
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
mov [ esi ] 0x0
jmp r-xdata
and [ ebp + 0x14 ] 0x0
mov ecx 0xf0000
mov eax [ ebp - 0x4 ]
mov [ ebp + 0xc ] ecx
cmp [ edx ] 0x0
jbe r-xdata
mov eax [ edx + 0x4 ]
and eax 0xfffff
mov [ ebp - 0x18 ] eax
ja r-xdata
mov ecx esi
inc esi
mov [ ebp - 0xc ] ecx
test edi edi
jne r-xdata
mov edi [ ebp + 0x18 ]
test edi edi
push 0x30
pop eax
mov [ esi ] al
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
lea eax [ esi + 0x2 ]
push 0x65
push eax
call sub_439220
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
test ax ax
js r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp + 0x14 ]
and edx ecx
mov ecx [ ebp - 0x4 ]
and edx 0xfffff
movsx ecx cx
call sub_431790
push 0x30
pop ecx
add ax cx
movzx eax ax
cmp eax 0x39
jbe r-xdata
test edi edi
jle r-xdata
xor edi edi
jmp r-xdata
test edi edi
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp + 0x14 ]
and edx ecx
mov ecx [ ebp - 0x4 ]
and edx 0xfffff
movsx ecx cx
call sub_431790
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ esi ] al
inc esi
mov eax [ ebp + 0x14 ]
shrd eax ecx 0x4
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x4 ]
shr ecx 0x4
sub eax 0x4
dec edi
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] eax
test ax ax
jns r-xdata
add eax ebx
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push edi
push 0x30
pop eax
push eax
push esi
call sub_422f60
add esp 0xc
add esi edi
push 0x30
lea eax [ esi - 0x1 ]
pop ebx
test edi edi
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
mov edx [ ebp + 0x8 ]
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edx ]
mov edx [ edx + 0x4 ]
call sub_431790
mov ecx eax
mov ebx edx
xor eax eax
and ecx 0x7ff
and ebx eax
sub ecx [ ebp - 0x8 ]
sbb ebx eax
js r-xdata
mov esi eax
mov [ eax ] bl
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg ecx
adc ebx eax
neg ebx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
mov ebx [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
je r-xdata
cmp esi edi
jne r-xdata
mov edx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp ecx eax
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
push eax
push 0xa
push ebx
push ecx
call sub_439560
add al 0x30
mov [ ebp - 0x18 ] edx
mov [ esi ] al
inc esi
mov [ ebp - 0x18 ] ebx
xor eax eax
cmp ebx eax
jl r-xdata
push eax
push edx
push ebx
push ecx
call sub_439560
add al 0x30
mov [ ebp - 0x18 ] edx
mov [ esi ] al
inc esi
xor eax eax
cmp esi edi
jne r-xdata
cmp ecx edx
jb r-xdata
mov [ esi ] 0x30
mov edi esi
cmp ebx eax
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
add cl 0x30
mov edi eax
mov [ esi ] cl
mov [ esi + 0x1 ] al
jg r-xdata
push eax
push 0x64
push ebx
push ecx
call sub_439560
add al 0x30
mov [ ebp - 0x18 ] edx
mov [ esi ] al
inc esi
xor eax eax
cmp ebx eax
jl r-xdata
cmp ecx 0xa
jb r-xdata
jg r-xdata
cmp ecx 0x64
jb r-xdata
sub_437537
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push edi
push [ ebp + 0x20 ]
call sub_422ff5
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_428ca8
push 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
pop edi
mov [ eax ] edi
call sub_428f36
jmp r-xdata
mov edx [ ebp + 0x10 ]
xor edi edi
mov eax edx
test edx edx
jg r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
add eax 0x9
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edi
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_428ca8
push 0x22
mov eax [ ebp + 0x18 ]
push esi
mov esi ebx
cmp [ eax ] 0x2d
jne r-xdata
mov ecx [ ebp + 0x18 ]
xor eax eax
test edx edx
setg al
push eax
xor eax eax
cmp [ ecx ] 0x2d
sete al
add eax ebx
push eax
call sub_437b8c
mov edx [ ebp + 0x10 ]
pop ecx
pop ecx
test edx edx
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x1c ] al
sete al
add eax edx
add esi eax
or eax 0xffffffff
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
mov [ esi ] al
inc esi
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
push r--data
push eax
push esi
call sub_434732
add esp 0xc
test eax eax
jne r-xdata
mov eax ebx
sub eax esi
add eax [ ebp + 0xc ]
push edi
push edi
push edi
push edi
push edi
call sub_428f46
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x14 ] edi
je r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ edx + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop esi
je r-xdata
mov edx [ edx + 0x4 ]
dec edx
jns r-xdata
cmp [ ecx ] 0x30
jne r-xdata
push 0x64
pop ebx
cmp edx ebx
jl r-xdata
neg edx
mov [ esi + 0x1 ] 0x2d
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_427f60
add esp 0xc
push 0xa
pop ebx
cmp edx ebx
jl r-xdata
mov eax edx
cdq
idiv ebx
add [ esi + 0x2 ] al
add [ esi + 0x4 ] dl
mov eax edx
cdq
idiv ebx
add [ esi + 0x3 ] al
sub_437688
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_4394cf
add esp 0x14
test edi edi
jne r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_428ca8
or ecx 0xffffffff
cmp esi ecx
je r-xdata
call sub_428ca8
push 0x16
pop esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_42c776
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebx + 0x1 ]
push eax
push ecx
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
xor eax eax
test ebx ebx
setg al
add ecx edi
add eax ecx
push eax
call sub_439357
add esp 0x10
test eax eax
je r-xdata
xor eax eax
mov ecx esi
cmp [ ebp - 0x2c ] 0x2d
sete al
sub ecx eax
xor eax eax
test ebx ebx
setg al
sub ecx eax
mov [ eax ] esi
call sub_428f36
mov eax esi
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
push ebx
push esi
push edi
call sub_437537
add esp 0x1c
mov [ edi ] 0x0
jmp r-xdata
sub_437756
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
push ebx
push esi
push [ ebp + 0x1c ]
mov eax [ eax + 0x4 ]
dec eax
mov [ ebp - 0x4 ] eax
call sub_422ff5
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_428ca8
push 0x16
pop ebx
mov [ eax ] ebx
call sub_428f36
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp [ ebp + 0x18 ] bl
je r-xdata
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x14 ]
cmp [ eax ] 0x2d
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx edi
jne r-xdata
mov eax [ eax + 0x4 ]
test eax eax
jg r-xdata
mov [ esi ] 0x2d
inc esi
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ edx ] 0x2d
sete al
add eax ecx
mov [ eax + esi ] 0x30
add esi eax
push 0x1
push esi
call sub_437b8c
pop ecx
mov [ esi ] 0x30
inc esi
pop ecx
jmp r-xdata
pop edi
push 0x1
push esi
call sub_437b8c
mov eax [ ebp - 0x14 ]
pop ecx
pop ecx
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
mov eax [ ebp + 0x14 ]
mov eax [ eax + 0x4 ]
test eax eax
jns r-xdata
test edi edi
jle r-xdata
cmp [ ebp + 0x18 ] bl
je r-xdata
neg eax
cmp edi eax
jl r-xdata
mov edi eax
neg edi
jmp r-xdata
push edi
push esi
call sub_437b8c
push edi
push 0x30
push esi
call sub_422f60
add esp 0x14
mov edi eax
sub_437842
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
push ebx
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_4394cf
add esp 0x14
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_428ca8
mov [ eax ] ebx
call sub_428f36
mov eax ebx
jmp r-xdata
or ecx 0xffffffff
cmp esi ecx
je r-xdata
call sub_428ca8
mov [ eax ] ebx
call sub_428f36
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_42c776
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x14 ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x28 ]
add eax ebx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
push ecx
sete al
add eax edi
push eax
call sub_439357
add esp 0x10
test eax eax
je r-xdata
xor eax eax
mov ecx esi
cmp [ ebp - 0x2c ] 0x2d
sete al
sub ecx eax
pop esi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push ebx
push esi
push edi
call sub_437756
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
sub_437903
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
push ebx
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_4394cf
add esp 0x14
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_428ca8
mov [ eax ] ebx
call sub_428f36
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x2c ]
xor ecx ecx
dec eax
cmp [ ebp - 0x30 ] 0x2d
mov [ ebp - 0x20 ] eax
sete cl
or eax 0xffffffff
lea ebx [ ecx + edi ]
cmp esi eax
je r-xdata
call sub_428ca8
mov [ eax ] ebx
call sub_428f36
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_42c776
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x30 ]
push ecx
push [ ebp + 0x14 ]
push eax
push ebx
call sub_439357
add esp 0x10
test eax eax
je r-xdata
mov eax esi
sub eax ecx
pop esi
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ edi ] 0x0
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push edi
call sub_437537
add esp 0x1c
cmp eax [ ebp + 0x14 ]
jge r-xdata
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x14 ]
push esi
push edi
call sub_437756
add esp 0x18
jmp r-xdata
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
mov [ ebx - 0x2 ] al
sub_437a13
push ebp
mov ebp esp
sub esp 0x10
push edi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_422ff5
mov edx [ ebp + 0x8 ]
mov edi [ ebp - 0x10 ]
mov cl [ edx ]
test cl cl
je r-xdata
mov al [ edx ]
inc edx
test al al
je r-xdata
mov eax [ edi + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
cmp [ ebp - 0x4 ] 0x0
pop edi
je r-xdata
jmp r-xdata
inc edx
mov cl [ edx ]
test cl cl
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov al [ edx ]
test al al
jne r-xdata
cmp cl al
je r-xdata
cmp al 0x65
je r-xdata
push esi
mov esi edx
cmp al 0x45
je r-xdata
dec edx
cmp [ edx ] 0x30
je r-xdata
mov eax [ edi + 0x84 ]
mov ecx [ eax ]
mov al [ edx ]
cmp al [ ecx ]
jne r-xdata
inc edx
mov al [ esi ]
inc edx
inc esi
mov [ edx ] al
test al al
jne r-xdata
dec edx
pop esi
sub_437aab
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_436110
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_436082
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
add esp 0xc
mov esp ebp
pop ebp
retn
sub_437afe
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push esi
push [ ebp + 0xc ]
call sub_422ff5
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_424f5c
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_423ddf
test eax eax
movsx eax [ esi ]
push eax
call sub_424f5c
pop ecx
cmp eax 0x78
jne r-xdata
mov eax [ ebp - 0x10 ]
mov cl [ esi ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
add esi 0x2
mov al [ esi ]
mov [ esi ] cl
mov cl al
mov al [ esi ]
inc esi
test al al
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_437b72
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
fldz
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_437b8c
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4238c0
inc eax
push eax
lea eax [ esi + edi ]
push esi
push eax
call sub_427f60
add esp 0x10
pop esi
sub_437bb4
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_43963f
add esp 0xc
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_428f46
int3
pop esi
retn
sub_437bde
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_439903
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
jmp r-xdata
mov ax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_437c21
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push esi
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_422ff5
mov eax [ ebp - 0x10 ]
xor esi esi
cmp [ eax + 0xa8 ] esi
jne r-xdata
call sub_428ca8
push 0x16
pop esi
mov [ eax ] esi
call sub_428f36
jmp r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
lea ecx [ ebp + 0xc ]
mov [ ebp + 0xc ] esi
push ecx
push esi
push edi
push ebx
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push esi
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
mov eax esi
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_428ca8
mov [ eax ] 0x2a
call sub_428ca8
mov esi [ eax ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_428ca8
push 0x22
pop esi
mov [ eax ] esi
call sub_428f36
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ eax ] ecx
jmp r-xdata
mov [ eax ] 0x1
jmp r-xdata
mov [ ebx ] al
push edi
push esi
push ebx
call sub_422f60
add esp 0xc
push edi
push esi
push ebx
call sub_422f60
add esp 0xc
sub_437d60
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x10 ]
push esi
mov esi [ ebx + 0xc ]
push edi
movzx ecx [ eax ]
mov [ ebp - 0x84 ] ecx
mov eax [ esi ]
dec eax
je r-xdata
push 0x8
dec eax
je r-xdata
mov ecx [ ebp - 0x84 ]
mov ecx [ ebx + 0x8 ]
cmp ecx 0x10
je r-xdata
push 0x4
jmp r-xdata
dec eax
je r-xdata
push [ esi ]
call sub_42cf86
pop ecx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x40 ]
fld [ esi + 0x10 ]
and eax 0xffffffe3
or eax 0x3
fstp [ ebp - 0x50 ]
mov [ ebp - 0x40 ] eax
cmp ecx 0x16
je r-xdata
pop edi
push ecx
lea eax [ esi + 0x18 ]
push eax
push edi
call sub_42ca52
add esp 0xc
test eax eax
jne r-xdata
push 0x11
jmp r-xdata
dec eax
je r-xdata
push esi
call sub_437bdb
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x1d
je r-xdata
push 0x12
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_42c776
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
and [ ebp - 0x40 ] 0xfffffffe
jmp r-xdata
dec eax
dec eax
je r-xdata
lea eax [ esi + 0x18 ]
push eax
lea eax [ esi + 0x8 ]
push eax
push ecx
push edi
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_42cc80
add esp 0x18
mov [ esi ] 0x1
jmp r-xdata
dec eax
jne r-xdata
push 0xffff
push ecx
call sub_42d0da
cmp [ esi ] 0x8
pop ecx
pop ecx
je r-xdata
push 0x10
jmp r-xdata
sub_437e7d
push ebp
mov ebp esp
sub esp 0x18
call sub_429fd9
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
or eax [ ebp + 0x20 ]
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
push r--data
push r--data
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x1c ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x18 ]
mov [ ebp - 0x18 ] 0x18
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call ecx
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_437f05
push 0x14
push r--data
call sub_428a80
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x20 ] ecx
xor eax eax
mov esi [ ebp + 0x18 ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
je r-xdata
call sub_428ca8
push 0x16
pop esi
mov [ eax ] esi
call sub_428f36
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] ecx
je r-xdata
call sub_428ac5
retn
mov [ ebp - 0x4 ] ecx
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x20 ]
push eax
call sub_437fce
add esp 0x1c
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_437fa2
test edi edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
mov eax edi
or [ esi ] 0xffffffff
sub_437fa2
cmp [ ebp - 0x20 ] 0x0
je r-xdata
retn
test edi edi
je r-xdata
push [ esi ]
call sub_42d72c
pop ecx
mov ecx [ esi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x4 ] 0xfe
sub_437fce
push ebp
mov ebp esp
sub esp 0x38
push ebx
xor ebx ebx
mov [ ebp - 0x38 ] 0xc
test [ ebp + 0x14 ] 0x80
push edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x34 ] ebx
je r-xdata
mov [ ebp - 0x30 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_428f46
int3
mov ecx [ ebp + 0x14 ]
mov eax 0x8000
test eax ecx
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_42465a
pop ecx
test eax eax
jne r-xdata
mov eax ecx
mov edx 0xc0000000
and eax 0x3
sub eax ebx
je r-xdata
test ecx 0x74000
jne r-xdata
mov edi 0x80000000
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0xc ] ebx
sub eax esi
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
sub eax esi
je r-xdata
mov edi 0x40000000
jmp r-xdata
test ecx 0x70000
je r-xdata
mov edi edx
jmp r-xdata
call sub_428c74
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
call sub_428ca8
push 0x16
pop ebx
mov [ eax ] ebx
call sub_428f36
mov eax ebx
jmp r-xdata
xor esi esi
inc esi
cmp eax 0x600
je r-xdata
push 0x3
test eax eax
je r-xdata
mov eax ecx
mov esi 0x400
and eax 0x700
cmp eax esi
jg r-xdata
mov [ ebp - 0xc ] edx
jmp r-xdata
sub eax esi
je r-xdata
mov [ ebp - 0x8 ] edi
mov edi edx
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
test cl 0x40
je r-xdata
mov eax [ rw-data ]
not eax
and eax [ ebp + 0x1c ]
test al al
mov eax ebx
js r-xdata
push 0x5
jmp r-xdata
cmp eax 0x700
je r-xdata
mov edx 0x80
mov eax ebx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x10 ] eax
test ecx 0x100
je r-xdata
cmp eax 0x100
je r-xdata
mov [ ebp - 0xc ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
mov eax [ ebp + 0x18 ]
push esi
push 0x10
pop esi
push 0x2
pop edx
mov [ ebp - 0x28 ] edx
sub eax esi
je r-xdata
test ecx 0x1000
je r-xdata
or edi 0x10000
mov eax 0x4000000
or [ ebp - 0xc ] 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] edi
xor edx edx
inc edx
mov [ ebp - 0x18 ] edx
pop esi
jmp r-xdata
call sub_428c74
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
call sub_428ca8
push 0x16
pop ebx
mov [ eax ] ebx
call sub_428f36
jmp r-xdata
push 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp edi 0x80000000
sete al
mov [ ebp - 0xc ] eax
jmp r-xdata
test ecx 0x2000
je r-xdata
or edx 0x100
mov [ ebp - 0x18 ] edx
mov eax ebx
jmp r-xdata
cmp eax 0x300
jne r-xdata
test cl 0x20
je r-xdata
or eax 0x2000000
mov [ ebp - 0x10 ] eax
pop esi
mov esi edx
jmp r-xdata
test cl 0x10
je r-xdata
or eax 0x8000000
jmp r-xdata
call sub_42d414
mov edi [ ebp + 0xc ]
mov [ edi ] eax
cmp eax 0xffffffff
jne r-xdata
or eax 0x10000000
mov [ ebp - 0x10 ] eax
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
push [ ebp - 0x18 ]
push esi
mov [ eax ] 0x1
lea eax [ ebp - 0x38 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x10 ]
call sub_437e7d
add esp 0x1c
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_428c74
mov [ eax ] ebx
or [ edi ] 0xffffffff
call sub_428ca8
mov [ eax ] 0x18
call sub_428ca8
mov eax [ eax ]
push eax
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx 0xc0000000
mov eax ecx
and eax edx
cmp eax edx
jne r-xdata
cmp eax 0x2
jne r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x4 ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_428c87
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x4 ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_428c87
test [ ebp + 0x14 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_428ca8
mov ebx [ eax ]
jmp r-xdata
call sub_428ca8
mov [ eax ] 0xd
jmp r-xdata
push [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
and ecx 0x7fffffff
push [ ebp - 0x18 ]
mov [ ebp - 0x8 ] ecx
push esi
push eax
push [ ebp - 0xc ]
push ecx
push [ ebp + 0x10 ]
call sub_437e7d
add esp 0x1c
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ edi ]
call sub_42d6aa
mov dl [ ebp - 0x1 ]
pop ecx
pop ecx
mov ecx [ edi ]
or dl 0x1
mov eax ecx
mov [ ebp - 0x1 ] dl
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] dl
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x24 ] 0x80
mov al dl
mov ecx [ ebp + 0x14 ]
and al 0x48
mov [ ebp - 0x3 ] al
jne r-xdata
or [ ebp - 0x1 ] 0x8
test dl dl
jns r-xdata
test dl dl
jns r-xdata
mov edx [ edi ]
mov eax edx
sar eax 0x5
and edx 0x1f
shl edx 0x6
mov ecx [ eax * 4 + rw-data ]
mov al [ ecx + edx + 0x24 ]
xor al [ ebp - 0x2 ]
and al 0x7f
xor [ ecx + edx + 0x24 ] al
mov esi [ edi ]
mov eax esi
mov ecx [ ebp + 0x14 ]
and esi 0x1f
sar eax 0x5
shl esi 0x6
shr ecx 0x10
shl cl 0x7
mov edx [ eax * 4 + rw-data ]
mov al [ edx + esi + 0x24 ]
and al 0x7f
or cl al
mov [ edx + esi + 0x24 ] cl
mov ecx [ ebp + 0x14 ]
cmp [ ebp - 0x3 ] bl
jne r-xdata
test ecx 0x74000
jne r-xdata
test cl 0x2
je r-xdata
mov esi [ ebp - 0x8 ]
mov edx 0xc0000000
mov eax esi
and eax edx
cmp eax edx
jne r-xdata
test cl 0x8
je r-xdata
mov eax ecx
and eax 0x74000
cmp eax 0x4000
je r-xdata
mov eax [ ebp - 0x20 ]
and eax 0x74000
jne r-xdata
push 0x2
push 0xffffffff
push 0xffffffff
push [ edi ]
call sub_431a41
mov ecx eax
mov [ ebp - 0x2c ] eax
and ecx edx
mov [ ebp - 0x14 ] edx
add esp 0x10
cmp ecx 0xffffffff
jne r-xdata
test cl 0x1
je r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
or [ eax + ecx + 0x4 ] 0x20
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or ecx eax
or ecx 0x4000
jmp r-xdata
push 0x1
lea eax [ ebp - 0x24 ]
mov [ ebp - 0x24 ] ebx
push eax
push [ edi ]
call sub_430fdb
add esp 0xc
test eax eax
jne r-xdata
call sub_428c74
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
and esi 0x7fffffff
push [ ebp - 0x18 ]
push 0x3
push eax
push [ ebp - 0xc ]
push esi
push [ ebp + 0x10 ]
call sub_437e7d
add esp 0x1c
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x14 ] ebx
test dl 0x40
jne r-xdata
mov eax ecx
and eax 0x301
cmp eax 0x301
jne r-xdata
cmp eax 0x14000
je r-xdata
mov [ ebp + 0x14 ] ecx
push ebx
push ebx
push ebx
push [ edi ]
call sub_431a41
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x24 ] 0x1a
jne r-xdata
mov dl [ ebp - 0x1 ]
mov ecx [ ebp + 0x14 ]
push [ edi ]
call sub_430c5d
jmp r-xdata
mov edx [ edi ]
mov ecx edx
sar ecx 0x5
and edx 0x1f
shl edx 0x6
mov ecx [ ecx * 4 + rw-data ]
mov [ edx + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_428c87
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x4 ] 0xfe
push [ edi ]
call sub_42d5bd
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test ecx 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
push [ ebp - 0x14 ]
push [ ebp - 0x2c ]
push [ edi ]
call sub_439922
add esp 0xc
cmp eax 0xffffffff
je r-xdata
pop ecx
test esi esi
je r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
push 0x2
pop ecx
cmp esi ecx
jbe r-xdata
push 0x3
lea eax [ ebp - 0x14 ]
push eax
push [ edi ]
call sub_430fdb
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
mov esi ebx
dec eax
je r-xdata
cmp esi 0x4
ja r-xdata
mov ecx [ ebp - 0x14 ]
push 0x2
pop edx
cmp eax edx
je r-xdata
test esi esi
je r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
push 0x3
pop ecx
mov [ ebp - 0x14 ] 0xbfbbef
mov [ ebp - 0x28 ] ecx
dec eax
jne r-xdata
cmp esi 0x5
je r-xdata
push ecx
push ebx
push ebx
push [ edi ]
call sub_431a41
add esp 0x10
or eax edx
je r-xdata
and ecx 0xffff
cmp ecx 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
push 0x2
pop ecx
cmp esi ecx
jbe r-xdata
mov ecx [ ebp - 0x28 ]
add esi eax
cmp ecx esi
jg r-xdata
mov [ ebp - 0x14 ] 0xfeff
jmp r-xdata
jmp r-xdata
push 0x2
pop ecx
push ebx
push ebx
push ebx
push [ edi ]
call sub_431a41
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
cmp ecx 0xfeff
jne r-xdata
push [ edi ]
call sub_430c5d
pop ecx
call sub_428ca8
push 0x16
pop ebx
mov [ eax ] ebx
jmp r-xdata
cmp ecx 0xbfbbef
jne r-xdata
cmp esi 0x4
jbe r-xdata
mov eax ecx
sub eax esi
push eax
lea eax [ ebp - 0x14 ]
add eax esi
push eax
push [ edi ]
call sub_42da06
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push ebx
push edx
push [ edi ]
call sub_431a41
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push ecx
push ebx
push ebx
push [ edi ]
call sub_431a41
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ edi ]
call sub_431a41
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_438740
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438760
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_42c776
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_4387a5
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4387a5
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_438760
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_438855
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_438874
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_438855
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_43888b
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_4238c0
pop ecx
mov edi eax
jmp r-xdata
call sub_439ad8
test eax eax
jne r-xdata
mov ecx [ esi ]
test ecx ecx
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push ecx
call sub_4238c0
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_439b67
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
inc eax
add eax edi
jmp r-xdata
pop edi
sub_43890f
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x80 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x68 ] eax
xor eax eax
push ebx
xor ebx ebx
inc eax
push esi
mov [ ebp - 0x6c ] eax
mov esi ebx
mov eax ebx
mov [ ebp - 0x70 ] ebx
push edi
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x54 ] ebx
cmp [ ebp + 0x24 ] eax
jne r-xdata
mov edx [ ebp + 0x10 ]
mov ecx edx
mov [ ebp - 0x50 ] ecx
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp cl 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_42c776
mov esp ebp
pop ebp
retn
mov cl [ edx ]
cmp cl 0x20
je r-xdata
cmp cl 0xa
je r-xdata
cmp cl 0xd
jne r-xdata
mov cl [ edx ]
inc edx
mov [ ebp - 0x55 ] cl
cmp eax 0xb
ja r-xdata
cmp eax 0xa
jne r-xdata
jmp [ eax * 4 + jump_table_439087 ]
jmp r-xdata
lea eax [ ecx - 0x31 ]
cmp al 0x8
ja r-xdata
xor eax eax
inc eax
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x31 ]
cmp al 0x8
jbe r-xdata
lea eax [ ecx - 0x31 ]
cmp al 0x8
jbe r-xdata
xor eax eax
inc eax
mov [ ebp - 0x60 ] eax
cmp cl 0x30
jl r-xdata
xor eax eax
inc eax
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x4c ]
test eax eax
jne r-xdata
xor eax eax
sub cl 0x30
inc eax
mov [ ebp - 0x5c ] eax
cmp cl 0x9
ja r-xdata
lea eax [ edx - 0x2 ]
mov [ ebp - 0x50 ] eax
lea eax [ ecx - 0x31 ]
cmp al 0x8
ja r-xdata
xor eax eax
inc eax
mov [ ebp - 0x64 ] eax
jmp r-xdata
lea eax [ ecx - 0x31 ]
cmp al 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] ebx
je r-xdata
xor eax eax
mov esi ebx
inc eax
mov [ ebp - 0x64 ] eax
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp cl [ eax ]
jne r-xdata
push 0x3
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp cl [ eax ]
jne r-xdata
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp cl [ eax ]
je r-xdata
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp cl [ eax ]
je r-xdata
mov eax [ ebp - 0x4c ]
mov esi [ ebp - 0x54 ]
cmp cl 0x30
cmp cl 0x30
jne r-xdata
mov edx [ ebp - 0x50 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax cl
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp cl 0x30
je r-xdata
cmp cl 0x30
jmp r-xdata
push 0xa
pop eax
dec edx
lea eax [ edx - 0x1 ]
mov [ ebp - 0x50 ] eax
movsx eax cl
sub eax 0x2b
je r-xdata
cmp cl 0x30
jge r-xdata
mov eax ebx
mov esi ebx
push 0x4
cmp eax 0x18
jbe r-xdata
movsx eax cl
sub eax 0x2b
je r-xdata
push 0x5
cmp cl 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp cl 0x30
je r-xdata
cmp cl 0x2b
je r-xdata
mov [ ebp - 0x54 ] esi
mov esi ebx
mov [ ebp - 0x4c ] eax
cmp eax 0x19
jae r-xdata
cmp cl 0x2b
je r-xdata
mov esi [ ebp - 0x54 ]
jl r-xdata
mov eax [ ebp - 0x54 ]
pop eax
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov cl [ edx ]
inc edx
sub cl 0x31
cmp cl 0x8
ja r-xdata
jne r-xdata
dec eax
dec eax
jne r-xdata
cmp cl 0x39
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x54 ]
mov al [ ebp - 0x9 ]
cmp al 0x5
jl r-xdata
push 0x2
pop eax
mov [ ebp - 0x70 ] ebx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp cl 0x2d
je r-xdata
pop eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp cl 0x2d
je r-xdata
inc esi
sub cl 0x30
inc eax
mov [ edi ] cl
inc edi
jmp r-xdata
cmp cl 0x2d
je r-xdata
mov [ ebp - 0x54 ] esi
mov esi ebx
mov [ ebp - 0x4c ] eax
cmp eax 0x19
jae r-xdata
mov cl [ edx ]
dec eax
inc edx
cmp cl 0x30
je r-xdata
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x4c ]
push 0x7
or ecx 0xffffffff
pop eax
mov [ ebp - 0x6c ] ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
or [ ebp - 0x6c ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
cmp cl 0x30
jge r-xdata
imul ecx esi 0xa
movsx esi [ ebp - 0x55 ]
add esi 0xffffffd0
add esi ecx
cmp esi 0x1450
jg r-xdata
mov ecx ebx
mov eax ebx
mov esi ebx
mov edx ebx
jmp r-xdata
dec edi
cmp [ edi ] bl
jne r-xdata
mov ecx [ ebp - 0x54 ]
dec edi
push 0x18
inc ecx
pop eax
mov [ ebp - 0x54 ] ecx
jmp r-xdata
inc al
mov [ ebp - 0x9 ] al
push 0x2
mov ecx 0x8000
pop eax
mov [ ebp - 0x70 ] ecx
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp cl 0x30
je r-xdata
jmp r-xdata
cmp cl 0x39
jg r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x30
jge r-xdata
cmp cl 0x43
jle r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x30
jge r-xdata
sub cl 0x30
inc eax
mov [ edi ] cl
inc edi
dec esi
cmp cl 0x39
jg r-xdata
mov cl [ ebp - 0x55 ]
mov esi 0x1451
jmp r-xdata
mov cl [ edx ]
inc edx
mov [ ebp - 0x55 ] cl
mov edi [ ebp - 0x80 ]
or eax [ ebp - 0x70 ]
mov [ edi + 0xa ] ax
mov eax ebx
mov [ edi ] cx
mov [ edi + 0x2 ] edx
mov [ edi + 0x6 ] esi
lea ecx [ ebp - 0x3c ]
push ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_436f36
mov ecx [ ebp - 0x6c ]
add esp 0xc
test ecx ecx
jns r-xdata
dec eax
inc ecx
dec edi
cmp [ edi ] bl
je r-xdata
test eax eax
je r-xdata
cmp cl 0x43
jle r-xdata
dec edx
jmp r-xdata
cmp cl 0x45
jle r-xdata
cmp cl 0x39
jg r-xdata
mov cl [ edx ]
inc edx
add esi [ ebp - 0x54 ]
mov eax [ ebp - 0x64 ]
test eax eax
jne r-xdata
neg esi
mov [ ebp - 0x54 ] ecx
cmp cl 0x45
jle r-xdata
mov ecx [ ebp - 0x68 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x60 ]
test ecx ecx
je r-xdata
push 0x6
jmp r-xdata
sub cl 0x64
cmp cl 0x1
jbe r-xdata
mov eax [ ebp - 0x5c ]
test eax eax
jne r-xdata
add esi [ ebp + 0x18 ]
sub cl 0x64
cmp cl 0x1
ja r-xdata
cmp esi 0x1450
jg r-xdata
sub esi [ ebp + 0x1c ]
mov eax 0x7fff
mov esi 0x80000000
push 0x2
jmp r-xdata
cmp esi 0xffffebb0
jl r-xdata
mov ecx ebx
mov edx ebx
pop ebx
xor edi edi
mov ecx ebx
mov eax ebx
mov esi ebx
mov edx ebx
lea ebx [ edi + 0x1 ]
jmp r-xdata
mov edx rw-data
sub edx 0x60
test esi esi
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x3a ]
mov esi [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jns r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edx rw-data
neg esi
sub edx 0x60
test esi esi
jne r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax esi
add edx 0x54
sar esi 0x3
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x4c ] esi
and eax 0x7
je r-xdata
imul ecx eax 0xc
mov eax 0x8000
add ecx edx
mov [ ebp - 0x50 ] ecx
cmp [ ecx ] ax
jb r-xdata
movzx edi [ ecx + 0xa ]
mov edx [ ebp - 0x32 ]
mov eax edi
xor eax edx
mov [ ebp - 0x7c ] ebx
and eax 0x8000
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x60 ] eax
mov eax 0x7fff
and edx eax
mov [ ebp - 0x28 ] ebx
and edi eax
mov [ ebp - 0x24 ] ebx
lea eax [ edi + edx ]
movzx esi ax
mov eax 0x7fff
mov [ ebp - 0x6c ] esi
cmp dx ax
jae r-xdata
mov esi ecx
lea edi [ ebp - 0x48 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x50 ] ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
xor eax eax
cmp [ ebp - 0x60 ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x34 ] eax
cmp di ax
jae r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
test dx dx
jne r-xdata
mov [ ebp - 0x34 ] ebx
jmp r-xdata
test di di
jne r-xdata
inc esi
test [ ebp - 0x34 ] 0x7fffffff
mov [ ebp - 0x6c ] esi
jne r-xdata
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x3c ] ebx
push 0x5
mov eax ebx
lea edx [ ebp - 0x28 ]
pop edi
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x68 ] edi
inc esi
test [ ecx + 0x8 ] 0x7fffffff
mov [ ebp - 0x6c ] esi
jne r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
add edx 0x2
inc eax
dec edi
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x68 ] edi
test edi edi
jg r-xdata
lea esi [ ebp - 0x3c ]
lea esi [ esi + eax * 2 ]
lea eax [ ecx + 0x8 ]
mov [ ebp - 0x64 ] eax
cmp [ ecx + 0x4 ] ebx
jne r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov [ ebp - 0x5c ] edi
test edi edi
jle r-xdata
mov esi [ ebp - 0x6c ]
mov edx [ ebp - 0x24 ]
add esi 0xc002
mov edi [ ebp - 0x2c ]
mov [ ebp - 0x50 ] edx
test si si
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp ecx [ ebp - 0x5c ]
jae r-xdata
cmp [ ecx ] ebx
je r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
mov eax 0xffff
add esi eax
test si si
jns r-xdata
test edx edx
js r-xdata
mov [ edx - 0x4 ] ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x78 ]
mov edx [ ebp - 0x54 ]
mov ax [ ebp - 0x2c ]
mov ebx [ ebp - 0x7c ]
mov eax esi
neg eax
movzx eax ax
mov [ ebp - 0x68 ] eax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0x28 ]
mov edx edi
shr edx 0x1f
mov ecx eax
add eax eax
shr ecx 0x1f
or eax edx
add edi edi
mov edx [ ebp - 0x50 ]
mov [ ebp - 0x28 ] eax
add edx edx
mov eax 0xffff
mov [ ebp - 0x2c ] edi
or edx ecx
add esi eax
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x24 ] edx
test si si
jg r-xdata
sub [ ebp - 0x64 ] 0x2
add esi 0x2
dec edi
test edi edi
jg r-xdata
inc [ edx ]
mov eax [ ebp - 0x2a ]
cmp eax 0xffffffff
jne r-xdata
and edi 0x1ffff
cmp edi 0x18000
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov eax edx
shl eax 0x1f
mov [ ebp - 0x50 ] ecx
shr [ ebp - 0x50 ] 0x1
or [ ebp - 0x50 ] eax
mov eax [ ebp - 0x50 ]
shl ecx 0x1f
shr edi 0x1
shr edx 0x1
or edi ecx
dec [ ebp - 0x68 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2c ] edi
jne r-xdata
inc ebx
movzx eax [ esi ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x5c ]
mov [ ebp - 0x78 ] ebx
movzx eax [ eax ]
imul ecx eax
mov [ ebp - 0x5c ] ecx
add ecx [ edx - 0x4 ]
cmp ecx [ edx - 0x4 ]
jb r-xdata
mov ecx [ ebp - 0x50 ]
mov edi [ ebp - 0x68 ]
mov eax [ ebp - 0x74 ]
inc eax
mov [ ebp - 0x2a ] eax
mov eax [ ebp - 0x26 ]
mov [ ebp - 0x2a ] ebx
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x50 ]
test [ ebp - 0x2c ] 0x1
je r-xdata
push 0x0
test ebx ebx
mov [ ebp - 0x50 ] edx
pop ebx
je r-xdata
mov ax [ ebp - 0x2a ]
or esi [ ebp - 0x60 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov [ ebp - 0x36 ] ecx
mov [ ebp - 0x32 ] si
jmp r-xdata
xor eax eax
mov [ ebp - 0x38 ] ebx
cmp [ ebp - 0x60 ] ax
mov [ ebp - 0x3c ] ebx
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x34 ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x26 ] eax
mov ax [ ebp - 0x22 ]
mov ecx 0xffff
mov [ ebp - 0x26 ] ebx
cmp ax cx
jne r-xdata
mov ax di
xor edi edi
inc edi
or ax di
mov [ ebp - 0x2c ] ax
mov edi [ ebp - 0x2c ]
jmp r-xdata
mov esi [ ebp - 0x4c ]
mov edx [ ebp - 0x54 ]
mov eax 0x7fff
cmp si ax
jb r-xdata
inc ax
mov [ ebp - 0x22 ] ax
jmp r-xdata
mov [ ebp - 0x22 ] dx
inc esi
jmp r-xdata
mov edx 0x8000
cmp ax dx
ja r-xdata
mov ecx [ ebp - 0x24 ]
jmp r-xdata
sub_4390b7
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call sub_424856
pop ecx
mov ecx [ esi + 0xc ]
mov edi eax
test cl 0x82
jne r-xdata
test cl 0x40
je r-xdata
call sub_428ca8
mov [ eax ] 0x9
push ebx
xor ebx ebx
test cl 0x1
je r-xdata
call sub_428ca8
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
mov [ esi + 0x4 ] ebx
or eax 0x2
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test cl 0x10
je r-xdata
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
test [ esi + 0xc ] 0x108
je r-xdata
call sub_426d88
add eax 0x20
cmp esi eax
je r-xdata
or ecx 0x20
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
and ecx 0xfffffffe
mov [ esi ] eax
mov [ esi + 0xc ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push 0x2
push eax
push edi
mov [ ebp + 0xc ] 0x2
call sub_42da06
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov ebx eax
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
sub ecx edx
mov [ ebp + 0xc ] ecx
lea eax [ edx + 0x2 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
sub eax 0x2
mov [ esi + 0x4 ] eax
test ecx ecx
jle r-xdata
push edi
call sub_435deb
pop ecx
test eax eax
jne r-xdata
call sub_426d88
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
movzx eax cx
or [ esi + 0xc ] 0x20
cmp edi 0xffffffff
je r-xdata
push ecx
push edx
push edi
call sub_42da06
add esp 0xc
mov ebx eax
jmp r-xdata
push esi
call sub_436164
pop ecx
pop ebx
mov ecx rw-data
cmp edi 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] cx
jmp r-xdata
push 0x2
push ebx
push ebx
push edi
call sub_431945
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax edi
mov ecx edi
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
test [ ecx + 0x4 ] 0x20
je r-xdata
sub_439220
push ebp
mov ebp esp
push edi
cmp [ rw-data ] 0x1
jb r-xdata
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov edi [ ebp + 0x8 ]
ja r-xdata
mov eax edi
xor eax eax
jmp r-xdata
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
movzx edx [ ebp + 0xc ]
mov eax edx
shl edx 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov ecx 0xf
and ecx edi
or eax 0xffffffff
shl eax cl
sub edi ecx
xor edx edx
cld
pop edi
leave
retn
mov eax 0xfffffff0
and eax edi
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax ]
mov ecx 0xf
and ecx edi
mov edx 0xffffffff
shl edx cl
pmovmskb edi xmm0
and edi edx
jne r-xdata
xor eax eax
test edi 0xf
je r-xdata
push ebx
pmovmskb ebx xmm1
and ebx eax
shl ecx 0x1
xor eax eax
sub eax ecx
and ecx eax
dec ecx
and ecx ebx
pop ebx
bsr eax ecx
add eax edi
test ecx ecx
cmove eax edx
pop edi
leave
retn
pmovmskb ecx xmm1
and ecx eax
bsr eax ecx
add eax edi
test ecx ecx
cmovne edx eax
or eax 0xffffffff
add edi 0x10
jmp r-xdata
bsf edx edi
add eax edx
jmp r-xdata
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax + 0x10 ]
add eax 0x10
pmovmskb edi xmm0
test edi edi
je r-xdata
movd xmm0 edx
movzx ecx [ edi ]
cmp ecx edx
cmove eax edi
test ecx ecx
je r-xdata
movdqu xmm1 [ edi ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
pop edi
leave
retn
add edi 0x10
pcmpistri xmm0 [ edi - 0x10 ] 0x40
lea ecx [ edi + ecx - 0x10 ]
cmovb eax ecx
jne r-xdata
inc edi
test edi 0xf
jne r-xdata
sub_439357
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ edx + 0xc ]
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_428ca8
push 0x16
mov ecx [ ebp + 0x10 ]
mov [ esi ] 0x0
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebp
retn
xor eax eax
mov eax ecx
jmp r-xdata
mov [ esi ] 0x30
push ebx
lea ebx [ esi + 0x1 ]
mov eax ebx
test ecx ecx
jle r-xdata
call sub_428ca8
push 0x22
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov [ eax ] 0x0
test ecx ecx
js r-xdata
mov dl [ edi ]
test dl dl
je r-xdata
pop esi
mov [ eax ] esi
call sub_428f36
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop edx
movsx edx dl
inc edi
jmp r-xdata
push ebx
call sub_4238c0
inc eax
push eax
push ebx
push esi
call sub_427f60
add esp 0x10
inc [ edx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ eax ] dl
inc eax
dec ecx
test ecx ecx
jg r-xdata
xor eax eax
pop ebx
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_439407
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
movzx edi [ eax + 0x6 ]
mov ebx 0x80000000
mov edx [ eax + 0x4 ]
mov ecx edi
mov eax [ eax ]
and edi 0x8000
shr ecx 0x4
and edx 0xfffff
and ecx 0x7ff
mov [ ebp - 0x8 ] edi
mov esi ecx
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
test edx edx
jne r-xdata
cmp esi 0x7ff
je r-xdata
lea eax [ ecx + 0x3c01 ]
xor ebx ebx
test eax eax
jne r-xdata
mov eax 0x7fff
jmp r-xdata
lea eax [ ecx + 0x3c00 ]
jmp r-xdata
or edi eax
mov [ ebx + 0x8 ] di
mov edi eax
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] edx
and [ eax ] edx
mov [ eax + 0x8 ] di
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov esi ecx
shr esi 0x15
shl edx 0xb
or esi edx
shl ecx 0xb
or esi ebx
mov [ ebp + 0xc ] eax
mov ebx [ ebp + 0x8 ]
mov [ ebx + 0x4 ] esi
mov [ ebx ] ecx
test esi esi
js r-xdata
movzx eax ax
mov edx [ ebx ]
add esi esi
mov ecx edx
add edi 0xffff
shr ecx 0x1f
or esi ecx
lea eax [ edx + edx ]
mov [ ebx ] eax
jns r-xdata
mov [ ebp + 0xc ] edi
mov edi [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebx + 0x4 ] esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4394cf
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_439407
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_439c35
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_434732
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_428f46
int3
mov ecx [ ebp - 0x4 ]
mov eax ebx
pop edi
mov [ ebx + 0xc ] esi
xor ecx ebp
pop esi
pop ebx
call sub_42c776
mov esp ebp
pop ebp
retn
sub_439560
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_43963f
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
and ecx 0xfff7ffff
and eax ecx
push esi
mov esi [ ebp + 0x8 ]
test eax 0xfcf0fce0
je r-xdata
push ecx
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_43a6b2
call sub_43a6b2
mov [ esi ] eax
jmp r-xdata
call sub_428ca8
push 0x16
pop esi
mov [ eax ] esi
call sub_428f36
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_43a6b2
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_43969c
push ebp
mov ebp esp
sub esp 0x24
lea ecx [ ebp - 0x24 ]
push [ ebp + 0x8 ]
call sub_422ff5
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
jmp r-xdata
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
xor ebx ebx
mov edi [ ebp - 0x24 ]
lea esi [ eax + 0x1 ]
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov bl [ eax ]
cmp edi 0x2
jl r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ edi + 0x90 ]
movzx ecx bl
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x24 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_42bdcc
mov edi [ ebp - 0x24 ]
add esp 0xc
jmp r-xdata
cmp edi 0x24
jle r-xdata
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1 ] bl
cmp bl 0x2d
jne r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
je r-xdata
or eax 0x2
cmp [ edi + 0x74 ] 0x1
jle r-xdata
mov cl [ esi ]
inc esi
mov [ ebp - 0x1 ] cl
jmp r-xdata
mov cl [ ebp - 0x1 ]
mov edi [ ebp + 0x14 ]
mov ebx [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
test edi edi
js r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp edi 0x1
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
cmp edi 0x24
jg r-xdata
test edi edi
jne r-xdata
cmp edi 0x10
jne r-xdata
cmp cl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div edi
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x90 ]
mov [ ebp - 0x14 ] eax
cmp cl 0x30
jne r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
push 0xa
and eax 0x103
je r-xdata
movsx eax [ ebp - 0x1 ]
sub eax 0x30
jmp r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
push 0x10
pop edi
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x10 ]
mov cl [ ebp - 0x1 ]
lea eax [ ecx - 0x61 ]
cmp al 0x19
movsx eax cl
ja r-xdata
cmp eax edi
jae r-xdata
mov cl [ esi + 0x1 ]
add esi 0x2
mov [ ebp - 0x1 ] cl
cmp al 0x58
jne r-xdata
push 0x8
jmp r-xdata
mov edi 0x7fffffff
test dl 0x4
jne r-xdata
test eax eax
je r-xdata
add eax 0xffffffc9
sub eax 0x20
mov ecx [ ebp - 0xc ]
or edx 0x8
cmp ebx ecx
jb r-xdata
pop edi
jmp r-xdata
call sub_428ca8
mov edx [ ebp - 0x8 ]
mov [ eax ] 0x22
test dl 0x1
je r-xdata
test dl 0x1
jne r-xdata
xor ebx ebx
jmp r-xdata
mov esi [ ebp + 0xc ]
imul ebx edi
add ebx eax
jne r-xdata
test dl 0x2
push 0x0
pop ebx
setne bl
add ebx edi
or ebx 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax edx
and eax 0x2
je r-xdata
movzx ecx cl
movzx eax [ eax + ecx * 2 ]
mov ecx eax
and ecx 0x4
je r-xdata
mov eax [ ebp + 0x10 ]
or edx 0x4
test eax eax
je r-xdata
cmp eax [ ebp - 0x10 ]
jbe r-xdata
test dl 0x2
je r-xdata
mov [ eax ] esi
test eax eax
jne r-xdata
cmp ebx 0x80000000
ja r-xdata
dec esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x8 ] edx
test dl 0x8
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
neg ebx
jmp r-xdata
cmp ebx edi
jbe r-xdata
mov cl [ esi ]
inc esi
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1 ] cl
jmp r-xdata
sub_4398c2
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rw-data
jmp r-xdata
call sub_43969c
add esp 0x14
pop ebp
retn
sub_439922
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push 0x1
push esi
push esi
push edi
mov ebx esi
mov [ ebp - 0x8 ] esi
call sub_431a41
mov ecx edx
mov [ ebp - 0x18 ] eax
and eax ecx
mov [ ebp - 0x14 ] ecx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
call sub_428ca8
mov eax [ eax ]
push 0x2
push esi
push esi
push edi
call sub_431a41
mov ecx eax
add esp 0x10
and eax edx
cmp eax 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
sub esi ecx
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
test eax eax
jg r-xdata
jg r-xdata
push 0x0
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push edi
call sub_431a41
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
push 0x1000
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_431a41
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test esi esi
jae r-xdata
push 0x8000
push edi
call sub_424789
pop ecx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_428ca8
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
call sub_42d643
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov ebx eax
mov eax edx
mov ecx ebx
mov [ ebp - 0x8 ] eax
and ecx eax
cmp ecx 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_428ca8
mov [ eax ] 0xd
call sub_428c74
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
call sub_428c74
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
mov eax [ ebp - 0x4 ]
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
mov eax 0x1000
jmp r-xdata
cmp esi 0x1000
jb r-xdata
or ebx 0xffffffff
or [ ebp - 0x8 ] ebx
call sub_428ca8
mov [ eax ] 0xd
push [ ebp - 0x10 ]
push edi
call sub_424789
pop ecx
pop ecx
push [ ebp - 0xc ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
jg r-xdata
push eax
push [ ebp - 0xc ]
push edi
call sub_42daf5
add esp 0xc
cmp eax 0xffffffff
je r-xdata
and ebx [ ebp - 0x8 ]
cmp ebx 0xffffffff
je r-xdata
test eax eax
jl r-xdata
test esi esi
je r-xdata
jmp r-xdata
sub_439ad8
push ebp
mov ebp esp
push ecx
push esi
mov esi [ rw-data ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push 0xffffffff
push eax
push edi
push edi
call [ WideCharToMultiByte@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
or eax 0xffffffff
jmp r-xdata
push 0x1
push edi
call sub_428955
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x0
push edi
push eax
push 0xffffffff
push [ esi ]
xor edi edi
push edi
push edi
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_422ed5
pop ecx
lea eax [ ebp - 0x4 ]
push edi
push eax
call sub_43aa4b
pop ecx
pop ecx
test eax eax
jns r-xdata
add esi 0x4
cmp [ ebp - 0x4 ] edi
je r-xdata
push [ ebp - 0x4 ]
call sub_422ed5
pop ecx
mov [ ebp - 0x4 ] edi
sub_439b7f
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push esi
push edi
push [ ebp + 0x14 ]
call sub_422ff5
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor esi esi
jmp r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
mov esi 0x7fffffff
jmp r-xdata
mov edx [ ebp + 0xc ]
test edx edx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esi 0x7fffffff
cmp eax esi
jbe r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov edi [ ebp - 0xc ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
jmp r-xdata
push [ edi + 0x4 ]
push eax
push edx
push eax
push ecx
push 0x1001
push [ edi + 0x21c ]
lea eax [ ebp - 0x10 ]
push eax
call sub_43b0b7
add esp 0x20
test eax eax
je r-xdata
push [ ebp + 0x14 ]
push eax
push edx
push ecx
call sub_43ad4e
add esp 0x10
mov esi eax
jmp r-xdata
lea esi [ eax - 0x2 ]
sub_439c35
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx edx [ ebp + 0x10 ]
xor ecx ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov eax 0x7fff
push esi
mov esi 0x8000
mov [ ebp - 0x74 ] ebx
and edx esi
mov [ ebp - 0x30 ] 0xcccccccc
movzx esi [ ebp + 0x10 ]
inc ecx
and esi eax
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x80 ] edx
mov [ ebp - 0x64 ] eax
push edi
test dx dx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp si ax
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp + 0xc ]
test si si
jne r-xdata
movzx edx si
mov ecx edi
shr ecx 0x18
mov eax edx
shr eax 0x8
xor ebx ebx
mov [ ebp - 0x1a ] edi
mov edi rw-data
sub edi 0x60
mov [ ebp - 0x16 ] si
mov [ ebp - 0x58 ] 0x5
lea eax [ eax + ecx * 2 ]
mov [ ebp - 0x70 ] 0xbffd
imul ecx eax 0x4d
imul eax edx 0x4d10
mov [ ebp - 0x54 ] 0x3fbf
add eax 0xecbced0c
add eax ecx
sar eax 0x10
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1e ] eax
xor eax eax
mov [ ebp - 0x20 ] ax
movsx eax cx
neg eax
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov edx 0x80000000
mov [ ebx ] cx
mov ecx [ ebp + 0x8 ]
cmp eax edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov edx [ ebp - 0x1c ]
mov esi [ ebp - 0x20 ]
jns r-xdata
test eax 0x40000000
jne r-xdata
test ecx ecx
je r-xdata
xor eax eax
mov [ ebx + 0x3 ] cl
mov [ ebx ] ax
mov eax 0x8000
cmp dx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov eax ecx
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
test [ ebp + 0x18 ] 0x1
mov ecx [ ebp - 0x74 ]
mov eax [ ebp - 0x48 ]
mov edi [ ebp + 0x14 ]
mov [ ecx ] ax
je r-xdata
inc ecx
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x48 ] ecx
mov ecx eax
mov eax [ ebp - 0x26 ]
mov edi eax
xor edi ecx
mov [ ebp - 0x10 ] ebx
and edi 0x8000
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x44 ] edi
mov edi 0x7fff
and eax edi
mov [ ebp - 0x8 ] ebx
and ecx edi
mov [ ebp - 0x7c ] eax
add eax ecx
movzx edi ax
mov eax 0x7fff
mov [ ebp - 0x4c ] edi
cmp cx ax
jae r-xdata
je r-xdata
neg eax
mov edi rw-data
sub edi 0x60
mov [ ebp - 0x44 ] eax
test eax eax
cmp [ ebp - 0x80 ] 0x0
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_42c776
mov esp ebp
pop ebp
retn
mov [ ebp - 0x48 ] edi
cwde
add edi eax
mov [ ebp - 0x48 ] edi
test edi edi
jg r-xdata
xor eax eax
cmp [ ebp - 0x44 ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x7c ]
cmp ax [ ebp - 0x64 ]
jae r-xdata
mov esi [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x40 ] esi
cmp eax edx
jne r-xdata
cmp eax 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_434732
add esp 0xc
test eax eax
jne r-xdata
mov edi [ ebp - 0x18 ]
shr edi 0x10
sub edi 0x3ffe
xor eax eax
push 0x8
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x16 ] ax
mov ebx [ ebp - 0x18 ]
pop edi
mov [ ebp - 0x48 ] eax
push 0x15
pop eax
cmp edi eax
jle r-xdata
xor eax eax
mov [ ecx ] ax
mov eax 0x8000
cmp [ ebp - 0x80 ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ecx + 0x2 ] al
xor eax eax
inc eax
mov [ ecx + 0x3 ] al
mov [ ecx + 0x4 ] 0x30
cmp di [ ebp - 0x70 ]
ja r-xdata
mov eax [ ebp - 0x44 ]
test eax eax
jne r-xdata
imul ecx eax 0xc
mov eax 0x8000
add ecx edi
mov [ ebp - 0x68 ] ecx
cmp [ ecx ] ax
jb r-xdata
push r--data
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_428f46
int3
mov [ ebx + 0x3 ] 0x6
mov ecx edx
mov eax esi
shr eax 0x1f
add edx edx
shr ecx 0x1f
add ebx ebx
add esi esi
or ebx ecx
or edx eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x18 ] ebx
dec edi
jne r-xdata
mov edi [ ebp - 0x64 ]
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x40 ] esi
push 0x0
pop ebx
test edi edi
jns r-xdata
cmp di [ ebp - 0x54 ]
ja r-xdata
sar [ ebp - 0x44 ] 0x3
add edi 0x54
mov [ ebp - 0x6c ] edi
and eax 0x7
je r-xdata
mov ecx [ ebp - 0x48 ]
jmp r-xdata
movzx edi [ ecx + 0xa ]
mov esi 0x8000
mov eax [ ebp - 0x16 ]
mov [ ebp - 0x5c ] edi
and edi 0x7fff
xor [ ebp - 0x5c ] eax
and eax 0x7fff
and [ ebp - 0x5c ] esi
mov [ ebp - 0x50 ] eax
add eax edi
mov [ ebp - 0x60 ] edi
dec esi
movzx edi ax
mov eax [ ebp - 0x50 ]
cmp ax si
mov esi [ ebp - 0x40 ]
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4c ] edi
jae r-xdata
mov esi ecx
lea edi [ ebp - 0x3c ]
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x68 ] ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
push r--data
push r--data
jmp r-xdata
mov esi [ ebp - 0x74 ]
mov eax [ ebp - 0x48 ]
inc eax
mov [ ebp - 0x54 ] eax
lea edi [ esi + 0x4 ]
mov [ ebp - 0x64 ] edi
mov ecx edi
mov [ ebp - 0x58 ] ecx
test eax eax
jle r-xdata
neg edi
and edi 0xff
jle r-xdata
test cx cx
jne r-xdata
mov [ ebp - 0x18 ] ebx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov edi 0x3fff
shr eax 0x10
cmp ax di
jb r-xdata
xor eax eax
cmp [ ebp - 0x5c ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
mov ecx 0x7fff
cmp [ ebp - 0x60 ] cx
mov ecx [ ebp - 0x68 ]
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_434732
add esp 0xc
test eax eax
jne r-xdata
mov al [ ecx - 0x1 ]
sub ecx 0x2
cmp al 0x35
jl r-xdata
lea esi [ ebp - 0x20 ]
mov ecx edx
lea edi [ ebp - 0x3c ]
shr ecx 0x1f
movsd [ edi ] [ esi ]
add edx edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ ebp - 0x40 ]
mov eax edi
shr eax 0x1f
add edi edi
or edx eax
mov eax [ ebp - 0x44 ]
lea esi [ eax + eax ]
mov eax edi
or esi ecx
shr eax 0x1f
mov ecx edx
add edi edi
add edx edx
shr ecx 0x1f
or edx eax
add esi esi
mov eax [ ebp - 0x3c ]
or esi ecx
lea ecx [ eax + edi ]
mov [ ebp - 0x48 ] ecx
cmp ecx edi
jb r-xdata
mov ebx [ ebp - 0x44 ]
test ax ax
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
mov esi ebx
mov edx ebx
cmp di [ ebp - 0x70 ]
ja r-xdata
xor eax eax
jmp r-xdata
cmp ecx edi
jae r-xdata
jmp r-xdata
lea eax [ edx + 0x1 ]
mov ecx ebx
cmp eax edx
jb r-xdata
cmp ecx eax
jae r-xdata
mov ecx edx
shr esi 0x1
mov eax ebx
shl ecx 0x1f
shl eax 0x1f
or esi ecx
shr edx 0x1
shr ebx 0x1
or edx eax
dec edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x20 ] esi
test edi edi
jg r-xdata
mov [ ebp - 0x44 ] ebx
xor ebx ebx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x40 ] esi
mov edx ebx
lea ecx [ ebp - 0xc ]
push 0x5
mov [ ebp - 0x50 ] edx
pop eax
inc edi
test [ ebp - 0x28 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
test edx edx
jne r-xdata
cmp di [ ebp - 0x54 ]
ja r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp ecx edi
jae r-xdata
cmp ecx edi
jae r-xdata
xor ecx ecx
inc ecx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edi [ eax + edx ]
cmp edi edx
jb r-xdata
add ecx 0x2
inc edx
dec eax
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x58 ] eax
test eax eax
jg r-xdata
lea edi [ ebp - 0x20 ]
lea eax [ ebp - 0x28 ]
lea edi [ edi + edx * 2 ]
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x54 ] edi
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
test esi esi
jne r-xdata
test ax ax
jne r-xdata
mov [ ebp - 0x18 ] ebx
jmp r-xdata
dec ecx
mov eax [ ebp - 0x74 ]
sub cl al
sub cl 0x3
mov [ eax + 0x3 ] cl
movsx ecx cl
mov [ ecx + eax + 0x4 ] bl
xor eax eax
inc eax
mov ecx [ ebp - 0x74 ]
xor eax eax
mov [ ecx ] ax
mov eax 0x8000
cmp [ ebp - 0x80 ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ecx + 0x2 ] al
xor eax eax
inc eax
mov [ ecx + 0x3 ] al
mov [ edi ] 0x30
jmp r-xdata
cmp [ ecx ] 0x39
jne r-xdata
cmp ecx edi
jae r-xdata
inc esi
test ecx ecx
mov edx eax
mov ecx [ ebp - 0x48 ]
je r-xdata
inc esi
cmp edi eax
jae r-xdata
mov esi eax
test eax eax
jle r-xdata
mov edi [ ebp - 0x4c ]
mov esi [ ebp - 0x8 ]
add edi 0xc002
test di di
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp edi edx
jae r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
mov esi ebx
mov edx ebx
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] edx
mov [ ecx + 0x5 ] bl
jmp r-xdata
mov [ ecx ] 0x30
dec ecx
inc [ ecx ]
inc ecx
inc [ esi ]
mov esi [ ebp - 0x74 ]
mov edi [ ebp - 0x64 ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
add esi [ ebp - 0x34 ]
mov eax ecx
mov edx [ ebp - 0x48 ]
mov ecx edi
add edx edx
shr eax 0x1f
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x20 ] edx
lea edx [ edi + edi ]
or edx eax
shr ecx 0x1f
lea eax [ esi + esi ]
mov [ ebp - 0x1c ] edx
or eax ecx
mov ecx [ ebp - 0x58 ]
mov [ ebp - 0x18 ] eax
shr eax 0x18
add al 0x30
mov [ ebp - 0x15 ] bl
mov [ ecx ] al
inc ecx
mov eax [ ebp - 0x54 ]
dec eax
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x54 ] eax
test eax eax
jle r-xdata
mov edx [ ebp - 0x10 ]
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x68 ] ebx
mov [ ecx - 0x4 ] edi
test eax eax
je r-xdata
mov eax [ ebp - 0x64 ]
push 0x5
mov eax ebx
lea edx [ ebp - 0xc ]
pop esi
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x50 ] esi
inc edi
test [ ecx + 0x8 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
test edx edx
jne r-xdata
mov cx [ ebp - 0x10 ]
mov eax edi
neg eax
movzx eax ax
add edi eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x4c ] edi
mov edi [ ebp - 0x78 ]
mov [ ebp - 0x68 ] ebx
mov edx [ ebp - 0x68 ]
push 0x0
pop ebx
test di di
jle r-xdata
mov eax [ ebp - 0xc ]
mov edx ebx
mov ecx eax
shr edx 0x1f
add eax eax
shr ecx 0x1f
or eax edx
add esi esi
mov [ ebp - 0xc ] eax
add ebx ebx
mov eax 0xffff
mov [ ebp - 0x10 ] ebx
or esi ecx
add edi eax
mov [ ebp - 0x8 ] esi
test di di
jg r-xdata
mov edi [ ebp - 0x54 ]
mov eax [ ebp - 0x70 ]
add edi 0x2
sub eax 0x2
mov [ ebp - 0x54 ] edi
dec esi
mov [ ebp - 0x70 ] eax
test esi esi
jg r-xdata
inc [ ecx ]
add edx 0x2
inc eax
dec esi
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x50 ] esi
test esi esi
jg r-xdata
lea esi [ ebp - 0x20 ]
lea eax [ esi + eax * 2 ]
lea esi [ ecx + 0x8 ]
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x40 ] esi
mov esi [ ebp - 0x60 ]
mov ecx [ ebp - 0x40 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0xe ]
cmp eax 0xffffffff
jne r-xdata
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov ebx [ ebp - 0xc ]
mov eax esi
mov ecx ebx
shl eax 0x1f
shl ecx 0x1f
shr ebx 0x1
shr edx 0x1
or ebx eax
or edx ecx
shr esi 0x1
dec [ ebp - 0x58 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] edx
jne r-xdata
inc edi
mov eax 0xffff
add edi eax
test di di
jns r-xdata
test esi esi
js r-xdata
movzx edx [ eax ]
movzx eax [ edi ]
imul edx eax
mov eax [ ecx - 0x4 ]
mov [ ebp - 0x64 ] ebx
lea edi [ eax + edx ]
cmp edi eax
jb r-xdata
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x60 ] esi
test esi esi
jle r-xdata
mov edi [ ebp - 0x4c ]
mov eax [ ebp - 0x8 ]
add edi 0xc002
mov esi [ ebp - 0x10 ]
mov [ ebp - 0x40 ] eax
test di di
jle r-xdata
xor ecx ecx
inc ecx
jmp r-xdata
cmp eax edi
jae r-xdata
cmp [ ecx ] ebx
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc eax
mov [ ebp - 0xe ] eax
mov eax [ ebp - 0xa ]
mov [ ebp - 0xe ] ebx
cmp eax 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
push 0x0
test edi edi
mov [ ebp - 0x8 ] esi
mov edi [ ebp - 0x4c ]
pop ebx
je r-xdata
mov eax 0xffff
add edi eax
test di di
jns r-xdata
test eax eax
js r-xdata
mov [ edx - 0x4 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x78 ]
mov edi [ ebp - 0x6c ]
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov [ ebp - 0x1a ] esi
mov edx [ ebp - 0x1c ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x16 ] di
jmp r-xdata
inc eax
mov [ ebp - 0xa ] eax
mov ax [ ebp - 0x6 ]
mov ecx 0xffff
mov [ ebp - 0xa ] ebx
cmp ax cx
jne r-xdata
xor eax eax
mov cx dx
inc eax
or cx ax
mov [ ebp - 0x10 ] cx
mov edx [ ebp - 0x10 ]
jmp r-xdata
mov ax [ ebp - 0x10 ]
mov ebx [ ebp - 0x40 ]
mov eax edi
neg eax
xor edx edx
movzx eax ax
add edi eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4c ] edi
inc edx
mov edi [ ebp - 0x7c ]
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov edx esi
mov ecx eax
shr edx 0x1f
add eax eax
shr ecx 0x1f
or eax edx
add esi esi
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x10 ] esi
or eax ecx
mov ecx 0xffff
add edi ecx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x88 ]
mov ecx [ ebp - 0x40 ]
add eax 0x2
sub ecx 0x2
mov [ ebp - 0x88 ] eax
dec esi
mov [ ebp - 0x40 ] ecx
test esi esi
jg r-xdata
inc [ edx ]
inc ax
mov [ ebp - 0x6 ] ax
jmp r-xdata
mov eax 0x8000
inc edi
mov [ ebp - 0x6 ] ax
jmp r-xdata
mov eax 0x8000
cmp cx ax
ja r-xdata
mov eax [ ebp - 0xe ]
cmp eax 0xffffffff
jne r-xdata
and esi 0x1ffff
cmp esi 0x18000
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax ebx
shl eax 0x1f
mov [ ebp - 0x40 ] ecx
shr [ ebp - 0x40 ] 0x1
or [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
shl ecx 0x1f
shr esi 0x1
shr ebx 0x1
or esi ecx
dec [ ebp - 0x50 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] esi
jne r-xdata
inc edi
movzx edi [ eax ]
movzx eax [ ecx ]
imul edi eax
mov eax [ edx - 0x4 ]
mov [ ebp - 0x78 ] ebx
lea ecx [ eax + edi ]
cmp ecx eax
mov [ ebp - 0x60 ] ecx
mov eax ecx
jb r-xdata
mov ecx [ ebp - 0x68 ]
mov esi [ ebp - 0x50 ]
mov eax [ ebp - 0x84 ]
mov esi [ ebp - 0x8 ]
jmp r-xdata
inc eax
mov [ ebp - 0xe ] eax
mov eax [ ebp - 0xa ]
mov [ ebp - 0xe ] ebx
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x40 ]
test [ ebp - 0x10 ] dl
je r-xdata
push 0x0
mov [ ebp - 0x40 ] ebx
test edi edi
mov edi [ ebp - 0x4c ]
pop ebx
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1a ] ecx
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x16 ] di
jmp r-xdata
inc eax
mov [ ebp - 0xa ] eax
mov ax [ ebp - 0x6 ]
mov edx 0xffff
mov [ ebp - 0xa ] ebx
cmp ax dx
jne r-xdata
mov ax si
or ax dx
mov [ ebp - 0x10 ] ax
mov esi [ ebp - 0x10 ]
jmp r-xdata
mov [ ebp - 0x40 ] esi
mov eax 0x7fff
cmp di ax
jae r-xdata
inc ax
mov [ ebp - 0x6 ] ax
jmp r-xdata
mov [ ebp - 0x6 ] cx
inc edi
jmp r-xdata
mov ecx 0x8000
cmp ax cx
ja r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
sub_43a609
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
push ebx
push esi
push edi
mov edi 0x200
test cl 0x8
je r-xdata
mov eax 0x80
test cl 0x4
je r-xdata
or eax edi
test cl 0x2
je r-xdata
or eax 0x400
test cl 0x1
je r-xdata
or eax 0x800
mov esi 0x100
test ecx 0x80000
je r-xdata
or eax 0x1000
mov edx ecx
mov ebx 0x300
and edx ebx
je r-xdata
or eax esi
mov edx 0x3000000
pop edi
and ecx edx
pop esi
pop ebx
cmp ecx 0x1000000
je r-xdata
cmp edx esi
je r-xdata
or eax 0x8040
cmp ecx 0x2000000
je r-xdata
or eax 0x2000
cmp edx edi
je r-xdata
or eax 0x40
pop ebp
retn
cmp ecx edx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp edx ebx
jne r-xdata
pop ebp
retn
or eax 0x8000
pop ebp
retn
or eax 0x6000
jmp r-xdata
sub_43a6b2
push ebp
mov ebp esp
sub esp 0xc
fwait
fnstcw [ ebp - 0x4 ]
mov ax [ ebp - 0x4 ]
xor ecx ecx
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
push ebx
push esi
movzx esi ax
mov ebx 0xc00
mov edx esi
push edi
mov edi 0x200
and edx ebx
je r-xdata
or ecx 0x80000
and esi 0x300
je r-xdata
cmp edx 0x400
je r-xdata
or ecx 0x20000
cmp esi edi
jne r-xdata
or ecx 0x100
cmp edx 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov esi edi
mov eax [ ebp + 0x8 ]
not esi
and esi ecx
and eax edi
or esi eax
cmp esi ecx
je r-xdata
or ecx 0x40000
movzx eax ax
mov edx 0x1000
test edx eax
je r-xdata
or ecx 0x10000
jmp r-xdata
or ecx edi
jmp r-xdata
cmp edx ebx
jne r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
push esi
call sub_43a9b4
movzx eax ax
pop ecx
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
xor esi esi
test al 0x1
je r-xdata
or ecx 0x300
jmp r-xdata
mov eax esi
and edi 0x308031f
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
xor ecx ecx
test al al
jns r-xdata
test al 0x4
je r-xdata
push 0x10
pop esi
test eax 0x200
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or esi 0x8
test eax 0x400
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or esi 0x4
test eax 0x800
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or esi 0x2
test edx eax
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or esi 0x1
test eax 0x100
je r-xdata
or ecx 0x1
movzx edx ax
mov ecx edx
and ecx ebx
je r-xdata
or esi 0x80000
mov edx eax
mov ebx 0x6000
and edx ebx
je r-xdata
or ecx 0x80000
and edx 0x300
je r-xdata
cmp ecx 0x400
je r-xdata
push 0x40
and eax 0x8040
pop ebx
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or esi 0x20000
cmp edx 0x200
jne r-xdata
or esi 0x100
cmp ecx 0x800
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or esi 0x40000
mov edx 0x1000
test edx eax
je r-xdata
or esi 0x10000
jmp r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov eax ecx
or ecx esi
xor eax esi
test eax 0x8031f
je r-xdata
push eax
call sub_43a609
push eax
mov [ ebp + 0xc ] eax
call sub_42d053
pop ecx
pop ecx
stmxcsr [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
xor ecx ecx
test al al
jns r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx ebx
jne r-xdata
or esi 0x300
jmp r-xdata
mov eax ecx
jmp r-xdata
or ecx 0x80000000
test eax 0x200
je r-xdata
push 0x10
pop ecx
mov eax edi
and edi [ ebp + 0x8 ]
not eax
and eax ecx
or eax edi
cmp eax ecx
je r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax 0x400
je r-xdata
or ecx 0x8
test eax 0x800
je r-xdata
or ecx 0x4
test eax 0x1000
je r-xdata
or ecx 0x2
test eax 0x100
je r-xdata
or ecx 0x1
mov edx eax
mov edi 0x6000
and edx edi
je r-xdata
or ecx 0x80000
and eax 0x8040
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx edi
jne r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
sub_43a9b4
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
test cl 0x8
je r-xdata
inc eax
test cl 0x4
je r-xdata
or eax 0x4
test cl 0x2
je r-xdata
or eax 0x8
test cl 0x1
je r-xdata
or eax 0x10
test ecx 0x80000
je r-xdata
or eax 0x20
push esi
mov edx ecx
mov esi 0x300
push edi
mov edi 0x200
and edx esi
je r-xdata
or eax 0x2
mov edx ecx
and edx 0x30000
je r-xdata
cmp edx 0x100
je r-xdata
or eax esi
cmp edx 0x10000
jne r-xdata
or eax 0x400
cmp edx edi
je r-xdata
pop ebp
retn
or eax 0x1000
pop edi
pop esi
test ecx 0x40000
je r-xdata
or eax edi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp edx esi
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_43aa4b
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
push edi
test eax eax
jne r-xdata
push ebx
mov ebx [ eax ]
push esi
test ebx ebx
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
or eax 0xffffffff
jmp r-xdata
call sub_428ca8
mov [ eax ] 0x16
push 0x3d
push ebx
call sub_43b14a
mov esi eax
mov [ ebp - 0xc ] esi
pop ecx
pop ecx
test esi esi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
cmp ebx esi
je r-xdata
mov edi [ rw-data ]
xor eax eax
cmp [ esi + 0x1 ] al
sete al
mov [ ebp - 0x4 ] eax
cmp edi [ rw-data ]
jne r-xdata
test edi edi
jne r-xdata
push edi
call sub_43ac93
mov edi eax
mov eax [ ebp - 0x4 ]
pop ecx
mov [ rw-data ] edi
mov eax esi
sub eax ebx
push eax
push ebx
call sub_43acf3
mov esi eax
pop ecx
pop ecx
test esi esi
js r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
test eax eax
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
push ebx
call sub_422ed5
mov edi [ ebp + 0x8 ]
pop ecx
and [ edi ] 0x0
test esi esi
jns r-xdata
push [ edi + esi * 4 ]
call sub_422ed5
cmp [ ebp - 0x4 ] 0x0
pop ecx
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_42899d
mov [ rw-data ] eax
pop ecx
test eax eax
je r-xdata
call sub_439ad8
test eax eax
je r-xdata
pop esi
pop ebx
lea eax [ esi + 0x2 ]
cmp eax esi
jl r-xdata
neg esi
cmp [ edi + esi * 4 ] 0x0
jne r-xdata
mov [ edi + esi * 4 ] ebx
mov edi [ ebp + 0x8 ]
and [ edi ] 0x0
jmp r-xdata
or eax 0xffffffff
and [ eax ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ rw-data ]
test edi edi
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ edi + esi * 4 + 0x4 ]
mov [ edi + esi * 4 ] eax
inc esi
cmp esi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x4
call sub_42899d
mov [ rw-data ] eax
pop ecx
test eax eax
je r-xdata
push eax
push 0x4
push [ rw-data ]
call sub_428a2e
add esp 0xc
test eax eax
je r-xdata
mov edi [ ebp + 0x8 ]
push 0x4
push esi
push [ rw-data ]
call sub_428a2e
mov edi [ ebp + 0x8 ]
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x1
push ebx
call sub_4238c0
pop ecx
add eax 0x2
push eax
call sub_428955
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
and [ eax ] 0x0
mov edi [ ebp + 0x8 ]
and [ eax + esi * 4 + 0x4 ] 0x0
mov [ eax + esi * 4 ] ebx
and [ edi ] 0x0
jmp r-xdata
mov [ rw-data ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
push ebx
call sub_422ed5
and [ edi ] 0x0
pop ecx
push ebx
push ebx
call sub_4238c0
pop ecx
add eax 0x2
push eax
push esi
call sub_434732
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_428f46
int3
mov ecx esi
sub ecx ebx
add ecx [ ebp - 0xc ]
mov [ ecx ] al
inc ecx
mov eax [ ebp - 0x4 ]
neg eax
sbb eax eax
not eax
and eax ecx
push eax
push esi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push esi
call sub_422ed5
pop ecx
or [ ebp - 0x8 ] 0xffffffff
call sub_428ca8
mov [ eax ] 0x2a
sub_43ac93
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov eax esi
test esi esi
je r-xdata
pop esi
pop ebp
retn
cmp [ esi ] ecx
je r-xdata
push ebx
push edi
lea eax [ ecx + 0x1 ]
push 0x4
push eax
call sub_428955
mov edi eax
mov ebx edi
pop ecx
pop ecx
test edi edi
jne r-xdata
lea eax [ eax + 0x4 ]
inc ecx
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push 0x9
call sub_423235
and [ edi ] 0x0
mov eax ebx
pop edi
pop ebx
sub esi edi
push eax
call sub_43b0fa
mov [ edi ] eax
add edi 0x4
pop ecx
mov eax [ esi + edi ]
test eax eax
jne r-xdata
sub_43acf3
push ebp
mov ebp esp
mov ecx [ rw-data ]
push esi
mov esi ecx
push edi
mov eax [ esi ]
test eax eax
je r-xdata
sub esi ecx
sar esi 0x2
neg esi
mov edi [ ebp + 0xc ]
add esi 0x4
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_439b67
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub esi [ rw-data ]
sar esi 0x2
jmp r-xdata
test al al
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
sub_43ad4e
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push edi
push [ ebp + 0x14 ]
call sub_422ff5
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor esi esi
jmp r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
mov esi 0x7fffffff
jmp r-xdata
mov edx [ ebp + 0xc ]
test edx edx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esi 0x7fffffff
cmp eax esi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov edi [ ebp - 0x10 ]
mov ebx [ edi + 0xa4 ]
test ebx ebx
jne r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
jmp r-xdata
push [ edi + 0x8 ]
push eax
push edx
push eax
push ecx
push 0x1001
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_43b0b7
add esp 0x20
test eax eax
jne r-xdata
lea esi [ ebp - 0x10 ]
push esi
push eax
push edx
push ecx
call sub_43b1fc
add esp 0x10
mov esi eax
jmp r-xdata
lea esi [ eax - 0x2 ]
call sub_428ca8
mov [ eax ] 0x16
jmp r-xdata
sub_43ae13
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x1c ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x24 ] ecx
push edi
test esi esi
jle r-xdata
cmp esi 0xffffffff
jge r-xdata
push esi
push eax
call sub_43b097
pop ecx
pop ecx
mov ecx [ ebp - 0x24 ]
mov esi eax
mov edi [ ebp + 0x20 ]
test edi edi
jle r-xdata
xor eax eax
jmp r-xdata
cmp edi 0xffffffff
jl r-xdata
push edi
push ecx
call sub_43b097
pop ecx
pop ecx
mov edi eax
jmp r-xdata
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_42c776
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x24 ]
xor ebx ebx
mov [ ebp - 0x28 ] ebx
test eax eax
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
cmp esi edi
jne r-xdata
test edi edi
jne r-xdata
cmp edi 0x1
jle r-xdata
push 0x2
push ebx
push ebx
push esi
push [ ebp - 0x1c ]
push 0x9
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
mov ecx eax
mov [ ebp - 0x20 ] ecx
test ecx ecx
je r-xdata
cmp esi 0x1
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
jle r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
test ebx ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
test esi esi
jle r-xdata
pop eax
jmp r-xdata
push ecx
push ebx
push esi
push [ ebp - 0x1c ]
mov esi [ ebp + 0x24 ]
push 0x1
push esi
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
add ecx ecx
lea eax [ ecx + 0x8 ]
cmp eax ecx
jbe r-xdata
test edi edi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push ebx
call sub_427d56
mov eax [ ebp - 0x28 ]
pop ecx
xor eax eax
push eax
push eax
push edi
push [ ebp - 0x24 ]
push 0x9
push esi
call [ MultiByteToWideChar@IAT ]
mov ecx eax
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x20 ]
lea eax [ eax * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
lea eax [ ebp - 0x12 ]
cmp [ ebp - 0x12 ] bl
je r-xdata
jle r-xdata
push eax
call sub_42588c
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
call sub_434c20
mov ebx esp
test ebx ebx
je r-xdata
lea eax [ ebp - 0x12 ]
cmp [ ebp - 0x12 ] bl
je r-xdata
mov esi [ ebp - 0x1c ]
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
mov esi [ ebp - 0x24 ]
mov dl [ esi ]
cmp dl [ eax ]
jb r-xdata
push ecx
push esi
push edi
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
add ecx ecx
lea eax [ ecx + 0x8 ]
cmp eax ecx
jbe r-xdata
add ebx 0x8
mov dl [ esi ]
cmp dl [ eax ]
jb r-xdata
add eax 0x2
cmp [ eax ] bl
jne r-xdata
cmp dl cl
jbe r-xdata
push esi
call sub_427d56
pop ecx
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x20 ]
push esi
push eax
push ebx
push [ ebp + 0x10 ]
push [ ebp - 0x2c ]
call sub_434a70
add esp 0x18
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
lea eax [ eax * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
add eax 0x2
cmp [ eax ] bl
jne r-xdata
cmp dl cl
jbe r-xdata
mov cl [ eax + 0x1 ]
test cl cl
je r-xdata
jmp r-xdata
push eax
call sub_42588c
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_434c20
mov esi esp
test esi esi
je r-xdata
mov cl [ eax + 0x1 ]
test cl cl
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
sub_43b097
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx eax
mov edx [ ebp + 0x8 ]
test eax eax
je r-xdata
dec ecx
dec ecx
cmp [ edx ] 0x0
je r-xdata
sub eax ecx
dec eax
pop ebp
retn
inc edx
test ecx ecx
jne r-xdata
sub_43b0b7
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_422ff5
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_43ae13
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_43b0fa
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push ebx
push edi
push [ ebp + 0x8 ]
call sub_4238c0
lea edi [ eax + 0x1 ]
push edi
call sub_42588c
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
push edi
push ebx
call sub_434732
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_428f46
int3
mov eax ebx
jmp r-xdata
pop edi
pop ebx
pop ebp
retn
sub_43b15f
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push esi
push edi
push [ ebp + 0x10 ]
call sub_422ff5
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov edi [ ebp - 0xc ]
xor esi esi
cmp [ edi + 0x8 ] esi
jne r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
xor esi esi
jmp r-xdata
movzx ecx [ edx ]
test cx cx
jne r-xdata
push [ ebp + 0xc ]
push edx
call sub_43b2b0
pop ecx
pop ecx
mov esi eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
movzx eax cl
test [ eax + edi + 0x19 ] 0x4
je r-xdata
movzx eax cx
cmp [ ebp + 0xc ] eax
jne r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax cx
cmp [ ebp + 0xc ] eax
je r-xdata
inc edx
mov al [ edx ]
test al al
je r-xdata
mov esi edx
inc edx
movzx ecx cx
shl ecx 0x8
movzx eax al
or ecx eax
cmp [ ebp + 0xc ] ecx
jne r-xdata
lea esi [ edx - 0x1 ]
jmp r-xdata
sub_43b1fc
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
push ebx
push esi
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_422ff5
mov edi [ ebp + 0x8 ]
mov esi 0x7fffffff
test edi edi
je r-xdata
call sub_428ca8
mov [ eax ] 0x16
call sub_428f36
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx esi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
sub edi ebx
push ecx
push ebx
push edi
call sub_43b3e0
add esp 0xc
mov esi eax
jmp r-xdata
sub esi eax
test esi esi
je r-xdata
cmp esi eax
je r-xdata
movzx eax [ edi + ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_424e19
lea ecx [ ebp - 0x10 ]
mov esi eax
movzx eax [ ebx ]
push ecx
push eax
call sub_424e19
add esp 0x10
inc ebx
dec [ ebp + 0x10 ]
je r-xdata
sub_43b2b0
cmp [ rw-data ] 0x1
jb r-xdata
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
movzx eax [ esp + 0x8 ]
mov edx eax
shl eax 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov edx [ esp + 0x4 ]
mov ecx 0xf
or eax 0xffffffff
and ecx edx
shl eax cl
sub edx ecx
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
bsf eax ecx
add eax edx
movd edx xmm3
xor ecx ecx
cmp dl [ eax ]
cmovne eax ecx
retn
or eax 0xffffffff
add edx 0x10
jmp r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
movdqu xmm1 [ edx ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
por xmm2 xmm1
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_43b3e0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_43b441
push esi
mov esi ecx
call sub_43b494
mov eax __dos_header
mov [ esi ] 0x38
lea ecx [ esi + 0x14 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0xc ] 0xc00
mov [ esi + 0x10 ] r--data
call sub_420ac0
test eax eax
jns r-xdata
mov eax esi
pop esi
retn
call [ IsDebuggerPresent@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] 0x1
push r--data
call [ OutputDebugStringW@IAT ]
sub_43b494
push esi
push edi
mov esi ecx
xor edi edi
push 0x18
push edi
lea eax [ esi + 0x14 ]
push eax
call sub_422f60
add esp 0xc
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov eax esi
mov [ esi + 0x34 ] edi
pop edi
pop esi
retn
sub_43b51c
cmp [ rw-data ] 0x0
je sub_43b536
sub esp 0x4
fnstcw [ esp ]
pop eax
and ax 0x7f
cmp ax 0x7f
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
sub_43b536
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_442efc
push [ edx + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
push [ ebp - 0x28 ]
jmp r-xdata
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
fldz
fst [ ebp - 0x28 ]
mov [ ebp - 0x1c ] 0x3
mov ecx [ esi + 0xc ]
mov eax ecx
shl eax 0x6
mov eax [ eax + r--data ]
cmp eax 0x3
jne r-xdata
dec eax
fstp st0
cmp eax 0x8
ja r-xdata
cmp ecx 0x1
jne r-xdata
mov ecx [ edi + 0x1c ]
mov eax ecx
shl eax 0x4
add eax [ ebx + 0xc ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x1
jne r-xdata
jmp [ eax * 4 + jump_table_4433f7 ]
sub ecx 0x2
cmp ecx 0x8
ja r-xdata
fild [ esi ]
sub eax 0x2
cmp eax 0x7
ja r-xdata
cmp ecx 0x1
jne r-xdata
lea ecx [ ebp - 0x28 ]
call sub_409997
mov esi [ ebp - 0x20 ]
lea ecx [ edi + 0x20 ]
call sub_409997
mov ecx [ edi + 0x28 ]
push 0x0
push esi
call sub_407a68
test eax eax
jns r-xdata
mov ecx esi
call sub_409c9c
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_409c9c
cmp esi eax
jl r-xdata
mov ecx esi
call sub_409d46
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov esi edx
call sub_409d46
cmp esi edx
jl r-xdata
mov ecx esi
call sub_4687da
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_4687da
cmp esi eax
jb r-xdata
fld st0
jmp r-xdata
jmp [ ecx * 4 + jump_table_44341b ]
lea edx [ edi + 0x10 ]
mov ecx ebx
call sub_42067c
test al al
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ebp + 0xc ]
inc ecx
mov [ eax ] ecx
jmp [ eax * 4 + jump_table_40d8e4 ]
sub ecx 0x2
cmp ecx 0x9
ja r-xdata
mov eax [ edi + 0x10 ]
jmp r-xdata
jg r-xdata
jmp r-xdata
fcompp
fnstsw ax
test ah 0x5
jpo r-xdata
fld [ esi ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ecx esi
fstp st0
mov edx [ eax ]
call sub_4095c1
test al al
je r-xdata
fild [ esi ]
jmp r-xdata
mov eax [ esi ]
fild [ eax + 0x4 ]
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + 0x15c ]
call sub_41fd0f
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ebp + 0xc ]
inc ecx
mov [ eax ] ecx
jmp r-xdata
push ecx
call sub_407b3d
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax 0x5
jge r-xdata
lea ecx [ edi + 0x10 ]
call sub_409cf8
fstp [ ebp - 0x18 ]
mov ecx ebx
call sub_409cf8
fcomp [ ebp - 0x18 ]
fnstsw ax
test ah 0x41
jne r-xdata
mov ecx ebx
call sub_409997
mov esi [ ebx + 0x8 ]
lea ecx [ edi + 0x10 ]
call sub_409997
mov ecx [ edi + 0x18 ]
push 0x0
push esi
call sub_407a68
test eax eax
js r-xdata
lea ecx [ edi + 0x10 ]
call sub_409d46
mov ecx ebx
mov [ ebp - 0x14 ] eax
mov esi edx
call sub_409d46
cmp esi edx
jl r-xdata
lea ecx [ edi + 0x10 ]
call sub_4687da
mov ecx ebx
mov esi eax
call sub_4687da
cmp esi eax
jae r-xdata
xor esi esi
jmp r-xdata
jmp [ ecx * 4 + jump_table_443467 ]
sub eax 0x2
cmp eax 0x9
ja r-xdata
mov eax [ ebx ]
cmp [ ebp - 0x14 ] eax
jb r-xdata
push edx
call sub_423eb9
lea ecx [ edx + 0x4 ]
push 0x8
lea edx [ ebp - 0x18 ]
call sub_41fb3b
fild [ ebp - 0x18 ]
jmp r-xdata
fld1
jmp r-xdata
mov ecx [ ebp - 0x20 ]
test ecx ecx
jne r-xdata
add eax 0xfffffffb
cmp eax 0xa
ja r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
jmp r-xdata
mov esi [ ebp - 0x8 ]
add esi 0x15c
cmp [ esi + 0x9 ] 0x0
jne r-xdata
jmp r-xdata
jg r-xdata
jmp r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x1
jne r-xdata
mov eax [ edi + 0x18 ]
lea ecx [ edi + 0x10 ]
mov esi [ eax ]
call sub_4095c1
test al al
je r-xdata
mov esi [ edi + 0x10 ]
jmp r-xdata
fld [ edi + 0x10 ]
call sub_43b500
mov esi eax
jmp r-xdata
xor eax eax
cmp [ edi + 0x10 ] al
setne al
jmp r-xdata
mov eax [ edi + 0x10 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov ecx [ edi + 0x10 ]
mov edx [ ecx ]
cmp edx 0x8
jg r-xdata
xor eax eax
jmp r-xdata
jmp [ eax * 4 + jump_table_44348f ]
jmp r-xdata
fld [ ebp - 0x28 ]
fld [ ebp - 0x18 ]
jmp r-xdata
dec eax
cmp eax 0x9
ja r-xdata
mov eax [ ebp - 0x1c ]
add esp 0x4
fstp [ ebp - 0x18 ]
cmp eax 0x3
je r-xdata
jmp [ eax * 4 + jump_table_4434b7 ]
mov ecx [ esi + 0x4 ]
mov edi [ ecx + 0x30 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] eax
jb r-xdata
push esi
call sub_42370a
add esp 0x4
mov esi eax
jmp r-xdata
push 0x10
lea ecx [ esi + 0x4 ]
lea edx [ ebp - 0x18 ]
call sub_41fb3b
mov esi [ ebp - 0x18 ]
add esp 0x4
jmp r-xdata
mov [ ebp - 0x4 ] eax
mov esi eax
mov ecx [ ecx + 0x4 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_465630
mov esi [ ebp - 0x18 ]
add esp 0x4
jmp r-xdata
cmp esi eax
jl r-xdata
mov eax [ ebx + 0x8 ]
mov ecx ebx
mov edx [ eax ]
call sub_4095c1
test al al
je r-xdata
fld [ ebx ]
call sub_43b500
jmp r-xdata
xor eax eax
cmp [ ebx ] al
setne al
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ ebx ]
mov edx [ ecx ]
cmp edx 0x8
jg r-xdata
fldz
fld [ ebp - 0x18 ]
jmp r-xdata
jmp [ eax * 4 + jump_table_44343f ]
mov esi [ ebp - 0x28 ]
test esi esi
je r-xdata
mov esi [ ebp - 0x28 ]
test esi esi
je r-xdata
mov esi [ ebp - 0x28 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x28 ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
push [ ebp - 0x28 ]
jmp r-xdata
mov esi [ ebp - 0x28 ]
test esi esi
je r-xdata
mov esi [ ebp - 0x28 ]
test esi esi
je r-xdata
mov esi [ ebp - 0x28 ]
test esi esi
je r-xdata
mov [ esi + 0x4 ] edi
mov [ esi + 0x9 ] 0x0
jmp r-xdata
push ecx
call sub_45696e
mov [ esi + 0x9 ] 0x1
jmp r-xdata
mov edi [ esi + 0x4 ]
mov ebx [ edi + 0x30 ]
test edi edi
je r-xdata
jmp r-xdata
push edx
call sub_42370a
add esp 0x4
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x10
lea edx [ ebp - 0x18 ]
call sub_41fb3b
mov eax [ ebp - 0x18 ]
add esp 0x4
jmp r-xdata
mov ecx [ ecx + 0x4 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_465630
mov eax [ ebp - 0x18 ]
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x28 ]
mov edx [ eax ]
call sub_4095c1
test al al
je r-xdata
fild [ ebp - 0x28 ]
fld [ ebp - 0x18 ]
jmp r-xdata
fild [ ebp - 0x28 ]
fld [ ebp - 0x18 ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
fild [ eax + 0x4 ]
fld [ ebp - 0x18 ]
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push esi
call [ VariantClear@IAT ]
push [ ebp - 0x28 ]
jmp r-xdata
lea ecx [ esi + 0x8 ]
jmp r-xdata
push ecx
mov ecx esi
call sub_408e34
jmp r-xdata
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
push ecx
mov ecx esi
call sub_4571d0
jmp r-xdata
push ecx
mov ecx esi
call sub_4571e5
jmp r-xdata
mov ecx esi
dec [ esi ]
jmp r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x9 ] 0x0
lea ecx [ edi + 0x20 ]
call sub_409a20
lea ecx [ edi + 0x10 ]
call sub_409a20
push edi
call j_sub_422ed5#3
add esp 0x4
push edx
call sub_423eb9
fld [ ebp - 0x18 ]
add esp 0x4
jmp r-xdata
lea ecx [ edx + 0x4 ]
push 0x8
lea edx [ ebp - 0x10 ]
call sub_41fb3b
fild [ ebp - 0x10 ]
add esp 0x4
fld [ ebp - 0x18 ]
jmp r-xdata
fld1
fld [ ebp - 0x18 ]
jmp r-xdata
call sub_405a64
push esi
sub_443a35
push [ eax + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
push [ ebp - 0x20 ]
jmp r-xdata
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
mov edx [ esi + 0x4 ]
mov edi [ ebp - 0x10 ]
mov eax [ edx + edi * 4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
movsx eax [ eax + 0xa ]
mov ecx [ ebp - 0xc ]
push eax
push 0xa1
call sub_469ed4
jmp r-xdata
cmp [ eax ] 0x5
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edx + edi * 4 + 0x4 ]
inc edi
cmp [ eax + 0x8 ] 0x7f
je r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
xor bh bh
mov [ ebp + 0xb ] 0x0
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x38 ] 0x0
mov eax [ edi ]
mov [ ebp - 0x34 ] 0x1
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x1
lea ecx [ eax - 0x1 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x4c ] ecx
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
xor ecx ecx
mov [ ebp - 0x20 ] r--data
xor esi esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] esi
jmp sub_40e140
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov [ edi ] eax
cmp [ ebx + 0x165 ] 0x0
jne r-xdata
test esi esi
jle r-xdata
mov ecx [ ebx + 0x160 ]
lea eax [ ebp - 0x50 ]
push eax
call sub_47a3ae
mov [ ebx + 0x165 ] 0x0
jmp r-xdata
push 0x38
call sub_420f36
mov esi eax
add esp 0x4
test esi esi
je r-xdata
shl esi 0x4
add esi [ rw-data ]
je r-xdata
inc [ ebx + 0x15c ]
xor esi esi
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x44 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x48 ]
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x40 ]
mov [ esi + 0xc ] ecx
lea ecx [ esi + 0x10 ]
mov [ esi ] 0x0
push eax
mov [ ecx + 0x8 ] 0x0
call sub_409ac0
lea eax [ ebp - 0x30 ]
mov [ esi + 0x28 ] 0x0
lea ecx [ esi + 0x20 ]
push eax
call sub_409ac0
test bh bh
jne r-xdata
mov eax [ ebx + 0x160 ]
mov [ esi + 0x30 ] eax
mov [ ebx + 0x160 ] esi
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ edi ]
lea edx [ esi + 0x1 ]
mov [ edi ] edx
cmp esi [ rw-data ]
jg r-xdata
mov eax [ eax ]
cmp eax 0x8
jne r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov esi [ esi + 0x8 ]
mov edx 0x1
cmp esi edx
jbe r-xdata
sub eax 0x2
jne r-xdata
dec eax
jmp r-xdata
lea eax [ edx - 0x1 ]
mov bh 0x1
mov [ ebp - 0x48 ] eax
test bl bl
jne r-xdata
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
dec eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jne r-xdata
mov [ ebp + 0xc ] eax
cmp [ ebp + 0xb ] bl
jne r-xdata
cmp [ eax ] 0x5
jne r-xdata
inc edx
cmp edx esi
jb r-xdata
jmp r-xdata
cmp [ ebp + 0xb ] 0x1
je r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
push 0xffffffff
push 0x76
call sub_469ed4
jmp r-xdata
mov [ ebp + 0xb ] 0x1
test bl bl
jne r-xdata
inc [ ebp + 0xc ]
jmp r-xdata
cmp [ ebp + 0xb ] 0x1
je r-xdata
lea ecx [ ebp - 0x30 ]
call sub_409a20
lea ecx [ ebp - 0x40 ]
call sub_409a20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x8 ] edx
jmp r-xdata
test bl bl
jne r-xdata
mov ecx [ ebp - 0xc ]
lea eax [ edx - 0x1 ]
mov [ ebp - 0x10 ] 0x1
mov [ ecx + 0xf4 ] eax
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push esi
call sub_409f6b
test eax eax
js r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edi ]
dec eax
mov [ edx + 0xf4 ] eax
mov eax [ esi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx edx
movsx eax [ eax + 0xa ]
push eax
push 0xa1
call sub_469ed4
jmp r-xdata
cmp [ eax ] 0x5
jne r-xdata
mov eax [ edx + ecx * 4 + 0x4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edi ]
dec eax
mov [ edx + 0xf4 ] eax
mov eax [ esi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx edx
movsx eax [ eax + 0xa ]
push eax
push 0x72
call sub_469ed4
jmp r-xdata
mov bl [ ebp - 0x1 ]
test bl bl
je r-xdata
mov edx [ edi ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
sub_445cc9
push [ edx + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
push [ esp + 0x50 ]
jmp r-xdata
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
mov [ esp + 0x5c ] 0x1
mov [ esp + 0x50 ] 0x0
cmp [ edi + 0x144 ] 0x0
mov edx 0x2
jne r-xdata
mov eax [ edi + 0xec ]
mov [ edi + 0x144 ] 0x0
cmp eax 0x1
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx edi
call sub_4111d0
cmp [ edi + 0xfc ] 0x1
je r-xdata
dec eax
mov [ edi + 0xec ] eax
cmp [ edi + 0x145 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_4111f3
push 0x0
call [ LockWindowUpdate@IAT ]
push [ rw-data ]
call [ DestroyWindow@IAT ]
mov esi [ GetMessageW@IAT ]
lea eax [ esp + 0x14c ]
push 0x0
push 0x0
push 0x0
push eax
call esi
test eax eax
jle r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
cmp [ edi + 0xf8 ] 0x0
je r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0xa4 ]
push eax
call esi
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
push eax
mov ecx [ eax ]
mov esi [ eax + 0x4 ]
mov [ esp + 0xc ] ecx
call j_sub_422ed5#3
dec [ rw-data ]
add esp 0x4
mov [ rw-data ] esi
neg esi
sbb esi esi
xor ecx ecx
and [ rw-data ] esi
mov edx [ edi + 0x1c8 ]
mov [ esp + 0x18 ] ecx
test edx edx
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
jmp r-xdata
cmp [ esp + 0x98 ] 0x12
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
lea eax [ esp + 0x14c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ esp + 0x14c ]
push eax
call [ DispatchMessageW@IAT ]
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x158 ]
push eax
call esi
test eax eax
jg r-xdata
cmp ecx edx
je r-xdata
mov esi [ edi + 0x1c4 ]
mov edi [ esp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ edi + 0x454 ] 0x0
je r-xdata
mov [ edi + 0xfc ] 0x1
mov [ edi + 0xf8 ] 0x1
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx 0xffffffff
jne r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ edi + 0xf8 ] 0x1
jmp r-xdata
cmp [ edi + 0xf8 ] 0x1
je r-xdata
jmp r-xdata
mov esi [ PeekMessageW@IAT ]
mov edx 0x2
jmp r-xdata
mov eax [ edi + 0x1c4 ]
mov eax [ eax + ecx * 4 ]
mov ecx edi
mov eax [ eax ]
add eax 0x8
push eax
call sub_409fbd
mov ecx [ edi + 0x1c4 ]
mov esi eax
mov eax [ esp + 0x18 ]
mov ecx [ ecx + eax * 4 ]
mov ecx [ ecx ]
add ecx 0x18
push ecx
lea ecx [ edi + 0x14c ]
call sub_4081a7
mov eax [ esi + 0x10 ]
mov ecx edi
push 0x0
push 0x1
inc eax
push eax
call sub_40b89c
jmp r-xdata
inc ecx
cmp ecx edx
jb r-xdata
cmp [ eax ] edi
je r-xdata
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp ecx [ rw-data ]
jge r-xdata
lea eax [ esp + 0x94 ]
mov ecx rw-data
push eax
call sub_4031ce
test eax eax
je r-xdata
push ecx
lea eax [ esp + 0x4c ]
mov [ esp + 0x4c ] 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fe53
jmp r-xdata
mov edx 0x2
mov esi [ PeekMessageW@IAT ]
mov eax [ esi + ecx * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov edi [ esp + 0x44 ]
mov [ esp + 0x18 ] ecx
cmp [ edi + 0xfc ] 0x0
je r-xdata
cmp [ edi + 0x184 ] 0x0
jne r-xdata
cmp [ edi + 0x458 ] 0x1
je r-xdata
mov esi [ edi + 0x44c ]
lea eax [ edi + 0x44c ]
mov [ rw-data ] 0x1
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x8 ] eax
nop
mov [ rw-data ] 0xffffffff
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ eax + ecx * 4 ]
mov eax [ ecx ]
test eax eax
je r-xdata
lea eax [ esp + 0x94 ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ esp + 0x94 ]
push eax
call [ DispatchMessageW@IAT ]
jmp r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0xa4 ]
push eax
call esi
test eax eax
je r-xdata
cmp [ edi + 0x484 ] 0x1
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x1
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x11 ] 0x0
jne r-xdata
mov edi [ esp + 0x8 ]
lea esp [ esp ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
jmp r-xdata
xor eax eax
mov [ edi + 0x484 ] 0x1
push [ edi + 0x188 ]
lea ecx [ esp + 0xf0 ]
mov [ esp + 0x68 ] 0x0
mov [ esp + 0xbc ] r--data
mov [ esp + 0x18 ] eax
mov [ esp + 0xc0 ] eax
mov [ esp + 0xc4 ] eax
mov [ esp + 0xc8 ] eax
call sub_469abe
lea ecx [ edi + 0x184 ]
call sub_45d801
mov esi [ esp + 0xf0 ]
lea ecx [ esp + 0x80 ]
mov [ esp + 0x88 ] 0x0
push [ esi ]
call sub_409ac0
mov esi [ esi + 0x4 ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
mov ecx edi
call sub_409fbd
mov edx eax
mov [ esp + 0x20 ] edx
mov ecx [ edx + 0x10 ]
push ecx
call sub_4071c8
mov [ edi + 0xf4 ] ecx
mov esi 0x3
cmp [ edx + 0x14 ] 0x0
mov [ esp + 0x3c ] eax
jle r-xdata
cmp [ edi + 0x459 ] 0x1
je r-xdata
mov eax [ edi + 0xf8 ]
cmp eax 0x7
je r-xdata
xor ecx ecx
mov [ esp + 0x9c ] 0x0
mov eax 0x8
mov [ esp + 0xa0 ] 0x8
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
add esp 0x4
mov [ esp + 0x98 ] eax
xor ecx ecx
mov [ eax ] cx
push 0x4
call sub_420f36
add esp 0x4
test eax eax
je r-xdata
mov esi [ esi + 0x4 ]
jmp r-xdata
mov edi [ eax + 0x14 ]
call [ timeGetTime@IAT ]
mov ecx eax
xor edx edx
sub eax edi
cmp edi 0x7fffffff
ja r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x11 ] 0x0
jne r-xdata
mov edi [ esp + 0x44 ]
mov [ rw-data ] al
cmp [ esp + 0x14 ] eax
jg r-xdata
lea eax [ esp + 0x94 ]
push eax
mov eax [ ecx ]
push [ eax + 0x18 ]
push [ eax ]
call [ TranslateAcceleratorW@IAT ]
test eax eax
jne r-xdata
push [ edx + 0x10 ]
call sub_408561
mov eax [ esp + 0x20 ]
mov esi 0x3
mov [ esp + 0x4c ] esi
mov [ esp + 0x18 ] 0x1
cmp [ eax + 0x14 ] 0x1
jl r-xdata
mov edx [ esp + 0xf0 ]
add edx 0x8
mov [ esp + 0x24 ] edx
lea ecx [ esp + 0x98 ]
call sub_4077c7
push 0xa
push [ edi + 0x444 ]
call [ WaitForSingleObject@IAT ]
mov [ esp + 0x48 ] eax
cmp eax 0x102
je r-xdata
cmp eax 0x2
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x1
test esi esi
jne r-xdata
cmp ecx 0x7fffffff
jbe r-xdata
cmp ecx 0x7fffffff
ja r-xdata
lea eax [ esp + 0x18 ]
mov ecx edi
push eax
call sub_46a212
jmp r-xdata
mov eax [ eax + 0x4 ]
jmp r-xdata
lea edx [ eax + 0x2 ]
jmp r-xdata
push r--data
lea ecx [ esp + 0x140 ]
call sub_407f41
mov esi [ esp + 0x80 ]
xor eax eax
cmp [ esp + 0x8c ] 0x6
push 0x1
setne al
dec eax
and eax esi
push 0x0
push eax
lea eax [ esp + 0x148 ]
push eax
call sub_408620
lea ecx [ esp + 0x13c ]
call sub_405a64
mov eax [ esp + 0x20 ]
mov ecx edi
push 0x0
push 0x0
mov eax [ eax + 0x10 ]
inc eax
push eax
call sub_40b89c
mov ecx rw-data
call sub_40843f
mov ecx [ esp + 0x88 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x3c ]
xor edx edx
mov [ esp + 0x6c ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x8 ] ecx
mov eax [ ecx + esi * 4 ]
cmp [ eax + 0x8 ] dx
jne r-xdata
mov eax [ ecx + esi * 4 + 0x4 ]
inc esi
cmp [ eax + 0x8 ] 0x41
jne r-xdata
mov edx [ esp + 0x3c ]
mov edx [ edx + 0x4 ]
lea ecx [ esp + 0x98 ]
call sub_405a64
jmp r-xdata
cmp [ esp + 0x9c ] 0x0
je r-xdata
lea eax [ esp + 0x48 ]
push eax
push [ edi + 0x444 ]
call [ GetExitCodeProcess@IAT ]
push [ edi + 0x444 ]
call [ CloseHandle@IAT ]
mov eax [ esp + 0x48 ]
mov [ esp + 0x8 ] eax
jmp r-xdata
push 0xa
call [ Sleep@IAT ]
cmp [ edi + 0x2f0 ] 0x0
je r-xdata
cmp eax 0x8
je r-xdata
mov [ esp + 0xa4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ esi ]
test edx edx
jl r-xdata
jmp r-xdata
cdq
mov eax [ edi ]
mov [ esp + 0x18 ] eax
test eax eax
jne r-xdata
mov eax [ esp + 0x8c ]
cmp eax 0x5
jl r-xdata
push ecx
call sub_407b3d
mov [ esp + 0x88 ] 0x0
mov edi [ esp + 0x8 ]
lea edx [ esi * 4 + 0x4 ]
mov [ esp + 0x24 ] 0x1
xor ecx ecx
mov esi [ esp + 0x24 ]
mov eax [ ecx + esi * 4 ]
mov eax [ eax ]
cmp eax 0x24
je r-xdata
push [ edx ]
lea ecx [ esp + 0xbc ]
call sub_456363
mov ecx [ esp + 0x64 ]
inc esi
mov eax [ esp + 0x20 ]
inc ecx
mov edx [ esp + 0x24 ]
add edx 0x4
mov [ esp + 0x64 ] ecx
mov [ esp + 0x24 ] edx
cmp ecx [ eax + 0x14 ]
jge r-xdata
mov edx [ esp + 0x18 ]
inc esi
xor ecx ecx
mov eax [ edx + esi * 4 ]
mov eax [ eax ]
cmp eax 0x24
je r-xdata
mov ecx eax
mov eax [ edx + esi * 4 ]
mov eax [ eax ]
cmp eax [ ecx ]
je r-xdata
lea eax [ esp + 0x94 ]
mov ecx rw-data
push eax
call sub_462700
test al al
je r-xdata
lea eax [ esp + 0x98 ]
mov ecx edi
push eax
call sub_409fbd
mov esi eax
test esi esi
je r-xdata
push ecx
lea eax [ esp + 0xc ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fe53
jmp r-xdata
mov eax [ edi + 0xf8 ]
cmp eax 0x3
jl r-xdata
mov ecx [ edi + 0x2f8 ]
call sub_42034a
test edx edx
jl r-xdata
push 0xa
call [ Sleep@IAT ]
cmp [ edi + 0x43c ] 0x0
je r-xdata
cmp eax 0x9
je r-xdata
mov eax [ rw-data ]
lea ecx [ esp + 0x94 ]
mov esi [ eax ]
push esi
call sub_486081
mov ecx rw-data
call sub_40467d
test esi esi
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
jg r-xdata
lea ecx [ esp + 0xec ]
mov [ esp + 0x8c ] 0x1
mov [ esp + 0x80 ] 0x0
call sub_4563f2
lea ecx [ esp + 0xb8 ]
call sub_4563f2
mov [ edi + 0x484 ] 0x0
jmp r-xdata
add eax 0xfffffffb
cmp eax 0xa
ja r-xdata
cmp ax 0x48
jne r-xdata
inc ecx
jmp r-xdata
inc esi
cmp eax 0x1e
jne r-xdata
mov eax [ esp + 0xbc ]
mov edx [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x3c ]
jmp r-xdata
cmp ax 0x48
jne r-xdata
inc ecx
jmp r-xdata
mov eax [ ecx + esi * 4 + 0x4 ]
inc esi
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp eax 0x1e
jne r-xdata
mov eax [ esp + 0x3c ]
mov ecx edi
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 + 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x91
call sub_469ed4
jmp r-xdata
mov ecx [ esp + 0x18 ]
lea ecx [ esp + 0xd8 ]
mov [ esp + 0xd8 ] 0x0
mov [ esp + 0xe0 ] 0x0
mov [ esp + 0xe4 ] 0x1
call sub_409a20
mov eax [ esp + 0x94 ]
lea ecx [ esp + 0x10c ]
push r--data
mov [ esp + 0xe8 ] 0x1
mov [ esp + 0xdc ] eax
call sub_407f41
push 0x1
lea eax [ esp + 0xdc ]
mov ecx rw-data
push eax
lea eax [ esp + 0x114 ]
push eax
call sub_408b13
lea ecx [ esp + 0x10c ]
call sub_405a64
mov [ edi + 0x459 ] 0x1
mov ecx edi
mov eax [ esi + 0x10 ]
push 0x0
push 0x1
inc eax
push eax
call sub_40b89c
lea ecx [ esp + 0xd8 ]
mov [ edi + 0x459 ] 0x0
call sub_409a20
lea ecx [ esp + 0x98 ]
call sub_405a64
jmp r-xdata
mov [ edi + 0x144 ] 0x1
mov [ edi + 0xf8 ] 0x0
jmp r-xdata
jmp r-xdata
jg r-xdata
mov eax [ edi + 0xf8 ]
xor esi esi
mov [ esp + 0x1f ] 0x0
mov [ esp + 0x8 ] esi
cmp eax 0x8
jne r-xdata
mov ecx [ edi + 0x440 ]
call sub_42034a
test edx edx
jl r-xdata
cmp eax 0x3
je r-xdata
cmp [ esp + 0x9c ] 0x0
mov [ rw-data ] 0x0
je r-xdata
push ecx
mov ecx esi
call sub_404665
cmp [ rw-data ] 0x0
jne r-xdata
mov esi [ esp + 0xa4 ]
dec [ esi ]
jne r-xdata
inc [ esp + 0x14 ]
call [ timeGetTime@IAT ]
mov ecx [ esp + 0x44 ]
mov [ edi + 0x14 ] eax
push [ esi ]
call sub_409fbd
mov ecx [ esi ]
push 0x0
push 0x1
mov [ ecx + 0x10 ] 0x1
mov eax [ eax + 0x10 ]
mov ecx [ esp + 0x4c ]
inc eax
push eax
call sub_40b89c
mov eax [ esi ]
mov [ eax + 0x10 ] 0x0
jmp r-xdata
cmp eax [ edi + 0x18 ]
jae r-xdata
jmp [ eax * 4 + jump_table_446014 ]
cmp ax 0x40
jne r-xdata
dec ecx
jns r-xdata
inc esi
add edx 0x4
jmp r-xdata
mov [ esp + 0x6c ] edx
mov [ esp + 0x4c ] esi
mov eax [ ecx + esi * 4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov edx 0x100
mov ecx [ eax + 0x4 ]
mov [ esp + 0x18 ] ecx
mov eax [ ecx + esi * 4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp ax 0x40
jne r-xdata
dec ecx
jns r-xdata
inc esi
jmp r-xdata
mov eax [ edx + esi * 4 + 0x4 ]
cmp [ eax + 0x8 ] 0x33
je r-xdata
mov edx [ esp + 0x24 ]
lea ecx [ esp + 0x80 ]
call sub_409df0
lea ecx [ esp + 0xec ]
call sub_4563f2
lea ecx [ esp + 0xb8 ]
call sub_4563f2
mov [ edi + 0x484 ] 0x0
jmp r-xdata
sub eax 0x3
cmp eax 0x3
ja r-xdata
cmp [ edi + 0xf8 ] 0x2
jne r-xdata
cmp eax [ edi + 0x2f0 ]
jae r-xdata
cmp eax 0x9
jne r-xdata
lea eax [ esp + 0x1f ]
push eax
lea ecx [ edi + 0x42c ]
lea edx [ esp + 0xc ]
call sub_463c99
add esp 0x4
cmp [ esp + 0x1f ] 0x1
jne r-xdata
jg r-xdata
cmp eax 0x4
je r-xdata
lea eax [ esp + 0x98 ]
mov ecx edi
push eax
call sub_409fbd
mov esi eax
test esi esi
je r-xdata
push 0xa
cmp [ rw-data ] 0x64
jge r-xdata
push [ esp + 0x98 ]
call j_sub_422ed5#3
add esp 0x4
push esi
call j_sub_422ed5#3
add esp 0x4
test esi esi
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
push [ esi + 0x4 ]
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
test ecx ecx
je r-xdata
mov eax [ esp + 0x64 ]
mov edi [ esp + 0x44 ]
mov edx [ esp + 0x6c ]
mov [ esp + 0x24 ] esi
mov esi [ esp + 0x4c ]
cmp [ esp + 0x18 ] eax
jle r-xdata
mov eax [ edx + edi ]
movzx eax [ eax + 0x8 ]
cmp ax 0x47
jne r-xdata
test ecx ecx
je r-xdata
mov edx [ esp + 0x24 ]
mov eax [ edx + esi * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax 0x47
jne r-xdata
jmp [ eax * 4 + jump_table_44606c ]
mov [ esp + 0x8 ] 0x0
jmp r-xdata
mov ecx [ edi + 0x448 ]
mov eax 0xcccccccc
mov [ esp + 0x40 ] eax
test ecx ecx
je r-xdata
mov esi [ esp + 0x8 ]
jmp r-xdata
mov eax [ edi + 0x448 ]
test eax eax
je r-xdata
cmp eax [ edi + 0x43c ]
jb r-xdata
cmp eax 0x5
je r-xdata
lea ecx [ esp + 0x70 ]
mov [ esp + 0x70 ] 0x0
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x7c ] 0x1
call sub_409a20
mov eax [ esp + 0x94 ]
lea ecx [ esp + 0x12c ]
push r--data
mov [ esp + 0x80 ] 0x1
mov [ esp + 0x74 ] eax
call sub_407f41
push 0x1
lea eax [ esp + 0x74 ]
mov ecx rw-data
push eax
lea eax [ esp + 0x134 ]
push eax
call sub_408b13
lea ecx [ esp + 0x12c ]
call sub_405a64
lea ecx [ esp + 0x70 ]
call sub_409a20
mov eax [ esp + 0xa8 ]
lea ecx [ esp + 0xfc ]
push r--data
mov [ esp + 0x80 ] 0x7
mov [ esp + 0x74 ] eax
call sub_407f41
push 0x1
lea eax [ esp + 0x74 ]
mov ecx rw-data
push eax
lea eax [ esp + 0x104 ]
push eax
call sub_408b13
lea ecx [ esp + 0xfc ]
call sub_405a64
lea ecx [ esp + 0x70 ]
call sub_409a20
mov eax [ esp + 0xac ]
lea ecx [ esp + 0x11c ]
push r--data
mov [ esp + 0x80 ] 0x7
mov [ esp + 0x74 ] eax
call sub_407f41
push 0x1
lea eax [ esp + 0x74 ]
mov ecx rw-data
push eax
lea eax [ esp + 0x124 ]
push eax
call sub_408b13
lea ecx [ esp + 0x11c ]
call sub_405a64
mov [ edi + 0x458 ] 0x1
mov ecx edi
mov eax [ esi + 0x10 ]
push 0x0
push 0x1
inc eax
push eax
call sub_40b89c
lea ecx [ esp + 0x70 ]
mov [ edi + 0x458 ] 0x0
call sub_409a20
lea ecx [ esp + 0x98 ]
call sub_405a64
jmp r-xdata
inc [ rw-data ]
push 0x0
jmp r-xdata
push esi
call [ VariantClear@IAT ]
jmp r-xdata
lea ecx [ esi + 0x8 ]
jmp r-xdata
push ecx
mov ecx esi
call sub_408e34
jmp r-xdata
push esi
call j_sub_422ed5#3
add esp 0x4
push ecx
mov ecx esi
call sub_4571d0
jmp r-xdata
push ecx
mov ecx esi
call sub_4571e5
jmp r-xdata
mov ecx esi
mov eax [ esp + 0x14 ]
or edx 0x200
push 0x1
push edx
push [ eax ]
mov eax [ esp + 0x14 ]
mov eax [ eax + esi * 4 ]
push [ eax ]
call sub_408620
lea eax [ esi + 0x2 ]
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x8 ] eax
mov ecx edi
mov eax [ esp + 0x24 ]
add eax esi
mov [ esp + 0x30 ] 0x0
push eax
lea eax [ esp + 0x2c ]
mov [ esp + 0x38 ] 0x1
push eax
lea eax [ esp + 0x10 ]
push eax
push [ esp + 0x48 ]
call sub_40a000
test eax eax
js r-xdata
mov ecx edi
call sub_485f8e
jmp r-xdata
mov ecx edi
call sub_485f8e
jmp r-xdata
push 0x1
mov ecx edi
call sub_40b93d
push 0x1
mov ecx edi
call sub_40b93d
cmp [ edi + 0xf8 ] 0x8
jne r-xdata
lea eax [ esp + 0x40 ]
push eax
push ecx
call [ GetExitCodeProcess@IAT ]
cmp [ esp + 0x40 ] 0x103
jne r-xdata
mov [ esp + 0x8 ] 0x0
jmp r-xdata
cmp eax 0x6
je r-xdata
call [ Sleep@IAT ]
jmp r-xdata
call sub_405a64
mov ecx [ esp + 0x30 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x6c ]
or eax 0x200
push 0x1
push eax
lea eax [ esp + 0x30 ]
push eax
mov eax [ esp + 0x48 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
push [ eax ]
call sub_408620
mov ecx [ esp + 0x30 ]
test ecx ecx
je r-xdata
mov esi eax
test esi esi
jns r-xdata
mov esi eax
test esi esi
js r-xdata
mov eax esi
neg eax
push 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
push ecx
lea eax [ esp + 0xc ]
mov [ esp + 0xc ] 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fe53
test esi esi
jg r-xdata
je r-xdata
push 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
mov [ esp + 0x8 ] esi
fild [ esp + 0x8 ]
test esi esi
jns r-xdata
push [ edi + 0x448 ]
call [ CloseHandle@IAT ]
mov eax [ esp + 0x40 ]
mov [ edi + 0x448 ] 0x0
push 0x0
push [ edi + 0x448 ]
call [ WaitForSingleObject@IAT ]
test eax eax
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ edi + 0x448 ] 0x0
mov esi [ ebp + 0x8 ]
inc [ ebp + 0x8 ]
mov [ edi + 0xf4 ] esi
cmp esi [ rw-data ]
jg r-xdata
mov eax [ esp + 0x34 ]
cmp eax 0x5
jl r-xdata
push ecx
call sub_407b3d
mov [ esp + 0x30 ] 0x0
mov eax [ esp + 0x34 ]
cmp eax 0x5
jl r-xdata
push ecx
call sub_407b3d
mov [ esp + 0x30 ] 0x0
test esi esi
jle r-xdata
jmp r-xdata
push ecx
lea eax [ esp + 0xc ]
push eax
mov eax [ edi ]
fstp [ esp + 0x10 ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_47ca41
jmp r-xdata
fadd [ r--data ]
mov [ edi + 0xf8 ] 0x1
jmp r-xdata
test esi esi
jle r-xdata
mov [ esp + 0x34 ] 0x1
mov [ esp + 0x28 ] 0x0
add eax 0xfffffffb
cmp eax 0xa
ja r-xdata
mov [ esp + 0x34 ] 0x1
mov [ esp + 0x28 ] 0x0
jmp r-xdata
add eax 0xfffffffb
cmp eax 0xa
ja r-xdata
mov ecx [ edi + 0x2f4 ]
mov [ edi + 0x144 ] 0x1
mov [ edi + 0xf8 ] 0x0
call sub_4652eb
jmp r-xdata
mov eax [ edi + 0xf8 ]
cmp eax 0x5
je r-xdata
push [ edi + 0x2f4 ]
mov [ edi + 0x144 ] 0x1
mov [ edi + 0xf8 ] 0x0
call [ Sleep@IAT ]
jmp r-xdata
shl esi 0x4
add esi [ rw-data ]
je r-xdata
jmp [ eax * 4 + r-xdata ]
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
inc eax
add [ esp + 0x14 ] 0x4
add esi eax
mov eax [ esp + 0x18 ]
inc eax
mov [ esp + 0x4c ] esi
mov [ esp + 0x18 ] eax
cmp eax [ ecx + 0x14 ]
jle r-xdata
jmp [ eax * 4 + r-xdata ]
mov eax [ edi + 0x1f0 ]
lea ecx [ esp + 0xc8 ]
mov [ esp + 0xc8 ] 0x0
mov [ esp + 0xd0 ] 0x0
mov [ esp + 0xd4 ] 0x1
mov esi [ eax ]
call sub_409a20
push 0x0
lea eax [ esp + 0xcc ]
mov [ esp + 0xd8 ] 0x7
push eax
mov eax [ edi ]
mov [ esp + 0xd0 ] esi
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456830
lea ecx [ esp + 0xc8 ]
call sub_409a20
cmp eax 0x3
jne r-xdata
mov eax [ esi + 0x4 ]
xor edx edx
mov ecx 0x1
mov [ esp + 0x50 ] edx
mov [ esp + 0x58 ] edx
mov [ esp + 0x5c ] ecx
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov [ esp + 0x14 ] edx
mov [ esp + 0x20 ] edx
movsx eax [ eax + 0x8 ]
test eax eax
jne r-xdata
cmp eax 0x33
jne r-xdata
lea eax [ ebp + 0x8 ]
mov ecx edi
push eax
push esi
call sub_40e580
dec eax
cmp eax 0x7e
ja r-xdata
push esi
mov ecx edi
call sub_40e800
jmp r-xdata
mov eax [ esi + 0xc ]
dec [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ esp + 0x50 ]
mov ecx [ esp + 0x5c ]
mov [ esp + 0x14 ] edx
push 0xffffffff
lea eax [ esp + 0x54 ]
mov ecx edi
push eax
lea eax [ esp + 0x28 ]
push eax
push esi
call sub_40a000
jmp r-xdata
movzx eax [ eax + lookup_table_411124 ]
jmp [ eax * 4 + jump_table_411110 ]
mov esi [ esp + 0x58 ]
test esi esi
jne r-xdata
push [ esi ]
call j_sub_422ed5#3
add esp 0x4
push [ esi + 0xc ]
call j_sub_422ed5#3
add esp 0x4
jmp r-xdata
push esi
call j_sub_422ed5#3
add esp 0x4
mov [ esp + 0x58 ] 0x0
jmp r-xdata
add ecx 0xfffffffb
cmp ecx 0xa
ja r-xdata
test eax eax
js r-xdata
cmp ecx 0x5
jge r-xdata
lea eax [ esp + 0x50 ]
mov ecx edi
push eax
lea eax [ esp + 0x24 ]
push eax
push esi
push 0x0
call sub_40f5c0
lea eax [ esp + 0x6b ]
mov ecx edi
push eax
lea eax [ esp + 0x54 ]
push eax
lea eax [ esp + 0x28 ]
push eax
push esi
push 0x0
call sub_40fe40
jmp r-xdata
lea ecx [ edi + 0x168 ]
call sub_47c0f7
mov ecx eax
call sub_456241
test al al
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
mov ecx [ esi + 0x4 ]
mov eax [ esp + 0x20 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
lea ecx [ edi + 0x168 ]
call sub_47c0f7
push eax
lea eax [ esp + 0x24 ]
mov ecx edi
push eax
push esi
call sub_47b651
jmp r-xdata
mov eax [ esp + 0x8 ]
mov ecx edi
movsx eax [ eax + 0xa ]
push eax
push 0xa7
call sub_469ed4
lea ecx [ esp + 0x50 ]
call sub_409df0
jmp r-xdata
jmp r-xdata
movsx eax [ eax + 0xa ]
mov ecx edi
push eax
push 0x72
call sub_469ed4
lea ecx [ esp + 0x50 ]
call sub_409df0
jmp r-xdata
sub_4561e1
push ebp
mov ebp esp
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
call sub_4077c7
mov edx [ ebp + 0xc ]
cmp edx [ edi + 0x4 ]
jbe r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx 0xffffffff
je r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
sub ecx edx
mov eax [ edi + 0x4 ]
sub eax edx
cmp ecx eax
jbe r-xdata
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push edi
call sub_4079ab
mov eax [ ebp + 0x8 ]
pop edi
pop ebp
retn 0xc
sub_456223
push esi
push 0x4
mov esi ecx
call sub_420f36
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] 0x1
jmp r-xdata
mov [ esi + 0xc ] eax
pop esi
retn
sub_45625a
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
jle r-xdata
pop esi
pop ebp
retn 0x4
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0x3
jle r-xdata
call sub_409488
cmp eax 0x4
je r-xdata
mov ecx edi
call sub_409997
push [ edi + 0x8 ]
mov ecx [ esi + 0x8 ]
call sub_407c8e
cmp eax 0x7
je r-xdata
cmp eax 0x8
jle r-xdata
pop edi
cmp eax 0xa
jle r-xdata
cmp eax 0xb
jne r-xdata
cmp [ edi + 0xc ] eax
jne r-xdata
push edi
call sub_409700
jmp r-xdata
sub_4562b3
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
jle r-xdata
mov ecx esi
call sub_40997f
mov eax esi
pop esi
pop ebp
retn 0x4
cmp eax 0x2
jle r-xdata
call sub_409593
cmp eax 0x3
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_409cf8
fdivr [ esi ]
fstp [ esi ]
cmp eax 0x4
je r-xdata
cmp eax 0x9
je r-xdata
cmp eax 0xb
jne r-xdata
sub_4562f8
push esi
mov esi ecx
call sub_409c42
test al al
jne r-xdata
xor eax eax
inc eax
pop esi
retn
cmp [ esi + 0xc ] 0x3
je r-xdata
xor eax eax
pop esi
retn
sub_456334
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
and [ esi + 0x8 ] 0x0
pop edi
pop esi
retn
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
and [ eax + edi * 4 ] 0x0
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push ecx
call sub_45631f
sub_456363
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
jne r-xdata
push 0x10
call sub_420f36
mov edi eax
pop ecx
test edi edi
je r-xdata
lea ecx [ eax + eax ]
push 0x8
pop eax
cmp ecx eax
jb r-xdata
xor edi edi
push [ ebp + 0x8 ]
and [ edi + 0x8 ] 0x0
mov ecx edi
call sub_409ac0
jmp r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
cmp [ esi + 0x4 ] 0x0
mov edi eax
pop ecx
je r-xdata
mov eax ecx
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edi
inc [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] edi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_420fc0
push [ esi + 0x4 ]
call j_sub_422ed5#3
add esp 0x10
sub_45640b
mov eax [ ecx ]
mov edx [ eax + 0x10c ]
cmp edx [ eax + 0x210 ]
je r-xdata
xor ecx ecx
push esi
test edx edx
jle r-xdata
xor al al
retn
mov al 0x1
pop esi
retn
add eax 0x110
xor al al
pop esi
retn
cmp esi [ eax - 0x104 ]
jge r-xdata
inc ecx
add eax 0x4
cmp ecx edx
jl r-xdata
mov esi [ eax ]
test esi esi
js r-xdata
sub_456448
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ecx ]
push edi
mov edi [ esi + 0x8 ]
test edi edi
jne r-xdata
call sub_45640b
test al al
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0x10c ]
push ebx
xor ebx ebx
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax ebx
pop ebx
mov ecx 0x110
mov [ ebp - 0x4 ] ecx
mov eax edi
cdq
idiv [ ecx + esi - 0x104 ]
mov ecx [ ecx + esi ]
mov edi eax
imul ecx edi
add ebx ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x4
dec [ ebp - 0x8 ]
mov [ ebp - 0x4 ] ecx
jne r-xdata
sub_4564a9
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
push edi
mov edi 0x7fffffff
mov ecx [ esi ]
mov eax [ ecx ]
cmp eax ebx
jle r-xdata
cmp [ ebp + 0x8 ] 0x2
mov eax [ esi ]
jne r-xdata
cmp eax edi
je r-xdata
mov [ eax ] edi
cmp [ eax ] edi
je r-xdata
dec eax
mov [ ecx ] eax
mov ecx esi
push esi
call sub_408d3b
mov eax [ esi ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ eax ] ebx
jmp r-xdata
sub_456511
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ecx + 0x28 ]
jl r-xdata
lea edx [ ebp + 0x8 ]
push edx
mov edx [ ecx + 0x20 ]
push eax
push [ ecx + 0x28 ]
mov ecx [ ecx ]
call sub_48e6a9
mov ecx [ ebp + 0xc ]
add esp 0xc
push eax
push 0x0
push [ ebp + 0x8 ]
call sub_4078ad
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
mov ecx [ ebp + 0xc ]
push 0xffffffff
push 0x0
call sub_407e8c
jmp r-xdata
pop ebp
retn 0x8
sub_45655b
push ebp
mov ebp esp
sub esp 0x11c
and [ ebp - 0x18 ] 0x0
xor edx edx
and [ ebp - 0x10 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov eax [ ebx + 0x4 ]
mov edi ecx
mov [ ebp - 0xc ] 0x1
mov ecx [ esi ]
push 0x4e
mov [ ebp - 0x4 ] edx
pop edx
mov eax [ eax + ecx * 4 - 0x4 ]
push 0x0
movsx eax [ eax + 0xa ]
mov [ ebp + 0xc ] eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
or ecx 0xffffffff
cmp [ eax + 0x8 ] dx
pop edx
jne r-xdata
mov ebx [ ebp + 0x10 ]
mov ecx [ ebx ]
cmp [ ecx + 0xc ] 0x5
jne r-xdata
inc [ esi ]
mov eax [ esi ]
mov edx [ ebx + 0x4 ]
push ecx
mov ecx edi
mov eax [ edx + eax * 4 ]
movsx eax [ eax + 0xa ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp - 0x18 ]
push eax
push esi
push ebx
call sub_40a000
test eax eax
js r-xdata
xor ecx ecx
mov ecx [ ecx ]
jmp r-xdata
or esi 0xffffffff
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_409c9c
test eax eax
js r-xdata
push 0x0
push [ ebp + 0x14 ]
push ecx
call sub_408ea0
add esp 0xc
mov [ ebx ] eax
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ecx ]
xor esi esi
and [ eax + 0x210 ] 0x0
test edx edx
jle r-xdata
lea ecx [ ebp - 0x18 ]
call sub_409a20
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x4f
jne r-xdata
xor esi esi
push [ ebp + 0xc ]
push 0x7a
push [ ebp + esi * 4 - 0x118 ]
call sub_40928c
inc esi
cmp esi ebx
jl r-xdata
mov ebx [ ebp + 0x10 ]
push 0x7b
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 - 0x4 ]
movsx eax [ eax + 0xa ]
push eax
lea eax [ ecx + 0x1 ]
lea ecx [ ebp - 0x18 ]
mov [ esi ] eax
call sub_409c9c
mov edx [ ebp - 0x4 ]
mov ecx [ ebx + 0x4 ]
push 0x4e
mov [ ebp + edx * 4 - 0x118 ] eax
inc edx
mov eax [ esi ]
mov [ ebp - 0x4 ] edx
mov eax [ ecx + eax * 4 ]
pop ecx
push 0xffffffff
cmp [ eax + 0x8 ] cx
pop ecx
je r-xdata
mov ecx edi
call sub_469ed4
sub_45669f
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x0
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi + 0xf4 ]
lea esi [ edi + 0x15c ]
mov ebx [ esi ]
mov [ ebp - 0x4 ] eax
je r-xdata
push [ ebp + 0x8 ]
mov ecx edi
call sub_410b30
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_408561
cmp ebx [ esi ]
jb r-xdata
mov ecx rw-data
call sub_40843f
jmp r-xdata
mov ecx esi
call sub_41fd0f
mov eax [ ebp - 0x4 ]
mov [ edi + 0xf4 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_456700
push ebp
mov ebp esp
sub esp 0x1c
cmp [ rw-data ] 0x0
push edi
mov edi ecx
je r-xdata
xor eax eax
cmp [ rw-data ] al
je r-xdata
cmp [ edi + 0x145 ] 0x0
jne r-xdata
push 0x1
push eax
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ PeekMessageW@IAT ]
test eax eax
je r-xdata
cmp [ edi + 0xf8 ] eax
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
push esi
xor esi esi
pop edi
mov esp ebp
pop ebp
retn
mov al [ rw-data ]
xor eax eax
mov [ edi + 0xf8 ] 0x1
mov [ rw-data ] al
mov [ rw-data ] al
jmp r-xdata
mov [ edi + 0xfc ] 0x1
mov [ edi + 0xf8 ] 0x1
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
movzx eax al
neg eax
sbb eax eax
and eax 0xb
xor eax eax
inc eax
jmp r-xdata
cmp [ edi + 0xf8 ] 0x1
jne r-xdata
lea eax [ ebp - 0x1c ]
mov ecx rw-data
push eax
call sub_4031ce
test eax eax
jne r-xdata
cmp ecx [ rw-data ]
jge r-xdata
push 0x1
push esi
push esi
push esi
lea eax [ ebp - 0x1c ]
push eax
call [ PeekMessageW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageW@IAT ]
or [ rw-data ] 0xffffffff
mov eax [ rw-data ]
mov ecx [ eax + ecx * 4 ]
mov eax [ ecx ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x12
je r-xdata
jmp r-xdata
cmp [ eax + 0x18 ] esi
je r-xdata
pop esi
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ecx ]
push [ eax + 0x18 ]
push [ eax ]
call [ TranslateAcceleratorW@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
sub_456830
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
lea esi [ ecx + 0x4 ]
mov ecx esi
call sub_41feda
mov ecx eax
call sub_409e9c
mov ecx esi
call sub_41feda
mov cl [ ebp + 0xc ]
pop esi
mov [ eax + 0x10 ] cl
pop ebp
retn 0x8
sub_45685a
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
lea esi [ ecx + 0x4 ]
mov ecx esi
call sub_41feda
lea ecx [ eax + 0x20 ]
call sub_409e9c
mov ecx esi
call sub_41feda
pop esi
mov [ eax + 0x30 ] 0x0
pop ebp
retn 0x8
sub_456883
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x4 ]
mov ecx esi
call sub_41feda
mov edx [ ebp + 0x8 ]
mov ecx esi
mov [ eax + 0x14 ] edx
call sub_41feda
mov cl [ ebp + 0xc ]
pop esi
mov [ eax + 0x18 ] cl
pop ebp
retn 0x8
sub_4568a9
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ax [ edi + 0x8 ]
mov [ esi + 0x8 ] ax
mov ax [ edi + 0xa ]
mov [ esi + 0xa ] ax
call sub_405f8a
test al al
je r-xdata
movzx eax [ esi + 0x8 ]
cmp ax 0x10
jne r-xdata
push 0x10
call sub_420f36
mov edx eax
pop ecx
test edx edx
je r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
xor edx edx
mov eax [ edi ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
jmp r-xdata
mov eax [ edi ]
mov [ esi ] eax
fld [ edi ]
fstp [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi ] edx
jmp r-xdata
sub_45693f
movzx eax [ ecx + 0x8 ]
cmp ax 0x41
je r-xdata
xor eax eax
inc eax
retn
cmp ax 0x52
je r-xdata
cmp ax 0x53
je r-xdata
cmp ax 0x54
je r-xdata
cmp ax 0x55
je r-xdata
cmp ax 0x56
je r-xdata
xor eax eax
retn
sub_45698e
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_402612
mov ecx [ rw-data ]
push 0xf
mov eax [ ecx + eax * 4 ]
mov esi [ eax ]
call [ GetSysColor@IAT ]
cmp [ esi + 0x4c ] 0xffffffff
mov edi eax
je r-xdata
push edi
push [ ebp + 0xc ]
call [ SetBkColor@IAT ]
push 0x0
push edi
call sub_4022d0
pop edi
pop esi
pop ebp
retn 0x10
mov edi [ esi + 0x4c ]
sub_4569d6
push ebp
mov ebp esp
push edi
lea edi [ ecx + 0x2c ]
cmp [ edi ] 0x0
je r-xdata
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov eax [ ecx + 0x30 ]
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ eax ]
push esi
call sub_486081
mov ecx edi
call sub_40467d
test esi esi
je r-xdata
xor al al
cmp [ rw-data ] 0x0
jne r-xdata
and [ rw-data ] 0x0
mov al 0x1
pop esi
jmp r-xdata
push ecx
mov ecx esi
call sub_404665
push 0xa
mov eax [ rw-data ]
cmp eax 0x64
jge r-xdata
pop edi
pop ebp
retn 0x4
inc eax
mov [ rw-data ] eax
push 0x0
jmp r-xdata
call [ Sleep@IAT ]
sub_456a42
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
jne r-xdata
push 0x1
call sub_420f36
mov edx eax
pop ecx
test edx edx
je r-xdata
lea ecx [ eax + eax ]
push 0x8
pop eax
cmp ecx eax
jb r-xdata
xor edx edx
mov ecx [ ebp + 0x8 ]
mov cl [ ecx ]
mov [ edx ] cl
jmp r-xdata
push edi
xor ecx ecx
mov [ esi + 0xc ] eax
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
cmp [ esi + 0x4 ] 0x0
mov edi eax
pop ecx
je r-xdata
mov eax ecx
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edx
inc [ esi + 0x8 ]
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] edi
pop edi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_420fc0
push [ esi + 0x4 ]
call j_sub_422ed5#3
add esp 0x10
sub_456ae3
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edx [ esi ]
mov ecx [ edx + 0x10c ]
test ecx ecx
je r-xdata
xor al al
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
cmp ecx [ eax + 0x10c ]
jne r-xdata
push ebx
xor ebx ebx
test ecx ecx
jle r-xdata
mov ecx edi
call sub_456448
test eax eax
js r-xdata
mov ecx 0x110
mov eax [ esi ]
xor ecx ecx
mov [ ebp + 0x8 ] ecx
cmp [ eax + 0x10c ] ecx
jle r-xdata
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
mov ebx [ ecx + eax * 4 ]
test ebx ebx
je r-xdata
and [ ecx + edx ] 0x0
mov eax [ edi ]
and [ ecx + eax ] 0x0
inc ebx
mov edx [ esi ]
lea ecx [ ecx + 0x4 ]
cmp ebx [ edx + 0x10c ]
jl r-xdata
mov eax [ esi ]
cmp ecx [ eax + 0x10c ]
jl r-xdata
mov ebx 0x110
push 0x0
push 0x2
push esi
call sub_408ea0
add esp 0xc
test eax eax
je r-xdata
mov al 0x1
pop ebx
jmp r-xdata
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
and [ ebx + eax ] 0x0
mov eax [ edi ]
and [ ebx + eax ] 0x0
inc ecx
mov eax [ esi ]
add ebx 0x4
mov [ ebp + 0x8 ] ecx
cmp ecx [ eax + 0x10c ]
jl r-xdata
mov ecx edi
call sub_45640b
test al al
jne r-xdata
push ebx
mov ecx eax
call sub_409e9c
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
mov ecx esi
inc [ ebx + eax ]
mov eax [ edi ]
inc [ ebx + eax ]
call sub_45640b
test al al
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sub_456bd3
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
mov esi ecx
xor ebx ebx
push esi
mov [ ebp - 0x8 ] ebx
call [ VariantInit@IAT ]
mov edi [ ebp + 0x8 ]
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov eax [ edi + 0xc ]
lea ecx [ eax - 0x1 ]
cmp ecx 0xe
ja r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
jmp [ ecx * 4 + jump_table_456e0b ]
push 0xb
pop eax
mov ecx edi
mov [ esi ] ax
call sub_409c53
test al al
je r-xdata
push 0x3
pop eax
mov ecx edi
mov [ esi ] ax
call sub_409c9c
jmp r-xdata
push 0x5
pop eax
mov ecx edi
mov [ esi ] ax
call sub_409cf8
fstp [ esi + 0x8 ]
jmp r-xdata
push 0x14
pop eax
mov ecx edi
mov [ esi ] ax
call sub_409d46
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
push 0x13
pop eax
mov ecx edi
mov [ esi ] ax
call sub_4687da
jmp r-xdata
push 0x8
pop eax
mov ecx edi
mov [ esi ] ax
call sub_409997
mov eax [ edi + 0x8 ]
push [ eax ]
call [ SysAllocString@IAT ]
jmp r-xdata
mov eax 0x200c
push edi
mov [ esi ] ax
call sub_456eee
jmp r-xdata
cmp eax 0x8
jne r-xdata
cmp eax 0x6
jne r-xdata
push 0x29
mov ecx edi
call sub_409dae
test al al
je r-xdata
mov eax 0x2011
push edi
mov [ esi ] ax
call sub_457060
push 0x24
pop eax
push 0x28
mov [ esi ] ax
mov [ esi + 0x8 ] ebx
call sub_420f36
pop ecx
test eax eax
je r-xdata
push 0x24
pop eax
push 0x28
mov [ esi ] ax
mov [ esi + 0x8 ] ebx
call sub_420f36
pop ecx
test eax eax
je r-xdata
push 0x24
pop eax
push 0x28
mov [ esi ] ax
mov [ esi + 0x8 ] ebx
call sub_420f36
mov edx eax
pop ecx
test edx edx
je r-xdata
push 0x24
pop eax
push 0x28
mov [ esi ] ax
mov [ esi + 0x8 ] ebx
call sub_420f36
mov [ ebp + 0x8 ] eax
pop ecx
test eax eax
je r-xdata
xor eax eax
or eax 0xffffffff
jmp r-xdata
mov [ esi + 0x8 ] eax
jmp r-xdata
test ebx ebx
je r-xdata
mov ebx [ edi ]
push ebx
lea ecx [ ebp - 0x1c ]
call sub_456bd3
push eax
mov ecx esi
call sub_456ea0
lea eax [ ebp - 0x1c ]
push eax
call [ VariantClear@IAT ]
jmp r-xdata
mov ebx [ edi ]
push 0x2a
mov ecx edi
call sub_409dae
test al al
je r-xdata
push 0xa
pop eax
mov [ esi ] ax
mov [ esi + 0x8 ] 0x80020004
jmp r-xdata
mov [ esi + 0xc ] ebx
jmp r-xdata
cmp [ edi + 0xc ] 0xc
jne r-xdata
cmp [ edi + 0xc ] 0xf
jne r-xdata
mov ecx edi
call sub_4679b4
push eax
mov ecx edx
call sub_457103
mov eax ebx
lea eax [ ebp - 0x2c ]
xor ebx ebx
push eax
mov ecx edi
inc ebx
call sub_4679c3
mov ecx [ ebp + 0x8 ]
push eax
call sub_4570c5
jmp r-xdata
mov [ esi + 0x8 ] ax
jmp r-xdata
push ebx
push esi
call [ VariantCopy@IAT ]
jmp r-xdata
xor eax eax
inc eax
mov [ esi ] ax
jmp r-xdata
push ebx
mov ecx eax
call sub_45713a
jmp r-xdata
mov ebx [ edi ]
push ebx
mov ecx eax
call sub_457185
jmp r-xdata
mov ebx [ edi ]
lea ecx [ ebp - 0x2c ]
call sub_405a64
mov [ esi + 0xc ] eax
test bl 0x1
je r-xdata
mov ebx eax
sub_456e47
push ebp
mov ebp esp
sub esp 0x18
push esi
push [ ebp + 0x8 ]
mov esi ecx
lea ecx [ ebp - 0x14 ]
call sub_456bd3
push eax
mov ecx esi
call sub_456ea0
lea eax [ ebp - 0x14 ]
push eax
call [ VariantClear@IAT ]
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_456ebc
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push esi
push [ ebp + 0x8 ]
mov esi ecx
lea ecx [ esp + 0xc ]
call sub_456bd3
push eax
mov ecx esi
call sub_456ea0
lea eax [ esp + 0x8 ]
push eax
call [ VariantClear@IAT ]
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_456eee
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ esi + 0xc ] 0x5
jne r-xdata
xor eax eax
mov eax [ esi ]
mov eax [ eax ]
mov ebx [ eax + 0x10c ]
lea eax [ ebp + 0x8 ]
push eax
push ebx
push 0xc
call [ SafeArrayAllocDescriptorEx@IAT ]
test eax eax
js r-xdata
xor edi edi
mov ecx edi
test ebx ebx
jle r-xdata
mov eax [ ebp + 0x8 ]
mov ecx 0x880
mov [ eax + 0x2 ] cx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x10
push [ ebp + 0x8 ]
call [ SafeArrayAllocData@IAT ]
test eax eax
js r-xdata
mov eax [ ebp + 0x8 ]
mov edx ecx
inc ecx
push ecx
mov [ ebp - 0x8 ] ecx
mov ecx esi
mov [ eax + edx * 8 + 0x14 ] edi
call sub_456313
mov ecx eax
call sub_408e6b
mov ecx [ ebp + 0x8 ]
mov [ ecx + edx * 8 + 0x10 ] eax
mov ecx [ ebp - 0x8 ]
cmp ecx ebx
jl r-xdata
push [ ebp + 0x8 ]
call [ SafeArrayDestroyDescriptor@IAT ]
lea eax [ ebp - 0x2c ]
push eax
call [ VariantInit@IAT ]
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] edi
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] 0x1
call [ SafeArrayAccessData@IAT ]
test eax eax
js r-xdata
push [ ebp + 0x8 ]
call [ SafeArrayDestroyData@IAT ]
push [ ebp + 0x8 ]
call [ SafeArrayDestroyDescriptor@IAT ]
lea ecx [ ebp - 0x1c ]
call sub_409a20
lea eax [ ebp - 0x2c ]
push eax
call [ VariantClear@IAT ]
jmp r-xdata
mov ebx [ ebp - 0x8 ]
lea ecx [ ebp - 0x1c ]
push esi
call sub_409e9c
mov esi [ ebp - 0x10 ]
sub esi 0x5
neg esi
push 0x2
sbb esi esi
not esi
and esi [ ebp - 0x1c ]
mov ecx esi
call sub_4564a9
mov eax [ esi ]
mov esi [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
test esi esi
jle r-xdata
push [ ebp + 0x8 ]
call [ SafeArrayUnaccessData@IAT ]
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_409a20
lea eax [ ebp - 0x2c ]
push eax
call [ VariantClear@IAT ]
mov eax esi
jmp r-xdata
cmp [ ecx + edi * 4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc edi
add ebx 0x10
cmp edi esi
jl r-xdata
push [ ecx + edi * 4 ]
lea ecx [ ebp - 0x2c ]
call sub_456ebc
lea eax [ ebp - 0x2c ]
push eax
push ebx
call [ VariantCopy@IAT ]
mov ecx [ ebp - 0xc ]
sub_457060
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0x18
push esi
call sub_468801
push eax
push 0x0
push 0x11
call [ SafeArrayCreateVector@IAT ]
mov esi eax
test esi esi
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
and [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x14 ]
add esi 0x18
call sub_409ac0
mov ecx [ ebp + 0x8 ]
call sub_468801
push eax
push ecx
lea ecx [ ebp - 0x14 ]
call sub_4687be
pop ecx
push eax
push esi
call sub_420fc0
add esp 0xc
lea ecx [ ebp - 0x14 ]
call sub_409a20
lea eax [ esi - 0x18 ]
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4570c5
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
and [ edi + 0xc ] 0x0
lea ecx [ edi + 0x18 ]
and [ edi + 0x10 ] 0x0
mov [ edi ] r--data
mov [ edi + 0x4 ] 0x1
call sub_4077c7
push [ ebp + 0x8 ]
lea ecx [ edi + 0x18 ]
call sub_4081a7
mov [ edi + 0x8 ] 0xe
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_457103
push ebp
mov ebp esp
push esi
mov esi ecx
and [ esi + 0xc ] 0x0
lea ecx [ esi + 0x18 ]
and [ esi + 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x4 ] 0x1
call sub_4077c7
mov eax [ ebp + 0x8 ]
mov [ esi + 0x14 ] eax
mov eax esi
mov [ esi + 0x8 ] 0xd
pop esi
pop ebp
retn 0x4
sub_45713a
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
xor edi edi
mov [ esi ] r--data
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x10 ] edi
call sub_4077c7
push 0x14
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov [ esi + 0xc ] edi
mov eax esi
pop edi
mov [ esi + 0x8 ] 0xc
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
mov ecx eax
call sub_465a7c
mov edi eax
sub_457185
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
xor edi edi
mov [ esi ] r--data
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] 0x1
mov [ esi + 0xc ] edi
call sub_4077c7
push 0x18
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov [ esi + 0x10 ] edi
mov eax esi
pop edi
mov [ esi + 0x8 ] 0xf
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
mov ecx eax
call sub_4618a5
mov edi eax
sub_4571fa
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
mov [ esi ] r--data
test ecx ecx
je r-xdata
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
push ecx
call sub_4571d0
lea ecx [ esi + 0x18 ]
call sub_405a64
push esi
call j_sub_422ed5#3
pop ecx
mov eax esi
pop esi
retn 0x4
push ecx
call sub_4571e5
sub_457232
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
mov eax 0x80004001
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0xc
jne r-xdata
push 0x16
pop edx
mov [ ecx ] dx
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
dec eax
shr eax 0x2
inc eax
mov [ ecx + 0x8 ] eax
xor eax eax
jmp r-xdata
pop ebp
retn 0x10
sub_457272
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
mov eax 0x80070057
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax 0x8000
mov [ esi ] ax
or ax [ ecx + 0x8 ]
mov [ esi ] ax
mov eax [ ecx + 0x8 ]
sub eax 0xc
je r-xdata
mov eax [ ecx + 0xc ]
dec eax
je r-xdata
pop esi
pop ebp
retn 0x14
mov eax [ ecx + 0x14 ]
jmp r-xdata
dec eax
je r-xdata
mov [ esi + 0x8 ] eax
xor eax eax
jmp r-xdata
push [ ecx + 0x18 ]
call [ SysAllocString@IAT ]
jmp r-xdata
mov eax [ ecx + 0x10 ]
jmp r-xdata
sub_4572d8
push ebp
mov ebp esp
push 0x10
push r--data
push [ ebp + 0xc ]
call sub_421604
add esp 0xc
test eax eax
je r-xdata
push esi
mov esi [ ebp + 0x8 ]
push esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] esi
xor eax eax
pop esi
push 0x10
push r--data
push [ ebp + 0xc ]
call sub_421604
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004002
jmp r-xdata
pop ebp
retn 0xc
sub_457324
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x4 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
xor eax eax
push ecx
mov ecx esi
call sub_4571fa
sub_457359
push ebp
mov ebp esp
push ecx
push ecx
test ecx ecx
jne r-xdata
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
push esi
push edi
push 0x1d
pop esi
lea edi [ ebp - 0x4 ]
push edi
push edx
push ecx
call [ eax + 0x38 ]
test eax eax
jns r-xdata
push 0x80070057
call sub_457411
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x8 ]
and [ ebp - 0x8 ] 0x0
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x8 ]
test eax eax
js r-xdata
mov ecx edi
call sub_45734c
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
pop edi
mov ax si
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ edx + 0x28 ]
cmp eax 0x6
je r-xdata
mov edx [ ecx ]
push ecx
call [ edx + 0x8 ]
movzx ecx [ edx + 0x40 ]
cmp cx si
jne r-xdata
test eax eax
jne r-xdata
sub eax 0x0
je r-xdata
mov edx [ edx + 0x3c ]
mov ecx [ ebp - 0x4 ]
call sub_457359
mov edx [ ebp - 0x8 ]
movzx esi ax
jmp r-xdata
push 0x3
sub eax 0x3
je r-xdata
push 0xd
jmp r-xdata
dec eax
je r-xdata
pop esi
push 0x9
jmp r-xdata
mov esi ecx
jmp r-xdata
sub_457432
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax edx
mov [ ebp - 0x4 ] eax
mov ebx ecx
push edi
test esi esi
je r-xdata
push eax
push ebx
call [ CLSIDFromProgID@IAT ]
mov edi eax
test edi edi
js r-xdata
mov [ esi ] 0x1
push [ ebp - 0x4 ]
push ebx
call [ CLSIDFromString@IAT ]
mov edi eax
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
push [ ebp - 0x4 ]
call [ ProgIDFromCLSID@IAT ]
test eax eax
js r-xdata
push [ ebp + 0x8 ]
push ebx
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ CoTaskMemFree@IAT ]
jmp r-xdata
and [ esi ] 0x0
sub_4574a5
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi edx
xor ebx ebx
xor edx edx
mov [ eax ] ebx
mov [ eax + 0xc ] edx
lea edx [ ebp - 0x4 ]
mov eax [ ecx ]
push edx
push 0x800
push ebx
push ecx
mov [ ebp - 0x4 ] ebx
call [ eax + 0x10 ]
mov esi eax
mov eax [ ebp - 0x4 ]
test esi esi
js r-xdata
test eax eax
je r-xdata
test eax eax
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ ebp - 0x8 ] ebx
lea edx [ ebp - 0xc ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0xc ]
mov esi eax
test esi esi
js r-xdata
mov esi 0x80004001
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
cmp [ edx + 0x28 ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x14 ]
or [ ebp - 0x14 ] 0xffffffff
push edx
push 0x1
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
push eax
call [ ecx + 0x28 ]
test eax eax
jns r-xdata
test [ edx + 0x36 ] 0x40
je r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov edi ebx
cmp cx [ eax + 0x2c ]
jae r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x18 ]
push edx
push 0x1
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] ebx
mov ecx [ eax ]
push edx
push edi
push eax
call [ ecx + 0x1c ]
test eax eax
js r-xdata
mov eax [ ebp - 0x4 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x18 ]
push edx
push 0xffffffff
push eax
mov ecx [ eax ]
call [ ecx + 0x20 ]
test eax eax
mov eax [ ebp - 0x4 ]
jns r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp - 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x8 ]
push ecx
movzx ecx di
push ecx
mov edx [ eax ]
push eax
call [ edx + 0x14 ]
mov esi eax
test esi esi
js r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov edi ebx
cmp cx [ eax + 0x2c ]
jae r-xdata
push [ ebp - 0x10 ]
call [ SysFreeString@IAT ]
mov [ ebp - 0x14 ] edi
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] ebx
mov ecx [ eax ]
push edx
push [ ebp - 0x18 ]
push eax
call [ ecx + 0x38 ]
test eax eax
jns r-xdata
mov esi 0x80004005
jmp r-xdata
mov esi 0x80004005
jmp r-xdata
cmp [ edx + 0x18 ] 0x20
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
test [ edx + 0x10 ] 0x3
je r-xdata
mov ebx [ SysFreeString@IAT ]
mov eax [ ebp - 0x4 ]
mov esi [ ebp - 0x10 ]
cmp eax esi
je r-xdata
mov esi 0x80004005
jmp r-xdata
mov esi [ ebp + 0x10 ]
xor eax eax
mov [ esi ] 0x1
cmp ax [ edx + 0x18 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0xc ]
inc edi
mov [ ebp - 0x8 ] ebx
cmp di [ eax + 0x2c ]
jb r-xdata
mov eax [ edx ]
cmp eax [ ebp - 0x14 ]
je r-xdata
push [ ebp - 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
jmp r-xdata
mov edx [ eax ]
lea ecx [ ebp - 0x10 ]
xor esi esi
push esi
push esi
push esi
push ecx
mov ecx [ ebp - 0x8 ]
push [ ecx ]
push eax
call [ edx + 0x30 ]
mov eax [ ebp - 0x8 ]
test [ eax + 0x10 ] 0x3
je r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0xc ]
push edx
push eax
call [ ecx + 0xc ]
mov esi eax
test esi esi
jns r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
movzx ecx [ edx + 0x24 ]
mov eax ecx
sub eax 0x16
je r-xdata
xor edi edi
add esi 0x10
push [ ebp - 0x10 ]
call ebx
mov eax [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0xc ]
inc edi
mov [ ebp - 0x8 ] esi
cmp di [ eax + 0x2c ]
jb r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
mov ecx eax
mov eax esi
mov [ ebp - 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
push 0x3
dec eax
je r-xdata
cmp [ esi ] 0x1b
jne r-xdata
mov eax [ edx + 0x8 ]
mov ecx 0x4000
mov eax [ eax + edi ]
or cx [ eax + 0x4 ]
mov [ esi ] cx
mov eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x8 ]
push ecx
movzx ecx di
push ecx
mov edx [ eax ]
push eax
call [ edx + 0x14 ]
mov esi eax
mov eax [ ebp - 0x4 ]
test esi esi
js r-xdata
jmp r-xdata
push [ ebp - 0x10 ]
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
push 0x13
jmp r-xdata
dec eax
je r-xdata
cmp [ esi ] 0x1d
jne r-xdata
mov eax [ edx + 0x8 ]
mov ecx 0x2000
mov eax [ eax + edi ]
or cx [ eax + 0x4 ]
mov [ esi ] cx
xor ebx ebx
jmp r-xdata
pop ecx
xor ecx ecx
jmp r-xdata
dec eax
jne r-xdata
mov eax [ edx + 0x8 ]
inc ebx
mov ax [ eax + edi + 0xc ]
add edi 0x10
mov [ esi + 0x2 ] ax
add esi 0x4
movsx eax [ edx + 0x18 ]
cmp ebx eax
jl r-xdata
mov edx [ edx + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ edx + edi ]
call sub_457359
mov edx [ ebp - 0x8 ]
mov [ esi ] ax
mov [ esi + 0xc ] cx
mov eax [ edx + 0x10 ]
mov [ esi + 0x4 ] eax
mov eax [ edx + 0x14 ]
mov [ esi + 0x8 ] eax
mov ax [ edx + 0x18 ]
mov [ esi + 0xe ] ax
mov eax [ ebp - 0x4 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x50 ]
xor esi esi
push 0xa
jmp r-xdata
mov eax [ edx + 0x8 ]
movzx eax [ eax + edi + 0x4 ]
mov [ esi ] ax
cmp eax 0x1a
jne r-xdata
mov esi [ ebp + 0x10 ]
sub_4577fe
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
xor esi esi
mov ebx ecx
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
push edi
call sub_422d7c
pop ecx
test eax eax
je r-xdata
mov ecx edi
call sub_41fe06
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
push 0x800
push 0x1
push ecx
push r--data
push ebx
call [ eax + 0x14 ]
push [ ebp - 0x4 ]
mov esi eax
call j_sub_422ed5
pop ecx
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457858
push ebp
mov ebp esp
sub esp 0x54
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov esi r--data
mov [ ebp - 0x34 ] edx
lea edi [ ebp - 0x54 ]
mov ebx ecx
lea ecx [ ebp - 0x28 ]
push ecx
movsd [ edi ] [ esi ]
mov eax [ ebx ]
push r--data
push ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call [ eax ]
lea ecx [ ebp - 0x4 ]
push ecx
test eax eax
js r-xdata
mov eax [ ebx ]
push 0x800
push 0x0
push ebx
call [ eax + 0x10 ]
mov edi eax
mov esi [ ebp - 0x28 ]
push esi
mov eax [ esi ]
call [ eax + 0xc ]
mov ecx [ esi ]
mov edi eax
push esi
call [ ecx + 0x8 ]
jmp r-xdata
push 0x10
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
call sub_421604
add esp 0xc
neg eax
sbb eax eax
inc eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
test edi edi
js r-xdata
and [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0x1c ]
mov eax [ ecx ]
push edx
lea edx [ ebp - 0x8 ]
push edx
push ecx
call [ eax + 0x48 ]
test eax eax
js r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
lea edx [ ebp - 0x10 ]
push edx
push [ ebp - 0x1c ]
push ecx
call [ eax + 0x14 ]
cmp [ ebp - 0x10 ] 0x5
je r-xdata
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x24 ]
push edx
push ecx
mov eax [ ecx ]
call [ eax + 0xc ]
mov esi [ ebp - 0x24 ]
lea edi [ ebp - 0x54 ]
mov eax [ ebp - 0x4 ]
push [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
mov ebx eax
xor edi edi
xor esi esi
mov [ ebp - 0x24 ] edi
test ebx ebx
je r-xdata
and [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
call [ ProgIDFromCLSID@IAT ]
test eax eax
js r-xdata
cmp [ ebp - 0x10 ] 0x5
jne r-xdata
test edi edi
jne r-xdata
push [ ebp - 0x14 ]
lea ecx [ ebp - 0x44 ]
call sub_407f41
push [ ebp - 0x14 ]
call [ CoTaskMemFree@IAT ]
push 0xffffffff
push r--data
lea ecx [ ebp - 0x44 ]
call sub_407e2f
push eax
lea ecx [ ebp - 0x44 ]
call sub_407e8c
lea eax [ ebp - 0x54 ]
push eax
push [ ebp - 0x44 ]
call [ CLSIDFromProgID@IAT ]
lea ecx [ ebp - 0x44 ]
call sub_405a64
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x10 ]
and [ ebp - 0x10 ] edi
push edx
push esi
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
cmp [ ebp - 0x10 ] 0x5
jne r-xdata
inc esi
cmp esi ebx
jb r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0xc ]
push edx
push esi
push eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x2c ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x2c ]
push edx
movzx eax [ edx + 0x30 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4c ]
or [ ebp - 0x18 ] 0xffffffff
cmp [ ebp - 0x20 ] edi
jbe r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edi [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x30 ]
push edx
push edi
push eax
mov ecx [ eax ]
call [ ecx + 0x20 ]
test eax eax
jne r-xdata
inc edi
cmp edi [ ebp - 0x20 ]
jb r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x14 ]
push edx
push [ ebp - 0x30 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x38 ]
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x18 ]
push edx
push 0x0
push eax
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ eax ]
je r-xdata
xor edi edi
inc edi
mov [ ebp - 0x24 ] edi
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
call [ ecx + 0x8 ]
sub_457aa1
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push ecx
push r--data
mov eax [ esi ]
mov edi 0x80004005
push esi
call [ eax ]
test eax eax
jne r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
push r--data
push esi
call [ eax ]
test eax eax
jne r-xdata
mov esi [ ebp - 0x4 ]
push esi
mov eax [ esi ]
call [ eax + 0x20 ]
mov ecx [ esi ]
mov edi eax
push esi
call [ ecx + 0x8 ]
jmp r-xdata
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
push 0x0
push esi
mov eax [ esi ]
call [ eax + 0x14 ]
mov edi eax
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
sub_457b04
push ebp
mov ebp esp
sub esp 0x270
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x10 ] ebx
mov edi edx
mov [ ebp - 0x8 ] ebx
call sub_4077c7
lea ecx [ ebp - 0x20 ]
call sub_4077c7
lea ecx [ ebp - 0x40 ]
call sub_4077c7
push r--data
lea ecx [ ebp - 0x30 ]
call sub_407d2c
push esi
lea ecx [ ebp - 0x30 ]
call sub_407e0b
push r--data
lea ecx [ ebp - 0x30 ]
call sub_407e0b
lea ecx [ ebp - 0x20 ]
call sub_407eec
test edi edi
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
push 0x5c
pop eax
cmp [ edi ] ax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x80000002
push [ ebp - 0x20 ]
call [ RegConnectRegistryW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0x20
lea eax [ ebp - 0x60 ]
push ebx
push eax
call sub_422f60
add esp 0xc
mov [ ebp - 0x5c ] ebx
lea eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x40 ]
push eax
call sub_4081a7
push r--data
lea ecx [ ebp - 0x40 ]
call sub_407e0b
mov eax [ ebp - 0x40 ]
push ebx
push [ ebp + 0xc ]
mov [ ebp - 0x4c ] eax
lea eax [ ebp - 0x60 ]
push [ ebp + 0x10 ]
push eax
call [ WNetAddConnection2W@IAT ]
mov esi eax
test esi esi
js r-xdata
cmp [ edi + 0x2 ] ax
je r-xdata
lea ecx [ ebp - 0x40 ]
call sub_405a64
lea ecx [ ebp - 0x20 ]
call sub_405a64
lea ecx [ ebp - 0x30 ]
call sub_405a64
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x8 ]
push eax
push 0x20019
push ebx
push [ ebp - 0x30 ]
push [ ebp - 0x10 ]
call [ RegOpenKeyExW@IAT ]
mov edi [ RegCloseKey@IAT ]
mov esi eax
test esi esi
jne r-xdata
push r--data
lea ecx [ ebp - 0x20 ]
call sub_407d2c
push edi
lea ecx [ ebp - 0x20 ]
call sub_407e0b
push [ ebp - 0x10 ]
call edi
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] 0x1fe
push eax
lea eax [ ebp - 0x26c ]
push eax
push ebx
push ebx
push ebx
push [ ebp - 0x8 ]
call [ RegQueryValueExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push [ ebp - 0x8 ]
call edi
mov eax [ ebp - 0xc ]
xor ecx ecx
push [ ebp + 0x8 ]
shr eax 0x1
mov [ ebp - 0xc ] eax
mov [ ebp + eax * 2 - 0x26c ] cx
lea eax [ ebp - 0x26c ]
push eax
call [ CLSIDFromString@IAT ]
mov esi eax
sub_457c85
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x4c
and [ eax ] 0x0
push ebx
xor ebx ebx
push edi
mov edi edx
test ecx ecx
jne r-xdata
mov eax [ ecx ]
lea edx [ ebp - 0xc ]
push edx
push 0x800
push 0x0
push ecx
call [ eax + 0x10 ]
test eax eax
js r-xdata
mov eax 0x80004003
jmp r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x34 ]
push esi
push edx
lea edx [ ebp - 0x4 ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0x48 ]
mov esi eax
test esi esi
jns r-xdata
mov eax [ ebp - 0x4 ]
test edi edi
je r-xdata
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ecx ]
call [ edx + 0x8 ]
mov eax esi
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
xor esi esi
mov [ ebp - 0x28 ] eax
xor edi edi
mov [ ebp - 0x10 ] esi
test eax eax
je r-xdata
lea edx [ ebp - 0x10 ]
xor ebx ebx
push edx
lea edx [ ebp - 0x3c ]
inc ebx
push edx
lea edx [ ebp - 0x28 ]
mov [ ebp - 0x10 ] ebx
mov ecx [ eax ]
push edx
push 0x0
push edi
push eax
call [ ecx + 0x2c ]
mov ecx [ ebp - 0x4 ]
mov esi eax
push ecx
mov edx [ ecx ]
call [ edx + 0x8 ]
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ecx ]
call [ edx + 0x8 ]
test esi esi
js r-xdata
pop esi
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
test esi esi
jne r-xdata
mov eax 0x80028017
jmp r-xdata
cmp [ ebp - 0x10 ] bx
jb r-xdata
mov eax [ ebx ]
lea ecx [ ebp - 0x38 ]
push ecx
push ebx
call [ eax + 0xc ]
mov ecx [ ebp - 0x38 ]
lea edi [ ebp - 0x4c ]
mov esi ecx
push 0x4
mov eax [ ecx + 0x28 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x24 ] eax
mov eax 0x1040
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test [ ecx + 0x36 ] ax
je r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x1c ]
and [ ebp - 0x1c ] esi
push edx
push edi
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
cmp [ ebp - 0x1c ] 0x5
jne r-xdata
mov ebx [ ebp - 0x28 ]
jmp r-xdata
mov eax [ ebx ]
push ecx
push ebx
call [ eax + 0x4c ]
cmp [ ebp - 0x24 ] esi
je r-xdata
mov [ ebp - 0x24 ] esi
inc edi
cmp edi [ ebp - 0x28 ]
jb r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x8 ]
push edx
push edi
push eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x2c ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x2c ]
push edx
push eax
mov ecx [ eax ]
movzx esi [ edx + 0x30 ]
mov [ ebp - 0x24 ] esi
call [ ecx + 0x4c ]
cmp esi 0x1
jbe r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
lea esi [ ebp - 0x4c ]
mov edi [ ebp + 0xc ]
mov [ eax ] ebx
xor eax eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebx ]
push ebx
call [ eax + 0x8 ]
mov eax 0x80028ca0
jmp r-xdata
mov esi [ ebp - 0x10 ]
or [ ebp - 0x14 ] 0xffffffff
xor esi esi
cmp [ ebp - 0x24 ] esi
jbe r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x30 ]
push edx
push esi
push eax
mov ecx [ eax ]
call [ ecx + 0x20 ]
test eax eax
jne r-xdata
inc esi
cmp esi [ ebp - 0x24 ]
jb r-xdata
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x18 ]
push edx
push [ ebp - 0x30 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x38 ]
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x20 ]
push edx
push esi
push eax
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x34 ]
jne r-xdata
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x14 ]
push edx
push 0x0
push eax
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
test [ ebp - 0x20 ] 0x1
je r-xdata
test [ ebp - 0x20 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x18 ]
xor esi esi
inc esi
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_457eb4
push esi
mov esi ecx
push edi
mov edi edx
test esi esi
jne r-xdata
push esi
call sub_422d7c
inc eax
pop ecx
add eax eax
push eax
call [ CoTaskMemAlloc@IAT ]
mov [ edi ] eax
test eax eax
jne r-xdata
and [ edi ] ecx
jmp r-xdata
push esi
push eax
call sub_422f3c
pop ecx
pop ecx
mov eax 0x8007000e
jmp r-xdata
xor eax eax
pop edi
pop esi
retn
sub_457f03
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
push edi
mov edi [ ebp + 0xc ]
mov ecx esi
mov eax [ ebx + 0x4 ]
add eax [ edi + 0x4 ]
push eax
call sub_407b76
mov eax [ ebx + 0x4 ]
add eax eax
push eax
push [ ebx ]
push [ esi ]
call sub_420fc0
mov eax [ edi + 0x4 ]
mov edx [ ebx + 0x4 ]
mov ecx [ esi ]
lea eax [ eax * 2 + 0x2 ]
push eax
push [ edi ]
lea ecx [ ecx + edx * 2 ]
push ecx
call sub_420fc0
mov ecx [ ebx + 0x4 ]
add esp 0x18
add ecx [ edi + 0x4 ]
mov eax esi
mov [ esi + 0x4 ] ecx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_457f5e
push ebp
mov ebp esp
push 0x8
call sub_420f36
pop ecx
mov ecx [ ebp + 0x8 ]
and [ eax + 0x4 ] 0x0
mov ecx [ ecx ]
mov [ eax ] ecx
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov [ rw-data ] eax
inc [ rw-data ]
pop ebp
retn 0x4
sub_457fb8
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404024
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422ed5#3
pop ecx
sub_457fd7
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] 0x4
push eax
xor ebx ebx
lea eax [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x14 ]
mov esi ebx
mov [ ebp - 0x10 ] ebx
push eax
mov [ ebp - 0x8 ] ebx
mov edi ebx
mov [ ebp - 0xc ] esi
call sub_45852a
add esp 0xc
test al al
je r-xdata
mov ecx [ ebp - 0x10 ]
call sub_458493
mov ecx [ ebp - 0x8 ]
call sub_458493
mov ecx esi
call sub_458493
mov ecx edi
call sub_458493
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x10
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x8 ]
call sub_4585c7
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] ebx
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
call [ GetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
push 0xc
lea eax [ ebp - 0x30 ]
push ebx
push eax
call sub_422f60
add esp 0xc
mov [ ebp - 0x2c ] 0x8
cmp [ ebp - 0x4 ] ebx
je r-xdata
push [ ebp + 0xc ]
call [ GetLengthSid@IAT ]
mov ecx [ ebp - 0x2c ]
push ecx
lea edx [ ecx + 0x10 ]
lea edx [ edx + eax * 2 ]
lea ecx [ ebp - 0xc ]
call sub_458593
mov esi [ ebp - 0xc ]
pop ecx
test al al
je r-xdata
push 0x2
push 0xc
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x4 ]
call [ GetAclInformation@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp + 0xc ]
call [ GetLengthSid@IAT ]
add eax 0x8
push eax
push 0x8
mov [ ebp - 0x20 ] eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ edi + 0x2 ] ax
lea eax [ edi + 0x8 ]
push eax
push [ ebp + 0xc ]
call [ GetLengthSid@IAT ]
push eax
call [ CopySid@IAT ]
test eax eax
je r-xdata
mov eax ebx
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x10 ]
add ecx 0x4
mov [ ebp + 0xc ] ebx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp - 0x20 ]
movzx eax [ ecx + 0x2 ]
push eax
push ecx
push 0xffffffff
push 0x2
push esi
call [ AddAce@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
inc eax
add ecx 0xc
mov [ ebp + 0xc ] eax
mov [ ebp + 0x10 ] ecx
cmp eax 0x1
jb r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x30 ]
jb r-xdata
mov al [ ecx - 0x4 ]
mov [ edi ] al
mov al [ ecx - 0x3 ]
mov [ edi + 0x1 ] al
mov eax [ ecx ]
mov [ edi + 0x4 ] eax
movzx eax [ edi + 0x2 ]
push eax
push edi
push 0xffffffff
push 0x2
push esi
call [ AddAce@IAT ]
test eax eax
je r-xdata
push ebx
push esi
push 0x1
push [ ebp - 0x8 ]
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
push eax
push [ ebp - 0x4 ]
call [ GetAce@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call [ SetUserObjectSecurity@IAT ]
test eax eax
je r-xdata
mov bl 0x1
sub_4581d4
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] 0x4
push eax
xor ebx ebx
lea eax [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x14 ]
mov esi ebx
mov [ ebp - 0x10 ] ebx
push eax
mov [ ebp - 0x8 ] ebx
mov edi ebx
mov [ ebp - 0xc ] esi
call sub_45852a
add esp 0xc
test al al
je r-xdata
mov ecx [ ebp - 0x10 ]
call sub_458493
mov ecx [ ebp - 0x8 ]
call sub_458493
mov ecx esi
call sub_458493
mov ecx edi
call sub_458493
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x10
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x8 ]
call sub_4585c7
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] ebx
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
call [ GetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
push 0xc
lea eax [ ebp - 0x30 ]
push ebx
push eax
call sub_422f60
add esp 0xc
mov [ ebp - 0x2c ] 0x8
cmp [ ebp - 0x4 ] ebx
je r-xdata
push [ ebp + 0xc ]
call [ GetLengthSid@IAT ]
mov ecx [ ebp - 0x2c ]
push ecx
lea edx [ ecx + 0x10 ]
lea edx [ edx + eax * 2 ]
lea ecx [ ebp - 0xc ]
call sub_458593
mov esi [ ebp - 0xc ]
pop ecx
test al al
je r-xdata
push 0x2
push 0xc
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x4 ]
call [ GetAclInformation@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp + 0xc ]
call [ GetLengthSid@IAT ]
add eax 0x8
push eax
push 0x8
mov [ ebp - 0x20 ] eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ edi + 0x2 ] ax
lea eax [ edi + 0x8 ]
push eax
push [ ebp + 0xc ]
call [ GetLengthSid@IAT ]
push eax
call [ CopySid@IAT ]
test eax eax
je r-xdata
mov eax ebx
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x10 ]
add ecx 0x4
mov [ ebp + 0xc ] ebx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp - 0x20 ]
movzx eax [ ecx + 0x2 ]
push eax
push ecx
push 0xffffffff
push 0x2
push esi
call [ AddAce@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
inc eax
add ecx 0xc
mov [ ebp + 0xc ] eax
mov [ ebp + 0x10 ] ecx
cmp eax 0x2
jb r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x30 ]
jb r-xdata
mov al [ ecx - 0x4 ]
mov [ edi ] al
mov al [ ecx - 0x3 ]
mov [ edi + 0x1 ] al
mov eax [ ecx ]
mov [ edi + 0x4 ] eax
movzx eax [ edi + 0x2 ]
push eax
push edi
push 0xffffffff
push 0x2
push esi
call [ AddAce@IAT ]
test eax eax
je r-xdata
push ebx
push esi
push 0x1
push [ ebp - 0x8 ]
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
push eax
push [ ebp - 0x4 ]
call [ GetAce@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call [ SetUserObjectSecurity@IAT ]
test eax eax
je r-xdata
mov bl 0x1
sub_4583d1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
xor ebx ebx
push edi
push esi
push ebx
push [ eax ]
mov edi ecx
push 0x2
push edi
call [ GetTokenInformation@IAT ]
test eax eax
jne r-xdata
xor ebx ebx
inc ebx
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
pop edi
pop esi
mov al bl
pop ebx
pop ebp
retn
push [ esi ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
test eax eax
je r-xdata
push esi
push [ esi ]
push eax
push 0x2
push edi
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
sub_458432
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
xor ebx ebx
push edi
push esi
push ebx
push [ eax ]
mov edi ecx
push 0x3
push edi
call [ GetTokenInformation@IAT ]
test eax eax
jne r-xdata
xor ebx ebx
inc ebx
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
pop edi
pop esi
mov al bl
pop ebx
pop ebp
retn
push [ esi ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
test eax eax
je r-xdata
push esi
push [ esi ]
push eax
push 0x3
push edi
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
sub_4584a8
push ebx
push esi
push edi
mov edi ecx
xor esi esi
push 0x4
pop ebx
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] esi
call sub_458a3a
mov eax [ edi + 0x4 ]
xor ecx ecx
mul ebx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
mov [ edi ] eax
cmp [ edi + 0x4 ] esi
jbe r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn 0x8
mov ecx [ edi ]
mov eax [ esi * 4 + rw-data ]
mov [ ecx + esi * 4 ] eax
inc esi
cmp esi [ edi + 0x4 ]
jb r-xdata
sub_4584f3
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
push [ esi + 0xc ]
call [ CloseHandle@IAT ]
push [ esi ]
call j_sub_422ed5#3
pop ecx
pop esi
retn
xor eax eax
push eax
push eax
push eax
push [ esi + 0x8 ]
push eax
push [ esi + 0xc ]
call [ AdjustTokenPrivileges@IAT ]
push [ esi + 0x8 ]
call j_sub_422ed5#3
pop ecx
sub_45852a
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov eax ecx
mov ecx [ ebp + 0x8 ]
xor ebx ebx
push edi
push esi
push ebx
push [ ecx ]
mov edi edx
mov [ ebp - 0x4 ] eax
push edi
push eax
call [ GetUserObjectSecurity@IAT ]
test eax eax
jne r-xdata
xor ebx ebx
inc ebx
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
push [ esi ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
test eax eax
je r-xdata
push esi
push [ esi ]
push eax
push edi
push [ ebp - 0x4 ]
call [ GetUserObjectSecurity@IAT ]
test eax eax
je r-xdata
sub_458593
push esi
push edi
mov edi edx
mov esi ecx
push edi
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
xor eax eax
push 0x2
push edi
push eax
call [ InitializeAcl@IAT ]
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_4585c7
push ebp
mov ebp esp
push ebx
push esi
push [ ebp + 0x8 ]
mov esi ecx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
xor ebx ebx
xor ebx ebx
inc ebx
push ebx
push eax
call [ InitializeSecurityDescriptor@IAT ]
test eax eax
jne r-xdata
pop esi
mov al bl
pop ebx
pop ebp
retn
sub_4585fd
push ebp
mov ebp esp
sub esp 0x14
push ebx
push ecx
push ecx
lea ecx [ ebp - 0x10 ]
call sub_4584a8
lea ecx [ ebp - 0x10 ]
call sub_45897e
test al al
je r-xdata
xor bl bl
call sub_464a08
test al al
je r-xdata
mov bl 0x1
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4584f3
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
sub_458638
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
push ecx
push ecx
lea ecx [ ebp - 0x3c ]
call sub_4584a8
push ecx
lea ecx [ ebp - 0x3c ]
call sub_458aa3
test al al
jne r-xdata
xor ebx ebx
lea eax [ ebp - 0x5c ]
push 0x20
push ebx
push eax
mov [ ebp - 0x4 ] ebx
mov esi ebx
mov edi ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_422f60
mov eax [ ebp + 0x8 ]
add esp 0xc
test [ ebp + 0x14 ] 0x1
mov [ ebp - 0x5c ] 0x20
mov [ ebp - 0x54 ] eax
mov [ ebp + 0xb ] bl
je r-xdata
xor bl bl
jmp r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_458a73
test al al
je r-xdata
mov [ ebp + 0xb ] 0x1
lea ecx [ ebp - 0x3c ]
call sub_4584f3
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x28
cmp [ ebp - 0x40 ] ebx
je r-xdata
push 0x2
pop ecx
test [ ebp + 0x14 ] cl
je r-xdata
mov ecx [ ebp - 0x8 ]
call sub_458493
test esi esi
je r-xdata
push [ ebp - 0x40 ]
push [ ebp - 0x4 ]
call [ UnloadUserProfile@IAT ]
push 0x60000
push ebx
push r--data
call [ OpenWindowStationW@IAT ]
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
push 0x1
push ecx
push ebx
push ebx
push [ ebp - 0x4 ]
call [ DuplicateTokenEx@IAT ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push esi
call [ CloseWindowStation@IAT ]
cmp esi 0xffffffff
je r-xdata
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
push edi
call [ CloseDesktop@IAT ]
call [ GetProcessWindowStation@IAT ]
push esi
mov [ ebp - 0x14 ] eax
call [ SetProcessWindowStation@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
push [ ebp - 0x10 ]
call j_sub_422ed5#3
cmp [ ebp - 0xc ] 0x0
pop ecx
je r-xdata
push eax
call [ SetProcessWindowStation@IAT ]
push 0x60081
push ebx
push ebx
push r--data
call [ OpenDesktopW@IAT ]
mov edi eax
test edi edi
je r-xdata
push [ ebp - 0xc ]
call [ DestroyEnvironmentBlock@IAT ]
cmp edi 0xffffffff
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
call sub_458b3b
test al al
je r-xdata
push ecx
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x2c ] 0xb00
push eax
push [ ebp - 0x8 ]
mov [ ebp - 0x28 ] 0xf0000000
push esi
mov [ ebp - 0x20 ] 0x400
mov [ ebp - 0x1c ] 0xf037f
call sub_4581d4
test al al
je r-xdata
push ecx
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x20 ] bx
push eax
push [ ebp - 0x8 ]
mov [ ebp - 0x1c ] 0xf01ff
push edi
call sub_457fd7
test al al
je r-xdata
mov eax [ ebp + 0x28 ]
mov [ eax + 0x8 ] r--data
mov eax [ eax + 0x2c ]
and eax 0x100
mov [ ebp + 0x10 ] eax
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp + 0xb ] bl
je r-xdata
push [ ebp + 0x1c ]
call sub_422d7c
xor ecx ecx
inc eax
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
push [ ebp + 0x1c ]
mov [ ebp - 0x10 ] eax
push eax
call sub_422f3c
add esp 0x10
test [ ebp + 0x14 ] 0x4
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
push [ ebp - 0x4 ]
call [ LoadUserProfileW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x2c ]
mov eax [ ebp + 0x20 ]
push [ ebp + 0x28 ]
or eax 0x400
push [ ebp + 0x24 ]
push [ ebp - 0xc ]
push eax
push [ ebp + 0x10 ]
push ebx
push ebx
push [ ebp - 0x10 ]
push ebx
push [ ebp - 0x4 ]
call [ CreateProcessAsUserW@IAT ]
test eax eax
je r-xdata
push ebx
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push eax
call [ CreateEnvironmentBlock@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0xb ] bl
je r-xdata
mov bl 0x1
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push [ ebp + 0x2c ]
call sub_458be3
sub_4588d9
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
test [ ebp + 0x14 ] 0x1
mov eax ebx
push edi
mov [ ebp - 0x4 ] eax
mov edi ebx
je r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
inc edi
jmp r-xdata
test [ ebp + 0x14 ] 0x4
je r-xdata
push 0x2
pop edi
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x20 ]
or eax 0x400
push eax
push [ ebp + 0x1c ]
push ebx
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateProcessWithLogonW@IAT ]
test eax eax
setne bl
push esi
lea eax [ ebp + 0x14 ]
mov [ ebp + 0x14 ] ebx
push eax
push 0xa
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
push 0x1
push [ ebp + 0x14 ]
lea eax [ ebp - 0x4 ]
push eax
call [ CreateEnvironmentBlock@IAT ]
push [ ebp + 0x14 ]
mov esi eax
call [ CloseHandle@IAT ]
test esi esi
pop esi
je r-xdata
pop edi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x28
push [ ebp - 0x4 ]
call [ DestroyEnvironmentBlock@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
sub_45897e
push ebp
mov ebp esp
sub esp 0x1c
and [ ebp - 0x10 ] 0x0
mov eax ecx
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push edi
push ecx
push ecx
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push ecx
mov ecx [ eax + 0xc ]
xor bl bl
call sub_458432
mov esi [ ebp - 0x4 ]
add esp 0xc
test al al
je r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0xc ]
xor edi edi
mov [ ebp - 0x8 ] edi
cmp [ eax + 0x4 ] edi
jbe r-xdata
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ eax ]
lea ecx [ ebp - 0x1c ]
push ecx
xor bl bl
push [ eax + edi * 4 ]
push 0x0
call [ LookupPrivilegeValueW@IAT ]
test eax eax
je r-xdata
and [ ebp - 0x14 ] 0x0
cmp [ esi ] 0x0
jbe r-xdata
mov edi [ ebp - 0x14 ]
lea eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc edi
add eax 0xc
mov [ ebp - 0x4 ] eax
cmp edi [ esi ]
jb r-xdata
mov bl 0x1
push 0x8
lea ecx [ ebp - 0x1c ]
push ecx
push eax
call sub_421604
add esp 0xc
test eax eax
jne r-xdata
mov edi [ ebp - 0x8 ]
test bl bl
je r-xdata
mov eax [ ebp - 0xc ]
inc edi
mov [ ebp - 0x8 ] edi
cmp edi [ eax + 0x4 ]
jb r-xdata
sub_458a3a
push esi
lea esi [ ecx + 0xc ]
push esi
push 0x0
push 0x28
call [ GetCurrentThread@IAT ]
push eax
call [ OpenThreadToken@IAT ]
test eax eax
jne r-xdata
xor eax eax
cmp [ esi ] eax
pop esi
setne al
retn
push esi
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
and [ esi ] eax
sub_458a73
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ ebp + 0x1c ]
movsx eax al
and eax 0x2
push 0x0
or eax 0x4
shr eax 0x1
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LogonUserW@IAT ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x18
sub_458aa3
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
imul ebx [ esi + 0x4 ] 0xc
add ebx 0x4
push ebx
mov [ ebp - 0xc ] ebx
call sub_420f36
mov edi eax
push ebx
mov [ ebp - 0x8 ] edi
call sub_420f36
pop ecx
pop ecx
mov ecx [ esi + 0x4 ]
mov [ esi + 0x8 ] eax
mov [ edi ] ecx
xor ecx ecx
cmp [ esi + 0x4 ] ecx
jbe r-xdata
cmp [ esi + 0x8 ] ecx
je r-xdata
lea ebx [ edi + 0x4 ]
mov edi ecx
lea eax [ ebp - 0xc ]
push eax
push ecx
push ebx
push ecx
push ecx
push ecx
jmp r-xdata
mov [ ebx + 0x8 ] 0x2
mov eax [ esi ]
push ebx
push [ eax + edi * 4 ]
push ecx
call [ LookupPrivilegeValueW@IAT ]
inc edi
add ebx 0xc
push 0x0
pop ecx
cmp edi [ esi + 0x4 ]
jb r-xdata
mov edi [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
push edi
push ecx
push [ esi + 0xc ]
call [ AdjustTokenPrivileges@IAT ]
push edi
call j_sub_422ed5#3
pop ecx
call [ GetLastError@IAT ]
neg eax
pop edi
sbb eax eax
pop esi
inc eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_458b3b
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push eax
push ecx
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
xor bl bl
call sub_4583d1
mov esi [ ebp - 0x8 ]
add esp 0xc
test al al
je r-xdata
test esi esi
je r-xdata
push edi
xor edi edi
cmp [ esi ] edi
jbe r-xdata
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
pop edi
lea ecx [ esi + 0x8 ]
mov edx 0xc0000000
push [ esi + edi * 8 + 0x4 ]
call [ GetLengthSid@IAT ]
push eax
push 0x8
mov [ ebp - 0x4 ] eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx eax
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
inc edi
add ecx 0x8
cmp edi [ esi ]
jb r-xdata
push [ esi + edi * 8 + 0x4 ]
push ecx
push [ ebp - 0x4 ]
call [ CopySid@IAT ]
test eax eax
je r-xdata
mov eax [ ecx ]
and eax edx
cmp eax edx
je r-xdata
jmp r-xdata
mov bl 0x1
sub_458be3
push ebp
mov ebp esp
push ebx
push edi
push 0xc
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edi [ GetCurrentProcess@IAT ]
mov ebx eax
push 0x2
push 0x0
push 0x0
push ebx
call edi
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call edi
push eax
call [ DuplicateHandle@IAT ]
push 0x2
push 0x0
push 0x0
lea eax [ ebx + 0x8 ]
push eax
call edi
push eax
mov eax [ ebp + 0x10 ]
push [ eax ]
call edi
push eax
call [ DuplicateHandle@IAT ]
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebx + 0x4 ] eax
xor eax eax
push eax
push eax
push ebx
push sub_458c54
push eax
push eax
call [ CreateThread@IAT ]
pop edi
pop ebx
pop ebp
retn 0xc
sub_458c54
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
push 0xffffffff
push [ edi ]
call [ WaitForSingleObject@IAT ]
push [ edi + 0x4 ]
push [ edi + 0x8 ]
call [ UnloadUserProfile@IAT ]
push [ edi + 0x8 ]
call [ CloseHandle@IAT ]
push [ edi ]
call [ CloseHandle@IAT ]
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor eax eax
pop edi
pop ebp
retn 0x4
sub_458c99
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_458cc8
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp al 0x1
test al al
jmp r-xdata
mov al 0x1
pop esi
pop ebp
retn 0x4
push 0xffffffff
push 0xffffffff
push 0x1
push 0x0
mov ecx esi
call sub_458ce1
jne r-xdata
sub_458ce1
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x14 ]
push ebx
push esi
push edi
mov ebx ecx
push eax
push [ ebx ]
call [ GetWindowRect@IAT ]
mov esi [ ebp + 0x10 ]
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
movzx edi ax
movzx eax si
xor esi esi
shl edi 0x10
inc esi
or edi eax
mov [ ebp + 0x14 ] 0x201
cmp [ ebp + 0x8 ] 0x2
mov [ ebp + 0x10 ] 0x203
mov [ ebp - 0x4 ] 0x202
jne r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
cdq
sub eax edx
sar eax 0x1
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov [ ebp + 0x14 ] 0x204
mov [ ebp - 0x4 ] 0x205
push 0x2
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp + 0x8 ] ecx
cmp [ ebp + 0xc ] ecx
jl r-xdata
mov [ ebp + 0x14 ] 0x207
mov [ ebp - 0x4 ] 0x208
push 0x10
pop esi
mov [ ebp + 0x10 ] 0x206
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax ecx
cdq
sub eax edx
and eax 0xfffffffe
push edi
push esi
cmp eax ecx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
jmp r-xdata
push [ ebx ]
call [ PostMessageW@IAT ]
push 0x0
call [ Sleep@IAT ]
push edi
push 0x0
push [ ebp - 0x4 ]
push [ ebx ]
call [ PostMessageW@IAT ]
push 0x0
call [ Sleep@IAT ]
mov ecx [ ebp + 0x8 ]
inc ecx
mov [ ebp + 0x8 ] ecx
cmp ecx [ ebp + 0xc ]
jle r-xdata
sub_458dd7
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push 0x0
je r-xdata
push 0x0
jmp r-xdata
push 0x1
push 0x14f
push [ ecx ]
call [ SendMessageW@IAT ]
test eax eax
jne r-xdata
mov al 0x1
xor al al
jmp r-xdata
pop ebp
retn 0x4
sub_458e03
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ SendMessageW@IAT ]
lea eax [ ebp - 0x10 ]
push esi
push edi
push eax
lea eax [ ebp - 0x4 ]
mov edi ecx
push eax
push 0xb0
push [ edi ]
call ebx
mov esi [ ebp - 0x4 ]
push 0x0
push esi
push 0xc9
push [ edi ]
mov [ ebp - 0xc ] esi
call ebx
mov [ ebp - 0x8 ] eax
cmp eax 0x1
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
inc edx
mov [ ecx ] edx
push 0x0
push [ ebp - 0x4 ]
push 0xc9
push [ edi ]
call ebx
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ ebp + 0x8 ]
sub esi [ ebp - 0x4 ]
mov [ eax ] esi
jmp r-xdata
mov esi [ ebp - 0x8 ]
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push 0x0
dec eax
push eax
push 0xc9
push [ edi ]
mov [ ebp - 0x4 ] eax
call ebx
cmp esi eax
je r-xdata
mov esi [ ebp - 0xc ]
sub_458e8d
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x10000
mov esi ecx
call sub_420f36
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_40538e
mov edi [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
push edi
dec eax
push eax
push 0xc4
mov [ edi ] 0x7fff
push [ esi ]
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_407d2c
xor bl bl
xor ecx ecx
mov [ edi + eax * 2 ] cx
mov ecx [ ebp + 0xc ]
push edi
call sub_407d2c
mov bl 0x1
jmp r-xdata
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ecx
call j_sub_422ed5#3
push edi
call j_sub_422ed5#3
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
dec [ ecx ]
jne r-xdata
sub_458f0d
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ SendMessageW@IAT ]
lea eax [ ebp - 0x4 ]
push eax
mov esi ecx
lea eax [ ebp - 0x8 ]
push eax
push 0xb0
mov [ ebp - 0x10 ] esi
push [ esi ]
call edi
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
jb r-xdata
push ebx
xor ebx ebx
push ebx
push ebx
push 0xe
push [ esi ]
call edi
mov edi eax
test edi edi
je r-xdata
xor al al
jmp r-xdata
xor al al
cmp edi [ ebp - 0x8 ]
jb r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp edi [ ebp - 0x4 ]
jb r-xdata
xor ecx ecx
lea esi [ edi + 0x1 ]
push 0x2
pop edx
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
push eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
push esi
push 0xd
push [ eax ]
call [ SendMessageW@IAT ]
mov esi [ ebp - 0xc ]
test eax eax
je r-xdata
push esi
call j_sub_422ed5#3
pop ecx
mov al bl
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax edi
je r-xdata
pop ebx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
lea eax [ esi + eax * 2 ]
push eax
call sub_407d2c
mov bl 0x1
xor ecx ecx
mov [ esi + eax * 2 ] cx
sub_458fbf
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x14 ]
push r--data
call sub_407f41
push ecx
lea eax [ ebp - 0x14 ]
mov ecx esi
push eax
call sub_45aea4
lea ecx [ ebp - 0x14 ]
mov bl al
call sub_405a64
test bl bl
je r-xdata
push r--data
lea ecx [ ebp - 0x14 ]
call sub_407f41
push ecx
lea eax [ ebp - 0x14 ]
mov ecx esi
push eax
call sub_45aea4
lea ecx [ ebp - 0x14 ]
mov bl al
call sub_405a64
test bl bl
je r-xdata
mov ecx 0x143
jmp r-xdata
xor al al
mov ecx 0x180
mov eax [ ebp + 0x8 ]
push [ eax ]
push 0x0
push ecx
push [ esi ]
call [ SendMessageW@IAT ]
test eax eax
setne al
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_459044
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x14 ]
push r--data
call sub_407f41
push ecx
lea eax [ ebp - 0x14 ]
mov ecx esi
push eax
call sub_45aea4
lea ecx [ ebp - 0x14 ]
mov bl al
call sub_405a64
test bl bl
je r-xdata
push r--data
lea ecx [ ebp - 0x14 ]
call sub_407f41
push ecx
lea eax [ ebp - 0x14 ]
mov ecx esi
push eax
call sub_45aea4
lea ecx [ ebp - 0x14 ]
mov bl al
call sub_405a64
test bl bl
je r-xdata
mov eax 0x144
jmp r-xdata
xor al al
mov eax 0x182
push 0x0
push [ ebp + 0x8 ]
push eax
push [ esi ]
call [ SendMessageW@IAT ]
test eax eax
setne al
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4590c7
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x10 ]
push r--data
call sub_407f41
push ecx
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
call sub_45aea4
lea ecx [ ebp - 0x10 ]
mov bl al
call sub_405a64
test bl bl
je r-xdata
push r--data
lea ecx [ ebp - 0x10 ]
call sub_407f41
push ecx
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
call sub_45aea4
lea ecx [ ebp - 0x10 ]
mov bl al
call sub_405a64
test bl bl
je r-xdata
mov ecx 0x158
jmp r-xdata
xor al al
mov ecx 0x1a2
mov eax [ ebp + 0x8 ]
push [ eax ]
push 0xffffffff
push ecx
push [ esi ]
call [ SendMessageW@IAT ]
mov ecx [ ebp + 0xc ]
cmp eax 0xffffffff
mov [ ecx ] eax
setne al
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_459152
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov esi ecx
lea ecx [ ebp - 0x1c ]
push r--data
call sub_407f41
push ecx
lea eax [ ebp - 0x1c ]
mov ecx esi
push eax
call sub_45aea4
lea ecx [ ebp - 0x1c ]
mov bl al
call sub_405a64
test bl bl
je r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_407f41
push ecx
lea eax [ ebp - 0x1c ]
mov ecx esi
push eax
call sub_45aea4
lea ecx [ ebp - 0x1c ]
mov bl al
call sub_405a64
test bl bl
je r-xdata
mov eax 0x147
mov [ ebp - 0x8 ] 0x148
lea edi [ eax + 0x2 ]
jmp r-xdata
xor al al
mov eax 0x188
mov [ ebp - 0x8 ] 0x189
lea edi [ eax + 0x2 ]
xor ebx ebx
push ebx
push ebx
push eax
push [ esi ]
call [ SendMessageW@IAT ]
mov [ ebp - 0xc ] eax
cmp eax 0xffffffff
je r-xdata
push ebx
push eax
push edi
push [ esi ]
call [ SendMessageW@IAT ]
cmp eax 0xffffffff
je r-xdata
xor ecx ecx
add eax 0x101
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
mov edi eax
push edi
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ esi ]
call [ SendMessageW@IAT ]
mov ecx [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
push edi
call sub_407d2c
mov bl 0x1
push r--data
call sub_407d2c
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push edi
call j_sub_422ed5#3
pop ecx
mov al bl
jmp r-xdata
sub_459251
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push edi
mov edi ecx
lea ecx [ ebp - 0x1c ]
push r--data
mov [ ebp - 0xc ] edi
call sub_407f41
push ecx
lea eax [ ebp - 0x1c ]
mov ecx edi
push eax
call sub_45aea4
lea ecx [ ebp - 0x1c ]
mov bl al
call sub_405a64
test bl bl
je r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_407f41
push ecx
lea eax [ ebp - 0x1c ]
mov ecx edi
push eax
call sub_45aea4
lea ecx [ ebp - 0x1c ]
mov bl al
call sub_405a64
test bl bl
je r-xdata
mov ecx 0x14d
mov [ ebp - 0x8 ] 0x9
jmp r-xdata
xor al al
mov ecx 0x18c
mov [ ebp - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
mov ebx [ SendMessageW@IAT ]
push [ eax ]
push 0xffffffff
push ecx
push [ edi ]
call ebx
cmp eax 0xffffffff
je r-xdata
push [ edi ]
push [ edi ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
or eax 0x10000
push eax
push 0x111
push [ edi ]
mov edi [ GetParent@IAT ]
call edi
push eax
call ebx
mov ebx [ ebp - 0xc ]
push [ ebx ]
push [ ebx ]
call [ GetDlgCtrlID@IAT ]
movzx ecx ax
mov eax [ ebp - 0x8 ]
movzx eax ax
shl eax 0x10
or ecx eax
push ecx
push 0x111
push [ ebx ]
call edi
push eax
call [ SendMessageW@IAT ]
mov al 0x1
jmp r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45933c
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push edi
mov edi ecx
lea ecx [ ebp - 0x1c ]
push r--data
mov [ ebp - 0xc ] edi
call sub_407f41
push ecx
lea eax [ ebp - 0x1c ]
mov ecx edi
push eax
call sub_45aea4
lea ecx [ ebp - 0x1c ]
mov bl al
call sub_405a64
test bl bl
je r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_407f41
push ecx
lea eax [ ebp - 0x1c ]
mov ecx edi
push eax
call sub_45aea4
lea ecx [ ebp - 0x1c ]
mov bl al
call sub_405a64
test bl bl
je r-xdata
mov eax 0x14e
mov [ ebp - 0x8 ] 0x9
jmp r-xdata
xor al al
mov eax 0x186
mov [ ebp - 0x8 ] 0x2
mov ebx [ SendMessageW@IAT ]
push 0x0
push [ ebp + 0x8 ]
push eax
push [ edi ]
call ebx
cmp eax 0xffffffff
je r-xdata
push [ edi ]
push [ edi ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
or eax 0x10000
push eax
push 0x111
push [ edi ]
mov edi [ GetParent@IAT ]
call edi
push eax
call ebx
mov ebx [ ebp - 0xc ]
push [ ebx ]
push [ ebx ]
call [ GetDlgCtrlID@IAT ]
movzx ecx ax
mov eax [ ebp - 0x8 ]
movzx eax ax
shl eax 0x10
or ecx eax
push ecx
push 0x111
push [ ebx ]
call edi
push eax
call [ SendMessageW@IAT ]
mov al 0x1
jmp r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_459425
push ebp
mov ebp esp
sub esp 0x204
push esi
push [ ecx ]
call [ GetParent@IAT ]
mov esi eax
lea eax [ ebp - 0x204 ]
push 0x100
push eax
push esi
call [ GetClassNameW@IAT ]
lea eax [ ebp - 0x204 ]
push r--data
push eax
call sub_4236cc
pop ecx
pop ecx
test eax eax
jne r-xdata
xor al al
push edi
mov edi [ ebp + 0x8 ]
push r--data
push [ edi ]
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
push [ edi ]
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push 0x7029
jmp r-xdata
push r--data
push [ edi ]
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push 0x702c
jmp r-xdata
push 0x111
push esi
call [ SendMessageW@IAT ]
push r--data
push [ edi ]
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push 0x702a
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
mov al 0x1
pop edi
jmp r-xdata
push eax
push 0x702b
sub_4594e7
push ebp
mov ebp esp
sub esp 0x8cc
push ebx
push esi
push edi
xor esi esi
mov ebx ecx
push esi
push esi
push 0x1004
push [ ebx ]
call [ SendMessageW@IAT ]
lea ecx [ ebp - 0xc0 ]
mov edi eax
call sub_4162e0
push [ ebx ]
push 0x34
call sub_46170f
push [ ebx ]
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] eax
push 0x800
call sub_46170f
mov ecx [ ebp + 0xc ]
push 0x34
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
lea ecx [ ebp - 0xc0 ]
push eax
mov [ ebp - 0x24 ] 0x400
call sub_4617ed
test edi edi
jle r-xdata
cmp esi edi
jne r-xdata
push [ ebp - 0x4 ]
push esi
push 0x1073
push [ ebx ]
call [ SendMessageW@IAT ]
push 0x800
lea eax [ ebp - 0x8c8 ]
push eax
push [ ebp - 0x8 ]
lea ecx [ ebp - 0xc0 ]
call sub_4617b8
xor eax eax
mov [ ebp - 0xc8 ] ax
mov eax [ ebp + 0x8 ]
push [ eax ]
lea eax [ ebp - 0x8c8 ]
push eax
call sub_42307d
pop ecx
pop ecx
test eax eax
je r-xdata
lea ecx [ ebp - 0xc0 ]
call sub_4162c5
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
or esi 0xffffffff
inc esi
cmp esi edi
jl r-xdata
sub_4595c9
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
xor esi esi
mov eax ecx
push esi
push esi
push 0x1004
push [ eax ]
mov [ ebp - 0x4 ] eax
call [ SendMessageW@IAT ]
mov edi [ ebp + 0xc ]
mov ebx eax
push r--data
mov ecx edi
call sub_407d2c
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov edi esi
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
push 0x2
push edi
push 0x102c
push [ eax ]
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
push 0x2
push esi
push 0x102c
push [ eax ]
call [ SendMessageW@IAT ]
test eax eax
jne r-xdata
inc edi
cmp edi ebx
jl r-xdata
push 0xa
lea eax [ ebp - 0x28 ]
push eax
push edi
call sub_423640
mov eax [ ebp + 0xc ]
add esp 0xc
cmp [ eax + 0x4 ] esi
je r-xdata
push 0xa
lea eax [ ebp - 0x28 ]
push eax
push esi
call sub_423640
add esp 0xc
lea eax [ ebp - 0x28 ]
mov ecx edi
push eax
call sub_407d2c
jmp r-xdata
inc esi
cmp esi ebx
jl r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx eax
call sub_407e0b
push r--data
mov ecx eax
call sub_407e0b
mov eax [ ebp + 0xc ]
jmp r-xdata
sub_45969f
push edi
xor edi edi
push edi
push edi
push 0x101f
push [ ecx ]
call [ SendMessageW@IAT ]
push edi
push edi
push 0x1200
push eax
call [ SendMessageW@IAT ]
pop edi
retn
sub_4596c1
push ebp
mov ebp esp
sub esp 0x8c0
push ebx
push esi
mov ebx ecx
lea ecx [ ebp - 0xbc ]
push edi
call sub_4162e0
push [ ebx ]
push 0x34
call sub_46170f
push [ ebx ]
lea ecx [ ebp - 0xbc ]
mov esi eax
push 0x800
call sub_46170f
mov ecx [ ebp + 0xc ]
mov edi eax
push 0x34
push esi
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x30 ] ecx
push eax
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x20 ] 0x400
mov [ ebp - 0x24 ] edi
call sub_4617ed
push esi
push [ ebp + 0x8 ]
push 0x1073
push [ ebx ]
call [ SendMessageW@IAT ]
push 0x800
lea eax [ ebp - 0x8bc ]
push eax
push edi
lea ecx [ ebp - 0xbc ]
call sub_4617b8
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x8bc ]
push eax
call sub_407d2c
lea ecx [ ebp - 0xbc ]
call sub_4162c5
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_459769
push ebp
mov ebp esp
sub esp 0xc0
push ebx
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0xbc ]
call sub_4162e0
mov eax [ ebp + 0x8 ]
movzx eax al
push 0x2
pop ecx
push [ edi ]
neg eax
mov [ ebp - 0x28 ] ecx
push 0x34
sbb eax eax
and eax ecx
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x2c ] eax
call sub_46170f
mov ebx eax
lea ecx [ ebp - 0xbc ]
push 0x34
push ebx
lea eax [ ebp - 0x38 ]
push eax
call sub_4617ed
mov esi [ ebp + 0xc ]
cmp esi 0xffffffff
jne r-xdata
cmp esi [ ebp + 0x10 ]
jle r-xdata
push ebx
push esi
push 0x102b
push [ edi ]
call [ SendMessageW@IAT ]
push ebx
push esi
push 0x102b
push [ edi ]
call [ SendMessageW@IAT ]
inc esi
jmp r-xdata
lea ecx [ ebp - 0xbc ]
call sub_4162c5
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4597fe
push ebx
push esi
push edi
push 0x0
mov edi ecx
push 0x0
push 0x1004
push [ edi ]
call [ SendMessageW@IAT ]
mov ebx eax
xor esi esi
test ebx ebx
jle r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
retn
push 0x2
push esi
push 0x102c
push [ edi ]
call [ SendMessageW@IAT ]
mov ecx edi
push esi
push esi
test eax eax
je r-xdata
push 0x1
push 0x0
jmp r-xdata
call sub_459769
inc esi
cmp esi ebx
jl r-xdata
sub_45984a
push ebp
mov ebp esp
push esi
mov esi ecx
push [ esi ]
call sub_45ad2b
push [ esi ]
push [ ebp + 0x8 ]
push 0x111
push eax
call [ SendMessageW@IAT ]
mov al 0x1
pop esi
pop ebp
retn 0x4
sub_45986f
push esi
push edi
mov edi ecx
push 0x1
push [ edi ]
call sub_45ac37
push [ edi ]
call [ SetFocus@IAT ]
push 0x0
push [ edi ]
mov esi eax
call sub_45ac37
test esi esi
pop edi
setne al
pop esi
retn
sub_459897
push ebp
mov ebp esp
sub esp 0x888
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x4 ] esi
call sub_4162e0
xor ebx ebx
push ebx
push ebx
push 0x406
push [ esi ]
call [ SendMessageW@IAT ]
cmp [ ebp + 0x8 ] ebx
jl r-xdata
lea ecx [ ebp - 0x88 ]
call sub_4162c5
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0x8 ] eax
jge r-xdata
push [ esi ]
mov ebx 0x800
lea ecx [ ebp - 0x88 ]
push ebx
call sub_46170f
mov esi eax
mov eax [ ebp - 0x4 ]
push esi
push [ ebp + 0x8 ]
push 0x40d
push [ eax ]
call [ SendMessageW@IAT ]
push ebx
lea eax [ ebp - 0x888 ]
push eax
push esi
lea ecx [ ebp - 0x88 ]
call sub_4617b8
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x888 ]
push eax
call sub_407d2c
mov bl 0x1
sub_459930
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
push 0x1
mov [ ebp - 0x4 ] esi
push [ esi ]
call sub_45ac37
mov edi [ MapVirtualKeyW@IAT ]
xor ebx ebx
push ebx
push 0x25
call edi
shl eax 0x10
or eax 0x1
push eax
cmp [ ebp + 0x8 ] ebx
jge r-xdata
push 0x27
push 0x100
push [ esi ]
mov esi [ PostMessageW@IAT ]
call esi
push ebx
call [ Sleep@IAT ]
push ebx
push 0x25
call edi
shl eax 0x10
or eax 0xc0000001
push eax
push 0x27
push 0x25
push 0x100
push [ esi ]
mov esi [ PostMessageW@IAT ]
call esi
push ebx
call [ Sleep@IAT ]
push ebx
push 0x25
call edi
shl eax 0x10
or eax 0xc0000001
push eax
push 0x25
jmp r-xdata
mov edi [ ebp - 0x4 ]
push 0x101
push [ edi ]
call esi
push ebx
call [ Sleep@IAT ]
push ebx
push [ edi ]
call sub_45ac37
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4599d6
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x130b
push [ ecx ]
call [ SendMessageW@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
cmp eax 0xffffffff
jne r-xdata
inc eax
mov [ ecx ] eax
mov al 0x1
xor al al
jmp r-xdata
pop ebp
retn 0x4
sub_459a01
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
push [ ebp + 0x8 ]
mov esi ecx
call sub_459c0e
mov edi eax
test edi edi
je r-xdata
xor al al
push 0xf000
push edi
push 0x1127
push [ esi ]
call [ SendMessageW@IAT ]
shr eax 0xc
dec eax
cmp eax 0xffffffff
je r-xdata
mov cl [ ebp + 0xc ]
test cl cl
jne r-xdata
cmp cl 0x1
jne r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
push edi
call sub_459ab7
test al al
je r-xdata
cmp eax 0x1
je r-xdata
push [ ebp - 0x4 ]
mov ecx esi
push [ ebp - 0x8 ]
push 0x1
push 0x0
call sub_458ce1
mov al 0x1
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_459a78
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_459c0e
mov ecx eax
test ecx ecx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
push 0x2
pop eax
jne r-xdata
xor al al
jmp r-xdata
push ecx
push eax
push 0x1102
push [ esi ]
call [ SendMessageW@IAT ]
test eax eax
setne al
xor eax eax
inc eax
pop esi
pop ecx
pop ebp
retn 0x8
sub_459ab7
push ebp
mov ebp esp
sub esp 0xac
push ebx
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x4 ] edi
call sub_4162e0
push [ edi ]
mov eax [ ebp + 0x8 ]
push 0x10
mov [ ebp - 0x14 ] eax
call sub_46170f
mov esi eax
lea ecx [ ebp - 0xa8 ]
push 0x10
push esi
lea eax [ ebp - 0x14 ]
push eax
call sub_4617ed
push esi
xor ebx ebx
push ebx
push 0x1104
push [ edi ]
call [ SendMessageW@IAT ]
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push esi
lea ecx [ ebp - 0xa8 ]
call sub_4617b8
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
push [ edi ]
mov esi [ ebp - 0x14 ]
cdq
sub eax edx
sar eax 0x1
add eax [ ebp - 0x10 ]
mov [ ecx + 0x4 ] eax
lea ecx [ ebp - 0xa8 ]
push 0x10
mov [ ebp - 0x20 ] eax
call sub_46170f
mov edi eax
cmp esi [ ebp - 0xc ]
jg r-xdata
lea ecx [ ebp - 0xa8 ]
call sub_4162c5
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x10
push edi
lea eax [ ebp - 0x24 ]
mov [ ebp - 0x24 ] esi
push eax
lea ecx [ ebp - 0xa8 ]
call sub_4617ed
mov eax [ ebp - 0x4 ]
push edi
push ebx
push 0x1111
push [ eax ]
call [ SendMessageW@IAT ]
push 0x10
lea eax [ ebp - 0x24 ]
push eax
push edi
lea ecx [ ebp - 0xa8 ]
call sub_4617b8
test [ ebp - 0x1c ] 0x40
jne r-xdata
cmp esi [ ebp - 0xc ]
jg r-xdata
inc esi
cmp esi [ ebp - 0xc ]
jle r-xdata
mov [ ebp + 0x8 ] esi
cmp esi [ ebp - 0xc ]
jg r-xdata
inc esi
cmp esi [ ebp - 0xc ]
jle r-xdata
sub esi [ ebp + 0x8 ]
mov bl 0x1
mov ecx [ ebp + 0xc ]
mov eax esi
cdq
sub eax edx
sar eax 0x1
add eax [ ebp + 0x8 ]
mov [ ecx ] eax
push 0x10
push edi
lea eax [ ebp - 0x24 ]
mov [ ebp - 0x24 ] esi
push eax
lea ecx [ ebp - 0xa8 ]
call sub_4617ed
mov eax [ ebp - 0x4 ]
push edi
push ebx
push 0x1111
push [ eax ]
call [ SendMessageW@IAT ]
push 0x10
lea eax [ ebp - 0x24 ]
push eax
push edi
lea ecx [ ebp - 0xa8 ]
call sub_4617b8
test [ ebp - 0x1c ] 0x40
je r-xdata
sub_459c0e
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
xor esi esi
mov eax ecx
push esi
push esi
push 0x110a
push [ eax ]
mov [ ebp - 0xc ] eax
call [ SendMessageW@IAT ]
mov edi eax
mov [ ebp - 0x8 ] edi
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
mov ebx [ ebx + 0x4 ]
call sub_4077c7
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x1c ]
call sub_405a64
mov eax edi
test esi esi
je r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_407d2c
cmp esi ebx
jae r-xdata
mov eax [ ebp - 0xc ]
push edi
push 0x4
push 0x110a
push [ eax ]
call [ SendMessageW@IAT ]
mov edi eax
mov [ ebp - 0x8 ] edi
test edi edi
je r-xdata
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x1c ]
push eax
push edi
call sub_459ebf
mov edi eax
mov [ ebp - 0x8 ] eax
test edi edi
je r-xdata
mov edi [ ebp + 0x8 ]
inc esi
cmp esi ebx
jb r-xdata
push esi
mov ecx edi
call sub_407b20
lea ecx [ ebp - 0x1c ]
movzx eax [ eax ]
push eax
call sub_407a84
inc esi
cmp esi ebx
jb r-xdata
lea eax [ esi + 0x1 ]
mov ecx edi
push eax
call sub_407b20
push 0x7c
pop ecx
cmp [ eax ] cx
jne r-xdata
push esi
mov ecx edi
call sub_407b20
push 0x7c
pop ecx
cmp [ eax ] cx
jne r-xdata
mov edi [ ebp - 0x8 ]
push ecx
lea ecx [ ebp - 0x1c ]
call sub_407a84
add esi 0x2
sub_459d01
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push ebx
mov edi ecx
call sub_459c0e
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
xor esi esi
cmp [ ebx + 0x4 ] esi
mov ebx [ SendMessageW@IAT ]
je r-xdata
test eax eax
jne r-xdata
push eax
push 0x4
jmp r-xdata
push eax
inc esi
push 0x1
mov eax esi
push 0x110a
push [ edi ]
call ebx
sub_459d42
push ebp
mov ebp esp
sub esp 0xb8
and [ ebp - 0x8 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx ecx
push edi
mov edi [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
mov eax [ esi ]
mov [ ebp - 0x28 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0xc ]
mov [ ebp - 0x1c ] eax
inc [ eax ]
call sub_4077c7
test edi edi
je r-xdata
mov [ ebp + 0x10 ] 0x0
mov [ ebp + 0x10 ] 0x1
cmp edi [ ebp + 0xc ]
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push edi
push 0x1
push 0x110a
push [ ebx ]
call [ SendMessageW@IAT ]
inc [ ebp - 0x8 ]
mov edi eax
test edi edi
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push r--data
mov ecx esi
call sub_407e0b
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push r--data
mov ecx esi
call sub_407e0b
push edi
push 0x4
push 0x110a
push [ ebx ]
call [ SendMessageW@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
lea eax [ ebp - 0x18 ]
mov ecx ebx
push eax
push edi
call sub_45a015
lea eax [ ebp - 0x18 ]
mov ecx esi
push eax
call sub_407c8e
push 0xa
lea eax [ ebp - 0xb4 ]
push eax
push [ ebp - 0x8 ]
call sub_423640
add esp 0xc
mov ecx esi
push 0x23
call sub_407a84
lea eax [ ebp - 0xb4 ]
mov ecx esi
push eax
call sub_407e0b
jmp r-xdata
lea eax [ ebp - 0x18 ]
mov ecx ebx
push eax
push edi
call sub_45a015
lea eax [ ebp - 0x18 ]
mov ecx esi
push eax
call sub_407c8e
jmp r-xdata
push 0xa
lea eax [ ebp - 0xb4 ]
push eax
push [ ebp - 0x8 ]
call sub_423640
add esp 0xc
mov ecx esi
push 0x23
call sub_407a84
lea eax [ ebp - 0xb4 ]
mov ecx esi
push eax
call sub_407e0b
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405a64
lea ecx [ ebp - 0x28 ]
call sub_405a64
mov al [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
lea eax [ ebp - 0x28 ]
mov ecx esi
push eax
call sub_4081a7
push 0x0
push [ ebp + 0x14 ]
mov ecx ebx
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_459d42
test al al
jne r-xdata
sub_459ebf
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov [ ebp - 0x8 ] ecx
xor ebx ebx
push edi
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x1 ] bl
call sub_4077c7
mov esi [ ebp + 0xc ]
mov ecx esi
push ebx
call sub_407b52
push 0x23
pop edi
cmp [ eax ] di
jne r-xdata
push ebx
mov ecx esi
call sub_407b52
cmp [ eax ] di
jne r-xdata
push 0x1
mov ecx esi
call sub_407b52
cmp [ eax ] di
je r-xdata
push [ esi ]
call sub_42370a
mov edi [ ebp + 0x8 ]
pop ecx
mov [ ebp + 0xc ] eax
push 0x1
push ebx
mov ecx esi
call sub_407e8c
push 0x1
push ebx
mov ecx esi
call sub_407e8c
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x18 ]
push eax
push edi
call sub_45a015
push 0x0
lea eax [ ebp - 0x18 ]
mov ecx esi
push eax
call sub_407a68
test eax eax
je r-xdata
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405a64
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
push edi
push 0x1
push 0x110a
push [ eax ]
call [ SendMessageW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp + 0xc ]
inc ebx
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_459f88
push ebp
mov ebp esp
push ebx
push esi
push 0x0
mov esi ecx
push 0x9
push 0x110a
push [ esi ]
call [ SendMessageW@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_407d2c
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
push 0x0
push 0x0
push 0x110a
push [ esi ]
call [ SendMessageW@IAT ]
push eax
mov ecx esi
call sub_459d42
xor al al
jmp r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
sub_459fde
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
push r--data
call sub_407d2c
push [ ebp + 0x8 ]
mov ecx esi
call sub_459c0e
test eax eax
jne r-xdata
push [ ebp + 0xc ]
mov ecx esi
push eax
call sub_45a015
xor al al
jmp r-xdata
pop esi
pop ecx
pop ebp
retn 0x8
sub_45a015
push ebp
mov ebp esp
sub esp 0x8ac
push ebx
push esi
mov ebx ecx
lea ecx [ ebp - 0xa8 ]
push edi
call sub_4162e0
push [ ebx ]
push 0x28
call sub_46170f
push [ ebx ]
lea ecx [ ebp - 0xa8 ]
mov esi eax
push 0x800
call sub_46170f
mov ecx [ ebp + 0x8 ]
mov edi eax
push 0x28
push esi
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x24 ] ecx
push eax
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x28 ] 0x11
mov [ ebp - 0x14 ] 0x400
mov [ ebp - 0x18 ] edi
call sub_4617ed
push esi
push 0x0
push 0x113e
push [ ebx ]
call [ SendMessageW@IAT ]
mov esi eax
lea ecx [ ebp - 0xa8 ]
push 0x800
lea eax [ ebp - 0x8a8 ]
push eax
push edi
call sub_4617b8
mov ecx [ ebp + 0xc ]
test esi esi
je r-xdata
push r--data
call sub_407d2c
xor ebx ebx
lea eax [ ebp - 0x8a8 ]
push eax
call sub_407d2c
mov bl 0x1
jmp r-xdata
lea ecx [ ebp - 0xa8 ]
call sub_4162c5
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45a0d9
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_459c0e
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x4
push 0xf000
push eax
push 0x1127
push [ esi ]
call [ SendMessageW@IAT ]
shr eax 0xc
dec eax
sub_45a107
push ebp
mov ebp esp
push ecx
push ebx
push edi
push [ ebp + 0x8 ]
mov edi ecx
call sub_459c0e
mov ebx eax
test ebx ebx
jne r-xdata
push ebx
push 0x5
push 0x110b
push [ edi ]
call [ SendMessageW@IAT ]
push ebx
push 0x9
push 0x110b
push [ edi ]
call [ SendMessageW@IAT ]
test eax eax
setne al
xor al al
jmp r-xdata
pop edi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_45a15c
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push esi
lea eax [ ebp + 0xc ]
push eax
push 0x1388
push 0x2
push esi
push esi
push esi
push [ ebp + 0x8 ]
call [ SendMessageTimeoutW@IAT ]
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x8
push 0x1
jmp r-xdata
push esi
push [ ebp + 0x8 ]
call [ GetWindowThreadProcessId@IAT ]
push eax
call [ GetCurrentThreadId@IAT ]
push eax
call [ AttachThreadInput@IAT ]
sub_45a1a5
push ebp
mov ebp esp
push [ ebp + 0x8 ]
jmp r-xdata
call [ GetParent@IAT ]
test eax eax
jne r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
pop ebp
retn 0x8
xor eax eax
inc eax
jmp r-xdata
push eax
sub_45a1c6
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x18 ]
cmp [ esi ] edi
ja r-xdata
xor al al
mov ebx [ ebp + 0xc ]
mov ecx ebx
push r--data
call sub_407d2c
mov edx r--data
mov ecx ebx
call sub_420c63
test al al
jne r-xdata
push 0x3b
pop ecx
cmp ax cx
je r-xdata
mov ecx ebx
call sub_407faf
push [ ebx + 0x4 ]
push [ ebx ]
call [ CharUpperBuffW@IAT ]
mov eax [ esi ]
mov ebx [ ebp + 0x8 ]
mov ecx ebx
push eax
call sub_407b20
push 0x3a
pop edx
movzx eax [ eax ]
cmp ax dx
je r-xdata
push 0x5d
pop ecx
cmp ax cx
je r-xdata
inc [ esi ]
push 0x3b
pop ecx
cmp ax cx
je r-xdata
mov ecx [ esi ]
cmp ecx edi
ja r-xdata
cmp [ esi ] edi
jbe r-xdata
cmp ax dx
jne r-xdata
push 0x5d
pop ecx
cmp ax cx
jne r-xdata
lea eax [ ecx + 0x1 ]
push ecx
mov ecx [ ebp + 0x8 ]
mov [ esi ] eax
call sub_407b20
mov ecx ebx
movzx eax [ eax ]
push eax
call sub_407a84
jmp r-xdata
mov eax [ esi ]
mov ecx ebx
push eax
call sub_407b20
mov ecx ebx
movzx eax [ eax ]
mov [ ebp + 0x8 ] eax
mov eax [ esi ]
inc eax
push eax
mov [ ebp + 0x18 ] eax
call sub_407b20
mov ecx [ ebp + 0x8 ]
push 0x3b
pop edx
movzx eax [ eax ]
cmp cx dx
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push r--data
call sub_407d2c
jmp r-xdata
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
push eax
call sub_407b20
push 0x3a
pop ecx
movzx eax [ eax ]
cmp ax cx
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi ] eax
cmp ax dx
jne r-xdata
mov edi [ esi ]
mov ecx ebx
push edi
call sub_407b20
movzx eax [ eax ]
cmp eax 0x20
je r-xdata
inc [ esi ]
add [ esi ] 0x2
jmp r-xdata
lea eax [ edi + 0x1 ]
mov [ esi ] eax
jmp r-xdata
cmp eax 0x9
jne r-xdata
push ecx
mov ecx [ ebp + 0x10 ]
call sub_407a84
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
sub_45a30f
push ebp
mov ebp esp
sub esp 0x204
push ebx
push edi
mov ebx ecx
mov ecx [ ebp + 0xc ]
push r--data
call sub_407d2c
mov edi [ ebp + 0x8 ]
push 0x1
push edi
call sub_45a15c
call [ GetFocus@IAT ]
mov [ ebx + 0xd8 ] eax
test eax eax
je r-xdata
push 0x0
push edi
call sub_45a15c
xor al al
push edi
push eax
call sub_45a1a5
test eax eax
je r-xdata
push esi
push [ ebx + 0xd8 ]
mov ecx ebx
call sub_45abc3
push 0x100
lea eax [ ebp - 0x204 ]
mov [ ebx + 0xd4 ] edi
push eax
push [ ebx + 0xd8 ]
call [ GetClassNameW@IAT ]
lea eax [ ebp - 0x204 ]
lea esi [ ebx + 0x8c ]
push eax
mov ecx esi
call sub_407d2c
and [ ebx + 0x124 ] 0x0
push ebx
push sub_45a3f5
push edi
call [ EnumChildWindows@IAT ]
push [ ebx + 0x124 ]
lea eax [ ebp - 0x204 ]
push [ esi ]
push r--data
push eax
call sub_423818
add esp 0x10
lea ecx [ ebp - 0x204 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_407d2c
push 0x0
push edi
call sub_45a15c
mov al 0x1
pop esi
jmp r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45a401
push ebp
mov ebp esp
sub esp 0x204
lea eax [ ebp - 0x204 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push 0x100
push eax
push edi
call [ GetClassNameW@IAT ]
call [ GetFocus@IAT ]
mov ebx eax
lea eax [ ebp - 0x204 ]
push eax
push [ esi + 0x8c ]
call sub_4236cc
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
inc [ esi + 0x124 ]
cmp edi [ esi + 0xd8 ]
jne r-xdata
push [ esi + 0xd4 ]
push ebx
call sub_45a1a5
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45a473
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
lea ecx [ ebp - 0x18 ]
mov [ edi + 0x88 ] ebx
mov [ edi + 0xd8 ] ebx
call sub_4077c7
lea ecx [ ebp - 0x28 ]
call sub_4077c7
mov eax [ ebp + 0xc ]
mov esi [ eax + 0x4 ]
test esi esi
jne r-xdata
push ebx
mov ecx eax
call sub_407b20
cmp [ eax ] 0x5b
jne r-xdata
push [ ebp + 0x8 ]
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0xc ]
lea eax [ esi - 0x1 ]
push eax
call sub_407b20
cmp [ eax ] 0x5d
jne r-xdata
mov ecx edi
call sub_45abc3
mov bl 0x1
test [ edi + 0x88 ] 0x8
je r-xdata
push esi
lea ecx [ edi + 0x9c ]
mov [ edi + 0x88 ] 0x8
call sub_4081a7
lea eax [ esi - 0x2 ]
mov [ ebp - 0x8 ] 0x1
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov esi [ EnumChildWindows@IAT ]
push edi
push sub_45a844
push [ ebp + 0x8 ]
mov [ edi + 0x124 ] ebx
call esi
cmp [ edi + 0xd8 ] ebx
jne r-xdata
mov eax [ edi + 0xa0 ]
mov [ edi + 0x128 ] eax
mov [ edi + 0x12c ] ebx
lea esi [ eax - 0x1 ]
test eax eax
je r-xdata
cmp [ edi + 0x88 ] ebx
jne r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_420c63
test al al
je r-xdata
mov eax [ edi + 0xd8 ]
test eax eax
je r-xdata
test [ edi + 0x88 ] 0x8
je r-xdata
test esi esi
js r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_420c63
test al al
je r-xdata
or [ edi + 0x88 ] 0x1
lea ecx [ edi + 0x8c ]
jmp r-xdata
lea ecx [ ebp - 0x28 ]
call sub_405a64
lea ecx [ ebp - 0x18 ]
call sub_405a64
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
lea eax [ edi + 0x9c ]
mov [ edi + 0x124 ] ebx
push eax
lea ecx [ edi + 0xbc ]
mov [ edi + 0x88 ] 0x4
call sub_4081a7
push edi
push sub_45a844
push [ ebp + 0x8 ]
call esi
push esi
lea ecx [ edi + 0x9c ]
call sub_407b52
movzx eax [ eax ]
push eax
call sub_4237ac
dec esi
pop ecx
test eax eax
je r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_420c63
test al al
je r-xdata
or [ edi + 0x88 ] 0x8
lea ecx [ edi + 0x9c ]
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call sub_4081a7
jmp r-xdata
xor ebx ebx
inc [ edi + 0x12c ]
test esi esi
jns r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_420c63
test al al
je r-xdata
or [ edi + 0x88 ] 0x10
lea esi [ edi + 0xec ]
mov ecx esi
call sub_415c2e
push ecx
lea eax [ ebp - 0x28 ]
mov ecx esi
push eax
call sub_415c72
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_420c63
test al al
je r-xdata
push [ ebp - 0x28 ]
or [ edi + 0x88 ] 0x20
call sub_42370a
pop ecx
mov [ edi + 0xcc ] eax
jmp r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
call sub_45a1c6
test al al
je r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_420c63
test al al
je r-xdata
or [ edi + 0x88 ] 0x400
lea ecx [ edi + 0xac ]
jmp r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_420c63
test al al
je r-xdata
push [ ebp - 0x28 ]
or [ edi + 0x88 ] 0x40
call sub_42370a
pop ecx
mov [ edi + 0xdc ] eax
jmp r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_420c63
test al al
je r-xdata
push [ ebp - 0x28 ]
or [ edi + 0x88 ] 0x80
call sub_42370a
pop ecx
mov [ edi + 0xe0 ] eax
jmp r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_420c63
test al al
je r-xdata
push [ ebp - 0x28 ]
or [ edi + 0x88 ] 0x100
call sub_42370a
pop ecx
mov [ edi + 0xe4 ] eax
jmp r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_420c63
test al al
je r-xdata
push [ ebp - 0x28 ]
or [ edi + 0x88 ] 0x200
call sub_42370a
pop ecx
mov [ edi + 0xe8 ] eax
jmp r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_420c63
test al al
je r-xdata
push [ ebp - 0x28 ]
or [ edi + 0x88 ] 0x2
call sub_42370a
pop ecx
mov [ edi + 0xd0 ] eax
jmp r-xdata
mov edx r--data
lea ecx [ ebp - 0x18 ]
call sub_45a14d
test al al
jne r-xdata
or [ edi + 0x88 ] 0x4
lea ecx [ edi + 0xbc ]
sub_45a7f1
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
push esi
push sub_45a844
push [ ebp + 0x8 ]
and [ esi + 0xd8 ] 0x0
and [ esi + 0x124 ] 0x0
mov [ esi + 0x88 ] 0x20
mov [ esi + 0xcc ] eax
call [ EnumChildWindows@IAT ]
mov eax [ esi + 0xd8 ]
test eax eax
je r-xdata
xor al al
push eax
mov ecx esi
call sub_45abc3
mov al 0x1
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_45a850
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xa2c
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
mov esi ebx
mov [ esp + 0xc ] ebx
mov eax [ edi + 0x88 ]
test al 0x8
je r-xdata
test eax 0x400
je r-xdata
mov esi [ ebp + 0x8 ]
lea eax [ esp + 0x28 ]
push 0x100
push eax
push esi
call [ GetClassNameW@IAT ]
lea eax [ esp + 0x28 ]
push eax
call sub_422d7c
pop ecx
mov ecx eax
mov [ esp + 0xc ] ecx
test ecx ecx
je r-xdata
test [ edi + 0x88 ] 0x10
je r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ edi + 0x8 ]
push esi
push 0x202
call sub_46170f
mov [ esp + 0xc ] eax
test eax eax
je r-xdata
mov eax [ edi + 0x128 ]
cmp eax ecx
jle r-xdata
lea esi [ ecx - 0x1 ]
test esi esi
js r-xdata
mov ecx [ edi + 0x88 ]
test cl 0x20
je r-xdata
push 0x400
lea eax [ esp + 0x234 ]
push eax
push [ ebp + 0x8 ]
call [ GetClassNameW@IAT ]
lea eax [ esp + 0x230 ]
push eax
lea ecx [ esp + 0x1c ]
call sub_407f41
lea eax [ esp + 0x18 ]
lea esi [ edi + 0xec ]
push eax
mov ecx esi
call sub_415d24
lea ecx [ esp + 0x18 ]
call sub_405a64
mov ecx esi
call sub_45f6d5
test al al
je r-xdata
xor esi esi
inc esi
mov [ esp + 0xc ] esi
lea ecx [ esp + 0x10 ]
push ecx
push 0x1388
push 0x2
push eax
push 0x101
push [ edi + 0x4 ]
push esi
call [ SendMessageTimeoutW@IAT ]
mov esi [ esp + 0xc ]
test eax eax
je r-xdata
xor eax eax
inc eax
mov edx [ edi + 0x12c ]
cmp edx ebx
jle r-xdata
mov esi [ ebp + 0x8 ]
movzx eax [ esp + esi * 2 + 0x28 ]
push eax
call sub_4237ac
dec esi
pop ecx
test eax eax
je r-xdata
test cl 0xc0
jne r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call [ GetDlgCtrlID@IAT ]
cmp [ edi + 0xcc ] eax
jne r-xdata
mov esi [ esp + 0xc ]
inc esi
inc ebx
push esi
lea ecx [ edi + 0x8 ]
call sub_461772
cmp [ esp + 0x10 ] ebx
jbe r-xdata
sub eax edx
add eax ebx
cmp ecx eax
jne r-xdata
mov ecx [ esp + 0xc ]
inc ebx
test esi esi
jns r-xdata
lea eax [ esp + 0x18 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call [ GetParent@IAT ]
push eax
call [ ScreenToClient@IAT ]
mov ecx [ edi + 0x88 ]
test cl 0x40
je r-xdata
test ecx 0x300
je r-xdata
mov [ edi + 0xd8 ] ebx
jmp r-xdata
push 0x202
lea eax [ esp + 0x2c ]
push eax
push esi
lea ecx [ edi + 0x8 ]
call sub_4617b8
push [ edi + 0xac ]
xor eax eax
mov [ esp + 0x22c ] ax
lea eax [ esp + 0x2c ]
push eax
call sub_4236cc
pop ecx
pop ecx
test eax eax
jne r-xdata
push ecx
lea eax [ esp + 0x2c ]
push eax
push [ edi + 0x9c ]
call sub_4237e2
add esp 0xc
test eax eax
jne r-xdata
test cl cl
jns r-xdata
mov eax [ edi + 0xdc ]
cmp eax [ esp + 0x10 ]
jne r-xdata
test cl 0x1
je r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
inc ebx
inc [ edi + 0x124 ]
lea eax [ esp + 0x28 ]
push [ edi + 0x124 ]
push eax
lea eax [ esp + 0x238 ]
push r--data
push eax
call sub_423818
push [ edi + 0x9c ]
lea eax [ esp + 0x244 ]
push eax
call sub_4236cc
add esp 0x18
test eax eax
jne r-xdata
test ecx 0x100
je r-xdata
mov eax [ edi + 0xe0 ]
cmp eax [ esp + 0x14 ]
jne r-xdata
inc esi
inc ebx
test [ edi + 0x88 ] 0x4
je r-xdata
push 0x100
lea eax [ esp + 0x234 ]
push eax
push [ ebp + 0x8 ]
call [ GetClassNameW@IAT ]
lea eax [ esp + 0x230 ]
push eax
push [ edi + 0x8c ]
call sub_4236cc
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ edi + 0xd8 ] esi
jmp r-xdata
test ecx 0x200
je r-xdata
mov eax [ esp + 0x20 ]
sub eax [ esp + 0x18 ]
cmp [ edi + 0xe4 ] eax
jne r-xdata
inc esi
inc ebx
test [ edi + 0x88 ] 0x2
je r-xdata
push 0x400
lea eax [ esp + 0x234 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowTextW@IAT ]
lea eax [ esp + 0x230 ]
push eax
push [ edi + 0xbc ]
call sub_4236cc
pop ecx
pop ecx
test eax eax
jne r-xdata
inc esi
inc ebx
mov eax [ esp + 0x24 ]
sub eax [ esp + 0x1c ]
cmp [ edi + 0xe8 ] eax
jne r-xdata
inc esi
inc ebx
cmp ebx esi
jne r-xdata
cmp ebx esi
jne r-xdata
inc esi
inc ebx
inc esi
inc ebx
mov eax [ ebp + 0x8 ]
mov [ edi + 0xd8 ] eax
inc esi
inc [ edi + 0x124 ]
mov eax [ edi + 0x124 ]
cmp eax [ edi + 0xd0 ]
jne r-xdata
inc ebx
sub_45abc3
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
push 0x4
call sub_420f36
pop ecx
test eax eax
je r-xdata
push [ esi ]
call j_sub_422ed5#3
pop ecx
xor eax eax
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov [ esi ] eax
mov al 0x1
pop esi
pop ebp
retn 0x4
sub_45abf4
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov edi ecx
call sub_4238c0
pop ecx
mov [ edi + 0x4 ] eax
lea esi [ eax + 0x1 ]
push esi
call sub_405a4b
push eax
mov [ edi + 0x8 ] eax
call sub_420f36
push esi
push [ ebp + 0x8 ]
mov [ edi ] eax
push eax
call sub_420fc0
add esp 0x10
mov ecx edi
call sub_456223
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_45ac37
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41619a
test al al
jne r-xdata
pop ebp
retn 0x8
push 0x1
jmp r-xdata
push 0x0
push [ ebp + 0x8 ]
call [ GetWindowThreadProcessId@IAT ]
push eax
call [ GetCurrentThreadId@IAT ]
push eax
call [ AttachThreadInput@IAT ]
sub_45ac8c
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi ecx
xor esi esi
cmp [ edi + 0x4 ] esi
ja r-xdata
push ebx
push [ ebp + 0x8 ]
call sub_422d7c
mov ebx [ edi + 0x4 ]
mov [ ebp - 0x8 ] eax
pop ecx
test ebx ebx
je r-xdata
or eax 0xffffffff
jmp r-xdata
or eax 0xffffffff
mov ecx [ edi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax esi
jmp r-xdata
mov ax [ edi ]
cmp ax [ edx ]
jne r-xdata
pop ebx
inc esi
add ecx 0x2
cmp esi ebx
jae r-xdata
add edi 0x2
add edx 0x2
dec [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov edi ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
sub_45acf3
push ebx
push esi
mov esi [ ecx ]
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
mov ebx 0x40000000
jmp r-xdata
test ebx eax
jne r-xdata
push esi
call sub_45ad2b
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
push esi
call sub_45ad2b
mov esi eax
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
sub_45ad4a
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push ebx
push [ esi ]
call [ GetWindowRect@IAT ]
test eax eax
je r-xdata
xor al al
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx esi
call sub_45acf3
mov ecx eax
test ecx ecx
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebx ]
mov esi [ ebx + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
sub esi eax
push edi
mov edi [ ebx + 0x8 ]
sub edi [ ebx ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push ecx
call [ ScreenToClient@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ebx ] eax
add eax edi
mov [ ebx + 0x8 ] eax
mov [ ebx + 0x4 ] ecx
lea eax [ esi + ecx ]
mov [ ebx + 0xc ] eax
pop edi
sub_45adbc
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov ebx ecx
mov ecx [ ebp + 0x8 ]
push edi
mov [ ebp - 0x8 ] ebx
call sub_407eec
push [ ebx ]
call sub_41619a
test al al
je r-xdata
mov ecx ebx
call sub_45ae82
mov ebx eax
test ebx ebx
jne r-xdata
xor al al
jmp r-xdata
xor ecx ecx
lea esi [ ebx + 0x1 ]
push 0x2
pop edx
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
mov edi eax
mov eax [ ebp - 0x8 ]
push edi
push esi
push 0xd
push [ eax ]
call [ SendMessageW@IAT ]
test eax eax
jle r-xdata
mov ebx 0x7fff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push edi
call j_sub_422ed5#3
pop ecx
mov al 0x1
push edi
call sub_4238c0
pop ecx
cmp eax ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push edi
call sub_407d2c
xor ecx ecx
test eax eax
je r-xdata
push edi
lea ecx [ ebp - 0x18 ]
call sub_45abf4
push [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40793a
lea ecx [ ebp - 0x18 ]
call sub_405a64
jmp r-xdata
mov dl [ ecx + edi ]
cmp dl 0x20
jl r-xdata
cmp dl 0x7e
jg r-xdata
inc ecx
cmp ecx eax
jb r-xdata
sub_45ae82
push esi
mov esi ecx
push [ esi ]
call sub_41619a
test al al
je r-xdata
push 0x0
push 0x0
push 0xe
push [ esi ]
call [ SendMessageW@IAT ]
pop esi
retn
xor eax eax
pop esi
retn
sub_45aea4
push ebp
mov ebp esp
sub esp 0x210
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x10 ]
call sub_4077c7
push 0xff
lea eax [ ebp - 0x210 ]
push eax
push [ esi ]
call [ GetClassNameW@IAT ]
lea eax [ ebp - 0x210 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_407d2c
mov eax [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x10 ]
push [ eax ]
call sub_45ac8c
cmp eax 0xffffffff
lea ecx [ ebp - 0x10 ]
setne bl
call sub_405a64
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45af02
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx ]
call [ MoveWindow@IAT ]
test eax eax
setne al
pop ebp
retn 0x10
sub_45af24
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
call sub_416154
mov eax [ ebx + 0x8 ]
push 0x4
pop ecx
cmp [ esi + 0xc ] eax
jae r-xdata
mov eax [ ebx + 0x8 ]
xor edi edi
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
push 0x8
pop edx
cmp eax edx
jb r-xdata
pop edi
push ecx
call sub_420f36
mov edx eax
pop ecx
test edx edx
je r-xdata
mov [ esi + 0xc ] edx
xor ecx ecx
mov eax edx
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
cmp [ esi + 0x4 ] 0x0
mov edi eax
pop ecx
je r-xdata
mov edx eax
xor edx edx
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + edi * 4 ]
mov ecx [ ecx ]
mov [ edx ] ecx
jmp r-xdata
push 0x4
mov [ esi + 0x4 ] edi
pop ecx
push [ esi + 0x4 ]
call j_sub_422ed5#3
pop ecx
mov eax [ esi + 0x4 ]
push 0x4
pop ecx
mov [ eax + edi * 4 ] edx
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_45afc0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_416181
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422ed5#3
pop ecx
sub_45afdf
push ebp
mov ebp esp
sub esp 0x38
lea ecx [ ebp - 0x14 ]
push esi
call sub_4077c7
lea ecx [ ebp - 0x24 ]
call sub_4077c7
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
push r--data
push r--data
push [ esi ]
call sub_42307d
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ esi ]
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x7
push r--data
push [ esi ]
call sub_42394b
add esp 0xc
test eax eax
jne r-xdata
push r--data
jmp r-xdata
push 0x7
push r--data
push [ esi ]
call sub_42394b
add esp 0xc
test eax eax
jne r-xdata
push r--data
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_407d2c
push 0xa
push r--data
push [ esi ]
call sub_42394b
add esp 0xc
test eax eax
jne r-xdata
push r--data
lea ecx [ ebp - 0x14 ]
call sub_407d2c
push 0xffffffff
push 0x7
jmp r-xdata
push r--data
push [ esi ]
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
lea ecx [ ebp - 0x14 ]
call sub_407d2c
push 0xffffffff
push 0xa
lea eax [ ebp - 0x34 ]
mov ecx esi
push eax
call sub_4561e1
push eax
lea ecx [ ebp - 0x24 ]
call sub_4081a7
lea ecx [ ebp - 0x34 ]
call sub_405a64
lea eax [ ebp - 0x24 ]
push eax
call sub_45b127
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407c8e
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call sub_405a64
lea ecx [ ebp - 0x14 ]
call sub_405a64
pop esi
mov esp ebp
pop ebp
retn 0x4
push r--data
jmp r-xdata
push r--data
lea ecx [ ebp - 0x14 ]
call sub_407e0b
lea eax [ ebp - 0x14 ]
mov ecx esi
push eax
call sub_4081a7
sub_45b127
push ebp
mov ebp esp
sub esp 0x14
lea ecx [ ebp - 0x14 ]
push ebx
push edi
call sub_4077c7
xor eax eax
push 0x3b
mov edi eax
pop ebx
lea eax [ ebp - 0x14 ]
push eax
call sub_4081a7
lea ecx [ ebp - 0x14 ]
call sub_405a64
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push edi
call sub_407b52
cmp [ eax ] bx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push edi
call sub_407b52
lea ecx [ ebp - 0x14 ]
movzx eax [ eax ]
push eax
call sub_407a84
inc edi
jmp r-xdata
push ebx
lea ecx [ ebp - 0x14 ]
call sub_407a84
mov ecx [ ebp + 0x8 ]
push edi
call sub_407b52
xor ecx ecx
cmp [ eax ] cx
mov ecx [ ebp + 0x8 ]
je r-xdata
sub_45b1a2
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x81c
push ebx
push esi
mov ebx ecx
push edi
xor edi edi
mov esi edi
mov [ esp + 0xc ] edi
test [ ebx + 0x8 ] 0x40
je r-xdata
test [ ebx + 0x8 ] 0x8
je r-xdata
inc edi
inc esi
mov [ esp + 0xc ] esi
test [ ebx + 0x8 ] 0x1
je r-xdata
push 0x400
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x8 ]
call [ GetClassNameW@IAT ]
lea eax [ esp + 0x20 ]
push eax
push [ ebx + 0xa4 ]
call sub_4236cc
pop ecx
pop ecx
test eax eax
jne r-xdata
test [ ebx + 0x8 ] 0x2
je r-xdata
push 0x400
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowTextW@IAT ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
inc esi
mov [ esp + 0xc ] esi
inc edi
test [ ebx + 0x8 ] 0x10
je r-xdata
push 0x400
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowTextW@IAT ]
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_407f41
lea eax [ esp + 0x10 ]
push eax
lea ecx [ ebx + 0x34 ]
call sub_415d24
lea ecx [ esp + 0x10 ]
call sub_405a64
lea ecx [ ebx + 0x34 ]
call sub_45f6d5
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov [ esp + 0xc ] edi
dec eax
je r-xdata
lea eax [ esp + 0x20 ]
push eax
call sub_422d7c
pop ecx
push eax
lea eax [ esp + 0x24 ]
push eax
call [ CharUpperBuffW@IAT ]
test [ ebx + 0x8 ] 0x4
je r-xdata
push 0x400
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x8 ]
call [ GetClassNameW@IAT ]
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_407f41
lea eax [ esp + 0x10 ]
push eax
lea ecx [ ebx + 0x6c ]
call sub_415d24
lea ecx [ esp + 0x10 ]
call sub_405a64
lea ecx [ ebx + 0x6c ]
call sub_45f6d5
test al al
je r-xdata
mov esi [ esp + 0xc ]
inc esi
mov [ esp + 0xc ] esi
test [ ebx + 0x8 ] 0x18
jne r-xdata
push [ ebx + 0x18 ]
lea eax [ esp + 0x24 ]
push eax
push [ ebx + 0x14 ]
call sub_4237e2
add esp 0xc
dec eax
je r-xdata
mov ecx [ ebx + 0x8 ]
test ecx 0x780
je r-xdata
cmp edi esi
jne r-xdata
mov esi [ esp + 0xc ]
inc esi
inc edi
inc edi
push 0x400
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x8 ]
call [ GetClassNameW@IAT ]
lea eax [ esp + 0x20 ]
push eax
push r--data
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
test [ ebx + 0x8 ] 0x18
jne r-xdata
inc edi
push [ ebx + 0x14 ]
lea eax [ esp + 0x24 ]
push eax
call sub_423afa
pop ecx
pop ecx
test eax eax
je r-xdata
dec eax
jne r-xdata
test cl 0x20
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
mov ecx [ ebx + 0x8 ]
test cl cl
jns r-xdata
inc esi
push [ ebp + 0x8 ]
mov ecx ebx
call sub_45b469
test al al
je r-xdata
inc esi
mov [ esp + 0xc ] esi
push 0x400
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x8 ]
call [ GetClassNameW@IAT ]
lea eax [ esp + 0x20 ]
push eax
push r--data
call sub_4236cc
pop ecx
pop ecx
test eax eax
jne r-xdata
jmp r-xdata
push [ ebx + 0x14 ]
lea eax [ esp + 0x24 ]
push eax
call sub_4236cc
pop ecx
pop ecx
jmp r-xdata
cmp edi esi
jne r-xdata
cmp edi esi
jne r-xdata
mov edx [ esp + 0x14 ]
test ecx 0x100
je r-xdata
mov eax [ esp + 0x10 ]
cmp [ ebx + 0xbc ] eax
jne r-xdata
inc edi
mov edi [ esp + 0xc ]
test eax eax
jne r-xdata
xor eax eax
inc eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebx + 0xd4 ]
call sub_4034c2
inc [ ebx + 0xcc ]
xor eax eax
cmp [ ebx + 0x4 ] al
sete al
jmp r-xdata
inc esi
inc [ ebx + 0xb8 ]
mov eax [ ebx + 0xb8 ]
cmp eax [ ebx + 0xb4 ]
jne r-xdata
test ecx 0x200
je r-xdata
cmp [ ebx + 0xc0 ] edx
jne r-xdata
inc esi
inc edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc edi
test ecx 0x400
je r-xdata
mov eax [ esp + 0x18 ]
sub eax [ esp + 0x10 ]
cmp [ ebx + 0xc4 ] eax
jne r-xdata
inc esi
inc edi
mov eax [ esp + 0x1c ]
sub eax edx
cmp [ ebx + 0xc8 ] eax
jne r-xdata
inc esi
inc edi
inc esi
inc edi
sub_45b469
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x28 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call sub_41619a
test al al
je r-xdata
mov al 0x1
jmp r-xdata
push esi
push sub_45b4ae
push [ ebp + 0x8 ]
mov [ esi + 0xd0 ] 0x0
call [ EnumChildWindows@IAT ]
cmp [ esi + 0xd0 ] 0x0
setne al
xor al al
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_45b4ba
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov ebx ecx
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push 0xe
push [ ebp + 0x8 ]
call [ SendMessageW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp [ ebx + 0x5 ] 0x1
jne r-xdata
lea esi [ eax + 0x1 ]
xor ecx ecx
push 0x2
pop edx
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
mov edi eax
push edi
push esi
push 0xd
push [ ebp + 0x8 ]
call [ SendMessageW@IAT ]
mov ecx [ ebp - 0x4 ]
xor edx edx
mov [ edi + ecx * 2 ] dx
test eax eax
jg r-xdata
mov eax 0x7fff
mov [ ebp - 0x4 ] eax
xor eax eax
inc eax
cmp [ ebx + 0xc ] dl
jne r-xdata
xor esi esi
inc esi
jmp r-xdata
push [ ebx + 0x24 ]
push edi
call sub_423afa
pop ecx
pop ecx
test eax eax
je r-xdata
push edi
call sub_422d7c
pop ecx
push eax
push edi
call [ CharUpperBuffW@IAT ]
push edi
call j_sub_422ed5#3
pop ecx
mov eax esi
jmp r-xdata
push edi
call j_sub_422ed5#3
pop ecx
mov [ ebx + 0xd0 ] 0x1
xor esi esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45b57d
push ebp
mov ebp esp
push edi
mov edi ecx
mov ecx [ edi + 0x8 ]
mov [ edi ] r--data
test ecx ecx
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
push esi
mov eax edi
pop edi
pop ebp
retn 0x4
push edi
call j_sub_422ed5#3
pop ecx
mov esi [ ecx + 0x38 ]
push ecx
call sub_41ff5c
mov ecx esi
test esi esi
jne r-xdata
pop esi
sub_45b5b5
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0xc ]
push ebx
push esi
mov esi ecx
xor ecx ecx
mov [ ebp - 0x4 ] esi
push edi
mov [ esi ] ecx
lea edi [ esi + 0xc ]
mov [ edi ] ecx
mov [ esi + 0x28 ] ecx
mov [ esi + 0x30 ] ecx
mov [ esi + 0x34 ] ecx
mov [ esi + 0x3c ] cx
mov [ esi + 0x8 ] ecx
test edx edx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
mov [ eax ] ecx
movsx eax [ ebx + 0x88 ]
mov [ esi + 0x10 ] eax
movsx eax [ ebx + 0x88 ]
movsx ecx [ ebx + 0x8c ]
add ecx eax
mov [ esi + 0x18 ] ecx
movsx eax [ ebx + 0x8a ]
mov [ esi + 0x14 ] eax
movsx eax [ ebx + 0x8a ]
movsx ecx [ ebx + 0x8e ]
add ecx eax
mov [ esi + 0x4 ] ebx
mov eax [ ebp + 0x8 ]
mov [ esi + 0x1c ] ecx
mov ecx edx
mov [ esi ] eax
call sub_4093dd
test al al
je r-xdata
mov eax 0x80004005
cmp [ edx + 0xc ] 0x8
jne r-xdata
xor eax eax
mov eax [ edx ]
jmp r-xdata
xor ecx ecx
push ecx
push ecx
push ecx
push eax
push 0xc
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov eax [ eax + 0x8 ]
push edi
push r--data
push eax
mov ecx [ eax ]
call [ ecx ]
test eax eax
js r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x8 ] esi
mov [ eax + 0x4 ] 0x1
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
jmp r-xdata
push 0x8
mov [ esi + 0x28 ] eax
call sub_420f36
pop ecx
test eax eax
je r-xdata
xor eax eax
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
jmp r-xdata
push 0xc
mov [ esi + 0x30 ] eax
call sub_420f36
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
jmp r-xdata
push 0x8
mov [ esi + 0x2c ] eax
call sub_420f36
pop ecx
test eax eax
je r-xdata
push 0x1
push [ edi ]
call [ OleSetContainedObject@IAT ]
mov ecx [ edi ]
lea eax [ esi + 0x10 ]
push eax
mov eax [ esi ]
mov edx [ ecx ]
push [ eax + 0x14 ]
push 0xffffffff
push [ esi + 0x28 ]
push 0x0
push 0xffffffff
push ecx
call [ edx + 0x2c ]
push 0x5
pop esi
mov eax [ ebp + 0x8 ]
push [ esi + 0x34 ]
push 0x2
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x1c ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ esi + 0x34 ] eax
mov eax [ edi ]
push r--data
push r--data
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
movsx eax [ ebx + 0x8c ]
lea edx [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0xc ]
movsx eax [ ebx + 0x8e ]
mov [ ebp - 0x8 ] eax
call sub_45ba52
mov eax [ edi ]
lea edx [ ebp - 0x14 ]
push edx
push 0x1
push eax
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ edi ]
push [ esi + 0x28 ]
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
mov ecx [ edi ]
lea eax [ esi + 0x38 ]
push eax
push [ esi + 0x34 ]
mov edx [ ecx ]
push ecx
call [ edx + 0x4c ]
mov eax [ edi ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
push eax
mov ecx [ eax ]
call [ ecx ]
test eax eax
js r-xdata
mov esi [ ebp - 0x4 ]
jns r-xdata
test esi esi
jne r-xdata
mov eax [ edi ]
lea edx [ ebp + 0xc ]
push edx
push r--data
push eax
mov ecx [ eax ]
call [ ecx ]
mov edi eax
test edi edi
jns r-xdata
mov ecx esi
call sub_45bacc
push 0x1
push 0x0
push 0x0
push ebx
jmp r-xdata
mov eax [ edi ]
push eax
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
dec esi
test ebx ebx
je r-xdata
test ebx ebx
mov eax [ ebp + 0xc ]
lea ebx [ esi + 0x8 ]
push ebx
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
mov ecx [ ebp + 0xc ]
mov edi eax
push ecx
mov edx [ ecx ]
call [ edx + 0x8 ]
test edi edi
js r-xdata
mov ecx esi
call sub_45bacc
push 0x1
push 0x0
push 0x0
push edi
jmp r-xdata
mov ecx rw-data
call sub_4794db
mov ecx [ ebp + 0x14 ]
mov eax [ ebx ]
mov [ ecx ] eax
jmp r-xdata
sub_45b838
push ebp
mov ebp esp
push esi
push 0xc
mov esi ecx
call sub_420f36
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x1
mov [ eax + 0x4 ] esi
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
jmp r-xdata
push 0x8
mov [ esi ] eax
call sub_420f36
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
jmp r-xdata
push 0x8
mov [ esi + 0x4 ] eax
call sub_420f36
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
jmp r-xdata
push 0xc
mov [ esi + 0x8 ] eax
call sub_420f36
pop ecx
mov ecx [ ebp + 0x8 ]
test eax eax
je r-xdata
and [ esi + 0x10 ] 0x0
mov [ esi + 0xc ] eax
mov eax esi
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] 0x0
pop esi
pop ebp
retn 0x4
sub_45b8cc
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi + 0xc ] edi
je r-xdata
cmp [ esi + 0x8 ] edi
je r-xdata
push [ esi + 0xc ]
call j_sub_422ed5#3
pop ecx
mov [ esi + 0xc ] edi
cmp [ esi + 0x4 ] edi
je r-xdata
push [ esi + 0x8 ]
call j_sub_422ed5#3
pop ecx
mov [ esi + 0x8 ] edi
cmp [ esi ] edi
je r-xdata
push [ esi + 0x4 ]
call j_sub_422ed5#3
pop ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x14 ] edi
pop edi
pop esi
retn
push [ esi ]
call j_sub_422ed5#3
pop ecx
mov [ esi ] edi
sub_45b92e
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
mov [ esi ] r--data
test ecx ecx
je r-xdata
push esi
call j_sub_422ed5#3
pop ecx
mov eax esi
pop esi
retn 0x4
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
and [ esi + 0x8 ] 0x0
sub_45b955
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ edi + 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov [ eax + 0x18 ] bl
mov eax [ edi + 0x4 ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
mov eax [ eax + 0xc ]
push eax
mov ecx [ eax ]
call [ ecx ]
test eax eax
js r-xdata
lea esi [ edi + 0x8 ]
mov [ esi ] eax
jmp r-xdata
mov eax 0x80004005
mov eax [ ebp + 0x8 ]
lea esi [ edi + 0x8 ]
push esi
push ebx
push ebx
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ esi ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov edx [ ecx ]
push [ eax + 0x30 ]
push ecx
call [ edx + 0xc ]
test eax eax
js r-xdata
mov eax [ esi ]
push 0x1
push eax
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
add eax 0x10
push eax
mov edx [ ecx ]
push ecx
call [ edx + 0x18 ]
mov eax [ esi ]
push 0x1
push eax
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ edi + 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax + 0x18 ] 0x1
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_45ba05
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
xor esi esi
cmp [ edi + 0x14 ] esi
je r-xdata
xor eax eax
push 0x40
call sub_420f36
pop ecx
test eax eax
je r-xdata
test esi esi
je r-xdata
push [ ebp + 0x10 ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
call sub_45b5b5
mov esi eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push ecx
mov ecx esi
call sub_45b919
mov eax esi
jmp r-xdata
pop edi
pop esi
pop ecx
pop ebp
retn 0xc
sub_45ba52
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov eax edx
mov [ ebp - 0x8 ] eax
test ecx ecx
jne r-xdata
test eax eax
je r-xdata
push 0x80004003
call sub_457411
push ebx
push esi
push edi
push 0x0
call [ GetDC@IAT ]
mov esi [ GetDeviceCaps@IAT ]
mov ebx eax
push 0x58
push ebx
call esi
push 0x5a
push ebx
mov edi eax
call esi
push ebx
push 0x0
mov [ ebp - 0xc ] eax
call [ ReleaseDC@IAT ]
mov ebx [ ebp - 0x4 ]
mov esi [ MulDiv@IAT ]
push edi
push [ ebx ]
push 0x9ec
call esi
push [ ebp - 0xc ]
mov edi [ ebp - 0x8 ]
push [ ebx + 0x4 ]
push 0x9ec
mov [ edi ] eax
call esi
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45bacc
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
mov edx [ esi + 0xc ]
test edx edx
je r-xdata
mov [ esi + 0x8 ] ebx
mov [ esi + 0x3c ] bl
cmp [ esi + 0x34 ] ebx
je r-xdata
mov ecx [ edx ]
lea eax [ esi + 0x10 ]
push eax
mov eax [ esi ]
push [ eax + 0x14 ]
push 0xffffffff
push [ esi + 0x28 ]
push ebx
push 0xfffffffd
push edx
call [ ecx + 0x2c ]
cmp [ esi + 0x3d ] bl
jne r-xdata
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
push [ esi + 0x34 ]
call j_sub_422ed5#3
pop ecx
mov [ esi + 0x34 ] ebx
mov eax [ esi + 0xc ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
push eax
mov ecx [ eax ]
call [ ecx ]
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x3c ] bl
je r-xdata
cmp [ esi + 0x30 ] ebx
je r-xdata
push ecx
call sub_45b92e
mov [ esi + 0x2c ] ebx
push ebx
push [ esi + 0xc ]
call [ OleSetContainedObject@IAT ]
mov eax [ esi + 0xc ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push eax
mov ecx [ eax ]
call [ ecx ]
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x3d ] bl
je r-xdata
cmp [ esi + 0x28 ] ebx
je r-xdata
push [ esi + 0x30 ]
call j_sub_422ed5#3
pop ecx
mov [ esi + 0x30 ] ebx
mov eax [ esi + 0xc ]
push [ esi + 0x38 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ esi + 0xc ]
push ebx
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esi + 0xc ]
push ebx
push r--data
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
push [ esi + 0x8 ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov eax [ ecx ]
push ebx
push 0x2
push 0x1
push ecx
call [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x3c ] bl
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x18 ]
mov ecx [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ esi + 0x28 ]
call j_sub_422ed5#3
pop ecx
mov [ esi + 0x28 ] ebx
mov eax [ esi + 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ esi + 0xc ] ebx
push [ esi + 0x8 ]
call [ DestroyWindow@IAT ]
mov eax [ ecx ]
push ecx
call [ eax + 0x14 ]
sub_45bc09
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
xor edx edx
cmp ecx 0x3
jl r-xdata
mov eax edx
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ eax + 0x4 ]
push edi
add esi 0xc
lea edi [ ecx - 0x2 ]
add esi 0x4
dec edi
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ esi ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebx
cmp [ ecx + 0x90 ] 0x1d
jne r-xdata
cmp [ ecx + 0x80 ] 0x0
je r-xdata
inc edx
sub_45bc5a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x80 ]
test ecx ecx
je r-xdata
push ecx
call sub_45b919
and [ esi + 0x80 ] 0x0
sub_45bc81
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x8 ]
call [ GetClientRect@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call [ CopyRect@IAT ]
xor eax eax
mov esp ebp
pop ebp
retn 0x8
sub_45bcac
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor eax eax
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
mov ecx [ ecx ]
mov [ eax ] ecx
sub_45bcc8
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov eax 0x80004003
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
mov [ ecx ] eax
xor eax eax
jmp r-xdata
pop ebp
retn 0x8
sub_45bcee
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
xor eax eax
inc eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ eax + 0x14 ]
mov [ ecx ] eax
xor eax eax
jmp r-xdata
pop ebp
retn 0x8
sub_45bd14
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ eax ] ebx
mov eax [ edi + 0x4 ]
mov eax [ eax ]
mov ecx [ eax + 0xc ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov eax [ edi + 0x4 ]
add eax 0x10
push eax
push [ ebp + 0x14 ]
call [ CopyRect@IAT ]
mov eax [ edi + 0x4 ]
add eax 0x10
push eax
push [ ebp + 0x18 ]
call [ CopyRect@IAT ]
mov ecx [ ebp + 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] 0x14
mov eax [ edi + 0x4 ]
pop edi
mov eax [ eax ]
mov eax [ eax + 0x14 ]
mov [ ecx + 0x8 ] eax
xor eax eax
mov [ ecx + 0xc ] ebx
mov [ ecx + 0x10 ] ebx
pop ebx
pop ebp
retn 0x18
sub_45bd75
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax ecx
test esi esi
je r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x90 ] 0x1d
jne r-xdata
pop esi
pop ebp
retn 0x4
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov esi [ esi + 0x80 ]
test esi esi
je r-xdata
mov eax [ ecx ]
push 0x0
push ecx
call [ eax + 0x1c ]
and [ ebp + 0x8 ] 0x0
lea edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push r--data
push ecx
call [ eax ]
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x18 ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
cmp [ eax + 0x18 ] 0x0
jne r-xdata
cmp [ esi + 0x3c ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ esi + 0xc ]
lea eax [ esi + 0x10 ]
push eax
push [ esi + 0x8 ]
mov edx [ ecx ]
push 0xffffffff
push [ esi + 0x28 ]
push 0x0
push 0xffffffff
push ecx
call [ edx + 0x2c ]
jmp r-xdata
mov eax [ ecx ]
push 0x0
push ecx
call [ eax + 0x1c ]
sub_45be13
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0xfffffd3b
jne r-xdata
cmp eax 0xfffffd2b
jne r-xdata
mov eax [ ebp + 0x20 ]
push 0xb
pop ecx
mov [ eax ] cx
xor ecx ecx
inc ecx
cmp eax 0xffffea83
jne r-xdata
mov eax [ ebp + 0x20 ]
push 0x3
pop ecx
mov [ eax ] cx
mov [ eax + 0x8 ] 0x400
jmp r-xdata
pop ebp
retn 0x24
cmp eax 0xffffea82
je r-xdata
mov eax [ ebp + 0x20 ]
push 0xb
pop ecx
mov [ eax ] cx
xor ecx ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax 0x80020003
mov [ eax + 0x8 ] cx
sub_45be71
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x10
pop ebx
push ebx
push r--data
push esi
mov edi ecx
call sub_421604
add esp 0xc
test eax eax
jne r-xdata
push ebx
push r--data
push esi
call sub_421604
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ edi + 0x28 ]
push ebx
push r--data
push esi
call sub_421604
add esp 0xc
test eax eax
je r-xdata
mov ecx [ edi + 0x30 ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push ebx
push r--data
push esi
call sub_421604
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
xor eax eax
jmp r-xdata
push ebx
push r--data
push esi
call sub_421604
add esp 0xc
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0xc ]
jmp r-xdata
push ebx
push r--data
push esi
call sub_421604
add esp 0xc
test eax eax
jne r-xdata
push ebx
push r--data
push esi
call sub_421604
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ edi + 0x34 ]
jmp r-xdata
push ebx
push r--data
push esi
call sub_421604
add esp 0xc
test eax eax
je r-xdata
mov ecx [ edi + 0x2c ]
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax 0x80004002
push [ ebp + 0xc ]
push esi
call sub_45bf60
jmp r-xdata
sub_45bf60
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x10
pop ebx
push ebx
push r--data
push esi
mov edi ecx
call sub_421604
add esp 0xc
test eax eax
jne r-xdata
push ebx
push r--data
push esi
call sub_421604
add esp 0xc
test eax eax
je r-xdata
mov ecx [ edi ]
push ebx
push r--data
push esi
call sub_421604
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push ebx
push r--data
push esi
call sub_421604
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ edi + 0x4 ]
jmp r-xdata
push ebx
push r--data
push esi
call sub_421604
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ edi + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
xor eax eax
jmp r-xdata
mov eax 0x80004002
mov ecx [ edi + 0xc ]
jmp r-xdata
sub_45bff3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
movsx eax [ edx + 0x88 ]
mov [ ecx + 0x10 ] eax
movsx eax [ edx + 0x88 ]
movsx ecx [ edx + 0x8c ]
add ecx eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x18 ] ecx
mov eax [ esi + 0x4 ]
movsx ecx [ edx + 0x8a ]
mov [ eax + 0x14 ] ecx
movsx eax [ edx + 0x8a ]
movsx ecx [ edx + 0x8e ]
lea edx [ ebp + 0x8 ]
add ecx eax
mov eax [ esi + 0x4 ]
push edx
push r--data
mov [ eax + 0x1c ] ecx
mov eax [ esi + 0x4 ]
mov eax [ eax + 0xc ]
push eax
mov ecx [ eax ]
call [ ecx ]
test eax eax
js r-xdata
mov eax 0x8000ffff
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
add eax 0x20
push eax
push 0x1
push ecx
mov edx [ ecx ]
call [ edx + 0x48 ]
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
add eax 0x10
push eax
push [ ebp + 0xc ]
mov edx [ ecx ]
push ecx
call [ edx + 0x1c ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_45c097
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x8
push 0x1
push 0x0
push [ eax + 0x14 ]
call [ InvalidateRect@IAT ]
sub_45c0b9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
pop ebp
retn 0xc
push 0x1
push 0x0
push [ eax + 0x14 ]
call [ InvalidateRect@IAT ]
sub_45c13a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
jmp r-xdata
mov eax [ edi + 0x4 ]
pop edi
mov [ eax + 0x10 ] esi
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
sub_45c16f
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x8 ]
call [ GetClientRect@IAT ]
sub_45c193
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax 0x80004001
pop esi
pop ebp
retn 0x10
push [ eax + 0x14 ]
call [ GetMenu@IAT ]
mov eax [ esi + 0x4 ]
push [ eax + 0x10 ]
push esi
push [ ebp + 0x14 ]
push [ eax + 0x14 ]
push [ ebp + 0x10 ]
call [ OleSetMenuDescriptor@IAT ]
sub_45c1ca
push ebp
mov ebp esp
push ecx
push ebx
mov ebx ecx
push esi
push edi
lea ecx [ ebx + 0x24 ]
call sub_4077c7
lea ecx [ ebx + 0x34 ]
call sub_4077c7
lea ecx [ ebx + 0x44 ]
call sub_4077c7
mov eax ebx
xor ecx ecx
push r--data
and [ eax + 0x54 ] 0x0
mov [ eax + 0x20 ] cx
lea ecx [ ebx + 0x24 ]
call sub_407d2c
fld [ r--data ]
lea ecx [ ebx + 0x34 ]
mov esi ebx
mov eax 0x80000000
push r--data
or [ esi ] 0xffffffff
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
xor eax eax
fstp [ esi + 0x18 ]
mov [ esi + 0x58 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x10 ] eax
call sub_407d2c
push r--data
lea ecx [ ebx + 0x44 ]
call sub_407d2c
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45c27e
mov edx ecx
mov ecx [ edx ]
cmp ecx [ edx + 0x8 ]
jle r-xdata
mov eax [ edx + 0x4 ]
cmp eax [ edx + 0xc ]
jle r-xdata
mov eax [ edx + 0x8 ]
mov [ edx ] eax
mov [ edx + 0x8 ] ecx
retn
mov ecx eax
mov eax [ edx + 0xc ]
mov [ edx + 0x4 ] eax
mov [ edx + 0xc ] ecx
sub_45c2c0
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
push 0x63
push [ rw-data ]
mov esi ecx
call [ LoadIconW@IAT ]
push eax
xor ebx ebx
push ebx
push 0x80
push [ esi + 0x54 ]
call [ SendMessageW@IAT ]
mov edi [ SetWindowTextW@IAT ]
cmp [ esi + 0x28 ] ebx
jbe r-xdata
cmp [ esi + 0x48 ] ebx
mov ebx [ GetDlgItem@IAT ]
jbe r-xdata
push [ esi + 0x24 ]
push [ esi + 0x54 ]
call edi
cmp [ esi + 0x38 ] 0x0
jbe r-xdata
push 0x3ea
push [ esi + 0x54 ]
call ebx
push [ esi + 0x44 ]
push eax
call edi
movzx eax [ esi + 0x20 ]
mov ebx [ SendDlgItemMessageW@IAT ]
test ax ax
je r-xdata
push 0x3e9
push [ esi + 0x54 ]
call ebx
push [ esi + 0x34 ]
push eax
call edi
cmp [ esi + 0x14 ] 0x0
jle r-xdata
push 0x0
push eax
push 0xcc
push 0x3e9
push [ esi + 0x54 ]
call ebx
lea eax [ ebp - 0x1c ]
push eax
push [ esi + 0x54 ]
call [ GetWindowRect@IAT ]
lea ecx [ ebp - 0x1c ]
call sub_45c27e
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp - 0x18 ]
sub ecx eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
sub eax ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov ecx 0x80000000
mov eax [ esi + 0x8 ]
cmp eax ecx
je r-xdata
push 0x0
push [ esi + 0x14 ]
push 0xc5
push 0x3e9
push [ esi + 0x54 ]
call ebx
cmp [ esi + 0xc ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
cmp [ esi ] 0x0
jle r-xdata
mov ebx [ esi + 0xc ]
cmp [ esi + 0x4 ] 0x0
jle r-xdata
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
lea ecx [ esi + 0x24 ]
mov edx r--data
call sub_45a14d
test al al
je r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
lea ecx [ ebp - 0x1c ]
call sub_45c27e
test [ esi + 0x10 ] 0x40
je r-xdata
push [ esi + 0x24 ]
push [ esi + 0x54 ]
call edi
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x8 ]
sub eax [ ebp - 0x1c ]
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
jmp r-xdata
push 0x0
push edi
push [ ebp - 0x8 ]
push ebx
push ecx
push [ esi + 0x54 ]
call [ MoveWindow@IAT ]
lea eax [ ebp - 0x1c ]
push eax
push [ esi + 0x54 ]
call [ GetClientRect@IAT ]
lea ecx [ ebp - 0x1c ]
call sub_45c27e
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
shl eax 0x10
sub eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x5
push [ esi + 0x54 ]
call [ PostMessageW@IAT ]
fldz
fcomp [ esi + 0x18 ]
fnstsw ax
test ah 0x5
jpe r-xdata
mov eax [ ebp - 0x10 ]
sub eax edi
sub eax [ ebp - 0x18 ]
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
test [ esi + 0x10 ] 0x80
mov edi [ ebp - 0x4 ]
je r-xdata
pop edi
xor eax eax
pop esi
inc eax
pop ebx
mov esp ebp
pop ebp
retn
fld [ esi + 0x18 ]
fmul [ r--data ]
push 0x0
call sub_43b536
push eax
push 0x40a
push [ esi + 0x54 ]
call [ SetTimer@IAT ]
mov [ esi + 0x58 ] eax
sub_45c4a5
push ebp
mov ebp esp
sub esp 0x200
push esi
mov esi ecx
push 0x3e9
push [ esi + 0x54 ]
call [ GetDlgItem@IAT ]
test eax eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push 0x100
lea ecx [ ebp - 0x200 ]
push ecx
push eax
call [ GetWindowTextW@IAT ]
test [ esi + 0x10 ] 0x1
je r-xdata
fldz
fcomp [ esi + 0x18 ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp [ ebp - 0x200 ] 0x0
jne r-xdata
lea eax [ ebp - 0x200 ]
push eax
lea ecx [ esi + 0x34 ]
call sub_407d2c
push 0x1
push [ esi + 0x54 ]
call [ EndDialog@IAT ]
push 0x40a
push [ esi + 0x54 ]
call [ KillTimer@IAT ]
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
sub_45c529
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
xor edi edi
mov esi ecx
cmp [ ebp + 0x8 ] 0x1
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
push ebx
push 0x1
push [ esi + 0x54 ]
call [ GetDlgItem@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
push 0x2
push [ esi + 0x54 ]
call [ GetDlgItem@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call [ GetWindowRect@IAT ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
cmp edi ecx
jle r-xdata
push 0x3e9
push [ esi + 0x54 ]
call [ GetDlgItem@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call [ GetWindowRect@IAT ]
mov ebx [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
cmp ebx ecx
jle r-xdata
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp ebx edx
jle r-xdata
mov eax edi
mov edi ecx
mov ecx eax
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x8 ] ecx
push 0x3ea
push [ esi + 0x54 ]
call [ GetDlgItem@IAT ]
pop ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
call [ GetWindowRect@IAT ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
cmp ecx eax
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
cmp eax edx
jle r-xdata
mov eax ebx
mov ebx ecx
mov ecx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
sub ecx edi
sub edx ebx
mov edi [ ebp + 0x10 ]
push 0x0
push edx
push ecx
sub edi edx
sub edi 0xa
push edi
push 0xa
pop eax
sub eax ecx
cdq
sub eax edx
mov ecx eax
mov eax [ ebp + 0xc ]
push 0x4
pop ebx
cdq
idiv ebx
sar ecx 0x1
add ecx eax
push ecx
push [ ebp + 0x8 ]
call [ MoveWindow@IAT ]
mov eax ebx
mov ebx edx
mov edx eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] edx
push 0x1
push 0x0
push [ esi + 0x54 ]
call [ InvalidateRect@IAT ]
push 0x0
lea ecx [ edi - 0x5 ]
push ecx
mov ecx [ ebp + 0xc ]
add ecx 0xffffffec
push ecx
push 0xa
push 0xa
push eax
call [ MoveWindow@IAT ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
cmp edx ecx
jle r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] ecx
sub ecx ebx
sub edx eax
push 0x0
push edx
push ecx
lea eax [ ecx + 0xa ]
cdq
sub eax edx
mov ecx eax
imul eax [ ebp + 0xc ] 0x3
push edi
push 0x4
pop ebx
sar ecx 0x1
cdq
idiv ebx
sub eax ecx
push eax
push [ ebp + 0x8 ]
call [ MoveWindow@IAT ]
mov [ ebp - 0xc ] edx
mov edx eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
push 0xfffffffb
pop eax
sub ecx edx
sub eax ecx
push 0x0
add edi eax
mov eax [ ebp + 0xc ]
push ecx
add eax 0xffffffec
push eax
push edi
push 0xa
push ebx
call [ MoveWindow@IAT ]
mov eax edx
mov edx ecx
mov ecx eax
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] ecx
sub_45c6ce
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x40a
push esi
mov esi ecx
jne r-xdata
pop esi
pop ebp
retn 0x4
push r--data
lea ecx [ esi + 0x34 ]
call sub_407d2c
push 0x3
push [ esi + 0x54 ]
call [ EndDialog@IAT ]
sub_45c712
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov edx [ rw-data ]
sub eax 0x5
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax ecx
shr eax 0x10
push eax
movzx eax cx
mov ecx edx
push eax
push [ ebp + 0x10 ]
call sub_45c529
sub eax 0x1f
je r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax + 0x18 ] 0xbe
mov [ eax + 0x1c ] 0x72
jmp r-xdata
sub eax 0xec
je r-xdata
xor eax eax
inc eax
cmp [ edx + 0x54 ] 0x0
jne r-xdata
dec eax
je r-xdata
mov ecx edx
call sub_45c2c0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx + 0x54 ] eax
mov eax [ ebp + 0x10 ]
movzx eax ax
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
mov esp ebp
pop ebp
retn 0x10
mov ecx edx
call sub_45c4a5
jmp r-xdata
dec eax
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx edx
call sub_45c6ce
jmp r-xdata
mov ecx edx
call sub_45c2a3
jmp r-xdata
sub_45c7ad
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi ecx
lea eax [ ebp + 0xc ]
push edi
xor ebx ebx
push eax
mov [ esi ] r--data
lea ecx [ esi + 0x8 ]
mov [ esi + 0x4 ] 0x1
mov [ ecx + 0x8 ] ebx
call sub_409ac0
mov eax [ ebp + 0x8 ]
mov [ esi + 0x18 ] r--data
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] eax
mov eax [ eax + 0x8 ]
mov [ esi + 0x2c ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ VariantInit@IAT ]
push 0x9
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
pop ebx
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ esi + 0x18 ]
call sub_45cb06
dec ebx
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
call [ VariantClear@IAT ]
lea ecx [ ebp + 0xc ]
call sub_409a20
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_45c84a
push esi
push edi
mov edi ecx
mov edx [ edi + 0x2c ]
mov [ edi ] r--data
jmp r-xdata
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x8 ]
dec eax
cmp edx eax
jb r-xdata
mov eax [ edi + 0x28 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + edx * 4 + 0x4 ]
mov ecx [ ecx + edx * 4 ]
inc edx
mov eax [ eax ]
mov [ ecx ] eax
mov esi [ edi + 0x28 ]
dec [ esi + 0x8 ]
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
push [ eax + ecx * 4 ]
call j_sub_422ed5#3
mov eax [ esi + 0x4 ]
pop ecx
mov ecx [ esi + 0x8 ]
and [ eax + ecx * 4 ] 0x0
lea ecx [ edi + 0x18 ]
call sub_45cac5
lea ecx [ edi + 0x18 ]
call sub_45c831
lea ecx [ edi + 0x8 ]
pop edi
pop esi
jmp sub_409a20
sub_45c8af
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_45c831
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422ed5#3
pop ecx
sub_45c8e2
push esi
push edi
mov edi ecx
xor esi esi
mov eax [ edi + 0x1c ]
push [ eax + esi ]
call [ VariantClear@IAT ]
add esi 0x4
cmp esi 0x24
jl r-xdata
pop edi
pop esi
retn
sub_45c8ff
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x10
push ebx
push esi
push edi
test eax eax
je r-xdata
mov eax 0x80020006
mov ebx [ ebp + 0x1c ]
test ebx ebx
je r-xdata
push [ eax ]
lea ecx [ ebp - 0x10 ]
call sub_407f41
lea ecx [ ebp - 0x10 ]
call sub_407faf
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call [ CharUpperBuffW@IAT ]
xor edi edi
mov esi edi
add esi 0x4
inc edi
cmp esi 0x30
jb r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp + 0x10 ] ecx
test ecx ecx
je r-xdata
mov eax [ esi + r--data ]
push eax
mov [ ebp + 0x1c ] eax
call sub_422d7c
pop ecx
mov ecx [ ebp - 0xc ]
cmp eax ecx
jne r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405a64
lea ecx [ ebp - 0x10 ]
mov [ ebx ] edi
call sub_405a64
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x1c ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
add ecx 0x2
add edx 0x2
dec [ ebp + 0x10 ]
jne r-xdata
mov ax [ ecx ]
cmp ax [ edx ]
jne r-xdata
sub_45c9d3
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax ecx
sub eax 0x9
je r-xdata
mov eax 0x80020003
dec eax
je r-xdata
cmp ecx 0x8
ja r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push [ ebp + 0x20 ]
mov eax [ eax + 0x1c ]
push [ eax + ecx * 4 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
call sub_45ca5a
jmp r-xdata
pop ebp
retn 0x24
sub_45ca0e
push ebp
mov ebp esp
push 0x10
push r--data
push [ ebp + 0xc ]
call sub_421604
add esp 0xc
test eax eax
je r-xdata
push esi
mov esi [ ebp + 0x8 ]
push esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] esi
xor eax eax
pop esi
push 0x10
push r--data
push [ ebp + 0xc ]
call sub_421604
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004002
jmp r-xdata
pop ebp
retn 0xc
sub_45ca5a
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
test [ ebp + 0x8 ] 0x2
je r-xdata
mov eax 0x8002000e
jmp r-xdata
mov eax 0x80020003
push [ ebp + 0x10 ]
push [ ebp + 0x14 ]
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
pop ebp
retn 0x10
xor eax eax
jmp r-xdata
mov eax 0x80020009
jmp r-xdata
sub_45ca97
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x4 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
xor eax eax
mov ecx esi
call sub_45c84a
push esi
call j_sub_422ed5#3
pop ecx
sub_45cac5
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
and [ esi + 0x8 ] 0x0
pop edi
pop esi
retn
push ebx
mov eax [ esi + 0x4 ]
and [ eax + edi * 4 ] 0x0
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push ebx
call [ VariantClear@IAT ]
and [ ebx + 0x8 ] 0x0
and [ ebx + 0xc ] 0x0
push ebx
call j_sub_422ed5#3
pop ecx
mov eax [ esi + 0x4 ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
pop ebx
sub_45cb06
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
jne r-xdata
push 0x10
call sub_420f36
mov edi eax
pop ecx
test edi edi
je r-xdata
lea ecx [ eax + eax ]
push 0x8
pop eax
cmp ecx eax
jb r-xdata
xor edi edi
push edi
call [ VariantInit@IAT ]
push [ ebp + 0x8 ]
push edi
call [ VariantCopy@IAT ]
jmp r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
cmp [ esi + 0x4 ] 0x0
mov edi eax
pop ecx
je r-xdata
mov eax ecx
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edi
inc [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] edi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_420fc0
push [ esi + 0x4 ]
call j_sub_422ed5#3
add esp 0x10
sub_45cb98
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
xor edi edi
mov [ esi ] r--data
lea ebx [ esi + 0x20 ]
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ ebx ] edi
mov [ esi + 0x24 ] 0x1
mov eax [ ecx ]
mov [ esi + 0x28 ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x2c ] eax
mov eax [ ecx + 0x8 ]
mov [ esi + 0x30 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esi + 0x40 ]
mov [ esi + 0x34 ] eax
inc [ eax ]
mov eax [ ebp + 0x18 ]
mov [ esi + 0x38 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x3c ] eax
mov [ esi + 0x48 ] edi
call sub_409ac0
cmp [ esi + 0x4c ] 0x8
jne r-xdata
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
mov edi [ esi + 0x40 ]
mov [ esi + 0x4 ] 0x80004003
mov eax [ edi ]
lea ecx [ ebp - 0x4 ]
push ecx
push r--data
push edi
call [ eax ]
test eax eax
js r-xdata
mov [ esi + 0x4 ] eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
lea eax [ esi + 0x10 ]
push eax
lea eax [ esi + 0xc ]
mov ecx edi
push eax
call sub_457c85
pop ecx
pop ecx
test eax eax
js r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
lea edx [ esi + 0x10 ]
push ebx
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
js r-xdata
mov eax [ ebx ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebx ]
lea edx [ esi + 0x8 ]
push edx
push esi
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
sub_45cc83
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
call sub_456334
mov eax [ ebx + 0x8 ]
cmp [ esi + 0xc ] eax
jae r-xdata
mov eax [ ebx + 0x8 ]
xor ebx ebx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
push 0x8
pop edx
cmp eax edx
jb r-xdata
pop edi
push 0x10
call sub_420f36
mov edi eax
pop ecx
test edi edi
je r-xdata
mov [ esi + 0xc ] edx
xor ecx ecx
mov eax edx
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
cmp [ esi + 0x4 ] 0x0
mov edi eax
pop ecx
je r-xdata
mov edx eax
xor edi edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + ebx * 4 ]
and [ edi + 0x8 ] 0x0
push ecx
mov ecx edi
call sub_409ac0
jmp r-xdata
mov [ esi + 0x4 ] edi
push [ esi + 0x4 ]
call j_sub_422ed5#3
pop ecx
mov eax [ esi + 0x4 ]
mov [ eax + ebx * 4 ] edi
inc ebx
cmp ebx [ esi + 0x8 ]
jb r-xdata
sub_45cd37
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4563f2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422ed5#3
pop ecx
sub_45cd56
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4209ef
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422ed5#3
pop ecx
sub_45cd75
push esi
mov esi ecx
push edi
mov [ esi ] r--data
call sub_45d67b
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x48 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ esi + 0x4c ]
cmp eax 0xb
jg r-xdata
push ecx
call sub_407b3d
and [ esi + 0x48 ] 0x0
cmp eax 0xc
je r-xdata
je r-xdata
mov ecx [ esi + 0x40 ]
test ecx ecx
je r-xdata
jle r-xdata
mov eax [ esi + 0x40 ]
push [ eax + 0x4 ]
call j_sub_422ed5#3
push [ esi + 0x40 ]
call j_sub_422ed5#3
pop ecx
jmp r-xdata
sub eax 0x5
je r-xdata
and [ esi + 0x40 ] 0x0
lea ecx [ esi + 0x28 ]
mov [ esi + 0x4c ] 0x1
call sub_405a64
push esi
call j_sub_422ed5#3
pop ecx
pop edi
mov eax esi
pop esi
retn 0x4
push ecx
call sub_4571d0
cmp eax 0xe
jle r-xdata
pop ecx
jmp r-xdata
mov ecx [ esi + 0x40 ]
test ecx ecx
je r-xdata
sub eax 0x3
je r-xdata
mov edi [ esi + 0x40 ]
test edi edi
je r-xdata
cmp eax 0xf
jne r-xdata
push ecx
call sub_408e34
jmp r-xdata
cmp [ esi + 0x40 ] 0x0
je r-xdata
dec eax
dec eax
jne r-xdata
mov ecx edi
jmp r-xdata
mov ecx [ esi + 0x40 ]
test ecx ecx
je r-xdata
push [ esi + 0x40 ]
call [ VariantClear@IAT ]
push [ esi + 0x40 ]
mov edi [ esi + 0x40 ]
test edi edi
je r-xdata
call sub_405a64
push edi
jmp r-xdata
push ecx
call sub_4571e5
jmp r-xdata
lea ecx [ edi + 0x8 ]
call j_sub_422ed5#3
sub_45ce80
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x9c
push ebx
push esi
push edi
mov edi ecx
lea ecx [ esp + 0x88 ]
mov [ esp + 0x5c ] edi
mov eax [ edi + 0x28 ]
mov [ esp + 0x88 ] eax
mov eax [ edi + 0x2c ]
mov [ esp + 0x8c ] eax
mov eax [ edi + 0x30 ]
mov [ esp + 0x90 ] eax
mov eax [ edi + 0x34 ]
mov [ esp + 0x94 ] eax
inc [ eax ]
lea eax [ ebp + 0xc ]
push eax
call sub_407c8e
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x60 ]
push [ esp + 0x88 ]
mov eax [ eax + 0x8 ]
mov [ esp + 0x18 ] eax
call sub_407f41
mov ecx [ edi + 0x3c ]
lea eax [ esp + 0x60 ]
push eax
call sub_409fbd
mov esi eax
lea ecx [ esp + 0x60 ]
mov [ esp + 0x3c ] esi
call sub_405a64
xor ebx ebx
test esi esi
je r-xdata
lea ecx [ esp + 0x88 ]
call sub_405a64
lea ecx [ ebp + 0xc ]
call sub_405a64
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ esi + 0x20 ] bl
je r-xdata
mov ecx [ edi + 0x38 ]
cmp [ ecx ] 0x40
jne r-xdata
mov ecx [ edi + 0x3c ]
mov eax [ esi + 0x10 ]
mov [ esp + 0x44 ] ebx
mov [ ecx + 0xf4 ] eax
push [ esi + 0x10 ]
call sub_4071c8
mov edx [ esp + 0x14 ]
mov ecx edx
shl ecx 0x4
mov [ esp + 0x10 ] eax
mov eax ebx
push 0x4
mov [ esp + 0x20 ] ecx
mov ecx ebx
mov [ esp + 0x64 ] r--data
mov [ esp + 0x68 ] ebx
mov [ esp + 0x6c ] ebx
mov [ esp + 0x70 ] ebx
pop esi
mov [ esp + 0x28 ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] 0x1
mov [ esp + 0x78 ] r--data
mov [ esp + 0x7c ] ebx
mov [ esp + 0x80 ] ebx
mov [ esp + 0x84 ] ebx
mov [ esp + 0x4c ] r--data
mov [ esp + 0x20 ] eax
mov [ esp + 0x50 ] eax
mov [ esp + 0x54 ] ebx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x74 ] 0x47
mov [ esp + 0x40 ] 0x48
mov [ esp + 0x48 ] 0x40
lea esi [ edi + 0x40 ]
mov [ esp + 0x4c ] r--data
cmp [ esi + 0xc ] 0x8
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] 0x1
jne r-xdata
call sub_45d801
mov [ esp + 0xf ] bl
cmp ecx [ eax + 0x14 ]
jge r-xdata
cmp ecx edx
jge r-xdata
mov eax ebx
mov eax [ esi ]
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_409a20
mov [ esp + 0x28 ] ebx
mov [ esp + 0x34 ] 0x1
mov ecx [ esp + 0x10 ]
mov eax [ ecx + 0x4 ]
mov [ esp + 0x24 ] eax
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] bx
jne r-xdata
push [ eax + 0x10 ]
call sub_408561
mov eax [ esp + 0x3c ]
push 0x4
pop esi
mov [ esp + 0x14 ] 0x1
cmp [ eax + 0x14 ] 0x1
jl r-xdata
mov eax [ esp + 0x3c ]
mov edi [ esp + 0x14 ]
mov eax [ eax + 0x14 ]
cmp eax edi
jle r-xdata
mov ebx [ ebp + 0x8 ]
mov esi edi
shl esi 0x4
mov eax [ eax + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
lea ecx [ esp + 0x28 ]
call sub_409a20
lea eax [ esp + 0x28 ]
mov [ esp + 0x34 ] 0x6
push eax
lea ecx [ esp + 0x50 ]
mov [ esp + 0x2c ] esi
call sub_456363
lea eax [ esp + 0x88 ]
push eax
lea ecx [ esp + 0x9c ]
call sub_4093ea
lea eax [ esp + 0x98 ]
push eax
lea ecx [ esp + 0x50 ]
call sub_456363
lea ecx [ esp + 0x98 ]
call sub_409a20
mov edi [ esp + 0x14 ]
dec edi
js r-xdata
mov eax [ esp + 0x3c ]
cmp ecx [ eax + 0x14 ]
jl r-xdata
mov eax [ esp + 0x24 ]
inc esi
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] 0x41
jne r-xdata
mov ecx [ ecx + 0x4 ]
mov [ esp + 0x18 ] ecx
mov esi ebx
mov eax [ esp + 0x64 ]
mov [ esp + 0x20 ] eax
mov ecx [ esp + 0x5c ]
lea eax [ esp + 0x4c ]
push eax
mov ecx [ ecx + 0x38 ]
call sub_45d826
lea ecx [ esp + 0x28 ]
call sub_409a20
lea ecx [ esp + 0x4c ]
sub eax edi
mov esi ebx
test eax eax
jle r-xdata
mov eax [ ebx ]
lea ecx [ esp + 0x28 ]
add eax esi
push eax
call sub_46760b
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x50 ]
call sub_456363
sub esi 0x10
dec edi
jns r-xdata
xor ebx ebx
cmp [ esp + 0x44 ] edx
jge r-xdata
mov edi [ esp + 0x24 ]
mov ecx ebx
mov eax [ ecx + esi * 4 ]
cmp [ eax ] 0x24
jne r-xdata
mov ecx eax
mov eax [ esp + 0x18 ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
cmp eax [ ecx ]
je r-xdata
mov ecx rw-data
call sub_40843f
lea ecx [ esp + 0x4c ]
call sub_404024
lea ecx [ esp + 0x78 ]
call sub_4209ef
lea ecx [ esp + 0x28 ]
call sub_409a20
lea ecx [ esp + 0x60 ]
jmp r-xdata
mov eax [ esp + 0x7c ]
sub eax esi
mov [ esp + 0x40 ] eax
mov eax [ ecx + esi * 4 ]
cmp [ eax + 0x8 ] bx
je r-xdata
lea eax [ esp + 0x60 ]
mov [ esp + 0x60 ] ebx
push eax
lea ecx [ esp + 0x50 ]
mov [ esp + 0x6c ] ebx
mov [ esp + 0x70 ] 0x1
call sub_456363
lea ecx [ esp + 0x60 ]
call sub_409a20
mov eax [ esp + 0x3c ]
inc esi
mov eax [ eax + 0x14 ]
sub eax edi
cmp esi eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x1c ]
add ecx 0xfffffff0
mov eax [ eax ]
add eax ecx
lea ecx [ esp + 0x28 ]
push eax
call sub_46760b
jmp r-xdata
cmp ax [ esp + 0x40 ]
jne r-xdata
inc ecx
jmp r-xdata
cmp [ eax ] 0x1e
jne r-xdata
mov [ esp + 0xf ] 0x1
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ edi + 0x3c ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x91
call sub_469ed4
mov ecx [ esp + 0x18 ]
call sub_4563f2
mov ecx [ edx + 0x8 ]
inc ebx
mov eax [ esp + 0x40 ]
add esi 0x4
mov [ esp + 0x20 ] esi
cmp ebx ecx
jb r-xdata
sub ecx ebx
sub esp 0x10
mov edi esp
lea esi [ ecx - 0x1 ]
shl esi 0x4
add esi [ edx ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ esp + 0x30 ]
push [ esi ]
call sub_45d69d
mov edx [ ebp + 0x8 ]
mov eax [ ecx + esi * 4 ]
cmp [ eax ] 0x24
je r-xdata
xor edi edi
lea edx [ esi * 4 + 0x4 ]
mov ecx ebx
inc edi
mov ebx [ esp + 0x18 ]
lea eax [ esp + 0xf ]
push eax
lea ecx [ esp + 0x7c ]
call sub_456a42
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x64 ]
call sub_456363
mov ecx [ esp + 0x44 ]
sub [ esp + 0x1c ] 0x10
inc ecx
mov edx [ esp + 0x14 ]
inc esi
mov [ esp + 0x44 ] ecx
jmp r-xdata
cmp ax [ esp + 0x48 ]
jne r-xdata
dec ecx
js r-xdata
inc esi
mov eax [ edi + esi * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax [ esp + 0x74 ]
jne r-xdata
mov eax [ esp + 0x24 ]
inc esi
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] bx
je r-xdata
mov eax [ eax + esi ]
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
inc esi
cmp [ eax ] 0x1e
jne r-xdata
cmp ax [ esp + 0x40 ]
jne r-xdata
inc ecx
jmp r-xdata
test ecx ecx
jne r-xdata
mov edi [ esp + 0x5c ]
jmp r-xdata
mov eax [ ecx + esi * 4 + 0x4 ]
cmp [ eax + 0x8 ] 0x33
je r-xdata
mov eax 0x100
mov [ esp + 0x1c ] eax
cmp ax [ esp + 0x48 ]
jne r-xdata
dec ecx
jns r-xdata
inc edi
add edx 0x4
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ esp + 0x44 ]
push 0x0
mov [ esp + 0x28 ] edi
mov edi [ esp + 0x60 ]
pop ebx
cmp [ esp + 0x14 ] eax
jle r-xdata
mov eax [ ebx + edx ]
movzx eax [ eax + 0x8 ]
cmp ax [ esp + 0x74 ]
jne r-xdata
mov eax [ esp + 0x18 ]
lea ecx [ esp + 0x4c ]
mov eax [ eax + esi * 4 ]
push [ eax ]
call sub_403f84
mov eax [ esp + 0x1c ]
push 0x1
or eax 0x200
push eax
mov eax [ esp + 0x28 ]
push [ eax ]
mov ecx [ edi + 0x3c ]
lea eax [ esi + 0x2 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x24 ]
add eax esi
push eax
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x20 ]
push eax
push [ esp + 0x1c ]
call sub_40a000
test eax eax
js r-xdata
mov ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] ebx
mov ecx [ ecx + 0x4 ]
mov [ esp + 0x18 ] ecx
jmp r-xdata
mov esi [ esp + 0x50 ]
mov [ esp + 0x20 ] esi
jmp r-xdata
lea ecx [ esp + 0x4c ]
call sub_404024
lea ecx [ esp + 0x78 ]
call sub_4209ef
lea ecx [ esp + 0x28 ]
call sub_409a20
lea ecx [ esp + 0x60 ]
call sub_4563f2
mov ebx 0x80004005
jmp r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x4c ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
push [ eax ]
call sub_403f84
mov eax [ esp + 0x1c ]
push 0x1
or eax 0x200
push eax
lea eax [ esp + 0x30 ]
push eax
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_409a20
lea eax [ edi + 0x40 ]
mov [ esp + 0x34 ] 0x6
push r--data
lea ecx [ esp + 0x9c ]
mov [ esp + 0x2c ] eax
call sub_407f41
mov eax [ esp + 0x34 ]
sub eax 0x6
neg eax
push 0x1
sbb eax eax
not eax
and eax [ esp + 0x2c ]
push ebx
push eax
lea eax [ esp + 0xa4 ]
push eax
call sub_408620
lea ecx [ esp + 0x98 ]
call sub_405a64
mov eax [ esp + 0x3c ]
mov ecx [ edi + 0x3c ]
push ebx
push ebx
mov eax [ eax + 0x10 ]
inc eax
push eax
call sub_40b89c
mov edx [ ebp + 0x8 ]
mov [ esp + 0x48 ] ebx
mov ecx [ edx + 0x8 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x1c ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
push [ eax ]
call sub_408620
mov eax [ esp + 0x24 ]
mov edx [ esp + 0x14 ]
inc eax
add [ esp + 0x20 ] 0x4
add esi eax
mov eax [ esp + 0x3c ]
inc edx
mov [ esp + 0x14 ] edx
cmp edx [ eax + 0x14 ]
jle r-xdata
sub_45d4dd
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x10
push esi
test eax eax
je r-xdata
mov eax 0x80020006
mov esi [ ebp + 0x1c ]
test esi esi
je r-xdata
push [ eax ]
lea ecx [ ebp - 0x10 ]
call sub_407f41
lea ecx [ ebp - 0x10 ]
call sub_407faf
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call [ CharUpperBuffW@IAT ]
mov edx r--data
lea ecx [ ebp - 0x10 ]
call sub_420c63
test al al
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405a64
xor eax eax
jmp r-xdata
mov [ esi ] 0xfffffc19
pop esi
mov esp ebp
pop ebp
retn 0x18
sub_45d53f
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov [ ecx ] eax
xor eax eax
mov eax 0x80070057
jmp r-xdata
pop ebp
retn 0x10
sub_45d55e
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov eax 0x80070057
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ eax + 0xc ] ecx
setne cl
xor eax eax
mov [ edx ] ecx
jmp r-xdata
pop ebp
retn 0x8
sub_45d582
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0xfffffc19
push esi
jne r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_45d67b
xor eax eax
and [ ebp + 0x8 ] 0x0
lea edx [ ebp - 0x4 ]
mov eax [ ecx ]
push edx
push 0x1
lea edx [ ebp + 0x8 ]
push edx
push [ ebp + 0xc ]
push ecx
call [ eax + 0x1c ]
test eax eax
js r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub esp 0x10
mov ecx esp
push [ ebp + 0x8 ]
call sub_407f41
push [ ebp + 0x1c ]
mov ecx esi
call sub_45ce80
push [ ebp + 0x8 ]
mov esi eax
call [ SysFreeString@IAT ]
mov eax esi
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x24
sub_45d5f2
push ebp
mov ebp esp
push esi
push 0x10
push r--data
push [ ebp + 0xc ]
call sub_421604
mov esi [ ebp + 0x8 ]
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] esi
xor eax eax
push 0x10
push r--data
push [ ebp + 0xc ]
call sub_421604
add esp 0xc
test eax eax
je r-xdata
push 0x10
lea eax [ esi + 0x10 ]
push eax
push [ ebp + 0xc ]
call sub_421604
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004002
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_45d653
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x24 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
xor eax eax
push ecx
mov ecx esi
call sub_45cd75
sub_45d67b
push esi
mov esi ecx
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
and [ esi + 0x20 ] 0x0
pop esi
retn
push [ esi + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x18 ]
mov eax [ esi + 0x20 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_45d69d
push ebp
mov ebp esp
sub esp 0x1c
test [ ebp + 0xc ] 0x4000
push esi
push edi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
push 0x1
lea eax [ ebp - 0x8 ]
xor edi edi
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edi
call sub_40859a
mov ecx [ ebp + 0xc ]
mov esi eax
and ecx 0xfff
add ecx 0xfffffffe
cmp ecx 0x17
ja r-xdata
movzx ecx [ ecx + lookup_table_45d7e9 ]
jmp [ ecx * 4 + jump_table_45d7bd ]
mov ecx esi
call sub_409399
movzx ecx al
neg ecx
sbb ecx ecx
cmp [ ebp + 0x14 ] edi
je r-xdata
push esi
lea ecx [ ebp - 0x1c ]
call sub_456e47
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x14 ]
call [ VariantCopyInd@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ VariantClear@IAT ]
jmp r-xdata
mov ecx esi
call sub_409c9c
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
mov ecx esi
call sub_409d46
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov eax [ ebp + 0x14 ]
mov [ eax + 0x4 ] edx
jmp r-xdata
mov ecx esi
call sub_409c9c
mov ecx [ ebp + 0x14 ]
mov [ ecx ] ax
jmp r-xdata
mov ecx esi
call sub_409c9c
movzx ecx al
jmp r-xdata
mov ecx esi
call sub_409cf8
mov eax [ ebp + 0x14 ]
fstp [ eax ]
jmp r-xdata
mov ecx esi
call sub_409cf8
mov eax [ ebp + 0x14 ]
fstp [ eax ]
jmp r-xdata
cmp [ esi + 0xc ] 0x8
jne r-xdata
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push [ eax ]
push [ ebp + 0x14 ]
call [ SysReAllocString@IAT ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] cx
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ edi + 0x8 ]
mov [ eax ] ecx
mov edi [ esi ]
sub_45d801
push esi
mov esi ecx
push edi
mov eax [ esi + 0x4 ]
mov ecx eax
mov edi [ eax + 0x10 ]
test ecx ecx
je r-xdata
dec [ esi ]
mov [ esi + 0x4 ] edi
test edi edi
jne r-xdata
push ecx
call sub_45cd22
pop edi
pop esi
retn
and [ esi + 0x8 ] edi
sub_45d826
push ebp
mov ebp esp
push esi
push edi
push 0x14
mov edi ecx
call sub_420f36
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
mov [ esi ] r--data
jmp r-xdata
mov [ edi + 0x4 ] esi
mov eax [ edi + 0x8 ]
mov [ eax + 0x10 ] esi
jmp r-xdata
push [ ebp + 0x8 ]
and [ esi + 0x10 ] 0x0
mov ecx esi
call sub_45cc83
cmp [ edi + 0x4 ] 0x0
je r-xdata
inc [ edi ]
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebp
retn 0x4
sub_45d87b
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov ebx ecx
xor eax eax
push edi
mov ecx r--data
mov esi ecx
mov [ ebx ] r--data
lea edi [ ebx + 0x18 ]
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x14 ] eax
movsd [ edi ] [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebx + 0x28 ]
mov ecx ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebx + 0x38 ] 0x1
call sub_45da3e
test eax eax
js r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea eax [ ebp - 0x4 ]
xor esi esi
push eax
lea eax [ ebx + 0x28 ]
mov [ ebp - 0x4 ] esi
push eax
push 0x5
push esi
lea eax [ ebx + 0x18 ]
push eax
call [ CoCreateInstance@IAT ]
test eax eax
js r-xdata
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
push [ ebp - 0x4 ]
mov ecx ebx
call sub_45dadf
cmp [ ebx + 0x8 ] esi
jne r-xdata
mov [ ebx + 0x4 ] 0x80040154
push 0x1
call [ SetErrorMode@IAT ]
push r--data
push edi
mov esi eax
mov [ ebx + 0x10 ] edi
call [ GetProcAddress@IAT ]
mov edi eax
test edi edi
je r-xdata
mov [ ebx + 0x4 ] 0x80004002
jmp r-xdata
mov [ ebx + 0x4 ] 0x8002802f
mov ecx ebx
call sub_45db40
test eax eax
js r-xdata
push esi
call [ SetErrorMode@IAT ]
jmp r-xdata
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebx + 0x18 ]
push eax
call edi
test eax eax
js r-xdata
mov [ ebx + 0x4 ] 0x80040111
jmp r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
lea edx [ ebp - 0x4 ]
push edx
lea edx [ ebx + 0x28 ]
push edx
push 0x0
push ecx
call [ eax + 0xc ]
test eax eax
js r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov [ ebx + 0x4 ] 0x80004002
push [ ebp - 0x4 ]
mov ecx ebx
call sub_45dadf
sub_45d9c6
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
mov [ esi ] r--data
test ecx ecx
je r-xdata
mov ecx esi
call sub_45dc26
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
push esi
call j_sub_422ed5#3
pop ecx
mov eax esi
pop esi
retn 0x4
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
sub_45da11
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x80004001
push [ ebp + 0x1c ]
mov eax [ ecx ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call [ eax + 0x14 ]
jmp r-xdata
pop ebp
retn 0x18
sub_45da3e
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
push 0x0
lea edx [ ebx + 0x18 ]
call sub_457432
pop ecx
test eax eax
js r-xdata
mov [ ebx + 0x4 ] 0x800401f3
cmp [ ebp + 0xc ] 0x0
jne r-xdata
lea eax [ ebx + 0x28 ]
push eax
push [ ebp + 0xc ]
call [ IIDFromString@IAT ]
test eax eax
jns r-xdata
push esi
push edi
mov esi r--data
lea edi [ ebx + 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
jmp r-xdata
mov eax [ ebx + 0x4 ]
pop ebx
pop ebp
retn 0x8
mov [ ebx + 0x4 ] 0x800401f4
jmp r-xdata
sub_45da97
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x80004001
push [ ebp + 0x14 ]
mov eax [ ecx ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call [ eax + 0x10 ]
jmp r-xdata
pop ebp
retn 0x10
sub_45dabe
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x80004001
push [ ebp + 0xc ]
mov eax [ ecx ]
push ecx
call [ eax + 0xc ]
jmp r-xdata
pop ebp
retn 0x8
sub_45dadf
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx edi
call sub_457aa1
mov edx [ edi ]
lea eax [ esi + 0x8 ]
push eax
push r--data
push edi
call [ edx ]
mov eax [ edi ]
push edi
call [ eax + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
sub_45db0a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x80004001
push [ ebp + 0x28 ]
mov eax [ ecx ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call [ eax + 0x18 ]
jmp r-xdata
pop ebp
retn 0x24
sub_45db40
push ebp
mov ebp esp
sub esp 0x20c
lea eax [ ebp - 0x20c ]
push esi
push edi
mov esi ecx
push 0x104
push eax
push [ esi + 0x10 ]
call [ GetModuleFileNameW@IAT ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x80004005
lea edi [ esi + 0xc ]
push edi
push 0x2
lea eax [ ebp - 0x20c ]
push eax
call [ LoadTypeLibEx@IAT ]
test eax eax
js r-xdata
mov [ esi + 0x4 ] 0x80029c4a
jmp r-xdata
push 0x0
lea eax [ ebp - 0x20c ]
push eax
push [ edi ]
call [ RegisterTypeLib@IAT ]
test eax eax
js r-xdata
mov eax [ esi + 0x4 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x0
lea eax [ ebp - 0x20c ]
push eax
push [ edi ]
call [ RegisterTypeLibForUser@IAT ]
test eax eax
js r-xdata
mov [ esi + 0x14 ] 0x2
jmp r-xdata
mov [ esi + 0x4 ] 0x8002801c
jmp r-xdata
mov [ esi + 0x14 ] 0x1
jmp r-xdata
sub_45dbdb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x80004001
push [ ebp + 0x10 ]
mov eax [ ecx ]
push [ ebp + 0xc ]
push ecx
call [ eax ]
jmp r-xdata
pop ebp
retn 0xc
sub_45dbfe
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x38 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
xor eax eax
push ecx
mov ecx esi
call sub_45d9c6
sub_45dc26
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0xc ]
lea ecx [ ebp - 0x4 ]
push ecx
push eax
mov edx [ eax ]
call [ edx + 0x1c ]
test eax eax
js r-xdata
cmp [ esi + 0x14 ] 0x1
jne r-xdata
cmp [ esi + 0x14 ] 0x2
jne r-xdata
mov ecx [ ebp - 0x4 ]
push [ ecx + 0x14 ]
movzx eax [ ecx + 0x1a ]
push [ ecx + 0x10 ]
push eax
movzx eax [ ecx + 0x18 ]
push eax
push ecx
call [ UnRegisterTypeLibForUser@IAT ]
jmp r-xdata
mov eax [ esi + 0xc ]
push [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov ecx [ ebp - 0x4 ]
push [ ecx + 0x14 ]
movzx eax [ ecx + 0x1a ]
push [ ecx + 0x10 ]
push eax
movzx eax [ ecx + 0x18 ]
push eax
push ecx
call [ UnRegisterTypeLib@IAT ]
sub_45dc97
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
mov [ ebp - 0x4 ] ebx
lea esi [ edi + 0x1c ]
mov [ edi ] r--data
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
mov [ edi + 0x14 ] ebx
mov [ edi + 0x18 ] ebx
mov [ esi ] ebx
mov [ edi + 0x20 ] 0x1
mov [ edi + 0x24 ] eax
cmp [ ebp + 0xc ] ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push [ ebp + 0xc ]
call sub_45e928
push esi
push 0x800
push [ edi + 0x10 ]
call [ CreateDispTypeInfo@IAT ]
test eax eax
js r-xdata
cmp [ esi ] ebx
je r-xdata
mov ecx edi
call sub_45e80b
lea eax [ ebp + 0xc ]
push eax
push [ esi ]
mov esi [ ebp + 0x8 ]
push esi
push ebx
call [ CreateStdDispatch@IAT ]
test eax eax
js r-xdata
mov eax [ ebp + 0xc ]
lea edx [ ebp - 0x4 ]
push edx
mov [ edi + 0x14 ] esi
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
mov ecx [ ebp + 0xc ]
mov esi eax
push ecx
mov edx [ ecx ]
call [ edx + 0x8 ]
test esi esi
js r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
sub_45dd40
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x10 ]
push edi
xor edi edi
cmp [ eax + 0x4 ] edi
jbe r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
push [ esi + 0x8 ]
call j_sub_422ed5#3
push [ esi + 0xc ]
call j_sub_422ed5#3
push [ esi + 0x10 ]
call j_sub_422ed5#3
push [ esi + 0x4 ]
call j_sub_422ed5#3
add esp 0x10
pop edi
mov eax [ esi + 0x8 ]
push [ eax + edi * 4 ]
call j_sub_422ed5#3
mov eax [ esi + 0x10 ]
inc edi
pop ecx
cmp edi [ eax + 0x4 ]
jb r-xdata
pop esi
retn
mov eax [ esi + 0x14 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_45ddb1
push esi
push sub_456e8c
lea esi [ ecx - 0x4 ]
push [ esi ]
push 0x10
push ecx
call sub_4046d3
push esi
call j_sub_422ed5#3
pop ecx
mov eax esi
pop esi
retn 0x4
sub_45ddd1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x18 ]
add esi 0x20
test ecx ecx
je r-xdata
push esi
call [ InterlockedIncrement@IAT ]
mov eax [ ecx ]
push ecx
call [ eax + 0x4 ]
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
pop esi
pop ebp
retn 0x4
sub_45ddfa
push ebp
mov ebp esp
mov ax [ ebp + 0xc ]
sub esp 0x64
push ebx
push esi
xor ebx ebx
push edi
cmp ax 0x1f
jne r-xdata
cmp ax 0x1e
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
cmp ax 0x8
jne r-xdata
mov eax [ ebp + 0x8 ]
push ebx
push ebx
push 0xffffffff
mov eax [ eax + 0x8 ]
push eax
push ebx
push ebx
mov ebx [ MultiByteToWideChar@IAT ]
mov [ ebp + 0xc ] eax
call ebx
xor ecx ecx
mov edi eax
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
push edi
mov esi eax
xor eax eax
push esi
push 0xffffffff
push [ ebp + 0xc ]
push eax
push eax
call ebx
push esi
call [ SysAllocString@IAT ]
push esi
mov ebx eax
call j_sub_422ed5#3
pop ecx
jmp r-xdata
push ebx
jmp r-xdata
mov ebx eax
cmp ax 0x48
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x8 ]
push esi
call [ SysAllocString@IAT ]
push esi
mov ebx eax
call [ SysFreeString@IAT ]
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
call [ SysAllocString@IAT ]
mov ebx eax
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
push 0x28
lea eax [ ebp - 0x60 ]
push eax
mov esi [ esi + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call [ StringFromGUID2@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x60 ]
push eax
sub_45ded3
push ebp
mov ebp esp
mov ax [ ebp + 0xc ]
sub esp 0x50
push ebx
xor ebx ebx
push esi
cmp ax 0x1f
jne r-xdata
cmp ax 0x1e
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
cmp ax 0x8
jne r-xdata
mov eax [ ebp + 0x8 ]
push edi
push ebx
push ebx
mov eax [ eax + 0x8 ]
push 0xffffffff
mov eax [ eax ]
push eax
push ebx
push ebx
mov ebx [ MultiByteToWideChar@IAT ]
mov [ ebp + 0xc ] eax
call ebx
xor ecx ecx
mov edi eax
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
push edi
mov esi eax
xor eax eax
push esi
push 0xffffffff
push [ ebp + 0xc ]
push eax
push eax
call ebx
push esi
call [ SysAllocString@IAT ]
push esi
mov ebx eax
call j_sub_422ed5#3
pop ecx
pop edi
jmp r-xdata
push ebx
jmp r-xdata
mov ebx [ eax ]
cmp ax 0x48
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov esi [ eax ]
push esi
call [ SysAllocString@IAT ]
push esi
mov ebx eax
call [ SysFreeString@IAT ]
jmp r-xdata
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
call [ SysAllocString@IAT ]
mov ebx eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x50 ]
push 0x28
push ecx
push [ eax + 0x8 ]
call [ StringFromGUID2@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x50 ]
push eax
sub_45dfa5
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_45efe8
push edi
mov esi eax
call [ VariantClear@IAT ]
push 0x1e
pop eax
mov [ edi ] ax
mov eax esi
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebp
retn 0x4
sub_45dfd0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov [ ebx ] 0x4
call sub_45f3ce
mov ecx [ ebp + 0x10 ]
mov [ ecx ] ax
mov ecx 0xffff
cmp ax cx
jne r-xdata
pop ebx
pop ebp
retn 0xc
push esi
push edi
push [ ebp + 0x8 ]
call [ lstrlenW@IAT ]
mov esi eax
xor ecx ecx
push 0x2
pop edx
lea eax [ esi + 0x1 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
push [ ebp + 0x8 ]
mov edi eax
push edi
call [ lstrcpyW@IAT ]
xor eax eax
xor ecx ecx
mov [ edi + esi * 2 ] ax
mov esi ecx
cmp [ edi ] cx
je r-xdata
push edi
call j_sub_422ed5#3
pop ecx
pop edi
pop esi
mov eax edi
lea eax [ edi + 0x2 ]
push r--data
lea eax [ eax + esi * 2 ]
push eax
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
inc esi
lea eax [ edi + esi * 2 ]
cmp [ eax ] cx
jne r-xdata
xor eax eax
push edi
mov [ edi + esi * 2 ] ax
call sub_45f3ce
mov ecx [ ebp + 0x10 ]
mov [ ecx ] ax
mov [ ebx ] 0x1
cmp [ eax ] 0x3a
je r-xdata
jmp r-xdata
sub_45e088
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
mov edx esi
cmp [ ecx ] si
je r-xdata
pop esi
pop ebp
retn 0x8
push ebx
push edi
push 0x2c
pop ebx
push 0x2e
mov eax ecx
pop edi
cmp [ eax ] di
jne r-xdata
cmp [ eax ] bx
jne r-xdata
inc edx
lea eax [ ecx + edx * 2 ]
cmp [ eax ] si
jne r-xdata
mov [ eax ] bx
mov [ eax ] di
jmp r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
pop edi
pop ebx
sub_45e0c9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
mov eax 0x80004001
push [ ebp + 0x1c ]
mov eax [ ecx ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call [ eax + 0x14 ]
jmp r-xdata
pop ebp
retn 0x18
sub_45e0f6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
mov eax 0x80004001
push [ ebp + 0x14 ]
mov eax [ ecx ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call [ eax + 0x10 ]
jmp r-xdata
pop ebp
retn 0x10
sub_45e11d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
mov eax 0x80004001
push [ ebp + 0xc ]
mov eax [ ecx ]
push ecx
call [ eax + 0xc ]
jmp r-xdata
pop ebp
retn 0x8
sub_45e13e
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0xc ]
sub esp 0x5c
push ebx
push esi
push edi
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
xor edi edi
cmp [ edx + 0x18 ] edi
je r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov eax 0x80004001
mov ecx [ ebp + 0x1c ]
imul ebx eax 0x1c
mov eax [ edx + 0xc ]
mov ecx [ ecx + 0x8 ]
mov [ esp + 0x28 ] ecx
mov [ esp + 0x24 ] ebx
cmp ecx [ ebx + eax + 0x30 ]
jne r-xdata
mov eax 0x80020003
jmp r-xdata
mov eax [ ebp + 0x1c ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax 0x8002000e
jmp r-xdata
mov esi ecx
mov ebx edi
mov [ esp + 0x1c ] esi
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
mov esi [ ebp + 0x20 ]
test esi esi
je r-xdata
xor ecx ecx
mov eax esi
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
mov [ esp + 0x2c ] eax
xor ecx ecx
push 0x4
pop edx
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
push 0x10
mov [ esp + 0x34 ] eax
xor ebx ebx
pop ecx
mov eax esi
mul ecx
push 0x4
seto bl
xor ecx ecx
neg ebx
or ebx eax
pop eax
add ebx eax
setb cl
neg ecx
or ecx ebx
push ecx
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov esi [ esp + 0x24 ]
mov eax [ edx + 0xc ]
push 0x24
mov eax [ esi + eax + 0x20 ]
pop esi
cmp [ eax + ebx * 8 + 0x4 ] si
mov esi [ esp + 0x1c ]
jne r-xdata
mov eax 0x80020010
jmp r-xdata
push esi
call [ VariantClear@IAT ]
push 0x13
pop eax
mov [ esi ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ esi + 0x8 ] eax
xor eax eax
jmp r-xdata
mov [ esp + 0x18 ] edi
mov [ eax ] esi
lea esi [ eax + 0x4 ]
mov eax [ esp + 0x1c ]
mov ebx esi
dec eax
mov [ esp + 0x18 ] esi
mov [ esp + 0x40 ] eax
js r-xdata
inc ebx
cmp ebx ecx
jb r-xdata
mov eax [ ebp + 0x1c ]
push 0x24
mov esi [ eax + 0x8 ]
sub esi ebx
dec esi
shl esi 0x4
add esi [ eax ]
pop eax
cmp [ esi ] ax
jne r-xdata
lea eax [ esp + 0x48 ]
push eax
call [ VariantInit@IAT ]
mov edx [ ebp + 0x8 ]
mov eax [ esp + 0x24 ]
mov [ esp + 0x50 ] edi
mov [ esp + 0x54 ] edi
mov ecx [ edx + 0xc ]
movzx eax [ eax + ecx + 0x36 ]
test eax 0x4000
jne r-xdata
mov ecx [ esp + 0x10 ]
or ebx 0xffffffff
mov ebx [ esp + 0x1c ]
xor ecx ecx
push 0x4
pop edx
mov eax ebx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
mov [ esp + 0x10 ] eax
xor ecx ecx
push 0x4
pop edx
mov eax ebx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov edx eax
mov [ esp + 0x40 ] edi
mov eax edi
mov [ esp + 0x38 ] edx
pop ecx
cmp [ esp + 0x28 ] eax
jbe r-xdata
mov esi eax
mov eax 0x80020008
jmp r-xdata
lea eax [ esp + 0x58 ]
push eax
call [ VariantInit@IAT ]
mov eax [ esi + 0xc ]
lea edx [ esp + 0x58 ]
push edx
push edi
mov [ esp + 0x68 ] edi
mov [ esp + 0x6c ] edi
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x28 ]
mov eax [ esp + 0x60 ]
test eax eax
jle r-xdata
push 0x15
pop eax
push 0x1e
pop esi
cmp ax si
je r-xdata
lea eax [ esp + 0x38 ]
push eax
push [ esp + 0x34 ]
lea eax [ esp + 0x48 ]
push [ esp + 0x34 ]
push ecx
push esi
push eax
push edx
call sub_45f1fe
mov eax [ esp + 0x40 ]
mov ebx [ esp + 0x38 ]
mov [ esp + 0x14 ] eax
jmp r-xdata
mov [ esp + 0x44 ] 0x4024
cmp ax [ esp + 0x44 ]
je r-xdata
mov ecx ebx
call sub_456e76
add ebx 0x10
dec esi
jns r-xdata
jmp r-xdata
lea eax [ esp + 0x58 ]
push eax
call [ VariantClear@IAT ]
mov esi [ esp + 0x1c ]
dec eax
add esi eax
lea eax [ esp + 0x58 ]
push eax
mov [ esp + 0x20 ] esi
call [ VariantClear@IAT ]
mov ecx [ esp + 0x28 ]
mov edx [ ebp + 0x8 ]
mov [ esp + 0x60 ] edi
mov [ esp + 0x64 ] edi
cmp [ esp + 0x28 ] 0x0
mov ebx edi
jbe r-xdata
push esi
call [ VariantClear@IAT ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
movzx ecx [ ebx + ecx + 0x36 ]
test ecx 0x4000
je r-xdata
push 0x1f
pop esi
cmp ax si
je r-xdata
push 0x1f
pop ecx
cmp ax cx
jne r-xdata
push [ esp + 0x20 ]
mov eax ebx
shl eax 0x4
add eax esi
push eax
push edx
mov [ esp + 0x44 ] eax
call sub_45f0ed
test eax eax
jne r-xdata
mov esi [ esp + 0x1c ]
mov ebx [ esp + 0x10 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x24 ]
mov eax [ eax + 0xc ]
mov eax [ ecx + eax + 0x20 ]
movzx ecx [ eax + ebx * 8 + 0x4 ]
mov eax [ ebp + 0x1c ]
mov [ esp + 0x3c ] ecx
mov esi [ eax + 0x8 ]
sub esi ebx
dec esi
shl esi 0x4
add esi [ eax ]
test ecx 0x4000
je r-xdata
push 0x1e
mov eax ecx
pop edx
cmp eax edx
jl r-xdata
cmp [ esp + 0x50 ] 0x0
je r-xdata
push 0x48
pop esi
cmp ax si
jne r-xdata
push 0x1e
pop ecx
cmp ax cx
jne r-xdata
mov edi ebx
mov [ esp + 0x14 ] 0x8
shl edi 0x4
add edi esi
push edi
call sub_45f09a
push edi
mov esi eax
call [ VariantClear@IAT ]
mov ecx [ esp + 0x10 ]
push 0x1f
pop eax
mov [ edi + 0x8 ] esi
mov [ edi ] ax
xor edi edi
mov [ ecx + ebx * 4 ] esi
mov esi [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
push 0x48
pop eax
push [ esp + 0x38 ]
cmp [ esp + 0x24 ] ax
jne r-xdata
push [ esp + 0x2c ]
call j_sub_422ed5#3
pop ecx
push [ esp + 0x30 ]
call j_sub_422ed5#3
mov eax [ esp + 0x1c ]
pop ecx
test eax eax
je r-xdata
push [ ebx + edi * 4 ]
call j_sub_422ed5#3
inc edi
pop ecx
cmp edi esi
jb r-xdata
push 0x1f
pop eax
cmp cx ax
je r-xdata
mov eax [ esp + 0x34 ]
mov eax [ eax + ebx * 4 ]
shl eax 0x4
add eax [ esp + 0x18 ]
cmp [ eax + 0x8 ] edi
je r-xdata
lea eax [ esp + 0x48 ]
push eax
push esi
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
push 0x1f
pop edx
cmp eax edx
jle r-xdata
mov [ esp + 0x48 ] cx
lea eax [ esp + 0x48 ]
and ecx 0xfff
push ecx
push esi
push eax
call sub_45f16b
jmp r-xdata
lea esi [ esp + 0x48 ]
push esi
mov esi [ esp + 0x34 ]
push esi
mov esi [ esp + 0x34 ]
push esi
push ebx
mov ebx [ esp + 0x34 ]
push eax
mov eax [ ebp + 0xc ]
push [ ebx + ecx + 0x2c ]
lea eax [ eax * 4 - 0x4 ]
push eax
push [ edx + 0x14 ]
call [ DispCallFunc@IAT ]
mov esi [ ebp + 0x20 ]
mov [ esp + 0x44 ] eax
test esi esi
je r-xdata
mov ecx [ esp + 0x10 ]
mov eax ebx
mov [ esp + 0x14 ] 0x8
shl eax 0x4
add eax esi
push eax
call sub_45dfa5
mov ecx [ esp + 0x10 ]
mov [ ecx + ebx * 4 ] eax
jmp r-xdata
test eax 0x4000
je r-xdata
call [ VariantClear@IAT ]
mov ecx [ esp + 0x38 ]
mov eax [ esp + 0x14 ]
mov [ ecx + 0x8 ] edi
mov [ ecx + 0xc ] edi
mov [ ecx ] ax
jmp r-xdata
mov eax [ esp + 0x18 ]
movzx eax ax
and eax 0x4000
add eax 0x13
mov [ esp + 0x18 ] eax
call sub_45f3a4
mov ecx [ esp + 0x10 ]
mov [ ecx + ebx * 4 ] eax
push ebx
call j_sub_422ed5#3
pop ecx
push [ esp + 0x34 ]
call j_sub_422ed5#3
pop ecx
lea eax [ esp + 0x48 ]
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x44 ]
jmp r-xdata
push ecx
mov ecx eax
call sub_45ddb1
push esi
call [ VariantClear@IAT ]
push 0x8
pop eax
push [ esp + 0x3c ]
mov [ esi ] ax
mov eax [ esp + 0x38 ]
mov eax [ eax + ebx * 4 ]
shl eax 0x4
add eax [ esp + 0x1c ]
push eax
call sub_45ddfa
mov [ esi + 0x8 ] eax
push 0x1e
pop eax
cmp cx ax
jne r-xdata
and ecx 0xfff
push ecx
push esi
push eax
mov [ esp + 0x48 ] ecx
call sub_45f16b
cmp [ esp + 0x3c ] 0xc
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
push 0x8
pop eax
mov [ esi ] ax
lea eax [ esp + 0x48 ]
push ecx
push eax
call sub_45ddfa
mov [ esi + 0x8 ] eax
jmp r-xdata
push 0x48
pop edx
cmp eax edx
jne r-xdata
mov edx [ esp + 0x2c ]
mov esi 0xffff
cmp [ edx + ebx * 2 ] si
jne r-xdata
mov eax [ esp + 0x20 ]
movzx eax ax
sub eax 0x8
je r-xdata
mov eax [ esp + 0x14 ]
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x28 ]
jb r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x10 ]
mov eax [ eax + ebx * 4 ]
cmp [ ecx + eax * 4 ] 0x0
je r-xdata
mov edx [ esp + 0x30 ]
cmp [ edx + ebx * 4 ] edi
jne r-xdata
mov [ edx + ebx * 2 ] ax
push 0x4
pop eax
push eax
call sub_420f36
pop ecx
mov ecx ebx
add ecx ecx
mov ecx [ esi + ecx * 8 + 0x8 ]
mov [ eax ] ecx
dec eax
je r-xdata
push [ ecx + eax * 4 ]
call [ VariantClear@IAT ]
jmp r-xdata
mov eax [ esp + 0x3c ]
mov edx [ esp + 0x34 ]
inc eax
mov [ esp + 0x3c ] eax
cmp eax [ esp + 0x28 ]
jb r-xdata
mov eax ebx
shl eax 0x4
add eax [ esp + 0x18 ]
mov [ edx + ebx * 4 ] eax
mov eax ebx
shl eax 0x4
add eax esi
push eax
call sub_45efb3
jmp r-xdata
sub eax 0x3
je r-xdata
mov esi [ esp + 0x2c ]
inc ebx
mov [ edx + eax * 4 ] ebx
mov edx 0xffff
push 0x24
mov [ esp + 0x3c ] ebx
mov [ esi + ebx * 2 ] dx
mov esi [ esp + 0x34 ]
mov [ esi + ebx * 4 ] edi
mov esi [ ebp + 0x1c ]
mov [ ecx + ebx * 4 ] edi
mov edx [ esi + 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
dec edx
shl edx 0x4
add edx [ esi ]
mov eax [ eax + 0xc ]
mov esi [ esp + 0x28 ]
mov eax [ esi + eax + 0x20 ]
mov esi [ esp + 0x40 ]
movzx eax [ eax + esi * 8 + 0x4 ]
mov [ esp + 0x24 ] eax
and [ esp + 0x24 ] 0xfff
pop esi
cmp ax si
mov [ esp + 0x14 ] eax
mov esi [ esp + 0x18 ]
mov [ esp + 0x40 ] eax
je r-xdata
mov ebx [ esp + 0x1c ]
mov ecx [ esp + 0x10 ]
mov [ ecx + ebx * 4 ] eax
mov eax ebx
shl eax 0x4
add eax esi
push eax
call sub_45f065
jmp r-xdata
sub eax 0x12
je r-xdata
mov eax ebx
shl eax 0x4
add eax esi
push eax
call sub_45efe8
jmp r-xdata
dec eax
je r-xdata
mov eax ebx
shl eax 0x4
add eax esi
push eax
call sub_45f09a
jmp r-xdata
sub eax 0x29
je r-xdata
mov eax ebx
shl eax 0x4
add eax esi
push eax
call sub_45ef15
jmp r-xdata
cmp [ ecx + ebx * 4 ] edi
jne r-xdata
mov eax ebx
shl eax 0x4
add esi eax
push esi
call [ VariantClear@IAT ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov [ esi ] ax
mov eax [ ecx + ebx * 4 ]
mov [ esi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov eax ebx
shl eax 0x4
add eax esi
push eax
call sub_45f02f
jmp r-xdata
sub_45e80b
push ebp
mov ebp esp
sub esp 0x14
push edi
mov edi ecx
mov ecx [ edi + 0x1c ]
test ecx ecx
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
lea edx [ ebp - 0xc ]
push ebx
push esi
push edx
push ecx
call [ eax + 0xc ]
mov eax [ edi + 0x1c ]
mov edx [ ebp - 0xc ]
push edx
push eax
mov ecx [ eax ]
movzx ebx [ edx + 0x30 ]
mov esi [ edx + 0x28 ]
mov [ ebp - 0x8 ] ebx
call [ ecx + 0x4c ]
cmp esi 0x3
je r-xdata
pop esi
pop ebx
cmp [ edi + 0x4 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
cmp [ ebp - 0x8 ] ebx
jbe r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x10 ]
push edx
push ebx
push eax
mov ecx [ eax ]
call [ ecx + 0x20 ]
test eax eax
jne r-xdata
inc ebx
cmp ebx [ ebp - 0x8 ]
jb r-xdata
and [ ebp - 0x4 ] eax
lea edx [ ebp - 0x4 ]
mov eax [ edi + 0x1c ]
push edx
push [ ebp - 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x14 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
push edx
push eax
mov ecx [ eax ]
mov esi [ edx + 0x28 ]
call [ ecx + 0x4c ]
cmp esi 0x3
je r-xdata
jmp r-xdata
mov eax [ edi + 0x1c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edi + 0x1c ] eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_45e8c6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
mov eax 0x80004001
push [ ebp + 0x10 ]
mov eax [ ecx ]
push [ ebp + 0xc ]
push ecx
call [ eax ]
jmp r-xdata
pop ebp
retn 0xc
sub_45e8e9
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ esi + 0x18 ]
lea edi [ esi + 0x20 ]
test ecx ecx
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov [ edi ] eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov ecx esi
call sub_45dd40
push esi
call j_sub_422ed5#3
pop ecx
xor eax eax
mov eax [ edi ]
test eax eax
jne r-xdata
sub_45e928
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
mov [ ebp - 0x18 ] esi
call [ lstrlenW@IAT ]
mov [ ebp - 0xc ] eax
xor ecx ecx
push 0x2
add eax 0x6
pop ebx
mul ebx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
xor ecx ecx
mov [ esi + 0x4 ] eax
mov eax ebx
mov ebx ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x30 ] 0x7c
cmp [ ebp - 0xc ] ecx
jle r-xdata
xor ecx ecx
push 0x3
pop edx
cmp [ esi + 0x24 ] ecx
je r-xdata
push 0x20
pop edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] 0x28
jmp r-xdata
xor ecx ecx
push 0x4
pop edi
mul edi
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov [ esi + 0x8 ] eax
xor ecx ecx
mov eax [ ebp - 0x8 ]
push 0x1c
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov [ esi + 0xc ] eax
xor edx edx
pop ecx
pop ecx
mov [ eax ] r--data
xor ecx ecx
mov eax [ esi + 0xc ]
inc ecx
push 0x2
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xc ]
or [ eax + 0x8 ] 0xffffffff
mov eax [ esi + 0xc ]
or [ eax + 0xc ] 0xffffffff
mov eax [ esi + 0xc ]
mov [ eax + 0x10 ] edi
mov eax [ esi + 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0xc ]
mov [ eax + 0x18 ] cx
xor ecx ecx
mov eax [ esi + 0xc ]
mov [ eax + 0x1a ] cx
mov eax [ esi + 0xc ]
pop ecx
push 0x13
mov [ ebp + 0x8 ] ecx
mov [ eax + 0x1c ] edx
mov eax [ esi + 0xc ]
mov [ eax + 0x20 ] edx
mov eax [ esi + 0xc ]
mov [ eax + 0x24 ] edx
mov eax [ esi + 0xc ]
or [ eax + 0x28 ] 0xffffffff
mov eax [ esi + 0xc ]
mov [ eax + 0x2c ] edi
mov eax [ esi + 0xc ]
pop edi
mov [ eax + 0x30 ] edx
mov eax [ esi + 0xc ]
mov [ eax + 0x34 ] cx
mov eax [ esi + 0xc ]
mov [ eax + 0x36 ] di
mov edi ecx
mov eax [ esi + 0x8 ]
mov [ eax ] edx
mov eax [ esi + 0x8 ]
mov [ eax + 0x4 ] edx
cmp [ esi + 0x24 ] edx
je r-xdata
add eax edx
mov [ ebp - 0x8 ] eax
cmp [ edi + ecx * 2 ] dx
je r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x28 ] edx
mov ecx eax
mov [ ebp - 0x2c ] ecx
push 0x8
pop eax
test ebx ebx
jle r-xdata
mov eax [ esi + 0xc ]
push 0x5
pop edi
push 0x3
mov [ eax + 0x38 ] r--data
mov eax [ esi + 0xc ]
mov [ ebp + 0x8 ] edi
mov [ eax + 0x40 ] 0x1
mov eax [ esi + 0xc ]
mov [ eax + 0x44 ] edx
mov eax [ esi + 0xc ]
mov [ eax + 0x48 ] 0x4
mov eax [ esi + 0xc ]
mov [ eax + 0x4c ] ecx
xor ecx ecx
mov eax [ esi + 0xc ]
inc ecx
mov [ eax + 0x50 ] cx
mov eax [ esi + 0xc ]
pop ecx
push 0x10
mov [ eax + 0x52 ] cx
call sub_420f36
pop ecx
mov ecx [ esi + 0x8 ]
xor edx edx
push 0x48
mov [ ecx + 0x8 ] eax
mov eax [ esi + 0x8 ]
pop ecx
push 0x13
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] cx
mov ecx 0x4013
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0xc ] cx
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax ] edx
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x8 ] edx
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
mov eax [ eax + 0x8 ]
mov [ ecx + 0x3c ] eax
xor ecx ecx
mov eax [ esi + 0xc ]
inc ecx
mov [ eax + 0x54 ] r--data
mov eax [ esi + 0xc ]
mov [ eax + 0x58 ] edx
mov eax [ esi + 0xc ]
mov [ eax + 0x5c ] 0x2
mov eax [ esi + 0xc ]
mov [ eax + 0x60 ] ecx
mov eax [ esi + 0xc ]
mov [ eax + 0x64 ] 0x4
mov eax [ esi + 0xc ]
mov [ eax + 0x68 ] edx
mov eax [ esi + 0xc ]
mov [ eax + 0x6c ] cx
mov eax [ esi + 0xc ]
pop ecx
push 0x3
mov [ eax + 0x6e ] cx
mov eax [ esi + 0x8 ]
pop ecx
mov [ eax + 0xc ] edx
mov eax [ esi + 0xc ]
mov [ eax + 0x70 ] r--data
mov eax [ esi + 0xc ]
mov [ eax + 0x74 ] edx
mov eax [ esi + 0xc ]
mov [ eax + 0x78 ] ecx
mov eax [ esi + 0xc ]
mov [ eax + 0x7c ] 0x2
mov eax [ esi + 0xc ]
mov [ eax + 0x80 ] 0x4
mov eax [ esi + 0xc ]
mov [ eax + 0x84 ] edx
xor ecx ecx
mov eax [ esi + 0xc ]
inc ecx
push 0x13
mov [ eax + 0x88 ] cx
mov eax [ esi + 0xc ]
pop ecx
mov [ eax + 0x8a ] cx
mov eax [ esi + 0x8 ]
mov [ eax + 0x10 ] edx
inc ecx
movzx edx [ edi + ecx * 2 ]
cmp dx [ ebp - 0x10 ]
je r-xdata
push eax
call sub_420f36
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ esi + 0x10 ] eax
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
pop edi
pop esi
mov [ ecx ] eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
shl eax 0x2
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
imul edi edi 0x1c
add eax 0xfffffffe
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] edi
inc eax
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x4 ]
push 0x7c
pop edx
push 0x20
mov [ eax + ebx * 2 ] dx
inc ebx
pop eax
jmp r-xdata
mov eax [ esi + 0x4 ]
inc ecx
push 0x20
mov [ eax + ebx * 2 ] dx
inc ebx
movzx edx [ edi + ecx * 2 ]
pop eax
cmp dx ax
jne r-xdata
push 0xa
pop esi
cmp [ ebp + 0x8 ] si
mov esi [ ebp - 0x18 ]
je r-xdata
xor edx edx
mov [ eax + ecx * 2 ] dx
lea edx [ ecx + 0x1 ]
lea edx [ eax + edx * 2 ]
mov [ ebp - 0x28 ] edx
jmp r-xdata
cmp [ edi + ecx * 2 ] ax
je r-xdata
mov eax [ ebp - 0x8 ]
xor ebx ebx
mov [ eax + ecx * 2 ] bx
mov eax [ esi + 0xc ]
mov ecx [ ebp - 0x1c ]
mov [ edi + eax ] ecx
mov ecx [ ebp - 0x20 ]
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0xc ]
mov ebx [ ebp - 0x20 ]
mov [ edi + eax + 0x8 ] ebx
mov eax [ esi + 0xc ]
mov ebx [ ebp - 0x4 ]
mov [ edi + eax + 0xc ] ecx
xor ecx ecx
mov eax [ esi + 0xc ]
inc ecx
mov [ edi + eax + 0x18 ] cx
xor eax eax
mov ecx eax
mov [ ebp + 0x8 ] eax
cmp [ edx ] ax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
inc ecx
mov [ ebp - 0x2c ] ecx
cmp ecx ebx
jl r-xdata
inc ecx
jmp r-xdata
mov [ ebp - 0x10 ] eax
xor eax eax
test ecx ecx
jle r-xdata
push 0x3b
mov eax edx
mov ebx ecx
xor edi edi
pop esi
movzx ebx [ eax + ecx * 2 ]
cmp bx [ ebp - 0x30 ]
mov [ ebp + 0x8 ] ebx
mov ebx [ ebp - 0x4 ]
jne r-xdata
push 0x8
pop eax
movzx edx [ edi + ecx * 2 ]
cmp dx ax
jne r-xdata
mov ecx [ esi + 0xc ]
lea eax [ ecx + 0x1a ]
add ecx 0x10
add eax edi
add ecx edi
push eax
push ecx
push edx
call sub_45dfd0
mov ecx [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ edi + ecx + 0x14 ] eax
xor ecx ecx
test eax eax
je r-xdata
push 0x3b
pop ebx
cmp [ edx + eax * 2 ] bx
mov ebx [ ebp - 0x4 ]
je r-xdata
inc ecx
lea eax [ edx + ecx * 2 ]
cmp [ eax ] di
jne r-xdata
cmp [ eax + 0x2 ] di
je r-xdata
cmp dx [ ebp - 0x14 ]
je r-xdata
mov eax [ esi + 0x4 ]
push 0x3b
pop edx
push 0x20
mov [ eax + ebx * 2 ] dx
inc ebx
pop eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ edx + eax ] ecx
mov eax [ esi + 0xc ]
mov [ edi + eax + 0x4 ] ecx
push 0x8
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov edx [ ebp - 0xc ]
pop ecx
mov ecx [ esi + 0x8 ]
mov [ edx + ecx ] eax
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
xor ecx ecx
mov [ edx + eax * 2 ] cx
inc eax
lea eax [ edx + eax * 2 ]
cmp [ eax ] cx
je r-xdata
inc eax
cmp eax ecx
jl r-xdata
cmp [ eax ] si
jne r-xdata
mov esi [ ebp - 0x18 ]
xor eax eax
mov edi [ ebp - 0x14 ]
mov [ ebp + 0x8 ] ebx
mov ebx [ ebp - 0x4 ]
xor edi edi
mov [ eax ] di
inc ebx
jmp r-xdata
mov eax [ esi + 0x4 ]
inc ecx
push 0x20
mov [ eax + ebx * 2 ] dx
inc ebx
pop eax
cmp [ edi + ecx * 2 ] ax
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
mov eax [ edx + eax ]
mov [ edi + ecx + 0x4 ] eax
jmp r-xdata
xor ecx ecx
xor ebx ebx
cmp [ eax ] bx
mov edx eax
mov ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
je r-xdata
mov [ ebp - 0x10 ] eax
jmp r-xdata
inc ecx
mov edx [ ebp - 0x14 ]
cmp [ edi + ecx * 2 ] dx
jne r-xdata
mov eax [ ebp - 0x20 ]
add edx 0x4
mov ecx [ ebp - 0x2c ]
add edi 0x1c
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] edx
lea edx [ ecx + 0x1 ]
mov [ ebp - 0x14 ] edi
lea edx [ eax + edx * 2 ]
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0x28 ]
push edx
call sub_45f3ce
mov ecx [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ecx + edx ]
mov [ ecx + edi * 8 + 0x4 ] ax
mov ecx edi
mov eax [ esi + 0x8 ]
xor edi edi
mov eax [ eax + edx ]
mov [ eax + ecx * 8 ] edi
mov edi [ ebp - 0x14 ]
mov ebx eax
cmp [ edi + ecx * 2 ] ax
je r-xdata
inc ecx
inc ecx
mov [ ebp - 0x1c ] ecx
lea ebx [ eax + ecx * 2 ]
cmp [ ebx ] di
jne r-xdata
xor eax eax
push edx
mov [ ebx ] ax
call sub_45f3ce
mov ecx [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ecx + edx ]
mov [ ecx + edi * 8 + 0x4 ] ax
mov ecx edi
mov eax [ esi + 0x8 ]
mov eax [ eax + edx ]
xor edx edx
mov [ eax + ecx * 8 ] edx
inc ecx
mov eax [ ebp - 0x10 ]
lea edx [ ebx + 0x2 ]
mov [ ebp + 0x8 ] ecx
xor edi edi
mov ecx [ ebp - 0x1c ]
xor edx edx
inc edx
jmp r-xdata
push 0x3b
pop edi
cmp [ ebx ] di
push 0x0
pop edi
jne r-xdata
mov ebx [ ebp - 0x4 ]
cmp [ edi + ecx * 2 ] ax
je r-xdata
inc ecx
jmp r-xdata
movzx eax [ edi + ecx * 2 ]
push 0x3b
pop edi
cmp ax di
mov edi [ ebp + 0x8 ]
jne r-xdata
cmp ax [ ebp - 0x10 ]
jne r-xdata
jmp r-xdata
movzx eax [ edi + ecx * 2 ]
mov [ ebp - 0x2c ] eax
cmp eax 0x29
je r-xdata
push 0x20
pop eax
push 0x20
pop eax
jmp r-xdata
xor eax eax
inc ecx
mov edx eax
mov eax [ esi + 0x4 ]
inc ecx
mov edi [ ebp - 0x2c ]
mov [ eax + ebx * 2 ] di
inc ebx
mov edi [ ebp + 0x8 ]
inc ecx
cmp [ edi + ecx * 2 ] ax
je r-xdata
cmp [ edi + ecx * 2 ] ax
je r-xdata
inc ecx
mov eax [ esi + 0x4 ]
test edx edx
jne r-xdata
push 0x3b
push 0xa
jmp r-xdata
xor eax eax
inc eax
push 0x20
cmp edx eax
je r-xdata
inc ecx
pop edi
mov [ eax + ebx * 2 ] di
inc ebx
mov edi [ ebp + 0x8 ]
push 0x3b
pop eax
cmp [ edi + ecx * 2 ] ax
jne r-xdata
pop eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] ebx
pop edx
cmp ecx [ ebp - 0xc ]
jl r-xdata
sub_45ef15
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push 0x10
call sub_420f36
mov esi [ ebp + 0x8 ]
mov ebx eax
pop ecx
movzx eax [ esi ]
cmp eax 0x8
jne r-xdata
cmp eax 0x24
jne r-xdata
push ebx
push [ esi + 0x8 ]
call [ CLSIDFromString@IAT ]
jmp r-xdata
mov esi [ esi + 0x8 ]
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x14 ]
push eax
call [ VariantInit@IAT ]
mov eax [ esi + 0xc ]
lea edx [ ebp - 0x14 ]
xor edi edi
push edi
push edx
push edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x2c ]
test eax eax
js r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x4
push ebx
call j_sub_422ed5#3
pop ecx
mov ebx edi
mov eax 0x800c
cmp [ ebp - 0x14 ] ax
jne r-xdata
push 0x1a
pop eax
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edi ebx
mov esi [ eax + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x14 ]
push eax
call [ VariantClear@IAT ]
jmp r-xdata
sub_45efb3
push ebp
mov ebp esp
push esi
push 0x4
call sub_420f36
mov esi eax
mov eax [ ebp + 0x8 ]
pop ecx
cmp [ eax ] 0x9
jne r-xdata
and [ esi ] 0x0
mov ecx [ eax + 0x8 ]
mov [ esi ] ecx
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ ecx ]
push ecx
call [ eax + 0x4 ]
jmp r-xdata
sub_45efe8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov ebx [ eax + 0x8 ]
push ebx
call [ SysStringLen@IAT ]
mov edi eax
mov ecx 0x10000
cmp edi ecx
jle r-xdata
inc ecx
push ecx
call sub_420f36
pop ecx
mov esi eax
lea ecx [ edi + 0x1 ]
xor eax eax
push eax
push eax
push ecx
push esi
push 0xffffffff
push ebx
push eax
push eax
call [ WideCharToMultiByte@IAT ]
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx edi
sub_45f02f
push ebp
mov ebp esp
push ecx
push ecx
push esi
push 0x8
call sub_420f36
mov edx [ ebp + 0x8 ]
mov esi eax
push 0x8
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ edx + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ edx + 0xc ]
push esi
mov [ ebp - 0x4 ] ecx
call sub_420fc0
add esp 0x10
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_45f065
push ebp
mov ebp esp
push esi
push edi
push 0x10
call sub_420f36
pop ecx
mov edi eax
push edi
call [ VariantInit@IAT ]
mov esi [ ebp + 0x8 ]
push esi
push edi
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
sub_45f09a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov ebx [ eax + 0x8 ]
push ebx
call [ SysStringLen@IAT ]
mov esi eax
mov eax 0x10000
cmp esi eax
jle r-xdata
xor ecx ecx
inc eax
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov edi eax
pop ecx
test ebx ebx
je r-xdata
mov eax esi
xor eax eax
mov [ edi + esi * 2 ] ax
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push ebx
push edi
call [ lstrcpyW@IAT ]
sub_45f0ed
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push ebx
push esi
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
push edi
mov edi [ ebp + 0x10 ]
cmp di 0xc
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
movzx eax di
add eax 0xffffffe2
push 0x8
pop edx
cmp eax 0x1
ja r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
pop edi
movzx ecx [ ebx ]
cmp cx di
jne r-xdata
mov edi edx
cmp cx dx
jne r-xdata
push edi
push 0x0
push esi
push esi
call [ VariantChangeType@IAT ]
push 0x8
mov edi eax
pop eax
cmp [ esi ] ax
jne r-xdata
push 0x0
push [ esi + 0x8 ]
call sub_45e088
xor eax eax
test edi edi
setns al
push 0x1
push [ esi + 0x8 ]
call sub_45e088
sub_45f16b
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
push 0x8
movzx eax di
pop ebx
cmp eax ebx
je r-xdata
mov esi [ ebp + 0xc ]
push esi
call [ VariantClear@IAT ]
push edi
push [ ebp + 0x8 ]
mov [ esi ] bx
call sub_45ded3
cmp eax 0x1d
jle r-xdata
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push ebx
push esi
call [ VariantCopyInd@IAT ]
test eax eax
jns r-xdata
cmp eax 0x1f
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp di 0xc
jne r-xdata
cmp eax 0x48
je r-xdata
mov edi [ ebx + 0x8 ]
push esi
movzx ebx [ edi ]
call [ VariantClear@IAT ]
push 0x8
mov eax ebx
pop ecx
cmp eax ecx
je r-xdata
push ebx
push edi
mov [ esi ] cx
call sub_45ddfa
jmp r-xdata
cmp eax 0x1d
jle r-xdata
mov [ esi + 0x8 ] eax
mov [ esi ] bx
mov eax [ edi + 0x8 ]
jmp r-xdata
cmp eax 0x1f
jle r-xdata
cmp eax 0x48
je r-xdata
sub_45f1fe
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
cmp [ ebx ] 0x24
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx 0x4000
test [ eax ] cx
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ VariantInit@IAT ]
mov eax [ ebx + 0xc ]
lea edx [ ebp - 0x1c ]
xor esi esi
push edx
push esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] esi
mov ecx [ eax ]
push esi
push eax
call [ ecx + 0x28 ]
mov edi [ ebp - 0x14 ]
mov [ ebp + 0x8 ] edi
test eax eax
js r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov edi [ ebp + 0x20 ]
mov esi [ ebp + 0x10 ]
push 0x13
pop ecx
mov [ eax ] cx
mov eax [ edi ]
push ecx
push 0x0
add eax eax
push ebx
push ebx
mov [ esi + eax * 8 ] cx
call [ VariantChangeType@IAT ]
mov ecx [ edi ]
mov eax [ ebx + 0x8 ]
add ecx ecx
mov [ esi + ecx * 8 + 0x8 ] eax
lea eax [ ebp - 0x1c ]
push eax
call [ VariantClear@IAT ]
jmp r-xdata
test edi edi
jle r-xdata
mov eax [ ebx + 0xc ]
lea edx [ ebp - 0x1c ]
push esi
push edx
push esi
mov ecx [ eax ]
push esi
push eax
call [ ecx + 0x2c ]
test eax eax
js r-xdata
mov ebx [ ebp + 0xc ]
mov eax 0x4000
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] edx
test [ ebx ] ax
je r-xdata
mov eax [ edx + 0xc ]
xor ecx ecx
inc ecx
sub ecx edi
lea eax [ eax + ecx * 4 ]
mov ecx [ edx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax esi
mov esi [ ebp + 0x20 ]
mov [ ebp - 0xc ] ecx
mov [ ebp + 0xc ] eax
test edi edi
je r-xdata
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x10 ]
push 0x13
pop eax
mov [ ebx ] ax
mov eax [ esi ]
shl eax 0x4
add eax edi
push eax
call [ VariantClear@IAT ]
mov ecx [ esi ]
mov ax [ ebx ]
add ecx ecx
mov [ edi + ecx * 8 ] ax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ edi + ecx * 8 + 0x8 ] eax
jmp r-xdata
dec [ esi ]
mov ebx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push 0x13
pop edi
mov eax [ ebp + 0x20 ]
mov [ edx + ecx + 0x8 ] eax
push [ ebp - 0x8 ]
lea eax [ ecx + 0x8 ]
add eax edx
lea ecx [ ebp + 0x20 ]
push ecx
push eax
and [ eax ] 0x0
call sub_420fc0
add esp 0xc
jmp r-xdata
mov eax [ ecx + eax * 4 ]
mov [ ebp + 0x20 ] eax
mov eax [ esi ]
shl eax 0x4
add eax edx
push eax
call [ VariantClear@IAT ]
mov edx [ esi ]
lea eax [ ebx - 0x1 ]
mov ecx [ ebp + 0x10 ]
shl edx 0x4
mov [ edx + ecx ] di
cmp [ ebp + 0xc ] eax
jne r-xdata
mov ecx [ esi ]
mov eax [ ebp + 0x18 ]
mov ebx [ ebp + 0x1c ]
mov edx [ ebp + 0x10 ]
mov [ eax + ecx * 2 ] di
mov eax ecx
shl eax 0x4
add eax edx
mov [ ebx + ecx * 4 ] eax
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ eax + ecx * 4 ] 0x0
lea eax [ ecx + 0x1 ]
mov ecx [ ebp - 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
cmp eax ebx
jb r-xdata
sub_45f3a4
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_45ef15
push edi
mov esi eax
call [ VariantClear@IAT ]
push 0x13
pop eax
mov [ edi ] ax
mov eax esi
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_45f3ce
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x4 ] esi
call [ lstrlenW@IAT ]
mov edi eax
xor ecx ecx
push 0x2
pop edx
lea eax [ edi + 0x1 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
push [ ebp + 0x8 ]
mov ebx eax
push ebx
call [ lstrcpyW@IAT ]
xor eax eax
mov [ ebx + edi * 2 ] ax
movzx eax [ ebx + edi * 2 - 0x2 ]
cmp eax 0x2a
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] 0x4000
mov [ ebx + edi * 2 - 0x2 ] ax
cmp eax 0x5e
jne r-xdata
mov di [ ebp - 0x4 ]
add di [ esi * 2 + r--data ]
xor esi esi
inc esi
inc esi
cmp esi 0x24
jl r-xdata
push ebx
push [ esi * 4 + r--data ]
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
mov ax di
jmp r-xdata
mov di [ ebp - 0x4 ]
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push ebx
call j_sub_422ed5#3
pop ecx
test esi esi
je r-xdata
sub_45f479
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x14 ]
xor eax eax
push esi
xor edx edx
mov esi ecx
push edi
mov edi [ ebp + 0x1c ]
cmp edi 0x7fffffff
mov [ ebp - 0x8 ] esi
sete al
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
test ebx ebx
jns r-xdata
je r-xdata
push [ ebp + 0x8 ]
call sub_422d7c
mov edx [ ebp - 0x4 ]
mov ebx eax
pop ecx
test ebx ebx
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov esi [ ebp + 0x18 ]
jle r-xdata
neg eax
mov [ ebp + 0x10 ] eax
test esi esi
js r-xdata
test esi esi
jns r-xdata
mov esi ecx
sub esi ebx
cmp esi ecx
jge r-xdata
cmp esi ecx
jl r-xdata
xor esi esi
mov eax ecx
jmp r-xdata
test edi edi
jns r-xdata
xor eax eax
inc eax
sub eax ebx
add esi eax
jmp r-xdata
test edi edi
jns r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea eax [ esi + 0x1 ]
cmp edi eax
jle r-xdata
lea edi [ esi + 0x1 ]
test esi esi
js r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
mov edi ecx
sub edi esi
mov eax esi
sub eax edi
mov edi [ ebp + 0x10 ]
mov [ ebp + 0x1c ] eax
cmp esi eax
jle r-xdata
mov edi eax
mov eax esi
sub eax ebx
inc eax
add eax edi
mov edi [ ebp + 0x10 ]
mov [ ebp + 0x1c ] eax
cmp esi eax
jge r-xdata
mov edi ecx
cmp edx edi
jge r-xdata
cmp edx edi
jge r-xdata
cmp edx edi
jge r-xdata
mov eax esi
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
lea eax [ eax + esi * 2 ]
jne r-xdata
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
lea eax [ eax + esi * 2 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov eax edx
jmp r-xdata
push [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push ebx
push eax
call sub_407a24
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
test ebx ebx
mov [ ebp + 0x18 ] ebx
jmp r-xdata
push [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push ebx
push eax
call sub_407a24
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
test ebx ebx
mov [ ebp + 0x18 ] ebx
jmp r-xdata
dec esi
inc edx
mov [ ebp - 0x4 ] edx
cmp edx edi
je r-xdata
mov [ ebp + 0x10 ] eax
jne r-xdata
inc esi
inc edx
mov [ ebp - 0x4 ] edx
cmp edx edi
je r-xdata
mov [ ebp + 0x10 ] eax
jne r-xdata
sub esi ebx
jmp r-xdata
mov ax [ eax ]
cmp ax [ ecx ]
mov eax [ ebp + 0x10 ]
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
add esi ebx
jmp r-xdata
mov ax [ eax ]
cmp ax [ ecx ]
mov eax [ ebp + 0x10 ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0x1c ]
jg r-xdata
mov ax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
add eax 0x2
add ecx 0x2
dec [ ebp + 0x18 ]
test eax eax
jne r-xdata
cmp esi [ ebp + 0x1c ]
jl r-xdata
mov ax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
add eax 0x2
add ecx 0x2
dec [ ebp + 0x18 ]
test eax eax
jne r-xdata
sub_45f662
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi + 0x14 ] edi
je r-xdata
xor eax eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_403f20
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_415608
mov ebx eax
test ebx ebx
jle r-xdata
lea ecx [ ebp - 0x14 ]
call sub_4077c7
test ebx ebx
jle r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405a64
mov eax ebx
jmp r-xdata
lea eax [ ebp - 0x14 ]
mov ecx esi
push eax
push edi
call sub_456511
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x14 ]
push eax
call sub_403f84
inc edi
cmp edi ebx
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_45f6d5
push esi
mov esi ecx
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
xor al al
pop esi
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
push [ esi + 0x24 ]
mov edx [ esi + 0x18 ]
push [ esi + 0x20 ]
push [ esi + 0x34 ]
push 0x0
push [ esi + 0x1c ]
push [ esi ]
call sub_414140
add esp 0x18
mov [ esi + 0x28 ] eax
test eax eax
jle r-xdata
and [ esi + 0x28 ] 0x0
mov al 0x1
pop esi
retn
sub_45f713
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
mov ebx ecx
lea ecx [ ebp - 0x28 ]
push edi
call sub_4077c7
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
push [ ebx + 0x4 ]
mov edi [ esi + 0x4 ]
mov [ ebp - 0x4 ] edi
call sub_407b76
mov eax [ ebp + 0x10 ]
test eax eax
jns r-xdata
xor edi edi
mov esi edi
push 0x7fffffff
push 0xffffffff
push edi
push eax
push [ ebp + 0x14 ]
mov ecx ebx
push [ esi ]
call sub_45f479
mov esi eax
test esi esi
jns r-xdata
mov eax [ ebp - 0x8 ]
sub esi eax
push esi
push eax
mov ecx [ ebp - 0x8 ]
sub eax ecx
push eax
push ecx
push ebx
lea ecx [ ebp - 0x28 ]
call sub_4079ab
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_407c8e
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_407c8e
add esi [ ebp - 0x4 ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push esi
xor edi edi
lea ecx [ ebp - 0x18 ]
push edi
push ebx
call sub_4079ab
mov eax [ ebp + 0x10 ]
neg eax
xor edi edi
mov esi edi
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405a64
lea ecx [ ebp - 0x28 ]
call sub_405a64
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea eax [ ebp - 0x18 ]
mov ecx ebx
push eax
call sub_4080d7
mov eax [ ebp + 0x8 ]
mov ecx ebx
push 0xffffffff
push esi
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] esi
push 0x1
push [ ebp + 0x14 ]
push [ eax ]
call sub_45f479
mov esi eax
cmp esi [ ebx + 0x4 ]
je r-xdata
cmp edi eax
jne r-xdata
neg eax
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
sub eax esi
push eax
push esi
jmp r-xdata
push ebx
lea ecx [ ebp - 0x28 ]
call sub_4079ab
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_407c8e
test edi edi
je r-xdata
sub_45f825
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
lea ecx [ ebp - 0x18 ]
call sub_4077c7
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
lea ebx [ eax + 0x1 ]
mov [ esi ] ebx
cmp ebx [ edi + 0x4 ]
jge r-xdata
or ebx 0xffffffff
mov [ esi ] eax
xor eax eax
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x10 ] al
je r-xdata
mov [ ebp + 0x13 ] al
push ebx
mov ecx edi
call sub_407b20
cmp [ eax ] 0x7b
jne r-xdata
mov eax [ esi ]
cmp eax [ edi + 0x4 ]
jl r-xdata
xor eax eax
lea eax [ ebx + 0x1 ]
mov [ ebp + 0x13 ] 0x1
mov [ esi ] eax
jmp r-xdata
push [ esi ]
mov ecx edi
call sub_407b20
movzx eax [ eax ]
push eax
call sub_423ddf
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x18 ]
call sub_42370a
cmp [ ebp + 0xc ] 0x0
mov ebx eax
pop ecx
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_407eec
jmp r-xdata
mov ecx [ esi ]
push ecx
mov [ ebp + 0xc ] 0x1
lea eax [ ecx + 0x1 ]
mov ecx edi
mov [ esi ] eax
call sub_407b20
lea ecx [ ebp - 0x18 ]
movzx eax [ eax ]
push eax
call sub_407a84
mov eax [ ebp - 0x8 ]
cmp [ ebp + 0x13 ] 0x0
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405a64
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi ]
cmp eax [ edi + 0x4 ]
je r-xdata
push eax
mov ecx edi
call sub_407b20
cmp [ eax ] 0x7d
jne r-xdata
inc [ esi ]
jmp r-xdata
sub_45f909
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_403569
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422ed5#3
pop ecx
sub_45f928
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x10 ] 0x0
je r-xdata
pop edi
pop ebp
retn 0x4
mov eax [ edi + 0xc ]
push esi
push [ eax ]
call sub_422d7c
push [ ebp + 0x8 ]
lea esi [ eax + 0x1 ]
call sub_422d7c
xor ecx ecx
push 0x2
pop edx
lea eax [ esi + eax ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov ecx [ edi + 0xc ]
mov esi eax
push [ ecx ]
push esi
call sub_422f3c
push [ ebp + 0x8 ]
push esi
call sub_422f0d
mov eax [ edi + 0xc ]
push [ eax ]
call j_sub_422ed5#3
mov eax [ edi + 0xc ]
add esp 0x20
mov [ eax ] esi
pop esi
sub_45f98f
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0xb
push r--data
push esi
mov edi ecx
call sub_42394b
add esp 0xc
test eax eax
jne r-xdata
push 0xd
push r--data
push esi
call sub_42394b
add esp 0xc
test eax eax
jne r-xdata
mov [ edi ] 0x1
push 0x16
push r--data
push esi
call sub_42394b
add esp 0xc
test eax eax
jne r-xdata
mov [ edi + 0x1 ] 0x1
jmp r-xdata
xor eax eax
inc eax
lea ecx [ esi + 0x2c ]
call sub_41fe06
mov esi eax
push esi
call sub_4070bd
push esi
call sub_40710a
push esi
call sub_422d7c
pop ecx
push 0x22
pop ebx
movzx ecx [ esi + eax * 2 - 0x2 ]
cmp cx bx
je r-xdata
cmp [ esi ] cx
je r-xdata
push 0x27
pop edx
cmp cx dx
je r-xdata
xor ecx ecx
mov [ esi + eax * 2 - 0x2 ] cx
lea eax [ esi + 0x2 ]
mov ecx [ edi + 0x4 ]
push eax
mov edx [ ecx ]
call [ edx + 0x8 ]
push esi
call j_sub_422ed5#3
pop ecx
xor eax eax
jmp r-xdata
movzx eax [ esi ]
cmp ax bx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
xor edi edi
jmp r-xdata
cmp ax dx
je r-xdata
push esi
call j_sub_422ed5#3
pop ecx
mov eax edi
jmp r-xdata
mov ecx [ edi + 0x4 ]
push esi
mov eax [ ecx ]
call [ eax + 0x8 ]
jmp r-xdata
xor edi edi
inc edi
sub_45fa6e
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebx ]
push 0x2
pop edx
mov esi [ ecx + edi ]
lea eax [ ecx + 0x4 ]
mov [ ebx ] eax
xor ecx ecx
mov [ ebp + 0x8 ] esi
lea eax [ esi + 0x1 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov ecx [ ebx ]
add esi esi
add ecx edi
mov edi eax
push esi
push ecx
push edi
call sub_420fc0
add [ ebx ] esi
xor eax eax
mov ecx [ ebp + 0x8 ]
add esp 0x10
mov [ esi + edi ] ax
test ecx ecx
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
xor [ edi + eax * 2 ] cx
inc eax
cmp eax ecx
jl r-xdata
sub_45fad2
push ebp
mov ebp esp
mov eax 0x2024
call sub_431ac0
push esi
push 0xfff
mov esi ecx
lea eax [ ebp - 0x2020 ]
push eax
push [ esi + 0x60 ]
push 0x0
call [ GetModuleHandleW@IAT ]
push eax
call [ LoadStringW@IAT ]
lea eax [ ebp - 0x2020 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_407f41
cmp [ esi + 0x2 ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
push r--data
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
push r--data
call sub_423e0a
add esp 0x18
jmp r-xdata
push [ eax ]
lea eax [ ebp - 0x2020 ]
push [ ebp + 0xc ]
push r--data
push eax
call sub_423818
add esp 0x10
push [ ebp + 0xc ]
lea eax [ ebp - 0x2020 ]
push r--data
push eax
call sub_423818
add esp 0xc
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_405a64
pop esi
mov esp ebp
pop ebp
retn 0x10
lea eax [ ebp - 0x2020 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_407f41
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_407e0b
push r--data
lea ecx [ ebp - 0x10 ]
call sub_407e0b
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_407e0b
push r--data
lea ecx [ ebp - 0x10 ]
call sub_407e0b
push 0x11010
push [ ebp - 0x20 ]
push [ ebp - 0x10 ]
push 0x0
call [ MessageBoxW@IAT ]
lea ecx [ ebp - 0x10 ]
call sub_405a64
sub_45fbdb
push ebp
mov ebp esp
mov eax 0x2058
call sub_431ac0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi [ GetModuleHandleW@IAT ]
lea eax [ ebp - 0x2054 ]
push 0xfff
push eax
push [ rw-data ]
push 0x0
call edi
mov esi [ LoadStringW@IAT ]
push eax
call esi
lea eax [ ebp - 0x2054 ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_407f41
push 0xfff
lea eax [ ebp - 0x2054 ]
push eax
push [ ebp + 0xc ]
push 0x0
call edi
push eax
call esi
lea eax [ ebp - 0x2054 ]
push eax
lea ecx [ ebp - 0x44 ]
call sub_407f41
push ebx
call sub_407143
push ebx
mov [ ebp + 0x8 ] eax
call sub_45fd96
push ebx
mov edi eax
call sub_45fdc8
lea ecx [ ebp - 0x34 ]
mov esi eax
call sub_4077c7
lea eax [ ebp - 0x34 ]
push eax
push esi
call sub_45fdfa
test al al
lea eax [ ebp - 0x2054 ]
je r-xdata
push edi
push r--data
push eax
call sub_423818
add esp 0xc
push [ ebp - 0x34 ]
push edi
push r--data
push eax
call sub_423818
add esp 0x10
jmp r-xdata
push r--data
lea ecx [ ebp - 0x14 ]
call sub_407e0b
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407c8e
cmp [ rw-data ] 0x0
je r-xdata
push ebx
lea ecx [ ebp - 0x24 ]
call sub_407d2c
push 0xffffffff
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x24 ]
call sub_407e8c
push r--data
lea ecx [ ebp - 0x24 ]
call sub_407e0b
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407c8e
push esi
lea ecx [ ebp - 0x14 ]
call sub_407e0b
lea eax [ ebp - 0x2054 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407f41
mov ebx [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
push ebx
call sub_407e0b
mov esi r--data
lea ecx [ ebp - 0x14 ]
push esi
call sub_407e0b
lea ecx [ ebp - 0x24 ]
call sub_4077c7
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
push 0x11010
push [ ebp - 0x54 ]
push [ ebp - 0x14 ]
push 0x0
call [ MessageBoxW@IAT ]
push [ ebp - 0x24 ]
push ebx
push [ ebp - 0x44 ]
push edi
push [ ebp - 0x34 ]
push r--data
call sub_423e0a
add esp 0x18
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call sub_405a64
lea ecx [ ebp - 0x14 ]
call sub_405a64
lea ecx [ ebp - 0x34 ]
call sub_405a64
lea ecx [ ebp - 0x44 ]
call sub_405a64
lea ecx [ ebp - 0x54 ]
call sub_405a64
sub_45fd96
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0x8 ]
cmp ecx [ rw-data ]
jg r-xdata
test ecx ecx
jle r-xdata
dec ecx
test ecx ecx
jle r-xdata
mov eax [ eax + 0x4 ]
jmp r-xdata
mov eax [ eax + 0xc ]
dec ecx
jne r-xdata
pop ebp
retn 0x4
sub_45fdc8
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0x8 ]
cmp ecx [ rw-data ]
jg r-xdata
test ecx ecx
jle r-xdata
dec ecx
test ecx ecx
jle r-xdata
mov eax [ eax + 0x8 ]
jmp r-xdata
mov eax [ eax + 0xc ]
dec ecx
jne r-xdata
pop ebp
retn 0x4
sub_45fdfa
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx [ rw-data ]
jge r-xdata
mov ecx [ ebp + 0xc ]
call sub_407eec
xor al al
test ecx ecx
js r-xdata
mov eax [ rw-data ]
push [ eax + ecx * 4 ]
mov ecx [ ebp + 0xc ]
call sub_4081a7
mov al 0x1
jmp r-xdata
pop ebp
retn 0x8
sub_45fe2e
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0x20
pop esi
push 0x9
xor ebx ebx
mov [ ebp - 0x8 ] ecx
pop edi
mov eax ebx
mov [ ebp - 0xc ] edi
inc eax
jmp r-xdata
cmp cx di
jne r-xdata
movzx ecx [ edx + eax * 2 ]
cmp cx si
je r-xdata
movzx esi [ edx + eax * 2 ]
push 0x22
pop ecx
cmp si cx
je r-xdata
mov [ ebp + 0xb ] 0x1
jmp r-xdata
push 0x27
pop ecx
cmp si cx
jne r-xdata
mov esi [ ebp + 0xc ]
inc eax
mov [ ebp - 0x4 ] ebx
movzx edi [ edx + eax * 2 ]
cmp di cx
je r-xdata
cmp esi 0x3c
jne r-xdata
cmp [ edx + eax * 2 ] cx
jne r-xdata
test di di
je r-xdata
xor al al
push 0x3e
pop ecx
mov [ ebp + 0xb ] bl
push 0x20
pop edi
mov [ ebp - 0x4 ] ebx
xor ebx ebx
mov [ esi + ebx * 2 ] di
inc ebx
inc eax
movzx edi [ edx + eax * 2 ]
cmp di cx
jne r-xdata
inc eax
movzx ecx [ edx + eax * 2 ]
cmp cx di
je r-xdata
cmp cx [ ebp - 0xc ]
je r-xdata
movzx eax [ edx + eax * 2 ]
test ax ax
je r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
push esi
mov [ esi + eax * 2 ] cx
call sub_4070bd
push esi
call sub_40710a
lea ecx [ ebp - 0x1c ]
call sub_4077c7
cmp [ ebp + 0xb ] 0x0
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x40 ]
je r-xdata
cmp eax 0x3b
jne r-xdata
test edi edi
jle r-xdata
mov ecx esi
call sub_463c8b
test al al
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_405a64
mov al 0x1
jmp r-xdata
mov eax [ eax + 0x3c ]
lea ecx [ ebp - 0x1c ]
push [ eax + ebx * 4 ]
call sub_4081a7
push esi
lea ecx [ ebp - 0x1c ]
call sub_407e0b
lea ecx [ ebp - 0x1c ]
call sub_463c7b
test al al
jne r-xdata
dec edi
js r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp - 0x1c ]
push esi
call sub_422f3c
pop ecx
pop ecx
mov eax [ ebp - 0x8 ]
inc ebx
cmp ebx edi
jl r-xdata
mov ebx [ ebp - 0x8 ]
jmp r-xdata
dec edi
jns r-xdata
mov eax [ ebx + 0x3c ]
lea ecx [ ebp - 0x1c ]
push [ eax + edi * 4 ]
call sub_4081a7
push esi
lea ecx [ ebp - 0x1c ]
call sub_407e0b
lea ecx [ ebp - 0x1c ]
call sub_463c7b
test al al
jne r-xdata
jmp r-xdata
sub_45ff91
push esi
mov esi ecx
dec [ esi + 0x8 ]
mov edx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + edx * 4 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
pop esi
and [ eax + ecx * 4 ] 0x0
retn
push ecx
call sub_45692a
sub_45ffd4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
cmp ecx edx
je r-xdata
mov eax ecx
pop ebp
retn 0x4
mov al [ edx ]
mov [ ecx ] al
mov al [ edx + 0x1 ]
mov [ ecx + 0x1 ] al
mov al [ edx + 0x3 ]
mov [ ecx + 0x3 ] al
mov al [ edx + 0x2 ]
mov [ ecx + 0x2 ] al
mov al [ edx + 0x4 ]
mov [ ecx + 0x4 ] al
mov al [ edx + 0x5 ]
mov [ ecx + 0x5 ] al
sub_46003a
push ebp
mov ebp esp
sub esp 0x100
xor eax eax
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov [ esi ] eax
mov [ esi + 0x4 ] ax
cmp [ edi + 0x20 ] eax
je r-xdata
push ebx
push 0xa0
call [ GetAsyncKeyState@IAT ]
mov ebx [ GetKeyState@IAT ]
mov ecx 0x8000
test cx ax
jne r-xdata
lea eax [ ebp - 0x100 ]
push eax
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
cmp [ edi + 0x1a ] 0x0
jne r-xdata
push 0xa0
call ebx
mov ecx 0x8000
test cx ax
je r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax 0x80
cmp [ ebp - 0x60 ] al
je r-xdata
push 0xa1
call [ GetAsyncKeyState@IAT ]
mov ecx 0x8000
test cx ax
jne r-xdata
mov [ esi ] 0x1
cmp [ edi + 0x1a ] 0x0
jne r-xdata
cmp [ ebp - 0xf0 ] al
jne r-xdata
cmp [ edi + 0x1b ] 0x0
jne r-xdata
push 0xa1
call ebx
mov ecx 0x8000
test cx ax
je r-xdata
cmp [ ebp - 0x5f ] al
jne r-xdata
mov [ esi ] 0x1
push 0x11
call [ GetAsyncKeyState@IAT ]
mov ecx 0x8000
test cx ax
jne r-xdata
mov [ esi + 0x1 ] 0x1
cmp [ ebp - 0xef ] al
jne r-xdata
cmp [ edi + 0x1b ] 0x0
jne r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
push 0x11
call ebx
mov ecx 0x8000
test cx ax
je r-xdata
cmp [ ebp - 0xee ] al
jne r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
mov [ esi + 0x1 ] 0x1
push 0x12
call [ GetAsyncKeyState@IAT ]
mov ecx 0x8000
test cx ax
jne r-xdata
mov [ esi + 0x2 ] 0x1
cmp [ ebp - 0xa5 ] al
jne r-xdata
cmp [ edi + 0x1d ] 0x0
jne r-xdata
mov [ esi + 0x2 ] 0x1
cmp [ edi + 0x1d ] 0x0
jne r-xdata
push 0x12
call ebx
mov ecx 0x8000
test cx ax
je r-xdata
cmp [ edi + 0x1e ] 0x0
jne r-xdata
mov [ esi + 0x3 ] 0x1
push 0x5b
call [ GetAsyncKeyState@IAT ]
mov ecx 0x8000
test cx ax
jne r-xdata
mov [ esi + 0x3 ] 0x1
mov [ esi + 0x4 ] 0x1
jmp r-xdata
cmp [ edi + 0x1e ] 0x0
jne r-xdata
push 0x5b
call ebx
mov ecx 0x8000
test cx ax
je r-xdata
pop ebx
mov [ esi + 0x4 ] 0x1
sub_4601cc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ eax + 0x4 ]
inc ebx
dec edi
and [ esi ] 0x0
and [ ebp + 0xc ] 0x0
cmp edi 0xffffffff
jne r-xdata
push edi
mov ecx eax
call sub_407b20
push 0x30
pop ecx
movzx eax [ eax ]
cmp ax cx
jb r-xdata
and [ esi ] 0x0
xor al al
jmp r-xdata
mov al 0x1
cmp eax 0x41
jb r-xdata
cmp eax 0x39
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp eax 0x61
jb r-xdata
cmp eax 0x46
ja r-xdata
sub eax ecx
jmp r-xdata
cmp eax 0x66
ja r-xdata
sub eax 0x37
jmp r-xdata
imul eax ebx
shl ebx 0x4
add [ esi ] eax
dec edi
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
cmp eax 0x8
mov eax [ ebp + 0x8 ]
jl r-xdata
sub eax 0x57
test edi edi
js r-xdata
sub_46024f
cmp [ ecx + 0xa ] 0x0
jne r-xdata
mov al 0x1
retn
mov al [ ecx ]
cmp al 0xff
jne r-xdata
cmp al 0x2d
je r-xdata
xor al al
retn
cmp al 0x2e
je r-xdata
cmp al 0x23
je r-xdata
cmp al 0x28
je r-xdata
cmp al 0x22
je r-xdata
cmp al 0x25
je r-xdata
cmp al 0x27
je r-xdata
cmp al 0x24
je r-xdata
cmp al 0x26
je r-xdata
cmp al 0x21
je r-xdata
cmp al 0x6f
je r-xdata
cmp al 0x5d
je r-xdata
cmp al 0x5b
je r-xdata
cmp al 0x5c
je r-xdata
cmp al 0xa5
je r-xdata
cmp al 0xa3
je r-xdata
cmp al 0x5f
je r-xdata
cmp al 0xa6
je r-xdata
cmp al 0xa7
je r-xdata
cmp al 0xa8
je r-xdata
cmp al 0xa9
je r-xdata
cmp al 0xaa
je r-xdata
cmp al 0xab
je r-xdata
cmp al 0xac
je r-xdata
cmp al 0xad
je r-xdata
cmp al 0xae
je r-xdata
cmp al 0xaf
je r-xdata
cmp al 0xb0
je r-xdata
cmp al 0xb1
je r-xdata
cmp al 0xb2
je r-xdata
cmp al 0xb3
je r-xdata
cmp al 0xb4
je r-xdata
cmp al 0xb5
je r-xdata
cmp al 0xb6
je r-xdata
cmp al 0xb7
jne r-xdata
sub_460305
push ebx
push edi
mov edi ecx
cmp [ edi + 0x10 ] 0x0
je r-xdata
pop edi
pop ebx
retn
push esi
xor esi esi
cmp [ edi + 0x20 ] esi
jne r-xdata
pop esi
push [ edi + 0x10 ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov [ edi + 0x10 ] esi
mov ebx [ edi + 0x10 ]
call [ GetForegroundWindow@IAT ]
cmp eax ebx
je r-xdata
push ebx
call sub_404a35
push 0xf
call sub_461473
inc esi
cmp esi 0x3
jl r-xdata
jmp r-xdata
sub_46034d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10c
cmp [ eax ] 0x0
push esi
mov esi ecx
je r-xdata
cmp [ eax + 0x2 ] 0x0
je r-xdata
mov [ esi + 0x14 ] 0x1
cmp [ eax + 0x3 ] 0x0
je r-xdata
mov [ esi + 0x16 ] 0x1
xor eax eax
cmp [ esi + 0x14 ] al
je r-xdata
mov [ esi + 0x17 ] 0x1
cmp [ esi + 0x15 ] al
je r-xdata
cmp [ esi + 0x1a ] al
je r-xdata
cmp [ esi + 0x16 ] al
je r-xdata
cmp [ esi + 0x1b ] al
je r-xdata
mov [ esi + 0x14 ] al
cmp [ esi + 0x17 ] al
je r-xdata
cmp [ esi + 0x1c ] al
je r-xdata
mov [ esi + 0x15 ] al
cmp [ esi + 0x18 ] al
je r-xdata
cmp [ esi + 0x1d ] al
je r-xdata
mov [ esi + 0x16 ] al
cmp [ esi + 0x20 ] eax
je r-xdata
cmp [ esi + 0x1e ] al
je r-xdata
mov [ esi + 0x17 ] al
push ebx
push edi
lea ecx [ ebp - 0xc ]
call sub_45ffb6
mov ebx [ GetAsyncKeyState@IAT ]
push 0xa0
call ebx
mov edi [ GetKeyState@IAT ]
mov ecx 0x8000
test cx ax
jne r-xdata
lea eax [ ebp - 0x10c ]
push eax
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
mov [ esi + 0x18 ] al
cmp [ esi + 0x1a ] 0x0
jne r-xdata
push 0xa0
call edi
mov ecx 0x8000
test cx ax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
mov cl [ esi + 0x1a ]
mov dl [ esi + 0x1b ]
test cl cl
sete al
dec al
and [ ebp - 0x6c ] al
test dl dl
sete al
dec al
and [ ebp - 0x6b ] al
test cl cl
jne r-xdata
push 0xa1
call ebx
mov ecx 0x8000
test cx ax
jne r-xdata
push 0xa0
lea ecx [ ebp - 0xc ]
call sub_4616c0
lea eax [ ebp - 0xc ]
mov ecx esi
push eax
call sub_460f42
cmp [ esi + 0x1c ] 0x0
sete al
dec al
and [ ebp - 0xfb ] al
cmp [ esi + 0x1d ] 0x0
sete al
dec al
and [ ebp - 0xfa ] al
test cl cl
sete al
dec al
and [ ebp - 0xb1 ] al
lea eax [ ebp - 0x10c ]
push eax
call [ SetKeyboardState@IAT ]
jmp r-xdata
test dl dl
sete al
dec al
and [ ebp - 0xfc ] al
cmp [ esi + 0x1b ] 0x0
jne r-xdata
push 0xa1
call edi
mov ecx 0x8000
test cx ax
je r-xdata
push 0x11
call ebx
mov ecx 0x8000
test cx ax
jne r-xdata
push 0xa1
lea ecx [ ebp - 0xc ]
call sub_4616c0
lea eax [ ebp - 0xc ]
mov ecx esi
push eax
call sub_460f42
cmp [ esi + 0x1c ] 0x0
jne r-xdata
push 0x11
call edi
mov ecx 0x8000
test cx ax
je r-xdata
push 0x12
call ebx
mov ecx 0x8000
test cx ax
jne r-xdata
push 0x11
lea ecx [ ebp - 0xc ]
call sub_4616c0
lea eax [ ebp - 0xc ]
mov ecx esi
push eax
call sub_460f42
cmp [ esi + 0x1d ] 0x0
jne r-xdata
push 0x12
call edi
mov ecx 0x8000
test cx ax
je r-xdata
push 0x5b
call ebx
mov ebx 0x8000
test bx ax
jne r-xdata
push 0x12
lea ecx [ ebp - 0xc ]
call sub_4616c0
lea eax [ ebp - 0xc ]
mov ecx esi
push eax
call sub_460f42
cmp [ esi + 0x1e ] 0x0
jne r-xdata
push 0x5b
call edi
test bx ax
je r-xdata
pop edi
pop ebx
push 0x5b
lea ecx [ ebp - 0xc ]
call sub_4616c0
lea eax [ ebp - 0xc ]
mov ecx esi
push eax
call sub_460f42
sub_46057d
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov esi ecx
push 0x1
push eax
mov [ esi + 0x20 ] eax
call sub_4614ff
xor ebx ebx
cmp [ esi + 0x8 ] 0x1
mov [ esp + 0x14 ] bl
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] bx
jne r-xdata
push 0x40
lea ecx [ esp + 0x24 ]
mov edi ebx
call sub_407b76
push ebx
push 0x14
mov ecx esi
call sub_460d9c
mov [ esp + 0x14 ] al
mov ecx esi
lea eax [ esp + 0xc ]
push eax
call sub_46003a
push eax
lea ecx [ esp + 0x1c ]
call sub_45ffd4
cmp [ esi + 0x8 ] 0x1
jne r-xdata
inc edi
mov ecx esi
mov [ esp + 0xc ] edi
call sub_460305
mov eax ebx
sub eax 0x21
je r-xdata
push 0x0
push [ esi + 0x20 ]
mov ecx esi
call sub_4614ff
lea ecx [ esp + 0x20 ]
call sub_405a64
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x18 ]
mov ecx esi
push eax
call sub_461097
push [ esp + 0x14 ]
mov ecx esi
push 0x14
call sub_460d9c
mov [ esi + 0x17 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push edi
call sub_407b20
movzx ebx [ eax ]
test bx bx
je r-xdata
mov [ esi + 0x18 ] 0x1
jmp r-xdata
sub eax 0x8
je r-xdata
mov [ esi + 0x14 ] 0x1
jmp r-xdata
sub eax 0x33
je r-xdata
mov [ esi + 0x16 ] 0x1
jmp r-xdata
sub eax 0x1d
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x8 ]
push 0x7d
call sub_420292
test al al
jne r-xdata
push 0x1
push ebx
jmp r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
push 0x1
push 0x7b
mov ecx esi
call sub_4606d7
xor eax eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] ax
jmp r-xdata
mov edi [ esp + 0xc ]
xor eax eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] ax
jmp r-xdata
lea eax [ esp + 0x20 ]
mov ecx esi
push eax
call sub_4607ec
sub_4606d7
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
test edi edi
jle r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
push ebx
lea ecx [ ebp - 0xc ]
call sub_45ffb6
push [ ebp + 0x8 ]
call sub_461652
mov bl [ ebp - 0xc ]
cmp bl 0xff
je r-xdata
lea eax [ ebp - 0xc ]
mov ecx esi
push eax
call sub_46107a
dec edi
jne r-xdata
lea eax [ ebp - 0xb ]
mov ecx esi
push eax
call sub_46034d
lea eax [ esi + 0x14 ]
mov ecx esi
push eax
call sub_461097
cmp bl 0xff
pop ebx
je r-xdata
lea eax [ esi + 0x14 ]
mov ecx esi
push eax
call sub_46127e
sub_46073e
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov esi ecx
push 0x1
push eax
mov [ esi + 0x20 ] eax
call sub_4614ff
xor ebx ebx
cmp [ esi + 0x8 ] 0x1
mov [ ebp + 0xc ] bl
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] bx
jne r-xdata
mov edi ebx
push ebx
push 0x14
mov ecx esi
call sub_460d9c
mov [ ebp + 0xc ] al
mov ecx esi
lea eax [ ebp - 0xe ]
push eax
call sub_46003a
push eax
lea ecx [ ebp - 0x8 ]
call sub_45ffd4
cmp [ esi + 0x8 ] 0x1
jne r-xdata
mov ecx esi
inc edi
call sub_460305
push 0x1
push ebx
mov ecx esi
call sub_4606d7
xor eax eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] ax
jmp r-xdata
push 0x0
push [ esi + 0x20 ]
mov ecx esi
call sub_4614ff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
call sub_461097
push [ ebp + 0xc ]
mov ecx esi
push 0x14
call sub_460d9c
mov ecx [ ebp + 0x8 ]
push edi
call sub_407b20
movzx ebx [ eax ]
test bx bx
je r-xdata
sub_4607ec
push ebp
mov ebp esp
sub esp 0x68
xor eax eax
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0xc ] eax
mov edi eax
mov [ ebp - 0x14 ] esi
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x6 ] al
mov [ ebp - 0x5 ] al
mov [ ebp - 0x7 ] al
mov [ ebp - 0x8 ] al
call sub_45ffb6
xor ebx ebx
lea ecx [ ebp - 0x44 ]
inc ebx
mov [ ebp - 0x10 ] ebx
call sub_4077c7
lea ecx [ ebp - 0x34 ]
call sub_4077c7
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x8 ]
push 0x20
pop eax
push eax
call sub_420292
test al al
je r-xdata
push [ ebp - 0x44 ]
push [ edi * 4 + r--data ]
call sub_42307d
pop ecx
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0xc ]
push 0x20
pop edi
cmp edi 0x63
jne r-xdata
inc edi
cmp edi 0x63
jl r-xdata
inc esi
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push esi
call sub_407b20
cmp [ eax ] 0x9
jne r-xdata
cmp [ edi + r--data ] 0x0
movzx eax [ edi + r--data ]
jne r-xdata
push 0x0
lea ecx [ ebp - 0x44 ]
call sub_407b52
lea ecx [ ebp - 0x24 ]
movzx eax [ eax ]
push eax
call sub_461652
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push esi
call sub_407b20
cmp [ eax ] di
je r-xdata
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] esi
push eax
lea eax [ ebp - 0x34 ]
push eax
push [ ebp + 0x8 ]
push 0x0
call sub_420292
push r--data
push [ ebp - 0x34 ]
call sub_42307d
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x18 ]
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp eax 0xe
ja r-xdata
push eax
lea ecx [ ebp - 0x24 ]
call sub_4616c0
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
lea eax [ ebp - 0x24 ]
mov ecx esi
push eax
call sub_460e07
jmp r-xdata
cmp [ ebp - 0x6 ] 0x0
jne r-xdata
push r--data
push [ ebp - 0x34 ]
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x6 ] 0x1
jmp r-xdata
lea ecx [ ebp - 0x34 ]
call sub_405a64
lea ecx [ ebp - 0x44 ]
call sub_405a64
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
jmp [ eax * 4 + jump_table_460d00 ]
cmp [ ebp - 0x6 ] 0x0
jne r-xdata
lea eax [ ebp - 0x24 ]
mov ecx esi
push eax
push 0x0
lea ecx [ ebp - 0x44 ]
call sub_407b52
push ebx
movzx eax [ eax ]
push eax
jmp r-xdata
push r--data
push [ ebp - 0x34 ]
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
push 0x12
lea ecx [ ebp - 0x24 ]
call sub_4616c0
cmp [ ebp - 0x5 ] 0x0
je r-xdata
push 0xd
lea ecx [ ebp - 0x24 ]
call sub_4616c0
cmp [ ebp - 0x5 ] 0x0
mov [ ebp - 0x1a ] 0x1
jne r-xdata
cmp [ esi + 0x1d ] 0x0
jne r-xdata
cmp [ esi + 0x1d ] 0x0
je r-xdata
push 0xa0
lea ecx [ ebp - 0x24 ]
call sub_4616c0
cmp [ ebp - 0x5 ] 0x0
je r-xdata
push 0xa1
lea ecx [ ebp - 0x24 ]
call sub_4616c0
cmp [ ebp - 0x5 ] 0x0
je r-xdata
cmp [ esi + 0x1a ] 0x0
jne r-xdata
cmp [ esi + 0x1a ] 0x0
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x1e ] 0x0
jne r-xdata
cmp [ esi + 0x1e ] 0x0
je r-xdata
cmp [ esi + 0x1f ] 0x0
jne r-xdata
cmp [ esi + 0x1f ] 0x0
je r-xdata
cmp [ esi + 0x20 ] 0x0
je r-xdata
cmp [ ebp - 0x7 ] 0x0
mov ecx esi
movzx eax [ edi + r--data ]
je r-xdata
mov ecx esi
call sub_4606d7
jmp r-xdata
push r--data
push [ ebp - 0x34 ]
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x7 ] 0x1
jmp r-xdata
cmp [ ebp - 0x6 ] 0x0
je r-xdata
cmp [ esi + 0x1d ] 0x0
jne r-xdata
cmp [ ebp - 0x6 ] 0x0
lea eax [ ebp - 0x24 ]
mov ecx esi
push eax
jne r-xdata
push 0x12
lea ecx [ ebp - 0x24 ]
call sub_4616c0
push 0x12
lea ecx [ ebp - 0x24 ]
call sub_4616c0
jmp r-xdata
cmp [ ebp - 0x6 ] 0x0
je r-xdata
cmp [ esi + 0x1a ] 0x0
jne r-xdata
cmp [ ebp - 0x6 ] 0x0
je r-xdata
cmp [ esi + 0x1b ] 0x0
jne r-xdata
push 0x10
lea ecx [ ebp - 0x24 ]
call sub_4616c0
push 0x10
lea ecx [ ebp - 0x24 ]
call sub_4616c0
jmp r-xdata
push 0x11
lea ecx [ ebp - 0x24 ]
call sub_4616c0
mov [ esi + 0x1c ] 0x1
jmp r-xdata
push 0x11
lea ecx [ ebp - 0x24 ]
call sub_4616c0
mov [ esi + 0x1c ] 0x0
jmp r-xdata
push 0x5b
lea ecx [ ebp - 0x24 ]
call sub_4616c0
mov [ esi + 0x1e ] 0x1
jmp r-xdata
push 0x5b
lea ecx [ ebp - 0x24 ]
call sub_4616c0
mov [ esi + 0x1e ] 0x0
jmp r-xdata
push 0x5c
lea ecx [ ebp - 0x24 ]
call sub_4616c0
mov [ esi + 0x1f ] 0x1
push 0x5c
lea ecx [ ebp - 0x24 ]
call sub_4616c0
mov [ esi + 0x1f ] 0x0
jmp r-xdata
cmp [ esi + 0x1d ] 0x0
jne r-xdata
push 0x1
push ebx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x1
jmp r-xdata
xor ebx ebx
lea ecx [ ebp - 0x34 ]
push ebx
call sub_407b52
push 0x30
pop ecx
cmp [ eax ] cx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov ecx esi
push eax
cmp [ esi + 0x1d ] 0x0
je r-xdata
jmp r-xdata
call sub_460f42
jmp r-xdata
mov [ esi + 0x1d ] 0x0
jmp r-xdata
cmp [ esi + 0x1a ] 0x0
je r-xdata
jmp r-xdata
cmp [ esi + 0x1b ] 0x0
je r-xdata
mov [ esi + 0x1b ] 0x1
jmp r-xdata
mov [ esi + 0x1a ] 0x0
jmp r-xdata
xor ebx ebx
mov edi ebx
push 0x12
lea ecx [ ebp - 0x24 ]
call sub_4616c0
lea eax [ ebp - 0x24 ]
mov ecx esi
push eax
call sub_460e07
push ebx
push eax
call sub_460d3c
jmp r-xdata
push 0x0
push eax
call sub_460d9c
jmp r-xdata
push [ ebp - 0x34 ]
call sub_42370a
mov ebx eax
pop ecx
test ebx ebx
jns r-xdata
push 0x1
lea ecx [ ebp - 0x34 ]
call sub_407b52
cmp [ eax ] 0x78
je r-xdata
mov [ esi + 0x1d ] 0x1
jmp r-xdata
call sub_46107a
jmp r-xdata
mov [ esi + 0x1a ] 0x1
jmp r-xdata
mov [ esi + 0x1b ] 0x0
jmp r-xdata
cmp [ esi + 0x1d ] bl
jne r-xdata
push edi
lea ecx [ ebp - 0x34 ]
call sub_407b52
lea ecx [ ebp - 0x24 ]
mov al [ eax ]
add al 0x30
movzx eax al
push eax
call sub_4616c0
lea eax [ ebp - 0x24 ]
mov ecx esi
push eax
call sub_46107a
inc edi
jmp r-xdata
xor ebx ebx
push 0x2
push ebx
lea ecx [ ebp - 0x34 ]
call sub_407e8c
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_4601cc
push ebx
lea ecx [ ebp - 0x34 ]
call sub_407b52
mov ebx [ ebp - 0x10 ]
push 0x30
pop ecx
cmp [ eax ] cx
lea eax [ ebp - 0x64 ]
push ebx
jne r-xdata
push 0x1
lea ecx [ ebp - 0x34 ]
call sub_407b52
cmp [ eax ] 0x58
jne r-xdata
push 0x12
lea ecx [ ebp - 0x24 ]
call sub_4616c0
push edi
lea ecx [ ebp - 0x34 ]
call sub_407b52
cmp [ eax ] bx
je r-xdata
push r--data
push r--data
jmp r-xdata
push eax
call sub_4616f8
add esp 0xc
lea eax [ ebp - 0x64 ]
lea ecx [ ebp - 0x34 ]
push eax
call sub_407d2c
jmp r-xdata
sub_460d3c
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
test edi edi
jle r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
push ebx
lea ecx [ ebp - 0x14 ]
call sub_45ffb6
push [ ebp + 0x8 ]
call sub_4616c0
xor eax eax
mov ecx esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x8 ]
push eax
call sub_46034d
lea ebx [ esi + 0x14 ]
mov ecx esi
push ebx
call sub_461097
lea eax [ ebp - 0x14 ]
mov ecx esi
push eax
call sub_46107a
dec edi
jne r-xdata
push ebx
mov ecx esi
call sub_46127e
pop ebx
sub_460d9c
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push edi
movzx edi al
push edi
mov [ ebp - 0x4 ] ecx
call [ GetKeyState@IAT ]
mov bx ax
and bl 0x1
cmp [ ebp + 0xc ] bl
je r-xdata
pop edi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
mov esi [ MapVirtualKeyW@IAT ]
push ecx
push 0x0
push 0x0
push edi
call esi
mov ecx [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_4615f8
mov ecx [ ebp - 0x4 ]
call sub_46001f
push ecx
push 0x2
push 0x0
push edi
call esi
mov ecx [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_4615f8
mov ecx [ ebp - 0x4 ]
call sub_460006
pop esi
sub_460e07
push ebp
mov ebp esp
sub esp 0x120
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x20 ] 0x0
mov bl [ edi ]
mov bh [ edi + 0x7 ]
movzx eax [ edi + 0x8 ]
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x8 ] bh
je r-xdata
cmp bl 0xff
je r-xdata
cmp bl 0x14
je r-xdata
mov [ ebp - 0x1a ] ax
xor edx edx
push 0x1c
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] 0x4
inc edx
xor ecx ecx
and [ ebp - 0x14 ] ecx
and [ ebp - 0x10 ] ecx
push eax
push edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] cx
call [ SendInput@IAT ]
mov ecx edi
call sub_46024f
push ecx
mov ecx esi
cmp al 0x1
jne r-xdata
cmp bl 0x90
je r-xdata
push 0x0
push 0x1
jmp r-xdata
cmp bl 0x91
je r-xdata
mov ecx esi
call sub_46001f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call sub_4615f8
jmp r-xdata
cmp bl 0xff
je r-xdata
push 0x1
push eax
push 0x102
lea eax [ ebp - 0x120 ]
push eax
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
movzx edx bh
mov ecx edi
shl edx 0x10
or edx 0x1
call sub_46024f
cmp al 0x1
jne r-xdata
movzx eax bl
or [ ebp + eax - 0x120 ] 0x80
lea eax [ ebp - 0x120 ]
push eax
call [ SetKeyboardState@IAT ]
cmp [ esi + 0x17 ] 0x0
jne r-xdata
or edx 0x1000000
cmp [ esi + 0x16 ] 0x0
jne r-xdata
cmp [ esi + 0x1d ] 0x0
jne r-xdata
push edx
movzx eax bl
push eax
push 0x100
jmp r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp bl 0x12
jne r-xdata
push [ esi + 0x20 ]
call [ PostMessageW@IAT ]
jmp r-xdata
or edx 0x20000000
movzx eax bl
push edx
push eax
push 0x104
jmp r-xdata
sub_460f42
push ebp
mov ebp esp
sub esp 0x120
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x20 ] 0x0
mov bl [ edi ]
mov bh [ edi + 0x7 ]
movzx eax [ edi + 0x8 ]
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x8 ] bh
je r-xdata
cmp bl 0xff
je r-xdata
cmp bl 0x14
je r-xdata
mov [ ebp - 0x1a ] ax
xor edx edx
push 0x1c
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] 0x6
inc edx
xor ecx ecx
and [ ebp - 0x14 ] ecx
and [ ebp - 0x10 ] ecx
push eax
push edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] cx
call [ SendInput@IAT ]
mov ecx edi
call sub_46024f
push ecx
mov ecx esi
cmp al 0x1
jne r-xdata
cmp bl 0x90
je r-xdata
push 0x2
push 0x3
jmp r-xdata
cmp bl 0x91
je r-xdata
mov ecx esi
call sub_460006
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call sub_4615f8
jmp r-xdata
cmp bl 0xff
je r-xdata
lea eax [ ebp - 0x120 ]
push eax
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
movzx edx bh
mov ecx edi
shl edx 0x10
or edx 0xc0000001
call sub_46024f
cmp al 0x1
jne r-xdata
movzx eax bl
xor [ ebp + eax - 0x120 ] 0x80
lea eax [ ebp - 0x120 ]
push eax
call [ SetKeyboardState@IAT ]
cmp [ esi + 0x17 ] 0x0
jne r-xdata
or edx 0x1000000
cmp [ esi + 0x16 ] 0x0
jne r-xdata
cmp [ esi + 0x1d ] 0x0
jne r-xdata
push edx
movzx eax bl
push eax
push 0x101
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp bl 0x12
jne r-xdata
or edx 0x20000000
movzx eax bl
push edx
push eax
push 0x105
jmp r-xdata
push [ esi + 0x20 ]
call [ PostMessageW@IAT ]
jmp r-xdata
sub_461097
push ebp
mov ebp esp
sub esp 0x100
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ esi ] 0x0
jne r-xdata
cmp [ edi + 0x20 ] 0x0
push ebx
je r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
xor ebx ebx
cmp [ esi ] bl
je r-xdata
push [ edi + 0x20 ]
call [ GetParent@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x2 ] 0x0
jne r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
movzx eax [ edi + 0x27 ]
push ecx
push ebx
push eax
push 0xa0
mov ecx edi
call sub_4615f8
lea eax [ ebp - 0x100 ]
push eax
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x3 ] 0x0
jne r-xdata
cmp [ esi + 0x2 ] bl
je r-xdata
movzx eax [ edi + 0x28 ]
push ecx
push ebx
push eax
push 0xa1
mov ecx edi
call sub_4615f8
cmp [ esi ] 0x0
mov ebx [ PostMessageW@IAT ]
jne r-xdata
cmp [ esi ] 0x0
mov ecx 0x80
mov al [ ebp - 0xf0 ]
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
cmp [ esi + 0x3 ] bl
je r-xdata
movzx eax [ edi + 0x24 ]
push ecx
push ebx
push eax
push 0x11
mov ecx edi
call sub_4615f8
movzx eax [ edi + 0x26 ]
shl eax 0x10
or eax 0x1
push eax
push 0x10
push 0x100
push [ edi + 0x20 ]
call ebx
cmp [ esi + 0x1 ] 0x0
je r-xdata
cmp [ esi + 0x1 ] 0x0
je r-xdata
or al cl
or [ ebp - 0x60 ] cl
mov [ ebp - 0xf0 ] al
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ esi + 0x4 ] bl
je r-xdata
movzx eax [ edi + 0x25 ]
push ecx
push ebx
push eax
push 0x12
mov ecx edi
call sub_4615f8
mov al [ esi + 0x3 ]
test al al
je r-xdata
movzx eax [ edi + 0x24 ]
shl eax 0x10
or eax 0x1
push eax
push 0x11
push 0x100
push [ edi + 0x20 ]
call ebx
cmp [ esi + 0x2 ] 0x0
je r-xdata
cmp [ esi + 0x2 ] 0x0
je r-xdata
or al cl
or [ ebp - 0x5f ] cl
mov [ ebp - 0xf0 ] al
mov ecx edi
call sub_46001f
pop ebx
movzx eax [ edi + 0x29 ]
push ecx
push ebx
push eax
push 0x5b
mov ecx edi
call sub_4615f8
cmp [ esi + 0x4 ] 0x0
je r-xdata
cmp [ esi + 0x2 ] 0x0
jne r-xdata
cmp [ esi + 0x3 ] 0x0
je r-xdata
or [ ebp - 0xef ] cl
movzx eax [ edi + 0x29 ]
shl eax 0x10
or eax 0x1
push eax
push 0x5b
push 0x100
push [ edi + 0x20 ]
call ebx
jmp r-xdata
test al al
je r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
or [ ebp - 0xee ] cl
movzx eax [ edi + 0x25 ]
shl eax 0x10
or eax 0x1
push eax
push 0x12
push 0x100
movzx eax [ edi + 0x25 ]
shl eax 0x10
or eax 0x20000001
push eax
push 0x12
push 0x104
jmp r-xdata
lea eax [ ebp - 0x100 ]
push eax
call [ SetKeyboardState@IAT ]
or [ ebp - 0xa5 ] cl
push [ edi + 0x20 ]
call ebx
sub_46127e
push ebp
mov ebp esp
sub esp 0x100
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ esi ] 0x0
jne r-xdata
cmp [ edi + 0x20 ] 0x0
push ebx
je r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
cmp [ esi ] 0x0
push 0x2
pop ebx
je r-xdata
push [ edi + 0x20 ]
call [ GetParent@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x2 ] 0x0
jne r-xdata
cmp [ esi + 0x1 ] 0x0
je r-xdata
movzx eax [ edi + 0x27 ]
push ecx
push ebx
push eax
push 0xa0
mov ecx edi
call sub_4615f8
lea eax [ ebp - 0x100 ]
push eax
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x3 ] 0x0
jne r-xdata
cmp [ esi + 0x2 ] 0x0
je r-xdata
movzx eax [ edi + 0x28 ]
push ecx
push ebx
push eax
push 0xa1
mov ecx edi
call sub_4615f8
cmp [ esi ] 0x0
mov ebx [ PostMessageW@IAT ]
jne r-xdata
cmp [ esi ] 0x0
mov ecx 0x80
mov al [ ebp - 0xf0 ]
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
cmp [ esi + 0x3 ] 0x0
je r-xdata
movzx eax [ edi + 0x24 ]
push ecx
push ebx
push eax
push 0x11
mov ecx edi
call sub_4615f8
movzx eax [ edi + 0x26 ]
shl eax 0x10
or eax 0xc0000001
push eax
push 0x10
push 0x101
push [ edi + 0x20 ]
call ebx
cmp [ esi + 0x1 ] 0x0
je r-xdata
cmp [ esi + 0x1 ] 0x0
je r-xdata
xor al cl
xor [ ebp - 0x60 ] cl
mov [ ebp - 0xf0 ] al
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ esi + 0x4 ] 0x0
je r-xdata
movzx eax [ edi + 0x25 ]
push ecx
push ebx
push eax
push 0x12
mov ecx edi
call sub_4615f8
mov al [ esi + 0x3 ]
test al al
je r-xdata
movzx eax [ edi + 0x24 ]
shl eax 0x10
or eax 0xc0000001
push eax
push 0x11
push 0x101
push [ edi + 0x20 ]
call ebx
cmp [ esi + 0x2 ] 0x0
je r-xdata
cmp [ esi + 0x2 ] 0x0
je r-xdata
xor al cl
xor [ ebp - 0x5f ] cl
mov [ ebp - 0xf0 ] al
mov ecx edi
call sub_460006
pop ebx
movzx eax [ edi + 0x29 ]
push ecx
push ebx
push eax
push 0x5b
mov ecx edi
call sub_4615f8
cmp [ esi + 0x4 ] 0x0
je r-xdata
cmp [ esi + 0x2 ] 0x0
jne r-xdata
cmp [ esi + 0x3 ] 0x0
je r-xdata
xor [ ebp - 0xef ] cl
movzx eax [ edi + 0x29 ]
shl eax 0x10
or eax 0xc0000001
push eax
push 0x5b
push 0x101
push [ edi + 0x20 ]
call ebx
jmp r-xdata
test al al
je r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
xor [ ebp - 0xee ] cl
movzx eax [ edi + 0x25 ]
shl eax 0x10
or eax 0xc0000001
push eax
push 0x12
push 0x101
movzx eax [ edi + 0x25 ]
shl eax 0x10
or eax 0xe0000001
push eax
push 0x12
push 0x105
jmp r-xdata
lea eax [ ebp - 0x100 ]
push eax
call [ SetKeyboardState@IAT ]
xor [ ebp - 0xa5 ] cl
push [ edi + 0x20 ]
call ebx
sub_461473
push ebp
mov ebp esp
sub esp 0x28
push esi
mov esi [ ebp + 0x8 ]
test esi esi
js r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
jne r-xdata
cmp esi 0xf
jae r-xdata
push 0x0
jmp r-xdata
push esi
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
test eax eax
je r-xdata
call [ Sleep@IAT ]
mov [ ebp + 0x8 ] esi
fild [ ebp + 0x8 ]
test esi esi
jns r-xdata
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fstp [ ebp - 0x28 ]
fadd [ r--data ]
push 0x0
call [ Sleep@IAT ]
lea eax [ ebp - 0x8 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
sbb eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x18 ]
fstp [ ebp - 0x20 ]
call sub_420732
fdivr [ ebp - 0x20 ]
fcomp [ ebp - 0x28 ]
fnstsw ax
test ah 0x5
jpo r-xdata
jmp r-xdata
sub_4614ff
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
test edi edi
jne r-xdata
and [ ebp + 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push esi
call [ GetCurrentThreadId@IAT ]
cmp [ ebp + 0xc ] 0x0
mov esi eax
je r-xdata
cmp [ ebx + 0x9 ] 0x0
je r-xdata
test edi edi
mov edi [ AttachThreadInput@IAT ]
je r-xdata
push 0x0
call [ GetForegroundWindow@IAT ]
push eax
call [ GetWindowThreadProcessId@IAT ]
push 0x1
push eax
push esi
mov [ rw-data ] eax
call [ AttachThreadInput@IAT ]
mov [ ebp + 0xc ] eax
test edi edi
je r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ rw-data ]
push 0x0
push [ rw-data ]
push esi
call edi
mov eax [ rw-data ]
mov ecx [ rw-data ]
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push edi
call [ GetWindowThreadProcessId@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
cmp ecx eax
je r-xdata
push 0x0
push eax
push esi
call edi
push 0x0
push ecx
push eax
call edi
pop esi
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x1
push eax
push esi
call [ AttachThreadInput@IAT ]
jmp r-xdata
push 0x1
push eax
push ecx
call [ AttachThreadInput@IAT ]
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp esi eax
jne r-xdata
cmp eax [ rw-data ]
jne r-xdata
and [ ebx + 0x20 ] 0x0
jmp r-xdata
sub_4615f8
push ebp
mov ebp esp
sub esp 0x1c
test [ ecx + 0xc ] 0x4
je r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ keybd_event@IAT ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
and [ ebp - 0x10 ] 0x0
inc ecx
and [ ebp - 0xc ] 0x0
movzx eax al
mov [ ebp - 0x18 ] ax
mov eax [ ebp + 0xc ]
movzx eax al
mov [ ebp - 0x16 ] ax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x1c ]
push 0x1c
push eax
push ecx
mov [ ebp - 0x1c ] ecx
call [ SendInput@IAT ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0x10
sub_461652
push ebp
mov ebp esp
push esi
mov esi ecx
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0xa ] al
mov eax [ ebp + 0x8 ]
mov [ esi ] 0xff
mov [ esi + 0x8 ] ax
test ax ax
jne r-xdata
push eax
call [ VkKeyScanW@IAT ]
movzx eax ax
cmp ax 0xffff
je r-xdata
xor al al
jmp r-xdata
push ebx
mov ebx eax
mov [ esi ] al
push 0x0
movzx eax al
push eax
sar ebx 0x8
call [ MapVirtualKeyW@IAT ]
mov [ esi + 0x7 ] al
test bl 0x1
je r-xdata
pop esi
pop ebp
retn 0x4
test bl 0x2
je r-xdata
mov [ esi + 0x1 ] 0x1
test bl 0x4
pop ebx
je r-xdata
mov [ esi + 0x3 ] 0x1
mov al 0x1
mov [ esi + 0x4 ] 0x1
sub_4616c0
push ebp
mov ebp esp
push esi
mov esi ecx
xor eax eax
xor ecx ecx
mov [ esi + 0x6 ] eax
mov al [ ebp + 0x8 ]
mov [ esi + 0x1 ] ecx
mov [ esi + 0x5 ] cl
mov [ esi + 0xa ] cl
mov [ esi ] al
cmp al 0xff
jne r-xdata
push ecx
movzx eax al
push eax
call [ MapVirtualKeyW@IAT ]
mov [ esi + 0x7 ] al
mov al 0x1
xor al al
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_46170f
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
xor esi esi
lea eax [ edi + 0x4 ]
cmp esi 0x10
jne r-xdata
inc esi
add eax 0x8
cmp esi 0x10
jl r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
call [ GetWindowThreadProcessId@IAT ]
push [ ebp - 0x4 ]
push 0x0
push 0x438
call [ OpenProcess@IAT ]
push 0x4
push 0x1000
push [ ebp + 0x8 ]
mov [ edi + esi * 8 ] eax
push 0x0
push eax
call [ VirtualAllocEx@IAT ]
mov [ edi + esi * 8 + 0x4 ] eax
xor eax eax
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_461772
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
xor esi esi
mov ecx [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
push 0x8000
push 0x0
push [ edi + esi * 8 + 0x4 ]
push [ edi + esi * 8 ]
call [ VirtualFreeEx@IAT ]
push [ edi + esi * 8 ]
call [ CloseHandle@IAT ]
and [ edi + esi * 8 + 0x4 ] 0x0
inc esi
add eax 0x8
cmp esi 0x10
jl r-xdata
cmp [ eax ] ecx
je r-xdata
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_4617b8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea edx [ ecx + 0x4 ]
xor eax eax
cmp eax 0x10
je r-xdata
inc eax
add edx 0x8
cmp eax 0x10
jl r-xdata
pop esi
pop ebp
retn 0xc
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push [ ecx + eax * 8 ]
call [ ReadProcessMemory@IAT ]
cmp [ edx ] esi
je r-xdata
sub_4617ed
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
lea edx [ ecx + 0x4 ]
xor eax eax
cmp eax 0x10
je r-xdata
inc eax
add edx 0x8
cmp eax 0x10
jl r-xdata
pop esi
pop ebp
retn 0xc
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push esi
push [ ecx + eax * 8 ]
call [ WriteProcessMemory@IAT ]
cmp [ edx ] esi
je r-xdata
sub_461822
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
and [ esi + 0xc ] 0x0
and [ esi + 0x4 ] 0x0
push 0x8
pop edx
cmp eax edx
jb r-xdata
mov [ esi + 0xc ] edx
xor ecx ecx
mov eax edx
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
xor edi edi
mov [ esi + 0x4 ] eax
pop ecx
cmp [ esi + 0x8 ] edi
jbe r-xdata
mov edx eax
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push 0x4
call sub_420f36
mov edx eax
pop ecx
test edx edx
je r-xdata
xor edx edx
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + edi * 4 ]
mov ecx [ ecx ]
mov [ edx ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + edi * 4 ] edx
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_4618a5
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ edx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ edx + 0x8 ]
mov ecx [ esi + 0x4 ]
mov [ esi + 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ edx + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ edx + 0x14 ]
mov [ esi + 0x14 ] eax
mov eax [ ecx ]
cmp eax 0x7fffffff
jne r-xdata
inc eax
mov [ ecx ] eax
push esi
mov ecx esi
call sub_461af0
mov ecx esi
call sub_4621e5
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4618f9
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
mov [ esi ] r--data
mov eax [ ecx ]
cmp eax 0x1
je r-xdata
push ebx
push edi
xor edi edi
cmp eax 0x7fffffff
je r-xdata
add edi 0x4
cmp edi 0x1000
jl r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov ecx [ eax + 0x20 ]
test ecx ecx
je r-xdata
dec eax
mov [ ecx ] eax
jmp r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ edi + eax ]
test ebx ebx
je r-xdata
push [ esi + 0x14 ]
call j_sub_422ed5#3
pop ecx
mov ecx [ esi + 0x10 ]
pop edi
pop ebx
test ecx ecx
je r-xdata
push ebx
call j_sub_422ed5#3
mov eax [ ebp - 0x4 ]
mov ebx eax
pop ecx
test eax eax
jne r-xdata
push ecx
call sub_45631f
mov [ esi ] r--data
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0x4 ]
call j_sub_422ed5#3
pop ecx
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_461987
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_403488
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422ed5#3
pop ecx
sub_4619a6
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x2
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push ebx
xor ebx ebx
inc ebx
cmp [ ebp + 0x8 ] ebx
je r-xdata
pop ebx
mov ecx [ edi + 0x4 ]
mov edx 0x7fffffff
mov eax [ ecx ]
cmp eax ebx
jle r-xdata
cmp [ ebp + 0x8 ] 0x8
je r-xdata
cmp eax edx
je r-xdata
mov eax [ edi + 0x4 ]
cmp [ eax ] edx
je r-xdata
cmp [ ebp + 0x8 ] 0x4
je r-xdata
dec eax
mov [ ecx ] eax
mov ecx edi
push edi
call sub_461af0
mov ecx edi
call sub_4621e5
mov edx 0x7fffffff
mov [ eax ] ebx
mov eax [ edi + 0x4 ]
mov [ eax ] edx
jmp r-xdata
sub_461a06
push ebp
mov ebp esp
push esi
push 0x8
mov esi ecx
call sub_4619a6
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_461a2a
test eax eax
pop esi
setne al
pop ebp
retn 0x8
sub_461a2a
push ebp
mov ebp esp
mov edx [ ecx + 0x8 ]
mov eax [ ecx + 0xc ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ esi ] edi
mov [ esi + 0x4 ] edi
cmp edx 0xffffffff
jne r-xdata
cmp edx edi
jne r-xdata
cmp eax 0x7fffffff
jne r-xdata
add edx 0x1
mov [ ecx + 0x8 ] edx
adc eax edi
mov [ ecx + 0xc ] eax
cmp eax 0x80000000
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ecx + 0x8 ] edi
mov [ ecx + 0xc ] edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ ecx + 0x8 ]
push ecx
push [ ebp + 0x8 ]
mov [ esi ] eax
mov eax [ ecx + 0xc ]
push eax
push [ esi ]
mov [ esi + 0x4 ] eax
call sub_462427
sub_461a8a
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ edi ] 0x1
jne r-xdata
mov esi [ edi + 0x18 ]
lea eax [ edi + 0x4 ]
push eax
call sub_415e58
mov esi eax
jmp r-xdata
mov [ edx + 0x4 ] eax
mov [ eax ] edx
and [ edx + 0x4 ] eax
jmp r-xdata
push 0xc
and esi 0x3ff
call sub_420f36
mov edx eax
pop ecx
mov [ ebp + 0x8 ] edx
and [ edx ] 0x0
mov [ edx + 0x8 ] edi
mov ecx [ ebx + 0x14 ]
mov eax [ ecx + esi * 4 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
mov [ eax + esi * 4 ] edx
lea eax [ ebp + 0x8 ]
mov ecx [ ebx + 0x10 ]
push eax
call sub_46f656
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_461af0
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov esi ecx
push 0x1000
mov [ ebp - 0x1c ] esi
call sub_420f36
mov edi eax
push 0x10
mov [ ebp - 0x20 ] edi
call sub_420f36
pop ecx
pop ecx
test eax eax
je r-xdata
xor edx edx
mov [ ebp - 0x4 ] edx
push [ esi + 0x10 ]
mov ecx eax
call sub_461822
mov edx eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ebx [ ebp - 0x14 ]
add ecx 0x4
add ebx 0x4
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x14 ] ebx
cmp ebx 0x1000
jl r-xdata
mov esi [ ebp - 0x8 ]
mov eax [ edx + 0x8 ]
xor ebx ebx
mov [ ebp - 0xc ] eax
mov ecx edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x8 ] edi
and [ ecx ] 0x0
mov eax [ esi + 0x14 ]
mov ebx [ ebx + eax ]
test ebx ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x20 ]
mov [ esi + 0x14 ] eax
mov [ esi + 0x10 ] edx
mov eax [ ecx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ecx + 0xc ]
pop edi
mov [ esi + 0xc ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
push 0x28
call sub_420f36
mov edi eax
pop ecx
test edi edi
je r-xdata
mov [ esi ] eax
xor edi edi
lea ecx [ edi + 0x4 ]
call sub_4077c7
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0x18 ]
push [ ecx + 0x20 ]
mov ecx eax
call sub_409dcb
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax + 0x8 ] edi
mov ecx [ ebx + 0x8 ]
mov [ ebp - 0x18 ] ecx
mov eax [ ecx ]
mov [ edi ] eax
mov eax [ ecx + 0x18 ]
mov [ edi + 0x18 ] eax
mov eax [ ecx + 0x1c ]
mov [ edi + 0x1c ] eax
lea eax [ ecx + 0x4 ]
push eax
lea ecx [ edi + 0x4 ]
call sub_4081a7
push 0x10
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
mov edi [ edx + 0x4 ]
mov edx [ ebp - 0x4 ]
xor ecx ecx
mov [ edi + 0x20 ] eax
cmp [ ebp - 0xc ] ecx
jle r-xdata
push 0xc
call sub_420f36
cmp [ esi ] 0x0
pop ecx
mov [ ebp - 0x10 ] eax
jne r-xdata
mov esi [ ebp - 0x1c ]
mov ecx [ ebp - 0x8 ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
inc ecx
add edi 0x4
cmp ecx [ ebp - 0xc ]
jl r-xdata
mov eax [ edi ]
cmp [ eax ] ebx
je r-xdata
jmp r-xdata
sub_461c45
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov ecx esi
cmp [ esi + 0xc ] 0x4
jne r-xdata
call sub_409d46
push edx
push eax
mov ecx edi
call sub_461ceb
call sub_409997
push [ esi + 0x8 ]
mov ecx edi
call sub_461c81
jmp r-xdata
test eax eax
pop edi
setne al
pop esi
pop ebp
retn 0x4
sub_461c81
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_461c9c
mov esp ebp
pop ebp
retn 0x4
sub_461c9c
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov esi ecx
call sub_415e58
mov edx [ ebp + 0x10 ]
and eax 0x3ff
mov ecx [ esi + 0x14 ]
mov edi [ ebp + 0xc ]
mov [ edx ] eax
mov esi [ ecx + eax * 4 ]
and [ edi ] 0x0
jmp r-xdata
test esi esi
jne r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
add ecx 0x4
call sub_415ee9
test al al
jne r-xdata
xor eax eax
mov eax [ esi + 0x8 ]
mov [ edi ] esi
jmp r-xdata
mov esi [ esi + 0x4 ]
pop edi
pop esi
pop ebp
retn 0xc
sub_461ceb
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_461d09
mov esp ebp
pop ebp
retn 0x8
sub_461d09
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov edx edi
and edx 0x3ff
mov [ eax ] edx
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov eax [ eax + edx * 4 ]
and [ ecx ] 0x0
test eax eax
je r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
cmp [ edx + 0x1c ] esi
je r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x18 ] edi
jne r-xdata
mov [ ecx ] eax
mov eax edx
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x10
sub_461d53
push ebp
mov ebp esp
push ecx
push edi
push [ ebp + 0xc ]
mov edi ecx
call sub_4619a6
push [ ebp + 0x8 ]
mov ecx edi
call sub_461c81
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x8
je r-xdata
mov eax [ eax + 0x20 ]
jmp r-xdata
push 0x1
push ecx
call sub_462203
pop ecx
push eax
push [ ebp + 0x8 ]
mov ecx edi
call sub_46238d
cmp [ ebp + 0xc ] 0x20
je r-xdata
pop edi
pop ecx
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0x2
jne r-xdata
xor eax eax
jmp r-xdata
call sub_462203
jmp r-xdata
sub_461dac
push ebp
mov ebp esp
push edi
push [ ebp + 0x10 ]
mov edi ecx
call sub_4619a6
push [ ebp + 0xc ]
mov ecx edi
push [ ebp + 0x8 ]
call sub_461ceb
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ eax + 0x20 ]
jmp r-xdata
push ecx
push ecx
call sub_462203
pop ecx
push eax
push [ ebp + 0xc ]
mov ecx edi
push [ ebp + 0x8 ]
call sub_462427
cmp [ ebp + 0x10 ] 0x20
je r-xdata
pop edi
pop ebp
retn 0xc
cmp [ ebp + 0x10 ] 0x2
jne r-xdata
xor eax eax
jmp r-xdata
call sub_462203
jmp r-xdata
sub_461e08
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
call sub_4619a6
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
pop esi
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov eax [ eax + 0x8 ]
mov eax [ eax + 0x20 ]
xor eax eax
jmp r-xdata
pop ebp
retn 0x8
sub_461e38
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
mov eax [ ecx ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
inc [ eax ]
call sub_407faf
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call [ CharUpperBuffW@IAT ]
mov edx r--data
lea ecx [ ebp - 0x10 ]
call sub_420c63
test al al
jne r-xdata
mov bl 0x1
mov edx r--data
lea ecx [ ebp - 0x10 ]
call sub_420c63
test al al
jne r-xdata
mov edx r--data
lea ecx [ ebp - 0x10 ]
call sub_420c63
test al al
jne r-xdata
mov edx r--data
lea ecx [ ebp - 0x10 ]
call sub_420c63
test al al
jne r-xdata
xor bl bl
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405a64
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_461eca
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx ecx
push edi
mov ecx esi
mov [ esp + 0xc ] ebx
call sub_409997
mov edx [ esi + 0x8 ]
xor esi esi
inc esi
mov eax [ edx ]
mov [ esp + 0x20 ] eax
mov eax [ edx + 0x4 ]
mov [ esp + 0x24 ] eax
mov eax [ edx + 0x8 ]
mov [ esp + 0x28 ] eax
mov eax [ edx + 0xc ]
mov [ esp + 0x2c ] eax
inc [ eax ]
cmp [ ebp + 0x8 ] esi
jne r-xdata
test [ ebp + 0x8 ] 0x2
je r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_407f41
xor edi edi
lea eax [ esp + 0x10 ]
push edi
push eax
lea ecx [ esp + 0x28 ]
call sub_407a68
mov ebx eax
lea ecx [ esp + 0x10 ]
neg ebx
sbb bl bl
call sub_405a64
inc bl
je r-xdata
test [ ebp + 0x8 ] 0xc
je r-xdata
lea eax [ esp + 0x20 ]
mov ecx ebx
push eax
call sub_461c81
xor edi edi
test eax eax
je r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_407f41
push edi
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x28 ]
call sub_407a68
mov ebx eax
lea ecx [ esp + 0x10 ]
neg ebx
sbb bl bl
call sub_405a64
inc bl
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x8 ] esi
jne r-xdata
mov edi esi
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x6
jne r-xdata
mov ecx edi
mov ecx [ eax + 0x20 ]
jmp r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_407f41
push edi
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x28 ]
call sub_407a68
mov ebx eax
lea ecx [ esp + 0x10 ]
neg ebx
sbb bl bl
call sub_405a64
inc bl
je r-xdata
mov ecx [ esp + 0xc ]
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0x14 ] r--data
mov [ esp + 0x18 ] edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] edi
call sub_46215d
mov ecx [ ebp + 0x14 ]
lea eax [ esp + 0x10 ]
push eax
mov ecx [ ecx ]
call sub_467577
lea ecx [ esp + 0x10 ]
call sub_4563f2
jmp r-xdata
push 0x3
pop edi
jmp r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x6
jne r-xdata
xor edi edi
mov ecx ebx
push edi
push eax
lea eax [ esp + 0x28 ]
push eax
call sub_46238d
jmp r-xdata
mov eax [ eax ]
call sub_462203
mov ecx [ ebp + 0x14 ]
push eax
mov ecx [ ecx ]
call sub_409e9c
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] ecx
jmp r-xdata
test ecx ecx
je r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_407f41
push edi
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x28 ]
call sub_407a68
mov ebx eax
lea ecx [ esp + 0x10 ]
neg ebx
sbb bl bl
call sub_405a64
inc bl
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x8 ] esi
jne r-xdata
lea ecx [ esp + 0x20 ]
call sub_405a64
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esp + 0xc ]
push eax
call sub_462283
test al al
mov eax [ ebp + 0x14 ]
mov esi [ eax ]
mov ecx esi
je r-xdata
mov eax [ eax ]
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x8 ] esi
jne r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x6
jne r-xdata
call sub_409a20
xor eax eax
mov [ esi ] edi
inc eax
mov [ esi + 0xc ] eax
jmp r-xdata
call sub_409a20
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] eax
jmp r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x6
jne r-xdata
mov ecx [ esp + 0xc ]
push eax
call sub_461c45
test al al
mov eax [ ebp + 0x14 ]
mov esi [ eax ]
mov ecx esi
je r-xdata
mov eax [ eax ]
lea ecx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x10 ]
push eax
call sub_461a06
jmp r-xdata
mov eax [ eax ]
call sub_409a20
xor eax eax
mov [ esi ] edi
inc eax
call sub_409a20
xor eax eax
inc eax
mov [ esi ] eax
jmp r-xdata
mov [ esi + 0xc ] eax
jmp r-xdata
sub_46215d
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
mov ebx ecx
mov ecx [ ebp + 0x8 ]
push edi
call sub_456334
mov eax [ ebx + 0x10 ]
xor esi esi
mov edi [ eax + 0x8 ]
test edi edi
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
mov ecx [ eax + 0x8 ]
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ecx + 0x4 ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_4093ea
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_456363
lea ecx [ ebp - 0x24 ]
mov eax [ ecx + 0x18 ]
and [ ebp - 0xc ] 0x0
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0x1c ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x8 ] 0x2
call sub_456363
lea ecx [ ebp - 0x14 ]
jmp r-xdata
call sub_409a20
inc esi
cmp esi edi
jl r-xdata
sub_4621e5
push esi
push 0x4
mov esi ecx
call sub_420f36
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] 0x1
jmp r-xdata
mov [ esi + 0x4 ] eax
pop esi
retn
sub_462203
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x1c
push esi
test al 0x1
jne r-xdata
mov esi rw-data
push 0x2a
mov ecx esi
call sub_409dae
test al al
jne r-xdata
and [ rw-data ] 0x0
xor ecx ecx
and [ rw-data ] 0x0
inc ecx
or eax ecx
mov [ rw-data ] ecx
push sub_43b726
mov [ rw-data ] eax
call sub_422ec0
pop ecx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub esp 0x10
mov ecx esp
push r--data
call sub_407f41
push 0x0
push 0x2a
lea ecx [ ebp - 0x18 ]
call sub_4669c4
lea eax [ ebp - 0x18 ]
mov ecx esi
push eax
call sub_4675d6
lea ecx [ ebp - 0x10 ]
call sub_405a64
sub_462283
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x8
mov esi ecx
call sub_4619a6
mov edi [ ebp + 0x8 ]
mov ecx edi
cmp [ edi + 0xc ] 0x4
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_409d46
push edx
push eax
mov ecx esi
call sub_461d09
call sub_409997
lea eax [ ebp + 0x8 ]
mov ecx esi
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ edi + 0x8 ]
call sub_461c9c
jmp r-xdata
xor al al
lea eax [ ebp + 0x8 ]
mov ecx esi
push eax
push [ ebp - 0x4 ]
call sub_4622ec
mov al 0x1
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4622ec
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
push edi
mov edi [ esi ]
mov edx [ esi + 0x4 ]
test edi edi
je r-xdata
test edx edx
je r-xdata
mov [ edi + 0x4 ] edx
test edi edi
jne r-xdata
mov eax [ esi ]
mov [ edx ] eax
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x20 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebx + 0x14 ]
mov [ eax + ecx * 4 ] edx
push esi
call j_sub_422ed5#3
pop ecx
mov ecx [ ebx + 0x10 ]
xor edx edx
mov edi [ ecx + 0x8 ]
test edi edi
jle r-xdata
push ecx
call sub_45631f
dec edi
jmp r-xdata
mov ecx [ ecx + 0x4 ]
cmp edx edi
jl r-xdata
inc edx
add ecx 0x4
cmp edx edi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + edx * 4 + 0x4 ]
mov ecx [ ecx + edx * 4 ]
inc edx
mov eax [ eax ]
mov [ ecx ] eax
mov esi [ ebx + 0x10 ]
dec [ esi + 0x8 ]
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
push [ eax + ecx * 4 ]
call j_sub_422ed5#3
mov eax [ esi + 0x4 ]
pop ecx
mov ecx [ esi + 0x8 ]
pop edi
pop esi
pop ebx
and [ eax + ecx * 4 ] 0x0
pop ebp
retn 0x8
mov eax [ ecx ]
cmp [ eax ] esi
je r-xdata
sub_46238d
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov ebx ecx
push 0x8
mov [ ebp - 0x4 ] ebx
call sub_4619a6
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
push 0x28
call sub_420f36
mov esi eax
pop ecx
test esi esi
je r-xdata
push [ ebp + 0x8 ]
mov ecx ebx
call sub_461c81
test eax eax
je r-xdata
xor esi esi
lea ecx [ esi + 0x4 ]
call sub_4077c7
jmp r-xdata
push [ ebp + 0xc ]
lea edi [ eax + 0x20 ]
mov ecx [ edi ]
call sub_409e9c
jmp r-xdata
xor ebx ebx
push [ ebp + 0xc ]
and [ ebx + 0x8 ] 0x0
mov ecx ebx
call sub_409ac0
jmp r-xdata
push [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
mov [ esi ] 0x1
call sub_4081a7
push 0x10
call sub_420f36
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov eax [ edi ]
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x4 ]
lea edi [ esi + 0x20 ]
push esi
mov [ edi ] ebx
call sub_461a8a
pop esi
sub_462427
push ebp
mov ebp esp
push esi
push edi
push 0x8
mov edi ecx
call sub_4619a6
push 0x28
call sub_420f36
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
lea ecx [ esi + 0x4 ]
call sub_4077c7
jmp r-xdata
xor ebx ebx
push [ ebp + 0x10 ]
and [ ebx + 0x8 ] 0x0
mov ecx ebx
call sub_409ac0
jmp r-xdata
mov eax [ ebp + 0x8 ]
and [ esi ] 0x0
push ebx
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0xc ]
push 0x10
mov [ esi + 0x1c ] eax
call sub_420f36
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov eax [ esi + 0x20 ]
pop edi
pop esi
pop ebp
retn 0x10
mov eax [ ebp + 0x8 ]
jg r-xdata
push esi
mov ecx edi
mov [ esi + 0x20 ] ebx
call sub_461a8a
mov ecx [ ebp + 0xc ]
pop ebx
cmp ecx [ edi + 0xc ]
jl r-xdata
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] ecx
cmp eax [ edi + 0x8 ]
jbe r-xdata
sub_4624ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0x14
mov ebx ecx
call sub_420f36
mov edi eax
pop ecx
test edi edi
je r-xdata
xor edi edi
lea ecx [ edi + 0x4 ]
call sub_4077c7
jmp r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ edi + 0x4 ]
mov [ ebp - 0x4 ] edi
mov eax [ ebx + esi * 4 + 0x1b4 ]
add eax 0x8
push eax
call sub_4081a7
lea eax [ ebp - 0x4 ]
mov [ edi ] esi
push eax
lea ecx [ ebx + 0x8c ]
call sub_40469d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_462502
push ebp
mov ebp esp
sub esp 0x38
cmp [ ebp + 0x10 ] 0xffffffff
push ebx
push esi
push edi
mov esi ecx
je r-xdata
call sub_46277b
mov edi eax
cmp edi 0xffffffff
je r-xdata
cmp [ ebp + 0x10 ] 0x7
jl r-xdata
xor eax eax
mov ebx [ esi + edi * 4 + 0x1b4 ]
lea eax [ ebp - 0x34 ]
push 0x2c
push 0x0
push eax
mov [ ebp - 0x38 ] 0x30
call sub_422f60
add esp 0xc
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x10 ] 0x207
jge r-xdata
or [ ebp - 0x8 ] 0xffffffff
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
mov ecx esi
call sub_462d55
test al al
je r-xdata
mov eax [ esi ]
mov [ ebx ] eax
jmp r-xdata
push edi
mov ecx esi
call sub_4626a9
mov ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x38 ]
mov [ ebp - 0x34 ] 0x4
push edx
push 0x0
mov eax [ esi + ecx * 4 + 0x1b4 ]
push ecx
mov eax [ eax ]
push eax
mov [ ebx ] eax
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov ecx [ ebp + 0xc ]
mov [ ebx + 0x5 ] dl
cwde
mov [ ebp - 0x34 ] 0x32
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x28 ] edi
sub eax edx
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebx ] eax
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp [ ecx ] dx
jne r-xdata
dec eax
jne r-xdata
push [ ebp - 0x24 ]
call [ IsMenu@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] 0x1
jne r-xdata
mov [ ebp - 0x30 ] 0x800
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
call [ CreatePopupMenu@IAT ]
test eax eax
jne r-xdata
mov [ ebx + 0x4 ] dl
mov [ ebp - 0x30 ] 0x200
mov [ ebx + 0x5 ] 0x1
mov eax [ ebp + 0x14 ]
cmp [ esi + 0x8 ] 0x0
je r-xdata
or [ ebp - 0x34 ] 0x4
mov [ ebp - 0x24 ] eax
mov [ ebx + 0x4 ] 0x1
jmp r-xdata
push edi
mov ecx esi
call sub_462a4b
jmp r-xdata
mov [ esi + 0x9d4 ] edi
mov eax edi
jmp r-xdata
cmp edi 0x7
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ esi ]
cmp [ ebx ] eax
jne r-xdata
push eax
call [ GetMenuItemCount@IAT ]
mov ecx eax
mov eax [ ebp + 0x14 ]
mov [ ebp + 0x10 ] ecx
cmp eax 0xffffffff
je r-xdata
lea eax [ ecx - 0x4 ]
jmp r-xdata
lea edx [ ecx - 0x4 ]
lea ecx [ eax + 0x1 ]
cmp ecx edx
jle r-xdata
lea ecx [ ebp - 0x38 ]
push ecx
push 0x1
push eax
push [ ebx ]
call [ InsertMenuItemW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
sub_4626a9
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
cmp esi 0x207
jge r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
push edi
lea edi [ esi + 0x6d ]
lea edi [ ebx + edi * 4 ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
and [ edi ] 0x0
cmp esi [ ebx + 0x9d0 ]
jne r-xdata
push ecx
call sub_467755
pop edi
cmp esi 0x7
jl r-xdata
xor esi esi
cmp [ edi ] 0x0
jne r-xdata
cmp esi 0x7
jge r-xdata
dec esi
sub edi 0x4
cmp esi 0x7
jge r-xdata
mov [ ebx + 0x9d0 ] esi
sub_462700
push ebp
mov ebp esp
push edi
lea edi [ ecx + 0x8c ]
cmp [ edi ] 0x0
je r-xdata
cmp [ ecx + 0xa0 ] 0x0
jne r-xdata
mov eax [ ecx + 0x90 ]
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ eax ]
mov eax [ esi ]
mov [ ecx ] eax
lea eax [ esi + 0x4 ]
push eax
add ecx 0x4
call sub_4081a7
mov ecx edi
call sub_40467d
push ecx
mov ecx esi
call sub_404665
and [ rw-data ] 0x0
mov al 0x1
pop esi
jmp r-xdata
xor al al
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
pop ebp
retn 0x4
push 0xa
mov eax [ rw-data ]
cmp eax 0x64
jge r-xdata
inc eax
mov [ rw-data ] eax
push 0x0
jmp r-xdata
call [ Sleep@IAT ]
sub_46277b
push ebx
mov ebx ecx
push esi
push edi
mov eax [ ebx + 0x9d0 ]
cmp eax 0x206
jge r-xdata
push 0x7
pop edi
cmp edi eax
jg r-xdata
push 0x18
call sub_420f36
mov esi eax
pop ecx
test esi esi
je r-xdata
or eax 0xffffffff
lea ecx [ ebx + 0x1d0 ]
xor esi esi
lea ecx [ esi + 0x8 ]
call sub_4077c7
jmp r-xdata
cmp edi eax
jg r-xdata
inc edi
add ecx 0x4
cmp edi eax
jle r-xdata
inc eax
mov [ ebx + 0x9d0 ] eax
mov [ ebx + 0x9d0 ] 0x7
jmp r-xdata
mov eax [ ebx + 0x9d0 ]
test eax eax
jne r-xdata
push 0x18
call sub_420f36
mov esi eax
pop ecx
test esi esi
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
mov [ ebx + edi * 4 + 0x1b4 ] esi
mov eax edi
and [ esi ] 0x0
mov [ esi + 0x4 ] 0xff
jmp r-xdata
mov edi [ ebx + 0x9d0 ]
jmp r-xdata
xor esi esi
lea ecx [ esi + 0x8 ]
call sub_4077c7
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46281f
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push 0x2c
xor ebx ebx
mov [ ebp - 0x44 ] 0x30
lea eax [ ebp - 0x40 ]
mov esi ecx
push ebx
push eax
call sub_422f60
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x4 ]
add esp 0xc
mov [ ebp - 0x40 ] 0x1
mov ecx esi
push eax
mov eax [ ebp + 0x10 ]
movzx eax ax
push eax
call sub_462d55
test al al
je r-xdata
xor al al
mov edi [ ebp - 0x4 ]
mov ecx [ esi + edi * 4 + 0x1b4 ]
cmp edi 0x3
jne r-xdata
cmp edi 0x4
jne r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov eax [ ebp + 0x10 ]
shr eax 0x10
test ax ax
jne r-xdata
lea eax [ ebp - 0x44 ]
push eax
push ebx
push edi
push [ esi ]
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov eax [ ebp - 0x38 ]
test al 0x8
je r-xdata
cmp [ rw-data ] bl
jne r-xdata
or eax 0x8
mov [ rw-data ] 0x1
xor eax 0x8
mov [ rw-data ] bl
jmp r-xdata
mov eax [ ecx ]
mov [ ebp + 0x10 ] eax
cmp [ esi + 0x7 ] bl
je r-xdata
mov al 0x1
jmp r-xdata
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x44 ]
push eax
push ebx
push 0x4
push [ esi ]
call [ SetMenuItemInfoW@IAT ]
mov ecx esi
call sub_40410d
push 0x1f4
call [ Sleep@IAT ]
jmp r-xdata
cmp [ esi + 0x5 ] bl
je r-xdata
cmp [ ecx + 0x5 ] bl
je r-xdata
push edi
mov ecx esi
call sub_4624ac
jmp r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push ebx
push edi
push eax
call [ GetMenuItemInfoW@IAT ]
mov eax [ ebp - 0x38 ]
test al 0x8
je r-xdata
push eax
call [ GetMenuItemCount@IAT ]
mov [ ebp + 0x14 ] eax
cmp [ esi + 0x4 ] bl
je r-xdata
or eax 0x8
xor eax 0x8
jmp r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov [ ebp + 0x14 ] eax
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x44 ]
push eax
push ebx
push edi
push [ ebp + 0x10 ]
call [ SetMenuItemInfoW@IAT ]
or eax 0xffffffff
push ebx
push [ ebp + 0x10 ]
call [ GetMenuItemID@IAT ]
cmp eax edi
je r-xdata
mov eax ebx
dec ebx
mov [ ebp - 0x8 ] eax
js r-xdata
inc ebx
cmp ebx [ ebp + 0x14 ]
jl r-xdata
lea ecx [ ebx + 0x1 ]
lea ebx [ eax + 0x1 ]
mov [ ebp - 0x14 ] ecx
cmp ebx [ ebp + 0x14 ]
jge r-xdata
mov edi [ ebp + 0x10 ]
jmp r-xdata
push 0x400
push eax
lea eax [ ebx - 0x1 ]
push eax
push ecx
push [ ebp + 0x10 ]
call [ CheckMenuRadioItem@IAT ]
jmp r-xdata
mov edi [ ebp + 0x10 ]
dec ebx
jns r-xdata
mov eax [ ebp - 0xc ]
mov eax [ esi + eax * 4 + 0x1b4 ]
cmp [ eax + 0x5 ] 0x0
je r-xdata
cmp eax edi
jne r-xdata
inc ebx
cmp ebx [ ebp + 0x14 ]
jl r-xdata
mov eax [ ebp - 0xc ]
mov eax [ esi + eax * 4 + 0x1b4 ]
cmp [ eax + 0x5 ] 0x0
je r-xdata
push ebx
push edi
call [ GetMenuItemID@IAT ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
push ecx
push eax
mov ecx esi
call sub_462d55
test al al
je r-xdata
mov edi [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
push ebx
push edi
call [ GetMenuItemID@IAT ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
push ecx
push eax
mov ecx esi
call sub_462d55
test al al
je r-xdata
mov edi [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x14 ]
sub_462a4b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
or [ esp ] 0xffffffff
lea eax [ esp ]
push ebx
push esi
push edi
push eax
push [ ebp + 0x8 ]
mov esi ecx
call sub_462d55
test al al
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
push 0x7
pop ebx
cmp edi ebx
jl r-xdata
cmp edi [ esi + 0x9d0 ]
jg r-xdata
mov eax [ esi + edi * 4 + 0x1b4 ]
mov [ esp + 0x14 ] eax
cmp [ eax + 0x4 ] 0x1
mov ecx [ eax ]
mov [ esp + 0x10 ] ecx
jne r-xdata
mov ebx [ esp + 0x14 ]
push 0x0
push edi
push [ ebx ]
call [ DeleteMenu@IAT ]
test eax eax
je r-xdata
push 0x2c
lea eax [ esp + 0x20 ]
mov [ esp + 0x1c ] 0x30
push 0x0
push eax
call sub_422f60
add esp 0xc
mov [ esp + 0x1c ] 0x4
lea eax [ esp + 0x18 ]
push eax
push 0x0
push edi
push [ esp + 0x1c ]
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x4 ] 0xff
push 0xffffffff
push eax
lea ecx [ ebx + 0x8 ]
mov [ ebx ] eax
call sub_407e8c
push edi
mov ecx esi
call sub_4626a9
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esp + 0x2c ]
mov [ esp + 0x10 ] ecx
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ esi + 0x9d0 ] ebx
jl r-xdata
lea edi [ esi + 0x1d0 ]
inc ebx
add edi 0x4
cmp ebx [ esi + 0x9d0 ]
jle r-xdata
cmp [ eax ] ecx
jne r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov edi [ esp + 0xc ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
push 0x0
push ebx
push ecx
call [ DeleteMenu@IAT ]
mov eax [ edi ]
xor ecx ecx
push 0xffffffff
push ecx
mov [ eax + 0x4 ] 0xff
mov eax [ edi ]
mov [ eax ] ecx
mov eax [ edi ]
mov [ eax + 0x5 ] cl
mov ecx [ edi ]
add ecx 0x8
call sub_407e8c
push ebx
mov ecx esi
call sub_4626a9
push ebx
mov ecx esi
call sub_462a4b
jmp r-xdata
mov ecx [ esp + 0x10 ]
sub_462b9a
push ebp
mov ebp esp
sub esp 0x34
or [ ebp - 0x4 ] 0xffffffff
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp edi 0x5
je r-xdata
xor eax eax
cmp edi 0x6
je r-xdata
cmp edi 0x3
je r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ edi * 4 + rw-data ]
and [ esi ] 0x0
test eax eax
je r-xdata
cmp edi 0x4
je r-xdata
mov ebx [ eax ]
lea eax [ ebp - 0x30 ]
push 0x2c
push 0x0
push eax
mov [ ebp + 0x8 ] ebx
mov [ ebp - 0x34 ] 0x30
call sub_422f60
add esp 0xc
test ebx ebx
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
push edi
call sub_462d55
test al al
je r-xdata
push 0x208
call sub_420f36
mov ebx [ ebp + 0xc ]
pop ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x30 ] 0x11
mov [ ebx ] eax
lea eax [ ebp - 0x34 ]
push eax
push 0x0
push edi
push [ ebp + 0x8 ]
mov [ ebp - 0xc ] 0x104
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov edi [ ebp - 0x4 ]
push [ ebx ]
call j_sub_422ed5#3
pop ecx
test [ ebp - 0x2c ] 0x800
jne r-xdata
mov eax [ ebp - 0x28 ]
test al 0x3
je r-xdata
or [ esi ] 0x40
or [ esi ] 0x80
jmp r-xdata
test al 0x8
je r-xdata
or [ esi ] 0x100
test eax 0x8080
je r-xdata
or [ esi ] 0x4
or [ esi ] 0x1
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
or [ esi ] 0x200
test eax 0x1000
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_462ca7
push ebp
mov ebp esp
sub esp 0x34
or [ ebp - 0x4 ] 0xffffffff
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
jne r-xdata
cmp esi 0x5
je r-xdata
mov eax [ rw-data ]
xor eax eax
cmp esi 0x6
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp esi 0x3
je r-xdata
mov edi esi
cmp esi 0x4
je r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
push esi
call sub_462d55
test al al
je r-xdata
push 0x2c
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x34 ] 0x30
push 0x0
push eax
call sub_422f60
add esp 0xc
mov [ ebp - 0x30 ] 0x4
lea eax [ ebp - 0x34 ]
push eax
mov eax [ edi * 4 + rw-data ]
push 0x0
push esi
push [ eax ]
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
mov eax [ edi * 4 + rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
sub_462d55
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
or [ eax ] 0xffffffff
test edx edx
jns r-xdata
mov [ eax ] edx
mov eax edx
cmp eax 0x207
jge r-xdata
mov edx [ ecx + 0x9d4 ]
cmp edx 0xffffffff
jne r-xdata
xor al al
jmp r-xdata
cmp [ ecx + eax * 4 + 0x1b4 ] 0x0
setne al
pop ebp
retn 0x8
sub_462d8e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
call sub_41fe06
push eax
lea ecx [ esp + 0x24 ]
call sub_40538e
or [ esp + 0x14 ] 0xffffffff
xor ecx ecx
mov esi [ ebp + 0x8 ]
mov edi [ esp + 0x20 ]
cmp esi 0x5
je r-xdata
mov esi ecx
cmp esi 0x6
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_422ed5#3
push edi
call j_sub_422ed5#3
pop ecx
pop ecx
cmp esi 0x3
je r-xdata
mov eax esi
or ebx 0xffffffff
sub eax 0x3
je r-xdata
cmp esi 0x4
je r-xdata
cmp [ edi ] cx
mov ecx rw-data
jne r-xdata
dec eax
jne r-xdata
lea eax [ esp + 0x14 ]
mov ecx rw-data
push eax
push esi
call sub_462d55
test al al
je r-xdata
push edi
call sub_407d2c
push rw-data
jmp r-xdata
cmp [ esi * 4 + rw-data ] ecx
je r-xdata
cmp [ edi ] cx
mov ecx rw-data
jne r-xdata
xor ecx ecx
mov ebx [ ebp + 0x10 ]
mov esi [ esp + 0x14 ]
jmp r-xdata
cmp [ edi ] cx
je r-xdata
call sub_4081a7
jmp r-xdata
push rw-data
mov eax [ esi * 4 + rw-data ]
push 0x208
mov [ esp + 0x14 ] eax
call sub_420f36
pop ecx
push eax
lea ecx [ esp + 0x1c ]
call sub_40538e
xor eax eax
mov [ esp + 0x28 ] 0x30
push 0x2c
push eax
mov [ esp + 0x17 ] al
lea eax [ esp + 0x34 ]
push eax
call sub_422f60
mov eax [ esp + 0x24 ]
add esp 0xc
mov [ esp + 0x4c ] eax
lea eax [ esp + 0x28 ]
mov [ esp + 0x2c ] 0x11
mov [ esp + 0x50 ] 0x104
push eax
xor eax eax
push eax
mov eax [ esp + 0x18 ]
push esi
push [ eax ]
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
xor ecx ecx
xor eax eax
test [ esp + 0x30 ] 0x800
jne r-xdata
mov ecx [ esp + 0x24 ]
dec [ ecx ]
jne r-xdata
push eax
call j_sub_422ed5#3
push [ esp + 0x1c ]
call j_sub_422ed5#3
pop ecx
pop ecx
jmp r-xdata
mov edx [ esp + 0x34 ]
xor ecx ecx
inc ecx
test edx 0x1000
je r-xdata
test ebx ebx
jns r-xdata
mov [ esp + 0xf ] cl
mov eax edx
test bl 0x40
je r-xdata
xor eax eax
cmp [ edi ] ax
je r-xdata
test bl bl
jns r-xdata
and eax 0xfffffffc
mov esi eax
push edi
mov ebx eax
mov [ esp + 0x30 ] 0x10
mov [ esp + 0x50 ] edi
call sub_422d7c
pop ecx
mov [ esp + 0x50 ] eax
jmp r-xdata
test bl 0x1
je r-xdata
or eax 0x3
lea eax [ esp + 0x28 ]
push eax
xor eax eax
push eax
mov eax [ esp + 0x18 ]
push esi
push [ eax ]
call [ SetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov [ esp + 0x14 ] ebx
and [ esp + 0x14 ] 0x4
je r-xdata
or eax 0x8
test ebx ebx
jle r-xdata
test ebx 0x100
je r-xdata
and eax 0xfffffff7
xor esi esi
inc esi
jmp r-xdata
test ebx 0x200
je r-xdata
test dl 0x8
je r-xdata
or eax 0x80
mov eax [ esp + 0x1c ]
dec [ eax ]
jne r-xdata
cmp [ esp + 0xf ] 0x0
je r-xdata
xor eax eax
push eax
push esi
jmp r-xdata
mov [ esp + 0x2c ] ecx
mov [ esp + 0x34 ] eax
cmp [ esp + 0x14 ] 0x0
jne r-xdata
xor eax eax
push eax
push 0xffffffff
mov eax [ esp + 0x18 ]
push [ eax ]
call [ SetMenuDefaultItem@IAT ]
test eax eax
je r-xdata
or eax 0x8
sub_462fe2
push ebp
mov ebp esp
push ecx
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_462d55
test al al
je r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
cmp ecx 0x7
jl r-xdata
cmp ecx [ rw-data ]
jg r-xdata
mov ecx [ ecx * 4 + rw-data ]
push [ ebp + 0xc ]
add ecx 0x8
call sub_4081a7
xor eax eax
inc eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_46302e
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ebx
mov [ edi ] bl
cmp [ esi ] bx
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
push r--data
push esi
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
push esi
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x1b0 ]
jmp r-xdata
push r--data
push esi
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x7f04
jmp r-xdata
push r--data
push esi
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x7f02
jmp r-xdata
push ebx
call [ LoadIconW@IAT ]
mov ebx eax
jmp r-xdata
push r--data
push esi
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x7f01
jmp r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push ebx
push [ ebp + 0x8 ]
push esi
call [ ExtractIconExW@IAT ]
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
push 0x7f03
mov [ edi ] 0x1
sub_4630fd
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + 0xe ]
cmp eax 0xb
ja r-xdata
xor eax eax
push [ ebp + 0xc ]
shl ecx 0x4
add ecx rw-data
call sub_4081a7
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x8
sub_463127
push esi
mov esi ecx
push edi
cmp [ esi + 0x1a4 ] 0x0
jne r-xdata
push ebx
lea ebx [ esi + 0x1ac ]
push ebx
lea edi [ esi + 0x1a8 ]
push edi
call sub_404213
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ esi + 0x1a4 ] eax
pop ebx
je r-xdata
push ebx
push [ esi + 0x4c ]
mov ecx esi
push [ esi + 0x14 ]
call sub_46302e
cmp [ esi + 0x50 ] 0x0
mov [ edi ] eax
mov eax [ esi + 0x1a4 ]
mov [ edi ] eax
cmp [ edi ] 0x0
jne r-xdata
pop edi
pop esi
retn
sub_463180
push ebp
mov ebp esp
and esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi rw-data
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov ecx esi
call sub_4043db
push 0xfffffffd
jmp r-xdata
test bl 0x4
je r-xdata
mov ecx esi
call sub_4044cb
push 0xfffffffc
mov ecx esi
call sub_40406f
test bl 0x8
je r-xdata
mov [ rw-data ] 0x1
push 0xfffffffb
jmp r-xdata
test bl 0x10
je r-xdata
cmp [ rw-data ] 0x1
mov [ rw-data ] 0x0
jne r-xdata
mov ecx esi
call sub_40406f
xor eax eax
pop esi
inc eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
push r--data
mov ecx rw-data
mov [ rw-data ] 0x0
call sub_407d2c
push 0xfffffffa
mov ecx esi
call sub_4043db
sub_463210
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
retn 0x8
call sub_46335d
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
sub eax edi
inc eax
push eax
lea eax [ ecx + edi ]
push eax
push ecx
call sub_420fc0
add esp 0xc
sub [ esi + 0x4 ] edi
sub_46323e
push ebp
mov ebp esp
push ecx
cmp [ ecx + 0x2c ] 0x7
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
call sub_405d20
cmp eax 0x2
je r-xdata
cmp [ ecx + 0x2c ] 0x8
je r-xdata
mov cl [ ebp - 0x4 ]
mov al [ ebp - 0x3 ]
mov [ ebp - 0x3 ] cl
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] al
mov ax [ ebp - 0x4 ]
mov [ ecx ] ax
xor al al
jmp r-xdata
push 0x2
push [ ebp + 0x8 ]
call sub_405d20
cmp eax 0x2
je r-xdata
mov esp ebp
pop ebp
retn 0x4
mov al 0x1
jmp r-xdata
sub_463291
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
call sub_407eec
mov esi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x1 ] bl
cmp [ esi ] ebx
jbe r-xdata
mov [ esi ] ebx
mov al 0x1
lea eax [ ebp + 0xc ]
mov ecx edi
push eax
call sub_46323e
test al al
je r-xdata
mov al [ ebp - 0x1 ]
test al al
jne r-xdata
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x1 ] 0x1
call sub_407a84
inc ebx
cmp ebx [ esi ]
jb r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4632e7
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
call sub_407eec
push 0xa
xor bl bl
pop edi
test bl bl
jne r-xdata
cmp [ ebp - 0x4 ] 0xd
mov bl 0x1
je r-xdata
mov al 0x1
xor al al
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
call sub_46323e
test al al
je r-xdata
cmp [ ebp - 0x4 ] di
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x4 ] di
je r-xdata
push [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_407a84
jmp r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
mov ecx esi
call sub_405c4e
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
call sub_46323e
test al al
je r-xdata
sub_46335d
push ebx
mov ebx ecx
mov ecx [ ebx + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jle r-xdata
pop ebx
retn
dec eax
push esi
mov [ ecx ] eax
mov ecx ebx
push edi
call sub_456223
mov edi [ ebx + 0x4 ]
inc edi
push edi
call sub_405a4b
push eax
mov [ ebx + 0x8 ] eax
call sub_420f36
push edi
push [ ebx ]
mov esi eax
push esi
call sub_420fc0
add esp 0x10
mov [ ebx ] esi
pop edi
pop esi
sub_4633b0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x10 ]
call sub_405c18
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
call sub_405632
test al al
je r-xdata
xor bl bl
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40793a
mov bl 0x1
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405a64
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4633f8
push esi
push edi
mov edi ecx
and [ edi + 0x8 ] 0x0
and [ edi + 0xc ] 0x0
call sub_405dae
mov esi [ edi + 0x10 ]
sub esi eax
mov eax [ edi + 0x14 ]
push 0x1
push 0x0
sbb eax edx
push eax
push esi
push [ edi ]
call [ SetFilePointerEx@IAT ]
mov ecx edi
call sub_405dae
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] edx
pop edi
pop esi
retn
sub_463431
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push edi
push eax
push eax
mov edi [ ebx + 0x4 ]
push eax
push eax
inc edi
push edi
push [ ebx ]
push eax
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
push esi
push eax
call sub_420f36
pop ecx
mov esi eax
xor eax eax
push eax
push eax
push [ ebp + 0x8 ]
push esi
push edi
push [ ebx ]
push eax
push 0xfde9
call [ WideCharToMultiByte@IAT ]
dec eax
push eax
push ecx
mov ecx [ ebp + 0xc ]
push esi
call sub_405ac4
push esi
call j_sub_422ed5#3
pop ecx
pop esi
mov ecx [ ebp + 0xc ]
call sub_405a2f
jmp r-xdata
pop edi
pop ebx
pop ebp
retn 0x8
sub_46349e
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
call sub_46339d
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi ]
call [ WriteFile@IAT ]
mov eax [ ebp - 0x4 ]
add [ esi + 0x10 ] eax
adc [ esi + 0x14 ] 0x0
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4634cf
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax + 0x4 ]
push esi
push [ eax ]
call sub_46349e
sub eax esi
neg eax
pop esi
sbb eax eax
inc eax
pop ebp
retn 0x4
sub_4634ed
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi + 0x2c ]
cmp eax 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x4 ]
add esi esi
push esi
push [ eax ]
call sub_46349e
cmp eax esi
sete bl
cmp eax 0x6
je r-xdata
cmp eax 0x7
je r-xdata
push [ ebp + 0x8 ]
call sub_463586
mov bl al
jmp r-xdata
cmp eax 0x8
je r-xdata
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp eax 0x3
je r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405c18
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_463431
cmp eax 0x4
je r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405c18
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_405b75
jmp r-xdata
lea eax [ ebp - 0x14 ]
mov ecx edi
push eax
call sub_4634cf
lea ecx [ ebp - 0x14 ]
mov bl al
call sub_405a64
jmp r-xdata
sub_463586
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ eax + 0x4 ]
mov edi [ eax ]
add esi esi
push esi
mov [ ebp - 0x4 ] ecx
call sub_420f36
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_40538e
mov ebx [ ebp - 0xc ]
xor edx edx
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
push esi
push ebx
call sub_46349e
cmp eax esi
lea ecx [ ebp - 0xc ]
sete bl
call sub_405371
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx ebx
sub ecx edi
mov al [ edi + 0x1 ]
mov [ ecx + edi ] al
mov al [ edi ]
lea edi [ edi + 0x2 ]
mov [ ebx + edx + 0x1 ] al
add edx 0x2
cmp edx esi
jb r-xdata
sub_4635f1
push ebp
mov ebp esp
push esi
mov esi ecx
and [ esi + 0x8 ] 0x0
mov [ esi + 0x4 ] 0x1
call sub_458a3a
push 0x4
call sub_420f36
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ esi ] eax
mov [ eax ] ecx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_46361d
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x10 ]
push edi
mov ebx [ esi + 0x4 ]
push ebx
call sub_407b76
xor edi edi
test ebx ebx
je r-xdata
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
call sub_4081a7
lea ecx [ ebp - 0x10 ]
call sub_405a64
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov ecx esi
call sub_407b52
cmp [ eax ] 0xa
jne r-xdata
push edi
mov ecx esi
call sub_407b52
lea ecx [ ebp - 0x10 ]
movzx eax [ eax ]
push eax
call sub_407a84
inc edi
cmp edi ebx
jb r-xdata
push 0xd
lea ecx [ ebp - 0x10 ]
call sub_407a84
sub_463685
push esi
mov esi ecx
cmp dl 0x1
jne r-xdata
push 0x0
call sub_464b15
test al al
jne r-xdata
pop esi
retn
push 0x1
jmp r-xdata
push 0x0
push esi
call [ GetWindowThreadProcessId@IAT ]
push eax
call [ GetCurrentThreadId@IAT ]
push eax
call [ AttachThreadInput@IAT ]
sub_4636b5
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x20030
call sub_431ac0
push ebx
push esi
lea eax [ esp + 0x10038 ]
mov esi edx
push eax
mov edx 0x7fff
call sub_4646af
lea eax [ esp + 0x3c ]
mov edx 0x7fff
push eax
mov ecx esi
call sub_4646af
pop ecx
pop ecx
lea eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0x1003c ]
push eax
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x10038 ]
call sub_464ad8
test al al
je r-xdata
cmp [ ebp + 0x8 ] al
je r-xdata
xor al al
jmp r-xdata
lea ecx [ esp + 0x38 ]
call sub_464ad8
test al al
je r-xdata
lea eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0x1003c ]
push eax
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_407f41
lea ecx [ esp + 0x28 ]
call sub_463a6e
mov bl al
lea ecx [ esp + 0x28 ]
neg bl
sbb bl bl
call sub_405a64
inc bl
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
mov al 0x1
jmp r-xdata
lea eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0x1003c ]
push eax
call [ MoveFileW@IAT ]
lea ecx [ esp + 0x38 ]
call sub_464ad8
test al al
jmp r-xdata
lea eax [ esp + 0x10038 ]
push r--data
push eax
call sub_422f0d
lea eax [ esp + 0x10040 ]
push eax
call sub_422d7c
xor ecx ecx
mov [ esp + eax * 2 + 0x10046 ] cx
lea eax [ esp + 0x44 ]
push eax
call sub_422d7c
xor ecx ecx
mov [ esp + 0x1c ] 0x2
add esp 0x10
mov [ esp + eax * 2 + 0x3a ] cx
lea eax [ esp + 0x10038 ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x38 ]
mov [ esp + 0x14 ] eax
xor eax eax
mov [ esp + 0x1e ] eax
mov [ esp + 0x22 ] eax
mov [ esp + 0x1a ] eax
mov [ esp + 0x8 ] eax
mov eax 0x614
mov [ esp + 0x18 ] ax
lea eax [ esp + 0x8 ]
push eax
call [ SHFileOperationW@IAT ]
neg eax
sbb al al
inc al
je r-xdata
sub_463833
push ebp
mov ebp esp
sub esp 0x2cc
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x1 ] bl
mov edi edx
call sub_4077c7
lea ecx [ ebp - 0x44 ]
call sub_4077c7
lea ecx [ ebp - 0x24 ]
call sub_4077c7
lea ecx [ ebp - 0x14 ]
call sub_4077c7
lea edx [ ebp - 0x34 ]
mov ecx esi
call sub_4048ae
lea edx [ ebp - 0x44 ]
mov ecx edi
call sub_4048ae
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x34 ]
call sub_464a6e
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x3 ] al
call sub_464ad8
mov esi r--data
test al al
je r-xdata
mov ecx [ ebp - 0x44 ]
call sub_464ad8
test al al
je r-xdata
push esi
lea ecx [ ebp - 0x34 ]
call sub_407e0b
lea ecx [ ebp - 0x54 ]
call sub_4077c7
lea ecx [ ebp - 0x64 ]
call sub_4077c7
push ebx
lea eax [ ebp - 0x64 ]
push ebx
push eax
lea edx [ ebp - 0x54 ]
lea ecx [ ebp - 0x34 ]
call sub_4046f9
add esp 0xc
lea eax [ ebp - 0x2c8 ]
push eax
push [ ebp - 0x34 ]
call [ FindFirstFileW@IAT ]
mov esi eax
mov al 0x1
mov [ ebp - 0x2 ] al
cmp esi 0xffffffff
je r-xdata
push esi
lea ecx [ ebp - 0x44 ]
call sub_407e0b
push esi
call [ FindClose@IAT ]
mov bl [ ebp - 0x1 ]
mov edi [ DeleteFileW@IAT ]
test [ ebp - 0x2c8 ] 0x10
jne r-xdata
lea eax [ ebp - 0x2c8 ]
push eax
push esi
call [ FindNextFileW@IAT ]
test eax eax
mov al [ ebp - 0x2 ]
jne r-xdata
lea eax [ ebp - 0x29c ]
push eax
lea ecx [ ebp - 0x74 ]
call sub_407f41
lea eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x74 ]
call sub_4640b2
pop ecx
lea ecx [ ebp - 0x74 ]
call sub_405a64
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_4081a7
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407c8e
lea eax [ ebp - 0x29c ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407e0b
lea ecx [ ebp - 0x24 ]
call sub_463c7b
test al al
je r-xdata
cmp al 0x1
jne r-xdata
mov al bl
mov [ ebp - 0x2 ] al
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ebp + 0x8 ] bl
je r-xdata
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x14 ]
call sub_463a48
movzx eax al
cmp [ ebp - 0x3 ] bl
jne r-xdata
push esi
call [ FindClose@IAT ]
jmp r-xdata
push ebx
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407a68
push [ ebp - 0x24 ]
test eax eax
je r-xdata
mov [ ebp - 0x1 ] 0x1
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x14 ]
call sub_463a48
movzx eax al
test eax eax
je r-xdata
push [ ebp - 0x24 ]
lea ecx [ ebp - 0x64 ]
call sub_405a64
lea ecx [ ebp - 0x54 ]
call sub_405a64
lea ecx [ ebp - 0x14 ]
call sub_405a64
lea ecx [ ebp - 0x24 ]
call sub_405a64
lea ecx [ ebp - 0x44 ]
call sub_405a64
lea ecx [ ebp - 0x34 ]
call sub_405a64
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
push [ ebp - 0x14 ]
call [ MoveFileW@IAT ]
jmp r-xdata
call edi
push [ ebp - 0x14 ]
call edi
jmp r-xdata
test eax eax
je r-xdata
sub_463a48
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push 0x8
push eax
push 0x0
push 0x0
push [ edx ]
push [ ecx ]
call [ CopyFileExW@IAT ]
dec eax
neg eax
sbb eax eax
inc eax
mov esp ebp
pop ebp
retn
sub_463a6e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x20
mov eax [ ecx ]
mov [ esp ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ ecx + 0x8 ]
push ebx
mov [ esp + 0xc ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x4 ]
push esi
push r--data
mov [ esp + 0x18 ] eax
inc [ eax ]
call sub_407886
mov esi [ esp + 0x8 ]
push esi
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
jne r-xdata
test al 0x10
je r-xdata
call [ GetLastError@IAT ]
xor ebx ebx
cmp eax 0x2
jne r-xdata
xor bl bl
mov bl 0x1
jmp r-xdata
cmp eax 0x3
jne r-xdata
push ebx
push esi
call [ CreateDirectoryW@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x8 ]
call sub_405a64
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esp + 0xc ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x18 ] esi
mov [ esp + 0x24 ] eax
push r--data
inc [ eax ]
call sub_407e2f
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
lea ecx [ esp + 0x18 ]
call sub_405a64
jmp r-xdata
push 0xffffffff
push eax
lea ecx [ esp + 0x20 ]
call sub_407e8c
lea ecx [ esp + 0x18 ]
call sub_463a6e
test al al
je r-xdata
mov bl al
push ebx
push esi
call [ CreateDirectoryW@IAT ]
test eax eax
setne al
sub_463b56
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x288
push ebx
push esi
mov esi ecx
xor ebx ebx
lea ecx [ esp + 0x10 ]
mov [ esp + 0xf ] bl
call sub_4077c7
lea ecx [ esp + 0x20 ]
call sub_4077c7
lea ecx [ esp + 0x30 ]
call sub_4077c7
lea edx [ esp + 0x10 ]
mov ecx esi
call sub_4048ae
mov ecx [ esp + 0x10 ]
call sub_464ad8
test al al
je r-xdata
push ebx
lea eax [ esp + 0x34 ]
push ebx
push eax
lea edx [ esp + 0x2c ]
lea ecx [ esp + 0x1c ]
call sub_4046f9
add esp 0xc
lea eax [ esp + 0x40 ]
push eax
push [ esp + 0x14 ]
call [ FindFirstFileW@IAT ]
mov esi eax
mov al 0x1
mov [ esp + 0xe ] al
cmp esi 0xffffffff
je r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_407e0b
push esi
call [ FindClose@IAT ]
mov bl [ esp + 0xf ]
cmp al 0x1
jne r-xdata
test [ esp + 0x40 ] 0x10
jne r-xdata
lea eax [ esp + 0x40 ]
push eax
push esi
call [ FindNextFileW@IAT ]
test eax eax
mov al [ esp + 0xe ]
jne r-xdata
mov [ esp + 0xf ] al
lea ecx [ esp + 0x10 ]
lea eax [ esp + 0x20 ]
push eax
call sub_4081a7
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_407c8e
lea eax [ esp + 0x6c ]
push eax
lea ecx [ esp + 0x14 ]
call sub_407e0b
push [ esp + 0x10 ]
call [ DeleteFileW@IAT ]
cmp eax 0x1
jne r-xdata
mov al bl
mov [ esp + 0xe ] al
jmp r-xdata
push esi
call [ FindClose@IAT ]
jmp r-xdata
lea ecx [ esp + 0x30 ]
call sub_405a64
lea ecx [ esp + 0x20 ]
call sub_405a64
lea ecx [ esp + 0x10 ]
call sub_405a64
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
sub_463c99
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x26c
push ebx
push esi
push edi
push 0x0
mov ebx ecx
mov [ esp + 0x14 ] edx
push 0x2
mov [ esp + 0x1c ] ebx
mov [ esp + 0x50 ] 0x22c
call [ CreateToolhelp32Snapshot@IAT ]
mov edi eax
lea eax [ esp + 0x48 ]
push eax
push edi
call [ Process32FirstW@IAT ]
mov esi [ ebp + 0x8 ]
mov ecx [ ebx ]
mov [ esi ] 0x0
call sub_4647ce
mov ebx eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
lea eax [ esp + 0x48 ]
push eax
push edi
call [ Process32NextW@IAT ]
cmp eax 0x1
jne r-xdata
push edi
call [ CloseHandle@IAT ]
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ esp + 0x18 ]
call sub_4077c7
lea ecx [ esp + 0x28 ]
call sub_4077c7
lea eax [ esp + 0x6c ]
push eax
lea ecx [ esp + 0x3c ]
call sub_407f41
lea eax [ esp + 0x28 ]
xor edx edx
push eax
lea eax [ esp + 0x1c ]
push eax
push 0x0
lea ecx [ esp + 0x44 ]
call sub_4046f9
add esp 0xc
lea ecx [ esp + 0x38 ]
call sub_405a64
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x1c ]
call sub_407c8e
push 0x0
push [ esp + 0x18 ]
lea ecx [ esp + 0x20 ]
call sub_407a68
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ esp + 0x50 ]
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_405a64
lea ecx [ esp + 0x18 ]
call sub_405a64
mov eax [ esp + 0x50 ]
cmp ebx eax
jne r-xdata
mov ecx [ esp + 0x10 ]
mov [ esi ] 0x1
mov [ ecx ] eax
sub_463da5
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push esi
push edi
xor esi esi
mov eax 0x80
push esi
push eax
push 0x3
push esi
push 0x3
mov ebx edx
push eax
push ecx
mov [ ebx ] esi
call [ CreateFileW@IAT ]
mov edx eax
mov [ ebp - 0x8 ] edx
cmp edx 0xffffffff
jne r-xdata
push 0xa
pop ecx
xor eax eax
mov [ ebp - 0x14 ] esi
push esi
lea edi [ ebp - 0x3c ]
mov [ ebp - 0x10 ] esi
[ edi ]
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] esi
push eax
push 0x28
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x4 ] esi
push eax
push 0xc
lea eax [ ebp - 0x14 ]
push eax
push 0x2d1400
push edx
call [ DeviceIoControl@IAT ]
push [ ebp - 0x8 ]
mov esi eax
call [ CloseHandle@IAT ]
test esi esi
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463e26
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x1c
cmp [ eax + 0x25 ] 0x0
jne r-xdata
push ebx
push esi
xor esi esi
mov eax 0x80
push esi
push eax
push 0x3
push esi
push 0x3
push eax
push ecx
call [ CreateFileW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov eax 0x80004005
jmp r-xdata
mov eax 0x80004005
jmp r-xdata
push edi
xor eax eax
mov [ ebp - 0x10 ] 0x7
lea edi [ ebp - 0x1c ]
mov [ ebp - 0xc ] esi
stosd [ edi ]
push esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] esi
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x4 ]
push eax
push 0xc
lea eax [ ebp - 0x1c ]
push eax
push 0xc
lea eax [ ebp - 0x10 ]
push eax
push 0x2d1400
push ebx
call [ DeviceIoControl@IAT ]
push ebx
mov esi eax
call [ CloseHandle@IAT ]
pop edi
test esi esi
jne r-xdata
mov esp ebp
pop ebp
retn
pop esi
pop ebx
xor eax eax
cmp [ ebp - 0x14 ] al
setne al
sub_463eb6
push ebp
mov ebp esp
sub esp 0x234
push ebx
push esi
push edi
xor esi esi
push esi
push 0x80
push 0x3
pop ebx
push ebx
push esi
push ebx
push 0xc0000000
push ecx
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push 0x228
lea eax [ ebp - 0x230 ]
push esi
push eax
call sub_422f60
add esp 0xc
mov [ ebp - 0x224 ] ebx
mov edx 0x200
mov [ ebp - 0x20a ] 0xec
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x4 ] esi
push 0x28
pop ecx
push 0x2
pop eax
push esi
mov [ ebp - 0x22e ] ax
lea eax [ ebp - 0x4 ]
push eax
push edx
lea eax [ ebp - 0x230 ]
mov [ ebp - 0x230 ] cx
push eax
push edx
push eax
push 0x4d02c
push edi
mov [ ebp - 0x21c ] ecx
call [ DeviceIoControl@IAT ]
push edi
mov esi eax
call [ CloseHandle@IAT ]
test esi esi
je r-xdata
mov eax 0x80004005
jmp r-xdata
xor eax eax
cmp [ ebp - 0x56 ] 0x1
setne al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463f6d
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
dec eax
push eax
call sub_407b52
cmp [ eax ] 0x5c
je r-xdata
pop esi
retn
push r--data
mov ecx esi
call sub_407e0b
sub_463f8e
push ebp
mov ebp esp
sub esp 0x1c
lea eax [ ebp - 0x10 ]
push esi
push [ ebp + 0x10 ]
mov esi r--data
push esi
push eax
call sub_423818
push [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_423818
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_42307d
add esp 0x20
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0xe
push [ ebp + 0x10 ]
push esi
call [ FindResourceW@IAT ]
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
push eax
push esi
call [ LoadResource@IAT ]
test eax eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x10
push ebx
push edi
push eax
call [ LockResource@IAT ]
and [ ebp + 0x10 ] 0x0
xor ecx ecx
mov [ ebp + 0x8 ] eax
cmp cx [ eax + 0x4 ]
jae r-xdata
xor eax eax
lea edi [ eax + 0x6 ]
xor eax eax
inc eax
jmp r-xdata
push ebx
push esi
call [ LoadResource@IAT ]
mov [ ebp + 0x14 ] eax
test eax eax
je r-xdata
pop edi
pop ebx
push ebx
push esi
call [ SizeofResource@IAT ]
push [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
call [ LockResource@IAT ]
movzx ecx [ edi ]
mov ebx [ rw-data ]
mov [ ebp + 0x14 ] eax
cmp ecx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
add edi 0xe
mov ecx [ ebp + 0x10 ]
inc ecx
mov [ ebp + 0x10 ] ecx
movzx eax [ eax + 0x4 ]
cmp ecx eax
jb r-xdata
movzx ecx [ edi + 0x1 ]
mov edx [ rw-data ]
cmp ecx edx
jne r-xdata
movzx eax [ edi + 0xc ]
push 0x3
push eax
push esi
call [ FindResourceW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
movzx eax [ edi + 0x6 ]
cmp eax [ rw-data ]
je r-xdata
push 0x0
push edx
push ebx
push 0x30000
push 0x1
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
call [ CreateIconFromResourceEx@IAT ]
mov [ rw-data ] eax
jmp r-xdata
sub_4640b2
push ebp
mov ebp esp
sub esp 0x88
push ebx
push esi
push edi
mov esi edx
mov edi ecx
push r--data
mov ecx esi
call sub_4654f1
cmp eax 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
call sub_4077c7
lea ecx [ ebp - 0x44 ]
call sub_4077c7
lea ecx [ ebp - 0x84 ]
call sub_4077c7
lea ecx [ ebp - 0x14 ]
call sub_4077c7
lea ecx [ ebp - 0x74 ]
call sub_4077c7
lea ecx [ ebp - 0x64 ]
call sub_4077c7
lea ecx [ ebp - 0x54 ]
call sub_4077c7
lea ecx [ ebp - 0x34 ]
call sub_4077c7
lea eax [ ebp - 0x14 ]
xor ebx ebx
push eax
lea eax [ ebp - 0x84 ]
xor edx edx
push eax
push ebx
mov ecx edi
call sub_4046f9
add esp 0xc
lea eax [ ebp - 0x34 ]
lea edx [ ebp - 0x74 ]
mov ecx esi
push eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x64 ]
push eax
call sub_4046f9
add esp 0xc
lea ecx [ ebp - 0x14 ]
push ebx
call sub_407b52
push 0x2e
pop esi
cmp [ eax ] si
jne r-xdata
mov ecx [ ebp + 0x8 ]
push esi
call sub_4081a7
jmp r-xdata
push ebx
lea ecx [ ebp - 0x34 ]
call sub_407b52
cmp [ eax ] si
jne r-xdata
push 0x1
push ebx
lea ecx [ ebp - 0x14 ]
call sub_407e8c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x74 ]
push eax
call sub_4081a7
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x64 ]
push eax
call sub_407c8e
lea eax [ ebp - 0x44 ]
push eax
lea edx [ ebp - 0x34 ]
lea ecx [ ebp - 0x14 ]
call sub_464264
pop ecx
lea eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x54 ]
lea ecx [ ebp - 0x84 ]
call sub_464264
pop ecx
push ebx
lea ecx [ ebp - 0x44 ]
call sub_407b52
cmp [ eax ] bx
je r-xdata
push 0x1
push ebx
lea ecx [ ebp - 0x34 ]
call sub_407e8c
push ebx
lea ecx [ ebp - 0x14 ]
call sub_407b52
cmp [ eax ] bx
je r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_407e0b
lea eax [ ebp - 0x44 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_407c8e
lea ecx [ ebp - 0x34 ]
call sub_405a64
lea ecx [ ebp - 0x54 ]
call sub_405a64
lea ecx [ ebp - 0x64 ]
call sub_405a64
lea ecx [ ebp - 0x74 ]
call sub_405a64
lea ecx [ ebp - 0x14 ]
call sub_405a64
lea ecx [ ebp - 0x84 ]
call sub_405a64
lea ecx [ ebp - 0x44 ]
call sub_405a64
lea ecx [ ebp - 0x24 ]
call sub_405a64
push r--data
lea ecx [ ebp - 0x24 ]
call sub_407e0b
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_407c8e
sub_464264
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push esi
push edi
mov edi edx
mov [ ebp - 0xc ] ecx
mov ecx ebx
mov [ ebp - 0x10 ] edi
mov esi eax
mov [ ebp - 0x8 ] eax
call sub_407eec
push r--data
mov ecx edi
call sub_4654f1
cmp eax 0xffffffff
je r-xdata
push edi
mov ecx ebx
call sub_4081a7
push esi
mov ecx edi
call sub_407b20
push 0x2a
pop ecx
cmp [ eax ] cx
je r-xdata
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x4 ] esi
mov esi [ ebp - 0xc ]
push esi
mov ecx edi
call sub_407b20
mov ecx ebx
movzx eax [ eax ]
push eax
call sub_407a84
inc esi
jmp r-xdata
mov esi [ ebp - 0x4 ]
mov edi [ ebp - 0x10 ]
push edi
mov ecx esi
call sub_407b20
mov ecx ebx
movzx eax [ eax ]
push eax
call sub_407a84
inc edi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov ecx edi
call sub_407b20
push 0x2a
pop ecx
cmp [ eax ] cx
je r-xdata
push edi
mov ecx esi
call sub_407b20
xor ecx ecx
cmp [ eax ] cx
je r-xdata
inc esi
mov ecx edi
push esi
call sub_407b20
xor ecx ecx
cmp [ eax ] cx
je r-xdata
push esi
mov ecx edi
call sub_407b20
mov ecx ebx
movzx eax [ eax ]
push eax
call sub_407a84
jmp r-xdata
sub_464339
push ebp
mov ebp esp
sub esp 0x408
lea eax [ ebp - 0x204 ]
push ebx
mov ebx 0x100
push ebx
push eax
push ecx
push 0x0
call [ GetModuleHandleW@IAT ]
push eax
call [ LoadStringW@IAT ]
push ebx
lea eax [ ebp - 0x408 ]
xor ebx ebx
push eax
push 0x1389
push ebx
call [ GetModuleHandleW@IAT ]
push eax
call [ LoadStringW@IAT ]
cmp [ ebp + 0xc ] bl
je r-xdata
push 0x11010
lea eax [ ebp - 0x204 ]
push eax
lea eax [ ebp - 0x408 ]
push eax
push ebx
call [ MessageBoxW@IAT ]
mov eax r--data
push eax
push eax
lea eax [ ebp - 0x408 ]
push eax
push ebx
lea eax [ ebp - 0x204 ]
push eax
push r--data
call sub_423e0a
add esp 0x18
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_4643c6
push ebp
mov ebp esp
push ebx
push esi
push edi
xor ebx ebx
mov edi edx
push ebx
push 0x2000080
push 0x3
push ebx
push 0x1
push 0x40000000
push ecx
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x8 ] 0x1
push ebx
jne r-xdata
push edi
push ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push edi
push ebx
push edi
jmp r-xdata
push ebx
push esi
call [ SetFileTime@IAT ]
push esi
call [ CloseHandle@IAT ]
mov al 0x1
sub_46441d
push ebx
push esi
mov esi ecx
mov ebx rw-data
push edi
mov ecx ebx
mov edi edx
call sub_407eec
push 0x0
push sub_46444a
push esi
call [ EnumChildWindows@IAT ]
push ebx
mov ecx edi
call sub_4081a7
pop edi
pop esi
pop ebx
retn
sub_46444a
push ebp
mov ebp esp
push esi
push 0x10000
call sub_420f36
mov esi eax
mov [ esp ] 0x7fff
push esi
push [ ebp + 0x8 ]
call [ GetClassNameW@IAT ]
cmp [ esi ] 0x0
je r-xdata
push esi
call j_sub_422ed5#3
pop ecx
xor eax eax
inc eax
pop esi
pop ebp
retn 0x8
push edi
mov edi rw-data
push esi
mov ecx edi
call sub_407e0b
push r--data
mov ecx edi
call sub_407e0b
pop edi
sub_46449b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x254
push esi
mov esi ecx
push esi
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea ecx [ esp + 0x8 ]
push ecx
push esi
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ FindClose@IAT ]
mov eax [ esp + 0x8 ]
or eax eax
jmp r-xdata
sub_4644db
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x18 ]
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
push eax
push edi
call [ GetFileVersionInfoSizeW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push esi
call sub_420f36
pop ecx
push eax
mov [ ebp - 0x4 ] eax
xor eax eax
push esi
push eax
push edi
mov [ ebp - 0xc ] eax
call [ GetFileVersionInfoW@IAT ]
mov esi [ ebp + 0x8 ]
push esi
call sub_422d7c
xor ecx ecx
add eax 0x1a
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov edi eax
push r--data
push edi
call sub_422f3c
push r--data
push esi
call sub_4236cc
add esp 0x18
test eax eax
je r-xdata
xor al al
jmp r-xdata
push r--data
push esi
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
push edi
call sub_422f0d
push r--data
push esi
call sub_423afa
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push [ ebp - 0x4 ]
call [ VerQueryValueW@IAT ]
test eax eax
je r-xdata
push 0x8
lea eax [ edi + 0x20 ]
push eax
push ebx
call sub_42422e
push [ ebp - 0x4 ]
xor eax eax
mov [ ebx + 0x10 ] ax
call j_sub_422ed5#3
push edi
call j_sub_422ed5#3
add esp 0x14
mov al 0x1
jmp r-xdata
push esi
push edi
call sub_422f0d
pop ecx
pop ecx
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
push [ ebp - 0x4 ]
call [ VerQueryValueW@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call j_sub_422ed5#3
push edi
call j_sub_422ed5#3
mov al [ ebp - 0xc ]
pop ecx
pop ecx
push r--data
push esi
call sub_4236cc
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
push edi
call sub_422f0d
pop ecx
pop ecx
mov eax [ ebp - 0x10 ]
lea ecx [ edi + 0x20 ]
push 0x0
mov esi [ eax ]
push esi
push 0x4
pop edx
call sub_41fcb1
push 0x0
shr esi 0x10
lea ecx [ edi + 0x28 ]
push esi
push 0x4
pop edx
call sub_41fcb1
mov esi [ ebp + 0x8 ]
add esp 0x10
jmp r-xdata
push 0x200
push [ ebp - 0x8 ]
push ebx
call sub_42422e
add esp 0xc
xor eax eax
mov [ ebx + 0x400 ] ax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0xc ]
movzx eax cx
push eax
shr ecx 0x10
push ecx
movzx eax dx
push eax
shr edx 0x10
push edx
push r--data
push ebx
call sub_423818
add esp 0x18
jmp r-xdata
push r--data
push edi
call sub_422f0d
push esi
push edi
call sub_422f0d
add esp 0x10
jmp r-xdata
mov [ ebp - 0xc ] 0x1
sub_4646af
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
cmp ecx [ ebp + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
push ebx
push ecx
call [ GetFullPathNameW@IAT ]
push esi
call sub_41fe06
mov esi eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
push ebx
push esi
call [ GetFullPathNameW@IAT ]
push esi
call j_sub_422ed5#3
pop ecx
pop esi
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4206dd
pop ebx
mov esp ebp
pop ebp
retn
sub_4646f8
push ebp
mov ebp esp
sub esp 0x298
lea eax [ ebp - 0x298 ]
push esi
push edi
push eax
push 0x101
mov edi edx
mov esi ecx
call [ Ordinal_WSOCK32_115@IAT ]
test eax eax
jne r-xdata
push r--data
push edi
call sub_422f3c
pop ecx
pop ecx
push 0x100
lea eax [ ebp - 0x108 ]
push eax
call [ Ordinal_WSOCK32_57@IAT ]
lea eax [ ebp - 0x108 ]
push eax
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
mov edx [ eax + 0xc ]
xor ecx ecx
cmp [ edx ] ecx
je r-xdata
cmp esi ecx
jle r-xdata
mov eax edx
push 0x4
push [ edx + esi * 4 - 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_420fc0
add esp 0xc
push [ ebp - 0x4 ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea eax [ ebp - 0x108 ]
push eax
call sub_4244b0
or edx 0xffffffff
lea ecx [ ebp - 0x108 ]
call sub_465543
mov esi eax
push esi
push edi
call sub_422f3c
push esi
call j_sub_422ed5#3
add esp 0x14
push r--data
push edi
call sub_422f3c
pop ecx
pop ecx
jmp r-xdata
lea eax [ eax + 0x4 ]
inc ecx
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
call [ Ordinal_WSOCK32_116@IAT ]
jmp r-xdata
sub_4647ce
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov edi ebx
cmp [ esi ] bx
je r-xdata
push esi
call sub_423713
pop ecx
mov eax esi
xor eax eax
jmp r-xdata
inc edi
lea eax [ esi + edi * 2 ]
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebx
retn
movzx eax [ eax ]
push eax
call sub_4237ac
pop ecx
test eax eax
je r-xdata
sub_464804
push ebp
mov ebp esp
sub esp 0x208
lea eax [ ebp - 0x208 ]
push esi
push eax
xor eax eax
mov esi edx
push eax
push eax
push ecx
push eax
call [ SHGetFolderPathW@IAT ]
lea eax [ ebp - 0x208 ]
mov ecx esi
push eax
call sub_407d2c
pop esi
mov esp ebp
pop ebp
retn
sub_464836
push ebp
mov ebp esp
mov eax 0x10000
call sub_431ac0
push esi
push edi
push 0x7fff
lea eax [ ebp - 0x10000 ]
mov edi edx
push eax
push [ ecx ]
call [ GetShortPathNameW@IAT ]
mov esi eax
mov ecx edi
lea eax [ ebp - 0x10000 ]
push eax
call sub_407d2c
test esi esi
pop edi
setne al
pop esi
mov esp ebp
pop ebp
retn
sub_464876
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov ecx edx
push edi
call sub_41fe06
push eax
lea ecx [ ebp - 0x14 ]
call sub_40538e
mov ebx [ ebp + 0x8 ]
xor eax eax
mov edi [ ebp - 0x14 ]
mov esi eax
push edi
mov [ ebp - 0x4 ] eax
mov [ ebx + 0x4 ] eax
mov [ ebx ] eax
mov [ ebp - 0x8 ] 0x1
call sub_422d7c
pop ecx
test eax eax
je r-xdata
push r--data
push edi
call sub_4245a8
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
xor ebx ebx
inc ebx
mov eax [ ebx + 0x4 ]
imul eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ebx ] ecx
mov [ ebx + 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov edi [ ebp - 0x4 ]
push edi
inc esi
call sub_422d7c
pop ecx
cmp esi eax
jb r-xdata
inc ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call j_sub_422ed5#3
push edi
call j_sub_422ed5#3
pop ecx
pop ecx
push r--data
push 0x0
call sub_4245a8
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
mov edi [ ebx ]
cmp [ edi + esi * 2 ] 0xa
jne r-xdata
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp + 0x8 ]
push ebx
push esi
call sub_422d7c
pop ecx
push eax
push esi
push [ ebp - 0xc ]
call [ GetTextExtentPoint32W@IAT ]
cmp [ ebx ] edi
jle r-xdata
mov [ ebp - 0x4 ] edi
mov edi [ ebp - 0x14 ]
sub_464947
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi rw-data
mov ecx edi
mov bl dl
call sub_407eec
push 0x0
push sub_46497f
push esi
mov [ rw-data ] bl
call [ EnumChildWindows@IAT ]
mov ecx [ ebp + 0x8 ]
push edi
call sub_4081a7
pop edi
pop esi
pop ebx
pop ebp
retn
sub_46497f
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_464b15
test al al
jne r-xdata
xor eax eax
inc eax
pop esi
mov esp ebp
pop ebp
retn 0x8
push esi
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov [ ebp + 0x8 ] esi
call sub_4077c7
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_45adbc
lea eax [ ebp - 0x10 ]
mov esi rw-data
push eax
mov ecx esi
call sub_407c8e
push r--data
mov ecx esi
call sub_407e0b
lea ecx [ ebp - 0x10 ]
call sub_405a64
cmp [ rw-data ] 0x1
jne r-xdata
sub_4649ed
test ecx ecx
jns r-xdata
cmp ecx 0x1
jne r-xdata
or eax 0xffffffff
sub eax ecx
mov ecx eax
jmp r-xdata
neg ecx
xor ecx ecx
jmp r-xdata
mov eax ecx
retn
sub_464a08
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
mov [ ebp - 0xc ] 0x500
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ebx
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x220
push 0x20
push 0x2
lea eax [ ebp - 0x10 ]
push eax
call [ AllocateAndInitializeSid@IAT ]
mov ecx eax
mov [ ebp - 0x4 ] ecx
test ecx ecx
je r-xdata
xor eax eax
cmp ecx 0x1
pop ebx
sete al
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x8 ]
push ebx
call [ CheckTokenMembership@IAT ]
push [ ebp - 0x8 ]
neg eax
sbb eax eax
and [ ebp - 0x4 ] eax
call [ FreeSid@IAT ]
mov ecx [ ebp - 0x4 ]
sub_464a6e
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x20 ]
push edi
mov edi edx
call sub_4077c7
lea ecx [ ebp - 0x10 ]
call sub_4077c7
xor ebx ebx
lea edx [ ebp - 0x20 ]
push ebx
push ebx
push ebx
mov ecx esi
call sub_4046f9
add esp 0xc
lea edx [ ebp - 0x10 ]
mov ecx edi
push ebx
push ebx
push ebx
call sub_4046f9
add esp 0xc
lea eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x20 ]
push ebx
push eax
call sub_407a68
test eax eax
lea ecx [ ebp - 0x10 ]
setne bl
call sub_405a64
lea ecx [ ebp - 0x20 ]
call sub_405a64
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
sub_464aee
push esi
mov esi ecx
push esi
call sub_42379a
pop ecx
test eax eax
je r-xdata
xor eax eax
pop esi
retn
push esi
call sub_4237bd
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop esi
retn
test si si
jne r-xdata
sub_464b15
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push 0x1388
push 0x2
xor eax eax
push eax
push eax
push eax
push ecx
call [ SendMessageTimeoutW@IAT ]
neg eax
sbb al al
inc al
mov esp ebp
pop ebp
retn
sub_464b3a
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax ecx
xor esi esi
mov [ ebp - 0x4 ] eax
mov [ rw-data ] 0x0
mov ebx edx
test edi edi
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
push eax
call [ MessageBoxW@IAT ]
mov edi eax
test esi esi
je r-xdata
mov [ rw-data ] 0x1
call [ GetCurrentThreadId@IAT ]
mov [ ebp - 0xc ] eax
xor ecx ecx
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
push eax
push ecx
lea eax [ ebp - 0xc ]
push eax
push sub_46501c
push ecx
push ecx
call sub_424001
mov esi eax
add esp 0x18
mov eax [ ebp - 0x4 ]
cmp [ rw-data ] 0x1
jne r-xdata
push 0xffffffff
push esi
mov [ rw-data ] 0x0
call [ WaitForSingleObject@IAT ]
push esi
call [ CloseHandle@IAT ]
mov eax edi
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464bce
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
mov eax 0x80000000
sub esi eax
neg esi
push 0x0
sbb esi esi
and esi ecx
mov ecx edx
sub ecx eax
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
neg ecx
sbb ecx ecx
and ecx edx
add eax ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
add eax esi
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
call [ MonitorFromRect@IAT ]
pop esi
mov esp ebp
pop ebp
retn
sub_464c15
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
xor eax eax
inc eax
pop esi
retn
push r--data
push esi
call sub_42307d
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push esi
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
push esi
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x2
push r--data
push esi
call sub_42307d
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x3
jmp r-xdata
call sub_403582
xor ecx ecx
test al al
setne cl
push r--data
push esi
call sub_42307d
pop ecx
pop ecx
test eax eax
je r-xdata
pop eax
pop esi
retn
push r--data
push esi
call sub_42307d
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_403582
xor ecx ecx
test al al
sete cl
jmp r-xdata
push r--data
push esi
call sub_42307d
pop ecx
pop ecx
test eax eax
je r-xdata
lea eax [ ecx + 0x1 ]
pop esi
retn
xor eax eax
pop esi
retn
sub_464cce
call sub_464c15
dec eax
je r-xdata
push 0x2
dec eax
je r-xdata
push 0x8
jmp r-xdata
dec eax
je r-xdata
pop eax
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push eax
call [ mouse_event@IAT ]
mov al 0x1
retn
push 0x20
jmp r-xdata
xor al al
retn
sub_464cfa
call sub_464c15
dec eax
je r-xdata
push 0x4
dec eax
je r-xdata
push 0x10
jmp r-xdata
dec eax
je r-xdata
pop eax
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push eax
call [ mouse_event@IAT ]
mov al 0x1
retn
push 0x40
jmp r-xdata
xor al al
retn
sub_464d26
push esi
mov esi ecx
push r--data
push esi
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
push esi
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push 0x78
jmp r-xdata
xor al al
pop esi
retn
push eax
push 0xffffff88
push eax
push eax
push 0x800
call [ mouse_event@IAT ]
mov al 0x1
pop esi
retn
sub_464d68
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x20450
call sub_431ac0
push ebx
push esi
lea eax [ esp + 0x10458 ]
mov esi edx
push eax
mov edx 0x7fff
call sub_4646af
pop ecx
lea eax [ esp + 0x458 ]
mov edx 0x7fff
push eax
mov ecx esi
call sub_4646af
pop ecx
lea ecx [ esp + 0x10458 ]
call sub_464ad8
test al al
jne r-xdata
lea ecx [ esp + 0x458 ]
call sub_464ad8
xor esi esi
test al al
je r-xdata
xor al al
jmp r-xdata
lea eax [ esp + 0x458 ]
push eax
lea ecx [ esp + 0xc ]
call sub_407f41
lea eax [ esp + 0x10458 ]
push eax
lea ecx [ esp + 0x3c ]
call sub_407f41
lea edx [ esp + 0x8 ]
lea ecx [ esp + 0x38 ]
call sub_464a6e
lea ecx [ esp + 0x38 ]
mov bl al
call sub_405a64
lea ecx [ esp + 0x8 ]
call sub_405a64
test bl bl
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ esp + 0x458 ]
push eax
lea eax [ esp + 0x1045c ]
push eax
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
lea edx [ esp + 0x45c ]
lea ecx [ esp + 0x1045c ]
call sub_4636b5
pop ecx
test al al
je r-xdata
lea eax [ esp + 0x458 ]
push eax
lea eax [ esp + 0x1045c ]
push eax
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x10458 ]
push eax
call sub_422d7c
pop ecx
xor ecx ecx
mov [ esp + eax * 2 + 0x1045a ] cx
lea eax [ esp + 0x458 ]
push eax
call sub_422d7c
pop ecx
xor ecx ecx
mov [ esp + 0x2e ] esi
mov [ esp + 0x32 ] esi
mov [ esp + eax * 2 + 0x45a ] cx
lea eax [ esp + 0x10458 ]
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x458 ]
mov [ esp + 0x24 ] eax
mov eax 0x614
mov [ esp + 0x28 ] ax
lea eax [ esp + 0x18 ]
push eax
mov [ esp + 0x2e ] esi
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] 0x1
call [ SHFileOperationW@IAT ]
neg eax
sbb al al
inc al
lea eax [ esp + 0x10458 ]
push eax
lea ecx [ esp + 0xc ]
call sub_407f41
mov dl 0x1
lea ecx [ esp + 0x8 ]
call sub_4651ca
mov bl al
lea ecx [ esp + 0x8 ]
neg bl
sbb bl bl
call sub_405a64
inc bl
sete al
jmp r-xdata
lea eax [ esp + 0x48 ]
push eax
lea eax [ esp + 0x254 ]
push eax
push esi
lea eax [ esp + 0x10464 ]
push esi
push eax
call sub_42426e
add esp 0x14
lea eax [ esp + 0x458 ]
push r--data
push eax
call sub_422f0d
lea eax [ esp + 0x258 ]
push eax
lea eax [ esp + 0x464 ]
push eax
call sub_422f0d
add esp 0x10
cmp [ esp + 0x48 ] si
je r-xdata
lea eax [ esp + 0x458 ]
push eax
lea eax [ esp + 0x1045c ]
push eax
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
lea eax [ esp + 0x48 ]
push eax
lea eax [ esp + 0x45c ]
push eax
call sub_422f0d
pop ecx
pop ecx
mov al 0x1
jmp r-xdata
lea eax [ esp + 0x458 ]
push eax
lea eax [ esp + 0x1045c ]
push eax
call [ MoveFileW@IAT ]
test eax eax
setne al
jmp r-xdata
sub_464fcf
push ebp
mov ebp esp
sub esp 0x200
lea eax [ ebp - 0x200 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push 0x100
push eax
push edi
inc esi
call [ GetClassNameW@IAT ]
lea eax [ ebp - 0x200 ]
push r--data
push eax
call sub_4236cc
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov [ rw-data ] edi
xor esi esi
sub_46501c
push ebp
mov ebp esp
push ebx
push edi
call [ timeGetTime@IAT ]
cmp [ rw-data ] 0x0
mov ebx eax
je r-xdata
pop edi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov edi [ ebp + 0x8 ]
xor ebx ebx
push ebx
push sub_464fcf
push [ edi ]
mov [ rw-data ] ebx
call [ EnumThreadWindows@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
jl r-xdata
push ebx
push r--data
push ebx
push eax
mov [ rw-data ] 0x1
call [ FindWindowExW@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0xa
call [ Sleep@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
cmp eax [ edi + 0x4 ]
jae r-xdata
push ebx
push ebx
push 0x10
push [ rw-data ]
call [ SendMessageW@IAT ]
push 0xfa
call [ Sleep@IAT ]
push [ rw-data ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
call sub_463685
push [ rw-data ]
call [ SetActiveWindow@IAT ]
push ebx
push ebx
push 0xf5
push edi
call [ SendMessageW@IAT ]
mov ecx [ rw-data ]
xor dl dl
call sub_463685
jmp r-xdata
mov ecx ebx
call sub_42034a
test edx edx
jg r-xdata
jmp r-xdata
push ebx
push [ rw-data ]
call [ EndDialog@IAT ]
sub_465115
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi edx
mov edi [ edi ]
cmp edi ecx
jne r-xdata
push ebx
mov ebx [ ebp + 0xc ]
cmp edi ecx
jge r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] esi
jne r-xdata
jle r-xdata
mov eax ecx
sub eax edi
cdq
idiv [ ebp + 0x8 ]
test eax eax
je r-xdata
xor al al
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov ecx [ edi ]
cmp ecx esi
jge r-xdata
mov eax edi
sub eax ecx
cdq
idiv [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax ebx
cmp eax ebx
jge r-xdata
pop edi
pop esi
pop ebp
retn
jle r-xdata
mov eax esi
sub eax ecx
cdq
idiv [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax ebx
cmp eax ebx
jge r-xdata
mov [ eax ] ecx
jmp r-xdata
mov [ eax ] edx
jmp r-xdata
lea edx [ edi + eax ]
mov eax [ ebp + 0x10 ]
cmp edx ecx
jg r-xdata
mov al 0x1
pop ebx
mov eax ecx
sub eax esi
cdq
idiv [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax ebx
cmp eax ebx
jge r-xdata
mov [ eax ] edi
sub edi eax
mov eax [ ebp + 0x10 ]
cmp edi ecx
jge r-xdata
mov eax ebx
cmp eax ebx
jge r-xdata
mov [ edi ] esi
jmp r-xdata
mov [ edi ] eax
jmp r-xdata
add eax ecx
cmp eax esi
jg r-xdata
mov [ edi ] ecx
sub ecx eax
cmp ecx esi
jge r-xdata
sub_4651ca
push ebp
mov ebp esp
mov eax 0x10020
call sub_431ac0
mov ecx [ ecx ]
lea eax [ ebp - 0x10020 ]
push ebx
mov bl dl
mov edx 0x7fff
push eax
call sub_4646af
pop ecx
lea ecx [ ebp - 0x10020 ]
call sub_464ad8
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x10020 ]
push eax
test bl bl
jne r-xdata
call sub_422d7c
pop ecx
xor ecx ecx
mov [ ebp - 0x1c ] 0x3
mov [ ebp + eax * 2 - 0x1001e ] cx
lea eax [ ebp - 0x10020 ]
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xa ] eax
mov [ ebp - 0x6 ] eax
mov [ ebp - 0xe ] eax
mov [ ebp - 0x20 ] eax
mov eax 0x614
mov [ ebp - 0x10 ] ax
lea eax [ ebp - 0x20 ]
push eax
call [ SHFileOperationW@IAT ]
neg eax
sbb al al
inc al
call [ RemoveDirectoryW@IAT ]
test eax eax
setne al
jmp r-xdata
sub_465264
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov ebx ecx
mov esi edx
push r--data
lea ecx [ ebp - 0x10 ]
call sub_4635f1
push ecx
lea ecx [ ebp - 0x10 ]
call sub_458aa3
test al al
jne r-xdata
cmp ebx 0x20
je r-xdata
xor esi esi
jmp r-xdata
xor eax eax
inc eax
cmp ebx 0x40
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4584f3
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
jmp r-xdata
test bl 0xb
jne r-xdata
push 0x0
push eax
call [ SetSystemPowerState@IAT ]
xor ecx ecx
test bl 0x14
je r-xdata
push 0x0
push ebx
call [ ExitWindowsEx@IAT ]
jmp r-xdata
xor eax eax
test bl 0x2
je r-xdata
inc ecx
mov esi eax
push esi
push eax
push ecx
push 0x0
push 0x0
push 0x0
call [ InitiateSystemShutdownExW@IAT ]
jmp r-xdata
inc eax
sub_4652eb
push ebp
mov ebp esp
sub esp 0x28
push esi
mov esi ecx
test esi esi
js r-xdata
pop esi
mov esp ebp
pop ebp
retn
jne r-xdata
cmp esi 0xf
jae r-xdata
push 0x0
jmp r-xdata
push esi
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
test eax eax
je r-xdata
call [ Sleep@IAT ]
lea eax [ ebp - 0x28 ]
push eax
call [ QueryPerformanceFrequency@IAT ]
push 0x0
call [ Sleep@IAT ]
lea eax [ ebp - 0x8 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
sbb eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x18 ]
fstp [ ebp - 0x20 ]
fld [ ebp - 0x20 ]
fild [ ebp - 0x28 ]
fstp [ ebp - 0x20 ]
fdiv [ ebp - 0x20 ]
fmul [ r--data ]
call sub_43b536
cmp eax esi
jb r-xdata
jmp r-xdata
sub_46536e
push ebp
mov ebp esp
sub esp 0x21c
push ebx
push esi
push edi
mov edi ecx
mov bl dl
lea ecx [ ebp - 0x10 ]
call sub_4077c7
push r--data
lea ecx [ ebp - 0x10 ]
call sub_407d2c
push 0x22
lea ecx [ ebp - 0x10 ]
call sub_407a84
push edi
lea ecx [ ebp - 0x10 ]
call sub_407e0b
push 0x22
lea ecx [ ebp - 0x10 ]
call sub_407a84
push r--data
lea ecx [ ebp - 0x10 ]
call sub_407e0b
mov esi [ mciSendStringW@IAT ]
xor eax eax
push eax
push 0x100
lea eax [ ebp - 0x218 ]
push eax
push r--data
call esi
cmp [ ebp - 0x218 ] 0x0
je r-xdata
xor eax eax
cmp [ edi ] ax
je r-xdata
xor eax eax
push eax
push eax
push eax
push r--data
call esi
lea ecx [ ebp - 0x10 ]
call sub_405a64
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edi edi
push edi
push edi
push edi
push [ ebp - 0x10 ]
call esi
test eax eax
jne r-xdata
push edi
push edi
push edi
test bl bl
je r-xdata
push r--data
push r--data
call esi
push edi
push edi
push edi
push r--data
jmp r-xdata
call esi
sub_465432
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0x10 ]
mov ebx [ edi + 0x4 ]
push ebx
call sub_407b76
xor esi esi
test ebx ebx
je r-xdata
lea eax [ ebp - 0x10 ]
mov ecx edi
push eax
call sub_4081a7
lea ecx [ ebp - 0x10 ]
call sub_405a64
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov ecx edi
call sub_407b52
cmp [ eax ] 0xd
je r-xdata
inc esi
cmp esi ebx
jb r-xdata
push esi
mov ecx edi
call sub_407b52
lea ecx [ ebp - 0x10 ]
movzx eax [ eax ]
push eax
call sub_407a84
sub_465490
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
xor edi edi
mov esi ecx
push edi
push edi
push 0x10
push esi
call [ PostMessageW@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push 0x1f4
push 0x2
push edi
push edi
push 0x10
push esi
call [ SendMessageTimeoutW@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x4 ]
push eax
push esi
call [ GetWindowThreadProcessId@IAT ]
push [ ebp - 0x4 ]
push edi
push 0x1f0fff
call [ OpenProcess@IAT ]
mov esi eax
push edi
push esi
call [ TerminateProcess@IAT ]
push esi
call [ CloseHandle@IAT ]
sub_4654f1
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
xor edx edx
xor esi esi
cmp [ edi + 0x4 ] edx
jbe r-xdata
or eax 0xffffffff
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
inc edx
inc esi
cmp esi [ edi + 0x4 ]
jb r-xdata
mov eax [ edi ]
movzx eax [ eax + edx * 2 ]
mov [ ebp + 0x8 ] eax
movzx eax [ ebx ]
xor ecx ecx
test ax ax
je r-xdata
mov eax edx
jmp r-xdata
inc ecx
movzx eax [ ebx + ecx * 2 ]
test ax ax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebp + 0x8 ] ax
je r-xdata
movzx eax [ ebx ]
sub_465543
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
mov esi edx
test edi edi
jne r-xdata
cmp esi 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
xor eax eax
push eax
push eax
push esi
push edi
push 0x1
push eax
call [ MultiByteToWideChar@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
push edi
call sub_4238c0
pop ecx
lea esi [ eax + 0x1 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
pop ebx
xor ecx ecx
mov eax esi
push 0x2
pop edx
cmp ebx esi
jl r-xdata
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
push ebx
push eax
push esi
push edi
push 0x1
push 0x0
mov [ ebp - 0x4 ] eax
call [ MultiByteToWideChar@IAT ]
mov eax [ ebp - 0x4 ]
mov eax ebx
sub_4655b2
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
push 0x8
mov [ ebp - 0x4 ] ecx
lea edi [ ebp - 0x2c ]
pop ecx
mov esi r--data
mov ebx edx
[ edi ] [ esi ]
push 0x30
pop eax
push 0x78
movsw [ edi ] [ esi ]
mov [ ebx ] ax
pop eax
mov [ ebx + 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ebx
lea esi [ eax - 0x1 ]
test esi esi
js r-xdata
pop edi
xor ecx ecx
pop esi
mov [ ebx + eax * 4 + 0x4 ] cx
pop ebx
mov esp ebp
pop ebp
retn
lea edi [ ebx + 0x4 ]
mov ebx [ ebp - 0x4 ]
lea edi [ edi + esi * 4 ]
push 0x10
cdq
pop ecx
idiv ecx
mov cx [ ebp + edx * 2 - 0x2c ]
mov ax [ ebp + eax * 2 - 0x2c ]
mov [ edi + 0x2 ] cx
mov [ edi ] ax
sub edi 0x4
dec esi
jns r-xdata
add eax 0x100
movzx eax [ esi + ebx ]
test eax eax
jns r-xdata
mov ebx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
sub_465630
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx edx
mov edx ecx
push esi
xor esi esi
mov [ ebp - 0xc ] edx
lea eax [ ebx - 0x1 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] esi
xor al al
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] ecx
mov [ edi ] esi
mov [ edi + 0x4 ] esi
test ebx ebx
jle r-xdata
mov al 0x1
pop edi
jmp r-xdata
push [ ebp - 0x4 ]
movzx eax [ esi + edx ]
cdq
push ecx
push edx
push eax
call sub_436130
add [ edi ] eax
mov ecx [ ebp - 0x8 ]
adc [ edi + 0x4 ] edx
inc esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
shld eax ecx 0x8
shl ecx 0x8
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ecx
cmp esi ebx
jl r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4656a4
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
mov edi edx
mov esi ecx
push edi
call [ GetLocalTime@IAT ]
cmp [ esi ] 0x0
je r-xdata
xor al al
push esi
call sub_422d7c
pop ecx
cmp eax 0x4
jb r-xdata
cmp [ ebp + 0x8 ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
je r-xdata
push esi
call sub_422d7c
pop ecx
cmp eax 0x2
jb r-xdata
push 0x4
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_42422e
xor eax eax
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0xc ]
push eax
call sub_42370a
lea esi [ esi + ebx * 2 ]
mov [ edi ] ax
add esi 0x8
push esi
call sub_422d7c
add esp 0x14
cmp eax 0x2
jb r-xdata
mov al 0x1
pop ebx
jmp r-xdata
push 0x2
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_42422e
xor eax eax
mov [ ebp - 0x8 ] ax
lea eax [ ebp - 0xc ]
push eax
call sub_42370a
lea esi [ esi + ebx * 2 ]
mov [ edi + 0x8 ] ax
add esi 0x4
lea ebx [ ebx * 2 + 0x4 ]
push esi
call sub_422d7c
add esp 0x14
cmp eax 0x2
jb r-xdata
push 0x2
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_42422e
xor eax eax
mov [ ebp - 0x8 ] ax
lea eax [ ebp - 0xc ]
push eax
call sub_42370a
lea esi [ esi + ebx * 2 ]
mov [ edi + 0x2 ] ax
add esi 0x4
push esi
call sub_422d7c
add esp 0x14
cmp eax 0x2
jb r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x2
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_42422e
xor eax eax
mov [ ebp - 0x8 ] ax
lea eax [ ebp - 0xc ]
push eax
call sub_42370a
add esi ebx
mov [ edi + 0xa ] ax
push esi
call sub_422d7c
add esp 0x14
cmp eax 0x2
jb r-xdata
push 0x2
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_42422e
xor eax eax
mov [ ebp - 0x8 ] ax
lea eax [ ebp - 0xc ]
push eax
call sub_42370a
add esi 0x4
mov [ edi + 0x6 ] ax
push esi
call sub_422d7c
add esp 0x14
test eax eax
je r-xdata
push 0x2
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_42422e
xor eax eax
mov [ ebp - 0x8 ] ax
lea eax [ ebp - 0xc ]
push eax
call sub_42370a
add esp 0x10
mov [ edi + 0xc ] ax
xor eax eax
mov [ edi + 0xe ] ax
lea esi [ esi + ebx * 2 ]
sub_465824
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
push edi
push ebx
call sub_422d7c
mov edi eax
cdq
sub eax edx
and eax 0xfffffffe
pop ecx
cmp edi eax
je r-xdata
push esi
xor esi esi
test edi edi
jle r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov ax [ ebx + esi * 2 ]
lea edx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ax
lea ecx [ ebp - 0xc ]
mov ax [ ebx + esi * 2 + 0x2 ]
mov [ ebp - 0xa ] ax
xor eax eax
push 0x8
mov [ ebp - 0x8 ] ax
call sub_41fb3b
pop ecx
test al al
je r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
xor al al
jmp r-xdata
mov cl [ ebp - 0x14 ]
mov eax esi
cdq
add esi 0x2
sub eax edx
mov edx [ ebp - 0x4 ]
sar eax 0x1
mov [ eax + edx ] cl
cmp esi edi
jl r-xdata
pop esi
sub_46589c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
push edi
call sub_422d7c
and [ esi ] 0x0
pop ecx
xor ecx ecx
mov [ ebp - 0x4 ] 0x30
inc ecx
lea edx [ eax - 0x1 ]
xor ebx ebx
cmp edx 0xffffffff
je r-xdata
movzx eax [ edi + edx * 2 ]
cmp ax [ ebp - 0x4 ]
jb r-xdata
mov al 0x1
movzx ecx [ edi + 0x2 ]
cmp ecx 0x78
je r-xdata
cmp eax 0x41
jb r-xdata
cmp eax 0x39
ja r-xdata
push 0x30
pop eax
cmp [ edi ] ax
jne r-xdata
cmp ecx 0x58
jne r-xdata
cmp eax 0x61
jb r-xdata
cmp eax 0x46
ja r-xdata
sub eax 0x30
jmp r-xdata
and [ esi ] 0x0
xor al al
jmp r-xdata
cmp eax 0x66
ja r-xdata
sub eax 0x37
jmp r-xdata
imul eax ecx
shl ecx 0x4
add [ esi ] eax
dec edx
inc ebx
cmp ebx 0x8
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub eax 0x57
test edx edx
js r-xdata
sub_46592e
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
mov esi edx
test edi edi
jne r-xdata
cmp esi 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
xor eax eax
push eax
push eax
push eax
push eax
push esi
push edi
push eax
push eax
call [ WideCharToMultiByte@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
push edi
call sub_422d7c
pop ecx
lea esi [ eax + 0x1 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
pop ebx
cmp ebx esi
jge r-xdata
push ebx
push esi
jmp r-xdata
call sub_420f36
pop ecx
xor ecx ecx
mov [ ebp - 0x4 ] eax
push ecx
push ecx
push ebx
push eax
push esi
push edi
push ecx
push ecx
call [ WideCharToMultiByte@IAT ]
mov eax [ ebp - 0x4 ]
sub_465991
push ebx
push edi
xor eax eax
mov ebx ecx
push eax
push eax
push 0xffffffff
push ebx
push eax
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
pop ebx
retn
push esi
xor ecx ecx
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
push edi
mov esi eax
push esi
push 0xffffffff
push ebx
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov eax esi
pop esi
sub_4659de
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
dec eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec eax
jne r-xdata
xor al al
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ ebp + 0x10 ]
mov ecx rw-data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx rw-data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4564ed
mov ecx eax
call sub_4674a7
mov al 0x1
jmp r-xdata
pop ebp
retn 0x10
sub_465a2d
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
push [ ebp + 0x8 ]
call sub_408bb2
neg eax
sbb eax eax
neg eax
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
push [ ebp + 0x8 ]
call sub_4564ed
mov ecx eax
call sub_408bb2
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_465a7c
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
push edi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] esi
mov eax [ ecx + 0x10 ]
mov [ ebp - 0x4 ] esi
mov [ ebx + 0x10 ] eax
test eax eax
je r-xdata
mov eax [ ecx + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ecx + 0xc ]
mov [ ebx + 0xc ] eax
mov edi [ ecx ]
mov [ ebx ] edi
test edi edi
je r-xdata
inc [ eax ]
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor ecx ecx
mov eax edi
push 0x20
pop edx
mul edx
seto cl
neg ecx
or ecx eax
xor eax eax
add ecx 0x4
setb al
neg eax
or eax ecx
push eax
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov eax esi
mov [ eax ] edi
add eax 0x4
dec edi
mov [ ebp - 0xc ] eax
js r-xdata
mov ecx esi
mov [ ebp - 0x8 ] esi
mov [ ebx + 0x4 ] eax
cmp [ ebx ] esi
jle r-xdata
mov esi eax
mov eax [ ebp + 0x8 ]
mov esi [ ebx + 0x4 ]
add esi ecx
mov edi [ eax + 0x4 ]
add edi ecx
lea ecx [ esi + 0xc ]
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
lea eax [ edi + 0xc ]
push eax
call sub_4081a7
mov eax [ edi + 0x1c ]
mov ecx [ ebp - 0x8 ]
mov [ esi + 0x1c ] eax
add ecx 0x20
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
cmp eax [ ebx ]
jl r-xdata
mov ecx esi
call sub_465b5d
add esi 0x20
dec edi
jns r-xdata
mov eax [ ebp - 0xc ]
xor esi esi
jmp r-xdata
sub_465b74
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
cmp eax 0x1
jle r-xdata
mov ecx [ esi ]
mov ax [ ebp + 0x8 ]
mov [ esi + 0x4 ] 0x1
mov [ ecx ] ax
xor ecx ecx
mov eax [ esi ]
mov [ eax + 0x2 ] cx
mov eax esi
pop esi
pop ebp
retn 0x4
dec eax
mov [ ecx ] eax
mov ecx esi
call sub_408189
push 0x8
pop eax
xor ecx ecx
mov [ esi + 0x8 ] eax
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
mov [ esi ] eax
sub_465bca
push esi
push sub_465b6c
lea esi [ ecx - 0x4 ]
push [ esi ]
push 0x20
push ecx
call sub_4046d3
push esi
call j_sub_422ed5#3
pop ecx
mov eax esi
pop esi
retn 0x4
sub_465bea
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
cdq
cmp ecx esi
jge r-xdata
xor eax eax
jmp r-xdata
idiv esi
test edx edx
je r-xdata
idiv ecx
test edx edx
je r-xdata
pop ebp
retn 0xc
mov eax edx
pop esi
sub esi edx
mov edx esi
sub ecx edx
mov edx ecx
jmp r-xdata
sub_465c21
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi ecx
lea ecx [ ebp + 0xc ]
push edi
call sub_407faf
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ CharLowerBuffW@IAT ]
mov ecx esi
call sub_4662a9
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov edi ebx
mov [ esi ] ebx
xor edi edi
inc edi
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
jbe r-xdata
push edi
lea ecx [ ebp + 0xc ]
inc edi
call sub_407b52
push 0x3b
pop ecx
cmp [ eax ] cx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_405a64
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ebx [ esi ]
xor ecx ecx
push 0x20
pop edx
mov eax ebx
mul edx
seto cl
neg ecx
or ecx eax
xor eax eax
add ecx 0x4
setb al
neg eax
or eax ecx
push eax
call sub_420f36
pop ecx
test eax eax
je r-xdata
lea eax [ edi - 0x1 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_407b52
push 0x3b
pop ecx
cmp [ eax ] cx
je r-xdata
push edi
lea ecx [ ebp + 0xc ]
call sub_407b52
cmp [ eax ] bx
je r-xdata
inc [ esi ]
jmp r-xdata
xor ebx ebx
mov eax ebx
mov [ eax ] ebx
add eax 0x4
dec ebx
mov [ ebp - 0x8 ] eax
mov edi eax
js r-xdata
inc [ esi ]
mov eax [ ebp + 0x8 ]
mov edi [ ebp - 0x4 ]
mov [ esi + 0xc ] edi
test eax eax
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ecx edi
call sub_465b5d
add edi 0x20
dec ebx
jns r-xdata
mov [ esi + 0x10 ] ebx
mov [ esi + 0x8 ] eax
push 0x4
call sub_420f36
pop ecx
test eax eax
je r-xdata
or [ ebp - 0x8 ] 0xffffffff
mov ecx esi
mov [ esi + 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ebx
push eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] ebx
push eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] 0x8
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_465d80
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax ebx
mov [ eax ] 0x1
jmp r-xdata
mov edi ebx
push edi
mov [ esi + 0x10 ] eax
call sub_420f36
push [ esi + 0xc ]
mov [ esi + 0x8 ] eax
push ebx
push eax
call sub_422f60
add esp 0x10
jmp r-xdata
sub_465d80
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ ebp + 0x18 ]
xor edx edx
and [ esp + 0xc ] 0x0
and [ esp + 0x10 ] 0x0
push ebx
mov eax [ eax ]
push esi
mov [ esp + 0x10 ] ecx
lea ecx [ esp + 0x4c ]
push edi
mov [ esp + 0x10 ] eax
mov [ esp + 0x24 ] edx
call sub_4077c7
lea ecx [ esp + 0x40 ]
call sub_4077c7
lea ecx [ esp + 0x30 ]
call sub_4077c7
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x14 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ edi ] eax
jb r-xdata
push 0x20
pop esi
cmp [ ebp + 0x8 ] 0x0
mov edi [ ebp + 0x1c ]
je r-xdata
inc [ edi ]
jmp r-xdata
push 0x9
pop ecx
cmp ax cx
jne r-xdata
mov esi [ esp + 0x18 ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x20 ]
push [ eax ]
push [ edi ]
call sub_465bea
mov ebx [ esp + 0x14 ]
mov esi eax
mov eax [ ebp + 0x18 ]
add esi [ edi ]
mov edx [ eax ]
cmp edx [ esp + 0x10 ]
jge r-xdata
mov eax [ edi ]
mov ecx ebx
push eax
call sub_407b20
movzx eax [ eax ]
cmp ax si
je r-xdata
mov eax [ ebx + 0x4 ]
cmp [ edi ] eax
jae r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ ebx + 0x4 ]
shl ecx 0x5
mov esi [ ecx + eax - 0x4 ]
mov [ esp + 0x18 ] esi
jmp r-xdata
mov ecx edx
push 0x20
shl ecx 0x5
pop edi
push r--data
lea ecx [ esp + 0x54 ]
call sub_407d2c
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x20 ]
push [ eax ]
push esi
call sub_465bea
mov ecx [ ebp + 0x18 ]
add eax esi
mov [ edi ] eax
xor ebx ebx
mov eax [ esp + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x4 ]
add [ ecx + eax ] esi
mov eax [ ebx + 0x4 ]
add [ ecx + eax + 0x1c ] esi
inc edx
add ecx edi
cmp edx [ esp + 0x10 ]
jl r-xdata
mov edi [ ebp + 0x1c ]
mov ecx [ edi ]
push ecx
lea eax [ ecx + 0x1 ]
mov ecx ebx
mov [ edi ] eax
call sub_407b20
lea ecx [ esp + 0x50 ]
movzx eax [ eax ]
push eax
call sub_407a84
jmp r-xdata
push [ edi ]
mov ecx ebx
call sub_407b20
push 0x5f
pop ecx
cmp [ eax ] cx
jne r-xdata
push [ edi ]
mov ecx ebx
call sub_407b20
movzx eax [ eax ]
push eax
call sub_423786
pop ecx
test eax eax
jne r-xdata
and [ esp + 0x20 ] 0x0
lea ecx [ esp + 0x30 ]
push r--data
call sub_407d2c
push 0x20
pop esi
inc [ edi ]
jmp r-xdata
push 0x9
pop ecx
cmp ax cx
jne r-xdata
mov eax [ edi ]
mov ecx ebx
push eax
call sub_407b20
movzx eax [ eax ]
cmp ax si
je r-xdata
push [ edi ]
mov ecx ebx
call sub_407b20
push 0x5b
pop ecx
cmp [ eax ] cx
je r-xdata
push 0x20
pop esi
push 0x5f
pop esi
inc [ edi ]
jmp r-xdata
push 0x9
pop ecx
cmp ax cx
jne r-xdata
mov ecx [ edi ]
push ecx
lea eax [ ecx + 0x1 ]
mov ecx ebx
mov [ edi ] eax
call sub_407b20
lea ecx [ esp + 0x30 ]
movzx eax [ eax ]
push eax
call sub_407a84
jmp r-xdata
push [ edi ]
mov ecx ebx
call sub_407b20
cmp [ eax ] si
jne r-xdata
mov eax [ edi ]
mov ecx ebx
push eax
call sub_407b20
movzx eax [ eax ]
cmp ax si
je r-xdata
mov eax [ edi ]
mov ecx ebx
push eax
call sub_407b20
mov esi [ esp + 0x14 ]
push 0x5b
pop ecx
cmp [ eax ] cx
jne r-xdata
push [ edi ]
mov ecx ebx
call sub_407b20
movzx eax [ eax ]
push eax
call sub_423786
pop ecx
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx ebx
push eax
call sub_407b20
cmp [ eax ] 0x3b
jne r-xdata
inc [ edi ]
lea ecx [ esp + 0x40 ]
push r--data
call sub_407d2c
mov eax [ edi ]
cmp eax [ ebx + 0x4 ]
jb r-xdata
inc [ edi ]
jmp r-xdata
push [ esp + 0x40 ]
call sub_42370a
mov [ esp + 0x24 ] eax
pop ecx
test eax eax
jle r-xdata
mov ecx [ edi ]
push ecx
lea eax [ ecx + 0x1 ]
mov ecx ebx
mov [ edi ] eax
call sub_407b20
lea ecx [ esp + 0x40 ]
movzx eax [ eax ]
push eax
call sub_407a84
jmp r-xdata
xor eax eax
inc eax
xor ecx ecx
mov eax rw-data
mov [ esp + 0x2c ] ecx
mov [ esp + 0x28 ] eax
mov ecx esi
call sub_4662a9
push 0x2
pop eax
jmp r-xdata
mov eax [ edi ]
mov ecx ebx
push eax
call sub_407b20
cmp [ eax ] 0x5d
jne r-xdata
push [ edi ]
mov ecx ebx
call sub_407b20
movzx eax [ eax ]
push eax
call sub_4237ac
pop ecx
test eax eax
je r-xdata
lea ecx [ esp + 0x30 ]
call sub_405a64
lea ecx [ esp + 0x40 ]
call sub_405a64
lea ecx [ esp + 0x50 ]
call sub_405a64
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov eax [ esp + 0x24 ]
cmp eax 0x100
jne r-xdata
push [ esp + 0x50 ]
add eax 0xffffffe8
push eax
call sub_4236cc
pop ecx
test eax eax
mov eax [ esp + 0x2c ]
pop ecx
jne r-xdata
mov ebx eax
jmp r-xdata
inc [ edi ]
cmp eax 0x80
jne r-xdata
dec [ esi ]
cmp [ esp + 0x1c ] 0x0
je r-xdata
mov ecx [ esp + 0x2c ]
mov ecx [ eax ]
mov [ esp + 0x24 ] ecx
test cl 0x31
je r-xdata
cmp [ esp + 0x20 ] 0x0
jg r-xdata
push [ esp + 0x30 ]
call sub_42370a
pop ecx
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
test eax eax
je r-xdata
and [ esp + 0x2c ] 0x0
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x1c ]
mov ecx esi
push eax
lea eax [ esp + 0x18 ]
push eax
push edi
push [ ebp + 0x10 ]
push ebx
push 0x1
call sub_465d80
test eax eax
jne r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ eax - 0x4 ]
mov [ esp + 0x1c ] ecx
xor ecx ecx
inc ecx
mov [ esp + 0x2c ] ecx
jmp r-xdata
cmp [ esp + 0x20 ] 0x0
jle r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ esp + 0x18 ]
push [ eax ]
push [ esp + 0x20 ]
push esi
call sub_465bea
mov ecx [ esp + 0x10 ]
add esi eax
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x1c ]
shl ecx 0x5
mov [ esp + 0x18 ] esi
mov eax [ eax + 0x4 ]
mov [ ecx + eax ] esi
mov esi [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
shl ecx 0x5
mov eax [ esi + 0x4 ]
mov [ ecx + eax + 0x4 ] edx
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
mov edx [ esp + 0x24 ]
shl ecx 0x5
mov [ ecx + eax + 0x8 ] edx
lea eax [ esp + 0x30 ]
mov ecx [ esp + 0x10 ]
push eax
mov eax [ esi + 0x4 ]
shl ecx 0x5
add eax 0xc
add ecx eax
call sub_4081a7
mov eax [ esp + 0x20 ]
imul eax [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x10 ]
shl ecx 0x5
add edx eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x18 ] edx
mov [ ecx + eax + 0x1c ] edx
mov ecx [ ebp + 0x20 ]
mov eax [ esp + 0x1c ]
cmp eax [ ecx ]
jle r-xdata
mov [ esp + 0x20 ] 0x1
mov [ ecx ] 0x8
cmp eax 0x1
je r-xdata
mov ecx [ ebp + 0x20 ]
mov eax [ esp + 0x2c ]
cmp eax [ ecx ]
jle r-xdata
add eax 0x1c
mov [ esp + 0x28 ] eax
cmp eax rw-data
jl r-xdata
or ecx 0x4
mov [ esp + 0x24 ] ecx
inc [ esp + 0x10 ]
mov [ ecx ] eax
dec [ esi ]
jmp r-xdata
cmp eax 0x2
je r-xdata
mov [ ecx ] eax
jmp r-xdata
cmp eax 0x4
je r-xdata
cmp eax 0x8
je r-xdata
cmp eax 0x10
je r-xdata
push 0x2
pop ebx
jmp r-xdata
sub_466223
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
cmp [ edx + 0xc ] 0x4
mov ebx ecx
jne r-xdata
mov ecx edx
call sub_409c9c
mov edi [ ebp + 0xc ]
mov [ edi ] eax
mov edi [ ebp + 0xc ]
and [ edi ] 0x0
cmp [ ebx ] 0x0
jle r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x2
xor eax eax
test ecx ecx
js r-xdata
mov ecx [ edi ]
cmp ecx [ ebx ]
jge r-xdata
mov ecx [ edi ]
mov eax [ ebx + 0x4 ]
shl ecx 0x5
mov esi [ ecx + eax + 0xc ]
mov ecx edx
call sub_409997
mov ecx [ ebp + 0x8 ]
push esi
mov eax [ ecx + 0x8 ]
push [ eax ]
call sub_42307d
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
shl ecx 0x5
mov eax [ ecx + eax ]
add eax [ ebx + 0x8 ]
jmp r-xdata
inc [ edi ]
mov eax [ edi ]
mov edx [ ebp + 0x8 ]
cmp eax [ ebx ]
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
jmp r-xdata
sub_4662a9
push esi
mov esi ecx
push edi
xor edi edi
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push ecx
call sub_465bca
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0xc ] edi
pop edi
pop esi
retn
dec [ eax ]
jne r-xdata
mov [ esi + 0x10 ] edi
push [ esi + 0x10 ]
call j_sub_422ed5#3
push [ esi + 0x8 ]
call j_sub_422ed5#3
pop ecx
pop ecx
sub_466306
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov edi ecx
push eax
push [ ebp + 0x8 ]
call sub_466223
mov esi eax
test esi esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebp - 0xc ]
shl ecx 0x5
mov edx [ ecx + eax ]
mov edi [ ecx + eax + 0x1c ]
mov ebx [ ecx + eax + 0x8 ]
mov [ ebp + 0x8 ] edx
mov edx [ ecx + eax + 0x4 ]
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x8 ]
cmp ecx 0xffffffff
je r-xdata
mov edi [ ebp - 0x4 ]
jmp r-xdata
cmp eax edi
jl r-xdata
imul ecx edx
add eax ecx
add esi ecx
mov [ ebp + 0x8 ] eax
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov eax edi
mov [ esi + 0xc ] 0x1
jmp r-xdata
test bl 0x21
je r-xdata
push 0x3
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0x14 ]
test bl 0x4
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x14 ]
push ecx
push eax
push edi
push esi
push ebx
push [ ebp + 0xc ]
call sub_466561
jmp r-xdata
test bl 0x40
je r-xdata
cmp ecx 0xffffffff
jne r-xdata
test bl 0x8
je r-xdata
test al al
je r-xdata
sub edi [ ebp + 0x8 ]
test al al
je r-xdata
dec edx
je r-xdata
cmp edx 0x4
je r-xdata
mov edi [ esi ]
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x7
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_4687da
mov [ esi ] eax
test bl 0x10
je r-xdata
test bl 0x10
je r-xdata
test al al
je r-xdata
dec edx
je r-xdata
test al al
je r-xdata
cmp edx 0x8
jne r-xdata
mov [ esi ] edi
push edi
push esi
push edi
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_4687be
mov ecx [ ebp + 0xc ]
call sub_468801
mov ebx eax
cmp ebx edi
jle r-xdata
test bl 0x2
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_409d46
mov [ esi ] al
test al al
je r-xdata
dec edx
dec edx
je r-xdata
fld [ esi ]
mov ecx [ ebp + 0xc ]
call sub_409cf8
fstp [ esi ]
xor eax eax
test al al
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_46776d
push eax
call sub_420fc0
add esp 0xc
jmp r-xdata
push ebx
push ecx
call sub_4687be
pop ecx
push eax
push esi
call sub_420fc0
add esp 0xc
push ebx
push ecx
mov ecx [ ebp + 0xc ]
call sub_4687be
pop ecx
push eax
push ebx
mov ebx edi
movsx edi [ esi ]
movzx edi [ esi ]
jmp r-xdata
test bl 0x2
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_409d46
mov [ esi ] ax
test al al
je r-xdata
sub edx 0x4
jne r-xdata
fld [ esi ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_409cf8
fstp [ esi ]
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
movsx edi [ esi ]
jmp r-xdata
movzx edi [ esi ]
jmp r-xdata
mov edi [ esi ]
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_409a20
mov [ esi ] edi
test bl 0x2
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_409d46
mov [ esi ] eax
test al al
je r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
fstp [ ebp - 0x10 ]
call sub_409a20
fld [ ebp - 0x10 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
jmp r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0xc ] 0x2
jmp r-xdata
mov edi [ esi ]
mov ebx [ esi + 0x4 ]
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x2
mov [ esi + 0x4 ] ebx
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_409d46
mov [ esi ] eax
mov [ esi + 0x4 ] edx
sub_466561
push ebp
mov ebp esp
sub esp 0x14
test [ ebp + 0xc ] 0x4
push ebx
push esi
push edi
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4077c7
cmp [ ebp + 0x20 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0xffffffff
jne r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_4562f8
mov ecx esi
test al al
je r-xdata
mov ebx [ ebp + 0x14 ]
sub ebx [ ebp + 0x18 ]
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push 0x2
push [ ebp + 0x10 ]
lea eax [ ebp + 0x20 ]
push eax
call sub_420fc0
add esp 0xc
push [ ebp + 0x20 ]
push 0x1
push [ ebp + 0x10 ]
lea eax [ ebp + 0x23 ]
push eax
call sub_420fc0
movsx ax [ ebp + 0x23 ]
add esp 0xc
movzx eax ax
push eax
jmp r-xdata
call sub_409997
mov eax [ esi + 0x8 ]
mov eax [ eax ]
movzx eax [ eax ]
call sub_409c9c
jmp r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4077c7
test [ ebp + 0xc ] 0x1
mov esi [ ebp + 0x8 ]
mov ecx esi
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_465b74
mov ecx [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_409b9c
movzx eax [ eax ]
mov [ ebp + 0x20 ] eax
lea eax [ ebp + 0x20 ]
push 0x2
mov al [ eax ]
mov [ ebp + 0x23 ] al
lea eax [ ebp + 0x23 ]
push 0x1
jmp r-xdata
push eax
lea ecx [ ebp - 0x10 ]
call sub_465b74
mov ecx [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_409b9c
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_407b52
test [ ebp + 0xc ] 0x1
je r-xdata
shr ebx 0x1
xor ecx ecx
push 0x2
pop edx
lea eax [ ebx + 0x1 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
lea esi [ ebx + ebx ]
mov edi eax
push esi
push [ ebp + 0x10 ]
push edi
call sub_420fc0
mov ecx [ ebp + 0x24 ]
add esp 0x10
xor eax eax
mov [ esi + edi ] ax
push edi
call sub_409bf8
push edi
call j_sub_422ed5#3
lea esi [ ebx + 0x1 ]
push esi
call sub_420f36
push ebx
push [ ebp + 0x10 ]
mov edi eax
push edi
call sub_420fc0
add esp 0x10
mov [ edi + ebx ] 0x0
mov edx esi
mov ecx edi
call sub_465543
mov ecx [ ebp + 0x24 ]
mov esi eax
push esi
call sub_409bf8
push esi
call j_sub_422ed5#3
push edi
call j_sub_422ed5#3
pop ecx
jmp r-xdata
shr ebx 0x1
call sub_409997
mov eax [ esi + 0x8 ]
cmp [ eax + 0x4 ] ebx
jge r-xdata
call sub_409997
mov eax [ esi + 0x8 ]
cmp [ eax + 0x4 ] ebx
jge r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405a64
push eax
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x20
pop ecx
jmp r-xdata
mov ecx esi
call sub_409997
push ebx
push 0x0
push [ esi + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4079ab
mov ecx [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_409b9c
lea eax [ ebx + ebx ]
push eax
push [ ebp - 0x10 ]
jmp r-xdata
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x4 ]
inc ebx
mov ecx esi
call sub_409997
push ebx
push 0x0
push [ esi + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4079ab
mov ecx [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_409b9c
mov ecx [ ebp - 0x10 ]
lea edx [ ebx + 0x1 ]
call sub_46592e
mov esi eax
push ebx
push esi
push [ ebp + 0x10 ]
call sub_420fc0
push esi
call j_sub_422ed5#3
add esp 0x10
jmp r-xdata
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x4 ]
inc ebx
push [ ebp + 0x10 ]
call sub_420fc0
add esp 0xc
jmp r-xdata
sub_4667b0
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi ecx
lea ecx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] edi
call sub_409399
test al al
jne r-xdata
test [ ebp + 0x8 ] 0x3
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
xor ebx ebx
inc ebx
or esi 0xffffffff
cmp [ eax + 0x8 ] ebx
jbe r-xdata
test [ ebp + 0x8 ] 0xc
push 0x2
pop edi
je r-xdata
xor ebx ebx
inc ebx
cmp [ eax + 0x8 ] ebx
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
mov edi [ edi + 0x8 ]
call sub_409a20
mov [ esi ] edi
xor edi edi
mov [ esi + 0xc ] 0x7
jmp r-xdata
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] ebx
lea ecx [ ebp + 0x14 ]
call sub_409a20
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov eax [ ebp + 0xc ]
or ebx 0xffffffff
mov esi [ eax + 0x8 ]
cmp esi edi
jbe r-xdata
push 0x2
jmp r-xdata
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x1c ]
xor edi edi
mov [ ebp + 0xc ] edi
mov [ ebp + 0x8 ] edi
push [ eax ]
mov [ ebp - 0x14 ] edi
call sub_409ac0
cmp [ ebp - 0x10 ] 0x4
je r-xdata
push esi
push [ ebp + 0x10 ]
lea eax [ ebp + 0x14 ]
mov ecx edi
push eax
call sub_4662ea
mov eax [ eax + 0x4 ]
push 0x29
mov eax [ eax ]
mov ecx eax
mov [ ebp + 0x8 ] eax
call sub_409dae
test al al
jne r-xdata
pop edi
jmp r-xdata
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_466223
mov esi [ ebp + 0x10 ]
mov ecx esi
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_409c9c
lea ecx [ ebp - 0x1c ]
lea esi [ eax - 0x1 ]
call sub_409a20
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1c ] esi
mov ecx [ ebp + 0x8 ]
call sub_409c9c
mov esi eax
dec esi
jns r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x8 ]
push ebx
push 0x1
push [ ebp + 0x10 ]
push [ eax + esi * 4 - 0x4 ]
lea eax [ ebp + 0x14 ]
push eax
call sub_466306
jmp r-xdata
mov eax [ eax + 0x4 ]
push 0x29
mov edi [ eax ]
mov ecx edi
call sub_409dae
test al al
jne r-xdata
call sub_409a20
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] 0x7
mov [ esi ] eax
call sub_409a20
mov [ esi ] edi
mov edi [ ebp + 0x8 ]
mov [ esi + 0xc ] ebx
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] ebx
jmp r-xdata
mov edi eax
mov eax [ ebp + 0xc ]
mov ecx edi
call sub_409c9c
mov ebx eax
dec ebx
jns r-xdata
lea ecx [ ebp - 0x1c ]
call sub_409a20
jmp r-xdata
and [ esi ] 0x0
push 0x3
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
sub_466994
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ ecx + 0xc ] eax
mov eax [ edx + 0x10 ]
mov [ ecx + 0x10 ] eax
mov eax [ edx + 0x14 ]
mov [ ecx + 0x14 ] eax
inc [ eax ]
mov eax ecx
pop ebp
retn 0x4
sub_4669c4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
lea ecx [ ebp + 0x10 ]
mov [ esi ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0xc ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x14 ] eax
inc [ eax ]
call sub_405a64
mov eax esi
pop esi
pop ebp
retn 0x18
sub_4669fe
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x20 ]
mov [ esi + 0x20 ] eax
test eax eax
je r-xdata
mov eax [ edi + 0x24 ]
mov [ esi + 0x24 ] eax
test eax eax
je r-xdata
inc [ eax + 0x4 ]
mov ecx [ edi + 0x8 ]
lea edx [ esi + 0x8 ]
xor ebx ebx
push ebx
call sub_466d0f
mov ecx [ edi + 0xc ]
lea edx [ esi + 0xc ]
push ebx
call sub_466d0f
mov ecx [ edi + 0x10 ]
lea edx [ esi + 0x10 ]
push ebx
call sub_466d0f
mov ecx [ edi + 0x14 ]
lea edx [ esi + 0x14 ]
push ebx
call sub_466d0f
mov ecx [ edi + 0x18 ]
lea edx [ esi + 0x18 ]
push ebx
call sub_466d0f
mov ecx [ edi + 0x1c ]
lea edx [ esi + 0x1c ]
push ebx
call sub_466d0f
add esp 0x18
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
inc [ eax + 0x4 ]
sub_466a83
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
xor eax eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x2 ] ax
mov eax [ ecx ]
test al 0x8
je r-xdata
test [ ecx ] 0x10
je r-xdata
or eax 0x6
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
mov [ ecx ] 0x10
sub_466ac8
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
xor edi edi
push 0xfa0
lea eax [ esi + 0x14 ]
mov [ esi + 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x8 ] edi
push eax
mov [ esi + 0xc ] edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov ecx [ ebp + 0x8 ]
lea edx [ esi + 0x2c ]
push edi
mov [ edx ] edi
mov [ esi + 0x30 ] edi
call sub_466d0f
lea eax [ esi + 0x34 ]
mov [ esp ] 0x1f4
push eax
call [ InterlockedExchange@IAT ]
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_466b1d
push esi
mov esi ecx
call sub_466cf3
lea ecx [ esi + 0x8 ]
call sub_466cde
lea ecx [ esi + 0x10 ]
call sub_466cde
lea ecx [ esi + 0x18 ]
call sub_466cde
and [ esi + 0x4 ] 0x0
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x24 ]
pop esi
test ecx ecx
je r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
retn
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_466b67
push edi
mov edi ecx
mov [ edi ] r--data
call sub_4672d9
push [ edi + 0x2c ]
call [ CloseHandle@IAT ]
push [ edi + 0x30 ]
call [ CloseHandle@IAT ]
push [ edi + 0x8 ]
call j_sub_422ed5#3
pop ecx
lea eax [ edi + 0x14 ]
push eax
call [ DeleteCriticalSection@IAT ]
mov [ edi ] r--data
pop edi
retn
sub_466ba2
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422ed5#3
pop ecx
sub_466bc2
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_466b67
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422ed5#3
pop ecx
sub_466be1
push esi
push 0x38
mov esi ecx
call sub_420f36
pop ecx
test eax eax
je r-xdata
xor eax eax
pop esi
retn
push esi
mov ecx eax
call sub_466ac8
pop esi
retn
sub_466bfe
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x14 ]
push esi
call [ EnterCriticalSection@IAT ]
cmp [ ebp + 0xc ] 0x0
mov ebx [ edi + 0xc ]
je r-xdata
push esi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x8
push [ edi + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_46776d
push [ edi + 0xc ]
mov ecx [ ebp + 0x8 ]
push [ edi + 0x8 ]
call sub_4687be
push eax
call sub_420fc0
add esp 0xc
sub_466c4b
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x14 ]
push esi
call [ EnterCriticalSection@IAT ]
lea eax [ edi + 0x34 ]
push [ eax ]
push eax
call [ InterlockedExchange@IAT ]
cmp eax 0x1f6
jne r-xdata
mov bl 0x1
xor ebx ebx
cmp [ edi + 0xc ] ebx
je r-xdata
push esi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
mov al bl
pop ebx
retn
sub_466c83
push ebp
mov ebp esp
push ebx
mov ebx ecx
push esi
push edi
lea esi [ ebx + 0x14 ]
push esi
call [ EnterCriticalSection@IAT ]
mov edi [ ebx + 0xc ]
push [ ebx + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_46776d
push [ ebx + 0xc ]
mov ecx [ ebp + 0x8 ]
push [ ebx + 0x8 ]
call sub_4687be
push eax
call sub_420fc0
push [ ebx + 0xc ]
push 0x0
push [ ebx + 0x8 ]
call sub_422f60
add esp 0x18
mov [ ebx + 0xc ] 0x0
push esi
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_466d0f
push ebp
mov ebp esp
push edi
mov edi ecx
test edi edi
jne r-xdata
push 0x2
push [ ebp + 0x8 ]
push 0x0
push edx
call [ GetCurrentProcess@IAT ]
push eax
push edi
call [ GetCurrentProcess@IAT ]
push eax
call [ DuplicateHandle@IAT ]
and [ edx ] ecx
jmp r-xdata
pop edi
pop ebp
retn
sub_466d49
push ebx
push esi
push edi
mov edi ecx
xor esi esi
xor bl bl
mov ecx [ edi + 0x20 ]
test ecx ecx
je r-xdata
test [ edi ] 0x8
je r-xdata
call sub_466c4b
mov bl al
test bl bl
je r-xdata
mov ecx [ edi + 0x24 ]
test ecx ecx
je r-xdata
test bl bl
je r-xdata
lea ecx [ edi + 0x8 ]
call sub_466cde
mov ecx [ edi + 0x20 ]
dec [ ecx + 0x4 ]
jne r-xdata
push 0x2
pop esi
jmp r-xdata
mov ecx edi
call sub_4670d8
test al al
je r-xdata
call sub_466c4b
test al al
je r-xdata
lea ecx [ edi + 0x10 ]
call sub_466cde
jmp r-xdata
or esi 0x8
jmp r-xdata
and [ edi + 0x20 ] esi
mov eax [ ecx ]
push 0x1
call [ eax ]
test esi esi
jne r-xdata
or esi 0x1
lea ecx [ edi + 0x10 ]
call sub_466cde
mov ecx [ edi + 0x24 ]
dec [ ecx + 0x4 ]
jne r-xdata
or esi 0x4
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
retn
and [ edi + 0x4 ] esi
and [ edi + 0x24 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_466de4
push ebp
mov ebp esp
test [ ecx ] 0x8
push ebx
push esi
push edi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x8 ]
xor ecx ecx
mov edi [ ebp + 0xc ]
mov eax [ ebx ]
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
cmp [ esi ] ecx
je r-xdata
cmp [ edi ] ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov ecx ebx
call sub_466cde
mov ecx edi
call sub_466cde
mov ecx [ esi ]
mov edx ebx
push 0x0
call sub_466d0f
mov eax [ ebp + 0x14 ]
mov edx edi
push 0x0
mov ecx [ eax ]
call sub_466d0f
mov eax [ esi ]
pop ecx
pop ecx
jmp r-xdata
sub_466e45
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ecx ]
push esi
push edi
xor edi edi
mov [ ebp - 0xc ] 0xc
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
test al 0x10
je r-xdata
test [ ebp + 0x8 ] eax
je r-xdata
push [ ebp + 0xc ]
call [ GetStdHandle@IAT ]
mov esi [ ebp + 0x10 ]
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp + 0xc ]
call [ GetStdHandle@IAT ]
mov esi [ ebp + 0x10 ]
mov [ esi ] eax
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ esi ]
test eax eax
jne r-xdata
push 0x1
mov edx esi
mov ecx eax
call sub_466d0f
pop ecx
jmp r-xdata
mov [ esi ] edi
push edi
push 0x80
push 0x3
lea eax [ ebp - 0xc ]
push eax
push 0x2
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ esi ] eax
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
push edi
lea eax [ ebp - 0xc ]
push eax
push esi
push [ ebp + 0x14 ]
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi ]
lea edx [ ebp + 0x10 ]
push 0x1
call sub_466d0f
pop ecx
mov ecx esi
call sub_466cde
mov eax [ ebp + 0x10 ]
mov [ esi ] eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
sub_466f13
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ecx ]
push esi
push edi
xor edi edi
mov [ ebp - 0xc ] 0xc
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
test al 0x10
je r-xdata
test al 0x1
je r-xdata
push 0xfffffff6
call [ GetStdHandle@IAT ]
mov esi [ ebp + 0x10 ]
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
push 0xfffffff6
call [ GetStdHandle@IAT ]
mov esi [ ebp + 0x10 ]
mov [ esi ] eax
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ esi ]
test eax eax
jne r-xdata
push 0x1
mov edx esi
mov ecx eax
call sub_466d0f
pop ecx
jmp r-xdata
mov [ esi ] edi
push edi
push 0x80
push 0x3
lea eax [ ebp - 0xc ]
push eax
push 0x1
push 0x80000000
push r--data
call [ CreateFileW@IAT ]
mov [ esi ] eax
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
push edi
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x14 ]
push esi
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi ]
lea edx [ ebp + 0x10 ]
push 0x1
call sub_466d0f
pop ecx
mov ecx esi
call sub_466cde
mov eax [ ebp + 0x10 ]
mov [ esi ] eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
sub_466fde
push ebp
mov ebp esp
test [ ecx ] 0x8
je r-xdata
mov ecx [ ecx + 0x24 ]
test ecx ecx
je r-xdata
pop ebp
jmp sub_4670e6
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop ebp
jmp sub_466bfe
xor eax eax
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
push r--data
call sub_409bf8
sub_467021
push ebp
mov ebp esp
test [ ecx ] 0x8
je r-xdata
mov ecx [ ecx + 0x24 ]
test ecx ecx
je r-xdata
pop ebp
jmp sub_46711d
mov ecx [ ebp + 0x8 ]
push r--data
call sub_409bf8
xor eax eax
pop ebp
retn 0x4
pop ebp
jmp sub_466c83
sub_46704f
push ebx
push esi
mov esi ecx
push edi
lea eax [ esi + 0x8 ]
push eax
lea eax [ esi + 0xc ]
push eax
lea edi [ esi + 0x10 ]
push edi
lea ebx [ esi + 0x14 ]
push ebx
call sub_466de4
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push ebx
push 0xfffffff4
push 0x4
mov ecx esi
call sub_466e45
sub_46707e
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
call sub_4670d8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push esi
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
lea esi [ ecx + 0x18 ]
push [ ebp + 0x8 ]
push [ esi ]
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
pop esi
mov ecx esi
call sub_466cde
sub_4670e6
push ebp
mov ebp esp
mov ecx [ ecx + 0x20 ]
test ecx ecx
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop ebp
jmp sub_466bfe
xor eax eax
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
push r--data
call sub_409bf8
sub_46711d
push ebp
mov ebp esp
mov ecx [ ecx + 0x20 ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_409bf8
xor eax eax
pop ebp
retn 0x4
pop ebp
jmp sub_466c83
sub_467140
push ebx
push esi
mov esi ecx
push edi
lea eax [ esi + 0x10 ]
push eax
lea eax [ esi + 0x14 ]
push eax
lea edi [ esi + 0x8 ]
push edi
lea ebx [ esi + 0xc ]
push ebx
call sub_466de4
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push ebx
push 0xfffffff5
push 0x2
mov ecx esi
call sub_466e45
sub_46716f
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov ebx ecx
push edi
push 0x1f5
lea esi [ ebx + 0x34 ]
push esi
mov [ ebp - 0xc ] esi
call [ InterlockedExchange@IAT ]
push 0xffff
call sub_420f36
mov edi eax
mov eax 0xffff
push eax
mov [ ebp - 0x8 ] edi
mov [ ebx + 0x10 ] eax
call sub_420f36
pop ecx
pop ecx
push 0x0
mov [ ebx + 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0xffff
push edi
push [ ebx + 0x2c ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push edi
call j_sub_422ed5#3
pop ecx
mov edi 0x1f6
push edi
push esi
call [ InterlockedExchange@IAT ]
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov esi [ ebp - 0xc ]
lea esi [ ebx + 0x14 ]
push esi
call [ EnterCriticalSection@IAT ]
mov eax [ ebx + 0xc ]
mov ecx [ ebp - 0x4 ]
add eax ecx
cmp [ ebx + 0x10 ] eax
jae r-xdata
mov eax [ ebx + 0xc ]
add eax [ ebx + 0x8 ]
push ecx
push edi
push eax
call sub_420fc0
mov eax [ ebp - 0x4 ]
add esp 0xc
add [ ebx + 0xc ] eax
push esi
call [ LeaveCriticalSection@IAT ]
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0xffff
push edi
push [ ebx + 0x2c ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0xc ]
add eax [ ebp - 0x4 ]
mov edi [ ebx + 0x8 ]
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x10 ]
jns r-xdata
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fmul [ r--data ]
call sub_43b536
push eax
mov [ ebx + 0x10 ] eax
call sub_420f36
push [ ebx + 0xc ]
mov [ ebx + 0x8 ] eax
push edi
push [ ebx + 0x8 ]
call sub_420fc0
push edi
call j_sub_422ed5#3
mov ecx [ ebp - 0x4 ]
add esp 0x14
mov edi [ ebp - 0x8 ]
fadd [ r--data ]
sub_4672b0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
xor ecx ecx
cmp [ esi + 0x30 ] ecx
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x4 ]
push eax
push ecx
push esi
push sub_467296
push ecx
push ecx
call [ CreateThread@IAT ]
mov [ esi + 0x30 ] eax
sub_4672d9
push esi
mov esi ecx
push edi
lea edi [ esi + 0x30 ]
cmp [ edi ] 0x0
je r-xdata
pop edi
pop esi
retn
push ebx
lea ebx [ esi + 0x34 ]
push [ ebx ]
push ebx
call [ InterlockedExchange@IAT ]
cmp eax 0x1f6
je r-xdata
pop ebx
add esi 0x14
push esi
call [ EnterCriticalSection@IAT ]
push 0x1f6
push [ edi ]
call [ TerminateThread@IAT ]
push 0x3e8
push [ edi ]
call [ WaitForSingleObject@IAT ]
mov ecx edi
call sub_466cde
push 0x1f6
push ebx
call [ InterlockedExchange@IAT ]
push esi
call [ LeaveCriticalSection@IAT ]
sub_46733b
push esi
mov esi ecx
cmp [ esi + 0x20 ] 0x0
jne r-xdata
cmp [ esi + 0x24 ] 0x0
jne r-xdata
test [ esi ] 0x2
je r-xdata
pop esi
retn
test [ esi ] 0x4
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
call sub_466be1
mov ecx eax
mov [ esi + 0x20 ] eax
call sub_4672b0
test [ esi ] 0x8
jne r-xdata
call sub_466be1
mov [ esi + 0x24 ] eax
mov ecx eax
pop esi
jmp sub_4672b0
sub_467388
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_405f8a
test al al
je r-xdata
mov ax [ edi + 0x8 ]
mov ecx esi
mov [ esi + 0x8 ] ax
mov ax [ edi + 0xa ]
mov [ esi + 0xa ] ax
call sub_405f8a
test al al
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
movzx eax [ esi + 0x8 ]
cmp ax 0x10
jne r-xdata
push 0x10
call sub_420f36
mov edx eax
pop ecx
test edx edx
je r-xdata
push ecx
call sub_407b3d
cmp ax 0x20
jne r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
xor edx edx
mov eax [ edi ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
jmp r-xdata
mov eax [ edi ]
mov [ esi ] eax
fld [ edi ]
fstp [ esi ]
jmp r-xdata
mov [ esi ] edx
jmp r-xdata
sub_467428
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_405f8a
test al al
je r-xdata
push 0x10
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_407f41
jmp r-xdata
push ecx
call sub_407b3d
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4674a7
push ebp
mov ebp esp
push ebx
push [ ebp + 0x8 ]
mov ebx ecx
call sub_408af5
test eax eax
je r-xdata
push esi
push edi
mov edi [ ebp + 0x10 ]
push 0x20
and edi 0xff00
call sub_420f36
mov esi eax
pop ecx
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ eax + 0x14 ] ecx
jmp r-xdata
xor esi esi
mov ecx esi
call sub_4077c7
jmp r-xdata
pop ebx
pop ebp
retn 0xc
push [ ebp + 0x8 ]
mov ecx esi
call sub_4081a7
mov eax [ ebp + 0xc ]
or edi 0x1
and [ esi + 0x1c ] 0x0
and [ esi + 0x18 ] 0x0
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] eax
push [ ebx ]
push esi
call sub_4087c0
pop edi
mov [ ebx ] eax
pop esi
sub_467514
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
inc eax
push eax
mov [ esi + 0x8 ] eax
call sub_420f36
pop ecx
mov [ esi ] eax
mov ecx esi
mov [ eax ] 0x0
call sub_456223
mov eax esi
pop esi
pop ebp
retn 0x4
sub_46753f
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_409a20
push 0x10
mov [ esi + 0xc ] 0x4
call sub_420f36
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push [ ecx ]
mov ecx eax
call sub_407f41
jmp r-xdata
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
sub_467577
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
call sub_409458
mov esi [ edi ]
mov ecx esi
call sub_4092c0
mov eax [ esi ]
xor esi esi
mov ebx [ ebp + 0x8 ]
mov [ eax + 0x210 ] esi
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push ebx
push 0x1
push [ edi ]
call sub_4091b0
add esp 0xc
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
push 0x1
mov eax [ eax + 0x4 ]
push [ eax + esi * 4 ]
push [ edi ]
call sub_409040
add esp 0x10
inc esi
cmp esi ebx
jb r-xdata
sub_4675d6
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_409a20
push 0x18
mov [ esi + 0xc ] 0xa
call sub_420f36
pop ecx
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_466994
jmp r-xdata
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
sub_46760b
push ebp
mov ebp esp
and esp 0xfffffff8
push esi
push edi
mov esi ecx
call sub_409a20
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
push edi
mov ecx esi
call sub_467dc3
cmp al 0x1
je r-xdata
push edi
mov ecx esi
call sub_467a39
cmp al 0x1
je r-xdata
push 0x10
mov [ esi + 0xc ] 0x8
call sub_420f36
pop ecx
push eax
mov [ esi ] eax
call [ VariantInit@IAT ]
push edi
push [ esi ]
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
push [ esi ]
call [ VariantClear@IAT ]
push [ esi ]
call j_sub_422ed5#3
and [ esi ] 0x0
pop ecx
mov ecx esi
call sub_409a20
sub_467691
push esi
mov esi ecx
movzx eax [ esi ]
cmp ax [ edx ]
je r-xdata
push ebx
xor ebx ebx
inc ebx
test ax ax
je r-xdata
xor al al
pop esi
retn
mov al bl
cmp ax bx
je r-xdata
test eax 0x6000
jne r-xdata
mov eax [ esi + 0x8 ]
sub eax [ edx + 0x8 ]
cmp eax 0xe
jne r-xdata
pop ebx
pop esi
retn
add eax 0xfffffffe
push 0x4
pop ecx
cmp eax 0x22
ja r-xdata
push 0x10
push edx
push esi
jmp r-xdata
push ecx
lea eax [ edx + 0x8 ]
push eax
lea eax [ esi + 0x8 ]
push eax
movzx eax [ eax + lookup_table_46771d ]
jmp [ eax * 4 + jump_table_467709 ]
call sub_421604
add esp 0xc
jmp r-xdata
neg eax
sbb eax eax
inc eax
jmp r-xdata
mov ecx ebx
jmp r-xdata
push 0x2
jmp r-xdata
push 0x8
pop ecx
sub_46776d
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_409a20
push 0x8
call sub_420f36
mov edx [ ebp + 0x8 ]
mov [ esi ] eax
pop ecx
mov [ eax ] edx
test edx edx
je r-xdata
push 0x1
call sub_420f36
pop ecx
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ eax ] 0x0
mov eax [ esi ]
push [ eax ]
call sub_420f36
mov ecx [ esi ]
mov [ ecx + 0x4 ] eax
mov eax [ esi ]
push [ eax ]
push 0x0
push [ eax + 0x4 ]
call sub_422f60
add esp 0x10
jmp r-xdata
mov eax [ esi ]
mov [ esi + 0xc ] 0xb
pop esi
mov eax [ eax + 0x4 ]
pop ebp
retn 0x4
sub_4677d2
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx ecx
call sub_409a20
push 0x14
call sub_420f36
mov esi eax
xor edi edi
pop ecx
test esi esi
je r-xdata
mov esi edi
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
jmp r-xdata
mov [ ebx + 0xc ] 0xc
mov edi esi
mov [ ebx ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x10 ]
sub esp 0x10
mov ecx esp
push [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x1c ]
mov [ ecx + 0xc ] eax
mov ecx esi
inc [ eax ]
call sub_465c21
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
test eax eax
je r-xdata
lea ecx [ ebp + 0x10 ]
call sub_405a64
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x18
push ecx
mov ecx esi
call sub_4571d0
jmp r-xdata
sub_46785c
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
cmp eax 0xb
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
dec eax
je r-xdata
mov eax [ esi ]
dec eax
je r-xdata
mov eax [ esi ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x4 ]
push 0x8
mov [ ebp - 0xc ] eax
jmp r-xdata
dec eax
je r-xdata
pop ebx
fld [ esi ]
fstp [ ebp - 0x10 ]
push 0x8
jmp r-xdata
dec eax
je r-xdata
mov edx [ esi + 0x8 ]
mov [ ebp - 0x4 ] edx
call sub_4095df
test al al
je r-xdata
sub eax 0x3
je r-xdata
mov ebx [ edx + 0x4 ]
test ebx ebx
jne r-xdata
mov ebx [ edx + 0x4 ]
sub ebx 0x2
sar ebx 0x1
push ebx
call sub_420f36
mov edi eax
mov eax [ ebp - 0x4 ]
pop ecx
mov edx edi
mov ecx [ eax ]
lea ecx [ ecx + 0x4 ]
call sub_465824
test al al
jne r-xdata
dec eax
dec eax
je r-xdata
push ebx
call sub_420f36
pop ecx
push ebx
lea ecx [ ebp - 0x20 ]
mov edi eax
call sub_467514
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call sub_405b75
push ebx
push [ ebp - 0x20 ]
push edi
call sub_420fc0
add esp 0xc
lea ecx [ ebp - 0x20 ]
call sub_405a64
jmp r-xdata
push 0x1
call sub_420f36
mov edi eax
pop ecx
mov [ edi ] bl
jmp r-xdata
push 0x8
call sub_420f36
mov [ esi ] eax
pop ecx
mov [ eax ] ebx
mov ecx [ esi ]
mov [ ecx + 0x4 ] edi
mov ecx esi
call sub_40997f
mov [ esi + 0xc ] 0xb
push edi
call j_sub_422ed5#3
mov edx [ ebp - 0x4 ]
pop ecx
mov al [ esi ]
xor ebx ebx
inc ebx
mov [ ebp - 0x10 ] al
jmp r-xdata
dec eax
je r-xdata
push ebx
call sub_420f36
mov edi eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
push edi
call sub_420fc0
add esp 0x10
mov eax [ esi ]
mov eax [ eax + 0x4 ]
jmp r-xdata
call sub_409a20
push 0x1
xor ebx ebx
call sub_420f36
mov edi eax
pop ecx
mov [ edi ] bl
jmp r-xdata
push 0x4
mov [ ebp - 0x10 ] eax
sub_4679c3
push ebp
mov ebp esp
cmp [ ecx + 0xc ] 0xe
jne r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_407f41
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx ]
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
inc [ ecx ]
jmp r-xdata
pop ebp
retn 0x4
sub_4679ff
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
call sub_409a20
push 0x14
mov [ edi + 0xc ] 0xd
call sub_420f36
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_4077c7
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edi ] esi
pop edi
mov [ esi + 0x10 ] eax
pop esi
pop ebp
retn 0x4
sub_467a39
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov [ ebp - 0x18 ] ebx
movzx eax [ edi ]
test eax 0x2000
jne r-xdata
test eax 0x4000
je r-xdata
xor al al
jmp r-xdata
mov edi [ edi + 0x8 ]
mov eax [ edi + 0x8 ]
mov edi [ eax ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_409458
mov esi [ ebx ]
mov ecx esi
call sub_4092c0
mov eax [ esi ]
and [ eax + 0x210 ] 0x0
movsx eax [ edi ]
mov [ ebp + 0x8 ] eax
test eax eax
jle r-xdata
mov [ ebp - 0xc ] edi
test edi edi
je r-xdata
push 0x0
push [ ebx ]
call sub_4091b0
mov esi [ ebx ]
pop ecx
pop ecx
push 0x2
pop eax
push eax
mov ecx esi
mov [ ebp - 0x10 ] eax
call sub_4564a9
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
mov [ ebp - 0x14 ] ecx
movzx ecx [ edi + 0x2 ]
mov eax ecx
and eax 0xf00
cmp eax 0x100
je r-xdata
lea esi [ edi + 0x10 ]
mov edi eax
lea eax [ ebp - 0x24 ]
push eax
push edi
call [ SafeArrayAccessData@IAT ]
xor ebx ebx
inc ebx
test eax eax
js r-xdata
cmp eax 0x200
je r-xdata
push [ esi ]
mov ecx [ ebx ]
call sub_40928c
lea esi [ esi + 0x8 ]
dec edi
jne r-xdata
mov edi [ ebp - 0xc ]
mov al bl
and [ ebp - 0x18 ] 0x0
test esi esi
jle r-xdata
mov ecx ebx
call sub_409a20
jmp r-xdata
cmp eax 0x400
je r-xdata
push edi
call [ SafeArrayUnaccessData@IAT ]
mov edi [ ebp - 0x18 ]
lea eax [ ebp - 0x20 ]
push eax
push edi
call [ SafeArrayAccessData@IAT ]
xor ebx ebx
inc ebx
test eax eax
js r-xdata
cmp eax 0x800
je r-xdata
xor eax eax
and [ eax ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] ebx
jmp r-xdata
and [ ebp - 0x18 ] 0x0
test esi esi
jle r-xdata
lea eax [ ebp - 0x1c ]
push eax
push edi
call [ SafeArrayAccessData@IAT ]
xor ebx ebx
inc ebx
test eax eax
js r-xdata
test cl cl
jns r-xdata
push 0x10
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov edi [ ebp - 0xc ]
mov ecx [ ebp - 0x14 ]
push 0x8
mov [ ecx + edi * 4 ] eax
pop eax
mov [ ebp - 0x34 ] ax
mov eax [ ebp - 0x24 ]
mov eax [ eax + edi * 4 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
mov ecx [ ecx + edi * 4 ]
push eax
call sub_46760b
inc edi
cmp edi esi
jl r-xdata
mov edi [ ebp - 0x18 ]
and [ ebp - 0x10 ] 0x0
test esi esi
jle r-xdata
lea eax [ ebp + 0x8 ]
push eax
push edi
call [ SafeArrayGetVartype@IAT ]
mov cx [ ebp + 0x8 ]
xor ebx ebx
movzx eax cx
inc ebx
add eax 0xfffffffe
cmp eax 0x15
ja r-xdata
xor eax eax
and [ eax ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] ebx
jmp r-xdata
and [ ebp - 0x18 ] 0x0
mov edi [ ebp - 0x10 ]
movzx eax cx
test eax 0x4000
je r-xdata
movzx eax [ eax + lookup_table_467dad ]
jmp [ eax * 4 + jump_table_467d95 ]
push 0x10
call sub_420f36
pop ecx
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x14 ]
push 0x9
mov [ ecx + edi * 4 ] eax
pop eax
mov [ ebp - 0x34 ] ax
mov eax [ ebp - 0x20 ]
lea eax [ eax + edi * 4 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
mov ecx [ ecx + edi * 4 ]
push eax
call sub_46760b
inc edi
cmp edi esi
jl r-xdata
xor eax eax
and [ eax ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] ebx
jmp r-xdata
mov ebx [ ebp - 0x18 ]
mov [ ebp - 0x10 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push edi
call [ SafeArrayAccessData@IAT ]
test eax eax
js r-xdata
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov [ ebp - 0x10 ] 0x8
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push edi
call [ SafeArrayAccessData@IAT ]
test eax eax
js r-xdata
push 0x10
call sub_420f36
pop ecx
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov [ edx + edi * 4 ] eax
mov eax 0x400c
mov [ ebp - 0x34 ] ax
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
mov ecx [ edx + edi * 4 ]
push eax
call sub_46760b
add [ ebp - 0x18 ] 0x10
inc edi
cmp edi esi
jl r-xdata
and [ ebp - 0x18 ] 0x0
test esi esi
jle r-xdata
mov ecx [ ebp - 0x18 ]
push esi
push [ ebp - 0x8 ]
push esi
call sub_46776d
push eax
call sub_420fc0
add esp 0xc
push edi
call [ SafeArrayUnaccessData@IAT ]
mov al 0x1
jmp r-xdata
mov edi [ ebp - 0x10 ]
xor eax eax
and [ eax ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] ebx
jmp r-xdata
mov eax edx
or ax cx
mov [ ebp - 0x34 ] ax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x2c ] eax
push edi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x34 ] cx
push eax
call sub_420fc0
add esp 0xc
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov [ edx + ecx * 4 ] eax
mov edx 0x4000
mov cx [ ebp + 0x8 ]
movzx eax cx
test edx eax
je r-xdata
push 0x10
call sub_420f36
pop ecx
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x18 ]
mov ecx [ ecx + eax * 4 ]
call sub_46760b
mov eax [ ebp - 0x18 ]
add [ ebp - 0x8 ] edi
inc eax
mov [ ebp - 0x18 ] eax
cmp eax esi
jl r-xdata
sub_467dc3
push ebp
mov ebp esp
sub esp 0xb0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
movzx eax [ edi ]
cmp eax 0x24
jg r-xdata
sub eax 0x4002
cmp eax 0x15
ja r-xdata
je r-xdata
xor al al
jmp [ eax * 4 + jump_table_4682d3 ]
lea eax [ ebp - 0x1c ]
push eax
call [ VariantInit@IAT ]
mov eax [ edi + 0xc ]
lea edx [ ebp - 0x1c ]
xor esi esi
push esi
push edx
push esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] esi
mov ecx [ eax ]
push esi
push eax
call [ ecx + 0x2c ]
mov eax [ ebp - 0x1c ]
test eax 0x8000
je r-xdata
cmp eax 0x17
ja r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov esi [ edi + 0x8 ]
test esi esi
je r-xdata
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
xor esi esi
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ VariantClear@IAT ]
push 0xc
and eax 0xfff
pop ecx
sub eax ecx
je r-xdata
jmp [ eax * 4 + jump_table_468273 ]
mov al 0x1
jmp r-xdata
push 0x10
mov [ ebx + 0xc ] 0x8
call sub_420f36
pop ecx
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
mov eax [ ebx ]
push 0x9
pop ecx
mov [ eax ] cx
mov eax [ edi + 0x8 ]
mov ecx [ ebx ]
mov eax [ eax ]
mov [ ecx + 0x8 ] eax
mov eax [ ebx ]
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
movsx esi [ eax ]
jmp r-xdata
movzx esi [ eax ]
jmp r-xdata
movsx esi [ eax ]
jmp r-xdata
movzx esi [ eax ]
jmp r-xdata
mov esi [ esi ]
jmp r-xdata
mov esi [ edi ]
mov edi [ edi + 0x4 ]
jmp r-xdata
fld [ eax ]
jmp r-xdata
fld [ eax ]
jmp r-xdata
push 0x10
jmp r-xdata
cmp [ eax ] esi
je r-xdata
cmp [ eax ] 0x0
jmp r-xdata
push [ edi + 0x8 ]
call sub_46760b
jmp r-xdata
push 0x14
mov [ ebx + 0xc ] ecx
call sub_420f36
pop ecx
test eax eax
je r-xdata
dec eax
je r-xdata
push 0x10
mov [ ebx + 0xc ] 0x8
call sub_420f36
pop ecx
push eax
mov [ ebx ] eax
call [ VariantInit@IAT ]
push edi
push [ ebx ]
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
movsx esi [ edi + 0x8 ]
movzx esi [ edi + 0x8 ]
jmp r-xdata
movsx esi [ edi + 0x8 ]
jmp r-xdata
movzx esi [ edi + 0x8 ]
jmp r-xdata
mov esi [ edi + 0x8 ]
jmp r-xdata
mov esi [ edi + 0x8 ]
mov edi [ edi + 0xc ]
fld [ edi + 0x8 ]
fld [ edi + 0x8 ]
jmp r-xdata
fild [ edi + 0x8 ]
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
fdiv [ r--data ]
jmp r-xdata
xor esi esi
push 0x10
cmp [ edi + 0x8 ] esi
je r-xdata
cmp [ edi + 0x8 ] 0x0
fld [ edi + 0x8 ]
lea eax [ ebp - 0x2c ]
push eax
push ecx
push ecx
fstp [ esp ]
call [ VariantTimeToSystemTime@IAT ]
movzx eax [ ebp - 0x20 ]
push eax
movzx eax [ ebp - 0x22 ]
push eax
movzx eax [ ebp - 0x24 ]
push eax
movzx eax [ ebp - 0x26 ]
push eax
movzx eax [ ebp - 0x2a ]
push eax
movzx eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0xac ]
push r--data
push eax
call sub_423818
add esp 0x20
lea eax [ ebp - 0xac ]
mov ecx ebx
push eax
mov esi edi
lea eax [ ebp - 0x34 ]
lea edi [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x44 ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call [ VarR8FromDec@IAT ]
fld [ ebp - 0x34 ]
mov ecx ebx
jmp r-xdata
push r--data
jmp r-xdata
sub esp 0x10
mov ecx esp
push r--data
call sub_407f41
push 0x0
push 0x2a
lea ecx [ ebp - 0x8c ]
call sub_4669c4
lea eax [ ebp - 0x8c ]
mov ecx ebx
push eax
call sub_4675d6
lea ecx [ ebp - 0x84 ]
sub esp 0x10
cmp [ edi + 0x8 ] 0x80020004
mov ecx esp
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx ]
push ecx
call [ eax + 0x4 ]
jmp r-xdata
call sub_409a20
mov [ ebx + 0xc ] 0x1
mov [ ebx ] esi
jmp r-xdata
call sub_409a20
mov [ ebx + 0xc ] 0x2
mov [ ebx ] esi
mov [ ebx + 0x4 ] edi
jmp r-xdata
fstp [ ebp - 0xc ]
call sub_409a20
fld [ ebp - 0xc ]
fstp [ ebx ]
mov [ ebx + 0xc ] 0x3
jmp r-xdata
call sub_420f36
pop ecx
test eax eax
je r-xdata
push 0x10
call sub_420f36
pop ecx
test eax eax
je r-xdata
setne [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_409863
jmp r-xdata
mov [ ebx ] esi
push [ ebp - 0x14 ]
mov ecx eax
call sub_465a7c
push 0x14
mov [ ebx + 0xc ] 0xd
call sub_420f36
mov edi eax
pop ecx
test edi edi
je r-xdata
dec eax
je r-xdata
push [ ebx ]
call [ VariantClear@IAT ]
push [ ebx ]
call j_sub_422ed5#3
and [ ebx ] 0x0
pop ecx
call sub_420f36
pop ecx
test eax eax
je r-xdata
call sub_409bf8
jmp r-xdata
push r--data
call sub_407f41
push 0x0
push 0x2a
lea ecx [ ebp - 0x74 ]
call sub_4669c4
lea eax [ ebp - 0x74 ]
mov ecx ebx
push eax
call sub_4675d6
lea ecx [ ebp - 0x6c ]
jmp r-xdata
push r--data
call sub_407f41
push 0x0
push 0x29
lea ecx [ ebp - 0x5c ]
call sub_4669c4
lea eax [ ebp - 0x5c ]
mov ecx ebx
push eax
call sub_4675d6
lea ecx [ ebp - 0x54 ]
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov [ ebx + 0xc ] 0x4
jmp r-xdata
mov ecx eax
call sub_4077c7
mov ecx [ edi + 0x8 ]
push [ ecx ]
jmp r-xdata
mov edi esi
mov ecx edi
call sub_4077c7
jmp r-xdata
push 0x14
mov [ ebx + 0xc ] 0xe
call sub_420f36
mov edi eax
pop ecx
test edi edi
je r-xdata
push 0x18
mov [ ebx + 0xc ] 0xf
call sub_420f36
pop ecx
test eax eax
je r-xdata
push [ edi + 0x8 ]
call sub_405a64
jmp r-xdata
mov ecx eax
call sub_407f41
jmp r-xdata
push 0x1a
pop eax
mov [ ebp - 0x1c ] ax
lea eax [ ebp - 0x1c ]
push eax
call [ VariantClear@IAT ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebx ] edi
mov [ edi + 0x10 ] eax
jmp r-xdata
mov edi esi
mov ecx edi
call sub_4077c7
jmp r-xdata
push [ ebp - 0x14 ]
mov ecx eax
call sub_4618a5
jmp r-xdata
mov esi eax
push [ ebp - 0x14 ]
mov ecx edi
mov [ ebx ] edi
call sub_407d2c
push [ ebp - 0x14 ]
call [ SysFreeString@IAT ]
jmp r-xdata
mov esi eax
sub_46832b
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
mov edi ecx
cmp [ edi + 0xc ] 0x8
je r-xdata
xor al al
mov esi [ ebp + 0x8 ]
cmp [ esi + 0xc ] 0x8
je r-xdata
push 0x2a
pop ebx
push ebx
call sub_409dae
test al al
jne r-xdata
push ebx
mov ecx edi
call sub_409dae
test al al
je r-xdata
push ebx
mov ecx esi
call sub_409dae
test al al
jne r-xdata
push ebx
mov ecx esi
call sub_409dae
test al al
je r-xdata
push 0xe
pop eax
cmp [ edi + 0xc ] eax
je r-xdata
mov al 0x1
jmp r-xdata
cmp [ esi + 0xc ] eax
jne r-xdata
cmp [ esi + 0xc ] eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x24 ]
mov ecx esi
push eax
call sub_4679c3
mov esi eax
mov ecx edi
lea eax [ ebp - 0x14 ]
push eax
call sub_4679c3
mov edx esi
mov ecx eax
call sub_415ee9
lea ecx [ ebp - 0x14 ]
mov bl al
call sub_405a64
lea ecx [ ebp - 0x24 ]
call sub_405a64
mov al bl
jmp r-xdata
cmp [ edi + 0xc ] eax
jne r-xdata
mov ecx esi
call sub_409997
mov esi [ esi + 0x8 ]
mov ecx edi
call sub_409997
mov ecx [ edi + 0x8 ]
mov edx esi
call sub_415ee9
jmp r-xdata
sub_4683f8
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
call sub_409a20
push 0x14
mov [ edi + 0xc ] 0xe
call sub_420f36
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_4077c7
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx esi
mov [ edi ] esi
call sub_4081a7
pop edi
pop esi
pop ebp
retn 0x4
sub_468436
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
lea ecx [ ebp + 0xc ]
and [ ebx ] 0x0
and [ ebx + 0x8 ] 0x0
mov [ ebx + 0xc ] 0x1
call sub_468704
mov ecx edi
mov esi eax
call sub_468704
mov edx 0x40060
mov [ ebp + 0x8 ] eax
test edx esi
je r-xdata
mov ecx 0x701f8
test edx eax
je r-xdata
mov ecx ebx
call sub_409a20
fld1
mov [ ebx + 0xc ] 0x3
jmp r-xdata
mov edx 0x204
test edx esi
je r-xdata
test ecx esi
je r-xdata
fstp [ ebx ]
jmp r-xdata
test edx eax
je r-xdata
test ecx eax
je r-xdata
mov ecx ebx
test esi 0x100000
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_409a20
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x14
test eax 0x10038
je r-xdata
test ecx esi
je r-xdata
mov ecx edi
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
call sub_425030
fld1
fcom st1
fnstsw ax
pop ecx
pop ecx
mov ecx ebx
test ah 0x41
jne r-xdata
test esi 0x10038
test esi 0x10000
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
mov ecx edi
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
call sub_4250f0
add esp 0x10
mov ecx ebx
fstp [ ebp - 0x8 ]
call sub_409a20
mov [ ebx + 0xc ] 0x3
test esi 0xffff0000
je r-xdata
mov ecx ebx
test eax 0x200
jne r-xdata
fcompp
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
test esi 0x200
fstp st0
fld [ rw-data ]
call sub_409a20
fldz
mov [ ebx + 0xc ] 0x3
jmp r-xdata
call sub_409a20
fldz
mov eax [ ebp + 0x8 ]
push 0x3
pop edi
mov [ ebx + 0xc ] edi
fstp [ ebx ]
test al 0x20
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
push 0x3
pop edi
mov [ ebx + 0xc ] edi
fstp [ ebx ]
test al 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
movzx eax ax
test eax eax
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
mov ecx edi
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
call sub_425030
fstp [ esp ]
call sub_4250f0
add esp 0x10
mov ecx ebx
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
push 0x3
pop edi
mov [ ebx + 0xc ] edi
fstp [ ebx ]
test esi 0x100000
je r-xdata
test esi 0x10038
jmp r-xdata
test esi 0x100000
je r-xdata
fld [ rw-data ]
fmul [ r--data ]
jmp r-xdata
test esi 0x200
jmp r-xdata
mov ecx ebx
call sub_409a20
mov [ ebx + 0xc ] edi
fld [ rw-data ]
mov ecx ebx
fchs
fstp [ ebp - 0x8 ]
call sub_409a20
mov [ ebx + 0xc ] edi
jmp r-xdata
test si si
jne r-xdata
mov ecx ebx
call sub_468704
test eax 0xffff0000
je r-xdata
mov ecx ebx
call sub_409cf8
fchs
mov ecx ebx
fstp [ ebp - 0x8 ]
call sub_409a20
mov [ ebx + 0xc ] edi
jmp r-xdata
jne r-xdata
test esi 0x10000
je r-xdata
fstp [ ebp - 0x8 ]
call sub_409a20
mov [ ebx + 0xc ] 0x3
jne r-xdata
fld [ ebp - 0x8 ]
mov ecx ebx
call sub_409cf8
fcomp [ r--data ]
fnstsw ax
test ah 0x5
jpe r-xdata
fld [ ebp - 0x8 ]
fstp [ ebx ]
fld [ rw-data ]
fchs
jmp r-xdata
call sub_409a20
mov [ ebx + 0xc ] 0x3
jmp r-xdata
mov ecx ebx
call sub_409cf8
fcomp [ r--data ]
fnstsw ax
test ah 0x41
jne r-xdata
fld [ r--data ]
jmp r-xdata
mov ecx ebx
call sub_409d46
mov ecx ebx
mov esi eax
mov edi edx
call sub_409a20
mov [ ebx + 0xc ] 0x2
mov [ ebx ] esi
mov [ ebx + 0x4 ] edi
sub_468704
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi ecx
xor esi esi
cmp [ edi + 0xc ] 0x3
jne r-xdata
cmp [ edi + 0xc ] 0x1
jne r-xdata
fld [ edi ]
push ecx
push ecx
fstp [ esp ]
call sub_424f88
mov esi eax
pop ecx
pop ecx
test esi 0x1f8
je r-xdata
cmp [ edi + 0xc ] 0x2
jne r-xdata
mov eax [ edi ]
cdq
mov ecx eax
jmp r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
fld [ edi ]
call sub_43b536
mov ecx eax
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] ecx
fild [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fld [ edi ]
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
mov ecx [ edi ]
mov edx [ edi + 0x4 ]
mov eax ecx
or eax edx
je r-xdata
jmp r-xdata
or esi 0x40000
mov eax ecx
and eax 0x1
or eax 0x0
je r-xdata
or esi 0x200000
or esi 0x100000
jmp r-xdata
or esi 0x20000
jmp r-xdata
jl r-xdata
test edx edx
jg r-xdata
or esi 0x10000
jmp r-xdata
test ecx ecx
jae r-xdata
sub_4687da
mov eax [ ecx + 0xc ]
test eax eax
jle r-xdata
xor eax eax
retn
cmp eax 0x4
jle r-xdata
jmp sub_409d46
cmp eax 0x7
je r-xdata
mov eax [ ecx ]
retn
cmp eax 0x8
jne r-xdata
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
retn
sub_468801
mov eax [ ecx + 0xc ]
cmp eax 0x7
jg r-xdata
sub eax 0x9
je r-xdata
je r-xdata
xor eax eax
inc eax
retn
dec eax
dec eax
je r-xdata
push 0x4
dec eax
je r-xdata
mov eax [ ecx ]
mov eax [ eax ]
retn
dec eax
je r-xdata
dec eax
je r-xdata
mov eax [ ecx ]
mov eax [ eax + 0xc ]
retn
xor eax eax
retn
push 0x8
jmp r-xdata
dec eax
je r-xdata
pop eax
retn
dec eax
jne r-xdata
mov eax [ ecx + 0x8 ]
mov eax [ eax + 0x4 ]
lea eax [ eax * 2 + 0x2 ]
retn
sub_46884b
dec [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax ]
add eax 0x4
mov [ rw-data ] eax
mov eax ecx
shr eax 0xb
xor ecx eax
mov eax ecx
and eax 0xff3a58ad
shl eax 0x7
xor ecx eax
mov eax ecx
and eax 0xffffdf8c
shl eax 0xf
xor ecx eax
mov eax ecx
shr eax 0x12
xor eax ecx
shr eax 0x1
retn
call sub_468932
sub_468890
push ebp
mov ebp esp
push ecx
push ecx
dec [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax ]
add eax 0x4
mov [ rw-data ] eax
mov eax ecx
shr eax 0xb
xor ecx eax
mov eax ecx
and eax 0xff3a58ad
shl eax 0x7
xor ecx eax
mov eax ecx
and eax 0xffffdf8c
shl eax 0xf
xor ecx eax
mov eax ecx
shr eax 0x12
xor eax ecx
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
jns r-xdata
call sub_468932
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fmul [ r--data ]
mov esp ebp
pop ebp
retn
fadd [ r--data ]
sub_4688f5
push esi
xor esi esi
mov [ rw-data ] ecx
inc esi
mov ecx rw-data
mov edx esi
mov eax [ ecx ]
shr eax 0x1e
xor eax [ ecx ]
imul eax eax 0x6c078965
add eax edx
inc edx
mov [ ecx + 0x4 ] eax
add ecx 0x4
cmp ecx rw-data
jl r-xdata
mov [ rw-data ] esi
mov [ rw-data ] esi
pop esi
retn
sub_468932
cmp [ rw-data ] 0x0
push esi
push edi
mov esi rw-data
jne r-xdata
mov [ rw-data ] 0x270
mov edi 0xe3
mov [ rw-data ] esi
push 0x0
call sub_42537a
pop ecx
mov ecx eax
call sub_4688f5
lea edx [ esi + 0x4 ]
mov al [ edx ]
and al 0x1
movzx ecx al
mov eax [ esi ]
neg ecx
sbb ecx ecx
xor eax [ edx ]
and eax 0x7ffffffe
and ecx 0x9908b0df
xor eax [ esi ]
shr eax 0x1
xor eax [ esi + 0x634 ]
xor eax ecx
mov [ esi ] eax
mov esi edx
dec edi
jne r-xdata
mov edi 0x18c
lea edx [ esi + 0x4 ]
mov al [ edx ]
and al 0x1
movzx ecx al
mov eax [ esi ]
neg ecx
sbb ecx ecx
xor eax [ edx ]
and eax 0x7ffffffe
and ecx 0x9908b0df
xor eax [ esi ]
shr eax 0x1
xor eax [ esi - 0x38c ]
xor eax ecx
mov [ esi ] eax
lea esi [ edx ]
dec edi
jne r-xdata
mov ecx [ rw-data ]
mov al cl
and al 0x1
movzx edx al
mov eax [ esi ]
neg edx
pop edi
sbb edx edx
xor eax ecx
and eax 0x7ffffffe
and edx 0x9908b0df
xor eax [ esi ]
shr eax 0x1
xor eax [ esi - 0x38c ]
xor eax edx
mov [ esi ] eax
pop esi
retn
sub_4689fc
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
test edi edi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn 0x8
push ebx
movzx ebx [ ecx ]
push esi
movzx esi [ ecx + 0x2 ]
jle r-xdata
shl esi 0x10
add esi ebx
mov [ ecx ] esi
pop esi
pop ebx
xor ecx ecx
mov eax [ ebp + 0x8 ]
xor edx edx
movzx eax [ ecx + eax ]
add eax ebx
mov ebx 0xfff1
div ebx
mov ebx edx
xor edx edx
lea eax [ esi + ebx ]
mov esi 0xfff1
div esi
inc ecx
mov esi edx
cmp ecx edi
jl r-xdata
mov ecx [ ebp - 0x4 ]
sub_468a52
push ebx
push esi
push edi
push 0x20000
mov edi ecx
call sub_42588c
mov esi eax
mov [ esp ] 0x10000
mov [ edi + 0x434 ] esi
call sub_42588c
mov ebx eax
mov [ esp ] 0x10000
mov [ edi + 0x458 ] ebx
call sub_42588c
mov [ edi + 0x454 ] eax
pop ecx
test esi esi
je r-xdata
mov ecx edi
call sub_468db6
push 0x5
pop eax
test ebx ebx
je r-xdata
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_468aae
push ebp
mov ebp esp
push esi
mov esi ecx
xor eax eax
push edi
mov edi [ ebp + 0x8 ]
mov [ esi + 0x44a ] ax
shl [ esi + 0x448 ] 0x1
dec [ esi + 0x44c ]
mov eax [ esi + 0x448 ]
test edi edi
jne r-xdata
cmp [ esi + 0x14 ] 0x1
jne r-xdata
dec edi
cmp [ esi + 0x44c ] 0x0
jne r-xdata
pop edi
shr eax 0x10
pop esi
pop ebp
retn 0x4
mov ecx esi
call sub_468f48
movzx eax al
mov ecx esi
shl eax 0x8
or [ esi + 0x448 ] eax
call sub_468f48
movzx eax al
or [ esi + 0x448 ] eax
add [ esi + 0xc ] 0x2
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x4 ]
movzx eax [ edx + ecx ]
shl eax 0x8
or [ esi + 0x448 ] eax
inc ecx
mov [ esi + 0xc ] ecx
movzx eax [ ecx + edx ]
or [ esi + 0x448 ] eax
lea eax [ ecx + 0x1 ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov [ esi + 0x44c ] 0x10
sub_468b4a
push esi
push edi
push 0x2
mov edi ecx
xor esi esi
call sub_468aae
cmp eax 0x3
jne r-xdata
add esi 0x3
pop edi
add eax esi
pop esi
retn
push eax
pop esi
push eax
mov ecx edi
call sub_468aae
cmp eax 0x7
jne r-xdata
push 0xa
pop esi
push 0x5
mov ecx edi
call sub_468aae
cmp eax 0x1f
jne r-xdata
push ebx
push 0x29
pop esi
push 0x8
mov ecx edi
call sub_468aae
mov ebx 0xff
cmp eax ebx
jne r-xdata
pop ebx
lea esi [ ebx + 0x29 ]
jmp r-xdata
push 0x8
mov ecx edi
call sub_468aae
cmp eax ebx
je r-xdata
add esi ebx
sub_468baf
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi + 0x14 ] ebx
jne r-xdata
mov [ esi + 0x1c ] ebx
lea eax [ esi + 0x24 ]
push r--data
push eax
call sub_4253cb
mov [ esi + 0x1c ] eax
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi + 0x20 ] ebx
lea eax [ esi + 0x22c ]
push r--data
push eax
call sub_4253cb
mov [ esi + 0x20 ] eax
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push 0x2
push edi
mov ecx esi
call sub_468a52
mov edi eax
test edi edi
je r-xdata
cmp [ esi + 0x1c ] ebx
je r-xdata
lea eax [ esi + 0x10 ]
mov [ esi + 0xc ] ebx
push eax
mov ecx esi
mov [ esi + 0x8 ] ebx
mov [ esi + 0x438 ] ebx
mov [ esi + 0x43c ] ebx
mov [ esi + 0x440 ] ebx
mov [ esi + 0x448 ] ebx
mov [ esi + 0x44c ] ebx
mov [ esi + 0x444 ] bl
mov [ esi + 0x45c ] ebx
mov [ esi + 0x460 ] ebx
call sub_468e3a
test eax eax
je r-xdata
cmp [ esi + 0x1c ] ebx
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
call sub_468cd4
mov ecx esi
call sub_468db6
cmp [ esi + 0x1c ] ebx
je r-xdata
cmp [ esi + 0x1c ] ebx
je r-xdata
cmp [ esi + 0x20 ] ebx
je r-xdata
push [ esi + 0x1c ]
call sub_425516
pop ecx
push 0x3
jmp r-xdata
push [ esi + 0x1c ]
call sub_425516
pop ecx
cmp [ esi + 0x20 ] ebx
je r-xdata
push [ esi + 0x1c ]
call sub_425516
pop ecx
cmp [ esi + 0x20 ] ebx
je r-xdata
push [ esi + 0x1c ]
call sub_425516
pop ecx
xor eax eax
inc eax
jmp r-xdata
push [ esi + 0x20 ]
call sub_425516
pop ecx
pop eax
jmp r-xdata
xor eax eax
push [ esi + 0x20 ]
call sub_425516
pop ecx
mov eax edi
jmp r-xdata
push [ esi + 0x20 ]
call sub_425516
pop ecx
pop edi
sub_468cd4
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi ecx
mov ebx [ edi + 0x10 ]
mov [ ebp - 0x8 ] ebx
jmp r-xdata
cmp [ edi + 0x438 ] ebx
jb r-xdata
push 0x1
mov ecx edi
call sub_468aae
mov ecx edi
cmp eax 0x1
jne r-xdata
mov ecx edi
call sub_468fde
xor eax eax
push 0xf
call sub_468aae
mov ecx edi
mov esi eax
call sub_468b4a
mov ecx [ edi + 0x438 ]
sub ecx esi
mov [ ebp - 0x4 ] ecx
test eax eax
je r-xdata
push 0x8
call sub_468aae
mov edx [ edi + 0x438 ]
mov ecx [ edi + 0x434 ]
and edx 0x1ffff
mov [ edx + ecx ] al
inc [ edi + 0x438 ]
inc [ edi + 0x43c ]
jmp r-xdata
mov ecx edi
call sub_468ebb
mov ecx edi
call sub_468dee
cmp [ edi + 0x444 ] 0x0
jne r-xdata
mov ebx ecx
push 0x4
pop eax
jmp r-xdata
mov ecx [ edi + 0x438 ]
dec eax
mov edx [ edi + 0x434 ]
and ecx 0x1ffff
mov [ ebp - 0x4 ] eax
mov eax ebx
and eax 0x1ffff
inc ebx
mov al [ eax + edx ]
mov [ ecx + edx ] al
inc [ edi + 0x438 ]
inc [ edi + 0x43c ]
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
mov ebx [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_468db6
push esi
mov esi ecx
mov eax [ esi + 0x434 ]
test eax eax
je r-xdata
mov eax [ esi + 0x458 ]
test eax eax
je r-xdata
push eax
call sub_422ed5
pop ecx
mov eax [ esi + 0x454 ]
pop esi
test eax eax
je r-xdata
push eax
call sub_422ed5
pop ecx
retn
push eax
call sub_422ed5
pop ecx
sub_468dee
mov eax [ rw-data ]
push esi
mov esi ecx
push edi
cmp eax 0x1000
jbe r-xdata
inc eax
mov [ rw-data ] eax
and [ rw-data ] 0x0
mov edi [ esi + 0x450 ]
test edi edi
je r-xdata
pop edi
pop esi
retn
mov ecx [ esi + 0x8 ]
xor edx edx
imul eax ecx 0x64
div [ esi + 0x10 ]
push eax
push ecx
push [ esi + 0xc ]
call edi
add esp 0xc
test eax eax
jne r-xdata
mov [ esi + 0x444 ] 0x1
jmp r-xdata
sub_468e3a
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x1
jne r-xdata
push [ esi + 0x1c ]
lea eax [ ebp - 0x8 ]
push 0x8
push 0x1
push eax
call sub_425752
add esp 0x10
mov eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push 0x8
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_420fc0
add esp 0xc
jmp r-xdata
movzx ecx [ ebp - 0x4 ]
movzx eax [ ebp - 0x3 ]
add [ esi + 0xc ] 0x8
shl ecx 0x8
or ecx eax
mov [ ebp - 0x4 ] 0x0
movzx eax [ ebp - 0x2 ]
shl ecx 0x8
or ecx eax
movzx eax [ ebp - 0x1 ]
shl ecx 0x8
or ecx eax
mov eax [ ebp + 0x8 ]
push r--data
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_425800
neg eax
pop ecx
pop ecx
sbb eax eax
neg eax
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_468ebb
push edi
mov edi ecx
cmp [ edi + 0x18 ] 0x1
mov eax [ edi + 0x440 ]
jne r-xdata
cmp eax [ edi + 0x438 ]
jb r-xdata
cmp eax [ edi + 0x438 ]
jae r-xdata
mov ecx [ edi + 0x440 ]
mov eax [ edi + 0x434 ]
and ecx 0x1ffff
movzx eax [ ecx + eax ]
mov ecx edi
push eax
call sub_468f91
inc [ edi + 0x440 ]
mov eax [ edi + 0x440 ]
inc [ edi + 0x8 ]
and [ edi + 0x43c ] 0x0
pop edi
retn
push esi
mov esi [ edi + 0x440 ]
mov eax [ edi + 0x434 ]
and esi 0x1ffff
mov ecx [ edi + 0x8 ]
mov edx [ edi ]
mov al [ esi + eax ]
mov [ edx + ecx ] al
inc [ edi + 0x8 ]
inc [ edi + 0x440 ]
mov eax [ edi + 0x440 ]
cmp eax [ edi + 0x438 ]
jb r-xdata
pop esi
jmp r-xdata
sub_468f48
push esi
mov esi ecx
mov ecx 0x10000
mov eax [ esi + 0x460 ]
test eax eax
je r-xdata
push [ esi + 0x1c ]
push ecx
push 0x1
push [ esi + 0x458 ]
call sub_425752
add esp 0x10
and [ esi + 0x460 ] 0x0
cmp eax ecx
jne r-xdata
mov ecx [ esi + 0x460 ]
mov eax [ esi + 0x458 ]
mov al [ ecx + eax ]
inc ecx
mov [ esi + 0x460 ] ecx
pop esi
retn
sub_468f91
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov edx [ edi + 0x45c ]
mov esi [ edi + 0x454 ]
mov [ esi + edx ] al
mov eax 0x10000
inc [ edi + 0x45c ]
cmp [ edi + 0x45c ] eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x4
push [ edi + 0x20 ]
push eax
push 0x1
push [ edi + 0x454 ]
call sub_4249d3
add esp 0x10
and [ edi + 0x45c ] 0x0
sub_468fde
push esi
mov esi ecx
mov eax [ esi + 0x45c ]
test eax eax
je r-xdata
pop esi
retn
push [ esi + 0x20 ]
push eax
push 0x1
push [ esi + 0x454 ]
call sub_4249d3
add esp 0x10
and [ esi + 0x45c ] 0x0
sub_469008
push ebp
mov ebp esp
push ecx
push ecx
push esi
push 0x0
mov esi ecx
call sub_42537a
pop ecx
push eax
mov ecx esi
call sub_46904e
fld1
mov ecx 0x3ff00000
fstp [ ebp - 0x8 ]
cmp [ ebp - 0x4 ] ecx
jne r-xdata
xor eax eax
cmp [ ebp - 0x8 ] ecx
setne al
inc eax
mov [ esi + 0xd4 ] eax
and [ esi + 0xd4 ] 0x0
jmp r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_46904e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
movzx ecx ax
push edi
push 0x11
pop ebx
lea edi [ esi + 0x8 ]
mov edx edi
imul eax ecx 0x53a9b4fb
xor ecx ecx
inc ecx
sub ecx eax
mov [ edx ] ecx
lea edx [ edx + 0x4 ]
dec ebx
jne r-xdata
and [ esi ] ebx
lea eax [ esi + 0x4c ]
push 0x44
push edi
push eax
mov [ esi + 0x4 ] 0xa
call sub_420fc0
push 0x44
lea eax [ esi + 0x90 ]
push edi
push eax
call sub_420fc0
add esp 0x18
push 0x9
pop edi
mov ecx esi
call sub_4690b4
fstp st0
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4690b4
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi ecx
push 0x9
mov eax [ edi ]
push [ edi + eax * 4 + 0x8 ]
call sub_42591e
mov ecx [ edi + 0x4 ]
mov esi eax
push 0xd
push [ edi + ecx * 4 + 0x8 ]
call sub_42591e
add esi eax
add esp 0x10
mov eax [ edi ]
push 0x10
mov [ edi + eax * 4 + 0x8 ] esi
dec [ edi ]
pop eax
jns r-xdata
dec [ edi + 0x4 ]
jns r-xdata
mov [ edi ] eax
mov ecx [ edi ]
mov eax [ edi + ecx * 4 + 0x8 ]
cmp eax [ edi + 0x4c ]
jne r-xdata
mov [ edi + 0x4 ] eax
mov eax [ edi + 0xd4 ]
sub eax 0x0
je r-xdata
push 0x44
push 0x24
pop eax
sub eax ecx
lea eax [ edi + eax * 4 ]
push eax
lea eax [ edi + 0x8 ]
push eax
call sub_421604
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
shr esi 0xc
shl eax 0x14
or esi 0x3ff00000
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] esi
dec eax
je r-xdata
fldz
jmp r-xdata
mov eax esi
shr esi 0xc
shl eax 0x14
or esi 0x3ff00000
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov [ ebp - 0x4 ] esi
fild [ ebp - 0x4 ]
test esi esi
jns r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
fld [ ebp - 0x8 ]
fsub [ r--data ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fmul [ r--data ]
jmp r-xdata
fadd [ r--data ]
sub_469186
push esi
mov esi ecx
call sub_4690b4
fstp st0
mov ecx esi
call sub_4690b4
fmul [ r--data ]
call sub_43b500
pop esi
cmp eax 0x100
jl r-xdata
retn 0x8
mov eax 0xff
sub_4691b2
push ebp
mov ebp esp
sub esp 0xdc
lea ecx [ ebp - 0xdc ]
push esi
push edi
call sub_469008
push [ ebp + 0x10 ]
lea ecx [ ebp - 0xdc ]
call sub_46904e
xor esi esi
cmp [ ebp + 0xc ] esi
jbe r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
mov edi [ ebp + 0x8 ]
push ecx
push ecx
lea ecx [ ebp - 0xdc ]
call sub_469186
xor [ esi + edi ] al
inc esi
cmp esi [ ebp + 0xc ]
jb r-xdata
sub_4691fe
push ebp
mov ebp esp
mov eax 0x11b8
call sub_431ac0
push ebx
push esi
push edi
xor edi edi
xor eax eax
mov ebx ecx
mov [ ebp - 0x4ac ] edi
push 0x10000
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x4a8 ] edi
mov [ ebp - 0x4a4 ] edi
mov [ ebp - 0x4a0 ] edi
mov [ ebp - 0x49c ] edi
mov [ ebp - 0x498 ] edi
mov [ ebp - 0x494 ] edi
mov [ ebp - 0x490 ] edi
mov [ ebp - 0x48c ] edi
mov [ ebp - 0x488 ] ax
mov [ ebp - 0x280 ] ax
mov [ ebp - 0x5c ] edi
call sub_420f36
pop ecx
push eax
lea ecx [ ebp - 0x14 ]
call sub_40538e
lea ecx [ ebp - 0x78c ]
call sub_469008
push edi
push [ ebx + 0x4 ]
xor esi esi
mov ecx ebx
push [ ebx ]
inc esi
mov [ ebp - 0x1c ] esi
call sub_405045
push r--data
push [ ebp + 0x8 ]
call sub_4236cc
pop ecx
pop ecx
push ecx
test eax eax
mov ecx ebx
lea eax [ ebp - 0xda4 ]
push eax
push [ ebp + 0x8 ]
jne r-xdata
call sub_4697dd
test eax eax
je r-xdata
call sub_4697dd
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
push 0x6
jmp r-xdata
lea eax [ ebp - 0xb9c ]
push eax
lea eax [ ebp - 0x11b4 ]
push eax
lea eax [ ebp - 0xfac ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0xc ]
call sub_42426e
add esp 0x14
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x994 ]
push eax
call sub_422f3c
lea eax [ ebp - 0xfac ]
push eax
lea eax [ ebp - 0x994 ]
push eax
call sub_422f0d
lea eax [ ebp - 0xb9c ]
push eax
lea eax [ ebp - 0x11b4 ]
push eax
lea eax [ ebp - 0xfac ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0xda4 ]
push eax
call sub_42426e
add esp 0x24
lea eax [ ebp - 0x11b4 ]
push eax
lea eax [ ebp - 0x994 ]
push eax
call sub_422f0d
lea eax [ ebp - 0xb9c ]
push eax
lea eax [ ebp - 0x994 ]
push eax
call sub_422f0d
add esp 0x10
lea eax [ ebp - 0x994 ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
lea ecx [ ebp - 0x78c ]
add eax 0x2477
push eax
call sub_46904e
mov edx [ ebp - 0x20 ]
mov ecx edi
test edx edx
jle r-xdata
push 0x9
jmp r-xdata
pop edi
jmp r-xdata
push [ ebx ]
mov [ ebp + 0xc ] eax
mov ecx ebx
push esi
push esi
lea eax [ ebp - 0x5 ]
push eax
call sub_40506b
push [ ebx ]
lea eax [ ebp - 0xc ]
mov ecx ebx
push esi
push 0x4
push eax
call sub_40506b
push [ ebx ]
mov eax [ ebp - 0xc ]
mov ecx ebx
xor eax 0x87bc
push esi
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push 0x4
push eax
call sub_40506b
push [ ebx ]
lea eax [ ebp - 0xc ]
mov ecx ebx
push esi
push 0x4
push eax
call sub_40506b
push [ ebx ]
mov eax [ ebp - 0xc ]
mov ecx ebx
xor eax 0xa685
push esi
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x38 ]
push 0x4
push eax
call sub_40506b
push [ ebx ]
lea eax [ ebp - 0x3c ]
mov ecx ebx
push esi
push 0x4
push eax
call sub_40506b
push [ ebx ]
lea eax [ ebp - 0x40 ]
mov ecx ebx
push esi
push 0x4
push eax
call sub_40506b
push [ ebx ]
lea eax [ ebp - 0x44 ]
mov ecx ebx
push esi
push 0x4
push eax
call sub_40506b
lea eax [ ebp - 0x6b4 ]
push eax
call sub_46998c
lea eax [ ebp - 0x6b4 ]
push r--data
push eax
call sub_4253cb
mov [ ebp - 0x18 ] eax
pop ecx
pop ecx
test eax eax
jne r-xdata
push [ ebp - 0x18 ]
call sub_425516
pop ecx
cmp [ ebp - 0x24 ] esi
je r-xdata
lea eax [ ecx + 0x10000 ]
cmp eax edx
jle r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405371
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp - 0x5 ] 0x1
jne r-xdata
lea eax [ ebp - 0x6b4 ]
push eax
call [ DeleteFileW@IAT ]
push 0xa
jmp r-xdata
mov eax 0x10000
mov eax edx
sub eax ecx
jmp r-xdata
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x6b4 ]
push edi
push esi
push eax
call [ CopyFileW@IAT ]
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0x4ac ] edi
mov [ ebp - 0x488 ] ax
mov [ ebp - 0x280 ] ax
lea eax [ ebp - 0x6b4 ]
push 0x104
push eax
lea eax [ ebp - 0x488 ]
mov [ ebp - 0x4a8 ] edi
push eax
mov [ ebp - 0x4a4 ] edi
mov [ ebp - 0x4a0 ] edi
mov [ ebp - 0x49c ] edi
mov [ ebp - 0x490 ] edi
mov [ ebp - 0x48c ] edi
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x498 ] edi
mov [ ebp - 0x494 ] edi
call sub_42422e
mov esi [ ebp + 0xc ]
lea ecx [ ebp - 0x4ac ]
add esp 0xc
xor eax eax
mov [ ebp - 0x280 ] ax
push esi
call sub_469a93
lea ecx [ ebp - 0x4ac ]
call sub_468baf
test eax eax
je r-xdata
push eax
push [ ebp - 0x14 ]
lea ecx [ ebp - 0x1c ]
call sub_4689fc
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
push esi
push [ ebp - 0x14 ]
call sub_4249d3
mov ecx [ ebp - 0x34 ]
add esp 0x10
mov edx [ ebp - 0x20 ]
cmp ecx edx
jl r-xdata
mov ebx [ ebp - 0x14 ]
mov edi eax
mov esi [ ebp - 0x30 ]
push [ ebx ]
add ecx eax
mov [ ebp + 0x8 ] eax
push eax
push esi
push [ ebp - 0x14 ]
mov [ ebp - 0x34 ] ecx
mov ecx ebx
call sub_40506b
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] edi
test eax eax
jle r-xdata
lea eax [ ebp - 0x6b4 ]
push eax
call [ DeleteFileW@IAT ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push esi
call sub_46994b
lea eax [ ebp - 0x6b4 ]
push eax
call [ DeleteFileW@IAT ]
push 0x7
lea eax [ ebp - 0x6b4 ]
push eax
call [ DeleteFileW@IAT ]
push 0xb
jmp r-xdata
mov esi [ ebp - 0x1c ]
push ecx
push ecx
lea ecx [ ebp - 0x78c ]
call sub_469186
xor [ ebx + esi ] al
inc esi
cmp esi edi
jl r-xdata
mov ebx [ ebp - 0x2c ]
xor esi esi
mov eax [ ebp + 0x8 ]
inc esi
xor edi edi
sub_469604
push ebp
mov ebp esp
sub esp 0x688
push ebx
push esi
push edi
mov edi ecx
xor eax eax
xor ecx ecx
mov [ ebp - 0xc ] edi
push ecx
xor ebx ebx
mov [ ebp - 0x478 ] ecx
push [ edi + 0x4 ]
mov [ ebp - 0x474 ] ecx
inc ebx
push [ edi ]
mov [ ebp - 0x470 ] ecx
mov [ ebp - 0x46c ] ecx
mov [ ebp - 0x468 ] ecx
mov [ ebp - 0x464 ] ecx
mov [ ebp - 0x460 ] ecx
mov [ ebp - 0x45c ] ecx
mov [ ebp - 0x458 ] ecx
mov [ ebp - 0x28 ] ecx
mov ecx edi
mov [ ebp - 0x454 ] ax
mov [ ebp - 0x24c ] ax
mov [ ebp - 0x10 ] ebx
call sub_405045
push ecx
lea eax [ ebp - 0x688 ]
mov ecx edi
push eax
push [ ebp + 0x8 ]
call sub_4697dd
test eax eax
je r-xdata
push [ edi ]
lea eax [ ebp - 0x1 ]
mov ecx edi
push ebx
push ebx
push eax
call sub_40506b
push [ edi ]
lea eax [ ebp - 0x8 ]
mov ecx edi
push ebx
push 0x4
push eax
call sub_40506b
push [ edi ]
mov ebx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push 0x1
push 0x4
mov esi 0x87bc
mov ecx edi
push eax
xor ebx esi
call sub_40506b
mov eax [ ebp - 0x8 ]
mov ecx edi
push [ edi ]
xor eax esi
mov esi [ ebp + 0x10 ]
push 0x1
push 0x4
mov [ esi ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_40506b
mov ecx [ ebp - 0xc ]
mov edi [ ebp - 0x8 ]
push 0x1
push 0x10
push [ ecx ]
xor edi 0xa685
call sub_405045
push [ esi ]
call sub_42588c
pop ecx
push ebx
mov [ ebp + 0x8 ] eax
call sub_42588c
mov esi [ ebp - 0xc ]
pop ecx
mov ecx esi
mov [ ebp + 0x10 ] eax
push [ esi ]
push 0x1
push ebx
push eax
call sub_40506b
mov ecx [ esi + 0x8 ]
add ecx 0x2477
push ecx
push ebx
push [ ebp + 0x10 ]
call sub_4691b2
push ebx
mov ebx [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
push ebx
call sub_4689fc
mov esi [ ebp + 0x8 ]
cmp edi [ ebp - 0x10 ]
je r-xdata
push 0x6
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
push esi
call sub_422ed5
pop ecx
push ebx
call sub_422ed5
pop ecx
push 0xa
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push esi
call sub_422ed5
mov esi ebx
xor ecx ecx
mov [ ebp - 0x474 ] ebx
xor eax eax
mov [ ebp - 0x470 ] ecx
mov [ ebp - 0x454 ] ax
mov [ ebp - 0x24c ] ax
inc eax
mov [ ebp - 0x46c ] ecx
mov [ ebp - 0x468 ] ecx
mov [ ebp - 0x45c ] ecx
mov [ ebp - 0x458 ] ecx
mov [ ebp - 0x28 ] ecx
lea ecx [ ebp - 0x478 ]
mov [ ebp - 0x464 ] eax
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x478 ] esi
call sub_468baf
push ebx
call sub_422ed5
jmp r-xdata
pop eax
jmp r-xdata
mov eax [ ebp + 0xc ]
pop ecx
mov [ eax ] esi
xor eax eax
sub_4697dd
push ebp
mov ebp esp
sub esp 0x228
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x5 ] 0x1
xor esi esi
xor al al
mov [ ebp - 0x5 ] al
push [ ebx ]
lea eax [ ebp - 0xc ]
inc esi
push 0x1
push 0x4
push eax
mov ecx ebx
mov [ ebp - 0x18 ] esi
call sub_40506b
mov esi [ ebp - 0xc ]
lea eax [ ebp - 0x224 ]
push [ ebx ]
xor esi 0xadbc
mov ecx ebx
lea edi [ esi + esi ]
push edi
push 0x1
push eax
call sub_40506b
lea eax [ esi + 0xb33f ]
push eax
push edi
lea eax [ ebp - 0x224 ]
push eax
call sub_4691b2
push [ ebx ]
xor eax eax
mov ecx ebx
push 0x1
mov [ ebp + edi - 0x224 ] ax
lea eax [ ebp - 0xc ]
push 0x4
push eax
call sub_40506b
mov esi [ ebp - 0xc ]
mov ecx ebx
push [ ebx ]
xor esi 0xf820
lea edi [ esi + esi ]
push edi
push 0x1
push [ ebp + 0xc ]
call sub_40506b
lea eax [ esi + 0xf479 ]
mov esi [ ebp + 0xc ]
push eax
push edi
push esi
call sub_4691b2
push [ ebp + 0x8 ]
xor eax eax
mov [ edi + esi ] ax
lea eax [ ebp - 0x224 ]
push eax
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebx ]
lea eax [ ebp - 0x14 ]
mov ecx ebx
push 0x4
push 0x1
push eax
call sub_40506b
push 0x18ee
push 0x4
lea eax [ ebp - 0x14 ]
push eax
call sub_4691b2
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] 0x0
push r--data
push eax
call sub_425800
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x6
pop eax
xor eax eax
jmp r-xdata
push r--data
push [ ebp + 0x8 ]
call sub_4236cc
mov esi [ ebp - 0x18 ]
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
xor edi edi
mov ecx ebx
inc edi
push edi
push edi
push [ ebx ]
call sub_405045
push [ ebx ]
lea eax [ ebp - 0x1c ]
mov ecx ebx
push edi
push 0x4
push eax
call sub_40506b
mov eax [ ebp - 0x1c ]
mov ecx ebx
xor eax 0x87bc
mov [ ebp - 0x1c ] eax
add eax 0x18
push edi
push eax
push [ ebx ]
call sub_405045
mov al [ ebp - 0x5 ]
jmp r-xdata
test esi esi
je r-xdata
cmp al 0x1
je r-xdata
sub_46994b
push ebp
mov ebp esp
push esi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x40000000
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop esi
pop ebp
retn 0xc
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push esi
call [ SetFileTime@IAT ]
push esi
call [ CloseHandle@IAT ]
sub_46998c
push ebp
mov ebp esp
sub esp 0x208
lea eax [ ebp - 0x208 ]
push eax
push 0x104
call [ GetTempPathW@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x208 ]
push 0x0
push r--data
push eax
call [ GetTempFileNameW@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_4699c4
push ebp
mov ebp esp
sub esp 0x164
push ebx
push esi
push edi
xor edi edi
mov esi ecx
push edi
push edi
push [ esi ]
call sub_405045
push [ esi ]
xor ebx ebx
lea eax [ ebp - 0x80 ]
inc ebx
mov ecx esi
push ebx
push 0x40
push eax
call sub_40506b
push edi
push [ ebp - 0x44 ]
mov ecx esi
push [ esi ]
call sub_405045
push ebx
push 0x4
push [ esi ]
mov ecx esi
call sub_405045
push [ esi ]
lea eax [ ebp - 0x14 ]
mov ecx esi
push ebx
push 0x14
push eax
call sub_40506b
push [ esi ]
movzx edi [ ebp - 0x12 ]
lea eax [ ebp - 0x160 ]
push ebx
push 0x60
push eax
mov ecx esi
call sub_40506b
mov eax 0x20b
cmp [ ebp - 0x160 ] ax
jne r-xdata
push ebx
push 0x80
push [ esi ]
mov ecx esi
call sub_405045
imul edi edi 0x28
mov ecx esi
push ebx
sub edi 0x28
push edi
push [ esi ]
call sub_405045
push [ esi ]
lea eax [ ebp - 0x3c ]
mov ecx esi
push ebx
push 0x28
push eax
call sub_40506b
mov eax [ ebp - 0x2c ]
mov ecx esi
add eax [ ebp - 0x28 ]
push 0x0
push eax
push [ esi ]
call sub_405045
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
push 0x10
push [ esi ]
mov ecx esi
call sub_405045
sub_469a93
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x104
push [ ebp + 0x8 ]
lea eax [ esi + 0x22c ]
push eax
call sub_42422e
add esp 0xc
xor eax eax
mov [ esi + 0x434 ] ax
pop esi
pop ebp
retn 0x4
sub_469abe
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ eax + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
and [ esi + 0xc ] 0x0
and [ esi + 0x4 ] 0x0
push 0x8
pop edx
cmp eax edx
jb r-xdata
mov [ esi + 0xc ] edx
xor ecx ecx
mov eax edx
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
xor ebx ebx
mov [ esi + 0x4 ] eax
pop ecx
cmp [ esi + 0x8 ] ebx
jbe r-xdata
mov edx eax
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
xor edi edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + ebx * 4 ]
and [ edi + 0x8 ] 0x0
push ecx
mov ecx edi
call sub_409ac0
jmp r-xdata
push 0x10
call sub_420f36
mov edi eax
pop ecx
test edi edi
je r-xdata
pop edi
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + ebx * 4 ] edi
inc ebx
cmp ebx [ esi + 0x8 ]
jb r-xdata
sub_469b4c
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x10
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
call sub_420f36
mov edx eax
pop ecx
test edx edx
je r-xdata
xor edx edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
jmp r-xdata
mov [ esi ] edx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_469b90
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov edi ecx
call sub_409e9c
mov al [ esi + 0x10 ]
lea ecx [ edi + 0x20 ]
mov [ edi + 0x10 ] al
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov al [ esi + 0x18 ]
mov [ edi + 0x18 ] al
lea eax [ esi + 0x20 ]
push eax
call sub_409e9c
mov al [ esi + 0x30 ]
mov [ edi + 0x30 ] al
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_469bcc
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4208d5
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422ed5#3
pop ecx
sub_469beb
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_420a9b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422ed5#3
pop ecx
sub_469c0a
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x48c ]
lea esi [ edi + 0x48c ]
mov ecx esi
call sub_40fbbd
mov ecx [ esi + 0x8 ]
mov [ esi ] r--data
test ecx ecx
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
mov esi [ ecx + 0x38 ]
push ecx
call sub_41ff5c
mov ecx esi
test esi esi
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_422ed5#3
pop ecx
sub_469c6b
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
push esi
call j_sub_422ed5#3
pop ecx
mov eax esi
pop esi
retn 0x4
push ecx
call sub_407b3d
sub_469c87
push esi
mov esi ecx
push edi
mov edi [ esi ]
test edi edi
je r-xdata
push esi
call j_sub_422ed5#3
pop ecx
pop edi
mov eax esi
pop esi
retn 0x4
mov ecx edi
call sub_466b1d
push edi
call j_sub_422ed5#3
pop ecx
sub_469cc2
push ebp
mov ebp esp
mov eax 0x205c
call sub_431ac0
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
mov edi ecx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ edi + 0xf8 ] 0x1
je r-xdata
mov esi [ LoadStringW@IAT ]
lea eax [ ebp - 0x2058 ]
mov ebx 0xfff
push ebx
push eax
push 0x66
push [ rw-data ]
call esi
lea eax [ ebp - 0x2058 ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_407f41
push ebx
lea eax [ ebp - 0x2058 ]
push eax
push 0x72
push [ rw-data ]
call esi
lea eax [ ebp - 0x2058 ]
push eax
lea ecx [ ebp - 0x44 ]
call sub_407f41
mov edx [ edi + 0xf4 ]
push edx
call sub_407143
push edx
mov ebx eax
call sub_45fd96
push edx
mov [ ebp - 0x4 ] eax
call sub_45fdc8
lea ecx [ ebp - 0x24 ]
mov esi eax
call sub_4077c7
lea eax [ ebp - 0x24 ]
push eax
push esi
call sub_45fdfa
test al al
lea eax [ ebp - 0x2058 ]
je r-xdata
push [ edi + 0xc8 ]
push [ edi + 0xf4 ]
push r--data
push eax
call sub_423818
mov esi [ ebp - 0x4 ]
push [ ebp - 0x24 ]
mov esi [ ebp - 0x4 ]
push esi
push r--data
push eax
call sub_423818
jmp r-xdata
lea ecx [ ebp - 0x34 ]
call sub_4077c7
push r--data
lea ecx [ ebp - 0x34 ]
call sub_407d2c
push r--data
lea ecx [ ebp - 0x34 ]
call sub_407e0b
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407c8e
push r--data
lea ecx [ ebp - 0x14 ]
call sub_407e0b
push r--data
lea ecx [ ebp - 0x14 ]
call sub_407e0b
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407c8e
cmp [ rw-data ] 0x0
je r-xdata
push ebx
lea ecx [ ebp - 0x14 ]
call sub_407e0b
push r--data
lea ecx [ ebp - 0x14 ]
call sub_407e0b
add esp 0x10
lea eax [ ebp - 0x2058 ]
lea ecx [ ebp - 0x14 ]
push eax
call sub_407f41
test ebx ebx
je r-xdata
push 0x11010
push [ ebp - 0x54 ]
push [ ebp - 0x14 ]
push [ rw-data ]
call [ MessageBoxW@IAT ]
cmp [ ebp - 0x20 ] 0x0
je r-xdata
push [ ebp - 0x44 ]
push [ edi + 0xf4 ]
push [ edi + 0xc8 ]
push r--data
call sub_423e0a
add esp 0x10
jmp r-xdata
push [ ebp - 0x34 ]
push ebx
push [ ebp - 0x44 ]
push esi
push [ ebp - 0x24 ]
push r--data
call sub_423e0a
add esp 0x18
jmp r-xdata
xor eax eax
mov [ edi + 0xf8 ] 0x1
cmp [ edi + 0x118 ] al
lea ecx [ ebp - 0x34 ]
sete al
dec eax
and eax 0x7ffff071
inc eax
mov [ rw-data ] eax
call sub_405a64
lea ecx [ ebp - 0x14 ]
call sub_405a64
lea ecx [ ebp - 0x24 ]
call sub_405a64
lea ecx [ ebp - 0x44 ]
call sub_405a64
lea ecx [ ebp - 0x54 ]
call sub_405a64
sub_469ed4
push ebp
mov ebp esp
mov eax 0x205c
call sub_431ac0
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
mov edi ecx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ edi + 0xf8 ] 0x1
je r-xdata
mov esi [ LoadStringW@IAT ]
lea eax [ ebp - 0x2058 ]
mov ebx 0xfff
push ebx
push eax
push 0x66
push [ rw-data ]
call esi
lea eax [ ebp - 0x2058 ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_407f41
push ebx
lea eax [ ebp - 0x2058 ]
push eax
push [ ebp + 0x8 ]
push [ rw-data ]
call esi
lea eax [ ebp - 0x2058 ]
push eax
lea ecx [ ebp - 0x44 ]
call sub_407f41
mov edx [ edi + 0xf4 ]
push edx
call sub_407143
push edx
mov ebx eax
call sub_45fd96
push edx
mov [ ebp - 0x4 ] eax
call sub_45fdc8
lea ecx [ ebp - 0x34 ]
mov esi eax
call sub_4077c7
lea eax [ ebp - 0x34 ]
push eax
push esi
call sub_45fdfa
test al al
lea eax [ ebp - 0x2058 ]
je r-xdata
push [ edi + 0xc8 ]
push [ edi + 0xf4 ]
push r--data
push eax
call sub_423818
mov esi [ ebp - 0x4 ]
push [ ebp - 0x34 ]
mov esi [ ebp - 0x4 ]
push esi
push r--data
push eax
call sub_423818
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call sub_4077c7
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push ebx
lea ecx [ ebp - 0x14 ]
call sub_407e0b
push r--data
lea ecx [ ebp - 0x14 ]
call sub_407e0b
add esp 0x10
lea eax [ ebp - 0x2058 ]
lea ecx [ ebp - 0x14 ]
push eax
call sub_407f41
test ebx ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x14 ]
call sub_407e0b
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407c8e
cmp [ rw-data ] 0x0
je r-xdata
push ebx
lea ecx [ ebp - 0x24 ]
call sub_407d2c
push 0xffffffff
push [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_407e8c
push r--data
lea ecx [ ebp - 0x24 ]
call sub_407e0b
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407c8e
push r--data
lea ecx [ ebp - 0x14 ]
call sub_407e0b
push 0x11010
push [ ebp - 0x54 ]
push [ ebp - 0x14 ]
push [ rw-data ]
call [ MessageBoxW@IAT ]
cmp [ ebp - 0x30 ] 0x0
je r-xdata
lea ecx [ ebp - 0x24 ]
mov [ rw-data ] eax
call sub_405a64
lea ecx [ ebp - 0x14 ]
call sub_405a64
lea ecx [ ebp - 0x34 ]
call sub_405a64
lea ecx [ ebp - 0x44 ]
call sub_405a64
lea ecx [ ebp - 0x54 ]
call sub_405a64
mov eax [ ebp + 0x8 ]
add eax 0x7ffff000
push [ ebp - 0x44 ]
push [ edi + 0xf4 ]
push [ edi + 0xc8 ]
push r--data
call sub_423e0a
add esp 0x10
jmp r-xdata
push [ ebp - 0x24 ]
push ebx
push [ ebp - 0x44 ]
push esi
push [ ebp - 0x34 ]
push r--data
call sub_423e0a
add esp 0x18
jmp r-xdata
xor eax eax
inc eax
cmp [ edi + 0x118 ] 0x0
mov [ edi + 0xf8 ] eax
je r-xdata
sub_46a0f4
push ebp
mov ebp esp
mov eax 0x2000
call sub_431ac0
push esi
xor esi esi
xor eax eax
cmp [ ebp + 0xc ] 0xffffffff
push esi
mov [ ebp - 0x2000 ] ax
lea eax [ ebp - 0x2000 ]
push 0xfff
push eax
push esi
jne r-xdata
push [ ebp + 0xc ]
call [ GetLastError@IAT ]
push eax
jmp r-xdata
push esi
push 0x1000
call [ FormatMessageW@IAT ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x2000 ]
push eax
call sub_407f41
mov eax [ ebp + 0x8 ]
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_46a152
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
js r-xdata
mov ecx [ ebp + 0xc ]
call sub_407eec
xor al al
add ecx 0x470
cmp eax [ ecx ]
jge r-xdata
push eax
call sub_418fd0
mov ecx [ ebp + 0xc ]
push [ eax ]
call sub_407d2c
mov al 0x1
jmp r-xdata
pop ebp
retn 0x8
sub_46a188
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0x8 ]
mov esi ecx
lea ecx [ ebp - 0x10 ]
call sub_407f41
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ esi - 0x370 ]
call sub_46a1ba
lea ecx [ ebp - 0x10 ]
call sub_405a64
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_46a1ba
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
xor edi edi
push 0xc
cmp [ esi + 0x4 ] edi
jne r-xdata
call sub_420f36
pop ecx
test eax eax
je r-xdata
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_469b4c
mov edi eax
mov [ esi ] edi
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx eax
call sub_469b4c
mov edi eax
inc [ esi + 0x8 ]
mov [ esi + 0x4 ] edi
pop edi
pop esi
pop ebp
retn 0x4
sub_46a212
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
mov eax [ ecx + 0x4 ]
test edx edx
je r-xdata
test eax eax
je r-xdata
mov [ edx + 0x4 ] eax
cmp ecx [ esi ]
jne r-xdata
mov [ eax + 0x8 ] edx
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi ] eax
push ecx
call sub_420a08
and [ edi ] 0x0
dec [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] edx
sub_46a252
push ebp
mov ebp esp
dec [ ebp + 0xc ]
jne r-xdata
xor eax eax
pop ebp
retn 0x10
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push 0x1
push 0x467
push [ ebp + 0x8 ]
call [ SendMessageW@IAT ]
sub_46a279
push ebp
mov ebp esp
mov eax 0x50000
call sub_431ac0
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20004 ]
push eax
push 0x7fff
push [ ebp + 0x8 ]
call [ GetFullPathNameW@IAT ]
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn 0xc
push ebx
lea eax [ ebp - 0x20004 ]
push eax
lea eax [ ebp - 0x10004 ]
push r--data
push eax
call sub_423818
lea eax [ ebp - 0x10004 ]
push eax
call sub_422d7c
mov ebx eax
add esp 0x10
cmp [ ebp + ebx * 2 - 0x10006 ] 0x5c
jne r-xdata
push edi
xor edi edi
push edi
push [ ebp + 0xc ]
call [ CreateDirectoryW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + ebx * 2 - 0x10008 ] 0x3a
je r-xdata
push edi
push 0x2200000
push 0x3
push edi
push edi
push 0x40000000
push [ ebp + 0xc ]
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
cmp [ ebp + 0x10 ] al
je r-xdata
xor eax eax
mov [ ebp + ebx * 2 - 0x10006 ] ax
push [ ebp + 0xc ]
call [ RemoveDirectoryW@IAT ]
push 0x2fffa
lea eax [ ebp - 0x50000 ]
push 0x0
push eax
call sub_422f60
lea eax [ ebx + ebx ]
mov [ ebp - 0x50000 ] 0xa0000003
mov [ ebp - 0x4fff6 ] ax
mov eax [ ebp - 0x4fff6 ]
add eax 0x2
mov [ ebp - 0x4fff4 ] ax
lea eax [ ebp - 0x10004 ]
push 0x7fff
push eax
lea eax [ ebp - 0x4fff0 ]
push eax
call sub_42422e
mov eax [ ebp - 0x4fff6 ]
lea ecx [ ebp + 0x8 ]
add esp 0x18
xor edx edx
add eax 0xc
mov [ ebp - 0x4fffc ] ax
movzx eax ax
push edx
push ecx
push edx
push edx
add eax 0x8
push eax
lea eax [ ebp - 0x50000 ]
push eax
push 0x900a4
push edi
call [ DeviceIoControl@IAT ]
push edi
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
pop edi
pop ebx
call [ CloseHandle@IAT ]
xor eax eax
inc eax
call [ CloseHandle@IAT ]
sub_46a3dc
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx + 0x4 ]
mov ebx [ ecx ]
mov [ esp + 0x34 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x38 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x3c ] eax
mov [ esp + 0x30 ] ebx
inc [ eax ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x14 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x18 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] eax
inc [ eax ]
call sub_407faf
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call [ CharLowerBuffW@IAT ]
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_420c63
mov esi r--data
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_420c63
test al al
jne r-xdata
push esi
lea ecx [ esp + 0x14 ]
call sub_407d2c
push ebx
call [ GetDriveTypeW@IAT ]
cmp eax 0x5
jne r-xdata
mov edx esi
lea ecx [ esp + 0x10 ]
call sub_420c63
test al al
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
push r--data
lea ecx [ esp + 0x24 ]
call sub_407f41
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x24 ]
call sub_407c8e
push r--data
lea ecx [ esp + 0x24 ]
call sub_407e0b
mov edi [ mciSendStringW@IAT ]
xor ebx ebx
push ebx
push ebx
push ebx
push [ esp + 0x2c ]
call edi
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
push r--data
lea ecx [ esp + 0x24 ]
call sub_407d2c
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x24 ]
call sub_407c8e
push r--data
lea ecx [ esp + 0x24 ]
call sub_407e0b
push ebx
push ebx
push ebx
push [ esp + 0x2c ]
call edi
test eax eax
je r-xdata
lea ecx [ esp + 0x10 ]
call sub_405a64
lea ecx [ esp + 0x30 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push r--data
lea ecx [ esp + 0x24 ]
call sub_407d2c
push ebx
push ebx
push ebx
push [ esp + 0x2c ]
call edi
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
lea ecx [ esp + 0x20 ]
call sub_405a64
jmp r-xdata
sub_46a5a2
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x4 ] 0x0
cmp [ ebx + 0x8 ] 0x3
jb r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov edx edi
push [ ebp - 0x4 ]
mov ecx [ eax ]
call sub_4636b5
pop ecx
test al al
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov [ ebp - 0x4 ] 0x1
sub_46a61a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
call sub_463a6e
test al al
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
sub_46a654
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ esp + 0x18 ] ecx
mov eax [ edi + 0x8 ]
mov [ esp + 0x1c ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x48 ]
push [ eax ]
call sub_407f41
xor ebx ebx
mov [ esp + 0x14 ] 0x1
push 0x1
mov [ esp + 0x14 ] bl
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
call [ SetErrorMode@IAT ]
mov esi eax
cmp [ esp + 0x4c ] ebx
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx edi
call sub_409a20
mov edx [ esp + 0x18 ]
xor eax eax
or [ edi ] 0xffffffff
inc eax
push ebx
mov [ edi + 0xc ] eax
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
mov ecx [ esp + 0x48 ]
call sub_464ad8
test al al
je r-xdata
lea ecx [ esp + 0x48 ]
call sub_463f6d
cmp [ esp + 0x1c ] 0x1
jbe r-xdata
push [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
lea eax [ esp + 0x34 ]
push [ esp + 0x14 ]
push eax
lea eax [ esp + 0x34 ]
push eax
lea eax [ esp + 0x30 ]
push eax
push [ esp + 0x5c ]
call sub_46f47f
test al al
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
test al 0x1
je r-xdata
cmp [ esp + 0x10 ] bl
je r-xdata
or ebx 0xffffffff
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
and al 0x2
neg al
sbb al al
not al
and al 0x1
mov [ esp + 0x14 ] al
mov [ esp + 0x10 ] 0x1
mov edi [ ebp + 0xc ]
mov ecx edi
call sub_409a20
mov eax [ esp + 0x20 ]
mov [ edi ] eax
mov eax [ esp + 0x24 ]
mov [ edi + 0xc ] 0x2
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_40942e
push 0x3
mov edi eax
push 0x1
push edi
call sub_4091b0
mov ecx [ esp + 0x2c ]
lea eax [ esp + 0x44 ]
add esp 0xc
mov [ esp + 0x38 ] ecx
mov ecx [ esp + 0x24 ]
mov [ esp + 0x3c ] ecx
mov [ esp + 0x40 ] ebx
push ebx
push 0x1
push eax
push edi
mov [ esp + 0x54 ] 0x2
call sub_409040
add esp 0x10
lea ecx [ esp + 0x38 ]
call sub_409a20
mov eax [ esp + 0x28 ]
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x2c ]
push 0x1
mov [ esp + 0x40 ] eax
lea eax [ esp + 0x3c ]
push 0x1
push eax
push edi
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] 0x2
call sub_409040
add esp 0x10
lea ecx [ esp + 0x38 ]
call sub_409a20
mov eax [ esp + 0x30 ]
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x34 ]
push 0x2
mov [ esp + 0x40 ] eax
pop eax
push eax
mov [ esp + 0x48 ] eax
lea eax [ esp + 0x3c ]
push 0x1
push eax
push edi
mov [ esp + 0x50 ] ebx
call sub_409040
add esp 0x10
lea ecx [ esp + 0x38 ]
call sub_409a20
jmp r-xdata
push esi
call [ SetErrorMode@IAT ]
lea ecx [ esp + 0x48 ]
call sub_405a64
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46a862
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x4 ] 0x0
cmp [ ebx + 0x8 ] 0x3
jb r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov edx edi
push [ ebp - 0x4 ]
mov ecx [ eax ]
call sub_464d68
pop ecx
test al al
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov [ ebp - 0x4 ] 0x1
sub_46a8da
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor bl bl
cmp [ esi + 0x8 ] 0x2
jb r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov dl bl
call sub_4651ca
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
test eax eax
je r-xdata
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
inc bl
sub_46a931
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x114
push ebx
push esi
push edi
mov ebx ecx
xor edi edi
mov ecx [ ebp + 0xc ]
push r--data
mov [ esp + 0x38 ] ebx
call sub_409bf8
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x14 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x18 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] eax
inc [ eax ]
call sub_407faf
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call [ CharLowerBuffW@IAT ]
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_420c63
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_420c63
test al al
je r-xdata
push 0x63
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_420c63
test al al
je r-xdata
push 0x5
jmp r-xdata
pop esi
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_420c63
test al al
je r-xdata
push 0x2
jmp r-xdata
push 0x61
lea eax [ esp + 0x4c ]
pop ebx
mov [ esp + 0xc ] eax
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_420c63
test al al
je r-xdata
push 0x3
jmp r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_407886
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_422f3c
pop ecx
inc edi
add [ esp + 0x10 ] 0x8
pop ecx
cmp esi 0x63
jne r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_420c63
test al al
je r-xdata
push 0x4
jmp r-xdata
push ebx
lea ecx [ esp + 0x14 ]
call sub_465b74
push r--data
lea ecx [ esp + 0x14 ]
call sub_407e0b
push [ esp + 0x10 ]
call [ GetDriveTypeW@IAT ]
cmp eax esi
je r-xdata
test edi edi
jle r-xdata
inc ebx
cmp ebx 0x7a
jle r-xdata
cmp eax 0x1
je r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_420c63
test al al
je r-xdata
push 0x6
mov edx [ esp + 0x34 ]
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_40942e
lea ecx [ edi + 0x1 ]
xor esi esi
push ecx
mov ebx eax
inc esi
push esi
push ebx
mov [ esp + 0x18 ] ebx
call sub_4091b0
and [ esp + 0x34 ] 0x0
lea eax [ esp + 0x2c ]
push 0x0
push esi
push eax
push ebx
mov [ esp + 0x3c ] edi
mov [ esp + 0x48 ] esi
call sub_409040
add esp 0x1c
lea ecx [ esp + 0x20 ]
call sub_409a20
cmp edi esi
jl r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
xor esi esi
push 0x0
push 0x1
call sub_456883
lea ecx [ esp + 0x10 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ebx [ esp + 0x48 ]
push ebx
lea ecx [ esp + 0x3c ]
call sub_407f41
push eax
lea ecx [ esp + 0x24 ]
call sub_4093ea
push esi
push 0x1
lea eax [ esp + 0x28 ]
push eax
push [ esp + 0x18 ]
call sub_409040
add esp 0x10
lea ecx [ esp + 0x20 ]
call sub_409a20
lea ecx [ esp + 0x38 ]
call sub_405a64
inc esi
add ebx 0x8
cmp esi edi
jle r-xdata
jmp r-xdata
sub_46ab64
push ebp
mov ebp esp
mov eax 0x10010
call sub_431ac0
push ebx
push esi
push edi
push 0x1
mov ebx ecx
call [ SetErrorMode@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_409997
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
inc [ eax ]
call sub_463f6d
push 0x7fff
xor edi edi
lea eax [ ebp - 0x10010 ]
push eax
push edi
push edi
push edi
push edi
push edi
push [ ebp - 0x10 ]
call [ GetVolumeInformationW@IAT ]
mov ecx [ ebp + 0xc ]
test eax eax
je r-xdata
push r--data
call sub_409bf8
mov eax [ ebx ]
push edi
push 0x1
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
lea eax [ ebp - 0x10010 ]
push eax
call sub_409bf8
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405a64
push esi
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46ac17
push ebp
mov ebp esp
mov eax 0x10010
call sub_431ac0
push ebx
push esi
push edi
push 0x1
mov ebx ecx
call [ SetErrorMode@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_409997
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
inc [ eax ]
call sub_463f6d
xor edi edi
lea eax [ ebp - 0x10010 ]
push edi
push edi
push edi
push edi
push edi
push 0x7fff
push eax
push [ ebp - 0x10 ]
call [ GetVolumeInformationW@IAT ]
mov ecx [ ebp + 0xc ]
test eax eax
je r-xdata
push r--data
call sub_409bf8
mov eax [ ebx ]
push edi
push 0x1
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
lea eax [ ebp - 0x10010 ]
push eax
call sub_409bf8
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405a64
push esi
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46acca
push ebp
mov ebp esp
mov eax 0x10014
call sub_431ac0
push ebx
push esi
push edi
push 0x1
mov ebx ecx
call [ SetErrorMode@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_409997
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
inc [ eax ]
call sub_463f6d
xor edi edi
lea eax [ ebp - 0x4 ]
push edi
push edi
push edi
push edi
push eax
push 0x7fff
lea eax [ ebp - 0x10014 ]
push eax
push [ ebp - 0x14 ]
call [ GetVolumeInformationW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
mov eax [ ebx ]
push edi
push 0x1
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10014 ]
push r--data
push eax
call sub_423818
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10014 ]
add esp 0xc
push eax
call sub_409bf8
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405a64
push esi
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46ad9c
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
push 0x1
mov [ ebp - 0x4 ] ecx
call [ SetErrorMode@IAT ]
mov ebx [ ebp + 0xc ]
mov esi eax
push r--data
mov ecx ebx
call sub_409bf8
mov edi [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp + 0xc ] eax
cmp [ edi + 0x8 ] eax
jbe r-xdata
mov eax [ edi + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_409997
mov ecx [ edi + 0x8 ]
push r--data
mov eax [ ecx ]
mov [ ebp - 0x24 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
inc [ eax ]
call sub_407f41
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x4 ]
mov ecx [ ecx ]
call sub_409c42
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov [ ebp + 0xc ] eax
cmp eax 0x1
jl r-xdata
lea ecx [ ebp - 0x24 ]
call sub_463f6d
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407c8e
push r--data
lea ecx [ ebp - 0x14 ]
call sub_407886
push r--data
lea ecx [ ebp - 0x14 ]
call sub_407e0b
mov eax [ edi + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_409997
push [ edi + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_407c8e
jmp r-xdata
xor eax eax
inc eax
mov [ ebp + 0xc ] eax
cmp eax 0x3
jle r-xdata
cmp eax 0x2
jne r-xdata
push [ ebp - 0x24 ]
call [ GetDriveTypeW@IAT ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0xc ]
xor edi edi
inc edi
cmp eax edi
jne r-xdata
cmp eax 0x3
jne r-xdata
mov ecx [ ebp - 0x14 ]
call sub_463e26
cmp eax 0x80004005
jne r-xdata
mov edx [ ebp - 0x4 ]
push 0x0
push edi
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
dec eax
dec eax
je r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405a64
lea ecx [ ebp - 0x24 ]
call sub_405a64
push esi
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x14 ]
lea edx [ ebp + 0x8 ]
call sub_463da5
test al al
je r-xdata
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
call sub_463eb6
cmp eax 0x80004005
je r-xdata
push r--data
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xf
ja r-xdata
push r--data
jmp r-xdata
mov ecx ebx
push r--data
jmp r-xdata
dec eax
je r-xdata
jmp [ eax * 4 + jump_table_46aff8 ]
push r--data
jmp r-xdata
dec eax
je r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
push r--data
jmp r-xdata
mov ecx ebx
dec eax
je r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
call sub_409bf8
jmp r-xdata
sub_46b038
push ebp
mov ebp esp
sub esp 0x238
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
mov [ ebp - 0x8 ] 0x100
push esi
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
xor ecx ecx
mov [ ebp - 0x4 ] ecx
push edi
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_41fe06
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] edi
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_41fe06
cmp [ ebp - 0x10 ] 0x2
mov [ ebp - 0x14 ] eax
jbe r-xdata
mov esi [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
mov esi eax
mov [ ebp - 0x4 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x28 ] edi
cmp ax dx
jne r-xdata
push 0x3
push r--data
push edi
call sub_42394b
add esp 0xc
neg eax
sbb eax eax
xor ecx ecx
add eax 0x2
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x24 ] eax
movzx eax [ edi ]
push 0x2a
pop edx
test ax ax
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax 0x4
jae r-xdata
or esi 0x80
mov [ ebp - 0x4 ] esi
cmp [ edi ] dx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x238 ]
push eax
push esi
push ecx
push ecx
lea eax [ ebp - 0x38 ]
push eax
push ecx
jmp r-xdata
call sub_409997
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
lea ecx [ ebp - 0xc ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
lea ecx [ ebp - 0x238 ]
push ecx
mov ecx [ ebp - 0x4 ]
push ecx
push edi
push [ eax ]
call sub_409997
mov eax [ esi + 0x8 ]
lea ecx [ ebp - 0xc ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
lea ecx [ ebp - 0x238 ]
push ecx
mov ecx [ ebp - 0x4 ]
push ecx
push [ eax ]
push 0x0
jmp r-xdata
call [ WNetUseConnectionW@IAT ]
mov edi [ ebp + 0xc ]
mov esi eax
test esi esi
je r-xdata
mov esi [ ebp - 0x18 ]
push 0x2a
pop eax
cmp [ esi ] ax
jne r-xdata
mov ecx edi
call sub_409a20
xor ecx ecx
xor eax eax
inc ecx
mov [ edi ] eax
mov [ edi + 0xc ] ecx
cmp esi 0x5
jne r-xdata
lea eax [ ebp - 0x38 ]
push eax
push 0x0
push esi
call j_sub_422ed5#3
push [ ebp - 0x14 ]
call j_sub_422ed5#3
pop ecx
pop ecx
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
test [ ebp - 0xc ] 0x100
mov ecx edi
je r-xdata
cmp esi 0x55
je r-xdata
push eax
push 0x2
jmp r-xdata
push r--data
lea eax [ ebp - 0x238 ]
push eax
jmp r-xdata
push eax
push 0x3
cmp esi 0x4b2
je r-xdata
mov eax [ ebx ]
call sub_409bf8
push eax
cmp esi 0x4b0
jne r-xdata
cmp esi 0x43
jne r-xdata
push 0x4
jmp r-xdata
mov eax [ ebx ]
cmp esi 0x56
jne r-xdata
push 0x5
jmp r-xdata
push ecx
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov eax [ ebx ]
push 0x0
push esi
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_41fea1
jmp r-xdata
push 0x6
jmp r-xdata
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
sub_46b249
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
mov edi ecx
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push 0x1
push 0x1
push [ eax ]
call [ WNetCancelConnection2W@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
push 0xa
call [ Sleep@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov eax [ edi ]
push 0x0
push ebx
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
sub_46b2a9
push ebp
mov ebp esp
sub esp 0x804
mov eax [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x4 ] 0x400
mov edi ecx
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x804 ]
push ecx
push [ eax ]
call [ WNetGetConnectionW@IAT ]
mov ecx [ ebp + 0xc ]
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x804 ]
push eax
call sub_409bf8
push r--data
call sub_409bf8
mov eax [ edi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov eax [ edi ]
push 0x0
push esi
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
jmp r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_46b32c
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push 0x1
call [ SetErrorMode@IAT ]
mov ebx [ ebp + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_409997
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
inc [ eax ]
call sub_463f6d
mov eax [ ebx + 0x4 ]
mov edi [ eax + 0x4 ]
mov ecx edi
call sub_409997
mov eax [ edi + 0x8 ]
push [ eax ]
push [ ebp - 0x10 ]
call [ SetVolumeLabelW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405a64
push esi
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi [ ebp + 0xc ]
mov ecx edi
call sub_409a20
and [ edi ] 0x0
mov [ edi + 0xc ] 0x1
sub_46b3bf
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x4 ] ecx
inc edi
push edi
call [ SetErrorMode@IAT ]
mov ebx [ ebp + 0xc ]
mov esi eax
mov ecx ebx
call sub_409a20
mov eax [ ebp + 0x8 ]
and [ ebx ] 0x0
mov [ ebx + 0xc ] edi
mov eax [ eax + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_409997
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x30 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x2c ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x24 ] eax
inc [ eax ]
call sub_463f6d
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x30 ]
call [ GetDiskFreeSpaceExW@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
push 0x0
push 0x1
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
fild [ ebp - 0x10 ]
mov ecx ebx
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fmul [ r--data ]
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
fstp [ ebx ]
mov [ ebx + 0xc ] 0x3
jmp r-xdata
lea ecx [ ebp - 0x30 ]
call sub_405a64
push esi
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46b487
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x4 ] ecx
inc edi
push edi
call [ SetErrorMode@IAT ]
mov ebx [ ebp + 0xc ]
mov esi eax
mov ecx ebx
call sub_409a20
mov eax [ ebp + 0x8 ]
and [ ebx ] 0x0
mov [ ebx + 0xc ] edi
mov eax [ eax + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_409997
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x30 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x2c ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x24 ] eax
inc [ eax ]
call sub_463f6d
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push [ ebp - 0x30 ]
call [ GetDiskFreeSpaceExW@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
push 0x0
push 0x1
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
fild [ ebp - 0x10 ]
mov ecx ebx
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fmul [ r--data ]
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
fstp [ ebx ]
mov [ ebx + 0xc ] 0x3
jmp r-xdata
lea ecx [ ebp - 0x30 ]
call sub_405a64
push esi
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46b54f
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
push 0x1
mov ebx ecx
call [ SetErrorMode@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_409997
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x1c ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
inc [ eax ]
call sub_463f6d
xor edi edi
cmp [ ebp - 0x18 ] 0x3
jne r-xdata
push 0x3
pop edi
push 0x1
lea ecx [ ebp - 0x1c ]
call sub_407b52
cmp [ eax ] 0x3a
jne r-xdata
push r--data
sub eax 0x3
je r-xdata
push 0x2
lea ecx [ ebp - 0x1c ]
call sub_407b52
cmp [ eax ] 0x5c
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_405a64
push esi
call [ SetErrorMode@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebx ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
push r--data
jmp r-xdata
sub eax 0x10
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x1c ]
call [ GetDiskFreeSpaceW@IAT ]
test eax eax
jne r-xdata
call sub_409bf8
jmp r-xdata
push r--data
jmp r-xdata
dec eax
dec eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax edi
sub eax 0x0
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push r--data
push r--data
jmp r-xdata
call sub_409bf8
test edi edi
je r-xdata
sub_46b65a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push [ eax ]
call [ SetCurrentDirectoryW@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
sub_46b697
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push 0xffffffff
mov esi ecx
mov eax [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp + 0x8 ]
push eax
call sub_46f600
test al al
jne r-xdata
mov eax [ esi + 0x194 ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ eax + edi * 4 ]
mov eax [ eax ]
cmp [ eax ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
push [ eax + 0x8 ]
call [ FindClose@IAT ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x194 ]
mov eax [ eax + edi * 4 ]
pop edi
and [ eax ] 0x0
push ecx
call sub_469c53
mov eax [ esi + 0x194 ]
mov eax [ eax + edi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
push ecx
call sub_405a1a
jmp r-xdata
sub_46b71f
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ esp + 0xc ] bl
cmp [ edi + 0x8 ] 0x3
jb r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
test al 0x1
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx ebx
call sub_409a20
and [ ebx ] 0x0
mov [ ebx + 0xc ] 0x1
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
test al 0x8
je r-xdata
mov [ esp + 0xc ] 0x1
lea ecx [ esp + 0x10 ]
call sub_4077c7
lea ecx [ esp + 0x20 ]
call sub_4077c7
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea eax [ esp + 0x20 ]
push ebx
push ebx
push eax
lea edx [ esp + 0x1c ]
call sub_4046f9
add esp 0xc
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x10 ]
push eax
call sub_407c8e
cmp [ esp + 0x14 ] ebx
je r-xdata
mov ebx [ ebp + 0xc ]
lea ecx [ esp + 0x10 ]
call sub_463c7b
test al al
jne r-xdata
call sub_405a64
lea ecx [ esp + 0x10 ]
call sub_405a64
jmp r-xdata
call sub_405a64
lea ecx [ esp + 0x10 ]
call sub_405a64
jmp r-xdata
push [ esp + 0x10 ]
lea ecx [ esp + 0x34 ]
call sub_407f41
lea ecx [ esp + 0x30 ]
call sub_463a6e
mov bl al
lea ecx [ esp + 0x30 ]
neg bl
sbb bl bl
call sub_405a64
inc bl
mov ebx [ ebp + 0xc ]
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov edx edi
push 0x0
push [ esp + 0x10 ]
call sub_463833
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx ebx
call sub_409c9c
lea ecx [ esp + 0x20 ]
test eax eax
jne r-xdata
mov ecx ebx
call sub_409a20
and [ ebx ] 0x0
mov [ ebx + 0xc ] 0x1
jmp r-xdata
sub_46b880
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x4 ] 0x0
cmp [ ebx + 0x8 ] 0x2
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_464ad8
test al al
mov eax [ ebx + 0x4 ]
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
cmp eax 0x1
jne r-xdata
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push 0x0
push edi
push [ eax ]
call [ CreateHardLinkW@IAT ]
mov edi [ ebp + 0xc ]
mov esi eax
mov ecx edi
call sub_409a20
mov ecx edi
mov [ edi + 0xc ] 0x1
mov [ edi ] esi
call sub_409c9c
test eax eax
jne r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push [ ebp - 0x4 ]
mov eax [ esi + 0x8 ]
push edi
push [ eax ]
call sub_46a279
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
jmp r-xdata
mov [ ebp - 0x4 ] al
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push [ eax ]
call [ DeleteFileW@IAT ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push 0x0
push edi
push [ eax ]
call [ CreateHardLinkW@IAT ]
mov edi [ ebp + 0xc ]
mov esi eax
mov ecx edi
call sub_409a20
mov [ edi + 0xc ] 0x1
mov [ edi ] esi
sub_46b9c7
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov ebx [ eax + 0x8 ]
xor edi edi
mov eax [ eax + 0x4 ]
mov [ esp + 0x14 ] ebx
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea edx [ esp + 0x20 ]
mov eax [ ecx ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x24 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x28 ] eax
mov eax [ ecx + 0xc ]
mov ecx edx
mov [ esp + 0x2c ] eax
inc [ eax ]
call sub_4048ae
mov esi [ esp + 0x24 ]
lea ecx [ esp + 0x20 ]
push 0xffffffff
push 0xffffffff
push 0xffffffff
push 0x1
push 0x2
push r--data
call sub_45f479
cmp eax esi
jne r-xdata
push 0x0
call [ CoInitialize@IAT ]
lea eax [ esp + 0x10 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jns r-xdata
push r--data
lea ecx [ esp + 0x24 ]
call sub_407e0b
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x8 ]
mov edx [ ecx ]
push [ eax ]
push ecx
call [ edx + 0x50 ]
cmp ebx 0x2
jbe r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] edi
mov [ esi + 0xc ] 0x1
call [ CoUninitialize@IAT ]
jmp r-xdata
cmp ebx 0x3
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x8 ]
mov edx [ ecx ]
push [ eax ]
push ecx
call [ edx + 0x24 ]
lea ecx [ esp + 0x20 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx 0x4
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409997
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x8 ]
mov edx [ ecx ]
push [ eax ]
push ecx
call [ edx + 0x2c ]
cmp ebx 0x5
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_409997
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x8 ]
mov edx [ ecx ]
push [ eax ]
push ecx
call [ edx + 0x1c ]
mov edx [ ebp + 0x8 ]
cmp ebx 0x6
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x14 ]
mov ecx esi
call sub_409997
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x8 ]
push 0x0
mov edx [ ecx ]
push [ eax ]
push ecx
call [ edx + 0x44 ]
cmp ebx 0x7
jbe r-xdata
mov eax [ edx + 0x4 ]
mov esi [ eax + 0x18 ]
mov ecx esi
call sub_409399
test al al
je r-xdata
cmp ebx 0x8
jbe r-xdata
mov eax [ edx + 0x4 ]
mov esi [ eax + 0x14 ]
mov ecx esi
mov ebx [ eax + 0x1c ]
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx ebx
mov esi [ eax ]
mov eax [ esp + 0x10 ]
mov edi [ eax ]
call sub_409c9c
push eax
push esi
push [ esp + 0x18 ]
call [ edi + 0x44 ]
mov ebx [ esp + 0x14 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x30 ]
push [ eax ]
call sub_407f41
lea eax [ esp + 0xf ]
push eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x15 ]
push eax
lea eax [ esp + 0x1a ]
push eax
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x44 ]
push eax
call sub_42017b
lea ecx [ esp + 0x30 ]
lea ebx [ eax - 0x1 ]
neg bl
sbb bl bl
call sub_405a64
inc bl
je r-xdata
mov eax [ esp + 0x10 ]
lea edx [ esp + 0x18 ]
push edx
push r--data
push eax
mov ecx [ eax ]
call [ ecx ]
test eax eax
js r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x20 ]
mov eax [ esp + 0x10 ]
mov esi [ eax ]
call sub_409c9c
push eax
push [ esp + 0x14 ]
call [ esi + 0x3c ]
mov edx [ ebp + 0x8 ]
mov ebx [ esp + 0x14 ]
mov cl [ esp + 0xc ]
test cl cl
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov eax [ esp + 0x18 ]
xor ebx ebx
inc ebx
push ebx
push [ esp + 0x24 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
test eax eax
jns r-xdata
mov al [ esp + 0xd ]
test al al
je r-xdata
push 0x4
pop edi
mov eax [ esp + 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] ebx
cmp [ esp + 0xe ] 0x0
je r-xdata
or edi 0x2
mov eax [ esp + 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
test al al
jne r-xdata
or edi 0x1
mov eax [ esp + 0x10 ]
shl edi 0x8
or edi [ esp + 0x1c ]
push edi
mov ecx [ eax ]
push eax
call [ ecx + 0x34 ]
test cl cl
jne r-xdata
or edi 0x6
sub_46bcb9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
call sub_463b56
test al al
jne r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
call [ GetLastError@IAT ]
push 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
sub_46bd0c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_463c8b
test al al
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
sub_46bd48
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x25c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
mov edi ecx
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x18 ]
push ecx
push [ eax ]
call [ FindFirstFileW@IAT ]
mov ebx eax
mov [ esp + 0x10 ] ebx
cmp ebx 0xffffffff
jne r-xdata
lea eax [ esp + 0x44 ]
push r--data
push eax
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
or [ esi ] ebx
mov [ esi + 0xc ] 0x1
jmp r-xdata
lea eax [ esp + 0x18 ]
push eax
push ebx
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x44 ]
push r--data
push eax
call sub_4236cc
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
mov eax [ edi ]
xor ebx ebx
inc ebx
push ebx
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov ecx [ esp + 0x10 ]
or [ esi ] 0xffffffff
push ecx
mov [ esi + 0xc ] ebx
call [ FindClose@IAT ]
mov ecx [ edi + 0x198 ]
xor ebx ebx
test ecx ecx
je r-xdata
push 0x20
cmp ebx ecx
jne r-xdata
mov edx [ edi + 0x194 ]
call sub_420f36
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_420f36
mov esi eax
pop ecx
test esi esi
je r-xdata
inc ebx
add edx 0x4
cmp ebx ecx
jb r-xdata
xor esi esi
lea ecx [ esi + 0xc ]
call sub_4077c7
jmp r-xdata
and [ esp + 0x14 ] 0x0
lea ecx [ esi + 0xc ]
call sub_4077c7
mov [ esp + 0x14 ] esi
jmp r-xdata
mov eax [ edx ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi + 0x194 ]
mov eax [ eax + ebx * 4 ]
mov [ eax ] esi
mov eax [ edi + 0x194 ]
mov ecx [ esp + 0x10 ]
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
mov [ eax ] 0x1
mov eax [ edi + 0x194 ]
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
mov [ eax + 0x8 ] ecx
lea eax [ esp + 0x44 ]
push eax
mov eax [ edi + 0x194 ]
mov eax [ eax + ebx * 4 ]
mov ecx [ eax ]
add ecx 0xc
call sub_407d2c
mov eax [ edi + 0x194 ]
mov esi [ ebp + 0xc ]
mov eax [ eax + ebx * 4 ]
mov ecx [ eax ]
mov eax [ esp + 0x18 ]
mov [ ecx + 0x1c ] eax
mov ecx esi
call sub_409a20
lea eax [ ebx + 0x1 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
lea ecx [ edi + 0x190 ]
call sub_46f656
jmp r-xdata
sub_46beec
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x274
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push 0x1
mov eax [ edi + 0x4 ]
push [ eax ]
lea eax [ esp + 0x24 ]
push eax
call sub_46f600
test al al
je r-xdata
mov eax [ esi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
jmp r-xdata
xor bl bl
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x194 ]
mov edi [ esp + 0x1c ]
mov ecx [ eax + edi * 4 ]
mov eax [ ecx ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
cmp eax 0x1
jne r-xdata
lea eax [ esp + 0x30 ]
push eax
mov eax [ ecx ]
push [ eax + 0x8 ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
add eax 0xc
push eax
call sub_409b9c
test bl bl
je r-xdata
mov bl al
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x5c ]
push eax
call sub_409bf8
test bl bl
je r-xdata
mov eax [ esi + 0x194 ]
mov eax [ eax + edi * 4 ]
mov eax [ eax ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea ecx [ esp + 0xc ]
call sub_4077c7
lea eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x194 ]
mov eax [ eax + edi * 4 ]
mov eax [ eax ]
push [ eax + 0x1c ]
call sub_46eae2
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x24 ]
call sub_4093ea
push ecx
lea eax [ esp + 0x24 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_45685a
lea ecx [ esp + 0x20 ]
call sub_409a20
lea ecx [ esp + 0xc ]
call sub_405a64
jmp r-xdata
test [ esp + 0x30 ] 0x10
je r-xdata
lea ecx [ esp + 0xc ]
call sub_4077c7
lea eax [ esp + 0xc ]
push eax
push [ esp + 0x34 ]
call sub_46eae2
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x24 ]
call sub_4093ea
push ecx
lea eax [ esp + 0x24 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_45685a
lea ecx [ esp + 0x20 ]
call sub_409a20
lea ecx [ esp + 0xc ]
call sub_405a64
jmp r-xdata
mov eax [ esi + 0x194 ]
mov eax [ eax + edi * 4 ]
mov ecx [ eax ]
add ecx 0xc
call sub_407eec
jmp r-xdata
mov eax [ esi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_41fea1
mov eax [ esi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_41fea1
sub_46c09b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push 0x0
mov esi ecx
mov eax [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp + 0x8 ]
push eax
call sub_46f600
test al al
je r-xdata
mov [ ebp + 0x8 ] 0x0
mov ecx [ esi + 0x194 ]
mov eax [ ebp + 0x8 ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
push [ eax ]
call [ FlushFileBuffers@IAT ]
test eax eax
setne [ ebp + 0x8 ]
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_409863
xor eax eax
pop esi
pop ebp
retn 0x8
sub_46c0ef
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x10
push esi
push edi
mov edi ecx
lea ecx [ esp + 0x8 ]
call sub_4077c7
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_46449b
cmp eax 0xffffffff
je r-xdata
mov eax [ edi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
lea ecx [ esp + 0x8 ]
push ecx
push eax
call sub_46eae2
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x8 ]
push eax
call sub_409b9c
lea ecx [ esp + 0x8 ]
call sub_405a64
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_46c160
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov eax [ esi + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x4
jne r-xdata
push 0x0
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_46f600
test al al
je r-xdata
push 0x38
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
or [ esi ] 0xffffffff
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov ecx [ edi + 0x194 ]
mov eax [ ebp - 0x4 ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax ]
mov ebx [ eax + 0x4 ]
xor ebx ebx
mov ecx eax
call sub_405906
mov ebx eax
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx ebx
call sub_405dcf
test ebx ebx
je r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
or edi 0x8000
mov ecx ebx
push edi
push [ esi + 0x8 ]
call sub_405956
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
sub eax 0x2
neg eax
sbb eax eax
and edi eax
cmp [ esi + 0x8 ] 0x2
mov edi 0x4000
jb r-xdata
push ecx
mov ecx ebx
call sub_405a1a
mov ecx ebx
call sub_405708
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x4
jne r-xdata
test ebx ebx
je r-xdata
push ecx
mov ecx ebx
call sub_405a1a
sub_46c25b
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov edx [ esi + 0x8 ]
mov eax [ edx ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x4 ] eax
inc [ eax ]
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
lea edx [ ebp - 0x10 ]
mov ecx edx
call sub_420911
cmp al 0x1
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
cmp eax 0x1
jne r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_409b9c
mov eax [ ebx ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_409b9c
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov ecx edx
call sub_4048ae
lea ecx [ ebp - 0x10 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46c307
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
xor ebx ebx
push ebx
mov esi ecx
push [ eax ]
lea eax [ ebp + 0x8 ]
push eax
call sub_46f600
test al al
je r-xdata
mov eax [ esi ]
xor edi edi
push ebx
inc edi
push edi
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] edi
mov [ esi ] ebx
mov ecx [ esi + 0x194 ]
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov eax [ ecx + eax * 4 ]
mov ecx esi
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov edi [ eax + 0x10 ]
mov ebx [ eax + 0x14 ]
call sub_409a20
mov [ esi + 0xc ] 0x2
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_46c37f
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov edx [ esi + 0x8 ]
mov eax [ edx ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x4 ] eax
inc [ eax ]
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
lea edx [ ebp - 0x10 ]
mov ecx edx
call sub_464836
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
cmp eax 0x1
jne r-xdata
mov eax [ ebx ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov ecx edx
call sub_4048ae
mov ecx [ ebp + 0xc ]
call sub_409b9c
lea ecx [ ebp - 0x10 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46c423
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
mov edi ecx
mov esi [ eax ]
mov ecx esi
call sub_409997
mov edx [ esi + 0x8 ]
lea ecx [ esp + 0x38 ]
push 0xffffffff
push 0xffffffff
push 0xffffffff
mov eax [ edx ]
mov ebx r--data
mov [ esp + 0x44 ] eax
mov eax [ edx + 0x4 ]
mov [ esp + 0x48 ] eax
mov eax [ edx + 0x8 ]
mov [ esp + 0x4c ] eax
mov eax [ edx + 0xc ]
push 0x1
push 0x2
mov [ esp + 0x58 ] eax
inc [ eax ]
mov esi [ esp + 0x50 ]
push ebx
call sub_45f479
cmp eax esi
jne r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
mov eax [ edi ]
xor ebx ebx
push ebx
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
lea ecx [ esp + 0x38 ]
call sub_463c7b
test al al
je r-xdata
push ebx
lea ecx [ esp + 0x3c ]
call sub_407e0b
lea ecx [ esp + 0x38 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
call [ CoInitialize@IAT ]
lea eax [ esp + 0xc ]
push eax
push r--data
push 0x1
push ebx
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
js r-xdata
call [ CoUninitialize@IAT ]
mov eax [ esp + 0xc ]
lea edx [ esp + 0x24 ]
push edx
push r--data
push eax
mov ecx [ eax ]
call [ ecx ]
test eax eax
js r-xdata
mov eax [ esp + 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ esp + 0x24 ]
push ebx
push [ esp + 0x3c ]
mov edx [ eax ]
push eax
call [ edx + 0x14 ]
test eax eax
js r-xdata
mov eax [ esp + 0x24 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_40942e
push 0x7
mov esi eax
push 0x1
push esi
call sub_4091b0
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x5c ]
add esp 0xc
mov edx [ ecx ]
push 0x2
push ebx
mov ebx 0x104
push ebx
push eax
push ecx
call [ edx + 0xc ]
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_407f41
push eax
lea ecx [ esp + 0x14 ]
call sub_4093ea
push 0x0
push 0x1
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_409040
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_409a20
lea ecx [ esp + 0x28 ]
call sub_405a64
mov eax [ esp + 0xc ]
lea edx [ esp + 0x50 ]
push ebx
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x20 ]
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_407f41
push eax
lea ecx [ esp + 0x14 ]
call sub_4093ea
push 0x1
push 0x1
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_409040
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_409a20
lea ecx [ esp + 0x28 ]
call sub_405a64
mov eax [ esp + 0xc ]
lea edx [ esp + 0x50 ]
push ebx
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x28 ]
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_407f41
push eax
lea ecx [ esp + 0x14 ]
call sub_4093ea
push 0x2
push 0x1
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_409040
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_409a20
lea ecx [ esp + 0x28 ]
call sub_405a64
mov eax [ esp + 0xc ]
lea edx [ esp + 0x50 ]
push ebx
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_407f41
push eax
lea ecx [ esp + 0x14 ]
call sub_4093ea
push 0x3
push 0x1
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_409040
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_409a20
lea ecx [ esp + 0x28 ]
call sub_405a64
mov eax [ esp + 0xc ]
lea edx [ esp + 0x4c ]
push edx
push ebx
lea edx [ esp + 0x58 ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0x40 ]
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_407f41
push eax
lea ecx [ esp + 0x14 ]
call sub_4093ea
push 0x4
push 0x1
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_409040
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_409a20
lea ecx [ esp + 0x28 ]
call sub_405a64
mov eax [ esp + 0x4c ]
xor ebx ebx
mov [ esp + 0x10 ] eax
xor eax eax
inc eax
mov [ esp + 0x18 ] ebx
push 0x5
push eax
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_409040
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_409a20
mov eax [ esp + 0xc ]
lea edx [ esp + 0x48 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ esp + 0x48 ]
mov [ esp + 0x10 ] eax
xor eax eax
mov [ esp + 0x18 ] ebx
inc eax
push 0x6
push eax
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_409040
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_409a20
mov eax [ edi ]
push ebx
push ebx
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
sub_46c75d
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x8 ]
sub esp 0x254
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov esi [ eax ]
mov edi ecx
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x10 ]
push ecx
push [ eax ]
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ FindClose@IAT ]
mov esi [ ebp + 0xc ]
xor edi edi
mov ebx [ esp + 0x2c ]
mov ecx esi
or edi [ esp + 0x30 ]
call sub_409a20
mov [ esi + 0xc ] 0x2
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46c7e8
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c4
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov [ esp + 0x58 ] ecx
push edi
mov eax [ ebx + 0x4 ]
xor edi edi
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x80 ]
push ecx
push [ eax ]
call [ FindFirstFileW@IAT ]
mov ecx eax
cmp ecx 0xffffffff
je r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
mov edx [ esp + 0x5c ]
push 0x0
push 0x1
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
mov eax [ esp + 0x84 ]
mov [ esp + 0x4c ] eax
mov eax [ esp + 0x88 ]
mov [ esp + 0x50 ] eax
mov eax [ esp + 0x8c ]
mov [ esp + 0x54 ] eax
mov eax [ esp + 0x90 ]
mov [ esp + 0x58 ] eax
mov eax [ esp + 0x94 ]
mov [ esp + 0x44 ] eax
mov eax [ esp + 0x98 ]
push ecx
mov [ esp + 0x4c ] eax
call [ FindClose@IAT ]
cmp [ ebx + 0x8 ] 0x1
jbe r-xdata
dec edi
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov edi eax
lea eax [ esp + 0x4c ]
push eax
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x50 ]
dec edi
je r-xdata
xor ebx ebx
inc ebx
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
xor ebx ebx
inc ebx
cmp eax ebx
jne r-xdata
lea eax [ esp + 0x54 ]
push eax
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x58 ]
jmp r-xdata
lea eax [ esp + 0x44 ]
push eax
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x48 ]
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
call sub_40942e
push 0x6
mov esi eax
push ebx
push esi
call sub_4091b0
movzx ecx [ esp + 0x30 ]
lea eax [ esp + 0x6c ]
push ecx
push r--data
push eax
call sub_423818
add esp 0x18
lea eax [ esp + 0x60 ]
lea ecx [ esp + 0x34 ]
push eax
call sub_407f41
push eax
lea ecx [ esp + 0x14 ]
call sub_4093ea
push 0x0
push ebx
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_409040
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_409a20
lea ecx [ esp + 0x34 ]
call sub_405a64
movzx eax [ esp + 0x26 ]
mov edi r--data
push eax
lea eax [ esp + 0x64 ]
push edi
push eax
call sub_423818
add esp 0xc
lea eax [ esp + 0x60 ]
lea ecx [ esp + 0x34 ]
push eax
call sub_407f41
push eax
lea ecx [ esp + 0x14 ]
call sub_4093ea
push ebx
push ebx
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_409040
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_409a20
lea ecx [ esp + 0x34 ]
call sub_405a64
movzx eax [ esp + 0x2a ]
push eax
lea eax [ esp + 0x64 ]
push edi
push eax
call sub_423818
add esp 0xc
lea eax [ esp + 0x60 ]
lea ecx [ esp + 0x34 ]
push eax
call sub_407f41
push eax
lea ecx [ esp + 0x14 ]
call sub_4093ea
push 0x2
push ebx
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_409040
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_409a20
lea ecx [ esp + 0x34 ]
call sub_405a64
movzx eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x64 ]
push edi
push eax
call sub_423818
add esp 0xc
lea eax [ esp + 0x60 ]
lea ecx [ esp + 0x34 ]
push eax
call sub_407f41
push eax
lea ecx [ esp + 0x14 ]
call sub_4093ea
push 0x3
push ebx
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_409040
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_409a20
lea ecx [ esp + 0x34 ]
call sub_405a64
movzx eax [ esp + 0x2e ]
push eax
lea eax [ esp + 0x64 ]
push edi
push eax
call sub_423818
add esp 0xc
lea eax [ esp + 0x60 ]
lea ecx [ esp + 0x34 ]
push eax
call sub_407f41
push eax
lea ecx [ esp + 0x14 ]
call sub_4093ea
push 0x4
push ebx
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_409040
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_409a20
lea ecx [ esp + 0x34 ]
call sub_405a64
movzx eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x64 ]
push edi
push eax
call sub_423818
add esp 0xc
lea eax [ esp + 0x60 ]
lea ecx [ esp + 0x34 ]
push eax
call sub_407f41
push eax
lea ecx [ esp + 0x14 ]
call sub_4093ea
push 0x5
push ebx
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_409040
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_409a20
lea ecx [ esp + 0x34 ]
call sub_405a64
jmp r-xdata
movzx eax [ esp + 0x30 ]
push eax
movzx eax [ esp + 0x32 ]
push eax
movzx eax [ esp + 0x34 ]
push eax
movzx eax [ esp + 0x36 ]
push eax
movzx eax [ esp + 0x36 ]
push eax
movzx eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0x78 ]
push r--data
push eax
call sub_423818
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x80 ]
add esp 0x20
push eax
call sub_409bf8
jmp r-xdata
push eax
call [ FileTimeToSystemTime@IAT ]
cmp [ ebx + 0x8 ] 0x2
jbe r-xdata
sub_46cb5f
push ebp
mov ebp esp
sub esp 0x408
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x4 ] ecx
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov edi r--data
jmp r-xdata
push r--data
push edi
call sub_4236cc
pop ecx
pop ecx
mov ecx [ ebp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x408 ]
push eax
call sub_409bf8
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
lea edx [ ebp - 0x408 ]
push edi
mov ecx [ eax ]
call sub_4644db
pop ecx
cmp al 0x1
jne r-xdata
push r--data
push r--data
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_409bf8
mov edx [ ebp - 0x4 ]
push 0x0
push 0x1
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
sub_46cc06
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x84
push ebx
push esi
xor eax eax
push edi
mov edi ecx
mov [ esp + 0x84 ] eax
lea ecx [ esp + 0x18 ]
mov [ esp + 0x14 ] edi
mov [ esp + 0x88 ] eax
mov [ esp + 0x8c ] al
call sub_4077c7
lea ecx [ esp + 0x28 ]
call sub_4077c7
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x8 ] 0x3
jne r-xdata
xor ecx ecx
mov [ esp + 0x10 ] cl
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
test eax eax
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_405a64
lea ecx [ esp + 0x18 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ edi + 0xb4 ] 0x2
jne r-xdata
mov [ esp + 0x10 ] 0x1
jmp r-xdata
push 0x1
push [ edi + 0xc8 ]
lea ecx [ esp + 0x80 ]
call sub_404f3d
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
lea ecx [ esp + 0x1c ]
call sub_4081a7
mov esi r--data
lea ecx [ esp + 0x18 ]
push esi
call sub_4654f1
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov edx r--data
call sub_420c63
test al al
jne r-xdata
lea ecx [ esp + 0x48 ]
call sub_4077c7
lea ecx [ esp + 0x68 ]
call sub_4077c7
lea ecx [ esp + 0x58 ]
call sub_4077c7
lea ecx [ esp + 0x38 ]
call sub_4077c7
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x60 ]
push eax
lea edx [ esp + 0x74 ]
call sub_4046f9
add esp 0xc
lea ecx [ esp + 0x18 ]
xor eax eax
push eax
call sub_407b52
xor ecx ecx
cmp [ eax ] cx
jne r-xdata
push 0x2
push [ edi + 0xc8 ]
lea ecx [ esp + 0x80 ]
call sub_404f3d
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
lea ecx [ esp + 0x2c ]
call sub_4081a7
mov ecx [ esp + 0x28 ]
call sub_464ad8
test al al
je r-xdata
lea eax [ edi + 0xd8 ]
push eax
lea ecx [ esp + 0x1c ]
call sub_4081a7
push esi
lea ecx [ esp + 0x1c ]
call sub_407e0b
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
lea ecx [ esp + 0x1c ]
call sub_407c8e
lea eax [ esp + 0x68 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_4081a7
lea eax [ esp + 0x58 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_407c8e
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_407c8e
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_407c8e
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea eax [ esp + 0x48 ]
push eax
lea edx [ esp + 0x2c ]
call sub_4640b2
pop ecx
lea ecx [ esp + 0x48 ]
call sub_463c7b
cmp al 0x1
jne r-xdata
push ecx
lea ecx [ esp + 0x3c ]
call sub_407b52
xor ecx ecx
cmp [ eax ] cx
jne r-xdata
xor ebx ebx
push ebx
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov edx [ esi + 0x8 ]
lea ecx [ esp + 0x18 ]
xor ebx ebx
push ebx
push [ esp + 0x14 ]
call sub_463833
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ esp + 0x2c ]
lea ecx [ esp + 0x28 ]
dec eax
push eax
call sub_407b52
cmp [ eax ] 0x5c
je r-xdata
test al al
jne r-xdata
cmp [ esp + 0x10 ] al
je r-xdata
push r--data
lea ecx [ esp + 0x1c ]
call sub_407d2c
push r--data
lea ecx [ esp + 0x3c ]
call sub_407d2c
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor eax eax
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor eax eax
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov edi [ esp + 0x48 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push ecx
push edi
lea ecx [ esp + 0x80 ]
push [ eax ]
call sub_4691fe
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
jmp r-xdata
lea ecx [ esp + 0x78 ]
call sub_404faa
lea ecx [ esp + 0x38 ]
call sub_405a64
lea ecx [ esp + 0x58 ]
call sub_405a64
lea ecx [ esp + 0x68 ]
call sub_405a64
lea ecx [ esp + 0x48 ]
call sub_405a64
mov edx [ esp + 0x14 ]
xor ebx ebx
push ebx
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_41fea1
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] ebx
jmp r-xdata
mov [ esi + 0xc ] 0x1
sub_46cf72
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ esp + 0xc ] bl
cmp [ edi + 0x8 ] 0x3
jb r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
test al 0x1
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx ebx
call sub_409a20
and [ ebx ] 0x0
mov [ ebx + 0xc ] 0x1
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
test al 0x8
je r-xdata
mov [ esp + 0xc ] 0x1
lea ecx [ esp + 0x20 ]
call sub_4077c7
lea ecx [ esp + 0x30 ]
call sub_4077c7
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea eax [ esp + 0x30 ]
push ebx
push ebx
push eax
lea edx [ esp + 0x2c ]
call sub_4046f9
mov eax [ esp + 0x2c ]
lea ecx [ esp + 0x1c ]
mov [ esp + 0x1c ] eax
add esp 0xc
mov eax [ esp + 0x24 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x28 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x2c ]
mov [ esp + 0x1c ] eax
inc [ eax ]
lea eax [ esp + 0x30 ]
push eax
call sub_407c8e
cmp [ esp + 0x14 ] ebx
je r-xdata
mov ebx [ ebp + 0xc ]
lea ecx [ esp + 0x10 ]
call sub_463c7b
test al al
jne r-xdata
call sub_405a64
lea ecx [ esp + 0x30 ]
call sub_405a64
lea ecx [ esp + 0x20 ]
call sub_405a64
jmp r-xdata
call sub_405a64
lea ecx [ esp + 0x30 ]
call sub_405a64
lea ecx [ esp + 0x20 ]
call sub_405a64
jmp r-xdata
push [ esp + 0x10 ]
lea ecx [ esp + 0x44 ]
call sub_407f41
lea ecx [ esp + 0x40 ]
call sub_463a6e
mov bl al
lea ecx [ esp + 0x40 ]
neg bl
sbb bl bl
call sub_405a64
inc bl
mov ebx [ ebp + 0xc ]
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov edx edi
push 0x1
push [ esp + 0x10 ]
call sub_463833
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx ebx
call sub_409c9c
lea ecx [ esp + 0x10 ]
test eax eax
jne r-xdata
mov ecx ebx
call sub_409a20
and [ ebx ] 0x0
mov [ ebx + 0xc ] 0x1
jmp r-xdata
sub_46d107
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov [ esp + 0x14 ] ecx
mov [ esp + 0x10 ] ebx
cmp [ esi + 0x8 ] 0x2
jb r-xdata
mov edi [ ebp + 0xc ]
test bl 0x8
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov ebx eax
mov [ esp + 0x10 ] ebx
push 0x38
call sub_420f36
pop ecx
test eax eax
je r-xdata
test bl 0x3
je r-xdata
xor ecx ecx
mov [ esp + 0x10 ] ecx
mov ecx eax
call sub_405906
mov [ esp + 0x10 ] eax
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_4077c7
lea ecx [ esp + 0x38 ]
call sub_4077c7
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea eax [ esp + 0x38 ]
push 0x0
push 0x0
push eax
lea edx [ esp + 0x34 ]
call sub_4046f9
mov eax [ esp + 0x34 ]
lea ecx [ esp + 0x24 ]
mov [ esp + 0x24 ] eax
add esp 0xc
mov eax [ esp + 0x2c ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x30 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x34 ]
mov [ esp + 0x24 ] eax
inc [ eax ]
lea eax [ esp + 0x38 ]
push eax
call sub_407c8e
cmp [ esp + 0x1c ] 0x0
je r-xdata
mov ebx [ esp + 0x14 ]
xor esi esi
mov ecx [ ebx + 0x198 ]
test ecx ecx
je r-xdata
call [ GetLastError@IAT ]
mov edx [ esp + 0x14 ]
push 0x0
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_41fea1
test ebx ebx
je r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push ebx
push [ esi + 0x8 ]
mov ebx [ esp + 0x18 ]
mov ecx ebx
call sub_405956
test al al
jne r-xdata
mov ecx edi
call sub_409c9c
lea ecx [ esp + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
lea ecx [ esp + 0x18 ]
call sub_463c7b
test al al
jne r-xdata
push 0x20
cmp esi ecx
jne r-xdata
mov edx [ ebx + 0x194 ]
mov ecx edi
call sub_409a20
or [ edi ] 0xffffffff
jmp r-xdata
push ecx
mov ecx ebx
call sub_405a1a
xor ebx 0x8
call sub_405a64
lea ecx [ esp + 0x38 ]
call sub_405a64
lea ecx [ esp + 0x28 ]
call sub_405a64
mov esi [ ebp + 0x8 ]
call sub_405a64
lea ecx [ esp + 0x38 ]
call sub_405a64
lea ecx [ esp + 0x28 ]
call sub_405a64
jmp r-xdata
push [ esp + 0x18 ]
lea ecx [ esp + 0x4c ]
call sub_407f41
lea ecx [ esp + 0x48 ]
call sub_463a6e
mov bl al
lea ecx [ esp + 0x48 ]
neg bl
sbb bl bl
call sub_405a64
inc bl
je r-xdata
call sub_420f36
mov [ esp + 0x18 ] eax
pop ecx
test eax eax
je r-xdata
call sub_420f36
mov [ esp + 0x18 ] eax
pop ecx
test eax eax
je r-xdata
inc esi
add edx 0x4
cmp esi ecx
jb r-xdata
mov [ edi + 0xc ] 0x1
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ esp + 0x10 ]
mov ecx edi
call sub_409a20
or [ edi ] 0xffffffff
mov [ edi + 0xc ] 0x1
xor ecx ecx
lea ecx [ eax + 0xc ]
call sub_4077c7
mov ecx [ esp + 0x14 ]
jmp r-xdata
and [ esp + 0x14 ] 0x0
lea ecx [ eax + 0xc ]
call sub_4077c7
mov eax [ esp + 0x14 ]
mov [ esp + 0x14 ] eax
jmp r-xdata
mov eax [ edx ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x194 ]
mov eax [ eax + esi * 4 ]
mov [ eax ] ecx
mov eax [ ebx + 0x194 ]
mov ecx [ esp + 0x10 ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
and [ eax ] 0x0
mov eax [ ebx + 0x194 ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
mov [ eax + 0x4 ] ecx
mov ecx edi
call sub_409a20
lea eax [ esi + 0x1 ]
mov [ edi ] eax
lea eax [ esp + 0x14 ]
push eax
lea ecx [ ebx + 0x190 ]
call sub_46f656
jmp r-xdata
sub_46d3a0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx ecx
push edi
mov ecx esi
call sub_409a20
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x4
jne r-xdata
push edi
push eax
lea eax [ esp + 0x14 ]
mov ecx ebx
push eax
call sub_46f600
test al al
jne r-xdata
push 0x38
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov ecx [ ebx + 0x194 ]
mov eax [ esp + 0xc ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax ]
mov edi [ eax + 0x4 ]
jmp r-xdata
push edi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push 0x8000
push [ esi + 0x8 ]
mov ecx edi
call sub_405956
test al al
jne r-xdata
mov ecx eax
call sub_405906
mov edi eax
push 0x100
lea ecx [ esp + 0x24 ]
call sub_407b76
xor eax eax
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
mov eax [ ebx ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp r-xdata
mov esi [ ebp + 0xc ]
test edi edi
je r-xdata
cmp [ esp + 0x18 ] 0x0
mov ecx esi
jne r-xdata
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_403f84
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x0
push ecx
mov ecx edi
call sub_405a1a
lea eax [ esp + 0x10 ]
push eax
call sub_409890
mov eax [ ebx ]
push 0x0
push [ esp + 0x1c ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_41fea1
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov eax [ ebx ]
push 0x0
push 0x2
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp r-xdata
lea eax [ esp + 0x20 ]
mov ecx edi
push eax
call sub_4055ec
test al al
je r-xdata
lea ecx [ esp + 0x10 ]
call sub_404024
lea ecx [ esp + 0x20 ]
call sub_405a64
mov ecx edi
call sub_405dcf
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x4
jne r-xdata
push ecx
mov ecx edi
call sub_405a1a
sub_46d51d
push ebp
mov ebp esp
sub esp 0x22c
mov eax [ ebp + 0x8 ]
push esi
push edi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea eax [ ebp - 0x22c ]
push eax
mov edx 0x104
mov ecx [ ecx ]
call sub_4646af
lea eax [ ebp - 0x22c ]
push eax
call sub_422d7c
pop ecx
pop ecx
xor ecx ecx
mov [ ebp - 0x1c ] 0x3
mov [ ebp + eax * 2 - 0x22a ] cx
xor edi edi
lea eax [ ebp - 0x22c ]
mov [ ebp - 0xa ] edi
push 0x54
mov [ ebp - 0x18 ] eax
pop eax
mov [ ebp - 0x10 ] ax
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x6 ] edi
mov [ ebp - 0xe ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x14 ] edi
call [ SHFileOperationW@IAT ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
sub_46d5b8
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
push esi
cmp [ ecx + 0x8 ] eax
je r-xdata
push 0x7
push eax
push 0x0
call [ SHEmptyRecycleBinW@IAT ]
test eax eax
je r-xdata
mov eax [ ecx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov eax [ eax ]
xor eax eax
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
sub_46d619
push ebp
mov ebp esp
sub esp 0x250
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push esi
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
xor ecx ecx
mov [ ebp - 0xc ] ecx
push edi
mov esi [ eax ]
mov edi 0x200
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
push r--data
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
call sub_409bf8
xor eax eax
push eax
call [ CoInitialize@IAT ]
cmp [ ebp - 0x10 ] 0x3
mov esi [ ebp + 0x8 ]
jb r-xdata
lea ecx [ ebp - 0x28 ]
call sub_4077c7
mov eax [ ebp - 0x10 ]
cmp eax 0x4
jb r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
test al 0x1
je r-xdata
cmp eax 0x5
jb r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
lea ecx [ ebp - 0x28 ]
push [ eax ]
call sub_407d2c
mov eax [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
test al 0x2
je r-xdata
push 0x40
pop edi
xor ecx ecx
lea eax [ ebp - 0x8 ]
push eax
push ecx
push ecx
mov [ ebp - 0x8 ] ecx
call [ SHGetSpecialFolderLocation@IAT ]
mov esi [ ebp - 0x14 ]
xor eax eax
cmp [ esi ] ax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_4687da
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
test al 0x4
je r-xdata
or edi 0x40
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x1
xor eax eax
push eax
push r--data
call [ CoCreateInstance@IAT ]
mov esi [ CoTaskMemFree@IAT ]
test eax eax
js r-xdata
lea eax [ ebp + 0x8 ]
push eax
call [ SHGetDesktopFolder@IAT ]
test eax eax
jne r-xdata
or edi 0x10
xor eax eax
push 0x206
push eax
mov [ ebp - 0x250 ] ax
lea eax [ ebp - 0x24e ]
push eax
call sub_422f60
mov eax [ ebp - 0x8 ]
add esp 0xc
mov edx [ ebp - 0xc ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x250 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov edx [ ebp - 0x18 ]
push eax
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x34 ] sub_46a252
mov [ ebp - 0x38 ] edi
call [ SHBrowseForFolderW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ ebx ]
xor edi edi
push edi
push 0x1
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x14 ]
mov [ ebp + 0x8 ] edi
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x28 ]
test eax eax
js r-xdata
mov ecx esi
call sub_41fe06
mov ecx [ ebp + 0x8 ]
mov esi eax
xor eax eax
push eax
lea eax [ ebp - 0x8 ]
mov edx [ ecx ]
push eax
xor eax eax
push eax
push esi
push eax
push eax
push ecx
call [ edx + 0xc ]
push esi
call j_sub_422ed5#3
mov eax [ ebp + 0x8 ]
pop ecx
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
push eax
mov eax [ ebx ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x250 ]
push eax
call sub_409bf8
lea eax [ ebp - 0x250 ]
push eax
push edi
call [ SHGetPathFromIDListW@IAT ]
push edi
call esi
cmp [ ebp - 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
or eax 0x20
push eax
mov edx [ ecx ]
push ecx
call [ edx + 0x24 ]
mov eax [ ebp - 0x4 ]
push [ ebp - 0x28 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push edi
push edi
call [ SHCreateShellItem@IAT ]
mov eax [ ebp - 0x4 ]
push [ ebp - 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
test eax eax
js r-xdata
call [ CoUninitialize@IAT ]
lea ecx [ ebp - 0x28 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp - 0x8 ]
call esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x250 ]
push eax
call sub_409bf8
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0xc ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x50 ]
test eax eax
js r-xdata
mov eax [ ebp - 0xc ]
lea ecx [ ebp + 0x8 ]
push ecx
push 0x80028000
push eax
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
js r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_409bf8
push [ ebp + 0x8 ]
call esi
mov eax [ ebx ]
push edi
push edi
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
sub_46d925
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x20624
call sub_431ac0
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push esi
push edi
mov edi eax
mov [ esp + 0xc ] eax
mov eax [ ebx + 0x4 ]
mov [ esp + 0x2c ] ecx
mov [ esp + 0x10 ] edi
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
xor edx edx
inc edx
cmp [ ebx + 0x8 ] 0x3
mov [ esp + 0x28 ] edx
mov esi [ eax ]
jb r-xdata
xor eax eax
mov bl al
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
xor edx edx
inc edx
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea edx [ esp + 0x18 ]
mov eax [ ecx ]
mov [ esp + 0x18 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0xc ]
mov ecx edx
mov [ esp + 0x24 ] eax
inc [ eax ]
call sub_4048ae
lea eax [ esp + 0x430 ]
push eax
lea eax [ esp + 0x34 ]
push eax
lea eax [ esp + 0x238 ]
push eax
lea eax [ esp + 0x1063c ]
push eax
push [ esp + 0x28 ]
call sub_42426e
add esp 0x14
lea eax [ esp + 0x230 ]
push eax
lea eax [ esp + 0x10634 ]
push eax
call sub_422f0d
lea eax [ esp + 0x438 ]
push eax
lea eax [ esp + 0x3c ]
push eax
call sub_422f0d
add esp 0x10
lea eax [ esp + 0x630 ]
push eax
push 0x7fff
call [ GetCurrentDirectoryW@IAT ]
mov edi [ SetCurrentDirectoryW@IAT ]
lea eax [ esp + 0x10630 ]
push eax
call edi
test eax eax
je r-xdata
mov ecx [ esp + 0x28 ]
mov bl dl
xor eax eax
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor eax eax
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
jmp r-xdata
lea ecx [ esp + 0x30 ]
call sub_464ad8
test al al
je r-xdata
cmp eax 0x2d
jne r-xdata
add esi 0x2
mov ecx edx
jmp r-xdata
mov [ esp + 0x14 ] bl
cmp [ esi ] ax
je r-xdata
lea ecx [ esp + 0x18 ]
call sub_405a64
mov esi [ esp + 0x10 ]
lea eax [ esp + 0x30 ]
push eax
call [ GetFileAttributesW@IAT ]
mov ecx [ esp + 0xc ]
mov esi [ esp + 0x10 ]
not ecx
or eax esi
and eax ecx
push eax
lea eax [ esp + 0x34 ]
push eax
call [ SetFileAttributesW@IAT ]
test eax eax
jne r-xdata
movzx eax [ esi ]
cmp eax 0x52
je r-xdata
add esi 0x2
xor eax eax
mov ecx eax
lea eax [ esp + 0x630 ]
push eax
call edi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor eax eax
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
test bl bl
je r-xdata
lea eax [ esp + 0x630 ]
push eax
call edi
mov eax edx
cmp eax 0x72
je r-xdata
lea eax [ esp + 0x30 ]
push eax
call edi
lea eax [ esp + 0x30 ]
push r--data
push eax
call sub_422f3c
pop ecx
pop ecx
jmp r-xdata
or [ esp + 0xc ] eax
or edi eax
mov [ esp + 0x10 ] edi
jmp r-xdata
cmp eax 0x41
je r-xdata
push [ esp + 0x14 ]
mov ecx [ esp + 0x30 ]
lea eax [ esp + 0x34 ]
push [ esp + 0x10 ]
push esi
push eax
call sub_46f021
test al al
jne r-xdata
movzx eax [ esi ]
cmp eax 0x2b
jne r-xdata
add esi 0x2
xor eax eax
cmp [ esi ] ax
jne r-xdata
push 0x20
jmp r-xdata
cmp eax 0x61
je r-xdata
pop eax
jmp r-xdata
cmp eax 0x53
je r-xdata
cmp ecx edx
jne r-xdata
push 0x4
jmp r-xdata
cmp eax 0x73
je r-xdata
cmp eax 0x48
je r-xdata
push 0x2
cmp eax 0x68
je r-xdata
cmp eax 0x4e
je r-xdata
mov eax 0x80
jmp r-xdata
cmp eax 0x6e
je r-xdata
cmp eax 0x4f
je r-xdata
mov eax 0x1000
jmp r-xdata
cmp eax 0x6f
je r-xdata
cmp eax 0x54
je r-xdata
mov eax 0x100
jmp r-xdata
cmp eax 0x74
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor eax eax
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46dbd3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push 0x0
mov esi ecx
mov eax [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp + 0x8 ]
push eax
call sub_46f600
test al al
je r-xdata
mov [ ebp + 0x8 ] 0x0
push [ ebp + 0x8 ]
mov ecx [ esi + 0x194 ]
mov eax [ ebp + 0x8 ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_46339d
push [ esi ]
call [ SetEndOfFile@IAT ]
dec eax
neg eax
sbb eax eax
inc eax
push eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_409863
xor eax eax
pop esi
pop ebp
retn 0x8
sub_46dc2f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x0
mov edi ecx
mov eax [ esi + 0x4 ]
push [ eax ]
lea eax [ ebp + 0x8 ]
push eax
call sub_46f600
test al al
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] 0x0
push [ ebp + 0x8 ]
call sub_409863
mov eax [ esi + 0x4 ]
mov edx [ edi + 0x194 ]
push ebx
mov ecx [ eax + 0x8 ]
mov esi [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov ebx [ edx + eax * 4 ]
call sub_409c9c
mov ecx esi
mov edi eax
call sub_409d46
mov ecx [ ebx ]
push edi
push edx
push eax
mov ecx [ ecx + 0x4 ]
call sub_405c4e
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] al
push [ ebp + 0x8 ]
call sub_409863
pop ebx
jmp r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
sub_46dca6
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x20634
call sub_431ac0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ esp + 0x1c ] ecx
mov eax [ edi + 0x4 ]
mov ebx [ edi + 0x8 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ eax ]
xor eax eax
mov [ esp + 0xc ] eax
cmp ebx 0x3
jb r-xdata
cmp ebx 0x4
jb r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
test eax eax
js r-xdata
xor eax eax
mov bl al
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_409c9c
cmp eax 0x1
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
cmp eax 0x2
jg r-xdata
lea eax [ esp + 0x30 ]
push eax
call [ GetLocalTime@IAT ]
push eax
push 0x1
lea edx [ esp + 0x38 ]
mov ecx esi
call sub_4656a4
pop ecx
pop ecx
test al al
jne r-xdata
mov bl al
xor eax eax
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
mov [ esp + 0xc ] eax
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
lea ecx [ esp + 0x40 ]
call sub_464ad8
mov esi [ esp + 0xc ]
test al al
je r-xdata
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x34 ]
push eax
call [ SystemTimeToFileTime@IAT ]
lea eax [ esp + 0x14 ]
push eax
push eax
call [ LocalFileTimeToFileTime@IAT ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea edx [ esp + 0x20 ]
mov eax [ ecx ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x24 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x28 ] eax
mov eax [ ecx + 0xc ]
mov ecx edx
mov [ esp + 0x2c ] eax
inc [ eax ]
call sub_4048ae
lea eax [ esp + 0x240 ]
push eax
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x448 ]
push eax
lea eax [ esp + 0x1064c ]
push eax
push [ esp + 0x30 ]
call sub_42426e
add esp 0x14
lea eax [ esp + 0x440 ]
push eax
lea eax [ esp + 0x10644 ]
push eax
call sub_422f0d
lea eax [ esp + 0x248 ]
push eax
lea eax [ esp + 0x4c ]
push eax
call sub_422f0d
add esp 0x10
lea eax [ esp + 0x640 ]
push eax
push 0x7fff
call [ GetCurrentDirectoryW@IAT ]
mov edi [ SetCurrentDirectoryW@IAT ]
lea eax [ esp + 0x10640 ]
push eax
call edi
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov [ esp + 0x10 ] bl
cmp [ esi ] ax
je r-xdata
lea ecx [ esp + 0x20 ]
call sub_405a64
push [ esp + 0x10 ]
mov ecx [ esp + 0x20 ]
lea eax [ esp + 0x18 ]
push esi
push eax
lea eax [ esp + 0x4c ]
push eax
call sub_46f17e
test al al
jne r-xdata
push esi
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x44 ]
call sub_4643c6
pop ecx
test al al
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x640 ]
push eax
call edi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
test bl bl
je r-xdata
lea eax [ esp + 0x640 ]
push eax
call edi
lea eax [ esp + 0x40 ]
push eax
call edi
lea eax [ esp + 0x40 ]
push r--data
push eax
call sub_422f3c
pop ecx
pop ecx
sub_46df11
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
lea ecx [ esp + 0x4 ]
push ebx
push esi
push edi
call sub_4077c7
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea edx [ esp + 0x10 ]
call sub_4048ae
lea ecx [ esp + 0x10 ]
call sub_463c7b
test al al
jne r-xdata
cmp [ ebx + 0x8 ] 0x2
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
push [ esp + 0x10 ]
xor ebx ebx
push ebx
push ebx
cmp [ ebx + 0x8 ] 0x3
jne r-xdata
mov [ esi + 0xc ] 0x1
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] ebx
push [ esp + 0x10 ]
push ebx
push ebx
push ebx
call esi
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
push [ esp + 0x10 ]
xor ebx ebx
push ebx
push edi
jmp r-xdata
mov ecx [ ebx + 0x4 ]
push 0x29
mov ecx [ ecx + 0x8 ]
call sub_409dae
test al al
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x8 ]
mov esi [ WritePrivateProfileStringW@IAT ]
push [ eax ]
call esi
test eax eax
je r-xdata
sub_46dffe
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
lea ecx [ ebp - 0x18 ]
call sub_4077c7
push 0x1fffe
call sub_420f36
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_40538e
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea edx [ ebp - 0x18 ]
call sub_4048ae
mov eax [ edi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ebx [ eax ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
push [ ebp - 0x18 ]
mov eax [ esi + 0x8 ]
push 0xffff
push [ ebp - 0x8 ]
push ebx
push edi
push [ eax ]
call [ GetPrivateProfileStringW@IAT ]
push [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_409bf8
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
dec [ eax ]
jne r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405a64
xor eax eax
mov esp ebp
pop ebp
retn 0x8
push eax
call j_sub_422ed5#3
push [ ebp - 0x8 ]
call j_sub_422ed5#3
pop ecx
pop ecx
sub_46e0be
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x74
push ebx
push esi
mov [ esp + 0x20 ] ecx
lea ecx [ esp + 0x4c ]
push edi
call sub_4077c7
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea edx [ esp + 0x50 ]
call sub_4048ae
push 0xfffe
call sub_420f36
pop ecx
push eax
lea ecx [ esp + 0x2c ]
call sub_40538e
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
push [ esp + 0x50 ]
mov eax [ esi + 0x8 ]
mov ebx [ esp + 0x2c ]
push 0x7fff
push ebx
push [ eax ]
call [ GetPrivateProfileSectionW@IAT ]
mov [ esp + 0x1c ] eax
test eax eax
je r-xdata
mov edx [ esp + 0x24 ]
push 0x0
push 0x1
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
push 0x14
call sub_420f36
mov edi eax
xor ebx ebx
mov [ esp + 0x24 ] edi
pop ecx
test edi edi
je r-xdata
lea ecx [ esp + 0x50 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
call j_sub_422ed5#3
push ebx
call j_sub_422ed5#3
pop ecx
pop ecx
mov edi ebx
mov [ esp + 0x20 ] ebx
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
jmp r-xdata
mov edx [ esp + 0x24 ]
push ebx
push 0x1
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
mov edx [ esp + 0x28 ]
cmp [ esp + 0x1c ] 0x0
mov ecx edi
mov al bl
mov [ esp + 0x18 ] ecx
mov [ edi ] ebx
mov esi ebx
mov [ esp + 0x10 ] ebx
mov [ esp + 0xf ] al
jle r-xdata
mov eax [ esp + 0x2c ]
dec [ eax ]
jne r-xdata
cmp [ esp + 0x14 ] 0x3d
jne r-xdata
cmp [ ecx ] esi
jne r-xdata
cmp [ esp + 0x14 ] 0x0
jne r-xdata
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov al 0x1
mov [ esp + 0xf ] al
jmp r-xdata
inc esi
cmp esi [ esp + 0x1c ]
jl r-xdata
push 0xd
pop edi
mov [ edx + esi * 2 ] di
cmp [ ecx + 0x8 ] ebx
je r-xdata
test al al
jne r-xdata
movzx edi [ edx + esi * 2 ]
mov [ esp + 0x14 ] edi
cmp edi 0x3b
jne r-xdata
mov esi [ esp + 0x10 ]
mov edi [ esp + 0x20 ]
test esi esi
jle r-xdata
mov [ ecx + 0xc ] ebx
mov [ ecx + 0x8 ] ebx
mov [ ecx + 0x4 ] ebx
test al al
jne r-xdata
lea eax [ esi + 0x1 ]
mov [ ecx + 0x4 ] esi
mov [ ecx + 0x8 ] eax
mov al [ esp + 0xf ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_40942e
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] 0x5
jne r-xdata
inc [ esp + 0x10 ]
mov [ ecx + 0xc ] esi
cmp [ edx + esi * 2 + 0x2 ] bx
je r-xdata
mov ecx ebx
mov [ esp + 0x10 ] ebx
mov ecx [ eax ]
mov [ esp + 0x10 ] ecx
jmp r-xdata
mov al bl
mov [ esp + 0xf ] al
cmp [ edx + esi * 2 + 0x2 ] bx
je r-xdata
push 0x14
call sub_420f36
pop ecx
mov ecx eax
test ecx ecx
je r-xdata
lea ecx [ esp + 0x30 ]
call sub_405a64
lea ecx [ esp + 0x40 ]
call sub_405a64
jmp r-xdata
mov [ esp + 0x14 ] 0x1
push 0x2
lea eax [ esi + 0x1 ]
push eax
push 0x2
push ecx
call sub_4091b0
push ebx
push ebx
push 0x2
lea eax [ esp + 0x4c ]
mov [ esp + 0x4c ] esi
push eax
push [ esp + 0x30 ]
mov [ esp + 0x5c ] ebx
mov [ esp + 0x60 ] 0x1
call sub_409040
add esp 0x24
lea ecx [ esp + 0x30 ]
call sub_409a20
lea ecx [ esp + 0x40 ]
call sub_4077c7
lea ecx [ esp + 0x30 ]
call sub_4077c7
test esi esi
jle r-xdata
mov ecx ebx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] ebx
mov [ ecx + 0x8 ] ebx
mov [ ecx + 0xc ] ebx
mov [ ecx + 0x10 ] ebx
jmp r-xdata
mov ebx [ esp + 0x28 ]
jmp r-xdata
push 0xffffffff
push ebx
lea ecx [ esp + 0x48 ]
call sub_407e8c
mov eax [ edi + 0x4 ]
lea ecx [ esp + 0x40 ]
sub eax [ edi ]
push eax
push [ edi ]
push [ esp + 0x30 ]
call sub_4078ad
lea eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0x64 ]
call sub_4093ea
push ebx
push [ esp + 0x18 ]
lea eax [ esp + 0x68 ]
push 0x2
push eax
push [ esp + 0x20 ]
call sub_409040
add esp 0x14
lea ecx [ esp + 0x60 ]
call sub_409a20
push 0xffffffff
push ebx
lea ecx [ esp + 0x38 ]
call sub_407e8c
mov eax [ edi + 0xc ]
lea ecx [ esp + 0x30 ]
sub eax [ edi + 0x8 ]
push eax
push [ edi + 0x8 ]
push [ esp + 0x30 ]
call sub_4078ad
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x74 ]
call sub_4093ea
push 0x1
push [ esp + 0x18 ]
lea eax [ esp + 0x78 ]
push 0x2
push eax
push [ esp + 0x20 ]
call sub_409040
add esp 0x14
lea ecx [ esp + 0x70 ]
call sub_409a20
push edi
mov edi [ edi + 0x10 ]
call j_sub_422ed5#3
inc [ esp + 0x18 ]
pop ecx
dec esi
jne r-xdata
lea eax [ esi + 0x1 ]
mov [ ecx ] eax
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x28 ]
mov [ esp + 0x18 ] ecx
mov [ eax + 0x10 ] ecx
jmp r-xdata
sub_46e3ef
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
push ebx
push esi
push edi
mov edi ecx
lea ecx [ esp + 0x38 ]
call sub_4077c7
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea edx [ esp + 0x38 ]
call sub_4048ae
push 0xfffe
call sub_420f36
pop ecx
push eax
lea ecx [ esp + 0x24 ]
call sub_40538e
mov ebx [ esp + 0x20 ]
push 0xa
pop esi
push [ esp + 0x38 ]
mov [ ebx + 0x2 ] si
push 0x7fff
push ebx
call [ GetPrivateProfileSectionNamesW@IAT ]
mov [ esp + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ edi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
cmp [ ebx + 0x2 ] si
je r-xdata
lea ecx [ esp + 0x38 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
call j_sub_422ed5#3
push ebx
call j_sub_422ed5#3
pop ecx
pop ecx
push 0xc
call sub_420f36
mov edi eax
xor esi esi
mov [ esp + 0x20 ] edi
pop ecx
test edi edi
je r-xdata
mov edi esi
mov [ esp + 0x1c ] esi
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov ecx ebx
call sub_40942e
cmp [ ebx + 0xc ] 0x5
jne r-xdata
mov edi [ esp + 0x20 ]
mov edx [ esp + 0x18 ]
mov ecx edi
mov [ esp + 0x14 ] ecx
mov eax esi
mov [ edi ] esi
mov ebx esi
mov [ esp + 0x10 ] eax
test edx edx
jle r-xdata
mov ecx esi
mov [ esp + 0x14 ] esi
mov ecx [ ebx ]
mov [ esp + 0x14 ] ecx
jmp r-xdata
inc ebx
cmp ebx edx
jl r-xdata
inc eax
mov [ ecx + 0x4 ] ebx
push 0xd
mov [ esp + 0x14 ] eax
pop eax
push 0xc
mov [ edi + ebx * 2 ] ax
call sub_420f36
pop ecx
test eax eax
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_405a64
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_407eec
mov eax [ edi + 0x4 ]
lea ecx [ esp + 0x28 ]
sub eax [ edi ]
push eax
push [ edi ]
push ebx
call sub_4078ad
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x4c ]
call sub_4093ea
inc esi
lea eax [ esp + 0x48 ]
push esi
push 0x1
push eax
push [ esp + 0x20 ]
call sub_409040
add esp 0x10
lea ecx [ esp + 0x48 ]
call sub_409a20
push edi
mov edi [ edi + 0x8 ]
call j_sub_422ed5#3
pop ecx
cmp esi [ esp + 0x10 ]
jl r-xdata
mov ebx [ esp + 0x10 ]
lea eax [ ebx + 0x1 ]
push eax
push 0x1
push ecx
call sub_4091b0
xor eax eax
mov [ esp + 0x34 ] ebx
inc eax
mov [ esp + 0x3c ] esi
push esi
push eax
mov [ esp + 0x48 ] eax
lea eax [ esp + 0x3c ]
push eax
push [ esp + 0x2c ]
call sub_409040
add esp 0x1c
lea ecx [ esp + 0x28 ]
call sub_409a20
lea ecx [ esp + 0x28 ]
call sub_4077c7
test ebx ebx
mov ebx [ esp + 0x20 ]
jle r-xdata
cmp [ edi + ebx * 2 ] si
jne r-xdata
mov edi [ esp + 0x1c ]
mov eax esi
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
jmp r-xdata
mov eax [ esp + 0x24 ]
dec [ eax ]
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov [ ecx + 0x8 ] eax
mov ecx eax
lea eax [ ebx + 0x1 ]
mov [ esp + 0x14 ] ecx
mov [ ecx ] eax
mov eax [ esp + 0x10 ]
sub_46e5fd
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov ecx edi
call sub_409a20
mov ebx [ ebp + 0x8 ]
and [ edi ] 0x0
mov [ edi + 0xc ] 0x1
mov [ ebp + 0xf ] 0x0
cmp [ ebx + 0x8 ] 0x3
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x24 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x18 ] eax
inc [ eax ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea edx [ ebp - 0x24 ]
call sub_4048ae
push 0xfffe
call sub_420f36
pop ecx
push eax
lea ecx [ ebp - 0x14 ]
call sub_40538e
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
push [ ebp - 0x24 ]
mov eax [ esi + 0x8 ]
push 0x7fff
push [ ebp - 0x14 ]
push [ eax ]
call [ GetPrivateProfileSectionW@IAT ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
test eax eax
setg [ ebp + 0xf ]
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
dec [ eax ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
push [ ebp - 0x24 ]
mov eax [ esi + 0x8 ]
lea ecx [ ebp - 0xc ]
push 0x3
push ecx
push [ eax ]
call [ GetPrivateProfileSectionW@IAT ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x24 ]
call sub_405a64
xor eax eax
mov esp ebp
pop ebp
retn 0x8
push eax
call j_sub_422ed5#3
push [ ebp - 0x14 ]
call j_sub_422ed5#3
pop ecx
pop ecx
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
push [ ebp - 0x24 ]
mov eax [ esi + 0x8 ]
push [ ebp - 0x14 ]
push [ eax ]
call [ WritePrivateProfileSectionW@IAT ]
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
push [ ebp - 0x24 ]
mov eax [ esi + 0x8 ]
xor ebx ebx
mov esi [ WritePrivateProfileStringW@IAT ]
push ebx
push ebx
push [ eax ]
call esi
push [ ebp - 0x24 ]
push ebx
push ebx
push ebx
call esi
mov ecx edi
call sub_409a20
xor eax eax
inc eax
mov [ edi + 0xc ] eax
mov [ edi ] eax
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
xor eax eax
inc eax
push 0x0
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
jmp r-xdata
sub_46e77b
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
lea ecx [ ebp - 0x10 ]
call sub_4077c7
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea edx [ ebp - 0x10 ]
call sub_4048ae
mov eax [ edi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ebx [ eax ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
push [ ebp - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi [ WritePrivateProfileStringW@IAT ]
push ebx
push edi
push [ eax ]
call esi
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
push [ ebp - 0x10 ]
xor eax eax
push eax
push eax
push eax
call esi
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46e823
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi ecx
mov ecx ebx
call sub_409a20
and [ ebx ] 0x0
lea ecx [ ebp - 0x20 ]
mov [ ebx + 0xc ] 0x1
call sub_4077c7
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea edx [ ebp - 0x20 ]
call sub_4048ae
mov edx [ ebx + 0x4 ]
push 0x2
pop ebx
mov esi [ edx + 0x8 ]
cmp [ esi + 0xc ] 0x5
jne r-xdata
cmp [ esi + 0xc ] 0x4
jne r-xdata
mov eax [ esi ]
mov eax [ eax ]
cmp [ eax + 0x10c ] ebx
jne r-xdata
mov eax [ edi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
xor ecx ecx
mov eax [ eax + 0x4 ]
add eax 0x2
mul ebx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov edi [ ebp + 0x8 ]
mov ebx eax
pop ecx
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push 0xa
pop edx
push 0x2
mov ecx [ eax ]
mov eax ebx
mov [ ebp + 0x8 ] edx
pop esi
cmp [ esi + 0xc ] 0x5
jne r-xdata
movzx edx [ ecx ]
cmp dx [ ebp + 0x8 ]
jne r-xdata
add ecx esi
jmp r-xdata
xor ecx ecx
mov ecx [ esi ]
jmp r-xdata
test dx dx
je r-xdata
xor edx edx
jmp r-xdata
cmp [ ecx ] dx
jne r-xdata
mov edi [ ebp + 0x8 ]
xor ebx ebx
inc ebx
mov [ ebp - 0xc ] ebx
cmp [ edi + 0x8 ] 0x4
jb r-xdata
push ebx
call sub_408e6b
cmp eax ebx
jne r-xdata
xor ecx ecx
mov [ eax ] ecx
mov [ eax ] dx
add eax esi
add ecx esi
jmp r-xdata
mov eax [ edi + 0x4 ]
xor esi esi
mov [ ebp - 0x10 ] esi
mov eax [ eax + 0x8 ]
cmp [ eax + 0xc ] 0x5
jne r-xdata
mov ecx [ edx + 0xc ]
call sub_409c9c
mov ebx eax
mov [ ebp - 0xc ] ebx
test ebx ebx
jns r-xdata
push ebx
call j_sub_422ed5#3
pop ecx
jmp r-xdata
push [ ebp - 0x20 ]
xor eax eax
push eax
push eax
push eax
call [ WritePrivateProfileStringW@IAT ]
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] eax
and [ ebp - 0x4 ] esi
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor ebx ebx
inc ebx
mov [ ebp - 0xc ] ebx
lea ecx [ ebp - 0x20 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor ecx ecx
lea eax [ esi + 0x1 ]
push 0x2
pop esi
mul esi
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov ebx [ ebp - 0xc ]
mov edi eax
pop ecx
mov [ ebp - 0x10 ] eax
push 0x0
push edx
push 0x2
push 0x1
push ebx
call sub_408ea0
add esp 0x14
mov esi eax
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push 0x1
push [ ebp - 0x8 ]
mov edi [ eax + 0x4 ]
push 0x2
push 0x1
push ebx
call sub_408ea0
add esp 0x14
mov esi eax
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
add esi 0x2
mov eax [ eax + 0x4 ]
add eax edi
add esi eax
inc edx
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov ebx [ ebp - 0x10 ]
xor eax eax
mov [ edi ] ax
mov edi [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push ebx
push esi
push 0x1
push edx
call sub_408ea0
add esp 0x14
mov esi eax
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push 0x2
pop edx
mov eax [ eax ]
push 0x1
mov ecx ebx
mov [ ebp - 0x8 ] edx
call sub_408e6b
cmp edx eax
jge r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
push [ ebp - 0x20 ]
mov eax [ esi + 0x8 ]
push ebx
push [ eax ]
call [ WritePrivateProfileSectionW@IAT ]
test eax eax
je r-xdata
push 0x3d
pop eax
push 0x1
push ebx
push edx
push 0x1
push [ ebp - 0x4 ]
mov [ edi ] ax
add edi edx
call sub_408ea0
add esp 0x14
mov esi eax
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push 0x2
pop esi
mov eax [ eax ]
mov [ edi ] cx
add edi edx
add eax edx
jmp r-xdata
xor eax eax
mov [ edi ] ax
add edi esi
inc ebx
jmp r-xdata
mov [ edi ] cx
add edi esi
add eax esi
jmp r-xdata
movzx ecx [ eax ]
test cx cx
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx edx
push 0x1
call sub_408e6b
cmp ebx eax
jge r-xdata
movzx ecx [ eax ]
test cx cx
je r-xdata
sub_46eae2
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_407eec
mov ebx [ ebp + 0x8 ]
test bl 0x1
je r-xdata
test bl 0x20
je r-xdata
push r--data
mov ecx esi
call sub_407e0b
test bl 0x4
je r-xdata
push r--data
mov ecx esi
call sub_407e0b
test bl 0x2
je r-xdata
push r--data
mov ecx esi
call sub_407e0b
test bl bl
jns r-xdata
push r--data
mov ecx esi
call sub_407e0b
test bl 0x10
je r-xdata
push r--data
mov ecx esi
call sub_407e0b
test ebx 0x1000
je r-xdata
push r--data
mov ecx esi
call sub_407e0b
test ebx 0x800
je r-xdata
push r--data
mov ecx esi
call sub_407e0b
test ebx 0x100
je r-xdata
push r--data
mov ecx esi
call sub_407e0b
test ebx 0x4000
je r-xdata
push r--data
mov ecx esi
call sub_407e0b
pop esi
pop ebx
pop ebp
retn 0x8
push r--data
mov ecx esi
call sub_407e0b
sub_46ebaf
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xd4
push ebx
push esi
mov ebx ecx
lea ecx [ esp + 0x74 ]
push edi
call sub_4077c7
mov ecx [ ebp + 0xc ]
xor eax eax
push r--data
mov [ esp + 0x28 ] eax
call sub_409bf8
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x34 ] eax
mov [ esp + 0x48 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x4c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x50 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x54 ] eax
inc [ eax ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x28 ] eax
mov [ esp + 0x68 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x6c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x70 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x14 ]
mov [ esp + 0x74 ] eax
inc [ eax ]
call sub_4077c7
lea ecx [ esp + 0x38 ]
call sub_4077c7
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_41fe06
push eax
lea ecx [ esp + 0x30 ]
call sub_40538e
mov esi r--data
push esi
push [ esp + 0x30 ]
jmp r-xdata
call sub_4245a8
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ esp + 0x3c ]
call sub_407d2c
push r--data
lea ecx [ esp + 0x3c ]
call sub_4654f1
push r--data
lea ecx [ esp + 0x3c ]
mov [ esp + 0x10 ] eax
call sub_4654f1
mov esi eax
mov eax [ esp + 0xc ]
cmp eax 0xffffffff
je r-xdata
push esi
lea ecx [ esp + 0x18 ]
call sub_407e0b
xor esi esi
inc esi
cmp [ esp + 0x18 ] esi
jbe r-xdata
mov eax [ ebx ]
push 0x0
push 0x2
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp r-xdata
cmp esi 0xffffffff
je r-xdata
cmp [ ebp + 0x10 ] 0x6
jb r-xdata
push esi
lea ecx [ esp + 0x18 ]
call sub_407b52
cmp [ eax ] 0x7c
jne r-xdata
mov eax [ esp + 0x30 ]
dec [ eax ]
jne r-xdata
cmp esi eax
jb r-xdata
push 0x1fffe
call sub_420f36
pop ecx
push eax
lea ecx [ esp + 0x10 ]
call sub_40538e
cmp [ ebp + 0x10 ] 0x5
jb r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_4687da
mov [ esp + 0x24 ] eax
inc esi
cmp esi [ esp + 0x18 ]
jb r-xdata
push esi
lea ecx [ esp + 0x18 ]
call sub_407b52
xor ecx ecx
mov [ eax ] cx
lea ecx [ esp + 0x38 ]
call sub_405a64
lea ecx [ esp + 0x14 ]
call sub_405a64
lea ecx [ esp + 0x68 ]
call sub_405a64
lea ecx [ esp + 0x48 ]
call sub_405a64
lea ecx [ esp + 0x78 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
push eax
call j_sub_422ed5#3
pop ecx
push [ esp + 0x2c ]
call j_sub_422ed5#3
pop ecx
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x18 ]
call sub_407c8e
push r--data
lea ecx [ esp + 0x18 ]
call sub_407e0b
mov eax [ esp + 0xc ]
lea ecx [ esp + 0x78 ]
sub esi eax
dec esi
inc eax
push esi
push eax
lea eax [ esp + 0x40 ]
push eax
call sub_4079ab
lea eax [ esp + 0x78 ]
push eax
lea ecx [ esp + 0x18 ]
call sub_407c8e
mov esi r--data
lea ecx [ esp + 0x14 ]
push esi
call sub_407e0b
push esi
push 0x0
mov esi [ esp + 0xc ]
xor eax eax
mov [ esi ] ax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ esp + 0xc ]
push [ eax ]
push esi
call sub_422f3c
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
lea eax [ esp + 0x88 ]
mov [ esp + 0xbc ] esi
push eax
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
cmp eax 0x1f
jg r-xdata
push 0x58
lea eax [ esp + 0x8c ]
push 0x0
push eax
call sub_422f60
mov eax [ esp + 0x30 ]
add esp 0xc
cmp [ ebp + 0x10 ] 0x4
mov [ esp + 0x8c ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x94 ] eax
mov eax [ esp + 0x34 ]
mov [ esp + 0xb8 ] eax
mov eax [ esp + 0x28 ]
mov [ esp + 0xa4 ] esi
mov esi 0x80004
mov [ esp + 0x88 ] 0x58
mov [ esp + 0xa8 ] 0xffff
mov [ esp + 0xb4 ] eax
mov [ esp + 0xc4 ] r--data
jb r-xdata
call [ GetSaveFileNameW@IAT ]
test eax eax
je r-xdata
call [ GetOpenFileNameW@IAT ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
test eax eax
js r-xdata
xor eax eax
push eax
mov eax [ ebx ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
push [ esp + 0xa4 ]
push [ esp + 0xa4 ]
test esi 0x200
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
test al 0x10
je r-xdata
push eax
call j_sub_422ed5#3
pop ecx
push [ esp + 0xc ]
call j_sub_422ed5#3
pop ecx
mov eax [ esp + 0x10 ]
dec [ eax ]
jne r-xdata
mov ecx [ ebp + 0xc ]
call sub_409bf8
jmp r-xdata
call sub_422d7c
pop ecx
push [ esp + 0xa4 ]
lea ecx [ esp + 0x5c ]
mov esi eax
call sub_407f41
mov eax [ esp + 0xa4 ]
add eax 0x2
xor ebx ebx
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
test al 0x8
je r-xdata
add esi 0x2
lea eax [ eax + esi * 2 ]
mov [ esp + 0xa4 ] eax
cmp [ eax ] bx
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
test al 0x4
je r-xdata
or esi 0x2000
push eax
call sub_422d7c
lea ecx [ esp + 0x5c ]
mov [ esp ] r--data
mov esi eax
call sub_407e0b
push [ esp + 0xa4 ]
lea ecx [ esp + 0x5c ]
call sub_407e0b
mov eax [ esp + 0xa4 ]
add eax 0x2
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x58 ]
push eax
call sub_409b9c
lea ecx [ esp + 0x58 ]
call sub_405a64
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
test al 0x2
je r-xdata
or esi 0x200
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
test al 0x1
je r-xdata
or esi 0x800
or esi 0x1000
sub_46f021
push ebp
mov ebp esp
sub esp 0x25c
push ebx
push esi
push edi
mov edi [ FindFirstFileW@IAT ]
lea eax [ ebp - 0x258 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
xor bl bl
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
call [ FindClose@IAT ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
mov al bl
lea eax [ ebp - 0x258 ]
push eax
push r--data
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
lea eax [ ebp - 0x258 ]
push eax
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
mov bl 0x1
mov edi [ SetCurrentDirectoryW@IAT ]
mov ebx [ ebp - 0x4 ]
lea eax [ ebp - 0x22c ]
push eax
call [ GetFileAttributesW@IAT ]
mov ecx eax
mov eax [ ebp + 0x10 ]
or ecx [ ebp + 0xc ]
not eax
and ecx eax
lea eax [ ebp - 0x22c ]
push ecx
push eax
call [ SetFileAttributesW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x258 ]
push eax
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
call [ FindClose@IAT ]
xor al al
jmp r-xdata
mov bl 0x1
test [ ebp - 0x258 ] 0x10
je r-xdata
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea eax [ ebp - 0x22c ]
push eax
call edi
push [ ebp + 0x14 ]
mov ecx ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_46f021
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
push r--data
call edi
push esi
call [ FindClose@IAT ]
sub_46f17e
push ebp
mov ebp esp
sub esp 0x25c
push ebx
push esi
push edi
mov edi [ FindFirstFileW@IAT ]
lea eax [ ebp - 0x258 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
xor bl bl
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
call [ FindClose@IAT ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
mov al bl
lea eax [ ebp - 0x258 ]
push eax
push r--data
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
lea eax [ ebp - 0x258 ]
push eax
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
mov bl 0x1
mov edi [ SetCurrentDirectoryW@IAT ]
mov ebx [ ebp - 0x4 ]
push [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea ecx [ ebp - 0x22c ]
call sub_4643c6
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0x258 ]
push eax
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
call [ FindClose@IAT ]
xor al al
jmp r-xdata
mov bl 0x1
test [ ebp - 0x258 ] 0x10
je r-xdata
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea eax [ ebp - 0x22c ]
push eax
call edi
push [ ebp + 0x14 ]
mov ecx ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_46f17e
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
push r--data
call edi
push esi
call [ FindClose@IAT ]
sub_46f2c6
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x18
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov eax [ esi + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x4
jne r-xdata
push 0x0
push eax
lea eax [ esp + 0x14 ]
push eax
call sub_46f600
test al al
je r-xdata
push 0x38
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov ecx [ edi + 0x194 ]
mov eax [ esp + 0xc ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax ]
mov edi [ eax + 0x4 ]
test [ edi + 0x28 ] 0x3
jne r-xdata
xor edi edi
mov ecx eax
call sub_405906
mov edi eax
jmp r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi + 0x4 ]
mov esi [ eax + 0x4 ]
cmp [ esi + 0xc ] 0xb
je r-xdata
jmp r-xdata
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push 0x1
push [ esi + 0x8 ]
mov ecx edi
call sub_405956
test al al
jne r-xdata
mov ecx esi
call sub_4687be
mov ecx [ ebp + 0x8 ]
mov edx eax
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_468801
mov esi eax
mov ecx edi
push esi
push edx
call sub_46349e
cmp eax esi
je r-xdata
mov ecx edi
call sub_405708
test al 0x10
jne r-xdata
push ecx
mov ecx edi
call sub_405a1a
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x4
jne r-xdata
xor al al
mov ecx esi
call sub_409997
cmp [ ebp + 0x10 ] 0x0
mov esi [ esi + 0x8 ]
je r-xdata
mov ecx edi
call sub_405dcf
test edi edi
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
push esi
mov ecx edi
call sub_4634ed
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push ecx
mov ecx edi
call sub_405a1a
test al al
jne r-xdata
add eax 0x2
lea ecx [ esp + 0x10 ]
push eax
call sub_407b76
push esi
lea ecx [ esp + 0x14 ]
call sub_4081a7
push r--data
lea ecx [ esp + 0x14 ]
call sub_407e0b
lea eax [ esp + 0x10 ]
mov ecx edi
push eax
call sub_4634ed
lea ecx [ esp + 0x10 ]
mov [ esp + 0xb ] al
call sub_405a64
mov al [ esp + 0xb ]
jmp r-xdata
dec eax
mov ecx esi
push eax
mov [ esp + 0x10 ] eax
call sub_407b20
cmp [ eax ] 0xd
je r-xdata
push [ esp + 0xc ]
mov ecx esi
call sub_407b20
cmp [ eax ] 0xa
je r-xdata
mov eax [ esi + 0x4 ]
sub_46f47f
push ebp
mov ebp esp
sub esp 0x27c
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_407f41
mov eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
push r--data
mov [ ebp - 0x18 ] eax
inc [ eax ]
call sub_407e0b
lea eax [ ebp - 0x278 ]
mov bl 0x1
push eax
push [ ebp - 0x10 ]
call [ FindFirstFileW@IAT ]
mov [ ebp + 0x8 ] eax
cmp eax 0xffffffff
je r-xdata
push eax
call [ FindClose@IAT ]
lea ecx [ ebp - 0x24 ]
call sub_405a64
lea ecx [ ebp - 0x10 ]
call sub_405a64
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
xor bl bl
cmp eax 0xb
jne r-xdata
lea eax [ ebp - 0x24c ]
push r--data
push eax
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
lea eax [ ebp - 0x278 ]
push eax
push [ ebp + 0x8 ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x24c ]
push r--data
push eax
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
call sub_456700
cmp eax 0x1
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_4081a7
lea eax [ ebp - 0x24c ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_407e0b
test [ ebp - 0x278 ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
xor eax eax
or eax [ ebp - 0x258 ]
mov ecx [ ebp - 0x25c ]
add [ edx ] eax
adc [ edx + 0x4 ] ecx
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
add [ edi ] 0x1
adc [ edi + 0x4 ] 0x0
cmp [ ebp + 0x1c ] 0x0
je r-xdata
add [ esi ] 0x1
adc [ esi + 0x4 ] 0x0
push r--data
lea ecx [ ebp - 0x10 ]
call sub_407e0b
push [ ebp + 0x1c ]
mov ecx [ ebp - 0x14 ]
push [ ebp + 0x18 ]
push esi
push edi
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
call sub_46f47f
mov bl al
test bl bl
je r-xdata
jmp r-xdata
sub_46f600
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0xc ]
call sub_409c9c
lea esi [ eax - 0x1 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
test esi esi
js r-xdata
xor al al
mov ecx [ ebp + 0xc ]
call sub_4562f8
test al al
je r-xdata
cmp esi [ edi + 0x198 ]
jge r-xdata
mov eax [ edi + 0x194 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
je r-xdata
mov al 0x1
jmp r-xdata
cmp [ ecx ] eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0xc
sub_46f656
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push 0x4
pop ebx
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
jne r-xdata
push ebx
call sub_420f36
mov edx eax
pop ecx
test edx edx
je r-xdata
lea ecx [ eax + eax ]
push 0x8
pop eax
cmp ecx eax
jb r-xdata
xor edx edx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ edx ] ecx
jmp r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
mul ebx
push edi
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
cmp [ esi + 0x4 ] 0x0
mov edi eax
pop ecx
je r-xdata
mov eax ecx
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edx
inc [ esi + 0x8 ]
pop esi
pop ebx
pop ebp
retn 0x4
mov [ esi + 0x4 ] edi
pop edi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_420fc0
push [ esi + 0x4 ]
call j_sub_422ed5#3
add esp 0x10
sub_46f90f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
push esi
push ecx
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
push eax
call sub_487d0f
mov esi [ ebp + 0xc ]
mov ecx esi
test al al
je r-xdata
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
call sub_409a20
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x7
mov [ esi ] eax
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
sub_46f95c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
push eax
call sub_487dbe
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
sub_46f991
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
cmp ebx 0x1
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
mov edi eax
push 0x0
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_409c9c
cmp eax 0x1
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
test esi esi
je r-xdata
push eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
push esi
call sub_409bf8
push esi
call j_sub_422ed5#3
pop ecx
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
push edi
call sub_487e0d
mov edi [ esp + 0xc ]
mov esi eax
test edi edi
jg r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46fa17
push ebp
mov ebp esp
mov eax 0x2020
call sub_431ac0
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ecx
mov [ ebp + 0x8 ] eax
mov edi [ esi + 0x8 ]
cmp edi 0x3
jbe r-xdata
cmp edi 0x2
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
mov ebx eax
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x2020 ]
mov ecx 0xfff
push edx
lea edx [ ebp - 0x18 ]
mov [ ebp - 0x2020 ] cx
mov ecx [ esi + 0x4 ]
push edx
lea edx [ ebp + 0x8 ]
push edx
mov esi [ ecx ]
lea edx [ ebp - 0x14 ]
mov ecx [ ecx + 0x4 ]
push edx
lea edx [ ebp - 0x1c ]
push edx
push ebx
push eax
call sub_409c9c
push eax
mov ecx esi
call sub_409c9c
push eax
call sub_488515
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
mov ecx [ ebp + 0xc ]
xor edi edi
inc edi
cmp ebx edi
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov edx [ ebp - 0x20 ]
xor edi edi
and [ esi ] 0x0
inc edi
mov [ esi + 0xc ] edi
push 0x0
mov eax [ edx ]
push edi
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
jmp r-xdata
add ebx 0x2
call sub_40942e
push ebx
mov esi eax
push edi
push esi
call sub_4091b0
mov ecx [ ebp - 0x1c ]
lea eax [ ebp - 0x10 ]
and [ ebp - 0x8 ] 0x0
push 0x0
push edi
push eax
push esi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edi
call sub_409040
add esp 0x1c
lea ecx [ ebp - 0x10 ]
call sub_409a20
mov eax [ ebp - 0x14 ]
and [ ebp - 0x8 ] 0x0
push edi
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push edi
push eax
push esi
mov [ ebp - 0x4 ] edi
call sub_409040
add esp 0x10
lea ecx [ ebp - 0x10 ]
call sub_409a20
cmp ebx 0x4
jne r-xdata
lea eax [ ebp - 0x2020 ]
push eax
call sub_409bf8
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
and [ ebp - 0x8 ] 0x0
push 0x2
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push edi
push eax
push esi
mov [ ebp - 0x4 ] edi
call sub_409040
add esp 0x10
lea ecx [ ebp - 0x10 ]
call sub_409a20
mov eax [ ebp - 0x18 ]
and [ ebp - 0x8 ] 0x0
push 0x3
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push edi
push eax
push esi
mov [ ebp - 0x4 ] edi
call sub_409040
add esp 0x10
lea ecx [ ebp - 0x10 ]
call sub_409a20
sub_46fb9a
push ebp
mov ebp esp
sub esp 0x34
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov eax [ eax + 0x4 ]
push edi
mov edi ecx
mov [ ebp - 0x4 ] ebx
mov esi [ eax + 0x4 ]
mov ecx esi
cmp [ esi + 0xc ] 0xe
jne r-xdata
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x24 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] eax
inc [ eax ]
xor eax eax
inc eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x34 ]
push eax
call sub_4679c3
mov ecx eax
jmp r-xdata
test al 0x1
je r-xdata
and eax 0xfffffffd
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] eax
call sub_405a64
mov eax [ ebp - 0x4 ]
mov eax [ ecx ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x8 ] eax
inc [ eax ]
mov eax [ ebp - 0x4 ]
test al 0x2
je r-xdata
lea eax [ ebp - 0x14 ]
mov ecx edi
push eax
call sub_409fbd
test eax eax
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_405a64
mov ecx [ eax + 0x14 ]
cmp ecx 0x4
jle r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
mov eax [ edi ]
push ebx
push 0x2
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
or ebx 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x14 ]
push ecx
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
push eax
call sub_4885af
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
mov eax [ edi ]
push ebx
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] ebx
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405a64
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ esi + 0xc ] 0x1
sub_46fcd0
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ esi + 0x4 ]
mov ecx [ edi + 0x8 ]
mov [ ebp - 0x4 ] ecx
cmp [ ecx + 0xc ] 0x4
jne r-xdata
mov ebx [ edi + 0xc ]
mov [ ebp - 0x8 ] ebx
cmp [ ebx + 0xc ] 0x4
jne r-xdata
inc eax
sub eax 0x0
je r-xdata
add eax 0x2
mov esi [ edi + 0x4 ]
mov ecx ebx
mov edi [ edi ]
call sub_409c9c
mov ecx [ ebp - 0x4 ]
push eax
call sub_409c9c
push eax
mov ecx esi
call sub_409c9c
push eax
mov ecx edi
call sub_409c9c
push eax
call sub_487ca0
dec eax
je r-xdata
call sub_409997
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edi [ eax ]
mov eax [ esi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ebx [ eax ]
call sub_409c9c
push eax
push edi
mov ecx esi
call sub_409c9c
push eax
mov ecx ebx
call sub_409c9c
push eax
call sub_487ca0
jmp r-xdata
dec eax
je r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
mov [ esi + 0xc ] 0x1
mov ecx ebx
call sub_409997
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov eax [ esi + 0x4 ]
push edx
mov ecx [ eax + 0x8 ]
mov esi [ eax + 0x4 ]
mov edi [ eax ]
call sub_409c9c
push eax
mov ecx esi
call sub_409c9c
push eax
mov ecx edi
call sub_409c9c
push eax
call sub_487ca0
jmp r-xdata
dec eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx ebx
call sub_409997
mov eax [ ebx + 0x8 ]
mov edi [ eax ]
mov eax [ esi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push edi
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
push edx
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
call sub_409c9c
push eax
mov ecx esi
call sub_409c9c
push eax
call sub_487ca0
jmp r-xdata
sub_46fe0f
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
inc ebx
push edi
xor edi edi
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x8 ] edi
cmp [ esi + 0x8 ] ebx
jbe r-xdata
sub esp 0x10
lea eax [ ebp - 0x10 ]
mov ecx esp
push eax
mov [ ecx + 0x8 ] edi
call sub_409ac0
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
push eax
call sub_488614
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
lea ecx [ ebp - 0x10 ]
mov [ esi + 0xc ] ebx
mov [ esi ] edi
call sub_409a20
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x10 ]
push [ eax + 0x4 ]
call sub_409e9c
sub_46fe81
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov ebx ecx
mov eax [ eax + 0x4 ]
push edi
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
call sub_409c9c
push eax
mov ecx esi
call sub_409c9c
push eax
call sub_488677
mov edi eax
test edi edi
jns r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx ]
neg edi
push 0x0
push edi
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_41fea1
xor edi edi
inc edi
sub_46fedd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov ebx ecx
mov eax [ eax + 0x4 ]
push edi
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
call sub_409c9c
push eax
mov ecx esi
call sub_409c9c
push eax
call sub_488883
mov edi eax
test edi edi
jns r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx ]
neg edi
push 0x0
push edi
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_41fea1
xor edi edi
inc edi
sub_46ff39
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
call sub_409c9c
push eax
mov ecx esi
call sub_409c9c
push eax
call sub_4889be
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
sub_46ff79
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x10
lea ecx [ esp ]
push esi
push edi
call sub_4077c7
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x8 ] 0x2
jbe r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push [ esp + 0x8 ]
mov ecx [ eax ]
mov eax [ edi + 0x4 ]
push ecx
mov ecx [ eax ]
call sub_409c9c
push eax
call sub_488a07
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
lea ecx [ esp + 0x8 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
call sub_405a64
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
lea ecx [ esp + 0xc ]
call sub_4081a7
sub_46fffd
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
call sub_409c9c
push eax
push 0xffffffff
push edi
push 0xffffffff
push 0x0
push 0xffffffff
push 0x0
call sub_402b72
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_4687da
mov edi eax
sub_470052
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov ecx [ esi + 0x4 ]
push 0xffffffff
mov ecx [ ecx ]
call sub_409c9c
push eax
push edi
push 0xffffffff
push 0x0
push 0xffffffff
push 0x0
call sub_402b72
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_4687da
mov edi eax
sub_4700a7
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
push edi
mov edi [ esi + 0x8 ]
call sub_4077c7
mov ebx [ ebp + 0xc ]
mov ecx ebx
or [ ebp - 0x4 ] 0xffffffff
mov [ ebp + 0x8 ] 0x2
call sub_409a20
and [ ebx ] 0x0
mov [ ebx + 0xc ] 0x1
cmp edi 0x5
jbe r-xdata
cmp edi 0x4
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_409c9c
mov [ ebp + 0x8 ] eax
cmp edi 0x3
jbe r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ eax + 0xc ] 0x4
jne r-xdata
cmp edi 0x2
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x14 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx eax
call sub_409997
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
push [ eax + 0x8 ]
call sub_4081a7
or edi 0xffffffff
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
mov edi eax
jmp r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
mov esi [ edx ]
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
push [ ebp + 0x8 ]
mov ecx esi
push [ ebp - 0x4 ]
push [ ebp - 0x14 ]
push edi
call sub_409c9c
push eax
call sub_488f94
mov ecx ebx
mov esi eax
call sub_409a20
mov [ ebx + 0xc ] 0x1
mov [ ebx ] esi
sub_470191
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
and [ esp + 0xc ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
or ebx 0xffffffff
mov [ esp + 0x10 ] ebx
mov [ esp + 0x1c ] 0x1
mov esi [ edi + 0x8 ]
cmp esi 0x3
jbe r-xdata
cmp esi 0x2
jbe r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
mov ebx eax
sub esp 0x10
lea eax [ esp + 0x20 ]
mov ecx esp
push eax
and [ ecx + 0x8 ] 0x0
call sub_409ac0
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push ebx
mov ecx [ eax ]
mov eax [ edi + 0x4 ]
push ecx
mov ecx [ eax ]
call sub_409c9c
push eax
call sub_489073
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
lea ecx [ esp + 0x10 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
call sub_409a20
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi + 0x4 ]
push [ ecx + 0x8 ]
lea ecx [ esp + 0x14 ]
call sub_409e9c
sub_47023d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
mov edx [ esi + 0x4 ]
push eax
mov ecx [ edx + 0x4 ]
mov esi [ edx ]
call sub_409c9c
push eax
mov ecx esi
call sub_409c9c
push eax
call sub_489725
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
sub_470291
push ebp
mov ebp esp
sub esp 0x38
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
xor edi edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edi
mov esi [ eax + 0x4 ]
mov ecx esi
cmp [ esi + 0xc ] 0xe
jne r-xdata
push 0x2
pop ebx
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x28 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x1c ] eax
inc [ eax ]
lea eax [ ebp - 0x38 ]
xor ebx ebx
push eax
inc ebx
call sub_4679c3
mov ecx eax
jmp r-xdata
test bl 0x1
je r-xdata
lea ecx [ ebp - 0x28 ]
and ebx 0xfffffffd
call sub_405a64
mov eax [ ecx ]
mov [ ebp - 0x18 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0xc ] eax
inc [ eax ]
test bl 0x2
je r-xdata
mov ebx [ ebp - 0x4 ]
lea eax [ ebp - 0x18 ]
push eax
mov ecx ebx
call sub_409fbd
test eax eax
jne r-xdata
lea ecx [ ebp - 0x38 ]
call sub_405a64
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
push ecx
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
push eax
call sub_4897e3
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
xor eax eax
mov [ esi ] edi
inc eax
mov [ esi + 0xc ] eax
xor esi esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor eax eax
mov [ esi ] edi
inc eax
push edi
mov [ esi + 0xc ] eax
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
or esi 0xffffffff
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405a64
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_470397
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
mov ebx edi
cmp [ esi + 0x8 ] 0x4
jbe r-xdata
cmp [ esi + 0x8 ] 0x3
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_409c9c
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
mov edi eax
mov edx [ esi + 0x4 ]
push [ ebp - 0x4 ]
push edi
mov ecx [ edx + 0x4 ]
mov esi [ edx ]
push ebx
call sub_409c9c
push eax
mov ecx esi
call sub_409c9c
push eax
call sub_489826
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_409c9c
mov ebx eax
sub_470423
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
or eax 0xffffffff
push edi
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov ecx [ esi + 0x4 ]
push eax
mov ecx [ ecx ]
call sub_409c9c
push eax
call sub_4899ba
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
sub_47046d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
call sub_409c9c
push eax
mov ecx esi
call sub_409c9c
push eax
call sub_489a4e
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
sub_4704ad
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
or eax 0xffffffff
push edi
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
mov edx [ esi + 0x4 ]
push eax
mov ecx [ edx + 0x4 ]
mov esi [ edx ]
call sub_409c9c
push eax
mov ecx esi
call sub_409c9c
push eax
call sub_48a088
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
sub_470502
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x8 ] bl
mov esi [ edi + 0x8 ]
cmp esi 0x3
jb r-xdata
cmp esi 0x4
jb r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov eax [ eax + 0x8 ]
mov ecx eax
mov [ ebp - 0xc ] eax
call sub_409dae
test al al
jne r-xdata
cmp esi 0x5
jb r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov eax [ eax + 0xc ]
mov ecx eax
mov [ ebp - 0xc ] eax
call sub_409dae
test al al
jne r-xdata
mov ebx [ ebp - 0xc ]
mov ecx ebx
call sub_409997
mov eax [ ebx + 0x8 ]
mov ebx [ eax ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
push [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov ecx [ eax ]
mov eax [ edi + 0x4 ]
push ebx
push ecx
mov ecx [ eax ]
call sub_409c9c
push eax
call sub_48a1eb
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi + 0x4 ]
push 0x29
mov esi [ ecx + 0x10 ]
mov ecx esi
call sub_409dae
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
call sub_409c9c
mov [ ebp - 0x8 ] eax
mov ecx esi
call sub_409c9c
and al 0x1
mov [ ebp - 0x4 ] al
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_409c9c
shr al 0x1
and al 0x1
mov [ ebp + 0x8 ] al
sub_4705ef
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx + 0x8 ] eax
jbe r-xdata
push esi
push edi
push eax
call sub_48ad87
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
mov eax [ ecx + 0x4 ]
mov ecx [ eax ]
call sub_4687da
sub_47062b
push ebp
mov ebp esp
sub esp 0x1c
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx ecx
push edi
mov ecx esi
call sub_40942e
push 0x5
mov edi eax
push 0x1
push edi
call sub_4091b0
mov eax [ ebp + 0x8 ]
add esp 0xc
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_4687da
jmp r-xdata
mov ecx esi
call sub_409a20
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov eax [ ebp + 0xc ]
xor esi esi
xor ebx ebx
mov [ ebp - 0x1c ] eax
push esi
inc ebx
mov [ ebp - 0x14 ] esi
push ebx
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] ebx
push eax
push edi
call sub_409040
add esp 0x10
lea ecx [ ebp - 0x1c ]
call sub_409a20
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
push ebx
push eax
push edi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] ebx
call sub_409040
add esp 0x10
lea ecx [ ebp - 0x1c ]
call sub_409a20
mov eax [ ebp - 0x4 ]
push 0x2
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
push ebx
push eax
push edi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] ebx
call sub_409040
add esp 0x10
lea ecx [ ebp - 0x1c ]
call sub_409a20
mov eax [ ebp - 0x8 ]
push 0x3
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
push ebx
push eax
push edi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] ebx
call sub_409040
add esp 0x10
lea ecx [ ebp - 0x1c ]
call sub_409a20
mov eax [ ebp - 0xc ]
push 0x4
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
push ebx
push eax
push edi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] ebx
call sub_409040
add esp 0x10
lea ecx [ ebp - 0x1c ]
call sub_409a20
jmp r-xdata
lea ecx [ ebp - 0xc ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp + 0xc ]
push ecx
push eax
call sub_48adcf
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_470770
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x30 ]
push edi
call sub_4077c7
xor edi edi
cmp [ rw-data ] 0x1
je r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x34 ] edi
call sub_407d2c
mov ebx edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edi
lea eax [ ebp - 0x34 ]
mov ecx rw-data
push eax
call sub_4569d6
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ esi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
mov edi [ ebp - 0x14 ]
mov ebx [ ebp - 0x18 ]
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov eax [ ebp - 0x34 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
cmp eax 0x1
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov ecx [ ebp + 0xc ]
call sub_40942e
push 0x5
mov esi eax
push 0x1
push esi
call sub_4091b0
mov ecx [ ebp - 0x34 ]
xor eax eax
and [ ebp - 0x8 ] 0x0
inc eax
push 0x0
push eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
push esi
mov [ ebp - 0x10 ] ecx
call sub_409040
add esp 0x1c
lea ecx [ ebp - 0x10 ]
call sub_409a20
mov eax [ ebp - 0x20 ]
and [ ebp - 0x8 ] 0x0
push 0x1
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push esi
mov [ ebp - 0x4 ] 0x7
call sub_409040
add esp 0x10
lea ecx [ ebp - 0x10 ]
call sub_409a20
mov eax [ ebp - 0x1c ]
and [ ebp - 0x8 ] 0x0
push 0x2
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push esi
mov [ ebp - 0x4 ] 0x7
call sub_409040
add esp 0x10
lea ecx [ ebp - 0x10 ]
call sub_409a20
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x10 ] ebx
xor ebx ebx
push 0x3
inc ebx
push ebx
push eax
push esi
mov [ ebp - 0x4 ] ebx
call sub_409040
add esp 0x10
lea ecx [ ebp - 0x10 ]
call sub_409a20
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x10 ]
push 0x4
push ebx
push eax
push esi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] ebx
call sub_409040
add esp 0x10
lea ecx [ ebp - 0x10 ]
call sub_409a20
jmp r-xdata
lea ecx [ ebp - 0x30 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_470901
push ebp
mov ebp esp
sub esp 0x14
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx ecx
push edi
mov ecx esi
call sub_40942e
push 0x2
mov edi eax
push 0x1
push edi
call sub_4091b0
mov eax [ ebp + 0x8 ]
add esp 0xc
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_4687da
jmp r-xdata
mov eax [ ebx ]
xor edi edi
push 0x0
inc edi
push edi
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] edi
mov eax [ ebp + 0xc ]
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] eax
push esi
inc ebx
mov [ ebp - 0xc ] esi
push ebx
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] ebx
push eax
push edi
call sub_409040
add esp 0x10
lea ecx [ ebp - 0x14 ]
call sub_409a20
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push ebx
push eax
push edi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] ebx
call sub_409040
add esp 0x10
lea ecx [ ebp - 0x14 ]
call sub_409a20
jmp r-xdata
push eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_48aeb8
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4709ca
push ebp
mov ebp esp
sub esp 0x38
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
xor edi edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edi
mov esi [ eax + 0x4 ]
mov ecx esi
cmp [ esi + 0xc ] 0xe
jne r-xdata
push 0x2
pop ebx
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x28 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x1c ] eax
inc [ eax ]
lea eax [ ebp - 0x38 ]
xor ebx ebx
push eax
inc ebx
call sub_4679c3
mov ecx eax
jmp r-xdata
test bl 0x1
je r-xdata
lea ecx [ ebp - 0x28 ]
and ebx 0xfffffffd
call sub_405a64
mov eax [ ecx ]
mov esi [ ecx + 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] eax
inc [ eax ]
test bl 0x2
je r-xdata
test esi esi
je r-xdata
lea ecx [ ebp - 0x38 ]
call sub_405a64
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
push ecx
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
push eax
call sub_48af18
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
xor eax eax
mov [ esi ] edi
inc eax
mov [ esi + 0xc ] eax
xor esi esi
mov ebx [ ebp - 0x4 ]
lea eax [ ebp - 0x18 ]
push eax
mov ecx ebx
call sub_409fbd
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor eax eax
mov [ esi ] edi
inc eax
push edi
mov [ esi + 0xc ] eax
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
or esi 0xffffffff
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405a64
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_470ad4
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov eax edi
mov [ esp + 0x20 ] edi
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ebx [ ecx ]
cmp [ ebx + 0xc ] 0x5
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_4687da
mov [ esp + 0x20 ] eax
mov ebx [ ebx ]
mov eax [ ebx ]
cmp [ eax + 0x10c ] 0x2
jne r-xdata
push eax
push edi
push edi
call sub_48afb0
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
push 0x2
mov ecx ebx
call sub_408e6b
cmp eax 0x2
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x1
mov ecx ebx
call sub_408e6b
xor ecx ecx
mov edi eax
push 0x6
pop edx
mul edx
mov [ esp + 0x18 ] edi
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov esi eax
xor eax eax
mov [ esp + 0x20 ] esi
mov [ esp + 0x18 ] eax
pop ecx
test edi edi
jle r-xdata
push [ esp + 0x20 ]
push edi
push esi
call sub_48afb0
push esi
call j_sub_422ed5#3
pop ecx
jmp r-xdata
mov edi esi
push [ esp + 0x1c ]
call j_sub_422ed5#3
mov esi [ ebp + 0xc ]
pop ecx
mov ecx esi
call sub_409a20
and [ esi ] 0x0
lea ecx [ esp + 0x28 ]
mov [ esi + 0xc ] 0x1
call sub_405a64
jmp r-xdata
cmp [ esp + 0x10 ] 0x0
mov [ edi ] 0x1
je r-xdata
cmp [ esp + 0x11 ] 0x0
je r-xdata
mov [ edi ] 0x5
cmp [ esp + 0x12 ] 0x0
je r-xdata
or [ edi ] 0x8
mov ax [ esp + 0x24 ]
lea ecx [ esp + 0x28 ]
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] si
call sub_405a64
mov eax [ esp + 0x14 ]
add edi 0x6
inc eax
mov [ esp + 0x14 ] eax
cmp eax [ esp + 0x18 ]
jl r-xdata
or [ edi ] 0x10
push 0x0
push eax
push 0x2
push 0x1
push ebx
call sub_408ea0
add esp 0x14
mov esi eax
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
push 0x1
push [ esp + 0x18 ]
mov eax [ ecx ]
mov [ esp + 0x30 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x34 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x38 ] eax
mov eax [ ecx + 0xc ]
push 0x2
push 0x1
push ebx
inc [ eax ]
mov [ esp + 0x48 ] eax
call sub_408ea0
add esp 0x14
mov ecx eax
call sub_409c9c
mov esi eax
lea eax [ esp + 0x13 ]
push eax
lea eax [ esp + 0x16 ]
push eax
lea eax [ esp + 0x19 ]
push eax
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x34 ]
push eax
lea eax [ esp + 0x3c ]
push eax
call sub_42017b
test al al
je r-xdata
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x18 ]
sub_470ca1
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
or ebx 0xffffffff
push edi
mov [ ebp + 0x8 ] ebx
mov edi [ esi + 0x8 ]
cmp edi 0x2
jbe r-xdata
cmp edi 0x3
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
mov ebx eax
cmp edi 0x4
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_409c9c
mov [ ebp + 0x8 ] eax
xor eax eax
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_4687da
jmp r-xdata
mov edx [ esi + 0x4 ]
push eax
push [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov esi [ edx ]
push ebx
call sub_409c9c
push eax
mov ecx esi
call sub_409c9c
push eax
call sub_48b036
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
pop ebp
retn 0x8
sub_470d2a
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp + 0x8 ] 0x2
mov [ ebp - 0x4 ] ebx
mov esi [ edi + 0x8 ]
test esi esi
je r-xdata
cmp esi 0x1
jbe r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
mov [ ebp + 0x8 ] eax
cmp esi 0x2
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_409c9c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_4687da
jmp r-xdata
push eax
push ebx
push [ ebp + 0x8 ]
call sub_48b096
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_470d90
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
push edi
mov edi [ esi + 0x8 ]
call sub_4077c7
mov ebx [ ebp + 0xc ]
xor eax eax
or [ ebp - 0x8 ] 0xffffffff
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
mov [ ebp + 0x8 ] eax
call sub_409a20
and [ ebx ] 0x0
mov [ ebx + 0xc ] 0x1
cmp edi 0x5
jbe r-xdata
cmp edi 0x4
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_409c9c
mov [ ebp - 0x4 ] eax
cmp edi 0x3
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0xc ] 0x7
jne r-xdata
cmp edi 0x2
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0xc ]
cmp [ ebx + 0xc ] 0x4
jne r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4687da
mov [ ebp + 0x8 ] eax
cmp edi 0x1
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
mov [ ebp - 0x8 ] eax
mov ecx ebx
call sub_409997
push [ ebx + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_4081a7
mov ebx [ ebp + 0xc ]
or edi 0xffffffff
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov edi eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
call sub_409cf8
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
push eax
push [ ebp - 0x4 ]
lea eax [ ebp - 0x18 ]
push [ ebp - 0x8 ]
push eax
push edi
call sub_48b0e9
mov ecx ebx
mov esi eax
call sub_409a20
mov [ ebx + 0xc ] 0x1
mov [ ebx ] esi
sub_470e93
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov esi [ ecx ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
or eax 0xffffffff
push eax
push eax
push edi
push eax
push 0x0
push eax
push [ ecx ]
call sub_402b72
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_4687da
mov edi eax
sub_470eed
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
or edi 0xffffffff
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_4687da
mov ebx eax
mov ecx [ esi + 0x4 ]
mov esi [ ecx ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
push 0xffffffff
push 0xffffffff
push ebx
push edi
push [ ecx ]
push 0xffffffff
push 0x0
call sub_402b72
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov edi eax
sub_470f5f
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
or edi 0xffffffff
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_4687da
mov ebx eax
mov ecx [ esi + 0x4 ]
push ebx
push edi
mov ecx [ ecx ]
call sub_409c9c
push eax
call sub_48b17f
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov edi eax
sub_470fc4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ eax + 0x8 ] ecx
jbe r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_4687da
mov ecx eax
push ecx
mov ecx rw-data
call sub_402f66
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
jmp r-xdata
xor eax eax
pop ebp
retn 0x8
sub_47100f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
call sub_4687da
push edi
push eax
call sub_48b25b
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x7
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov edi eax
sub_47105b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
inc esi
mov [ esp + 0x14 ] edi
cmp edi esi
je r-xdata
xor eax eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov [ esp + 0x44 ] esi
mov ecx ebx
mov [ rw-data ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] esi
mov [ esp + 0x28 ] r--data
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x10 ] ecx
cmp [ rw-data ] cl
jbe r-xdata
push ecx
lea eax [ esp + 0x13 ]
mov [ esp + 0x13 ] bl
push eax
push ecx
push ebx
lea eax [ esp + 0x48 ]
mov ecx rw-data
push eax
lea eax [ esp + 0x3c ]
push eax
push rw-data
call sub_4739d5
test al al
je r-xdata
mov edi [ ebp + 0x10 ]
lea ecx [ esp + 0x28 ]
call sub_4563f2
lea ecx [ esp + 0x18 ]
call sub_409a20
lea ecx [ esp + 0x38 ]
call sub_409a20
mov eax ebx
jmp r-xdata
cmp [ rw-data ] esi
je r-xdata
mov esi [ rw-data ]
lea ecx [ esp + 0x18 ]
call sub_409a20
mov [ esp + 0x18 ] esi
xor esi esi
mov [ esp + 0x24 ] 0x1
inc esi
dec eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ rw-data ] edi
cmp [ esp + 0xf ] bl
je r-xdata
mov eax ecx
sub eax ebx
je r-xdata
mov edi [ esp + 0x14 ]
lea ecx [ esp + 0x18 ]
call sub_409a20
mov eax [ ebp + 0x8 ]
dec eax
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_4563f2
lea ecx [ esp + 0x18 ]
call sub_409a20
lea ecx [ esp + 0x38 ]
call sub_409a20
lea ecx [ esp + 0x38 ]
call sub_409c9c
mov ebx eax
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_456363
mov ecx [ esp + 0x10 ]
movzx eax [ rw-data ]
inc ecx
mov [ esp + 0x10 ] ecx
cmp ecx eax
jl r-xdata
lea ecx [ esp + 0x18 ]
call sub_409a20
mov eax [ ebp + 0xc ]
jmp r-xdata
dec eax
jne r-xdata
mov [ esp + 0x24 ] esi
mov [ esp + 0x18 ] eax
jmp r-xdata
lea ecx [ esp + 0x18 ]
call sub_409a20
mov [ esp + 0x24 ] esi
mov [ esp + 0x18 ] edi
jmp r-xdata
sub_4711ed
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
inc esi
mov [ esp + 0x14 ] edi
cmp edi esi
je r-xdata
xor eax eax
cmp [ rw-data ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
xor ebx ebx
mov ecx rw-data
mov [ rw-data ] ebx
call sub_409fbd
mov ecx eax
mov [ esp + 0x10 ] ecx
cmp [ ecx + 0x14 ] 0x4
jg r-xdata
mov [ esp + 0x28 ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] esi
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] esi
mov [ esp + 0x38 ] r--data
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] ebx
cmp [ ecx + 0x14 ] ebx
jle r-xdata
push ecx
lea eax [ esp + 0x13 ]
mov [ esp + 0x13 ] bl
push eax
push ecx
push ebx
lea eax [ esp + 0x38 ]
mov ecx rw-data
push eax
lea eax [ esp + 0x4c ]
push eax
push [ ebp + 0x8 ]
call sub_4739d5
test al al
je r-xdata
mov edi ebx
mov esi ebx
cmp [ rw-data ] esi
je r-xdata
lea ecx [ esp + 0x18 ]
call sub_409a20
mov eax [ ebp + 0x10 ]
dec eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp [ esp + 0x34 ] 0x4
mov [ rw-data ] edi
jne r-xdata
mov eax edi
sub eax ebx
je r-xdata
mov edi [ esp + 0x14 ]
lea ecx [ esp + 0x18 ]
call sub_409a20
mov eax [ ebp + 0x14 ]
mov [ esp + 0x24 ] esi
jmp r-xdata
dec eax
je r-xdata
cmp [ esp + 0xf ] bl
je r-xdata
lea ecx [ esp + 0x28 ]
call sub_409997
mov eax [ esp + 0x30 ]
push r--data
push [ eax ]
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esp + 0x18 ] eax
lea ecx [ esp + 0x18 ]
call sub_409a20
mov eax [ ebp + 0x18 ]
jmp r-xdata
dec eax
jne r-xdata
lea ecx [ esp + 0x38 ]
call sub_4563f2
lea ecx [ esp + 0x18 ]
call sub_409a20
lea ecx [ esp + 0x28 ]
call sub_409a20
lea ecx [ esp + 0x28 ]
call sub_409c9c
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
push 0x2
pop ebx
mov [ esp + 0x24 ] 0x7
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x3c ]
call sub_456363
mov eax [ esp + 0x10 ]
inc edi
cmp edi [ eax + 0x14 ]
jl r-xdata
lea ecx [ esp + 0x18 ]
call sub_409a20
mov eax [ ebp + 0x1c ]
jmp r-xdata
lea ecx [ esp + 0x38 ]
call sub_4563f2
lea ecx [ esp + 0x18 ]
call sub_409a20
lea ecx [ esp + 0x28 ]
call sub_409a20
mov eax esi
jmp r-xdata
sub_47139f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ eax + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
and [ esi + 0xc ] 0x0
and [ esi + 0x4 ] 0x0
cmp eax 0x8
jae r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
xor ebx ebx
mov [ esi + 0x4 ] eax
pop ecx
cmp [ esi + 0x8 ] ebx
jbe r-xdata
push 0x8
pop eax
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
xor edi edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + ebx * 4 ]
mov ecx [ edx ]
mov [ edi ] ecx
mov ecx [ edx + 0x4 ]
mov [ edi + 0x4 ] ecx
jmp r-xdata
push 0x8
call sub_420f36
mov edi eax
pop ecx
test edi edi
je r-xdata
pop edi
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + ebx * 4 ] edi
inc ebx
cmp ebx [ esi + 0x8 ]
jb r-xdata
sub_471428
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov eax [ esi ]
mov [ edi ] eax
lea ecx [ edi + 0x44 ]
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax [ esi + 0xc ]
mov [ edi + 0xc ] eax
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov eax [ esi + 0x18 ]
mov [ edi + 0x18 ] eax
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov eax [ esi + 0x20 ]
mov [ edi + 0x20 ] eax
mov eax [ esi + 0x24 ]
mov [ edi + 0x24 ] eax
mov eax [ esi + 0x28 ]
mov [ edi + 0x28 ] eax
mov eax [ esi + 0x2c ]
mov [ edi + 0x2c ] eax
inc [ eax ]
mov al [ esi + 0x30 ]
mov [ edi + 0x30 ] al
mov eax [ esi + 0x34 ]
mov [ edi + 0x34 ] eax
mov eax [ esi + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ esi + 0x3c ]
mov [ edi + 0x3c ] eax
mov eax [ esi + 0x40 ]
mov [ edi + 0x40 ] eax
inc [ eax ]
lea eax [ esi + 0x44 ]
push eax
call sub_47139f
mov eax [ esi + 0x54 ]
lea ecx [ edi + 0x58 ]
mov [ edi + 0x54 ] eax
lea eax [ esi + 0x58 ]
push eax
call sub_4715c5
mov al [ esi + 0xd0 ]
mov [ edi + 0xd0 ] al
mov eax [ esi + 0xd4 ]
mov [ edi + 0xd4 ] eax
mov eax [ esi + 0xd8 ]
mov [ edi + 0xd8 ] eax
mov al [ esi + 0xdc ]
mov [ edi + 0xdc ] al
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_4714f0
push ebp
mov ebp esp
push ebx
push esi
push [ ebp + 0x8 ]
mov esi ecx
xor ebx ebx
lea ecx [ esi + 0x20 ]
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
call sub_407f41
push [ ebp + 0xc ]
lea ecx [ esi + 0x34 ]
call sub_407f41
lea eax [ ebp + 0x18 ]
mov [ esi + 0x44 ] r--data
mov [ esi + 0x48 ] ebx
lea ecx [ esi + 0x58 ]
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
push eax
mov [ esi + 0x54 ] ebx
call sub_4715c5
mov al [ ebp + 0x14 ]
mov [ esi + 0xd0 ] al
mov eax [ rw-data ]
inc eax
mov [ esi + 0xd4 ] ebx
mov [ rw-data ] eax
mov [ esi + 0xd8 ] eax
xor eax eax
cmp [ esi + 0x38 ] ebx
mov [ esi + 0xdc ] 0x1
sete al
mov [ esi + 0x30 ] al
mov eax [ ebp + 0x10 ]
test al 0x1
je r-xdata
test al 0x2
je r-xdata
or [ esi + 0x54 ] 0x80000000
mov ecx eax
and ecx 0x4
je r-xdata
or [ esi + 0x54 ] 0x3000
test al 0x8
je r-xdata
test al 0x8
jne r-xdata
test al 0x10
je r-xdata
test ecx ecx
jne r-xdata
or [ esi + 0x54 ] 0x1
lea ecx [ ebp + 0x18 ]
call sub_420125
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x88
mov [ esi + 0xdc ] bl
or [ esi + 0x54 ] 0x2
sub_4715c5
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov edi ecx
call sub_471637
lea eax [ esi + 0x34 ]
push eax
lea ecx [ edi + 0x34 ]
call sub_471637
mov eax [ esi + 0x68 ]
mov [ edi + 0x68 ] eax
mov eax [ esi + 0x6c ]
mov [ edi + 0x6c ] eax
mov eax [ esi + 0x70 ]
mov [ edi + 0x70 ] eax
mov eax [ esi + 0x74 ]
mov [ edi + 0x74 ] eax
inc [ eax ]
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_471603
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
xor edi edi
push 0xe0
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov [ esi ] edi
mov eax esi
pop edi
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
mov ecx eax
call sub_471428
mov edi eax
sub_471637
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ edx ]
mov [ ecx ] ax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ ecx + 0xc ] eax
mov eax [ edx + 0x10 ]
mov [ ecx + 0x10 ] eax
inc [ eax ]
mov eax [ edx + 0x14 ]
mov [ ecx + 0x14 ] eax
mov eax [ edx + 0x18 ]
mov [ ecx + 0x18 ] eax
mov eax [ edx + 0x1c ]
mov [ ecx + 0x1c ] eax
mov eax [ edx + 0x20 ]
mov [ ecx + 0x20 ] eax
inc [ eax ]
mov eax [ edx + 0x24 ]
mov [ ecx + 0x24 ] eax
mov eax [ edx + 0x28 ]
mov [ ecx + 0x28 ] eax
mov eax [ edx + 0x2c ]
mov [ ecx + 0x2c ] eax
mov eax [ edx + 0x30 ]
mov [ ecx + 0x30 ] eax
inc [ eax ]
mov eax ecx
pop ebp
retn 0x4
sub_471697
push esi
mov esi ecx
call sub_4077c7
lea ecx [ esi + 0x10 ]
call sub_4077c7
lea ecx [ esi + 0x20 ]
call sub_4077c7
lea ecx [ esi + 0x30 ]
call sub_4077c7
lea ecx [ esi + 0x40 ]
call sub_4077c7
lea ecx [ esi + 0x50 ]
call sub_4077c7
lea ecx [ esi + 0x60 ]
call sub_4077c7
mov eax esi
pop esi
retn
sub_4716ec
push esi
mov esi ecx
call sub_4727fc
push [ esi + 0xd4 ]
call [ CloseHandle@IAT ]
lea ecx [ esi + 0x58 ]
call sub_420125
lea ecx [ esi + 0x44 ]
call sub_4716d3
lea ecx [ esi + 0x34 ]
call sub_405a64
lea ecx [ esi + 0x20 ]
pop esi
jmp sub_405a64
sub_471721
push esi
mov esi ecx
lea ecx [ esi + 0x60 ]
call sub_405a64
lea ecx [ esi + 0x50 ]
call sub_405a64
lea ecx [ esi + 0x40 ]
call sub_405a64
lea ecx [ esi + 0x30 ]
call sub_405a64
lea ecx [ esi + 0x20 ]
call sub_405a64
lea ecx [ esi + 0x10 ]
call sub_405a64
mov ecx esi
pop esi
jmp sub_405a64
sub_47175c
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4716d3
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422ed5#3
pop ecx
sub_47177b
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x88 ]
lea esi [ edi + 0x88 ]
mov ecx esi
call sub_4200e9
mov ecx [ esi + 0x8 ]
mov [ esi ] r--data
test ecx ecx
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
mov esi [ ecx + 0x38 ]
push ecx
call sub_41ff5c
mov ecx esi
test esi esi
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_422ed5#3
pop ecx
sub_4717c4
push esi
mov esi ecx
push edi
mov edi [ esi ]
test edi edi
je r-xdata
push esi
call j_sub_422ed5#3
pop ecx
pop edi
mov eax esi
pop esi
retn 0x4
mov ecx edi
call sub_4716ec
push edi
call j_sub_422ed5#3
pop ecx
sub_4717ea
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
xor edi edi
mov ebx edi
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
push ebx
call sub_46776d
mov ecx eax
mov ebx edi
mov [ ebp + 0x8 ] ecx
cmp [ esi + 0x8 ] edi
jbe r-xdata
mov edx [ esi + 0x4 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
mov eax [ eax + ebx * 4 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ edi + ecx ]
push eax
call sub_420fc0
mov eax [ esi + 0x4 ]
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ eax + ebx * 4 ]
add edi [ eax + 0x4 ]
inc ebx
cmp ebx [ esi + 0x8 ]
jb r-xdata
mov eax [ edx ]
lea edx [ edx + 0x4 ]
add ebx [ eax + 0x4 ]
dec ecx
jne r-xdata
sub_471850
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi ] edi
je r-xdata
push edi
push edi
push 0x1
push edi
call [ CreateEventW@IAT ]
xor ecx ecx
mov [ esi ] eax
test eax eax
pop edi
setne al
pop esi
retn 0x10
push [ esi ]
call [ CloseHandle@IAT ]
mov [ esi ] edi
sub_47187d
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push esi
mov esi ecx
je r-xdata
push ebx
mov ebx [ esi + 0x54 ]
push edi
mov edi [ ebp + 0x8 ]
push 0x0
push 0x0
push [ edi + 0x70 ]
movzx eax [ edi + 0x78 ]
push [ edi + 0x30 ]
push [ edi + 0x20 ]
push eax
push [ edi + 0x10 ]
push [ esi + 0x4 ]
call [ InternetConnectW@IAT ]
mov [ esi ] eax
push 0x0
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_471943
jmp r-xdata
push ebx
push 0x80000000
push [ edi + 0x60 ]
push eax
call [ FtpOpenFileW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push 0xdeadbeef
push 0x15
mov ecx esi
call sub_472599
jmp r-xdata
pop esi
pop ebp
retn 0xc
lea eax [ ebp + 0xc ]
push eax
push edi
call [ FtpGetFileSize@IAT ]
mov edx [ ebp + 0xc ]
xor ecx ecx
or ecx eax
xor eax eax
or edx eax
mov [ esi + 0x10 ] ecx
mov [ esi + 0x14 ] edx
cmp [ ebp + 0x10 ] al
je r-xdata
push eax
push 0xdeadbeef
push 0x16
jmp r-xdata
pop edi
pop ebx
push 0x1
push eax
push eax
push edi
mov ecx esi
call sub_472404
jmp r-xdata
mov ecx esi
call sub_472599
mov al bl
push edi
call [ InternetCloseHandle@IAT ]
mov bl al
test edi edi
je r-xdata
sub_471943
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
push ebx
mov eax [ esi + 0x54 ]
and eax 0x80000000
push eax
push ebx
push ebx
push [ esi + 0x20 ]
push [ esi + 0x4 ]
call [ InternetOpenUrlW@IAT ]
mov edi eax
mov ecx esi
test edi edi
jne r-xdata
push [ ebp + 0x8 ]
push edi
call sub_4725d0
push ebx
push ebx
push ebx
push ebx
push edi
call [ HttpSendRequestW@IAT ]
test eax eax
je r-xdata
push ebx
push 0xdeadbeef
push 0x29
jmp r-xdata
push ebx
push 0xdeadbeef
push 0x2a
mov ecx esi
push edi
call sub_471aea
cmp eax 0xc8
jne r-xdata
call sub_472599
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
call [ InternetCloseHandle@IAT ]
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ebx
push eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0x20
push eax
lea eax [ ebp - 0x24 ]
push eax
push 0x5
push edi
call [ HttpQueryInfoW@IAT ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea eax [ ebp - 0x24 ]
push eax
call sub_423713
pop ecx
mov ecx esi
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
cmp [ ebp + 0xc ] bl
je r-xdata
push 0x1
push ebx
push ebx
jmp r-xdata
push edi
call sub_472404
jmp r-xdata
mov bl al
test edi edi
je r-xdata
sub_471a24
push ebp
mov ebp esp
sub esp 0x7c
push ebx
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0x7c ]
call sub_471697
lea eax [ ebp - 0x7c ]
push eax
push [ edi + 0x20 ]
call sub_4726a4
test al al
jne r-xdata
mov esi [ ebp - 0xc ]
cmp esi 0x3
je r-xdata
push 0x0
push 0xdeadbeef
push 0x1
push esi
mov ecx edi
call sub_4722ec
test al al
jne r-xdata
cmp esi 0x1
je r-xdata
lea ecx [ ebp - 0x7c ]
mov bl al
call sub_471721
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x4
dec esi
je r-xdata
push 0x0
push 0xdeadbeef
push 0x3
jmp r-xdata
push 0x0
push 0xdeadbeef
push 0x2
jmp r-xdata
push [ ebp + 0x8 ]
lea eax [ edi + 0x8c ]
push eax
call sub_47239d
movzx eax al
mov ecx edi
push eax
lea eax [ ebp - 0x7c ]
push eax
call sub_47187d
dec esi
dec esi
je r-xdata
mov ecx edi
call sub_472599
jmp r-xdata
push [ ebp + 0x8 ]
lea eax [ edi + 0x58 ]
push eax
call sub_47239d
movzx eax al
mov ecx edi
push eax
lea eax [ ebp - 0x7c ]
push eax
call sub_471b2b
jmp r-xdata
push 0x0
push 0xdeadbeef
push 0x4
jmp r-xdata
sub_471aea
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
push eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] 0x4
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x20000013
push [ ebp + 0x8 ]
call [ HttpQueryInfoW@IAT ]
test eax eax
je r-xdata
or eax 0xffffffff
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_471b2b
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
cmp [ ebx + 0x74 ] 0x4
mov esi [ edi + 0x54 ]
mov [ ebp - 0x4 ] esi
jne r-xdata
movzx eax [ ebx + 0x78 ]
push 0x0
push 0x0
push [ ebx + 0x70 ]
push [ ebx + 0x30 ]
push [ ebx + 0x20 ]
push eax
push [ ebx + 0x10 ]
push [ edi + 0x4 ]
call [ InternetConnectW@IAT ]
mov [ edi ] eax
test eax eax
jne r-xdata
or esi 0x800000
mov [ ebp - 0x4 ] esi
xor ecx ecx
push ecx
push esi
push ecx
push ecx
push ecx
push [ ebx + 0x60 ]
push ecx
push eax
call [ HttpOpenRequestW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push eax
push 0xdeadbeef
push 0xb
mov ecx edi
call sub_472599
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push eax
push 0xdeadbeef
push 0xc
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
test [ ebp - 0x4 ] 0x1000
je r-xdata
push ebx
push esi
mov ecx edi
call sub_4725d0
mov ecx edi
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push esi
call [ HttpSendRequestW@IAT ]
test eax eax
je r-xdata
push 0x4
pop ebx
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ebx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x1f
push esi
call [ InternetQueryOptionW@IAT ]
or [ ebp + 0xc ] 0x100
lea eax [ ebp + 0xc ]
push ebx
push eax
push 0x1f
push esi
call [ InternetSetOptionW@IAT ]
mov al bl
push esi
call [ InternetCloseHandle@IAT ]
push ebx
push 0xdeadbeef
push 0xd
push esi
call sub_471aea
cmp eax 0xc8
jne r-xdata
lea eax [ ebp + 0xc ]
mov [ ebp + 0xc ] ebx
push eax
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] 0x20
push eax
lea eax [ ebp - 0x24 ]
push eax
push 0x5
push esi
call [ HttpQueryInfoW@IAT ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea eax [ ebp - 0x24 ]
push eax
call sub_423713
pop ecx
mov ecx edi
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] edx
cmp [ ebp + 0x10 ] bl
je r-xdata
push 0x1
push ebx
push ebx
jmp r-xdata
push esi
call sub_472404
jmp r-xdata
call sub_472599
mov bl al
test esi esi
je r-xdata
sub_471c92
push ebp
mov ebp esp
push ebx
push esi
push edi
lea edi [ ecx + 0x78 ]
mov ecx [ ebp + 0xc ]
push edi
call sub_409b9c
mov ebx [ ebp + 0x8 ]
push 0x29
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409dae
test al al
jne r-xdata
push r--data
mov ecx edi
call sub_407d2c
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
mov ecx edi
call sub_4081a7
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_471cf6
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
mov ecx [ esi + 0x4 ]
mov edi eax
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] 0x0
push [ ebp + 0x8 ]
call sub_409863
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ ecx ]
cmp [ eax + 0xd8 ] edi
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_456aca
mov ecx [ ebp + 0x8 ]
jmp r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x4 ]
call sub_4729fa
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x1
push [ ebp - 0x4 ]
call sub_409863
test ecx ecx
je r-xdata
sub_471d67
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xec
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push esi
push edi
mov [ esp + 0x10 ] ecx
cmp [ ebx + 0x8 ] 0x2
jbe r-xdata
mov [ esp + 0xc ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
mov [ esp + 0xc ] eax
xor eax eax
jmp r-xdata
mov [ esp + 0x14 ] al
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
sub esp 0x78
mov ebx [ esp + 0x88 ]
mov ecx esp
mov esi [ eax ]
lea eax [ ebx + 0x4 ]
mov [ esp + 0x88 ] eax
lea eax [ ebx + 0x10 ]
push eax
call sub_4715c5
push [ esp + 0x8c ]
lea ecx [ esp + 0x94 ]
push [ esp + 0x88 ]
push edi
push esi
call sub_4714f0
push eax
lea ecx [ ebx + 0x4 ]
call sub_472916
lea ecx [ esp + 0x18 ]
call sub_4716ec
mov esi [ ebx + 0x8 ]
push 0x1
mov ecx [ esi ]
call sub_4727b2
mov eax [ esi ]
xor edi edi
push edi
push [ eax + 0x18 ]
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov eax [ esi ]
push edi
push [ eax + 0x1c ]
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_41fea1
mov bl [ esp + 0x14 ]
mov eax [ esi ]
test bl bl
je r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_409c53
cmp [ ebx + 0x8 ] 0x3
jbe r-xdata
mov ecx [ eax + 0x8 ]
mov edi [ eax + 0xc ]
mov [ esp + 0xc ] ecx
mov eax [ eax + 0xd8 ]
mov [ esp + 0xc ] eax
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esp + 0x10 ]
call sub_4728eb
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov eax [ esp + 0xc ]
mov [ esi + 0xc ] 0x2
mov [ esi ] eax
mov [ esi + 0x4 ] edi
test bl bl
jne r-xdata
sub_471ea5
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
mov esi [ edi + 0x4 ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov eax [ edi + 0x4 ]
xor ebx ebx
mov [ ebp + 0x8 ] eax
push 0x0
push 0x1
mov ecx [ esi ]
cmp [ ecx + 0xd8 ] eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
jmp r-xdata
mov ecx [ eax ]
push 0x0
add ecx 0xd4
call sub_472891
test al al
jne r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_456aca
mov esi [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_456aca
mov eax [ ebp + 0x8 ]
jmp r-xdata
inc ebx
cmp [ ebx + 0x8 ] 0x1
jbe r-xdata
test esi esi
je r-xdata
test eax eax
je r-xdata
or eax 0xffffffff
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
jmp r-xdata
xor edx edx
sub eax edx
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx edi
call sub_40942e
cmp [ edi + 0xc ] 0x5
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov edi [ eax + 0x8 ]
mov ebx [ eax + 0xc ]
dec eax
je r-xdata
xor edi edi
mov edi [ edi ]
jmp r-xdata
mov eax [ esi ]
mov edi [ eax + 0x10 ]
mov ebx [ eax + 0x14 ]
jmp r-xdata
dec eax
je r-xdata
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
jmp r-xdata
push 0x6
push 0x1
push edi
mov [ ebp + 0xc ] edi
call sub_4091b0
mov eax [ esi ]
push 0x0
push 0x1
push 0x2
mov ebx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
push edi
mov [ ebp + 0x8 ] eax
call sub_408ea0
add esp 0x1c
mov edi eax
mov ecx edi
call sub_409a20
mov eax [ ebp + 0x8 ]
push 0x2
pop ecx
mov [ edi + 0xc ] ecx
mov [ edi ] ebx
mov [ edi + 0x4 ] eax
mov eax [ esi ]
push 0x1
push 0x1
push ecx
mov ebx [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
push [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
call sub_408ea0
add esp 0x10
mov edi eax
mov ecx edi
call sub_409a20
mov eax [ ebp + 0x8 ]
mov [ edi + 0xc ] 0x2
mov [ edi ] ebx
mov [ edi + 0x4 ] eax
mov ecx [ esi ]
push 0x0
add ecx 0xd4
call sub_472891
mov edi [ ebp + 0xc ]
mov [ ebp + 0x8 ] al
push [ ebp + 0x8 ]
push 0x2
push 0x1
push 0x2
push edi
call sub_408ea0
add esp 0x10
mov ecx eax
call sub_409863
mov ecx [ esi ]
call sub_47237c
mov [ ebp + 0x8 ] al
push [ ebp + 0x8 ]
push 0x3
push 0x1
push 0x2
push edi
call sub_408ea0
add esp 0x10
mov ecx eax
call sub_409863
mov eax [ esi ]
push 0x4
push 0x1
push 0x2
mov ebx [ eax + 0x18 ]
push edi
call sub_408ea0
add esp 0x10
mov edi eax
mov ecx edi
call sub_409a20
xor ecx ecx
inc ecx
push 0x5
mov [ edi + 0xc ] ecx
mov [ edi ] ebx
mov eax [ esi ]
push ecx
push 0x2
push [ ebp + 0xc ]
mov edi [ eax + 0x1c ]
call sub_408ea0
add esp 0x10
mov esi eax
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x2
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
jmp r-xdata
mov ecx [ esi ]
push edx
add ecx 0xd4
call sub_472891
dec eax
je r-xdata
mov ecx [ esi ]
call sub_47237c
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] al
push [ ebp + 0x8 ]
call sub_409863
jmp r-xdata
mov eax [ esi ]
mov edi [ eax + 0x18 ]
dec eax
je r-xdata
mov eax [ esi ]
mov edi [ eax + 0x1c ]
jmp r-xdata
push edx
push 0x2
jmp r-xdata
mov esi [ ebp + 0xc ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
sub_47212b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xe4
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
push edi
mov [ esp + 0xc ] ebx
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
xor edi edi
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov edi eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
sub esp 0x78
mov ecx esp
mov esi [ eax ]
lea eax [ ebx + 0x10 ]
push eax
call sub_4715c5
push 0x0
push edi
push r--data
push esi
lea ecx [ esp + 0x98 ]
call sub_4714f0
push 0x0
lea ecx [ esp + 0x14 ]
call sub_471a24
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi [ esp + 0x20 ]
mov ebx [ esp + 0x24 ]
call sub_409a20
mov [ esi + 0x4 ] ebx
mov ebx [ esp + 0xc ]
mov [ esi + 0xc ] 0x2
mov [ esi ] edi
push 0x0
mov eax [ ebx ]
push [ esp + 0x2c ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov eax [ ebx ]
push 0x0
push [ esp + 0x30 ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_41fea1
lea ecx [ esp + 0x10 ]
call sub_4716ec
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4721f3
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xf4
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
xor ebx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov ebx eax
jmp r-xdata
push [ ebp + 0xc ]
lea ecx [ esp + 0x68 ]
call sub_4717ea
mov eax [ esp + 0x28 ]
and [ esp + 0x18 ] 0x0
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x2c ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x10 ]
push ecx
push eax
mov eax [ edi ]
mov [ esp + 0x24 ] 0x2
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_45685a
lea ecx [ esp + 0x10 ]
call sub_409a20
mov eax [ edi ]
push 0x0
push [ esp + 0x3c ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov eax [ edi ]
push 0x0
push [ esp + 0x40 ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
mov ecx [ ebp + 0xc ]
push ebx
call sub_409bf8
jmp r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
sub esp 0x78
mov ecx esp
mov esi [ eax ]
lea eax [ edi + 0x10 ]
push eax
call sub_4715c5
push 0x0
push ebx
mov ebx r--data
lea ecx [ esp + 0xa0 ]
push ebx
push esi
call sub_4714f0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_4727b2
cmp [ esp + 0x38 ] 0x0
je r-xdata
lea ecx [ esp + 0x20 ]
call sub_4716ec
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4722ec
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
push esi
inc ebx
push edi
mov edi ecx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
movzx eax [ edi + 0x58 ]
movzx eax [ edi + 0x8c ]
jmp r-xdata
mov eax [ edi + 0xc0 ]
xor esi esi
push esi
cmp ecx ebx
jne r-xdata
lea edx [ edi + 0x7c ]
lea edx [ edi + 0xb0 ]
movsx ecx ax
cmp [ ebp + 0x8 ] ebx
je r-xdata
cmp ecx 0x2
jne r-xdata
push esi
push esi
push ebx
jmp r-xdata
push esi
push esi
push esi
push r--data
push [ edx ]
push 0x3
jmp r-xdata
push eax
call [ InternetOpenW@IAT ]
mov [ edi + 0x4 ] eax
cmp eax esi
jne r-xdata
cmp [ edi + 0xdc ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov al bl
push 0x8
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ebx
push ecx
push 0x32
push esi
mov [ ebp - 0x4 ] esi
call [ InternetSetOptionW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47237c
push ebx
push esi
mov esi ecx
xor ebx ebx
push ebx
lea ecx [ esi + 0xd4 ]
call sub_472891
test al al
je r-xdata
pop esi
mov al bl
pop ebx
retn
cmp [ esi + 0x18 ] ebx
jne r-xdata
inc ebx
sub_47239d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
movsx eax [ eax ]
dec eax
je r-xdata
mov al bl
pop ebx
pop ebp
retn 0x4
dec eax
je r-xdata
mov bl 0x1
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ebx
push eax
push ebx
push 0x26
push ebx
call [ InternetQueryOptionW@IAT ]
cmp [ ebp + 0x8 ] ebx
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_420f36
push [ ebp + 0x8 ]
mov esi eax
push ebx
push esi
call sub_422f60
add esp 0x10
lea eax [ ebp + 0x8 ]
push eax
push esi
push 0x26
push ebx
call [ InternetQueryOptionW@IAT ]
cmp [ esi + 0x4 ] ebx
push esi
setne bl
call j_sub_422ed5#3
pop ecx
pop esi
jmp r-xdata
sub_472419
push ebp
mov ebp esp
sub esp 0x404
push ebx
push esi
mov esi ecx
push edi
push r--data
push [ esi + 0x34 ]
call sub_4253cb
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov [ ebp - 0x4 ] 0x1
xor ebx ebx
push eax
push 0xdeadbeef
push 0x1f
jmp r-xdata
push ebx
push 0xdeadbeef
push 0x20
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov ecx esi
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x4
push edi
call sub_425516
pop ecx
mov eax [ esi + 0x8 ]
mov ecx esi
or eax [ esi + 0xc ]
jne r-xdata
push edi
push 0x1
push [ ebp - 0x4 ]
lea eax [ ebp - 0x404 ]
push eax
call sub_4249d3
mov eax [ ebp - 0x4 ]
add esp 0x10
add [ esi + 0x8 ] eax
adc [ esi + 0xc ] ebx
test eax eax
jne r-xdata
push 0x1
push ebx
push ebx
jmp r-xdata
push ebx
push 0xdeadbeef
push 0x21
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x400
lea eax [ ebp - 0x404 ]
push eax
push [ ebp + 0x8 ]
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
call sub_472599
mov bl al
test edi edi
je r-xdata
sub_4724d4
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] 0x1
push ebx
push ebx
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] 0x1
push eax
push [ ebp + 0x8 ]
mov esi ecx
call [ InternetQueryDataAvailable@IAT ]
mov eax [ ebp - 0x8 ]
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov eax 0x400
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
or eax [ esi + 0xc ]
jne r-xdata
test eax eax
jne r-xdata
push 0x1
push ebx
push ebx
push ebx
push 0xdeadbeef
push 0x21
jmp r-xdata
push eax
call sub_420f36
mov edi eax
mov eax [ ebp - 0x8 ]
pop ecx
mov edi ebx
jmp r-xdata
mov ecx esi
call sub_472599
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push edi
call j_sub_422ed5#3
pop ecx
push ebx
push 0xdeadbeef
push 0x20
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push edi
push [ ebp + 0x8 ]
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
push edi
call j_sub_422ed5#3
pop ecx
push [ ebp - 0x4 ]
lea ecx [ esi + 0x44 ]
push edi
call sub_472829
mov eax [ ebp - 0x4 ]
add [ esi + 0x8 ] eax
adc [ esi + 0xc ] ebx
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
sub_472599
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xdeadbeef
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x18 ] eax
jne r-xdata
mov eax [ esi + 0xd4 ]
pop esi
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ esi + 0x1c ] eax
mov al [ ebp + 0x10 ]
pop ebp
retn 0xc
push eax
call [ SetEvent@IAT ]
sub_4725d0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
lea edx [ ecx + 0x90 ]
cmp [ eax + 0x70 ] 0x1
je r-xdata
cmp [ eax + 0x70 ] 0x1
push edi
lea edi [ ecx + 0xa0 ]
je r-xdata
lea edx [ ecx + 0x5c ]
mov eax [ edx + 0x4 ]
test eax eax
je r-xdata
lea edi [ ecx + 0x6c ]
pop edi
pop ebp
retn 0x8
inc eax
push eax
push [ edx ]
push 0x2b
push [ ebp + 0x8 ]
call [ InternetSetOptionW@IAT ]
mov eax [ edi + 0x4 ]
inc eax
push eax
push [ edi ]
push 0x2c
push [ ebp + 0x8 ]
call [ InternetSetOptionW@IAT ]
sub_472622
push ebx
mov ebx edx
push esi
push edi
mov edi ecx
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
push 0x2
pop ecx
dec eax
je r-xdata
xor eax eax
inc eax
dec eax
je r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
lea ecx [ edi + 0x24 ]
call sub_4081a7
dec eax
je r-xdata
mov [ edi ] cx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
lea ecx [ edi + 0x4 ]
call sub_4081a7
dec eax
jne r-xdata
mov eax [ ebx + 0x8 ]
sub eax ecx
je r-xdata
mov [ edi ] ax
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
lea ecx [ edi + 0x14 ]
call sub_4081a7
sub_4726a4
push ebp
mov ebp esp
sub esp 0x4c
push esi
push 0x38
xor esi esi
lea eax [ ebp - 0x48 ]
push esi
push eax
call sub_422f60
xor eax eax
mov [ ebp - 0x4c ] 0x7c
inc eax
add esp 0xc
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x4c ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_422d7c
pop ecx
push eax
push [ ebp + 0x8 ]
call [ InternetCrackUrlW@IAT ]
test eax eax
jne r-xdata
push ebx
mov ebx [ ebp + 0xc ]
mov ecx ebx
push edi
push [ ebp - 0x44 ]
push esi
push [ ebp - 0x48 ]
call sub_4078ad
push [ ebp - 0x38 ]
lea ecx [ ebx + 0x10 ]
push esi
push [ ebp - 0x3c ]
call sub_4078ad
push [ ebp - 0x2c ]
lea ecx [ ebx + 0x20 ]
push esi
push [ ebp - 0x30 ]
call sub_4078ad
push [ ebp - 0x24 ]
lea ecx [ ebx + 0x30 ]
push esi
push [ ebp - 0x28 ]
call sub_4078ad
push [ ebp - 0x1c ]
lea ecx [ ebx + 0x40 ]
push esi
push [ ebp - 0x20 ]
call sub_4078ad
push [ ebp - 0x14 ]
lea esi [ ebx + 0x50 ]
push 0x0
push [ ebp - 0x18 ]
mov ecx esi
call sub_4078ad
push esi
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebx + 0x40 ]
call sub_457f03
push eax
lea ecx [ ebx + 0x60 ]
call sub_4081a7
lea ecx [ ebp - 0x10 ]
call sub_405a64
mov ax [ ebp - 0x34 ]
mov [ ebx + 0x78 ] ax
mov eax [ ebp - 0x40 ]
mov [ ebx + 0x74 ] eax
dec eax
je r-xdata
xor al al
jmp r-xdata
mov [ ebx + 0x70 ] 0x1
dec eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x70 ] 0x2
jmp r-xdata
mov [ ebx + 0x70 ] 0x3
jmp r-xdata
pop edi
mov al 0x1
pop ebx
sub_4727b2
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0xd0 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_471a24
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub esp 0x10
lea ecx [ esi + 0xd4 ]
call sub_471850
push esi
push 0x0
push sub_472882
call sub_425e3c
xor eax eax
add esp 0xc
cmp [ esi + 0x18 ] eax
sete al
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_4727fc
push edi
mov edi ecx
push [ edi + 0x4 ]
call [ InternetCloseHandle@IAT ]
push [ edi ]
call [ InternetCloseHandle@IAT ]
and [ edi ] 0x0
lea ecx [ edi + 0xd4 ]
and [ edi + 0x4 ] 0x0
push 0x2710
call sub_472891
pop edi
retn
sub_472829
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
test ebx ebx
je r-xdata
xor al al
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
push eax
call sub_47296e
push 0x0
call j_sub_422ed5#3
mov eax [ edi + 0x4 ]
pop ecx
mov ecx [ edi + 0x8 ]
mov eax [ eax + ecx * 4 - 0x4 ]
mov [ eax ] ebx
mov ecx [ edi + 0x8 ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 - 0x4 ]
mov [ eax + 0x4 ] esi
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_472891
push ebp
mov ebp esp
cmp [ ecx ] 0x0
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
push [ ecx ]
call [ WaitForSingleObject@IAT ]
neg eax
sbb eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_4728b1
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
and [ esi + 0x8 ] 0x0
pop edi
pop esi
retn
push ebx
mov eax [ esi + 0x4 ]
and [ eax + edi * 4 ] 0x0
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push [ ebx ]
call j_sub_422ed5#3
push ebx
call j_sub_422ed5#3
pop ecx
pop ecx
mov eax [ esi + 0x4 ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
pop ebx
sub_4728eb
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
pop esi
retn
mov eax [ ecx + 0x8 ]
push ecx
mov [ esi + 0x4 ] eax
call sub_4717c4
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
and [ esi ] 0x0
and [ eax + 0x4 ] 0x0
jmp r-xdata
dec [ esi + 0x8 ]
sub_472916
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
xor edi edi
push 0xc
cmp [ esi + 0x4 ] edi
jne r-xdata
call sub_420f36
pop ecx
test eax eax
je r-xdata
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_471603
mov edi eax
mov [ esi ] edi
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx eax
call sub_471603
mov edi eax
inc [ esi + 0x8 ]
mov [ esi + 0x4 ] edi
pop edi
pop esi
pop ebp
retn 0x4
sub_47296e
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
jne r-xdata
push 0x8
call sub_420f36
mov edi eax
pop ecx
test edi edi
je r-xdata
add eax eax
cmp eax 0x8
jae r-xdata
xor edi edi
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
mov [ edi ] ecx
mov ecx [ edx + 0x4 ]
mov [ edi + 0x4 ] ecx
jmp r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
cmp [ esi + 0x4 ] 0x0
mov edi eax
pop ecx
je r-xdata
push 0x8
pop eax
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edi
inc [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] edi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_420fc0
push [ esi + 0x4 ]
call j_sub_422ed5#3
add esp 0x10
sub_4729fa
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
mov eax [ ecx + 0x4 ]
test edx edx
je r-xdata
test eax eax
je r-xdata
mov [ edx + 0x4 ] eax
cmp ecx [ esi ]
jne r-xdata
mov [ eax + 0x8 ] edx
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi ] eax
push ecx
call sub_4717c4
and [ edi ] 0x0
dec [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] edx
sub_472a3a
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
call sub_4262a0
mov esi [ ebp + 0xc ]
add esp 0x8
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
xor eax eax
fstp [ esi ]
mov [ esi + 0xc ] 0x3
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_472a7c
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
call sub_4263f0
mov esi [ ebp + 0xc ]
add esp 0x8
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
xor eax eax
fstp [ esi ]
mov [ esi + 0xc ] 0x3
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_472abe
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
lea ecx [ ebp + 0x8 ]
or edx 0xffffffff
mov eax [ eax ]
mov ax [ eax ]
mov [ ebp + 0x8 ] ax
xor eax eax
mov [ ebp + 0xa ] ax
call sub_46592e
mov esi [ ebp + 0xc ]
mov ebx eax
mov ecx esi
movzx edi [ ebx ]
call sub_409a20
push ebx
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
call j_sub_422ed5#3
pop ecx
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_472b18
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov eax [ eax ]
movzx edi [ eax ]
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
sub_472b70
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov eax [ ebx + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
xor esi esi
mov edi eax
inc esi
cmp [ ebp + 0x8 ] esi
jbe r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
pop ebp
retn 0x8
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + esi * 4 ]
call sub_409c9c
and edi eax
inc esi
cmp esi [ ebp + 0x8 ]
jb r-xdata
sub_472bc2
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
not edi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
sub_472bf3
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov eax [ ebx + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
xor esi esi
mov edi eax
inc esi
cmp [ ebp + 0x8 ] esi
jbe r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
pop ebp
retn 0x8
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + esi * 4 ]
call sub_409c9c
or edi eax
inc esi
cmp esi [ ebp + 0x8 ]
jb r-xdata
sub_472c45
push ebp
mov ebp esp
sub esp 0xc
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
xor esi esi
mov [ ebp - 0xc ] ecx
inc esi
xor ebx ebx
cmp [ edx + 0x8 ] 0x3
push 0x10
pop edi
mov [ ebp - 0x4 ] esi
jb r-xdata
cmp [ edx + 0x8 ] 0x2
jb r-xdata
mov eax [ edx + 0x4 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x8 ] ecx
cmp [ ecx + 0xc ] 0xa
jne r-xdata
mov ecx [ edx + 0x4 ]
mov ecx [ ecx ]
call sub_409c9c
mov [ ebp - 0x4 ] eax
cmp edi 0x20
jge r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov edx [ ebp + 0x8 ]
mov esi eax
call sub_409997
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x8 ]
cmp [ eax ] ebx
je r-xdata
call sub_4687b0
cmp eax 0x29
je r-xdata
and ebx eax
mov [ ebp + 0x8 ] ebx
test esi esi
jns r-xdata
or ebx 0xffffffff
mov ecx edi
shl ebx cl
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov eax [ eax ]
movzx eax [ eax ]
sub eax 0x42
je r-xdata
cmp esi edi
jge r-xdata
add esi edi
js r-xdata
push 0x8
dec eax
dec eax
je r-xdata
sub esi edi
test esi esi
jne r-xdata
jmp r-xdata
push 0x20
jmp r-xdata
sub eax 0x13
je r-xdata
xor ebx ebx
mov ecx edi
sub ecx esi
inc ebx
shl ebx cl
dec ebx
mov [ ebp - 0xc ] ecx
mov ecx esi
cmp edi 0x20
jge r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov eax [ ebp - 0x4 ]
jmp r-xdata
pop edi
mov esi [ ebp - 0x4 ]
sub eax 0xb
je r-xdata
mov eax ebx
and eax [ ebp - 0x4 ]
shl eax cl
or [ ebp + 0x8 ] eax
mov edx ebx
and edx eax
xor eax eax
shl edx cl
inc eax
mov ecx edi
shl eax cl
dec eax
and edx eax
or [ ebp + 0x8 ] edx
jmp r-xdata
mov [ esi ] eax
xor eax eax
mov [ esi + 0xc ] 0x1
dec eax
dec eax
je r-xdata
not ebx
xor eax eax
mov ecx edi
inc eax
shl eax cl
sub eax ebx
lea ebx [ eax - 0x1 ]
jmp r-xdata
cmp edi 0x20
jge r-xdata
sub eax 0x13
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov edx [ ebp - 0xc ]
mov eax 0x7fffffff
and ebx [ ebp - 0x4 ]
lea ecx [ edx - 0x1 ]
sar eax cl
mov ecx edx
sar ebx cl
and eax ebx
or eax [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov edx [ ebp - 0xc ]
xor eax eax
inc eax
mov [ esi ] ebx
push ebx
mov [ esi + 0xc ] eax
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_472dd6
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov ecx [ esi + 0x4 ]
mov edi [ ecx ]
mov ecx [ ecx + 0x4 ]
test eax eax
js r-xdata
call sub_409c9c
mov esi eax
mov ecx edi
neg esi
call sub_409c9c
mov edi eax
mov ecx esi
shl edi cl
call sub_409c9c
mov ecx edi
mov esi eax
call sub_409c9c
mov edi eax
mov ecx esi
sar edi cl
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
sub_472e3c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov eax [ ebx + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
xor esi esi
mov edi eax
inc esi
cmp [ ebp + 0x8 ] esi
jbe r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
pop ebp
retn 0x8
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + esi * 4 ]
call sub_409c9c
xor edi eax
inc esi
cmp esi [ ebp + 0x8 ]
jb r-xdata
sub_472e8e
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
call sub_426af0
mov esi [ ebp + 0xc ]
add esp 0x8
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
mov ecx esi
push 0x0
fstp [ esi ]
mov [ esi + 0xc ] 0x3
call sub_409d46
push edx
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4738c4
push eax
mov ecx esi
call sub_409e9c
lea ecx [ ebp - 0x10 ]
call sub_409a20
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_472ef5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
mov eax [ eax + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax ]
call sub_409c9c
test eax eax
jne r-xdata
cmp eax 0xff
jle r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4077c7
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_465b74
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_409b9c
lea ecx [ ebp - 0x10 ]
call sub_405a64
jmp r-xdata
cmp eax 0x80
jge r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
mov eax [ esi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
jmp r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
or edx 0xffffffff
mov [ ebp + 0x8 ] al
lea ecx [ ebp + 0x8 ]
mov [ ebp + 0x9 ] 0x0
call sub_465543
mov ecx [ ebp + 0xc ]
mov esi eax
push esi
call sub_409bf8
push esi
call j_sub_422ed5#3
pop ecx
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ax
xor eax eax
mov [ ebp + 0xa ] ax
lea eax [ ebp + 0x8 ]
push eax
call sub_409bf8
jmp r-xdata
sub_472fa9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
mov eax [ eax + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax ]
call sub_409c9c
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
cmp eax 0xffff
jle r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4077c7
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_465b74
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_409b9c
lea ecx [ ebp - 0x10 ]
call sub_405a64
jmp r-xdata
mov [ ebp + 0x8 ] ax
xor eax eax
mov [ ebp + 0xa ] ax
lea eax [ ebp + 0x8 ]
push eax
call sub_409bf8
push r--data
call sub_409bf8
mov eax [ esi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
jmp r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_47302d
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] ecx
push edi
mov eax [ ebx + 0x4 ]
xor edi edi
mov esi [ eax ]
mov ecx esi
call sub_409997
mov esi [ esi + 0x8 ]
lea edx [ ebp - 0xc ]
push 0x10
mov ecx [ esi ]
call sub_41fb3b
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x8 ] 0x1
jbe r-xdata
mov edx [ ebp - 0x4 ]
push edi
push 0x1
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
cmp [ esi + 0x4 ] 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
dec eax
je r-xdata
call sub_409a20
mov eax [ ebp - 0xc ]
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
call sub_409a20
mov eax [ ebp - 0xc ]
mov [ esi ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xc ] 0x2
mov [ esi + 0x4 ] eax
jmp r-xdata
xor edi edi
inc edi
dec eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x2
pop edi
jmp r-xdata
dec eax
jne r-xdata
push edi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x1c ]
push [ ebp - 0xc ]
push eax
call sub_4738c4
mov ecx [ ebp + 0xc ]
push eax
call sub_409e9c
lea ecx [ ebp - 0x1c ]
call sub_409a20
jmp r-xdata
push 0x2
push [ ebp - 0x8 ]
lea eax [ ebp - 0x1c ]
push [ ebp - 0xc ]
push eax
call sub_4738c4
mov ecx eax
call sub_409d46
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edx
call sub_409a20
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
fld [ ebp - 0xc ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
jmp r-xdata
sub_473133
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
call sub_425fa0
mov esi [ ebp + 0xc ]
add esp 0x8
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
xor eax eax
fstp [ esi ]
mov [ esi + 0xc ] 0x3
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_473175
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
call sub_4269c0
mov esi [ ebp + 0xc ]
add esp 0x8
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
mov ecx esi
push 0x0
fstp [ esi ]
mov [ esi + 0xc ] 0x3
call sub_409d46
push edx
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4738c4
push eax
mov ecx esi
call sub_409e9c
lea ecx [ ebp - 0x10 ]
call sub_409a20
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4731dc
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_4687da
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x7
mov eax [ edi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_4687da
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x7
mov [ esi ] edi
jmp r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
sub_473248
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x6
jne r-xdata
cmp [ eax + 0xc ] 0x5
je r-xdata
mov eax [ eax ]
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
sub_47327d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x6
jne r-xdata
cmp [ eax + 0xc ] 0xb
je r-xdata
mov eax [ eax ]
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
sub_4732b2
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
cmp [ esi + 0xc ] 0x6
jne r-xdata
mov edi [ ebp + 0xc ]
mov ecx edi
call sub_409a20
and [ edi ] 0x0
xor ebx ebx
inc ebx
mov ecx esi
mov [ edi + 0xc ] ebx
call sub_4562f8
test al al
je r-xdata
mov esi [ esi ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esi + 0xc ] 0x3
jne r-xdata
mov ecx esi
call sub_409cf8
call sub_43b536
mov [ ebp - 0x8 ] eax
mov ecx esi
mov [ ebp - 0x4 ] edx
fild [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
call sub_409cf8
fld [ ebp - 0x8 ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov ecx edi
call sub_409a20
mov [ edi + 0xc ] ebx
mov [ edi ] ebx
sub_473336
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
cmp [ ecx + 0xc ] 0x6
jne r-xdata
cmp [ ecx + 0xc ] 0x7
push esi
push edi
jne r-xdata
mov ecx [ ecx ]
xor edi edi
call sub_4687da
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
xor edi edi
inc edi
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
sub_473383
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
mov edi [ eax ]
cmp [ edi + 0xc ] 0x6
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
xor ebx ebx
inc ebx
mov ecx edi
mov [ esi + 0xc ] ebx
call sub_4562f8
test al al
je r-xdata
mov edi [ edi ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ edi + 0xc ] ebx
je r-xdata
mov ecx esi
call sub_409a20
mov [ esi ] ebx
mov [ esi + 0xc ] ebx
cmp [ edi + 0xc ] 0x2
je r-xdata
mov ecx edi
call sub_409cf8
call sub_43b536
mov [ ebp - 0x8 ] eax
mov ecx edi
mov [ ebp - 0x4 ] edx
fild [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
call sub_409cf8
fld [ ebp - 0x8 ]
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
sub_47340c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x6
jne r-xdata
cmp [ eax + 0xc ] 0xf
je r-xdata
mov eax [ eax ]
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
sub_473441
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
cmp [ ecx + 0xc ] 0x6
jne r-xdata
call sub_4562f8
test al al
jne r-xdata
mov ecx [ ecx ]
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
sub_473479
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x6
jne r-xdata
cmp [ eax + 0xc ] 0x7
je r-xdata
mov eax [ eax ]
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
sub_4734ae
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x6
jne r-xdata
cmp [ eax + 0xc ] 0x4
je r-xdata
mov eax [ eax ]
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
sub_4734e3
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
call sub_426030
mov esi [ ebp + 0xc ]
add esp 0x8
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
xor eax eax
fstp [ esi ]
mov [ esi + 0xc ] 0x3
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_473525
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
inc ebx
push edi
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
cmp [ eax + 0xc ] ebx
jne r-xdata
mov edi [ esi + 0x4 ]
mov ecx [ edi ]
call sub_409c42
test al al
je r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0xc ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
mov ecx esi
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
call sub_4268d0
mov esi [ ebp + 0xc ]
add esp 0x10
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
mov ecx [ edi + 0x4 ]
call sub_409c42
test al al
je r-xdata
call sub_409c9c
test eax eax
je r-xdata
mov ecx [ edi + 0x4 ]
call sub_409d46
or eax edx
je r-xdata
mov ecx [ esi + 0x4 ]
mov esi [ ecx ]
mov ecx [ ecx + 0x4 ]
call sub_409c9c
mov ecx esi
mov edi eax
call sub_409c9c
cdq
idiv edi
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi edx
call sub_409a20
mov [ esi + 0xc ] ebx
mov [ esi ] edi
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov ebx [ ecx ]
mov ecx [ ecx + 0x4 ]
call sub_409d46
mov ecx ebx
mov edi eax
mov esi edx
call sub_409d46
push esi
push edi
push edx
push eax
call sub_434680
mov edi [ ebp + 0xc ]
mov esi eax
mov ecx edi
mov ebx edx
call sub_409a20
mov [ edi + 0xc ] 0x2
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47362a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_4687da
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x7
pop esi
pop ebp
retn 0x8
sub_473659
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] 0x0
cmp [ ebx + 0x8 ] 0x3
jne r-xdata
mov edi [ ebp + 0xc ]
mov ecx edi
call sub_409a20
and [ edi ] 0x0
xor edx edx
inc edx
mov [ edi + 0xc ] edx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
cmp eax 0x1
jne r-xdata
call sub_468890
cmp eax edx
je r-xdata
mov [ ebp - 0x1 ] al
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call sub_409cf8
fst [ ebp - 0x14 ]
fldz
fucom st1
fnstsw ax
test ah 0x44
jpe r-xdata
add eax 0xfffffffe
cmp eax edx
ja r-xdata
fcompp
fnstsw ax
test ah 0x1
je r-xdata
fstp st0
mov ecx edi
fstp st0
call sub_409a20
fldz
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x5
je r-xdata
push 0x0
push 0x1
jmp r-xdata
call sub_468890
fmul [ ebp - 0x14 ]
jmp r-xdata
fstp [ edi ]
mov [ edi + 0xc ] 0x3
push 0x0
push edx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0xc ] 0x5
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
jmp r-xdata
fstp [ ebp - 0x14 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
call sub_409cf8
mov eax [ ebx + 0x4 ]
fstp [ ebp - 0xc ]
mov ecx [ eax ]
call sub_409cf8
fst [ ebp - 0x14 ]
fld [ ebp - 0xc ]
fucom st1
fnstsw ax
test ah 0x44
jpe r-xdata
call sub_409c9c
mov ecx [ ebx + 0x4 ]
mov [ ebp + 0xc ] eax
mov ecx [ ecx ]
call sub_409c9c
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
cmp eax ecx
jne r-xdata
fcompp
fnstsw ax
test ah 0x41
jpe r-xdata
fstp st0
fstp st0
jmp r-xdata
mov ebx ecx
sub ebx eax
cmp eax ecx
jge r-xdata
mov ecx edi
call sub_409a20
mov eax [ ebp + 0x8 ]
mov [ edi + 0xc ] 0x1
mov [ edi ] eax
jmp r-xdata
call sub_468890
fld [ ebp - 0xc ]
fld [ ebp - 0x14 ]
fsub st1
fxch st2
fmulp st1
faddp st1
jmp r-xdata
mov ecx edi
call sub_409a20
fld [ ebp - 0x14 ]
test ebx ebx
jle r-xdata
cmp ebx 0x7ffffff
jge r-xdata
call sub_46884b
cdq
mov ecx edi
idiv ebx
mov esi [ ebp + 0x8 ]
add esi edx
call sub_409a20
mov [ edi + 0xc ] 0x1
mov [ edi ] esi
jmp r-xdata
inc ebx
sub_47381b
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
call sub_426914
mov esi [ ebp + 0xc ]
add esp 0x8
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
xor eax eax
fstp [ esi ]
mov [ esi + 0xc ] 0x3
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_47385d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_409b9c
xor eax eax
pop esi
pop ebp
retn 0x8
sub_473882
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
call sub_426540
mov esi [ ebp + 0xc ]
add esp 0x8
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
xor eax eax
fstp [ esi ]
mov [ esi + 0xc ] 0x3
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4738c4
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
xor edx edx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
inc ebx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] ebx
sub eax edx
je r-xdata
mov ebx [ ebp + 0x10 ]
mov eax ebx
push edi
mov edi [ ebp + 0xc ]
mov ecx edi
add ecx 0x80000000
adc eax edx
cmp eax edx
ja r-xdata
mov ecx esi
dec eax
je r-xdata
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x2
mov [ esi + 0x4 ] ebx
jb r-xdata
call sub_409a20
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] ebx
mov [ esi ] eax
jmp r-xdata
call sub_409a20
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] 0x2
mov [ esi + 0x4 ] eax
jmp r-xdata
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
jmp r-xdata
cmp ecx 0xffffffff
ja r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
mov [ esi ] edi
pop edi
sub_473957
push ebp
mov ebp esp
push ebx
push esi
mov ebx ecx
lea ecx [ ebp + 0x8 ]
push edi
call sub_40322f
mov edi [ ebp + 0xc ]
test edi edi
jns r-xdata
mov eax 0xff
cmp edi eax
jle r-xdata
xor edi edi
mov esi [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
push eax
push ebx
push edi
push esi
call sub_4778e9
lea eax [ ebx + 0x3 ]
push eax
lea eax [ ebx + 0x2 ]
push eax
mov eax esi
push edi
shr eax 0x8
push eax
call sub_4778e9
lea eax [ ebx + 0x5 ]
sar esi 0x10
push eax
lea eax [ ebx + 0x4 ]
push eax
push edi
push esi
call sub_4778e9
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x8
mov edi eax
sub_4739d5
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi ecx
mov ecx esi
call sub_409a20
xor ebx ebx
mov [ esi + 0xc ] 0x1
push ebx
mov [ esi ] ebx
call sub_408561
lea ecx [ esp + 0x20 ]
call sub_4077c7
push [ ebp + 0x14 ]
lea eax [ esp + 0x24 ]
mov ecx edi
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_473aff
test al al
je r-xdata
lea ecx [ esp + 0x20 ]
call sub_405a64
mov ecx rw-data
call sub_40843f
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x1c
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] r--data
push eax
push [ esp + 0x24 ]
mov [ esp + 0x1c ] ebx
push ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
call sub_4063a0
cmp [ esp + 0x18 ] 0x1
jbe r-xdata
mov bl 0x1
mov ecx edi
call sub_413ccb
push [ ebp + 0x1c ]
mov esi eax
mov [ esp + 0x10 ] ebx
push [ ebp + 0x10 ]
lea eax [ esp + 0x14 ]
mov ecx edi
push eax
lea eax [ esp + 0x1c ]
push eax
push ebx
call sub_40fe40
test eax eax
jns r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
push esi
mov ecx edi
call sub_413c19
lea ecx [ esp + 0x10 ]
call sub_407776
push esi
mov ecx edi
call sub_413c19
jmp r-xdata
sub_473ab6
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x10 ]
call [ GetWindowRect@IAT ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x10 ]
mov [ ecx ] eax
mov eax [ ebp - 0xc ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
push eax
push [ ebp + 0x10 ]
call [ ClientToScreen@IAT ]
sub_473aff
push ebp
mov ebp esp
sub esp 0xa4
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_409fbd
mov ecx eax
test ecx ecx
je r-xdata
xor al al
mov ebx [ ebp + 0xc ]
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x8 ]
sub eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] r--data
cmp eax [ ecx + 0x18 ]
jl r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4563f2
cmp eax [ ecx + 0x14 ]
jg r-xdata
push [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_4081a7
push r--data
mov ecx esi
call sub_407e0b
mov eax [ ebp + 0x14 ]
mov edi eax
cmp eax [ ebx + 0x8 ]
jae r-xdata
push r--data
mov ecx esi
call sub_407e0b
lea ecx [ ebp - 0x10 ]
call sub_4563f2
mov al 0x1
jmp r-xdata
push edi
push r--data
lea eax [ ebp - 0xa0 ]
push 0x40
push eax
call sub_426c1a
add esp 0x10
lea eax [ ebp - 0xa0 ]
lea ecx [ ebp - 0x20 ]
push eax
call sub_407f41
mov eax [ ebx + 0x4 ]
push 0x1
push 0x0
push [ eax + edi * 4 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_408620
lea ecx [ ebp - 0x20 ]
call sub_405a64
mov ecx esi
cmp edi [ ebp + 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push r--data
push r--data
jmp r-xdata
call sub_407e0b
lea eax [ ebp - 0xa0 ]
mov ecx esi
push eax
call sub_407e0b
inc edi
cmp edi [ ebx + 0x8 ]
jb r-xdata
sub_473c05
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push ebx
push esi
mov esi ecx
push edi
xor edi edi
mov [ esp + 0x10 ] esi
mov [ esp + 0xc ] edi
cmp [ esi + 0x454 ] edi
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] edi
jne r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
cmp [ eax + 0xc ] 0xe
jne r-xdata
mov eax [ esi + 0x450 ]
mov eax [ eax ]
mov [ eax + 0x11 ] 0x1
jmp r-xdata
push 0x2
pop ebx
mov ecx eax
call sub_409997
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x28 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x2c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x30 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x28 ]
mov [ esp + 0x34 ] eax
inc [ eax ]
lea ecx [ esp + 0x38 ]
xor ebx ebx
push ecx
mov ecx eax
inc ebx
call sub_4679c3
mov ecx eax
jmp r-xdata
mov eax [ esi + 0x44c ]
mov [ esp + 0xc ] eax
test bl 0x1
je r-xdata
lea ecx [ esp + 0x28 ]
and ebx 0xfffffffd
call sub_405a64
mov eax [ ecx ]
mov [ esp + 0x18 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x24 ] eax
inc [ eax ]
test bl 0x2
je r-xdata
mov eax [ eax ]
cmp [ eax + 0x11 ] 0x0
jne r-xdata
lea ecx [ esp + 0x18 ]
call sub_407faf
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call [ CharUpperBuffW@IAT ]
mov esi [ esi + 0x44c ]
mov [ esp + 0xc ] esi
lea ecx [ esp + 0x38 ]
call sub_405a64
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x10 ]
call sub_456aca
mov eax [ esp + 0xc ]
jmp r-xdata
inc edi
lea ecx [ esp + 0x18 ]
call sub_405a64
mov esi [ esp + 0x10 ]
mov ecx [ esi ]
lea edx [ esp + 0x18 ]
call sub_415ee9
test al al
jne r-xdata
test eax eax
je r-xdata
mov eax [ esi ]
mov [ eax + 0x11 ] 0x1
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x10 ]
call sub_456aca
mov esi [ esp + 0xc ]
jmp r-xdata
test esi esi
je r-xdata
sub_473d76
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x6c
and [ esp + 0x8 ] 0x0
and [ esp + 0xc ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov [ esp + 0x12 ] 0x1
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x24 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x28 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x20 ]
mov [ esp + 0x2c ] eax
inc [ eax ]
call sub_407faf
push [ esp + 0x24 ]
push [ esp + 0x24 ]
call [ CharUpperBuffW@IAT ]
lea ecx [ esp + 0x40 ]
call sub_415bfd
push r--data
lea ecx [ esp + 0x34 ]
call sub_407f41
and [ esp + 0x1c ] 0x0
lea eax [ esp + 0x30 ]
push ecx
push eax
lea ecx [ esp + 0x48 ]
call sub_415c72
test eax eax
jne r-xdata
mov [ esp + 0x13 ] 0x1
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x44 ]
call sub_415d24
push 0x0
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x48 ]
call sub_415608
mov [ esp + 0x13 ] 0x0
test eax eax
jg r-xdata
cmp [ edi + 0x8 ] 0x3
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp r-xdata
lea ecx [ esp + 0x30 ]
call sub_405a64
cmp [ esp + 0x13 ] 0x0
je r-xdata
mov esi [ esp + 0x14 ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
test al 0x1
je r-xdata
lea ecx [ esp + 0x40 ]
call sub_415c2e
lea ecx [ esp + 0x40 ]
call sub_405a64
lea ecx [ esp + 0x20 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
test [ esp + 0x18 ] 0x100
je r-xdata
cmp [ esp + 0x12 ] al
je r-xdata
mov esi [ esp + 0x14 ]
xor esi esi
inc esi
jmp r-xdata
mov eax [ edi + 0x4 ]
push [ eax + 0x4 ]
call sub_409e9c
push 0x0
push 0x1
push 0x0
push 0x2
jmp r-xdata
push esi
push eax
mov eax [ edi + 0x4 ]
push [ eax + 0x4 ]
lea eax [ esp + 0x2c ]
push eax
call sub_408620
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
and al 0x4
neg al
sbb al al
not al
and [ esp + 0x12 ] al
jmp r-xdata
push 0x2
pop esi
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
test al 0x2
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
push esi
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x28 ]
push eax
call sub_40859a
mov ecx eax
test ecx ecx
jne r-xdata
sub_473f4f
push ebp
mov ebp esp
push ecx
push ecx
push 0x10000
call sub_420f36
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_40538e
push 0x7fff
push [ ebp - 0x8 ]
push [ rw-data ]
call [ GetWindowTextW@IAT ]
push [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_409bf8
mov eax [ ebp - 0x4 ]
dec [ eax ]
jne r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x8
push eax
call j_sub_422ed5#3
push [ ebp - 0x8 ]
call j_sub_422ed5#3
pop ecx
pop ecx
sub_473fa6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push [ eax ]
push [ rw-data ]
call [ SetWindowTextW@IAT ]
xor eax eax
pop esi
pop ebp
retn 0x8
sub_473fd1
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0x3e8
push edi
mov [ ebp + 0x8 ] 0x1f4
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
cmp edi 0x1
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
mov [ ebp + 0x8 ] eax
push ebx
push [ ebp + 0x8 ]
call [ Beep@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_409c9c
mov ebx eax
sub_47401f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
test eax eax
jne r-xdata
push 0x1
push eax
jmp r-xdata
call [ BlockInput@IAT ]
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
sub_47407c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x234
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov esi ecx
mov ecx ebx
push r--data
mov [ esp + 0x24 ] esi
call sub_409bf8
push [ rw-data ]
call [ OpenClipboard@IAT ]
mov edi [ IsClipboardFormatAvailable@IAT ]
push 0xd
call edi
test eax eax
je r-xdata
push 0x1
call edi
test eax eax
je r-xdata
push 0xd
call [ GetClipboardData@IAT ]
mov edi eax
test edi edi
jne r-xdata
push 0xf
call edi
test eax eax
je r-xdata
push 0x1
call [ GetClipboardData@IAT ]
mov edi eax
test edi edi
je r-xdata
push edi
call [ GlobalLock@IAT ]
test eax eax
jne r-xdata
call [ CloseClipboard@IAT ]
push 0x0
push 0x3
call [ CountClipboardFormats@IAT ]
test eax eax
mov eax [ esi ]
push 0x0
mov ecx [ eax + 0x4 ]
je r-xdata
push 0xf
call [ GetClipboardData@IAT ]
mov edi eax
test edi edi
je r-xdata
push edi
call [ GlobalLock@IAT ]
test eax eax
je r-xdata
push eax
mov ecx ebx
call sub_409bf8
push edi
call [ GlobalUnlock@IAT ]
jmp r-xdata
call [ CloseClipboard@IAT ]
push 0x0
push 0x4
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x1
push 0x2
jmp r-xdata
push edi
call [ GlobalLock@IAT ]
test eax eax
je r-xdata
push eax
lea ecx [ esp + 0x14 ]
call sub_45abf4
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_4780ac
push eax
mov ecx ebx
call sub_409b9c
lea ecx [ esp + 0x28 ]
call sub_405a64
push edi
call [ GlobalUnlock@IAT ]
lea ecx [ esp + 0x10 ]
call sub_405a64
jmp r-xdata
call [ CloseClipboard@IAT ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
jmp r-xdata
add ecx esi
call sub_456883
lea ecx [ esp + 0x10 ]
call sub_4077c7
xor eax eax
push eax
push eax
push 0xffffffff
push edi
mov [ esp + 0x1c ] eax
call [ DragQueryFileW@IAT ]
dec eax
test eax eax
jle r-xdata
push 0x104
lea eax [ esp + 0x3c ]
push eax
push [ esp + 0x14 ]
push edi
call [ DragQueryFileW@IAT ]
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_407e0b
lea eax [ esp + 0x10 ]
mov ecx ebx
push eax
call sub_409b9c
push edi
call [ GlobalUnlock@IAT ]
mov eax [ esi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_41fea1
lea ecx [ esp + 0x10 ]
call sub_405a64
jmp r-xdata
mov ebx [ esp + 0xc ]
mov esi eax
push 0x104
lea eax [ esp + 0x3c ]
push eax
push ebx
push edi
call [ DragQueryFileW@IAT ]
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_407e0b
push 0xa
lea ecx [ esp + 0x14 ]
call sub_407a84
inc ebx
cmp ebx esi
jl r-xdata
mov esi [ esp + 0x20 ]
mov [ esp + 0xc ] ebx
mov ebx [ ebp + 0xc ]
sub_47427a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
mov edi ecx
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ebx [ esi + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
lea eax [ eax * 2 + 0x2 ]
push eax
push 0x2
call [ GlobalAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
push [ rw-data ]
call [ OpenClipboard@IAT ]
call [ EmptyClipboard@IAT ]
jmp r-xdata
push esi
call [ GlobalLock@IAT ]
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
push 0x0
push 0x3
call [ CloseClipboard@IAT ]
push [ ebx ]
push eax
call sub_422f3c
pop ecx
pop ecx
push esi
call [ GlobalUnlock@IAT ]
push [ rw-data ]
call [ OpenClipboard@IAT ]
call [ EmptyClipboard@IAT ]
push esi
push 0xd
call [ SetClipboardData@IAT ]
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
push 0x0
push 0x4
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
sub_47436a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
push ecx
mov eax [ eax + 0x4 ]
mov esi [ eax ]
call sub_426d88
mov edx esi
lea ecx [ eax + 0x40 ]
call sub_420b0c
mov esi [ ebp + 0xc ]
mov edi eax
pop ecx
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
sub_4743a5
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
push 0x10000
call sub_420f36
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_40538e
mov edi [ ebp - 0x8 ]
xor eax eax
mov [ edi ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push 0x7fff
push edi
push [ eax ]
call [ GetEnvironmentVariableW@IAT ]
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push eax
call sub_46753f
mov eax [ ebp - 0x4 ]
dec [ eax ]
jne r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
push eax
call j_sub_422ed5#3
push edi
call j_sub_422ed5#3
pop ecx
pop ecx
sub_474413
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
cmp [ ebx + 0x8 ] 0x2
mov eax [ ebx + 0x4 ]
jb r-xdata
mov esi [ eax ]
mov ecx esi
call sub_409997
push 0x0
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push edi
jmp r-xdata
mov eax [ esi + 0x8 ]
push [ eax ]
call [ SetEnvironmentVariableW@IAT ]
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
pop ebp
retn 0x8
sub_474477
push ebp
mov ebp esp
push ecx
push ebx
push edi
lea eax [ ebp - 0x4 ]
xor ebx ebx
push eax
push 0x3a98
inc ebx
mov edi ecx
push ebx
push r--data
push 0x0
push 0x1a
push 0xffff
call [ SendMessageTimeoutW@IAT ]
test eax eax
jne r-xdata
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] ebx
mov eax [ edi ]
push 0x0
push ebx
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
pop esi
sub_4744cf
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push esi
push edi
mov eax [ eax + 0x4 ]
mov edi ecx
mov esi [ eax ]
mov ecx esi
call sub_409997
mov edx [ esi + 0x8 ]
lea ecx [ ebp - 0x14 ]
mov eax [ edx ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
inc [ eax ]
call sub_407faf
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
call [ CharUpperBuffW@IAT ]
lea eax [ ebp - 0x14 ]
push eax
call sub_465a2d
push 0x0
test eax eax
je r-xdata
mov eax [ edi ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_40859a
mov ecx [ ebp + 0xc ]
push eax
call sub_409e9c
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405a64
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_474570
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov [ esp + 0xc ] r--data
mov eax [ eax + 0x4 ]
push edi
mov [ esp + 0x14 ] ebx
mov edi ecx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
mov esi [ eax ]
mov ecx esi
mov [ rw-data ] 0x1
call sub_409997
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x10 ]
push ecx
push [ eax ]
push ebx
call sub_4063a0
test eax eax
js r-xdata
mov eax [ edi ]
push ebx
push 0x1
mov [ rw-data ] bl
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
cmp [ esp + 0x18 ] 0x1
jbe r-xdata
push 0xffffffff
push [ ebp + 0xc ]
lea eax [ esp + 0x14 ]
mov [ esp + 0x14 ] ebx
push eax
lea eax [ esp + 0x1c ]
mov ecx edi
push eax
call sub_40a000
test eax eax
js r-xdata
mov [ rw-data ] bl
jmp r-xdata
lea ecx [ esp + 0x10 ]
call sub_407776
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_474621
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
mov eax [ eax + 0x4 ]
push esi
push edi
mov esi ecx
mov edi [ eax ]
cmp [ edi + 0xc ] 0xe
jne r-xdata
cmp [ edi + 0xc ] 0xd
jne r-xdata
lea eax [ ebp - 0x10 ]
mov ecx edi
push eax
call sub_4679c3
jmp r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
mov eax [ esi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
lea ecx [ ebp - 0x10 ]
call sub_4077c7
lea eax [ ebp - 0x10 ]
mov ecx edi
push eax
call sub_4679b4
push eax
mov ecx esi
call sub_46a152
lea eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
push eax
call sub_409b9c
lea ecx [ ebp - 0x10 ]
call sub_405a64
jmp r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4746a4
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x74
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
lea ecx [ esp + 0x20 ]
mov [ esp + 0x18 ] ebx
mov esi [ edi + 0x8 ]
mov [ esp + 0x1c ] esi
call sub_45c1ca
and [ esp + 0x14 ] 0x0
lea eax [ esi - 0x2 ]
cmp eax 0x8
ja r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov eax [ ebx ]
push 0x0
push 0x5
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp [ eax * 4 + jump_table_474a54 ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x24 ]
call sub_4687da
mov [ esp + 0x14 ] eax
mov ecx [ edi + 0x4 ]
push 0x29
mov esi [ ecx + 0x20 ]
mov ecx esi
call sub_409dae
test al al
jne r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0x1c ]
mov ecx esi
call sub_409dae
test al al
je r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0x18 ]
mov ecx esi
call sub_409dae
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_409c9c
test eax eax
js r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_409c9c
test eax eax
js r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409dae
test al al
je r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409dae
test al al
je r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409dae
test al al
je r-xdata
fld [ r--data ]
mov ecx esi
call sub_409c9c
mov [ esp + 0x10 ] eax
fild [ esp + 0x10 ]
fldz
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
mov ecx esi
call sub_409c9c
mov [ esp + 0x2c ] eax
or [ esp + 0x30 ] 0x80
jmp r-xdata
mov ecx esi
call sub_409c9c
mov [ esp + 0x28 ] eax
or [ esp + 0x30 ] 0x40
jmp r-xdata
or [ esp + 0x30 ] 0x20
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0x14 ]
mov ecx esi
call sub_409dae
test al al
jne r-xdata
or [ esp + 0x30 ] 0x10
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_409dae
test al al
jne r-xdata
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov eax [ eax ]
movzx esi [ eax ]
test si si
je r-xdata
xor eax eax
mov [ esp + 0x40 ] ax
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
lea ecx [ esp + 0x58 ]
call sub_4081a7
lea ecx [ esp + 0x54 ]
call sub_407eec
jmp r-xdata
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
lea ecx [ esp + 0x68 ]
call sub_4081a7
lea ecx [ esp + 0x64 ]
call sub_407eec
jmp r-xdata
fstp [ esp + 0x38 ]
fstp st0
mov ecx esi
call sub_409c9c
mov [ esp + 0x24 ] eax
jmp r-xdata
mov ecx esi
call sub_409c9c
mov [ esp + 0x20 ] eax
jmp r-xdata
mov ecx esi
call sub_4053b9
test eax eax
jne r-xdata
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
lea eax [ ebx + 0xb8 ]
push eax
jmp r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax ]
mov ecx esi
call sub_409dae
test al al
je r-xdata
mov [ esp + 0xc ] 0x1
mov [ esp + 0x40 ] si
mov edx [ esp + 0x2c ]
push ecx
push [ esp + 0x28 ]
mov ecx [ esp + 0x30 ]
push [ esp + 0x28 ]
call sub_464bce
add esp 0xc
test eax eax
jne r-xdata
or [ esp + 0x30 ] 0xc0
lea ecx [ esp + 0x48 ]
call sub_4081a7
cmp [ esp + 0x1c ] 0x6
ja r-xdata
cmp eax 0x30
jl r-xdata
push [ esp + 0x14 ]
push ecx
lea ecx [ esp + 0x28 ]
call sub_45c24f
cmp eax 0x1
jne r-xdata
push eax
push 0x4
jmp r-xdata
push 0x0
push 0x3
cmp eax 0x39
jle r-xdata
push 0x0
cmp eax 0x2
jne r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x54 ]
push eax
call sub_409b9c
jmp r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
lea ecx [ esp + 0x20 ]
call sub_4739b9
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ebx [ esp + 0xc ]
mov eax [ eax ]
movzx eax [ eax + ebx * 2 ]
sub eax 0x30
cmp eax 0x4d
je r-xdata
cmp eax 0x3
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
jne r-xdata
push 0x1
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0xc ] ebx
mov ebx [ esp + 0x18 ]
mov [ esp + 0x34 ] eax
mov eax [ edi + 0x4 ]
inc ebx
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov eax [ eax ]
movzx ecx [ eax + ebx * 2 ]
imul eax [ esp + 0x10 ] 0xa
add eax 0xffffffd0
add eax ecx
jmp r-xdata
or [ esp + 0x30 ] 0x1
jmp r-xdata
cmp eax 0x6d
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
jmp r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx [ esp + 0xc ]
mov eax [ eax ]
movzx eax [ eax + ecx * 2 ]
test ax ax
je r-xdata
mov [ esp + 0x10 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov eax [ eax ]
movzx eax [ eax + ebx * 2 + 0x2 ]
push eax
call sub_423ddf
pop ecx
test eax eax
je r-xdata
inc [ esp + 0xc ]
jmp r-xdata
add ecx ebx
call sub_456883
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
jmp r-xdata
sub_474a78
push ebp
mov ebp esp
call sub_464a08
test al al
jne r-xdata
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
sub_474aa0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x6
jne r-xdata
cmp [ eax + 0xc ] 0x9
je r-xdata
mov eax [ eax ]
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
sub_474ad5
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push esi
push edi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
inc [ eax ]
call sub_407faf
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call [ CharUpperBuffW@IAT ]
lea eax [ ebp - 0x10 ]
push eax
call sub_465a2d
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
lea ecx [ ebp - 0x10 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
call sub_405a64
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_474b4c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x6
jne r-xdata
mov eax [ eax + 0xc ]
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
cmp eax 0xd
jne r-xdata
mov eax [ eax ]
cmp eax 0xe
jne r-xdata
call sub_409a20
mov [ esi ] 0x2
jmp r-xdata
call sub_409a20
and [ esi ] 0x0
call sub_409a20
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] eax
jmp r-xdata
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x8
sub_474ba4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
cmp [ esi + 0xc ] 0x6
jne r-xdata
push 0x29
mov ecx esi
call sub_409dae
test al al
je r-xdata
mov esi [ esi ]
push 0x2a
mov ecx esi
call sub_409dae
mov esi [ ebp + 0xc ]
mov ecx esi
test al al
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] eax
jmp r-xdata
call sub_409a20
and [ esi ] 0x0
call sub_409a20
mov [ esi ] 0x2
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
mov [ esi + 0xc ] 0x1
sub_474c0e
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
cmp [ ecx + 0xc ] 0x6
jne r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0xc ] 0x6
jne r-xdata
mov ecx [ ecx ]
cmp [ ecx + 0xc ] 0xf
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov ecx [ ecx ]
lea edx [ ebp - 0x8 ]
push edx
push eax
call sub_461a06
test al al
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0xc ] 0x2
mov [ esi + 0x4 ] eax
jmp r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_474c92
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
mov ebx [ edi ]
cmp [ ebx + 0xc ] 0x6
jne r-xdata
mov edi [ edi + 0x4 ]
cmp [ edi + 0xc ] 0x6
jne r-xdata
mov ebx [ ebx ]
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
xor eax eax
inc eax
mov [ esi + 0xc ] eax
cmp [ ebx + 0xc ] 0xf
jne r-xdata
mov edi [ edi ]
mov edx [ ebp - 0x4 ]
push 0x0
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
mov ecx [ ebx ]
push edi
call sub_461c45
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx esi
call sub_409a20
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] eax
jmp r-xdata
sub_474d0a
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x8 ]
sub esp 0x10
mov eax [ eax + 0x4 ]
push esi
mov esi ecx
push edi
mov ecx [ eax ]
cmp [ ecx + 0xc ] 0x6
jne r-xdata
xor edi edi
mov [ esp + 0x8 ] r--data
cmp [ ecx + 0xc ] 0xf
mov [ esp + 0xc ] edi
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] edi
jne r-xdata
mov ecx [ ecx ]
mov eax [ esi ]
push edi
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
mov ecx [ ecx ]
lea eax [ esp + 0x8 ]
push eax
call sub_46215d
cmp [ esp + 0x10 ] edi
jne r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x8 ]
push eax
call sub_467577
lea ecx [ esp + 0x8 ]
call sub_4563f2
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_474d84
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
mov ebx [ edi ]
cmp [ ebx + 0xc ] 0x6
jne r-xdata
mov edi [ edi + 0x4 ]
cmp [ edi + 0xc ] 0x6
jne r-xdata
mov ebx [ ebx ]
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
xor eax eax
inc eax
mov [ esi + 0xc ] eax
cmp [ ebx + 0xc ] 0xf
jne r-xdata
mov edi [ edi ]
mov edx [ ebp - 0x4 ]
push 0x0
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
mov ecx [ ebx ]
push edi
call sub_462283
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx esi
call sub_409a20
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] eax
jmp r-xdata
sub_474dfc
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ esp + 0x10 ] ecx
mov eax [ edi + 0x8 ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x20 ]
push eax
call [ GetCursorPos@IAT ]
mov eax [ esp + 0x20 ]
xor ebx ebx
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x14 ] eax
mov eax [ edi + 0x4 ]
mov [ esp + 0xc ] 0x1
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_464c15
test eax eax
jne r-xdata
mov esi [ esp + 0x1c ]
cmp esi 0x2
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
jmp r-xdata
jb r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov edx [ esp + 0x10 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
push ebx
mov eax [ edx ]
push 0x5
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi 0x4
jb r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov eax [ eax + 0x4 ]
mov ecx eax
mov [ esp + 0x20 ] eax
call sub_409dae
test al al
jne r-xdata
cmp esi 0x5
jb r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
mov [ esp + 0xc ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov eax [ eax + 0x8 ]
mov ecx eax
mov [ esp + 0x20 ] eax
call sub_409dae
test al al
jne r-xdata
mov ecx [ esp + 0x1c ]
call sub_409c9c
mov [ esp + 0x18 ] eax
or eax 0xffffffff
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_409c9c
jmp r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov ecx [ eax + 0x4 ]
call sub_409dae
test al al
je r-xdata
mov ecx [ esp + 0x1c ]
call sub_409c9c
mov [ esp + 0x14 ] eax
cmp [ esp + 0xc ] 0x0
jle r-xdata
push 0x1
push eax
push [ esp + 0x1c ]
mov ecx ebx
push [ esp + 0x24 ]
call sub_4771b3
test ebx ebx
mov ebx [ esp + 0x10 ]
je r-xdata
xor ebx ebx
inc ebx
mov ecx [ edi + 0x4 ]
push 0x29
mov ecx [ ecx + 0x8 ]
call sub_409dae
test al al
jne r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov ecx [ ecx ]
call sub_464cce
mov ecx [ ebx + 0x110 ]
call sub_4652eb
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov ecx [ ecx ]
call sub_464cfa
mov ecx [ ebx + 0x10c ]
call sub_4652eb
dec [ esp + 0xc ]
jne r-xdata
sub_474fb1
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov [ esp + 0xc ] ecx
push edi
mov eax [ ebx + 0x4 ]
or edi 0xffffffff
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_464c15
test eax eax
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov esi eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
mov [ esp + 0x14 ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
mov [ esp + 0x1c ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_409c9c
cmp [ ebx + 0x8 ] 0x6
mov [ esp + 0x18 ] eax
jb r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov ecx [ esp + 0x10 ]
push 0x1
push edi
push [ esp + 0x1c ]
push esi
call sub_4771b3
cmp edi 0x2
jge r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_409c9c
mov edi eax
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov ecx [ ecx ]
call sub_464cce
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x114 ]
call sub_4652eb
push 0x1
push edi
push [ esp + 0x20 ]
mov ecx esi
push [ esp + 0x28 ]
call sub_4771b3
mov ecx [ esi + 0x114 ]
call sub_4652eb
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov ecx [ ecx ]
call sub_464cfa
mov ecx [ esp + 0x10 ]
mov ecx [ ecx + 0x10c ]
call sub_4652eb
cmp edi 0xffffffff
je r-xdata
push 0x2
pop edi
sub_4750d7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_464cce
test al al
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
sub_475113
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
mov esi [ LoadCursorW@IAT ]
xor ebx ebx
push 0x7f8a
push ebx
call esi
push 0x7f00
push ebx
mov [ ebp - 0x54 ] eax
call esi
push 0x7f03
push ebx
mov [ ebp - 0x50 ] eax
call esi
push 0x7f8b
push ebx
mov [ ebp - 0x4c ] eax
call esi
push 0x7f01
push ebx
mov [ ebp - 0x48 ] eax
call esi
push 0x7f81
push ebx
mov [ ebp - 0x44 ] eax
call esi
push 0x7f88
push ebx
mov [ ebp - 0x40 ] eax
call esi
push 0x7f80
push ebx
mov [ ebp - 0x3c ] eax
call esi
push 0x7f86
push ebx
mov [ ebp - 0x38 ] eax
call esi
push 0x7f83
push ebx
mov [ ebp - 0x34 ] eax
call esi
push 0x7f85
push ebx
mov [ ebp - 0x30 ] eax
call esi
push 0x7f82
push ebx
mov [ ebp - 0x2c ] eax
call esi
push 0x7f84
push ebx
mov [ ebp - 0x28 ] eax
call esi
push 0x7f04
push ebx
mov [ ebp - 0x24 ] eax
call esi
push 0x7f02
push ebx
mov [ ebp - 0x20 ] eax
call esi
push 0x7f89
push ebx
mov [ ebp - 0x1c ] eax
call esi
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x14 ] 0x14
call [ GetCursorInfo@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
push edi
mov edi ebx
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
jmp r-xdata
inc edi
cmp edi 0xf
jle r-xdata
cmp eax [ ebp + edi * 4 - 0x54 ]
je r-xdata
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
cmp edi 0xf
jg r-xdata
mov [ esi ] ebx
lea eax [ edi + 0x1 ]
mov [ esi ] eax
jmp r-xdata
pop edi
sub_47523d
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
lea eax [ ebp - 0x8 ]
mov esi ecx
push eax
call [ GetCursorPos@IAT ]
call [ GetForegroundWindow@IAT ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x100 ]
call sub_473ab6
mov eax [ ebp - 0x10 ]
mov edi [ ebp + 0x8 ]
sub [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
sub [ ebp - 0x4 ] eax
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
mov ecx ebx
call sub_4562f8
test al al
jne r-xdata
mov ecx [ ebp + 0xc ]
call sub_40942e
xor ebx ebx
mov esi eax
push 0x2
inc ebx
push ebx
push esi
call sub_4091b0
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x20 ]
and [ ebp - 0x18 ] 0x0
push 0x0
push ebx
push eax
push esi
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x14 ] ebx
call sub_409040
add esp 0x1c
lea ecx [ ebp - 0x20 ]
call sub_409a20
mov eax [ ebp - 0x4 ]
and [ ebp - 0x18 ] 0x0
push ebx
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push ebx
push eax
push esi
mov [ ebp - 0x14 ] ebx
call sub_409040
add esp 0x10
lea ecx [ ebp - 0x20 ]
call sub_409a20
jmp r-xdata
mov ecx ebx
call sub_409c9c
test eax eax
jne r-xdata
mov eax [ esi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
xor ebx ebx
inc ebx
cmp eax ebx
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi [ ebp - 0x8 ]
call sub_409a20
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi [ ebp - 0x4 ]
call sub_409a20
mov [ esi + 0xc ] ebx
mov [ esi ] edi
sub_47534f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
or eax 0xffffffff
push edi
mov edi ecx
cmp [ esi + 0x8 ] 0x3
jne r-xdata
mov edx [ esi + 0x4 ]
push 0x0
push eax
mov ecx [ edx + 0x4 ]
mov esi [ edx ]
call sub_409c9c
push eax
mov ecx esi
call sub_409c9c
push eax
mov ecx edi
call sub_4771b3
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
sub_475395
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_464cfa
test al al
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
sub_4753d1
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] ecx
inc edi
cmp [ eax + 0x8 ] 0x2
jb r-xdata
push ebx
xor ebx ebx
push esi
test edi edi
jle r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov edi eax
test edi edi
jle r-xdata
pop esi
pop ebx
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_464d26
test al al
je r-xdata
xor eax eax
pop edi
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10c ]
call sub_4652eb
mov eax [ ebp + 0x8 ]
inc ebx
cmp ebx edi
jl r-xdata
jmp r-xdata
sub_475452
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov eax [ edi + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x30 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x2c ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x24 ] eax
inc [ eax ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
xor ebx ebx
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x1c ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x14 ] eax
inc [ eax ]
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
cmp eax 0xffffffff
je r-xdata
mov esi ebx
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax ]
mov ecx esi
call sub_409dae
test al al
jne r-xdata
mov eax 0x4000
cmp [ ebp - 0xc ] eax
jbe r-xdata
mov eax [ ebp - 0x8 ]
lea ecx [ ebp - 0x30 ]
add eax 0xb8
push eax
call sub_4081a7
mov eax [ ebp - 0x30 ]
mov [ ebp + 0x8 ] eax
mov ecx esi
call sub_409c9c
mov esi eax
or esi 0x10000
jmp r-xdata
cmp [ ebp - 0x10 ] 0x5
jb r-xdata
push 0xffffffff
push eax
lea ecx [ ebp - 0x20 ]
call sub_407e8c
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
mov ecx [ edi + 0x4 ]
push 0x29
mov ecx [ ecx + 0x4 ]
call sub_409dae
test al al
je r-xdata
cmp [ edi + 0x8 ] 0x4
jb r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_4687da
mov ebx eax
push esi
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push ebx
call [ MessageBoxW@IAT ]
mov ecx [ edi + 0x4 ]
push 0x29
mov edi [ ecx + 0xc ]
mov ecx edi
call sub_409dae
test al al
jne r-xdata
mov ecx edi
call sub_409cf8
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x41
jne r-xdata
fmul [ r--data ]
call sub_43b500
mov edx [ ebp - 0x4 ]
mov ecx ebx
push eax
push esi
push [ ebp + 0x8 ]
call sub_464b3a
add esp 0xc
jmp r-xdata
fstp st0
fldz
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
lea ecx [ ebp - 0x20 ]
mov [ esi ] edi
mov [ esi + 0xc ] 0x1
call sub_405a64
lea ecx [ ebp - 0x30 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4755de
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
mov eax [ ebp + 0x8 ]
and [ esp + 0x4 ] 0x0
push ebx
push esi
mov eax [ eax + 0x4 ]
mov esi ecx
push edi
mov edi [ eax ]
mov ecx edi
cmp [ edi + 0xc ] 0xe
jne r-xdata
push 0x2
pop ebx
call sub_409997
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x28 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x2c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x30 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x28 ]
mov [ esp + 0x34 ] eax
inc [ eax ]
lea eax [ esp + 0x38 ]
xor ebx ebx
push eax
inc ebx
call sub_4679c3
mov ecx eax
jmp r-xdata
test bl 0x1
je r-xdata
lea ecx [ esp + 0x28 ]
and ebx 0xfffffffd
call sub_405a64
mov eax [ ecx ]
mov [ esp + 0x18 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x24 ] eax
inc [ eax ]
test bl 0x2
je r-xdata
lea ecx [ esp + 0x18 ]
call sub_407faf
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call [ CharUpperBuffW@IAT ]
lea eax [ esp + 0x18 ]
mov ecx esi
push eax
call sub_409fbd
test eax eax
jne r-xdata
lea ecx [ esp + 0x38 ]
call sub_405a64
lea edi [ esi + 0x128 ]
mov ecx [ edi ]
mov [ esp + 0x10 ] ecx
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
lea eax [ esp + 0x18 ]
mov ecx edi
push eax
call sub_46a1ba
mov ecx [ ecx ]
lea edx [ esp + 0x18 ]
call sub_415ee9
test al al
jne r-xdata
lea ecx [ esp + 0x18 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_41fea1
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_456aca
mov ecx [ esp + 0x10 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub_47571c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
mov eax [ ebp + 0x8 ]
and [ esp + 0x4 ] 0x0
push ebx
push esi
mov eax [ eax + 0x4 ]
push edi
mov edi ecx
mov esi [ eax ]
mov ecx esi
cmp [ esi + 0xc ] 0xe
jne r-xdata
push 0x2
pop ebx
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x28 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x2c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x30 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x28 ]
mov [ esp + 0x34 ] eax
inc [ eax ]
lea eax [ esp + 0x38 ]
xor ebx ebx
push eax
inc ebx
call sub_4679c3
mov ecx eax
jmp r-xdata
test bl 0x1
je r-xdata
lea ecx [ esp + 0x28 ]
and ebx 0xfffffffd
call sub_405a64
mov eax [ ecx ]
mov [ esp + 0x18 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x24 ] eax
inc [ eax ]
test bl 0x2
je r-xdata
lea ecx [ esp + 0x18 ]
call sub_407faf
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call [ CharUpperBuffW@IAT ]
lea eax [ esp + 0x18 ]
mov ecx edi
push eax
call sub_409fbd
test eax eax
je r-xdata
lea ecx [ esp + 0x38 ]
call sub_405a64
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
lea esi [ edi + 0x128 ]
mov ecx [ esi ]
mov [ esp + 0x10 ] ecx
mov ecx [ ecx ]
lea edx [ esp + 0x18 ]
call sub_415ee9
test al al
jne r-xdata
lea eax [ esp + 0x10 ]
mov ecx esi
push eax
call sub_4780cb
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_456aca
mov ecx [ esp + 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x18 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
test ecx ecx
je r-xdata
sub_475848
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1bc
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov [ esp + 0xc ] 0xfa0
mov ecx ebx
mov esi [ esi + 0x8 ]
call sub_409a20
and [ ebx ] 0x0
xor eax eax
inc eax
cmp esi eax
mov [ ebx + 0xc ] eax
mov esi [ ebp + 0x8 ]
jbe r-xdata
lea eax [ esp + 0x38 ]
push eax
push 0x101
call [ Ordinal_WSOCK32_115@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
test eax eax
jle r-xdata
lea ecx [ esp + 0x28 ]
call sub_405c18
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
lea eax [ esp + 0x28 ]
push eax
push [ esi + 0x8 ]
call sub_405b75
push [ esp + 0x28 ]
call [ Ordinal_WSOCK32_10@IAT ]
push [ esp + 0x28 ]
mov esi eax
call [ Ordinal_WSOCK32_52@IAT ]
mov [ esp + 0x24 ] eax
test eax eax
je r-xdata
mov eax [ edi ]
push 0x0
push 0x4
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov [ esp + 0xc ] eax
mov eax [ edi ]
push 0x0
push 0x4
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
call [ IcmpCreateFile@IAT ]
mov [ esp + 0x10 ] eax
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esp + 0x28 ]
call sub_405a64
mov eax [ r--data ]
mov [ esp + 0x14 ] eax
mov al [ r--data ]
push 0x29
mov [ esp + 0x1c ] al
call sub_420f36
pop ecx
push eax
lea ecx [ esp + 0x20 ]
call sub_40538e
lea eax [ esp + 0x14 ]
push [ esp + 0xc ]
push 0x29
cmp esi 0xffffffff
jne r-xdata
push [ esp + 0x24 ]
push 0x0
push 0x5
push eax
push esi
push [ esp + 0x2c ]
call [ IcmpSendEcho@IAT ]
mov esi [ esp + 0x1c ]
mov esi [ esp + 0x24 ]
push esi
push 0x0
push 0x5
push eax
mov eax [ esp + 0x3c ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
push [ esp + 0x2c ]
call [ IcmpSendEcho@IAT ]
jmp r-xdata
push 0x0
push 0x2
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
push [ esp + 0x10 ]
call [ IcmpCloseHandle@IAT ]
call [ Ordinal_WSOCK32_116@IAT ]
lea ecx [ esp + 0x1c ]
call sub_405371
mov esi [ esi + 0x8 ]
mov ecx ebx
call sub_409a20
xor eax eax
inc eax
mov [ ebx + 0xc ] eax
test esi esi
jne r-xdata
cmp eax 0x2af9
jbe r-xdata
mov [ ebx ] esi
mov [ ebx ] eax
jmp r-xdata
push 0x0
push 0x4
jmp r-xdata
cmp eax 0x2afd
jbe r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
cmp eax 0x2b02
je r-xdata
xor eax eax
push 0x0
inc eax
push eax
jmp r-xdata
cmp eax 0x2b0a
jne r-xdata
push 0x0
push 0x3
jmp r-xdata
sub_475a2c
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov [ ebp - 0xc ] ecx
mov ecx ebx
push edi
call sub_409a20
mov esi [ ebp + 0x8 ]
xor edi edi
xor eax eax
inc edi
mov [ ebx + 0xc ] edi
mov [ ebx ] eax
cmp [ esi + 0x8 ] 0x7
mov [ ebp - 0x8 ] eax
jb r-xdata
cmp [ esi + 0x8 ] 0x5
mov [ ebp + 0xc ] edi
jb r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_409c9c
mov [ ebp - 0x8 ] eax
cmp [ esi + 0x8 ] 0x6
jb r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_409c9c
cmp eax edi
jle r-xdata
call [ GetForegroundWindow@IAT ]
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x14 ]
call sub_4687da
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_409c9c
mov [ ebp + 0xc ] eax
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp - 0x8 ] 0x1
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
push esi
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_4687da
jmp r-xdata
call sub_4772be
call sub_477392
jmp r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
mov ecx [ esi + 0x4 ]
mov edi eax
mov [ ebp - 0x20 ] edi
mov ecx [ ecx + 0x4 ]
call sub_409c9c
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ecx + 0x8 ]
call sub_409c9c
mov ecx [ ebp + 0x8 ]
mov esi eax
mov [ ebp - 0x18 ] esi
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_409c9c
sub esi edi
mov [ ebp - 0x14 ] eax
push esi
call sub_426c0d
pop ecx
mov ecx [ ebp - 0xc ]
lea edi [ eax + 0x1 ]
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push [ ebp - 0x4 ]
call sub_47742f
mov esi eax
test esi esi
je r-xdata
mov ecx ebx
fstp [ ebp - 0x10 ]
call sub_409a20
fld [ ebp - 0x10 ]
push esi
fstp [ ebx ]
mov [ ebx + 0xc ] 0x3
call j_sub_422ed5#3
pop ecx
sub_475b63
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x4 ] ecx
cmp [ esi + 0x8 ] 0x3
jb r-xdata
call [ GetForegroundWindow@IAT ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_4687da
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_4687da
jmp r-xdata
mov ebx eax
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
mov ecx [ esi + 0x4 ]
mov edi eax
mov ecx [ ecx + 0x4 ]
call sub_409c9c
mov esi eax
lea eax [ ebp - 0xc ]
push ebx
push eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x104 ]
call sub_473ab6
add edi [ ebp - 0xc ]
add esi [ ebp - 0x8 ]
push 0x0
call [ GetDC@IAT ]
push esi
push edi
push eax
mov [ ebp + 0x8 ] eax
call [ GetPixel@IAT ]
mov esi [ ebp + 0xc ]
mov ebx eax
mov ecx esi
call sub_409a20
push [ ebp + 0x8 ]
mov edx ebx
movzx ecx bl
sar edx 0x10
and ebx 0xff00
and edx 0xff
shl ecx 0x10
or edx ecx
mov [ esi + 0xc ] 0x1
or edx ebx
push 0x0
mov [ esi ] edx
call [ ReleaseDC@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_475c2f
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
push edi
mov [ ebp - 0x30 ] ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x50 ] eax
mov ecx [ ecx + 0x4 ]
call sub_409c9c
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x4c ] eax
mov ecx [ ecx + 0x8 ]
call sub_409c9c
mov ecx [ esi + 0x4 ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x48 ] eax
mov ecx [ ecx + 0xc ]
call sub_409c9c
cmp [ esi + 0x8 ] 0x8
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x44 ] eax
jb r-xdata
call [ GetForegroundWindow@IAT ]
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x1c ]
call sub_4687da
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_409c9c
cmp eax 0x1
jle r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x1c ]
call sub_4687da
jmp r-xdata
xor ecx ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_409c9c
mov ecx eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_409c9c
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edi eax
lea eax [ ebp - 0x40 ]
push edi
push eax
push [ ebx + 0x104 ]
call sub_473ab6
cmp [ esi + 0x8 ] 0x7
jb r-xdata
mov ebx [ ebp + 0xc ]
mov ecx ebx
call sub_409a20
mov edx [ ebp - 0x30 ]
xor eax eax
and [ ebx ] 0x0
inc eax
push 0x0
mov [ ebx + 0xc ] eax
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
mov ecx [ ebp - 0x8 ]
xor ebx ebx
mov eax [ ebp - 0x44 ]
mov edx ecx
neg edx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x28 ] edx
mov eax [ esi + 0x4 ]
push ecx
mov ecx [ eax + 0x10 ]
call sub_409c9c
push eax
lea ecx [ ebp - 0x38 ]
call sub_473957
mov esi [ ebp + 0x8 ]
cmp esi [ ebp - 0x50 ]
mov eax [ ebp - 0x18 ]
setl [ ebp - 0x1 ]
cmp eax [ ebp - 0x4c ]
setl [ ebp - 0x2 ]
sub eax [ ebp - 0x4c ]
push eax
call sub_426c0d
sub esi [ ebp - 0x50 ]
inc eax
push esi
mov [ ebp - 0x1c ] eax
call sub_426c0d
pop ecx
pop ecx
xor cl cl
lea esi [ eax + 0x1 ]
mov [ ebp + 0xb ] cl
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x2c ] esi
push eax
lea eax [ ebp - 0x50 ]
mov ecx ebx
push eax
push edi
call sub_47742f
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
cmp [ esi + 0x8 ] 0x6
jb r-xdata
push [ ebp - 0x18 ]
call j_sub_422ed5#3
pop ecx
mov cl [ ebp + 0xb ]
test cl cl
jne r-xdata
mov eax esi
shl eax 0x2
mov edi eax
imul edi ebx
add eax edi
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] eax
mov esi edi
mov al [ ebp + 0xb ]
mov [ ebp - 0x14 ] edi
test al al
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
add [ ebp - 0xc ] edx
add ebx ecx
mov esi [ ebp - 0x2c ]
test al al
je r-xdata
cmp esi [ ebp - 0x20 ]
jge r-xdata
cmp ebx [ ebp - 0x1c ]
jge r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x38 ]
add eax esi
push eax
call sub_477160
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov al [ ebp + 0xb ]
lea esi [ esi + ecx * 4 ]
mov [ ebp - 0x14 ] esi
test al al
je r-xdata
mov eax esi
mov [ ebp + 0xb ] 0x1
sub eax edi
push 0x4
pop ecx
cdq
idiv ecx
mov ecx [ ebp + 0xc ]
mov esi eax
call sub_40942e
push 0x2
push 0x1
push eax
mov [ ebp - 0x10 ] eax
call sub_4091b0
add esp 0xc
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov edi [ ebp - 0x50 ]
add edi esi
mov edi [ ebp - 0x48 ]
sub edi esi
jmp r-xdata
mov edi [ ebp - 0x4c ]
add edi ebx
mov edi [ ebp - 0xc ]
jmp r-xdata
sub edi [ ebp - 0x40 ]
push 0x0
push 0x1
push 0x2
push [ ebp - 0x10 ]
call sub_408ea0
add esp 0x10
mov esi eax
mov ecx esi
call sub_409a20
xor ecx ecx
mov [ esi ] edi
inc ecx
cmp [ ebp - 0x2 ] 0x0
mov [ esi + 0xc ] ecx
je r-xdata
sub edi [ ebp - 0x3c ]
push ecx
push ecx
push 0x2
push [ ebp - 0x10 ]
call sub_408ea0
add esp 0x10
mov esi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
mov edi [ ebp - 0x24 ]
mov [ esi + 0xc ] 0x1
mov esi [ ebp - 0x14 ]
sub_475eef
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov ebx [ edi + 0x8 ]
je r-xdata
pop edi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
push esi
mov ecx [ eax ]
call sub_409c9c
xor esi esi
test eax eax
js r-xdata
cmp ebx 0x2
jb r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
cmp eax 0x65
jge r-xdata
pop esi
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
xor ecx ecx
mov eax [ eax ]
cmp [ eax ] cx
je r-xdata
mov eax [ edi + 0x4 ]
push esi
mov ecx [ eax ]
call sub_409c9c
push eax
push 0x402
push [ rw-data ]
call [ SendMessageW@IAT ]
cmp ebx 0x2
jbe r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push [ eax ]
xor eax eax
push eax
push 0xc
push [ rw-data ]
call [ SendMessageW@IAT ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push [ eax ]
xor eax eax
push eax
push 0xc
push [ rw-data ]
call [ SendMessageW@IAT ]
sub_475fb6
push ebp
mov ebp esp
and esp 0xfffffff8
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ esi + 0x8 ] 0x2
mov eax [ esi + 0x4 ]
jne r-xdata
mov esi [ eax ]
mov ecx esi
mov ecx [ eax + 0x4 ]
call sub_409c9c
test eax eax
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
je r-xdata
call sub_409997
push 0x0
push [ esi + 0x8 ]
lea ecx [ edi + 0x88 ]
call sub_46057d
call sub_409997
push 0x0
push [ esi + 0x8 ]
lea ecx [ edi + 0x88 ]
call sub_46073e
jmp r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_476019
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
push 0x1
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
mov eax [ esi + 0x4 ]
push 0x1
mov ecx [ eax + 0x4 ]
call sub_409c9c
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0xc ]
push [ eax + 0x8 ]
call sub_409e9c
sub_476078
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push 0x1
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_41fea1
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov ecx [ ebp + 0xc ]
push [ eax + 0x4 ]
call sub_409e9c
sub_4760b7
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x2
jne r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
xor dl dl
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
cmp eax 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov dl 0x1
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov ecx [ ecx ]
call sub_46536e
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_476109
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push edi
mov edi ecx
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
push 0x64
pop ecx
cmp eax ecx
ja r-xdata
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
pop esi
imul eax eax 0xffff
cdq
idiv ecx
movzx eax ax
mov ecx eax
shl ecx 0x10
or ecx eax
push ecx
push 0x0
call [ waveOutSetVolume@IAT ]
jmp r-xdata
xor eax eax
pop edi
pop ebp
retn 0x8
sub_476196
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x1
push [ eax + 0x8 ]
push eax
call sub_47791b
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi [ rw-data ]
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x7
pop esi
pop ebp
retn 0x8
sub_4761ca
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x104
mov eax [ eax + 0x4 ]
push esi
mov esi ecx
push edi
mov ecx [ eax ]
call sub_409c9c
push 0x0
push [ esi + 0x46c ]
mov edi eax
mov ecx esi
lea eax [ ebp - 0x104 ]
push eax
push edi
call sub_477f31
test eax eax
jle r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
or [ esi ] 0xffffffff
push 0x0
push 0x0
push edi
call [ Ordinal_WSOCK32_1@IAT ]
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
jmp r-xdata
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_47623a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
push eax
call [ Ordinal_WSOCK32_3@IAT ]
test eax eax
je r-xdata
mov [ ebp + 0x8 ] 0x1
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
mov [ ebp + 0x8 ] 0x0
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_409863
xor eax eax
pop esi
pop ebp
retn 0x8
sub_476289
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x114
mov eax [ eax + 0x4 ]
push ebx
push esi
mov ebx ecx
mov esi [ eax ]
mov ecx esi
push edi
mov edi [ eax + 0x4 ]
call sub_409997
mov esi [ esi + 0x8 ]
mov ecx edi
call sub_409c9c
push eax
push esi
lea eax [ ebp - 0x10 ]
mov ecx ebx
push eax
call sub_477ea0
test al al
jne r-xdata
push 0x6
push 0x1
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
or [ esi ] 0xffffffff
jmp r-xdata
and [ ebp + 0x8 ] 0x0
cmp [ ebx + 0x46c ] 0x0
mov esi [ Ordinal_WSOCK32_12@IAT ]
je r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp r-xdata
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push edi
call [ Ordinal_WSOCK32_4@IAT ]
test eax eax
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] 0x1
push eax
push 0x8004667e
push edi
call esi
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
push 0x8004667e
push edi
call esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] edi
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
push edi
call [ Ordinal_WSOCK32_3@IAT ]
jmp r-xdata
push 0x1
push [ ebx + 0x46c ]
lea eax [ ebp - 0x114 ]
mov ecx ebx
push eax
push edi
call sub_477f31
test eax eax
jg r-xdata
sub_476399
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
push edi
mov [ ebp - 0x4 ] 0x5
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
mov edx [ esi + 0x4 ]
mov esi [ edx ]
mov ecx esi
mov edi [ edx + 0x4 ]
call sub_409997
mov esi [ esi + 0x8 ]
mov ecx edi
call sub_409c9c
push eax
push esi
lea eax [ ebp - 0x14 ]
mov ecx ebx
push eax
call sub_477ea0
test al al
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
or [ esi ] 0xffffffff
push 0x6
push 0x1
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push edi
call [ Ordinal_WSOCK32_2@IAT ]
cmp eax 0xffffffff
je r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
push edi
call [ Ordinal_WSOCK32_3@IAT ]
push [ ebp - 0x4 ]
push edi
call [ Ordinal_WSOCK32_13@IAT ]
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] edi
jmp r-xdata
pop edi
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47647f
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0x14 ]
call sub_405c18
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
lea eax [ ebp - 0x14 ]
push eax
push [ esi + 0x8 ]
call sub_405b75
push [ ebp - 0x14 ]
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
push 0x4
push [ eax ]
lea eax [ ebp - 0x4 ]
push eax
call sub_420fc0
add esp 0xc
push [ ebp - 0x4 ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_47803e
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_4780ac
mov ecx [ ebp + 0xc ]
push eax
call sub_409b9c
lea ecx [ ebp - 0x24 ]
call sub_405a64
push eax
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405a64
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_476530
push ebp
mov ebp esp
sub esp 0x130
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
mov edx [ esi + 0x4 ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
mov ecx [ edx + 0x4 ]
call sub_409c9c
mov ecx [ ebp + 0xc ]
mov esi eax
push r--data
call sub_409bf8
push 0x0
cmp ebx 0xffffffff
jne r-xdata
push [ edi + 0x46c ]
lea eax [ ebp - 0x130 ]
mov ecx edi
push eax
push ebx
call sub_477f31
test eax eax
jle r-xdata
mov eax [ edi ]
push ebx
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esi + 0x1 ]
push eax
call sub_420f36
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_40538e
mov ebx [ ebp - 0xc ]
push 0x0
push esi
push ebx
push [ ebp - 0x4 ]
call [ Ordinal_WSOCK32_16@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
test esi esi
je r-xdata
mov eax [ edi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x3
jb r-xdata
lea ecx [ ebp - 0xc ]
call sub_405371
push ebx
mov [ ebx + esi ] 0x0
call sub_4238c0
pop ecx
cmp eax esi
jne r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
push esi
push ebx
push esi
call sub_46776d
push eax
call sub_420fc0
add esp 0xc
jmp r-xdata
push ebx
lea ecx [ ebp - 0x1c ]
call sub_45abf4
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_4780ac
mov ecx [ ebp + 0xc ]
push eax
call sub_409b9c
lea ecx [ ebp - 0x2c ]
call sub_405a64
lea ecx [ ebp - 0x1c ]
call sub_405a64
jmp r-xdata
sub_476679
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
push edi
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
mov edx [ esi + 0x4 ]
mov edi eax
mov ecx [ edx + 0x4 ]
call sub_4687be
mov ecx [ esi + 0x4 ]
mov edx eax
mov ecx [ ecx + 0x4 ]
call sub_468801
push 0x0
push eax
push edx
push edi
call [ Ordinal_WSOCK32_19@IAT ]
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
cmp edi 0xffffffff
jne r-xdata
mov [ esi ] edi
and [ esi ] 0x0
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_4766f0
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi ecx
call [ Ordinal_WSOCK32_116@IAT ]
mov edx [ esi ]
mov edi eax
push 0x0
push edi
mov ecx [ edx + 0x4 ]
add ecx esi
call sub_456883
mov ecx [ ebp + 0xc ]
test edi edi
sete [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_409863
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_47672a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x198
push esi
push edi
lea eax [ esp + 0x10 ]
mov edi ecx
push eax
push 0x202
call [ Ordinal_WSOCK32_115@IAT ]
mov edx [ edi ]
mov esi eax
push 0x0
push esi
mov ecx [ edx + 0x4 ]
add ecx edi
call sub_456883
mov ecx [ ebp + 0xc ]
test esi esi
sete [ esp + 0xc ]
push [ esp + 0xc ]
call sub_409863
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_476778
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3bc
mov eax [ rw-data ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ esp + 0xc ] eax
push esi
mov [ esp + 0xc ] 0x3a8
mov eax [ ebx + 0x4 ]
mov [ esp + 0x18 ] 0x10
mov [ esp + 0x14 ] 0x1
push edi
mov esi [ eax ]
mov ecx esi
mov edi [ ebx + 0x8 ]
call sub_409997
mov eax [ esi + 0x8 ]
push 0x3f
push [ eax ]
lea eax [ esp + 0x33c ]
push eax
call sub_42422e
xor eax eax
add esp 0xc
mov [ esp + 0x3b2 ] ax
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push 0xff
push [ eax ]
lea eax [ esp + 0x138 ]
push eax
call sub_42422e
xor eax eax
add esp 0xc
mov [ esp + 0x32e ] ax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
imul eax eax 0x3e8
mov [ esp + 0x330 ] eax
cmp edi 0x3
jbe r-xdata
and [ esp + 0x3b4 ] 0x0
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
mov [ esp + 0x3b4 ] eax
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
push 0x1
call [ Shell_NotifyIconW@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47685d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x14
mov eax [ eax + 0x4 ]
push ebx
push esi
mov ebx ecx
mov esi [ eax ]
mov ecx esi
push edi
mov edi [ eax + 0x4 ]
call sub_409997
mov esi [ esi + 0x8 ]
mov ecx edi
call sub_409c9c
push eax
push esi
lea eax [ ebp - 0x14 ]
mov ecx ebx
push eax
call sub_477ea0
test al al
jne r-xdata
push 0x11
push 0x2
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
mov ecx [ ebp + 0xc ]
mov esi eax
mov [ ebp - 0x4 ] esi
call sub_40942e
push 0x4
mov edi eax
push 0x1
push edi
call sub_4091b0
add esp 0xc
cmp esi 0xffffffff
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push esi
call [ Ordinal_WSOCK32_2@IAT ]
push 0x0
cmp eax 0xffffffff
jne r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor ebx ebx
inc ebx
push ebx
push 0x2
push edi
call sub_408ea0
add esp 0x10
mov esi eax
mov ecx esi
call sub_409a20
push ebx
push ebx
push 0x2
push edi
mov [ esi + 0xc ] ebx
mov [ esi ] 0x2b594d1
call sub_408ea0
add esp 0x10
mov esi eax
mov ecx esi
call sub_409a20
mov eax [ ebp - 0x4 ]
mov [ esi + 0xc ] ebx
mov ebx [ ebp + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
push 0x2
push 0x1
push 0x2
push edi
call sub_408ea0
add esp 0x10
mov ecx eax
call sub_409b9c
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
push 0x3
push 0x1
push 0x2
push edi
call sub_408ea0
add esp 0x10
mov ecx eax
call sub_409b9c
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
push esi
call [ Ordinal_WSOCK32_3@IAT ]
jmp r-xdata
or [ esi ] 0xffffffff
jmp r-xdata
push 0x0
xor ebx ebx
inc ebx
push ebx
push 0x2
push edi
call sub_408ea0
add esp 0x10
mov esi eax
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] ebx
jmp r-xdata
sub_4769d7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
mov ebx ecx
mov eax [ eax ]
cmp [ eax + 0xc ] 0x5
je r-xdata
xor edi edi
cmp [ eax + 0xc ] 0x5
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
xor edi edi
mov esi edi
mov esi [ eax ]
jmp r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp r-xdata
mov ecx eax
call sub_409c9c
cmp eax 0x2b594d1
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor eax eax
inc eax
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push 0x1
push 0x1
push esi
call sub_408ea0
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push 0x1
push 0x1
push 0x1
push esi
call sub_408ea0
add esp 0x10
mov ecx eax
call sub_409c9c
push eax
call [ Ordinal_WSOCK32_3@IAT ]
mov esi [ ebp + 0xc ]
mov ecx esi
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor eax eax
mov [ esi ] edi
inc eax
push edi
mov [ esi + 0xc ] eax
push 0xfffffffc
jmp r-xdata
push edi
mov [ esi ] edi
push 0xfffffffd
jmp r-xdata
call sub_409a20
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] eax
call sub_409a20
xor eax eax
mov [ esi ] edi
inc eax
push edi
mov [ esi + 0xc ] eax
call [ Ordinal_WSOCK32_111@IAT ]
push eax
sub_476ac0
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
push edi
call sub_40942e
xor ebx ebx
mov edi eax
push 0x4
inc ebx
push ebx
push edi
call sub_4091b0
add esp 0xc
push 0x11
push 0x2
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
mov [ ebp + 0xc ] eax
cmp eax 0xffffffff
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x8 ] 0x2
jbe r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
push 0x0
push 0x1
push 0x2
push edi
call sub_408ea0
add esp 0x10
mov esi eax
mov ecx esi
call sub_409a20
xor eax eax
mov [ esi ] 0x2b594d1
inc eax
push eax
push eax
push 0x2
push edi
mov [ esi + 0xc ] eax
call sub_408ea0
add esp 0x10
mov esi eax
mov ecx esi
call sub_409a20
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
push 0x2
push 0x1
push 0x2
push edi
call sub_408ea0
add esp 0x10
mov ecx eax
call sub_409b9c
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
push 0x3
push 0x1
push 0x2
push edi
call sub_408ea0
add esp 0x10
mov ecx eax
call sub_409b9c
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
test al 0x1
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push 0x4
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] 0x1
push eax
push 0x20
push 0xffff
push [ ebp + 0xc ]
call [ Ordinal_WSOCK32_21@IAT ]
test eax eax
je r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
xor ebx ebx
inc ebx
jmp r-xdata
push 0x0
push ebx
push 0x2
push edi
call sub_408ea0
add esp 0x10
mov esi eax
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] ebx
or [ esi ] 0xffffffff
jmp r-xdata
sub_476c19
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x154
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov ecx [ ebp + 0xc ]
push r--data
mov [ esp + 0x14 ] eax
call sub_409bf8
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx ]
cmp [ ecx + 0xc ] 0x5
je r-xdata
xor ebx ebx
cmp [ ecx + 0xc ] 0x5
jne r-xdata
push 0x0
mov edi ebx
mov edi [ ecx ]
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx eax
call sub_409c9c
cmp eax 0x2b594d1
je r-xdata
push ebx
jmp r-xdata
push ebx
push 0x1
push 0x1
push edi
call sub_408ea0
add esp 0x10
test eax eax
jne r-xdata
push 0x1
push 0x1
push 0x1
push edi
call sub_408ea0
add esp 0x10
mov [ esp + 0xc ] eax
mov ecx eax
call sub_409c9c
mov ebx eax
mov [ esp + 0x18 ] 0x10
xor eax eax
lea edi [ esp + 0x3a ]
mov [ esp + 0x38 ] ax
stosd [ edi ]
push 0x0
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
cmp ebx 0xffffffff
jne r-xdata
push ebx
push 0xfffffffc
jmp r-xdata
push 0xfffffffd
push 0x64
lea eax [ esp + 0x60 ]
mov ecx esi
push eax
push ebx
call sub_477f31
cmp eax 0xffffffff
je r-xdata
push ebx
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
jmp r-xdata
mov edi [ esp + 0x10 ]
lea eax [ edi + 0x1 ]
push eax
call sub_420f36
pop ecx
push eax
lea ecx [ esp + 0x20 ]
call sub_40538e
lea eax [ esp + 0x58 ]
push eax
push ebx
call [ Ordinal_WSOCK32_151@IAT ]
test eax eax
je r-xdata
push 0x0
push 0xfffffffe
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x3c ]
push eax
push 0x0
push edi
mov edi [ esp + 0x2c ]
push edi
push ebx
call [ Ordinal_WSOCK32_17@IAT ]
mov ebx eax
mov [ esp + 0x10 ] ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
xor esi esi
cmp [ eax + 0x8 ] 0x3
jb r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
jmp r-xdata
push edi
mov [ edi + ebx ] 0x0
call sub_4238c0
pop ecx
push ebx
cmp eax ebx
jne r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
mov ecx [ ebp + 0x8 ]
and eax 0x1
mov [ esp + 0x14 ] eax
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_409c9c
mov esi eax
and esi 0x2
mov [ esp + 0x34 ] esi
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
mov ecx [ esp + 0x10 ]
push edi
push ebx
test esi esi
jne r-xdata
lea ecx [ esp + 0x28 ]
call sub_407b76
push edi
lea ecx [ esp + 0x4c ]
call sub_45abf4
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x4c ]
push eax
call sub_40793a
lea ecx [ esp + 0x48 ]
call sub_405a64
mov ecx [ esp + 0xc ]
lea eax [ esp + 0x24 ]
push eax
test esi esi
jne r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_40942e
xor edi edi
mov ebx eax
push 0x3
inc edi
push edi
push ebx
call sub_4091b0
push edi
push edi
push 0x2
push ebx
call sub_408ea0
add esp 0x1c
mov esi eax
push [ esp + 0x3c ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea ecx [ esp + 0x28 ]
call sub_45abf4
lea eax [ esp + 0x48 ]
push eax
lea ecx [ esp + 0x28 ]
call sub_4780ac
push eax
mov ecx esi
call sub_409b9c
lea ecx [ esp + 0x48 ]
call sub_405a64
push 0x2
push edi
push 0x2
push ebx
call sub_408ea0
add esp 0x10
mov edi eax
push [ esp + 0x3a ]
call [ Ordinal_WSOCK32_15@IAT ]
mov ecx edi
movzx esi ax
call sub_409a20
push 0x0
push 0x1
push 0x2
push ebx
mov [ edi + 0xc ] 0x1
mov [ edi ] esi
call sub_408ea0
add esp 0x10
mov [ esp + 0xc ] eax
lea ecx [ esp + 0x24 ]
call sub_405a64
mov ebx [ esp + 0x10 ]
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x34 ]
call sub_46776d
push eax
call sub_420fc0
add esp 0xc
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_409b9c
lea ecx [ esp + 0x24 ]
call sub_405a64
jmp r-xdata
mov ecx [ ebp + 0xc ]
push ebx
push edi
push ebx
test esi esi
je r-xdata
lea ecx [ esp + 0x1c ]
call sub_405371
mov ecx [ esp + 0x18 ]
jmp r-xdata
sub_476ef1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x14
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov esi [ eax ]
mov ebx ecx
cmp [ esi + 0xc ] 0x5
je r-xdata
xor edi edi
cmp [ esi + 0xc ] 0x5
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor edi edi
mov esi edi
mov [ ebp - 0x4 ] edi
mov esi [ esi ]
mov [ ebp - 0x4 ] esi
jmp r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp r-xdata
mov ecx eax
call sub_409c9c
cmp eax 0x2b594d1
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
jmp r-xdata
push edi
push 0x1
push 0x1
push esi
call sub_408ea0
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x2
push 0x1
push 0x1
push esi
call sub_408ea0
add esp 0x10
mov esi eax
mov ecx esi
call sub_409997
mov esi [ esi + 0x8 ]
push 0x3
push 0x1
push 0x1
push [ ebp - 0x4 ]
call sub_408ea0
add esp 0x10
mov ecx eax
call sub_409c9c
push eax
push esi
lea eax [ ebp - 0x14 ]
mov ecx ebx
push eax
call sub_477ea0
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
push edi
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
push 0xfffffffc
jmp r-xdata
push edi
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
push 0xfffffffd
jmp r-xdata
push 0x1
push 0x1
push 0x1
push [ ebp - 0x4 ]
call sub_408ea0
add esp 0x10
mov ecx eax
call sub_409c9c
mov esi eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_4687be
mov edx eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_468801
push 0x10
lea ecx [ ebp - 0x14 ]
push ecx
push edi
push eax
push edx
push esi
call [ Ordinal_WSOCK32_20@IAT ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov [ ebp + 0x8 ] eax
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
or [ esi ] 0xffffffff
jmp r-xdata
call sub_409a20
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
call sub_409a20
push edi
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
call [ Ordinal_WSOCK32_111@IAT ]
push eax
mov [ esi + 0xc ] 0x1
sub_47706d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov eax [ eax + 0xc ]
dec eax
cmp eax 0xe
ja r-xdata
push r--data
jmp [ eax * 4 + jump_table_477105 ]
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_409bf8
xor eax eax
pop ebp
retn 0x8
sub_477141
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov cl [ ebp + 0x8 ]
cmp cl [ eax ]
jb r-xdata
xor eax eax
mov eax [ ebp + 0x10 ]
cmp cl [ eax ]
ja r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0xc
sub_477160
push ebp
mov ebp esp
mov edx ecx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ edx + 0x5 ]
push eax
lea eax [ edx + 0x4 ]
push eax
movzx eax [ esi ]
push eax
call sub_477141
test al al
je r-xdata
xor eax eax
lea eax [ edx + 0x3 ]
push eax
lea eax [ edx + 0x2 ]
push eax
movzx eax [ esi + 0x1 ]
push eax
call sub_477141
test al al
je r-xdata
lea eax [ edx + 0x1 ]
push eax
movzx eax [ esi + 0x2 ]
push edx
push eax
call sub_477141
test al al
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_4771b3
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
push esi
push edi
mov esi ecx
call [ GetForegroundWindow@IAT ]
push eax
lea eax [ esp + 0x1c ]
push eax
push [ esi + 0x100 ]
call sub_473ab6
mov esi [ ebp + 0x8 ]
lea eax [ esp + 0x28 ]
mov edi [ ebp + 0xc ]
add esi [ esp + 0x18 ]
add edi [ esp + 0x1c ]
push eax
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
lea eax [ esi + 0x1 ]
mov esi [ ebp + 0x10 ]
shl eax 0x10
cdq
idiv [ esp + 0x30 ]
lea ebx [ eax - 0x1 ]
lea eax [ edi + 0x1 ]
shl eax 0x10
cdq
idiv [ esp + 0x34 ]
lea edi [ eax - 0x1 ]
test esi esi
jne r-xdata
jle r-xdata
push esi
push esi
push edi
push ebx
push 0x8001
call [ mouse_event@IAT ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push 0xa
pop esi
cmp esi 0x64
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push 0xa
pop ecx
call sub_4652eb
push 0x0
push 0x0
push [ esp + 0x18 ]
push [ esp + 0x20 ]
push 0x8001
call [ mouse_event@IAT ]
push 0xa
pop ecx
call sub_4652eb
jmp r-xdata
lea eax [ esp + 0x20 ]
push eax
call [ GetCursorPos@IAT ]
imul eax [ esp + 0x20 ] 0xffff
mov ecx [ esp + 0x30 ]
dec ecx
cdq
idiv ecx
mov ecx [ esp + 0x34 ]
inc eax
mov [ esp + 0x14 ] eax
imul eax [ esp + 0x24 ] 0xffff
dec ecx
cdq
idiv ecx
inc eax
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x10 ]
mov edx edi
push eax
lea eax [ esp + 0x18 ]
mov ecx ebx
push eax
push 0x20
push esi
call sub_465115
add esp 0x10
test al al
je r-xdata
sub_4772be
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
xor edx edx
mov ecx [ ebp + 0x14 ]
inc edx
push ebx
push esi
mov esi [ ebp + 0x8 ]
add eax esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ebx eax
imul ebx ecx
push edi
shl ecx 0x2
xor edi edi
lea eax [ esi + eax * 4 ]
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0x8 ] eax
shl ebx 0x2
mov [ ebp + 0xc ] ebx
mov ebx esi
cmp esi eax
jae r-xdata
mov ebx 0xfff1
mov ecx 0x15ae
shl ecx 0x10
or ecx edx
mov [ ebp + 0x8 ] ecx
fild [ ebp + 0x8 ]
jns r-xdata
sub ecx ebx
sub ecx 0x3
je r-xdata
add ebx [ ebp + 0x10 ]
mov esi ebx
pop edi
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
fadd [ r--data ]
mov eax edx
movzx edx dx
shr eax 0x10
imul ecx eax 0xf
mov eax edi
shr eax 0x10
movzx edi di
add edx ecx
imul ecx eax 0xf
add edi ecx
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov ebx 0xfff1
cmp edx ebx
jb r-xdata
movzx eax [ esi + 0x2 ]
add edx eax
movzx eax [ esi + 0x1 ]
add edi edx
add edx eax
movzx eax [ esi ]
add edi edx
add esi [ ebp + 0xc ]
add edx eax
add edi edx
cmp esi [ ebp - 0x4 ]
jb r-xdata
mov eax edi
shr eax 0x10
imul ecx eax 0xf
movzx eax di
add ecx eax
cmp ecx ebx
jb r-xdata
sub edx ebx
jmp r-xdata
sub_477392
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
push ebx
push esi
mov esi [ ebp + 0x8 ]
add eax esi
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov ebx eax
imul ebx [ ebp + 0x14 ]
push edi
mov edi esi
lea eax [ esi + eax * 4 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebp + 0x14 ]
shl ebx 0x2
shl eax 0x2
mov [ ebp + 0xc ] eax
cmp edi [ ebp + 0x10 ]
jb r-xdata
add edi [ ebp + 0xc ]
mov esi edi
movzx eax [ esi + 0x2 ]
movzx ecx dl
xor ecx eax
shr edx 0x8
movzx eax [ esi + 0x1 ]
xor edx [ ecx * 4 + r--data ]
movzx ecx dl
xor ecx eax
shr edx 0x8
movzx eax [ esi ]
add esi ebx
xor edx [ ecx * 4 + r--data ]
movzx ecx dl
xor ecx eax
shr edx 0x8
xor edx [ ecx * 4 + r--data ]
cmp esi [ ebp + 0x8 ]
jb r-xdata
not edx
mov [ ebp + 0x8 ] edx
fild [ ebp + 0x8 ]
test edx edx
jns r-xdata
pop edi
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
fadd [ r--data ]
sub_47742f
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x10 ] ecx
mov eax [ esi + 0x8 ]
mov edx [ esi ]
cmp eax edx
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
setl bl
cmp ecx edi
mov [ ebp - 0x1 ] bl
setl bh
mov [ ebp + 0xf ] bh
test bl bl
je r-xdata
test bh bh
je r-xdata
mov [ esi ] eax
mov [ esi + 0x8 ] edx
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push [ eax + 0x104 ]
call sub_473ab6
mov ecx [ ebp - 0x1c ]
add [ esi + 0x8 ] ecx
mov eax [ ebp - 0x18 ]
add [ esi + 0xc ] eax
add [ esi ] ecx
add [ esi + 0x4 ] eax
mov edi [ esi + 0x8 ]
mov ebx [ esi + 0xc ]
sub edi [ esi ]
sub ebx [ esi + 0x4 ]
inc edi
inc ebx
push 0x0
mov [ ebp - 0xc ] ebx
call [ GetDC@IAT ]
push ebx
push edi
push eax
mov [ ebp - 0x8 ] eax
call [ CreateCompatibleBitmap@IAT ]
push [ ebp - 0x8 ]
mov [ ebp + 0x8 ] eax
call [ CreateCompatibleDC@IAT ]
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
push eax
call [ SelectObject@IAT ]
mov dh [ ebp + 0xf ]
mov ecx ebx
mov [ ebp - 0x14 ] eax
test dh dh
je r-xdata
mov [ esi + 0x4 ] ecx
mov [ esi + 0xc ] edi
mov dl [ ebp - 0x1 ]
mov eax edi
test dl dl
je r-xdata
neg ecx
test dh dh
je r-xdata
neg eax
mov ebx [ esi + 0x4 ]
mov ebx [ esi + 0xc ]
jmp r-xdata
mov edx [ esi ]
mov edx [ esi + 0x8 ]
jmp r-xdata
mov [ ebp + 0xc ] ebx
mov ebx [ ebp - 0xc ]
test dl dl
je r-xdata
push edi
call j_sub_422ed5#3
pop ecx
xor eax eax
mov eax edi
jmp r-xdata
mov esi [ ebp - 0x10 ]
push 0xcc0020
push ecx
push eax
push [ ebp + 0xc ]
push edx
push [ ebp - 0x8 ]
push ebx
push edi
push 0x0
push 0x0
push esi
call [ StretchBlt@IAT ]
mov eax ebx
mov [ ebp - 0x48 ] 0x28
neg eax
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x40 ] eax
xor ecx ecx
push 0x20
xor eax eax
mov [ ebp - 0x38 ] ecx
inc eax
mov [ ebp - 0x3c ] ax
pop eax
push ecx
mov [ ebp - 0x3a ] ax
lea eax [ ebp - 0x48 ]
push eax
push ecx
push ecx
push ecx
push [ ebp + 0x8 ]
push esi
mov esi [ GetDIBits@IAT ]
call esi
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x34 ]
push ecx
mov [ eax ] ecx
call sub_420f36
pop ecx
push 0x0
mov edi eax
lea eax [ ebp - 0x48 ]
push eax
push edi
push ebx
mov ebx [ ebp - 0x10 ]
push 0x0
push [ ebp + 0x8 ]
push ebx
call esi
push [ ebp - 0x14 ]
mov esi eax
push ebx
call [ SelectObject@IAT ]
push [ ebp + 0x8 ]
call [ DeleteObject@IAT ]
push ebx
call [ DeleteDC@IAT ]
push [ ebp - 0x8 ]
push 0x0
call [ ReleaseDC@IAT ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4775c0
push ebp
mov ebp esp
sub esp 0xb0
push ebx
push esi
or esi 0xffffffff
mov [ ebp - 0x4 ] 0x88c00000
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x8 ] esi
or ebx esi
mov [ ebp - 0xc ] 0x8
call sub_4077c7
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x1
je r-xdata
push eax
call [ DestroyWindow@IAT ]
and [ rw-data ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_405a64
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp + 0xc ] 0x3
push edi
mov edi [ ebp + 0x8 ]
jb r-xdata
cmp [ ebp + 0xc ] 0x4
jb r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
lea ecx [ ebp - 0x2c ]
call sub_4081a7
mov esi [ ebp - 0x8 ]
cmp [ ebp + 0xc ] 0x5
jb r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
mov esi eax
mov [ ebp - 0x8 ] eax
cmp [ ebp + 0xc ] 0x6
jb r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_409c9c
mov ebx eax
push 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push 0x30
call [ SystemParametersInfoW@IAT ]
cmp esi 0xffffffff
jne r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x14 ]
call sub_409c9c
test al 0x1
je r-xdata
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x14 ]
add eax 0xfffffed4
cdq
sub eax edx
mov esi eax
sar esi 0x1
mov [ ebp - 0x8 ] esi
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_409c9c
and al 0x2
movsx eax al
neg eax
push 0x8
sbb eax eax
not eax
pop ecx
and eax ecx
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_409c9c
test al 0x10
je r-xdata
mov [ ebp - 0x4 ] 0x88000000
push 0x64
push 0x12c
xor esi esi
lea eax [ ebp - 0x1c ]
push esi
push esi
push eax
call [ SetRect@IAT ]
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x1c ]
push ecx
push esi
push [ ebp - 0x4 ]
push eax
call [ AdjustWindowRectEx@IAT ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
xor eax eax
push eax
push eax
push eax
push [ rw-data ]
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
push ebx
push [ ebp - 0x8 ]
mov ebx [ CreateWindowExW@IAT ]
push [ ebp - 0x4 ]
push ecx
push r--data
push [ ebp - 0xc ]
call ebx
lea ecx [ ebp - 0x1c ]
mov [ rw-data ] eax
push ecx
push eax
call [ GetClientRect@IAT ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
xor esi esi
push esi
push esi
push esi
push [ rw-data ]
mov ecx [ eax ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push 0x18
push 0x500
push 0x4
sub eax 0x119
push eax
push 0x50000000
push ecx
push r--data
push esi
call ebx
push esi
push esi
push esi
push r--data
mov [ rw-data ] eax
call [ CreateDCW@IAT ]
mov ebx [ GetStockObject@IAT ]
mov esi eax
push 0x11
call ebx
push eax
push esi
call [ SelectObject@IAT ]
lea eax [ ebp - 0xb0 ]
push eax
push 0x40
push esi
call [ GetTextFaceW@IAT ]
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push esi
mov edi eax
call [ DeleteDC@IAT ]
lea eax [ ebp - 0xb0 ]
push eax
xor eax eax
push eax
push 0x2
push eax
push 0x4
push 0x1
push eax
push eax
push eax
push 0x258
push eax
push eax
push eax
imul eax edi 0xfffffff6
push 0x48
pop ecx
cdq
idiv ecx
push eax
call [ CreateFontW@IAT ]
mov esi [ SendMessageW@IAT ]
push 0x1
push eax
push 0x30
push [ rw-data ]
call esi
mov eax [ ebp - 0x14 ]
xor edi edi
sub eax [ ebp - 0x1c ]
mov ecx 0x104
push edi
push edi
push edi
push [ rw-data ]
sub eax ecx
push 0x14
push ecx
cdq
push 0x1e
sub eax edx
sar eax 0x1
push eax
push 0x50000001
push edi
mov edi [ CreateWindowExW@IAT ]
push r--data
push 0x200
call edi
push 0x640000
push 0x0
push 0x401
push eax
mov [ rw-data ] eax
call esi
push 0x0
push 0x1
push 0x404
push [ rw-data ]
call esi
mov eax [ ebp - 0x14 ]
xor ecx ecx
push ecx
push ecx
push ecx
push [ rw-data ]
push 0x32
push 0x500
push 0x37
sub eax [ ebp - 0x1c ]
sub eax 0x118
push eax
push 0x50000000
push [ ebp - 0x2c ]
push r--data
push ecx
call edi
push 0x1
push 0x11
mov [ rw-data ] eax
call ebx
push eax
push 0x30
push [ rw-data ]
call esi
push 0x4
push [ rw-data ]
call [ ShowWindow@IAT ]
pop edi
mov eax [ ebp - 0x10 ]
add eax 0xffffff9c
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
xor [ ebp - 0x4 ] 0x8000000
sub_4778e9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx edx al
push esi
mov esi [ ebp + 0xc ]
mov ecx edx
sub ecx esi
jns r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] cl
lea eax [ edx + esi ]
mov ecx 0xff
pop esi
cmp eax ecx
jg r-xdata
xor ecx ecx
mov eax [ ebp + 0x14 ]
mov [ eax ] cl
pop ebp
retn 0x10
mov ecx eax
sub_47791b
push ebp
mov ebp esp
sub esp 0xb8
or [ ebp - 0x18 ] 0xffffffff
or [ ebp - 0x1c ] 0xffffffff
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] 0x1f4
push edi
mov edi 0x50000001
mov [ ebp - 0x4 ] 0x190
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x8 ] 0x88c00000
mov [ ebp - 0x10 ] 0x8
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov eax [ rw-data ]
mov esi [ DeleteObject@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea eax [ ebp - 0x2c ]
push eax
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp esi 0x3
jb r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call esi
mov [ rw-data ] ebx
cmp esi 0x4
jb r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ DestroyWindow@IAT ]
mov [ rw-data ] ebx
push eax
call esi
mov [ rw-data ] ebx
cmp esi 0x5
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_409c9c
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
mov [ ebp - 0xc ] eax
cmp esi 0x6
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_409c9c
mov [ ebp - 0x18 ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
mov [ ebp - 0x4 ] eax
cmp esi 0x7
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x14 ]
call sub_409c9c
mov [ ebp - 0x1c ] eax
mov esi [ ebp - 0x10 ]
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x18 ]
call sub_409c9c
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_409c9c
cmp [ ebp + 0x10 ] 0x1
mov ecx eax
mov [ ebp - 0x30 ] ecx
jne r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x2c ]
push ecx
push 0x0
push 0x0
push eax
call [ SetRect@IAT ]
push esi
push 0x0
push [ ebp - 0x8 ]
lea eax [ ebp - 0x2c ]
push eax
call [ AdjustWindowRectEx@IAT ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ CreateWindowExW@IAT ]
mov ecx [ eax ]
xor eax eax
push eax
push eax
push eax
push [ rw-data ]
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x2c ]
push eax
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
push [ ebp - 0x8 ]
push ecx
push r--data
push [ ebp - 0x10 ]
call esi
lea ecx [ ebp - 0x2c ]
mov [ rw-data ] eax
push ecx
push eax
call [ GetClientRect@IAT ]
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
sub ecx [ ebp - 0x2c ]
sub eax [ ebp - 0x28 ]
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x4 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x1c ] eax
mov al cl
and al 0x2
movsx eax al
neg eax
sbb eax eax
not eax
and eax [ ebp - 0x10 ]
mov esi eax
mov [ ebp - 0x10 ] esi
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
sub eax 0x16
sub ecx 0x16
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp + 0x10 ] ecx
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
xor esi esi
push esi
push esi
push esi
push [ rw-data ]
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
push 0xb
push 0xb
push edi
push [ eax ]
push r--data
push esi
call [ CreateWindowExW@IAT ]
push esi
push esi
push esi
mov edi eax
push r--data
mov [ ebp - 0x8 ] edi
call [ CreateDCW@IAT ]
push 0x11
mov esi eax
call [ GetStockObject@IAT ]
push eax
push esi
call [ SelectObject@IAT ]
lea eax [ ebp - 0xb8 ]
push eax
push 0x40
push esi
call [ GetTextFaceW@IAT ]
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push esi
mov [ ebp - 0xc ] eax
call [ DeleteDC@IAT ]
cmp [ ebp + 0xc ] 0x8
jb r-xdata
xor edi edi
push edi
push edi
push edi
push [ rw-data ]
mov [ ebp + 0x10 ] edi
push eax
push ecx
push edi
push edi
push 0x5000000e
push edi
push r--data
push edi
call esi
mov ecx [ ebx + 0x4 ]
mov [ ebp - 0x30 ] eax
mov esi [ ecx + 0x4 ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
push edi
push edi
push 0x3
push edi
push edi
push 0x80000000
push [ ecx ]
call [ CreateFileW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov eax 0x88c00000
mov eax 0x88800000
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax edi
mov eax 0x50000002
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x9
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov esi [ ecx + 0x1c ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push [ eax ]
call sub_422d7c
pop ecx
cmp eax 0x1
jb r-xdata
push edi
push ebx
call [ GetFileSize@IAT ]
mov esi eax
push esi
push 0x2
call [ GlobalAlloc@IAT ]
mov edi eax
push edi
call [ GlobalLock@IAT ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push eax
push ebx
call [ ReadFile@IAT ]
push edi
mov esi eax
call [ GlobalUnlock@IAT ]
push ebx
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
cmp [ ebp - 0x18 ] 0xffffffff
mov ecx [ ebp - 0xc ]
jne r-xdata
xor eax 0x8000000
mov [ ebp - 0x8 ] eax
jmp r-xdata
test cl 0x10
je r-xdata
mov edi [ ebp - 0x14 ]
movsx eax al
and eax 0x2
or eax 0xa0000001
shr eax 0x1
mov [ ebp - 0x14 ] eax
test cl 0x4
je r-xdata
push 0xc
pop esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x20 ]
call sub_409c9c
cmp eax 0x6
jl r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x1c ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push [ eax ]
lea eax [ ebp - 0xb8 ]
push eax
call sub_422f3c
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push edi
call [ CreateStreamOnHGlobal@IAT ]
lea eax [ ebp + 0x10 ]
xor ebx ebx
push eax
push r--data
push ebx
push ebx
push [ ebp + 0x8 ]
call [ OleLoadPicture@IAT ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
push edi
call [ GlobalFree@IAT ]
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push edi
call [ GlobalFree@IAT ]
jmp r-xdata
mov eax 0x190
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x24 ]
call sub_409c9c
test eax eax
js r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x20 ]
call sub_409c9c
mov esi eax
jmp r-xdata
mov eax [ ecx ]
lea edx [ ebp + 0xc ]
push edx
push ecx
call [ eax + 0xc ]
push 0x2000
push ebx
push ebx
push ebx
push [ ebp + 0xc ]
call [ CopyImage@IAT ]
mov [ ebp + 0xc ] eax
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
push [ ebp + 0xc ]
mov esi [ ebp - 0x30 ]
push ebx
push 0x172
push esi
call [ SendMessageW@IAT ]
mov eax [ ebp + 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
push 0x20
push eax
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x2c ]
push eax
push ebx
push ebx
push ebx
push esi
call [ SetWindowPos@IAT ]
jmp r-xdata
push 0x4
push [ rw-data ]
call [ ShowWindow@IAT ]
push edi
call [ GetDC@IAT ]
push [ rw-data ]
mov ebx eax
push ebx
call [ SelectObject@IAT ]
mov ecx [ ebp + 0x8 ]
mov edi eax
mov ecx [ ecx + 0x4 ]
mov esi [ ecx + 0x4 ]
mov ecx esi
call sub_409997
mov edx [ esi + 0x8 ]
lea eax [ ebp - 0x34 ]
push eax
mov ecx ebx
mov edx [ edx ]
call sub_464876
pop ecx
push edi
push ebx
call [ SelectObject@IAT ]
mov esi [ ebp - 0x8 ]
push ebx
push esi
call [ ReleaseDC@IAT ]
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x30 ]
push 0x1
push [ ebp - 0x30 ]
cdq
push [ ebp + 0x10 ]
sub eax edx
sar eax 0x1
add eax 0xb
push eax
push 0xb
push esi
call [ MoveWindow@IAT ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x24 ]
call sub_409c9c
cmp eax 0x3e8
jg r-xdata
cmp [ ebp + 0xc ] 0xa
jb r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x24 ]
call sub_409c9c
jmp r-xdata
lea ecx [ ebp - 0xb8 ]
push ecx
xor ecx ecx
push ecx
push 0x2
push ecx
push 0x4
push 0x1
push ecx
push ecx
push ecx
push eax
mov eax [ ebp - 0xc ]
push ecx
push ecx
imul eax esi
push ecx
push 0xffffffb8
pop ecx
cdq
idiv ecx
push eax
call [ CreateFontW@IAT ]
push 0x1
push eax
push 0x30
push edi
mov [ rw-data ] eax
call [ SendMessageW@IAT ]
test [ ebp - 0x30 ] 0x20
je r-xdata
sub_477ea0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push 0x2
pop eax
lea ecx [ ebp - 0x10 ]
mov [ edi ] ax
call sub_405c18
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call sub_47810b
push [ ebp - 0x10 ]
call [ Ordinal_WSOCK32_10@IAT ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_405a64
cmp ebx 0xffffffff
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ edi + 0x4 ] ebx
lea eax [ ecx - 0x1 ]
cmp eax 0xfffe
ja r-xdata
mov ecx [ ebp + 0xc ]
mov edx r--data
call sub_45a14d
test al al
je r-xdata
push 0x0
push 0x2
push ecx
call [ Ordinal_WSOCK32_9@IAT ]
mov [ edi + 0x2 ] ax
mov al 0x1
jmp r-xdata
push 0x0
push 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
xor al al
sub_477f31
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
and [ ebx ] 0x0
mov edi ecx
mov [ ebx + 0x4 ] eax
mov ecx 0x3e8
mov eax esi
inc [ ebx ]
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
imul eax eax 0x3e8
sub esi eax
imul eax esi 0x3e8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
xor eax eax
push eax
cmp [ ebp + 0x14 ] al
je r-xdata
push eax
push ebx
push ebx
push eax
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x14 ] al
je r-xdata
push eax
call [ Ordinal_WSOCK32_18@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0x0
call [ Ordinal_WSOCK32_111@IAT ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ Ordinal_WSOCK32_151@IAT ]
test eax eax
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push eax
push 0x274c
jmp r-xdata
push 0xfffffffe
pop esi
push eax
push esi
jmp r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
sub_477fcd
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push edi
push eax
push eax
mov edi [ ebx + 0x4 ]
inc edi
push edi
push [ ebx ]
push 0x1
push eax
call [ MultiByteToWideChar@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
push esi
xor ecx ecx
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
push [ ebp + 0x8 ]
mov esi eax
push esi
push edi
push [ ebx ]
push 0x1
push 0x0
call [ MultiByteToWideChar@IAT ]
mov ecx [ ebp + 0xc ]
dec eax
push eax
push 0x0
push esi
call sub_4078ad
push esi
call j_sub_422ed5#3
pop ecx
pop esi
mov ecx [ ebp + 0xc ]
call sub_407eec
jmp r-xdata
pop edi
pop ebx
pop ebp
retn 0x8
sub_47803e
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
jne r-xdata
push [ ebp + 0x8 ]
call sub_4238c0
pop ecx
mov ecx [ esi + 0xc ]
mov [ esi + 0x4 ] eax
mov edx [ ecx ]
cmp edx 0x1
jle r-xdata
push ecx
push ecx
call sub_463210
jmp r-xdata
push eax
mov ecx esi
call sub_405a87
lea eax [ edx - 0x1 ]
mov [ ecx ] eax
mov ecx esi
call sub_456223
mov eax [ esi + 0x4 ]
inc eax
push eax
call sub_405a4b
push eax
mov [ esi + 0x8 ] eax
call sub_420f36
pop ecx
mov [ esi ] eax
jmp r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
inc eax
push eax
push [ ebp + 0x8 ]
push [ esi ]
call sub_420fc0
add esp 0xc
sub_4780ac
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
call sub_4077c7
push [ ebp + 0x8 ]
push esi
call sub_477fcd
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn 0x4
sub_4780cb
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
mov eax [ ecx + 0x4 ]
test edx edx
je r-xdata
test eax eax
je r-xdata
mov [ edx + 0x4 ] eax
cmp ecx [ esi ]
jne r-xdata
mov [ eax + 0x8 ] edx
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi ] eax
push ecx
call sub_469c6b
and [ edi ] 0x0
dec [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] edx
sub_47810b
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push edi
push eax
push eax
mov edi [ ebx + 0x4 ]
push eax
push eax
inc edi
push edi
push [ ebx ]
push eax
push eax
call [ WideCharToMultiByte@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
push esi
push eax
call sub_420f36
pop ecx
mov esi eax
xor eax eax
push eax
push eax
push [ ebp + 0x8 ]
push esi
push edi
push [ ebx ]
push eax
push eax
call [ WideCharToMultiByte@IAT ]
dec eax
push eax
push ecx
mov ecx [ ebp + 0xc ]
push esi
call sub_405ac4
push esi
call j_sub_422ed5#3
pop ecx
pop esi
mov ecx [ ebp + 0xc ]
call sub_405a2f
jmp r-xdata
pop edi
pop ebx
pop ebp
retn 0x8
sub_478170
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
cmp [ ecx + 0xc ] 0x6
jne r-xdata
call sub_4093dd
test al al
jne r-xdata
mov ecx [ ecx ]
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
sub_4781a8
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov esi ecx
xor edi edi
mov ecx ebx
mov [ esp + 0x10 ] esi
mov [ esp + 0x1c ] edi
call sub_409a20
push edi
mov [ ebx + 0xc ] 0x1
mov [ ebx ] edi
mov [ esp + 0x18 ] edi
call [ CoInitialize@IAT ]
cmp eax 0x1
jne r-xdata
lea eax [ esp + 0x20 ]
push eax
call [ VariantInit@IAT ]
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] edi
mov edi [ ebp + 0x8 ]
push 0x9
pop eax
mov [ esp + 0x20 ] ax
mov eax [ edi + 0x8 ]
dec eax
je r-xdata
call [ CoUninitialize@IAT ]
push 0x3c
call sub_420f36
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
dec eax
je r-xdata
xor eax eax
mov ecx [ edi + 0x4 ]
mov esi [ ecx ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
push 0x0
push 0x0
push [ ecx ]
mov ecx ebx
call sub_45d87b
mov esi [ esp + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push ebx
push 0x0
push 0x0
jmp r-xdata
dec eax
je r-xdata
and [ esp + 0x38 ] 0x0
push 0x2
mov [ esp + 0x18 ] eax
pop ebx
mov [ esp + 0x30 ] eax
mov [ esp + 0x3c ] 0x1
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x20 ]
xor ebx ebx
push eax
inc ebx
call sub_46760b
and [ esp + 0x48 ] 0x0
lea ecx [ esp + 0x40 ]
push eax
call sub_409ac0
jmp r-xdata
mov [ esp + 0x28 ] eax
mov eax [ eax + 0x4 ]
test eax eax
js r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esp + 0x1c ]
push edi
push [ eax ]
call sub_479872
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
mov ecx ebx
call sub_409c42
mov ecx ebx
test al al
je r-xdata
dec eax
jne r-xdata
test bl 0x1
lea ecx [ esp + 0x30 ]
and ebx 0xfffffffd
call sub_409a20
test bl 0x2
je r-xdata
lea eax [ esp + 0x20 ]
push eax
call [ VariantClear@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_409997
mov eax [ ebx + 0x8 ]
mov ebx [ eax ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push [ ebp + 0xc ]
mov eax [ esi + 0x8 ]
mov esi [ esp + 0x14 ]
mov ecx esi
push 0x0
push ebx
push edi
push [ eax ]
call sub_479872
jmp r-xdata
call sub_409c9c
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov eax [ eax ]
mov [ esp + 0x18 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ebx [ eax ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push [ ebp + 0xc ]
push [ esp + 0x1c ]
push ebx
mov eax [ esp + 0x14 ]
test eax eax
jns r-xdata
lea ecx [ esp + 0x40 ]
call sub_409a20
and [ esp + 0x18 ] 0x0
mov eax [ edi + 0x4 ]
mov esi [ esi + 0x1a8 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
cmp eax esi
jg r-xdata
push 0x0
push 0x0
push 0x0
push eax
mov ecx esi
call sub_4794db
xor eax eax
mov ecx [ edi + 0x4 ]
push 0x29
mov esi [ ecx + 0x4 ]
mov ecx esi
call sub_409dae
test al al
je r-xdata
mov esi [ esp + 0x10 ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x1a4 ]
mov eax [ ecx + eax * 4 - 0x4 ]
mov ebx [ eax ]
mov [ esp + 0x18 ] ebx
jmp r-xdata
and [ esp + 0x38 ] 0x0
push 0x8
mov [ esp + 0x18 ] eax
pop ebx
mov [ esp + 0x30 ] eax
mov [ esp + 0x3c ] 0x1
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x20 ]
push 0x4
pop ebx
push eax
call sub_46760b
and [ esp + 0x48 ] 0x0
lea ecx [ esp + 0x40 ]
push eax
call sub_409ac0
jmp r-xdata
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ebx [ eax ]
xor ebx ebx
jmp r-xdata
push 0x3c
call sub_420f36
mov [ esp + 0x20 ] eax
pop ecx
test eax eax
je r-xdata
test bl 0x4
jmp r-xdata
lea ecx [ esp + 0x30 ]
and ebx 0xfffffff7
call sub_409a20
test bl 0x8
je r-xdata
mov [ esp + 0x28 ] eax
mov eax [ eax + 0x4 ]
test eax eax
js r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push [ esp + 0x18 ]
mov eax [ esi + 0x8 ]
mov ecx [ esp + 0x20 ]
push ebx
push [ eax ]
call sub_45d87b
mov esi [ esp + 0x10 ]
jmp r-xdata
je r-xdata
sub_4784d0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov eax [ eax ]
mov [ esp + 0x1c ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
xor esi esi
push esi
mov [ esp + 0x28 ] esi
mov [ esp + 0x17 ] 0x1
mov eax [ eax ]
mov [ esp + 0x24 ] eax
call [ CoInitialize@IAT ]
cmp eax 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x3
mov [ esp + 0x18 ] esi
jbe r-xdata
call [ CoUninitialize@IAT ]
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x38 ]
push esi
call sub_457432
pop ecx
test eax eax
js r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409dae
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_4687da
mov esi eax
test esi esi
jne r-xdata
lea eax [ esp + 0x14 ]
mov [ esp + 0x14 ] esi
push eax
push r--data
push 0x17
push esi
lea eax [ esp + 0x48 ]
push eax
call [ CoCreateInstance@IAT ]
test eax eax
jns r-xdata
mov ecx esi
call sub_409c53
mov [ esp + 0x13 ] al
mov [ esp + 0x13 ] 0x1
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx ]
call sub_4093dd
test al al
je r-xdata
push eax
push r--data
push eax
push 0x3
jmp r-xdata
mov esi [ esp + 0x14 ]
mov ecx esi
call sub_457aa1
mov [ esp + 0x18 ] 0x1
jmp r-xdata
push esi
push r--data
push esi
xor esi esi
cmp [ esp + 0x13 ] 0x0
je r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
mov ecx ebx
call sub_4794db
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ esp + 0x14 ] esi
lea eax [ esp + 0x48 ]
push eax
push [ esp + 0x24 ]
call [ IIDFromString@IAT ]
test eax eax
jns r-xdata
mov ebx [ esp + 0x24 ]
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409dae
test al al
je r-xdata
and [ esp + 0x14 ] 0x0
lea ecx [ esp + 0x14 ]
mov eax [ esi ]
push ecx
lea ecx [ esp + 0x4c ]
push ecx
push esi
call [ eax ]
test eax eax
jns r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
push 0x28
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
jmp r-xdata
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ebx [ eax ]
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
jmp r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
push 0x0
push r--data
push 0x0
push 0x2
jmp r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
and [ esp + 0x30 ] 0x0
xor ecx ecx
cmp [ esp + 0x13 ] cl
setne cl
push ecx
push ebx
push [ esp + 0x1c ]
mov ecx eax
call sub_45dc97
mov [ esp + 0x30 ] eax
jmp r-xdata
lea eax [ esp + 0x28 ]
push eax
call [ VariantInit@IAT ]
and [ esp + 0x30 ] 0x0
and [ esp + 0x34 ] 0x0
push 0x9
pop eax
mov [ esp + 0x28 ] ax
test ebx ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x2
jbe r-xdata
push 0x0
push r--data
push 0x0
jmp r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x28 ]
push eax
call sub_46760b
lea eax [ esp + 0x28 ]
push eax
call [ VariantClear@IAT ]
xor eax eax
push 0x1
sub_478702
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
push ebx
push esi
push edi
mov ebx ecx
xor edi edi
mov ecx [ ebp + 0xc ]
push r--data
mov [ esp + 0x18 ] edi
call sub_409bf8
lea eax [ esp + 0x28 ]
push eax
call [ VariantInit@IAT ]
mov esi [ ebp + 0x8 ]
push 0x9
pop eax
mov [ esp + 0x28 ] ax
mov eax [ esi + 0x4 ]
mov [ esp + 0x30 ] edi
mov [ esp + 0x34 ] edi
mov edx [ eax ]
mov ecx edx
mov [ esp + 0x14 ] edx
call sub_4093dd
test al al
je r-xdata
mov ecx edx
call sub_409997
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x18 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x24 ] eax
inc [ eax ]
call sub_407faf
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call [ CharUpperBuffW@IAT ]
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_45a14d
test al al
jne r-xdata
cmp [ esi + 0x8 ] 0x2
jae r-xdata
push edi
push r--data
push edi
push 0x1
mov ecx ebx
call sub_4794db
mov edi eax
cmp [ esi + 0x8 ] 0x1
jne r-xdata
push 0x50
call sub_420f36
mov [ esp + 0x18 ] eax
pop ecx
test eax eax
je r-xdata
push edi
push r--data
push edi
push 0x1
jmp r-xdata
lea eax [ esp + 0x28 ]
push eax
call [ VariantClear@IAT ]
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov [ esp + 0x14 ] ecx
cmp [ ecx + 0xc ] 0xe
jne r-xdata
cmp [ ebx + 0x17c ] edi
je r-xdata
mov ecx edi
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
mov ecx ebx
call sub_4794db
mov edi eax
jmp r-xdata
push 0x2
pop eax
mov [ esp + 0x10 ] eax
call sub_409997
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x38 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x3c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x40 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x44 ] eax
inc [ eax ]
lea eax [ esp + 0x38 ]
xor eax eax
inc eax
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x48 ]
push eax
call sub_4679c3
jmp r-xdata
lea ecx [ esp + 0x18 ]
call sub_405a64
jmp r-xdata
mov edx [ ebx + 0x17c ]
mov eax [ ebx + 0x178 ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + edx * 4 - 0x4 ]
mov eax [ eax ]
add eax 0x8
push eax
call sub_409e9c
jmp r-xdata
mov [ esp + 0x30 ] ecx
jmp r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
push edi
push edi
push edi
push esi
mov [ esp + 0x10 ] edi
mov ecx [ esi + 0x4 ]
mov esi [ ecx + 0x8 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esp + 0x10 ] eax
jmp r-xdata
test al 0x1
je r-xdata
and eax 0xfffffffd
lea ecx [ esp + 0x38 ]
mov [ esp + 0x10 ] eax
call sub_405a64
mov eax [ esp + 0x10 ]
push eax
mov ecx ebx
call sub_409fbd
neg eax
sbb al al
inc al
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x10 ]
test al 0x2
je r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x28 ]
push eax
call sub_46760b
mov esi [ ecx + 0x4 ]
test esi esi
jns r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
lea eax [ ebx + 0x184 ]
push eax
push ebx
push [ esp + 0x18 ]
push [ esi + 0x8 ]
push ecx
mov ecx [ esp + 0x28 ]
call sub_45cb98
mov ecx eax
jmp r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
lea ecx [ esp + 0x48 ]
call sub_405a64
push 0x30
call sub_420f36
mov [ esp + 0x18 ] eax
pop ecx
test eax eax
je r-xdata
mov [ esp + 0x10 ] edi
mov ecx [ esi + 0x4 ]
sub esp 0x10
mov edx [ ecx + 0x4 ]
mov ecx esp
push edx
mov [ ecx + 0x8 ] edi
call sub_409ac0
mov ecx [ esp + 0x24 ]
lea eax [ ebx + 0x174 ]
push eax
call sub_45c7ad
mov [ esp + 0x10 ] eax
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
lea ecx [ ebx + 0x174 ]
call sub_47a29f
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x30 ] eax
call sub_405a64
sub_4789c0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x64
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x8 ]
lea edi [ esp + 0x60 ]
mov esi r--data
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x40 ]
mov [ esp + 0x14 ] ecx
push eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call [ VariantInit@IAT ]
mov ecx [ ebp + 0xc ]
xor ebx ebx
xor esi esi
mov [ esp + 0x48 ] ebx
inc esi
mov [ esp + 0x4c ] ebx
push r--data
mov [ esp + 0x14 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] esi
call sub_409bf8
push ebx
call [ CoInitialize@IAT ]
cmp eax esi
jne r-xdata
mov edi [ ebp + 0x8 ]
push 0x29
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409dae
test al al
je r-xdata
call [ CoUninitialize@IAT ]
xor eax eax
inc eax
cmp [ esp + 0x20 ] eax
jbe r-xdata
push r--data
mov ecx esi
call sub_409bf8
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov edx r--data
mov eax [ ecx ]
mov [ esp + 0x30 ] eax
mov [ esp + 0x50 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x54 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x58 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x50 ]
mov [ esp + 0x5c ] eax
inc [ eax ]
call sub_420c63
test al al
je r-xdata
mov [ esp + 0x28 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x64 ]
mov ecx [ eax ]
call sub_457432
pop ecx
test eax eax
jns r-xdata
mov edi [ SetErrorMode@IAT ]
push 0x1
call edi
mov esi eax
mov [ esp + 0x34 ] r--data
mov eax [ esp + 0x28 ]
lea ecx [ esp + 0x60 ]
neg eax
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] ebx
sbb eax eax
and eax ecx
lea ecx [ esp + 0x34 ]
push ecx
push 0x1
push [ esp + 0x38 ]
push 0x2
push 0x15
push ebx
push eax
push ebx
call [ CoGetInstanceFromFile@IAT ]
test eax eax
js r-xdata
cmp [ esp + 0x20 ] 0x2
mov [ esp + 0x24 ] 0x1
jbe r-xdata
mov ecx [ esp + 0x14 ]
push ebx
push ebx
push ebx
push eax
call sub_4794db
mov ebx eax
jmp r-xdata
lea eax [ esp + 0x24 ]
mov [ esp + 0x24 ] ebx
push eax
push r--data
push ebx
push [ esp + 0x3c ]
call [ CoGetObject@IAT ]
test eax eax
js r-xdata
mov eax [ esp + 0x38 ]
jmp r-xdata
lea eax [ esp + 0x1c ]
push eax
push ebx
call [ GetRunningObjectTable@IAT ]
test eax eax
js r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409dae
test al al
jne r-xdata
lea eax [ esp + 0x40 ]
push eax
call [ VariantClear@IAT ]
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esp + 0x14 ]
push ebx
push ebx
push ebx
push eax
call sub_4794db
push esi
mov ebx eax
call edi
mov eax [ esp + 0x24 ]
push esi
mov [ esp + 0x14 ] eax
call edi
mov ecx [ esp + 0x28 ]
push ebx
push ebx
push ebx
push 0x80004005
mov eax [ esp + 0x1c ]
lea edx [ esp + 0x28 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x24 ]
test eax eax
jns r-xdata
mov [ esp + 0x24 ] 0x1
mov ecx esi
call sub_409c9c
cmp eax 0x1
jl r-xdata
push ebx
push ebx
push ebx
push 0x80020006
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ esp + 0x50 ]
call sub_405a64
mov eax [ esp + 0x28 ]
mov [ esp + 0x20 ] ebx
mov [ esp + 0x18 ] ebx
push eax
mov ecx [ eax ]
mov [ esp + 0x34 ] 0x1
call [ ecx + 0x14 ]
mov eax [ esp + 0x1c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
mov [ esp + 0x24 ] eax
jmp r-xdata
mov ecx [ esp + 0x24 ]
call sub_4794db
mov ebx eax
jmp r-xdata
push 0x9
pop ecx
mov [ esp + 0x48 ] eax
lea eax [ esp + 0x40 ]
mov [ esp + 0x40 ] cx
mov ecx [ ebp + 0xc ]
push eax
call sub_46760b
jmp r-xdata
mov edx [ esp + 0x2c ]
lea esi [ esp + 0x60 ]
sub esp 0x10
mov ecx eax
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_457858
add esp 0x10
test eax eax
mov eax [ esp + 0x10 ]
jne r-xdata
mov eax [ esp + 0x28 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ esp + 0x1c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov ecx ebx
jmp r-xdata
cmp [ esp + 0x18 ] ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push ebx
push ebx
push ebx
push 0x80028ca0
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
lea edx [ esp + 0x20 ]
push edx
push [ esp + 0x1c ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
test eax eax
js r-xdata
mov eax [ esp + 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov eax [ esp + 0x20 ]
lea edx [ esp + 0x10 ]
push edx
push r--data
push eax
mov ecx [ eax ]
call [ ecx ]
test eax eax
js r-xdata
mov eax [ esp + 0x28 ]
lea edx [ esp + 0x18 ]
push ebx
push edx
push 0x1
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
test eax eax
jne r-xdata
mov eax [ esp + 0x20 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ esp + 0x2c ]
lea esi [ esp + 0x60 ]
mov ecx [ esp + 0x10 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_457858
add esp 0x10
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ esp + 0x10 ] ebx
mov esi [ esp + 0x30 ]
cmp esi [ esp + 0x24 ]
je r-xdata
mov eax [ esp + 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
mov [ esp + 0x30 ] esi
sub_478d5b
push ebp
mov ebp esp
sub esp 0x2a0
push ebx
push edi
mov ebx ecx
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x4 ]
mov ecx [ edx ]
call sub_4093dd
test al al
jne r-xdata
push esi
xor esi esi
inc esi
mov [ ebp - 0x1c ] esi
cmp [ edi + 0x8 ] esi
jbe r-xdata
mov eax [ ebx ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x8
jne r-xdata
mov ecx [ edx + 0x4 ]
call sub_409c9c
mov esi eax
mov [ ebp - 0x1c ] eax
cmp esi 0x1
jl r-xdata
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor edi edi
mov edi [ eax ]
jmp r-xdata
mov eax [ ebx ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
cmp esi 0x7
jg r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
cmp [ eax + 0xc ] 0x8
mov edi [ edi + 0x8 ]
jne r-xdata
cmp esi 0x7
jne r-xdata
and [ ebp - 0x2c ] 0x0
lea ecx [ ebp - 0x2c ]
and [ ebp - 0x24 ] 0x0
call sub_4791f5
test al al
je r-xdata
cmp [ eax ] 0x9
sete al
mov [ ebp + 0xb ] al
cmp esi 0x5
jne r-xdata
and [ ebp - 0x8 ] 0x0
lea ecx [ ebp - 0x40 ]
mov eax [ edi ]
push ecx
push r--data
push edi
call [ eax ]
test eax eax
js r-xdata
test al al
je r-xdata
mov eax [ ebx ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov eax [ edi ]
lea ecx [ ebp - 0x2c ]
mov esi [ eax ]
call sub_4791f5
test al al
mov eax [ ebp - 0x24 ]
jne r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov esi [ ebp - 0x40 ]
lea ecx [ ebp - 0x8 ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0xc ]
mov ecx [ esi ]
mov edi eax
push esi
call [ ecx + 0x8 ]
mov esi [ ebp - 0x1c ]
jmp r-xdata
mov eax [ edi ]
lea ecx [ ebp + 0x8 ]
push ecx
push 0x800
push 0x0
push edi
call [ eax + 0x10 ]
test eax eax
jne r-xdata
pop esi
push [ ebp - 0x2c ]
call [ FreeLibrary@IAT ]
jmp r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
push esi
push 0x6
call eax
push 0x104
lea eax [ ebp - 0x2a0 ]
push eax
push [ ebp + 0x8 ]
call [ GetModuleFileNameW@IAT ]
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2a0 ]
push eax
call sub_409bf8
jmp r-xdata
mov eax sub_43b68f
mov eax [ edi ]
lea ecx [ ebp - 0x8 ]
push ecx
push 0x800
push 0x0
push edi
call [ eax + 0x10 ]
mov edi eax
test edi edi
js r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
lea edx [ ebp - 0x4 ]
push edx
push ecx
call [ eax + 0xc ]
mov esi [ ebp - 0x4 ]
lea edi [ ebp - 0x30 ]
mov eax [ ebp + 0x8 ]
push [ ebp - 0x4 ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
push 0x28
lea eax [ ebp - 0x94 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call [ StringFromGUID2@IAT ]
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x94 ]
push eax
call sub_409bf8
mov eax [ ebp + 0x8 ]
mov eax [ ecx ]
cmp esi 0x1
jne r-xdata
cmp esi 0x2
jne r-xdata
xor edx edx
push edx
push edx
push edx
lea edx [ ebp + 0x8 ]
push edx
jmp r-xdata
lea edx [ ebp - 0x20 ]
push edx
lea edx [ ebp + 0x8 ]
push edx
push ecx
call [ eax + 0x48 ]
test eax eax
je r-xdata
xor ebx ebx
lea edx [ ebp + 0x8 ]
push ebx
push ebx
push edx
push ebx
push 0xffffffff
push ecx
call [ eax + 0x30 ]
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_409bf8
push [ ebp + 0x8 ]
call [ SysFreeString@IAT ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp esi 0x4
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
push edx
push [ ebp - 0x20 ]
push eax
call [ ecx + 0x14 ]
cmp [ ebp - 0x14 ] 0x5
je r-xdata
lea edx [ ebp - 0x4 ]
push edx
push eax
call [ ecx + 0x1c ]
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push eax
push [ ecx + 0x10 ]
movzx eax [ ecx + 0x1a ]
push eax
movzx eax [ ecx + 0x18 ]
push eax
push ecx
call [ QueryPathOfRegTypeLib@IAT ]
mov ecx [ ebp + 0x8 ]
mov esi eax
push [ ebp - 0x4 ]
push ecx
mov edx [ ecx ]
call [ edx + 0x30 ]
test esi esi
jne r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
cmp esi 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
and [ ebp - 0xc ] 0x0
xor edi edi
mov [ ebp - 0x44 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
push [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_409bf8
push [ ebp - 0x10 ]
call [ SysFreeString@IAT ]
jmp r-xdata
cmp [ ebp - 0x14 ] 0x5
jne r-xdata
cmp esi 0x6
jne r-xdata
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0xc ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
mov esi [ ebp - 0xc ]
lea edi [ ebp - 0x30 ]
mov eax [ ebp - 0x8 ]
push [ ebp - 0xc ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
push 0x28
lea eax [ ebp - 0x94 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call [ StringFromGUID2@IAT ]
test eax eax
je r-xdata
mov esi [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x14 ]
and [ ebp - 0x14 ] esi
push edx
push edi
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
cmp [ ebp - 0x14 ] 0x5
jne r-xdata
mov eax [ ebx ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov eax [ ebp - 0x1c ]
cmp eax 0x6
jne r-xdata
inc edi
cmp edi [ ebp - 0x44 ]
jb r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x18 ]
push edx
push edi
push eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x3c ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x3c ]
push edx
movzx eax [ edx + 0x30 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4c ]
or [ ebp - 0x34 ] 0xffffffff
xor edx edx
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0xc ] edx
jbe r-xdata
cmp eax 0x3
jne r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x94 ]
push eax
call sub_409bf8
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x38 ]
push edx
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ eax ]
push eax
call [ ecx + 0x20 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call [ ProgIDFromCLSID@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x10 ]
inc edx
mov [ ebp - 0x10 ] edx
cmp edx [ ebp - 0xc ]
jb r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
push edx
push [ ebp - 0x38 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x34 ]
push edx
push 0x0
push eax
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
je r-xdata
cmp [ ebp - 0x4 ] eax
je r-xdata
xor esi esi
inc esi
call [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
call [ ecx + 0x8 ]
push [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
call sub_409bf8
push [ ebp - 0x4 ]
call [ CoTaskMemFree@IAT ]
jmp r-xdata
sub_4791f5
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
retn
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_479228
push ebp
mov ebp esp
sub esp 0x98
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x24 ] r--data
xor ecx ecx
mov [ ebp - 0x8 ] esi
xor eax eax
mov [ ebp - 0x10 ] ecx
push 0x20
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x94 ]
push ecx
push eax
mov [ ebp - 0x28 ] r--data
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x20 ] 0x20404
mov [ ebp - 0x18 ] 0xc0
mov [ ebp - 0x14 ] 0x46000000
call sub_422f60
mov edx [ ebp + 0x8 ]
add esp 0xc
test edx edx
je r-xdata
xor edi edi
inc edi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov ecx ebx
call sub_4093dd
xor edi edi
inc edi
push 0xd
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0xc ] 0x8
jne r-xdata
cmp [ edx + 0xc ] 0x8
jne r-xdata
xor eax eax
mov eax [ ebx ]
jmp r-xdata
xor eax eax
mov eax [ edx ]
jmp r-xdata
push edi
push r--data
cmp [ ebx + 0xc ] 0x8
jne r-xdata
test eax eax
je r-xdata
push 0x1
push r--data
push 0x0
push 0x2
jmp r-xdata
cmp [ edx + 0xc ] 0x8
jne r-xdata
test eax eax
je r-xdata
xor eax eax
mov eax [ ebx ]
jmp r-xdata
mov ecx esi
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
mov [ ebp + 0x8 ] ecx
test ecx ecx
jne r-xdata
cmp [ ebx + 0xc ] 0x8
jne r-xdata
push edi
push r--data
jmp r-xdata
cmp [ eax ] cx
je r-xdata
mov eax [ ecx ]
lea edx [ ebp - 0xc ]
push edx
push 0x400
push edi
lea edx [ ebp - 0x24 ]
mov esi r--data
push edx
push esi
push ecx
call [ eax + 0x14 ]
test eax eax
js r-xdata
xor esi esi
mov esi [ ebx ]
jmp r-xdata
push 0x0
push edi
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0xc ]
push edx
push 0x400
push edi
mov eax [ ecx ]
lea edx [ ebp - 0x28 ]
push edx
push esi
push ecx
call [ eax + 0x14 ]
test eax eax
js r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ecx ebx
call sub_409a20
xor eax eax
mov [ ebx + 0xc ] edi
push edi
push eax
push eax
mov [ ebx ] eax
push esi
jmp r-xdata
mov esi [ esi + 0x8 ]
lea eax [ ebp - 0x3c ]
push eax
call [ VariantInit@IAT ]
lea eax [ ebp - 0x3c ]
push eax
call [ VariantClear@IAT ]
mov eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x3c ]
push ecx
push edi
push esi
call [ eax + 0xc ]
mov esi eax
test esi esi
jns r-xdata
mov [ ebp - 0xc ] 0xfffffffc
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
push 0x10
call sub_420ee5
and [ ebp - 0x44 ] 0x0
mov esi eax
pop ecx
lea eax [ ebp - 0x74 ]
mov [ ebp - 0x4c ] esi
push eax
call [ VariantInit@IAT ]
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x50 ]
push edx
lea edx [ ebp - 0x94 ]
push edx
mov ecx [ eax ]
lea edx [ ebp - 0x74 ]
push edx
lea edx [ ebp - 0x4c ]
push edx
push 0x3
push 0x800
push r--data
push [ ebp - 0xc ]
push eax
call [ ecx + 0x18 ]
push esi
mov [ ebp + 0x8 ] eax
call j_sub_422ed5
mov eax [ ebp + 0x8 ]
pop ecx
test eax eax
jns r-xdata
mov ecx ebx
mov [ ebp - 0x3c ] di
call sub_409a20
and [ ebx ] 0x0
mov [ ebx + 0xc ] edi
cmp esi edi
jne r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov esi [ ebp - 0x6c ]
test esi esi
je r-xdata
mov ecx 0x80020009
push edi
push 0x0
cmp eax ecx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_46760b
lea eax [ ebp - 0x3c ]
push eax
call [ VariantClear@IAT ]
xor eax eax
jmp r-xdata
call sub_4794db
push edi
push r--data
push 0x0
push edi
jmp r-xdata
push 0xd
pop eax
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x64 ] ax
mov eax [ esi ]
push ecx
lea ecx [ ebp - 0x20 ]
push ecx
push esi
call [ eax ]
mov ecx [ esi ]
push esi
mov [ ebp + 0x8 ] eax
call [ ecx + 0x8 ]
mov esi [ ebp - 0x5c ]
test esi esi
jne r-xdata
push 0x0
push eax
jmp r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ecx
mov eax [ esi ]
push esi
call [ eax + 0x14 ]
lea eax [ ebp - 0x64 ]
mov ecx ebx
push eax
call sub_46760b
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
mov esi [ ebp - 0x8 ]
push 0xd
pop ecx
push edi
push esi
push esi
push [ ebp + 0x8 ]
jmp r-xdata
sub_4794db
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov [ ebp - 0x8 ] ebx
cmp [ esi + 0x17c ] ebx
jne r-xdata
cmp [ rw-data ] bl
jne r-xdata
mov eax [ esi ]
push ebx
push [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
xor eax eax
cmp [ ebp + 0x14 ] al
sete al
dec eax
jmp r-xdata
xor eax eax
mov ecx [ esi + 0x17c ]
mov eax [ esi + 0x178 ]
mov eax [ eax + ecx * 4 - 0x4 ]
mov edi [ eax ]
mov ecx edi
call sub_45c8e2
mov ecx [ edi + 0x1c ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x40 ] ebx
xor ebx ebx
mov [ ebp - 0x48 ] eax
inc ebx
mov ecx [ ecx ]
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x3c ] ebx
call sub_456ebc
lea ecx [ ebp - 0x48 ]
call sub_409a20
cmp [ ebp + 0x10 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push 0x2
pop ebx
push [ ebp + 0x8 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_46a0f4
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x38 ]
call sub_407f41
jmp r-xdata
test bl 0x1
je r-xdata
lea ecx [ ebp - 0x48 ]
and ebx 0xfffffffd
call sub_405a64
push eax
lea ecx [ ebp - 0x58 ]
call sub_4093ea
mov ecx [ edi + 0x1c ]
lea eax [ ebp - 0x58 ]
push eax
mov ecx [ ecx + 0x4 ]
call sub_456ebc
lea ecx [ ebp - 0x58 ]
call sub_409a20
test bl 0x2
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x38 ]
and ebx 0xfffffffe
call sub_405a64
call [ GetLastError@IAT ]
mov ecx [ edi + 0x1c ]
and [ ebp - 0x40 ] 0x0
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx [ ecx + 0x18 ]
mov [ ebp - 0x3c ] 0x1
call sub_456ebc
lea ecx [ ebp - 0x48 ]
call sub_409a20
push [ esi + 0xf4 ]
call sub_45fd96
mov ecx [ edi + 0x1c ]
and [ ebp - 0x40 ] 0x0
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx [ ecx + 0x1c ]
mov [ ebp - 0x3c ] 0x1
call sub_456ebc
lea ecx [ ebp - 0x48 ]
call sub_409a20
cmp [ edi + 0x14 ] 0xe
lea ecx [ edi + 0x8 ]
jne r-xdata
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
or ebx 0x8
call sub_409997
mov ecx [ edi + 0x10 ]
mov eax [ ecx ]
mov [ ebp - 0x18 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
inc [ eax ]
lea eax [ ebp - 0x58 ]
or ebx 0x4
push eax
call sub_4679c3
mov ecx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
push ecx
lea ecx [ ebp - 0x58 ]
call sub_409f3a
mov ecx [ edi + 0x1c ]
lea eax [ ebp - 0x58 ]
push eax
mov ecx [ ecx + 0x8 ]
call sub_456ebc
lea ecx [ ebp - 0x58 ]
call sub_409a20
mov eax [ ebp + 0xc ]
test bl 0x4
je r-xdata
lea ecx [ ebp - 0x18 ]
and ebx 0xfffffff7
call sub_405a64
mov eax [ ecx ]
mov [ ebp - 0x38 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x34 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x2c ] eax
inc [ eax ]
test bl 0x8
je r-xdata
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
push ecx
lea ecx [ ebp - 0x58 ]
call sub_409f3a
mov ecx [ edi + 0x1c ]
lea eax [ ebp - 0x58 ]
push eax
mov ecx [ ecx + 0xc ]
call sub_456ebc
lea ecx [ ebp - 0x58 ]
call sub_409a20
mov eax [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x18 ] r--data
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x14 ] ebx
push eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] 0x1
call [ VariantInit@IAT ]
push 0x9
pop eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x28 ] ax
mov [ ebp - 0x20 ] edi
mov eax [ edi ]
push edi
call [ eax + 0x4 ]
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x58 ] ebx
push eax
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x4c ] 0x1
call sub_456363
lea ecx [ ebp - 0x58 ]
call sub_409a20
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x10 ]
mov ecx [ ecx + eax * 4 - 0x4 ]
call sub_46760b
push ecx
lea eax [ ebp + 0x17 ]
mov [ rw-data ] 0x1
push eax
push ecx
push ebx
lea eax [ ebp - 0x48 ]
mov ecx esi
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_4739d5
test al al
jne r-xdata
lea ecx [ ebp - 0x58 ]
call sub_405a64
mov eax [ eax + 0x10 ]
mov ecx [ edi + 0x1c ]
and [ ebp - 0x40 ] 0x0
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx [ ecx + 0x14 ]
mov [ ebp - 0x3c ] 0x1
call sub_456ebc
lea ecx [ ebp - 0x48 ]
call sub_409a20
mov eax [ ebp + 0xc ]
movzx ecx [ eax ]
test cx cx
je r-xdata
push ecx
lea ecx [ ebp - 0x58 ]
call sub_409f3a
mov ecx [ edi + 0x1c ]
lea eax [ ebp - 0x58 ]
push eax
mov ecx [ ecx + 0x10 ]
call sub_456ebc
lea ecx [ ebp - 0x58 ]
call sub_409a20
mov eax [ ebp + 0xc ]
mov eax [ esi ]
push ebx
push [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
lea eax [ ebp - 0x28 ]
mov [ rw-data ] bl
push eax
call [ VariantClear@IAT ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
call sub_409a20
lea ecx [ ebp - 0x18 ]
call sub_4563f2
lea ecx [ ebp - 0x38 ]
call sub_405a64
push ecx
lea eax [ ebp + 0x17 ]
push eax
push ecx
push 0x1
lea eax [ ebp - 0x48 ]
mov ecx esi
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_4739d5
mov eax [ eax + 0x1c ]
mov eax ecx
jmp r-xdata
mov ecx [ edi + 0x1c ]
and [ ebp - 0x40 ] 0x0
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx [ ecx + 0x20 ]
mov [ ebp - 0x3c ] 0x1
call sub_456ebc
lea ecx [ ebp - 0x48 ]
call sub_409a20
sub_479872
push ebp
mov ebp esp
sub esp 0xc0
push ebx
push esi
mov ebx ecx
lea ecx [ ebp - 0x24 ]
push edi
mov [ ebp - 0x8 ] ebx
call sub_4077c7
lea ecx [ ebp - 0xac ]
call sub_4077c7
lea ecx [ ebp - 0x9c ]
call sub_4077c7
push 0x6
xor esi esi
lea edi [ ebp - 0x3c ]
pop ecx
xor eax eax
mov [ ebp - 0x40 ] esi
[ edi ]
mov edi [ ebp + 0x18 ]
mov ecx edi
call sub_409a20
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0xbc ]
push esi
mov [ edi + 0xc ] 0x1
mov [ edi ] esi
call sub_457432
pop ecx
test eax eax
jns r-xdata
mov ebx [ ebp + 0x14 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push 0x9
pop eax
push ebx
push [ ebp + 0x10 ]
mov [ ebp - 0x7c ] ax
lea eax [ ebp - 0xbc ]
push eax
call sub_457b04
mov edi eax
add esp 0xc
test edi edi
js r-xdata
push esi
push esi
push esi
push eax
mov ecx ebx
jmp r-xdata
push esi
push esi
push esi
push edi
push esi
push esi
push esi
push 0x3
push 0x2
push esi
push esi
push 0xffffffff
push esi
call [ CoInitializeSecurity@IAT ]
push 0x10
lea eax [ ebp - 0x6c ]
push esi
push eax
call sub_422f60
mov ecx [ ebp + 0xc ]
lea edx [ ebp - 0x68 ]
add esp 0xc
call sub_457eb4
cmp [ ebp + 0x10 ] esi
je r-xdata
call sub_4794db
mov esi eax
push 0x9
mov [ ebp - 0x64 ] esi
pop ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x44 ] 0x1
call sub_407d2c
push r--data
lea ecx [ ebp - 0x24 ]
call sub_4654f1
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov edi [ ebp - 0xc ]
test edi edi
js r-xdata
mov [ ebp + 0x10 ] edi
cmp edi [ ebp - 0x20 ]
jbe r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x50 ] esi
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp - 0x64 ] esi
je r-xdata
lea ecx [ ebp - 0x8c ]
call sub_4077c7
push [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
push esi
push eax
lea ecx [ ebp - 0x8c ]
call sub_4079ab
lea eax [ ebp - 0x8c ]
push eax
lea ecx [ ebp - 0xac ]
call sub_4081a7
lea ecx [ ebp - 0x8c ]
call sub_405a64
mov eax [ ebp - 0xac ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0xa8 ]
mov [ ebp - 0x50 ] eax
lea eax [ edi + 0x1 ]
push 0xffffffff
push eax
lea eax [ ebp - 0x8c ]
push eax
call sub_4561e1
push eax
lea ecx [ ebp - 0x9c ]
call sub_4081a7
lea ecx [ ebp - 0x8c ]
call sub_405a64
mov eax [ ebp - 0x9c ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x98 ]
mov eax [ ebp - 0x20 ]
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x58 ] eax
test ebx ebx
je r-xdata
mov [ ebp - 0x7c ] bx
mov [ ebp - 0x74 ] eax
test eax eax
jne r-xdata
test eax eax
je r-xdata
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] esi
push ebx
mov [ ebp - 0x4c ] ebx
call sub_422d7c
pop ecx
mov [ ebp - 0x48 ] eax
jmp r-xdata
test edi edi
js r-xdata
push 0x1
push r--data
push esi
push 0x1
jmp r-xdata
push 0x800
lea ecx [ ebp - 0x5c ]
push ecx
push [ ebp - 0x30 ]
push [ ebp - 0x34 ]
push [ ebp - 0x38 ]
push [ ebp - 0x3c ]
push [ ebp - 0x40 ]
push eax
call [ CoSetProxyBlanket@IAT ]
mov edi eax
mov eax [ ebp - 0x10 ]
push 0xc
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x74 ] esi
push esi
push eax
call sub_422f60
mov eax [ ebp - 0x74 ]
add esp 0xc
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] r--data
mov [ ebp - 0xc ] esi
push eax
push 0x1
lea eax [ ebp - 0x6c ]
push eax
push 0x15
push esi
lea eax [ ebp - 0xbc ]
push eax
call [ CoCreateInstanceEx@IAT ]
push [ ebp - 0x68 ]
mov edi eax
call [ CoTaskMemFree@IAT ]
test edi edi
js r-xdata
lea eax [ ebp - 0x5c ]
mov [ ebp - 0x34 ] 0x2
push 0x9
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x40 ]
pop ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x30 ] 0x3
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x64 ] eax
jmp r-xdata
mov ecx [ ebp + 0x18 ]
lea eax [ ebp - 0x7c ]
push eax
call sub_46760b
mov eax [ ebp - 0x74 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
lea ecx [ ebp - 0x9c ]
call sub_405a64
lea ecx [ ebp - 0xac ]
call sub_405a64
lea ecx [ ebp - 0x24 ]
call sub_405a64
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_479b4c
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx ecx
push edi
test esi esi
je r-xdata
push 0x1
push r--data
push 0x0
push 0x1
mov edi [ ebp + 0xc ]
cmp [ edi ] 0x0
je r-xdata
mov ecx esi
call sub_456241
test al al
jne r-xdata
mov ecx esi
call sub_4093dd
test al al
je r-xdata
push 0x1
push r--data
push 0x0
push 0x2
mov ecx ebx
jmp r-xdata
cmp [ esi + 0xc ] 0xc
jne r-xdata
push [ ebp + 0x18 ]
mov ecx ebx
push [ ebp + 0x14 ]
push esi
push edi
push [ ebp + 0x8 ]
call sub_479c38
jmp r-xdata
call sub_4794db
cmp [ esi + 0xc ] 0xf
jne r-xdata
mov esi [ esi ]
sub esp 0x10
mov ecx esp
push [ ebp + 0x14 ]
call sub_4093ea
push [ edi ]
mov ecx esi
push [ ebp + 0x18 ]
push [ ebp + 0x8 ]
call sub_4667b0
push 0x0
push eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0xc ]
mov esi [ esi ]
lea ecx [ ebp - 0x14 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
mov edi [ esi ]
call sub_4093ea
push eax
mov eax [ ebp + 0x8 ]
mov ecx esi
movzx eax ax
push eax
call [ edi ]
lea ecx [ ebp - 0x14 ]
mov esi eax
call sub_409a20
push 0x0
push esi
jmp r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
xor eax eax
jmp r-xdata
sub_479c38
push ebp
mov ebp esp
sub esp 0xf8
mov eax [ ebp + 0x18 ]
push ebx
xor ebx ebx
mov [ ebp - 0x30 ] 0xfffffffd
push esi
mov esi [ ebp + 0x10 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x5 ] bl
push edi
mov edi ecx
mov [ ebp - 0x18 ] edi
test esi esi
je r-xdata
xor eax eax
inc eax
push eax
push r--data
mov eax [ ebp + 0xc ]
cmp [ eax ] ebx
je r-xdata
mov ecx esi
call sub_456241
test al al
jne r-xdata
push 0x8
pop eax
cmp [ esi + 0xc ] eax
jne r-xdata
push 0x1
push r--data
push ebx
push 0x2
mov eax ebx
mov eax [ esi ]
jmp r-xdata
call sub_4794db
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx eax
mov [ ebp - 0xf4 ] ebx
mov edx [ esi ]
call sub_4577fe
pop ecx
test eax eax
jns r-xdata
push 0x1
push r--data
push ebx
push 0x4
jmp r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] ax
jne r-xdata
push 0x1
push ebx
mov ecx edi
jmp r-xdata
mov ecx edi
jmp r-xdata
mov esi [ ebp - 0xc ]
xor ecx ecx
inc esi
push 0x10
pop edx
mov eax esi
mov [ ebp + 0x14 ] esi
mul edx
push 0x4
pop edx
seto cl
neg ecx
or ecx eax
xor eax eax
add ecx edx
setb al
neg eax
or eax ecx
push eax
call sub_420ee5
pop ecx
test eax eax
je r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp + 0x8 ] 0x3
test edx edx
je r-xdata
push ebx
push eax
mov edx ebx
mov [ ebp + 0x10 ] ebx
lea edx [ eax + 0x4 ]
mov [ eax ] esi
mov eax [ ebp + 0x14 ]
mov esi edx
dec eax
mov [ ebp + 0x10 ] edx
js r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push ecx
push [ esi ]
mov ecx [ ebp - 0x14 ]
call sub_4574a5
add esp 0xc
test eax eax
js r-xdata
cmp [ ebp - 0xf4 ] 0x0
je r-xdata
mov edi eax
mov ebx edi
shl ebx 0x4
add ebx 0xfffffff0
add ebx edx
mov eax [ ebp - 0xc ]
mov esi ebx
test eax eax
je r-xdata
mov edi eax
test [ ebp - 0xf0 ] 0x1
je r-xdata
test [ ebp + 0x8 ] 0xc
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
je r-xdata
mov ecx ebx
mov [ ebp + 0x14 ] ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx ebx
mov eax [ eax + 0x4 ]
push [ eax + esi * 4 ]
call sub_456ebc
inc esi
sub ebx 0x10
cmp esi edi
jb r-xdata
mov edi [ ebp - 0x18 ]
xor ebx ebx
mov eax [ ebp - 0xc ]
mov edx [ ebp + 0x10 ]
mov ecx esi
call sub_456e76
add esi 0x10
dec edi
jns r-xdata
mov edi [ ebp - 0x18 ]
mov edx [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0xf0 ] 0x1
jne r-xdata
cmp [ ebp - 0xe8 ] bx
jne r-xdata
lea eax [ ebp - 0x44 ]
push eax
call [ VariantInit@IAT ]
push 0x20
lea eax [ ebp - 0x64 ]
push ebx
push eax
call sub_422f60
mov ecx [ ebp - 0x14 ]
lea edx [ ebp - 0x1c ]
add esp 0xc
mov esi 0x800
cmp [ ebp - 0x5 ] 0x0
mov eax [ ecx ]
push edx
lea edx [ ebp - 0x64 ]
push edx
je r-xdata
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x28 ] eax
mov edi [ ebp + 0x18 ]
lea esi [ edx - 0x10 ]
shl eax 0x4
push 0x2
add esi eax
mov eax [ ebp - 0xc ]
pop edx
mov [ ebp + 0x8 ] 0x1
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x44 ]
push edx
push ebx
jmp r-xdata
inc ecx
sub esi 0x10
mov [ ebp + 0x14 ] ecx
cmp ecx eax
jb r-xdata
push esi
call [ VariantClear@IAT ]
mov ecx [ ebp + 0x14 ]
mov edx 0x4008
movzx eax [ ebp + ecx * 4 - 0xe4 ]
mov [ esi ] ax
cmp ax dx
jne r-xdata
test eax eax
jns r-xdata
cmp [ ebp - 0x20 ] 0x1
jne r-xdata
lea edx [ ebp - 0x2c ]
push edx
push [ ebp + 0x8 ]
push esi
push r--data
push [ ebp - 0x10 ]
push ecx
call [ eax + 0x18 ]
cmp eax 0x80020003
jne r-xdata
cmp [ ebp + ecx * 4 - 0xe2 ] dx
jne r-xdata
mov edi [ ebp - 0x18 ]
mov eax [ edi + 0x4 ]
push 0x2
pop edx
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0xc ] 0x6
mov eax [ ebp - 0xc ]
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x34 ]
mov [ esi + 0x8 ] eax
mov eax [ edi ]
push ebx
push ebx
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
call sub_46760b
mov eax [ ebp - 0xc ]
mov esi ebx
test eax eax
je r-xdata
mov ecx 0x80020009
cmp eax ecx
jne r-xdata
push 0x1
push ebx
push ebx
push eax
mov edx [ ebp - 0x14 ]
lea edi [ ebp - 0x1c ]
push 0x4
pop ecx
push edi
xor eax eax
lea edi [ ebp - 0x64 ]
cmp [ ebp + 0x8 ] cx
mov ecx [ edx ]
push edi
push ebx
sete al
lea edi [ ebp - 0x2c ]
push edi
lea eax [ eax * 4 + 0x4 ]
push eax
push esi
push r--data
push [ ebp - 0x10 ]
push edx
call [ ecx + 0x18 ]
mov edi [ ebp - 0x18 ]
mov [ esi + 0x8 ] esi
lea eax [ ebp - 0x44 ]
push eax
call [ VariantClear@IAT ]
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
shl eax 0x4
lea edi [ ecx - 0x10 ]
add edi eax
push 0x1
push ebx
lea eax [ ebp - 0x64 ]
push eax
push ecx
jmp r-xdata
mov eax ebx
jmp r-xdata
push ecx
mov ecx eax
call sub_45ddb1
inc esi
sub edi 0x10
cmp esi [ ebp - 0xc ]
jb r-xdata
cmp [ ebp - 0xf4 ] 0x0
je r-xdata
mov ecx edi
call sub_4794db
mov ebx eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0x18 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
cmp [ eax + 0xc ] 0x6
jne r-xdata
cmp [ eax + 0xc ] 0x6
jne r-xdata
movzx ecx [ ebp + esi * 4 - 0xe4 ]
mov edx 0x4024
cmp cx dx
je r-xdata
mov ecx ebx
mov ecx [ eax ]
jmp r-xdata
test [ ebp + esi * 4 - 0xe2 ] 0x2
jne r-xdata
push edi
call sub_46760b
test ecx 0x4000
jne r-xdata
push 0x8
pop ecx
cmp [ edi ] cx
jne r-xdata
sub_479ff2
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi ecx
cmp [ esi ] 0x0
je r-xdata
or eax 0xffffffff
sub esp 0x10
mov ecx esp
push r--data
call sub_407f41
push 0x0
push 0x2a
lea ecx [ ebp - 0x1c ]
call sub_4669c4
mov ecx [ esi ]
lea eax [ ebp - 0x1c ]
push eax
call sub_4675d6
cmp [ ebp + 0x8 ] 0x0
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
je r-xdata
push 0x3
push 0x1
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
call sub_479b4c
lea ecx [ ebp - 0x14 ]
mov esi eax
call sub_405a64
mov eax esi
jmp r-xdata
sub_47a060
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x1c ]
and [ ebp - 0x14 ] 0x0
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x8 ] eax
push esi
mov esi ecx
test edx edx
je r-xdata
push edx
push [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push eax
push 0x4
mov eax [ edx + 0x8 ]
test eax eax
je r-xdata
mov ecx [ edx + 0x4 ]
mov ecx [ ecx + eax * 4 - 0x4 ]
call sub_4093dd
test al al
je r-xdata
push edx
push [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push eax
push 0x8
jmp r-xdata
mov ecx esi
call sub_479b4c
lea ecx [ ebp - 0x1c ]
mov esi eax
call sub_409a20
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_47a0d2
push ebp
mov ebp esp
sub esp 0x38
mov edx [ ebp + 0x8 ]
xor eax eax
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx ecx
mov edx [ edx + 0x4 ]
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x2c ] ecx
mov ecx [ esi ]
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0xa ] ax
mov eax [ edx + ecx * 4 ]
push edi
or edi 0xffffffff
inc ecx
mov [ esi ] ecx
movsx eax [ eax + 0xa ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + ecx * 4 ]
push 0x47
pop esi
mov [ ebp - 0xc ] di
cmp [ eax + 0x8 ] si
mov esi [ ebp + 0xc ]
je r-xdata
lea eax [ ecx + 0x1 ]
xor edi edi
mov [ esi ] eax
mov eax [ edx + ecx * 4 - 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x6f
jmp r-xdata
inc edi
dec eax
je r-xdata
mov ecx ebx
call sub_469ed4
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + ecx * 4 ]
movsx eax [ ecx + 0x8 ]
sub eax 0x47
je r-xdata
test edi edi
je r-xdata
sub eax 0x37
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_409a20
lea ecx [ ebp - 0x14 ]
call sub_405efb
lea ecx [ ebp - 0x24 ]
call sub_407776
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x8 ]
lea ecx [ ebp - 0x24 ]
inc [ esi ]
push 0x7f
pop edi
mov [ ebp - 0xa ] ax
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0xc ] di
call sub_40766f
mov eax [ ebp - 0x20 ]
xor esi esi
mov [ ebp + 0xc ] esi
mov eax [ eax ]
cmp [ eax + 0x8 ] di
je r-xdata
dec edi
jmp r-xdata
push ecx
lea ecx [ ebp - 0x24 ]
call sub_40766f
inc [ esi ]
jmp r-xdata
mov ecx [ esi ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 - 0x4 ]
mov ecx ebx
movsx eax [ eax + 0xa ]
push eax
push 0x6f
call sub_469ed4
or edi 0xffffffff
jmp r-xdata
mov edi esi
or edi 0xffffffff
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x34 ]
push eax
call sub_456363
mov edx [ ebp - 0x20 ]
mov ecx [ ebp + 0xc ]
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] 0x40
jne r-xdata
mov eax [ edx + ecx * 4 ]
push 0x7f
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ edx + ecx * 4 + 0x4 ]
push 0x7f
pop edx
cmp [ eax + 0x8 ] dx
mov edx [ ebp - 0x20 ]
je r-xdata
push edi
push 0x1
push esi
push esi
lea eax [ ebp - 0x34 ]
mov ecx ebx
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call sub_40f803
test eax eax
js r-xdata
mov eax [ edx + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x6e
inc ecx
mov [ ebp + 0xc ] ecx
sub_47a256
push esi
mov esi ecx
push edi
cmp [ esi + 0x9 ] 0x0
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ ecx + 0x10 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ ecx + 0x10 ]
test ecx ecx
je r-xdata
mov [ esi + 0x9 ] 0x1
jmp r-xdata
mov [ esi + 0x4 ] edi
mov [ esi + 0x9 ] 0x0
push ecx
call sub_41fb26
mov [ esi + 0x4 ] edi
mov [ esi + 0x9 ] 0x0
push ecx
call sub_41fb26
dec [ esi ]
pop edi
pop esi
retn
sub_47a29f
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push 0x4
pop ebx
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
jne r-xdata
push ebx
call sub_420f36
mov edx eax
pop ecx
test edx edx
je r-xdata
lea ecx [ eax + eax ]
push 0x8
pop eax
cmp ecx eax
jb r-xdata
xor edx edx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ edx ] ecx
jmp r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
mul ebx
push edi
seto cl
neg ecx
or ecx eax
push ecx
call sub_420ee5
cmp [ esi + 0x4 ] 0x0
mov edi eax
pop ecx
je r-xdata
mov eax ecx
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edx
inc [ esi + 0x8 ]
pop esi
pop ebx
pop ebp
retn 0x4
mov [ esi + 0x4 ] edi
pop edi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_420fc0
push [ esi + 0x4 ]
call j_sub_422ed5
add esp 0x10
sub_47a328
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
and [ esi + 0xc ] 0x0
and [ esi + 0x4 ] 0x0
push 0x8
pop edx
cmp eax edx
jb r-xdata
mov [ esi + 0xc ] edx
xor ecx ecx
mov eax edx
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
xor edi edi
mov [ esi + 0x4 ] eax
pop ecx
cmp [ esi + 0x8 ] edi
jbe r-xdata
mov edx eax
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push 0xc
call sub_420f36
pop ecx
test eax eax
je r-xdata
xor ecx ecx
mov ecx [ ebx + 0x4 ]
push [ ecx + edi * 4 ]
mov ecx eax
call sub_4568a9
mov ecx eax
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + edi * 4 ] ecx
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_47a3ae
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov eax [ esi ]
mov [ edi ] eax
lea ecx [ edi + 0x10 ]
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax [ esi + 0xc ]
mov [ edi + 0xc ] eax
lea eax [ esi + 0x10 ]
push eax
call sub_409e9c
lea eax [ esi + 0x20 ]
push eax
lea ecx [ edi + 0x20 ]
call sub_409e9c
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_47a3ee
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x20 ] r--data
inc ecx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
cmp [ eax + 0x8 ] ecx
jne r-xdata
or edi 0xffffffff
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x6
jne r-xdata
cmp [ eax + 0xc ] 0x5
jne r-xdata
mov eax [ eax ]
mov ebx [ eax ]
mov eax [ ebx ]
cmp [ eax + 0x10c ] ecx
jne r-xdata
push edi
push ecx
push ecx
push ebx
call sub_408ea0
add esp 0x10
mov esi eax
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
inc [ eax ]
call sub_407faf
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call [ CharUpperBuffW@IAT ]
mov edx r--data
lea ecx [ ebp - 0x10 ]
call sub_420c63
test al al
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405a64
xor esi esi
inc esi
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
push eax
call sub_45cc83
lea ecx [ ebp - 0x10 ]
call sub_405a64
jmp r-xdata
push esi
push 0x1
push 0x2
push ebx
call sub_408ea0
add esp 0x10
lea ecx [ ebp - 0x20 ]
push eax
call sub_456363
inc esi
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_4563f2
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x1
mov ecx ebx
call sub_408e6b
cmp esi eax
jge r-xdata
sub_47a4fb
push ebp
mov ebp esp
sub esp 0x120
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov eax [ ebx + 0x4 ]
mov edi ecx
mov [ ebp - 0x14 ] edi
inc [ esi ]
mov edx [ esi ]
mov ecx [ eax + edx * 4 ]
xor eax eax
mov [ ebp + 0x8 ] eax
cmp [ ecx + 0x8 ] ax
jne r-xdata
mov [ ebp + 0xc ] eax
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
test al 0x1
jne r-xdata
cmp [ ecx ] 0x2c
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ esi ]
push 0x7f
pop edx
push 0x33
mov eax [ ecx + eax * 4 ]
mov [ ebp - 0x1c ] edx
pop edx
push 0x7f
cmp [ eax + 0x8 ] dx
pop edx
jne r-xdata
or eax 0x1
mov ecx rw-data
push r--data
mov [ rw-data ] eax
call sub_409f3a
push sub_43b74e
call sub_422ec0
pop ecx
push [ ebp + 0x10 ]
mov ecx edi
push esi
push ebx
call sub_47ab0f
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push edx
mov eax [ esi ]
push [ ebp + 0x10 ]
mov eax [ ecx + eax * 4 ]
lea ecx [ ebp - 0x10 ]
push ecx
mov eax [ eax ]
push eax
mov [ ebp - 0xc ] eax
call sub_40859a
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
test [ ebp - 0x10 ] 0x100
mov ecx [ esi ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx edi
movsx eax [ eax + 0xa ]
push eax
je r-xdata
push [ ebp + 0x10 ]
push 0x100
push rw-data
push [ ebp - 0xc ]
call sub_408620
inc [ esi ]
mov edx [ esi ]
mov ecx [ ebx + 0x4 ]
push 0x4e
mov [ ebp - 0x8 ] eax
mov ecx [ ecx + edx * 4 ]
pop edx
cmp [ ecx + 0x8 ] dx
jne r-xdata
push 0xa4
jmp r-xdata
push 0xae
jmp r-xdata
mov edx [ esi ]
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x41
jne r-xdata
lea ecx [ ebp + 0xc ]
push ecx
lea ecx [ ebp - 0x11c ]
push ecx
push eax
push esi
push ebx
mov ecx edi
call sub_40d0dc
test eax eax
js r-xdata
call sub_469ed4
mov eax [ ebx + 0x4 ]
mov ecx edx
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x80
jmp r-xdata
inc edx
push 0x4e
mov [ esi ] edx
mov eax [ ecx + edx * 4 ]
movsx ecx [ eax + 0xa ]
mov [ ebp - 0x18 ] ecx
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
mov ecx edi
push [ ebp - 0xc ]
mov ecx edi
push edx
push ebx
call sub_40d060
test eax eax
js r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0xc ] 0x5
je r-xdata
push 0xffffffff
push [ ebp - 0x8 ]
mov ecx edi
push esi
push ebx
call sub_40a000
test eax eax
js r-xdata
push [ ebp - 0xc ]
mov ecx edi
push [ esi ]
push ebx
call sub_40d060
test eax eax
js r-xdata
lea eax [ edx - 0x1 ]
mov [ esi ] eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x11c ]
push eax
push ecx
push esi
push ebx
mov ecx edi
call sub_47a866
test eax eax
js r-xdata
push [ ebp - 0x18 ]
push 0x6e
jmp r-xdata
mov edx [ esi ]
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + edx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax [ ebp - 0x1c ]
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jle r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
cmp ax 0x40
jne r-xdata
push 0x1
lea eax [ ebp - 0x11c ]
mov ecx edi
push eax
push [ ebp - 0x8 ]
push esi
push ebx
call sub_40cedd
test al al
je r-xdata
mov ecx eax
lea edi [ ebp - 0x11c ]
xor eax eax
[ edi ]
mov edi [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov ecx edx
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x7f
pop eax
push eax
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ esi ] eax
mov eax [ ecx + eax * 4 ]
push 0x33
pop edx
cmp [ eax + 0x8 ] dx
je r-xdata
jmp r-xdata
push 0x7f
pop edx
sub_47a75d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x38
mov eax [ eax + 0x4 ]
push ebx
mov ebx ecx
mov ecx [ ebp + 0xc ]
push esi
push edi
mov edx [ ecx ]
inc edx
mov [ ecx ] edx
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
mov edi [ ebp + 0x10 ]
lea esi [ ebx + 0x15c ]
movsx eax [ eax + 0xa ]
push eax
push 0x72
cmp [ esi ] ecx
jne r-xdata
mov ecx esi
call sub_41fd58
push eax
lea ecx [ ebp - 0x34 ]
call sub_41fda4
cmp [ ebp - 0x34 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
xor esi esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ ecx ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0xb5
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_409a20
lea ecx [ ebp - 0x24 ]
call sub_409a20
xor ecx ecx
cmp [ ebp - 0x34 ] 0x5
je r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x8 ] si
jne r-xdata
mov ecx ebx
call sub_469ed4
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov ecx esi
inc eax
mov [ edi ] eax
call sub_41fd0f
lea ecx [ ebp - 0x14 ]
call sub_409a20
lea ecx [ ebp - 0x24 ]
call sub_409a20
jmp r-xdata
mov eax [ edi ]
push eax
lea edx [ eax + 0x1 ]
mov [ edi ] edx
call sub_4071c8
test eax eax
je r-xdata
mov eax [ eax ]
sub eax 0x14
je r-xdata
xor ecx ecx
xor eax eax
cmp [ esi ] ecx
sete al
test al al
jne r-xdata
inc ecx
jmp r-xdata
dec eax
je r-xdata
test ecx ecx
jne r-xdata
dec eax
je r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
dec eax
je r-xdata
lea eax [ edx - 0x1 ]
mov [ edi ] eax
dec ecx
jmp r-xdata
dec eax
jne r-xdata
sub_47a866
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x18 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
push ebx
mov edx [ edi ]
push edx
mov eax [ ecx + 0x4 ]
push ecx
push 0x0
mov eax [ eax + edx * 4 ]
movsx eax [ eax + 0xa ]
mov [ ebp - 0x4 ] eax
call sub_47a91f
mov ecx [ ebp + 0x14 ]
xor esi esi
inc esi
mov [ ecx ] eax
cmp [ ebx ] esi
jle r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
call sub_40942e
cmp [ esi + 0xc ] 0x5
jne r-xdata
push 0x0
push [ edi ]
push [ ebp + 0x8 ]
push esi
call sub_47a91f
mov ecx [ ebp + 0x14 ]
mov [ ecx + esi * 4 ] eax
inc esi
cmp esi [ ebx ]
jl r-xdata
xor ecx ecx
mov ecx [ esi ]
jmp r-xdata
push 0x0
push ecx
call sub_4091b0
pop ecx
pop ecx
test al al
jne r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ecx ]
xor esi esi
and [ eax + 0x210 ] 0x0
cmp [ ebx ] esi
jle r-xdata
inc [ edi ]
xor eax eax
push [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
push 0x82
call sub_469ed4
or eax 0xffffffff
jmp r-xdata
push [ edi + esi * 4 ]
call sub_40928c
inc esi
cmp esi [ ebx ]
jl r-xdata
mov edi [ ebp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_47a91f
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0xc ]
xor edx edx
push esi
mov esi [ ebp + 0x10 ]
xor ecx ecx
push edi
mov ebx [ ebx + 0x4 ]
push 0x4e
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] 0x4f
lea edi [ ebx + esi * 4 ]
mov [ ebp - 0x10 ] 0x47
mov eax [ edi - 0x4 ]
pop esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x14 ] 0x48
cmp [ eax + 0x8 ] si
mov esi [ ebp + 0x10 ]
sete dl
mov [ ebp - 0x18 ] 0x7f
cmp ax [ ebp - 0xc ]
jne r-xdata
test ecx ecx
jne r-xdata
cmp ax 0x41
jne r-xdata
test ecx ecx
jne r-xdata
test edx edx
je r-xdata
inc edx
jmp r-xdata
cmp ax [ ebp - 0x10 ]
jne r-xdata
test edx edx
je r-xdata
dec edx
jmp r-xdata
or eax 0xffffffff
inc esi
add edi 0x4
jmp r-xdata
cmp ax [ ebp - 0x14 ]
jne r-xdata
inc ecx
jmp r-xdata
mov eax [ ebx + esi * 4 + 0x4 ]
push 0x4e
pop edx
cmp [ eax + 0x8 ] dx
je r-xdata
mov eax [ edi ]
push 0x4e
pop ebx
movzx eax [ eax + 0x8 ]
cmp ax bx
mov ebx [ ebp - 0x8 ]
jne r-xdata
cmp ax [ ebp - 0x18 ]
je r-xdata
dec ecx
jmp r-xdata
mov edx [ ebp + 0x14 ]
xor edi edi
xor eax eax
xor ebx ebx
add esi 0x2
inc edi
inc eax
mov [ ebp + 0x10 ] esi
inc ebx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ebx
test edx edx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
lea edx [ eax + esi * 4 ]
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] ebx
mov ebx esi
shl ebx 0x2
push 0x4e
mov eax [ eax + 0x4 ]
pop edi
push 0x1
mov eax [ ebx + eax ]
cmp [ eax + 0x8 ] di
pop edi
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp ax [ ebp - 0xc ]
jne r-xdata
test ecx ecx
jne r-xdata
mov ebx [ ebp - 0x8 ]
mov edi [ ebp + 0xc ]
push 0x4e
pop esi
cmp ax [ ebp - 0x10 ]
jne r-xdata
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
inc edi
jmp r-xdata
inc [ edx ]
lea ebx [ ebx + 0x4 ]
mov eax [ edi + 0x4 ]
mov eax [ ebx + eax ]
cmp [ eax + 0x8 ] si
je r-xdata
mov esi [ ebp + 0x10 ]
mov edi [ ebp - 0x1c ]
cmp ax [ ebp - 0x14 ]
jne r-xdata
inc ecx
jmp r-xdata
dec edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp edi eax
jge r-xdata
cmp ax 0x40
jne r-xdata
dec ecx
jmp r-xdata
add edx 0x4
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jle r-xdata
cmp ax [ ebp - 0x18 ]
je r-xdata
lea eax [ esi + 0x1 ]
cmp edi eax
jne r-xdata
mov eax [ edx ]
movzx eax [ eax + 0x8 ]
cmp ax [ ebp - 0x20 ]
jne r-xdata
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
test ecx ecx
jne r-xdata
inc ebx
jmp r-xdata
sub_47aab6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ eax + 0x4 ]
push 0x7f
pop ebx
mov eax [ edi ]
mov eax [ esi + eax * 4 ]
jmp r-xdata
cmp [ eax + 0x8 ] bx
jne r-xdata
mov edx [ edi ]
mov eax [ esi + edx * 4 ]
movsx eax [ eax + 0x8 ]
sub eax 0x47
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc ecx
dec eax
je r-xdata
mov eax [ esi + edx * 4 ]
mov eax [ esi + edx * 4 ]
cmp [ eax + 0x8 ] 0x40
je r-xdata
dec ecx
jmp r-xdata
sub eax 0x6
je r-xdata
inc edx
mov [ edi ] edx
test ecx ecx
jne r-xdata
dec eax
jne r-xdata
sub_47ab0f
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ecx
xor esi esi
mov [ ebp - 0x2c ] ebx
inc esi
mov [ ebp - 0x24 ] ebx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] esi
call sub_409a20
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x2c ] esi
call sub_409a20
mov edi [ ebp + 0xc ]
mov [ ebp - 0x1c ] ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esi
xor esi esi
inc [ edi ]
mov edx [ edi ]
mov ecx [ ebx + 0x4 ]
mov [ ebp - 0x8 ] 0xb
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] si
mov esi [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
push 0x33
pop ecx
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] cx
jne r-xdata
cmp [ eax ] 0x10
jne r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + edx * 4 ]
mov [ ebp + 0x8 ] 0x7f
inc edx
mov [ edi ] edx
mov eax [ ecx + edx * 4 ]
movsx eax [ eax + 0x8 ]
sub eax 0x49
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0xc ]
call sub_40859a
test eax eax
jne r-xdata
lea eax [ edx + 0x1 ]
mov ecx esi
push 0xffffffff
mov [ edi ] eax
lea eax [ ebp - 0x1c ]
push eax
push edi
push ebx
call sub_40a000
test eax eax
js r-xdata
mov [ ebp - 0x8 ] 0xb
dec eax
je r-xdata
mov ecx [ edi ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 - 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0xa3
jmp r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x1c ]
push 0x100
push eax
push [ ebp + 0xc ]
call sub_408620
mov eax [ ebp - 0x8 ]
sub eax 0xb
je r-xdata
push 0xffffffff
push 0x6e
jmp r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x9d
mov esi [ eax ]
lea ecx [ ebp - 0x2c ]
call sub_409a20
inc [ edi ]
mov edx [ edi ]
mov [ ebp - 0x2c ] esi
mov esi [ ebp - 0xc ]
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x8 ] 0xc
jmp r-xdata
dec eax
dec eax
je r-xdata
mov ecx esi
call sub_469ed4
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_409700
dec eax
je r-xdata
inc [ edi ]
mov ecx [ edi ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x5
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_409a20
xor eax eax
mov [ ebp - 0x8 ] 0xd
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ edx - 0x1 ]
mov [ edi ] eax
lea ecx [ ebp - 0x1c ]
call sub_409a20
lea ecx [ ebp - 0x2c ]
call sub_409a20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp ax 0x40
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_409687
jmp r-xdata
dec eax
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx edx
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x7f
pop eax
push eax
jmp r-xdata
inc edx
push 0x33
mov [ edi ] edx
mov eax [ ecx + edx * 4 ]
pop ecx
cmp [ eax + 0x8 ] cx
je r-xdata
mov edx [ edi ]
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + edx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax [ ebp + 0x8 ]
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_40963c
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + edx * 4 ]
inc edx
mov [ edi ] edx
mov eax [ eax ]
mov [ ebp + 0xc ] eax
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x8 ] 0x41
jne r-xdata
sub_47ad30
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
xor ecx ecx
push 0x7f
mov eax [ esi + 0x4 ]
inc ecx
pop ebx
mov [ ebp - 0x4 ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8 ] bx
jne r-xdata
and [ ebp - 0x18 ] 0x0
lea eax [ ebp - 0x18 ]
and [ ebp - 0x10 ] 0x0
push 0xffffffff
push eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] ecx
push eax
push esi
mov ecx edi
call sub_40a000
test eax eax
js r-xdata
mov [ ebp + 0x8 ] ecx
xor ebx ebx
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_409a20
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] bx
je r-xdata
lea esi [ edi + 0x15c ]
lea ecx [ ebp - 0x18 ]
call sub_409c9c
mov esi eax
lea ecx [ ebp - 0x18 ]
mov [ ebp + 0x8 ] esi
call sub_409a20
xor ebx ebx
test esi esi
jle r-xdata
movsx eax [ eax + 0xa ]
mov ecx edi
push eax
push 0x72
call sub_469ed4
push 0xffffffff
push 0x96
mov ecx edi
call sub_469ed4
jmp r-xdata
mov ecx esi
call sub_41fd58
cmp [ eax ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx esi
inc ebx
call sub_41fd58
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
inc eax
mov [ ecx ] eax
mov ecx esi
call sub_41fd58
cmp [ eax ] 0x2
je r-xdata
cmp [ esi ] 0x0
je r-xdata
jmp r-xdata
mov ecx esi
call sub_41fd58
cmp [ eax ] 0x3
jne r-xdata
mov ecx esi
call sub_41fd0f
cmp ebx [ ebp + 0x8 ]
jl r-xdata
sub_47ae25
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
xor ebx ebx
xor eax eax
push edi
mov edi ecx
mov [ ebp - 0x4 ] bl
inc eax
mov [ ebp - 0x3 ] bl
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x10 ] eax
call sub_41fdec
mov esi [ ebp + 0xc ]
mov [ ebp - 0x48 ] 0x4
mov eax [ esi ]
dec eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x2 ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
push 0xffffffff
mov [ edi + 0xf4 ] eax
push 0xa0
mov al [ ebp - 0x4 ]
test al al
je r-xdata
dec ecx
xor esi esi
mov [ edi + 0xf4 ] ecx
mov ecx [ edx + 0x4 ]
mov eax [ ecx ]
cmp [ eax + 0x8 ] si
mov esi [ ebp + 0xc ]
jne r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ edi + 0x15c ]
call sub_41fd66
cmp [ ebp - 0x3 ] 0x0
mov eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ esi ]
push eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
call sub_4071c8
mov edx eax
mov [ ebp - 0xc ] edx
test edx edx
je r-xdata
mov eax [ eax ]
sub eax 0x14
je r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
inc ebx
jmp r-xdata
dec eax
je r-xdata
lea ecx [ ebp - 0x28 ]
call sub_409a20
lea ecx [ ebp - 0x38 ]
call sub_409a20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test ebx ebx
jne r-xdata
dec eax
je r-xdata
cmp [ ebp - 0x3 ] bl
jne r-xdata
test ebx ebx
jne r-xdata
dec eax
je r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x8 ] 0x1
cmp [ eax + 0x8 ] cx
jne r-xdata
dec ebx
jmp r-xdata
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x2 ] 0x1
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x40 ] ecx
jmp r-xdata
dec eax
jne r-xdata
lea eax [ ebp - 0x1 ]
mov ecx edi
push eax
lea eax [ ebp - 0x8 ]
push eax
push edx
call sub_409f6b
test eax eax
js r-xdata
cmp [ eax ] 0x6
jne r-xdata
mov dl [ ebp - 0x1 ]
mov ecx [ ebp - 0x8 ]
mov dl 0x1
push 0x2
mov [ ebp - 0x1 ] dl
pop ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x72
jmp r-xdata
test dl dl
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x7f
jne r-xdata
mov ecx edi
call sub_469ed4
mov eax [ esi ]
mov [ ebp - 0x3 ] 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
sub_47afb7
push ebp
mov ebp esp
sub esp 0x1c0
push ebx
xor eax eax
push esi
push edi
mov edi ecx
mov [ ebp - 0x18 ] eax
xor ecx ecx
mov [ ebp - 0x8 ] eax
inc ecx
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x30 ] ecx
test cl al
jne r-xdata
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov ecx [ esi ]
mov eax [ ebx + 0x4 ]
inc ecx
mov [ esi ] ecx
mov edx [ eax + ecx * 4 ]
xor eax eax
cmp [ edx + 0x8 ] ax
jne r-xdata
or eax ecx
mov ecx rw-data
push r--data
mov [ rw-data ] eax
call sub_409f3a
push sub_43b744
call sub_422ec0
pop ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
sub eax 0x1a
je r-xdata
test edx edx
jne r-xdata
push 0x2
pop edx
jmp r-xdata
movsx eax [ edx + 0xa ]
mov ecx edi
push eax
push 0x6e
call sub_469ed4
dec eax
dec eax
je r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ esi ]
push 0x33
pop edi
mov [ ebp - 0xc ] 0x7f
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x8 ] di
mov edi [ ebp - 0x14 ]
jne r-xdata
inc edx
mov [ ebp + 0xc ] edx
xor edx edx
inc edx
jmp r-xdata
dec eax
je r-xdata
mov ecx [ esi ]
mov eax [ esi ]
push edx
mov [ ebp + 0x13 ] 0x1
mov eax [ ecx + eax * 4 ]
lea ecx [ ebp - 0x8 ]
push ecx
mov eax [ eax ]
push eax
mov [ ebp - 0x10 ] eax
call sub_40859a
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
jmp r-xdata
push 0x2
pop edx
movsx eax [ edx + 0xa ]
push eax
push 0x7f
jmp r-xdata
mov ecx [ esi ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x9b
jmp r-xdata
push 0xa
push 0x8
lea eax [ ebp - 0xbc ]
push eax
push [ edi + 0xf4 ]
call sub_426e64
add esp 0x10
lea eax [ ebp - 0xbc ]
lea ecx [ ebp - 0x28 ]
push eax
call sub_407f41
push 0x2e
lea ecx [ ebp - 0x28 ]
call sub_407a84
mov ecx [ esi ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
lea ecx [ ebp - 0x28 ]
push [ eax ]
call sub_407c8e
lea eax [ ebp - 0x8 ]
mov ecx rw-data
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_408bb2
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
mov [ ebp + 0xc ] edx
jne r-xdata
mov ecx edi
call sub_469ed4
push [ ebp + 0xc ]
push 0x400
push eax
push [ ebp - 0x10 ]
call sub_4659de
lea ecx [ ebp - 0x28 ]
call sub_405a64
inc [ esi ]
mov ecx [ esi ]
mov eax [ ebx + 0x4 ]
push 0x4e
mov eax [ eax + ecx * 4 ]
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
push 0x10
push [ ebp - 0x8 ]
lea eax [ ebp - 0x28 ]
push rw-data
push eax
call sub_408620
lea eax [ ebp - 0x8 ]
mov ecx rw-data
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_408bb2
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
mov cl [ ebp + 0x13 ]
lea eax [ ebp - 0x18 ]
mov ecx edi
push eax
lea eax [ ebp - 0x1bc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push esi
push ebx
call sub_40d0dc
test eax eax
js r-xdata
mov ecx [ esi ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx edi
movsx eax [ eax + 0xa ]
push eax
push 0x79
call sub_469ed4
lea ecx [ ebp - 0x28 ]
call sub_405a64
jmp r-xdata
mov [ ebp + 0x13 ] 0x0
mov edx [ esi ]
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + edx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax [ ebp - 0xc ]
je r-xdata
lea eax [ edx + 0x1 ]
mov edx [ ebx + 0x4 ]
mov [ esi ] eax
mov edx [ edx + eax * 4 ]
movsx edi [ edx + 0xa ]
mov [ ebp + 0x10 ] edi
mov edi [ ebp - 0x14 ]
test cl cl
je r-xdata
lea ecx [ ebp - 0x3c ]
call sub_409a20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov cl [ ebp + 0x13 ]
test cl cl
jne r-xdata
cmp ax 0x40
jne r-xdata
push 0x4e
pop ecx
cmp [ edx + 0x8 ] cx
jne r-xdata
push esi
push ebx
call sub_47aab6
jmp r-xdata
mov edx [ esi ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x8 ] 0x41
jne r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_409e9c
mov ecx edx
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ esi ] eax
mov eax [ ecx + eax * 4 ]
push 0x33
pop edx
cmp [ eax + 0x8 ] dx
jne r-xdata
push [ ebp - 0x10 ]
mov ecx edi
push eax
push ebx
call sub_40d060
test eax eax
js r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0xc ] 0x5
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
jmp r-xdata
push 0xffffffff
lea eax [ ebp - 0x3c ]
mov ecx edi
push eax
push esi
push ebx
call sub_40a000
test eax eax
js r-xdata
push [ ebp - 0x10 ]
mov ecx edi
push [ esi ]
push ebx
call sub_40d060
test eax eax
js r-xdata
dec eax
mov [ esi ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1bc ]
push eax
push ecx
push esi
push ebx
mov ecx edi
call sub_47a866
test eax eax
js r-xdata
push [ ebp + 0x10 ]
push 0x6e
jmp r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_409e9c
mov ecx [ ebp - 0x18 ]
test ecx ecx
jle r-xdata
push 0x1
lea eax [ ebp - 0x1bc ]
mov ecx edi
push eax
push [ ebp + 0x8 ]
push esi
push ebx
call sub_40cedd
test al al
je r-xdata
xor eax eax
lea edi [ ebp - 0x1bc ]
[ edi ]
mov edi [ ebp - 0x14 ]
jmp r-xdata
sub_47b322
push ebp
mov ebp esp
sub esp 0x7c
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
xor ecx ecx
mov [ ebp - 0x3 ] bl
inc ecx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x1 ] bl
call sub_41fdec
mov ecx [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x3c ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x40 ] ebx
mov eax [ eax + 0x4 ]
push 0x7f
pop edx
mov [ ebp - 0x78 ] 0x5
cmp [ eax + 0x8 ] dx
jne r-xdata
mov eax [ ebp + 0xc ]
push 0xffffffff
mov eax [ eax ]
dec eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x74 ] eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push ecx
mov ecx edi
call sub_40a000
test eax eax
js r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x6e
jmp r-xdata
lea ecx [ ebp - 0x48 ]
call sub_409a20
lea ecx [ ebp - 0x38 ]
call sub_409a20
lea ecx [ ebp - 0x28 ]
call sub_409a20
lea ecx [ ebp - 0x58 ]
call sub_409a20
lea ecx [ ebp - 0x68 ]
call sub_409a20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi ebx
mov ecx edi
call sub_469ed4
mov eax [ ebp - 0x18 ]
push 0xffffffff
mov [ edi + 0xf4 ] eax
push 0xa0
lea ecx [ edx - 0x1 ]
mov [ edi + 0xf4 ] ecx
xor ecx ecx
mov edx [ ebx + 0x4 ]
mov eax [ edx ]
cmp [ eax + 0x8 ] cx
mov ecx [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx ]
push eax
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
call sub_4071c8
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ eax ]
sub eax 0x14
je r-xdata
inc esi
mov [ ebp - 0xc ] esi
jmp r-xdata
dec eax
je r-xdata
test esi esi
jne r-xdata
dec eax
je r-xdata
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
dec esi
jmp r-xdata
dec eax
je r-xdata
mov eax [ edx + 0x4 ]
xor ecx ecx
mov [ ebp - 0x3 ] 0x1
mov [ ebp - 0x8 ] 0x1
cmp [ eax + 0x8 ] cx
jne r-xdata
mov [ ebp - 0xc ] esi
dec eax
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
cmp [ eax ] 0x6
jne r-xdata
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x2 ] 0x1
mov eax [ ecx ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0xffffffff
lea eax [ ebp - 0x38 ]
mov ecx edi
push eax
lea eax [ ebp - 0x8 ]
push eax
push ebx
call sub_40a000
test eax eax
js r-xdata
mov eax [ edx + 0x8 ]
push 0x7f
pop ecx
mov [ ebp - 0x1 ] 0x1
mov [ ebp - 0x8 ] 0x2
cmp [ eax + 0x8 ] cx
jne r-xdata
mov al [ ebp - 0x3 ]
mov ebx ecx
mov esi [ ebx ]
dec esi
mov [ ebp - 0x70 ] esi
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
xor ecx ecx
mov esi [ ebp - 0x8 ]
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] cx
jne r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x72
jmp r-xdata
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ edi + 0x15c ]
call sub_41fd66
cmp [ ebp - 0x2 ] 0x0
je r-xdata
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x38 ]
call sub_408bd8
test al al
jne r-xdata
cmp [ eax ] 0xf
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebx ] eax
jmp r-xdata
mov esi [ ebp - 0xc ]
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] 0x40
jne r-xdata
push 0xffffffff
lea eax [ ebp - 0x48 ]
inc esi
push eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] esi
push eax
push ebx
mov ecx edi
call sub_40a000
test eax eax
js r-xdata
mov eax [ ebx + 0x4 ]
push 0x7f
pop ecx
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] cx
jne r-xdata
inc esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
lea edx [ ebp - 0x38 ]
lea ecx [ ebp - 0x28 ]
call sub_42067c
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax * 4 ]
mov esi [ ebp - 0xc ]
jmp r-xdata
mov esi [ ebp - 0x8 ]
jmp r-xdata
lea edx [ ebp - 0x48 ]
lea ecx [ ebp - 0x28 ]
call sub_467740
test al al
jne r-xdata
mov ecx [ ebp + 0xc ]
sub_47b5b4
push ebp
mov ebp esp
sub esp 0x1c
and [ ebp - 0x18 ] 0x0
mov eax ecx
and [ ebp - 0x10 ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
lea edi [ eax + 0x168 ]
mov [ ebp - 0x4 ] eax
inc [ ebx ]
lea eax [ ebp - 0x18 ]
push eax
mov ecx edi
mov [ ebp - 0xc ] 0x1
call sub_47c0a8
lea ecx [ ebp - 0x18 ]
call sub_409a20
push 0xffffffff
mov ecx edi
call sub_47c0f7
mov ecx [ ebp - 0x4 ]
push eax
push ebx
push [ ebp + 0x8 ]
call sub_40a000
test eax eax
js r-xdata
mov ecx edi
call sub_47a256
mov eax [ ebp + 0x8 ]
mov ecx [ ebx ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 - 0x4 ]
mov ecx [ ebp - 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0xa5
call sub_469ed4
mov ecx edi
call sub_47c0f7
mov esi eax
mov ecx eax
call sub_456241
test al al
je r-xdata
cmp [ esi + 0xc ] 0xf
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47b651
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x5c
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi ecx
cmp [ ebx + 0xc ] 0xf
jne r-xdata
xor esi esi
mov [ esp + 0x18 ] r--data
lea eax [ esp + 0x48 ]
mov [ esp + 0x1c ] esi
lea ecx [ esp + 0x38 ]
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] esi
mov [ esp + 0x48 ] esi
mov [ esp + 0x50 ] esi
mov [ esp + 0x54 ] 0x1
mov [ esp + 0x10 ] eax
call sub_4077c7
mov ecx ebx
mov [ esp + 0x14 ] esi
call sub_456241
test al al
jne r-xdata
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_47b9e3
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push 0x35
mov ecx [ ebx ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0xa9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ edx + 0x4 ]
mov ecx [ ebx ]
push 0x47
pop edx
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] dx
mov edx [ ebp + 0x8 ]
jne r-xdata
push [ eax ]
lea ecx [ esp + 0x3c ]
call sub_4081a7
inc [ ebx ]
mov edx [ ebp + 0x8 ]
cmp [ esp + 0x3c ] esi
jne r-xdata
lea eax [ ecx - 0x1 ]
mov ecx edi
mov [ ebx ] eax
lea eax [ esp + 0x18 ]
push eax
push ebx
push edx
call sub_47a0d2
test eax eax
js r-xdata
mov eax [ edx + 0x4 ]
mov ecx [ ebx ]
push 0x35
mov ecx [ eax + ecx * 4 ]
pop eax
cmp [ ecx + 0x8 ] ax
je r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x80
jmp r-xdata
lea ecx [ esp + 0x38 ]
call sub_405a64
lea ecx [ esp + 0x48 ]
call sub_409a20
lea ecx [ esp + 0x18 ]
call sub_4563f2
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ esp + 0x14 ] 0x1
push [ esp + 0x38 ]
lea ecx [ esp + 0x5c ]
call sub_407f41
lea eax [ esp + 0x10 ]
mov ecx edi
push eax
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x60 ]
push eax
push [ ebp + 0x10 ]
push [ esp + 0x24 ]
call sub_479ff2
test eax eax
lea ecx [ esp + 0x58 ]
sets bl
call sub_405a64
test bl bl
jne r-xdata
push 0x47
pop eax
cmp [ ecx + 0x8 ] ax
je r-xdata
mov ecx edi
call sub_469ed4
push [ esp + 0x10 ]
mov eax [ ebp + 0xc ]
mov ecx edi
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_47b651
mov esi eax
call sub_45693f
test al al
jne r-xdata
movzx eax [ ecx + 0x8 ]
mov ecx edi
inc [ ebx ]
push 0xffffffff
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x2c ]
push eax
push ebx
push edx
mov [ esp + 0x38 ] esi
mov [ esp + 0x40 ] esi
mov [ esp + 0x44 ] 0x1
call sub_40a000
test eax eax
js r-xdata
push [ esp + 0x38 ]
lea ecx [ esp + 0x5c ]
call sub_407f41
lea eax [ esp + 0x10 ]
mov ecx edi
push eax
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x60 ]
push eax
push [ ebp + 0x10 ]
push [ esp + 0x24 ]
call sub_479ff2
test eax eax
lea ecx [ esp + 0x58 ]
sets bl
call sub_405a64
test bl bl
jne r-xdata
lea ecx [ esp + 0x28 ]
call sub_409a20
mov eax [ ebp + 0x8 ]
mov ecx [ ebx ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
lea ecx [ esp + 0x38 ]
call sub_405a64
lea ecx [ esp + 0x48 ]
call sub_409a20
lea ecx [ esp + 0x18 ]
call sub_4563f2
mov eax esi
cmp [ esp + 0x14 ] 0x41
je r-xdata
movsx eax [ eax + 0xa ]
mov ecx edi
push eax
push 0x72
call sub_469ed4
movsx eax [ eax + 0xa ]
mov ecx edi
push eax
push 0x72
call sub_469ed4
jmp r-xdata
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x1c ]
call sub_456363
push [ esp + 0x38 ]
lea ecx [ esp + 0x5c ]
call sub_407f41
lea eax [ esp + 0x18 ]
mov ecx edi
push eax
lea eax [ esp + 0x5c ]
push eax
push [ ebp + 0x10 ]
call sub_47a060
lea ecx [ esp + 0x58 ]
mov esi eax
call sub_405a64
lea ecx [ esp + 0x28 ]
call sub_409a20
jmp r-xdata
push [ esp + 0x38 ]
lea ecx [ esp + 0x5c ]
call sub_407f41
lea eax [ esp + 0x10 ]
mov ecx edi
push eax
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x60 ]
push eax
push [ ebp + 0x10 ]
push esi
call sub_479ff2
test eax eax
lea ecx [ esp + 0x58 ]
setns bl
call sub_405a64
test bl bl
je r-xdata
or esi 0xffffffff
jmp r-xdata
mov eax [ esp + 0x14 ]
cwde
sub eax 0x52
je r-xdata
push [ esp + 0x10 ]
lea ecx [ esp + 0x2c ]
call sub_409700
dec eax
je r-xdata
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x28 ]
push eax
call sub_409687
dec eax
je r-xdata
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x28 ]
push eax
call sub_4562b3
jmp r-xdata
dec eax
je r-xdata
push [ esp + 0x10 ]
lea ecx [ esp + 0x2c ]
call sub_409e9c
jmp r-xdata
push [ esp + 0x10 ]
lea ecx [ esp + 0x2c ]
call sub_40963c
jmp r-xdata
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x28 ]
push eax
call sub_45625a
jmp r-xdata
sub_47b9e3
push ebp
mov ebp esp
sub esp 0x68
xor eax eax
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi ecx
cmp [ esi + 0xc ] 0xf
jne r-xdata
mov [ ebp - 0xc ] eax
mov ebx [ esi ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push 0x35
mov ecx [ ebx ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0xa9
mov [ ebp - 0x40 ] eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4c ] eax
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x44 ] r--data
mov [ ebp - 0x48 ] 0x1
mov [ ebp - 0x8 ] eax
call sub_4077c7
and [ ebp - 0x10 ] 0x0
mov ecx esi
call sub_456241
test al al
jne r-xdata
mov ecx [ ebx ]
mov eax [ edx + 0x4 ]
push 0x47
mov eax [ eax + ecx * 4 ]
pop ecx
push 0x4e
cmp [ eax + 0x8 ] cx
pop ecx
jne r-xdata
push [ eax ]
lea ecx [ ebp - 0x34 ]
call sub_4081a7
inc [ ebx ]
mov edx [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ eax + 0x8 ] cx
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
cmp [ esi + 0xc ] 0xf
jne r-xdata
mov ecx [ ebp - 0xc ]
lea edx [ ebp - 0x34 ]
push edx
mov eax [ ecx ]
call [ eax + 0x4 ]
test al al
jne r-xdata
movsx eax [ eax + 0xa ]
push eax
push 0x80
jmp r-xdata
mov ecx [ ebp - 0xc ]
lea edx [ ebp - 0x34 ]
push edx
mov eax [ ecx ]
call [ eax + 0x8 ]
test al al
jne r-xdata
movsx eax [ eax + 0xa ]
push 0x8
lea eax [ ebp + 0x10 ]
mov [ ebp + 0x10 ] esi
push eax
push ebx
push edx
mov ecx edi
call sub_47c6d7
test eax eax
js r-xdata
dec [ ebx ]
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
push ebx
push eax
call sub_47a0d2
test eax eax
js r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebx ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x85
jmp r-xdata
mov ecx edi
call sub_469ed4
mov edx [ ebp + 0x8 ]
mov ecx [ ebx ]
push 0x35
mov eax [ edx + 0x4 ]
mov ecx [ eax + ecx * 4 ]
pop eax
cmp [ ecx + 0x8 ] ax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebx ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x85
jmp r-xdata
or esi 0xffffffff
jmp r-xdata
push [ ebp + 0x10 ]
push ebx
jmp r-xdata
lea ecx [ ebp - 0x34 ]
call sub_405a64
lea ecx [ ebp - 0x54 ]
call sub_409a20
lea ecx [ ebp - 0x44 ]
call sub_4563f2
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x64 ]
call sub_407f41
lea eax [ ebp - 0x8 ]
mov ecx edi
push eax
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x64 ]
push eax
push esi
push [ ebp - 0x10 ]
call sub_479ff2
test eax eax
lea ecx [ ebp - 0x64 ]
sets bl
call sub_405a64
test bl bl
je r-xdata
push 0x4e
pop eax
cmp [ ecx + 0x8 ] ax
je r-xdata
mov ecx edi
call sub_469ed4
jmp r-xdata
lea ecx [ ebp - 0x34 ]
call sub_405a64
lea ecx [ ebp - 0x54 ]
call sub_409a20
lea ecx [ ebp - 0x44 ]
call sub_4563f2
mov eax esi
mov eax [ ebp + 0x8 ]
mov ecx edi
push eax
call sub_47b651
mov esi eax
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
push 0x47
pop eax
cmp [ ecx + 0x8 ] ax
je r-xdata
call sub_45693f
test al al
jne r-xdata
movzx eax [ ecx + 0x8 ]
or esi 0xffffffff
inc [ ebx ]
mov ecx edi
and [ ebp - 0x24 ] 0x0
and [ ebp - 0x1c ] 0x0
push esi
mov [ ebp + 0xc ] eax
lea eax [ ebp - 0x24 ]
push eax
push ebx
push edx
mov [ ebp - 0x18 ] 0x1
call sub_40a000
test eax eax
js r-xdata
movsx eax [ ecx + 0xa ]
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call sub_409a20
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebx ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x7f
je r-xdata
push eax
push 0x80
cmp [ ebp + 0xc ] 0x41
je r-xdata
movsx eax [ eax + 0xa ]
mov ecx edi
push eax
push 0x72
call sub_469ed4
jmp r-xdata
mov esi [ ebp + 0x10 ]
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x64 ]
call sub_407f41
mov esi [ ebp + 0x10 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x44 ]
mov ecx edi
push eax
lea eax [ ebp - 0x64 ]
push eax
push esi
push 0x0
call sub_479ff2
test eax eax
lea ecx [ ebp - 0x64 ]
setns bl
call sub_405a64
test bl bl
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x64 ]
call sub_407f41
lea eax [ ebp - 0x44 ]
mov ecx edi
push eax
lea eax [ ebp - 0x64 ]
push eax
push esi
call sub_47a060
lea ecx [ ebp - 0x64 ]
mov esi eax
call sub_405a64
mov ecx [ esi ]
push 0x8
call sub_4619a6
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x44 ]
call sub_456363
cmp [ esi + 0xc ] 0xf
jne r-xdata
mov eax [ ebp + 0xc ]
cwde
sub eax 0x52
je r-xdata
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x24 ]
call sub_409700
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_409687
dec eax
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_4562b3
jmp r-xdata
dec eax
je r-xdata
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x24 ]
call sub_409e9c
jmp r-xdata
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x24 ]
call sub_40963c
jmp r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_45625a
jmp r-xdata
sub_47bd80
push ebp
mov ebp esp
sub esp 0x4c
mov edx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx [ edx + 0x4 ]
mov [ ebp - 0x8 ] ecx
push 0x48
add [ edi ] 0x2
mov ecx [ edi ]
pop esi
mov [ ebp - 0x10 ] esi
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] si
mov esi [ ebp - 0x8 ]
jne r-xdata
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
call sub_47a328
mov esi [ edi ]
xor ecx ecx
mov edi [ ebp - 0x28 ]
mov edx ecx
mov [ ebp - 0xc ] 0x47
mov eax [ edx + ecx * 4 - 0x8 ]
mov ecx esi
movsx eax [ eax + 0xa ]
push eax
push 0x70
call sub_469ed4
or eax 0xffffffff
jmp r-xdata
cmp ax [ ebp - 0x10 ]
jne r-xdata
inc edx
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
push 0x40
pop edi
cmp ax di
mov edi [ ebp - 0x28 ]
jne r-xdata
dec edx
jmp r-xdata
test edx edx
js r-xdata
test edx edx
je r-xdata
mov edi [ ebp + 0xc ]
lea eax [ ebp - 0x3c ]
push esi
push eax
push edi
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x8 ]
push eax
mov [ ebp - 0x30 ] 0x1
call sub_40a000
test eax eax
jns r-xdata
inc esi
jmp r-xdata
mov ecx [ edi ]
mov edx [ ebp - 0x28 ]
push 0x40
pop esi
mov eax [ edx + ecx * 4 ]
cmp [ eax + 0x8 ] si
jne r-xdata
or edi 0xffffffff
jmp r-xdata
mov eax [ edi + esi * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax [ ebp - 0xc ]
jne r-xdata
add ecx 0xfffffffe
dec ecx
jmp r-xdata
lea ecx [ ebp - 0x3c ]
call sub_409a20
lea ecx [ ebp - 0x2c ]
call sub_407776
mov eax edi
cmp [ ebp - 0x30 ] 0xe
jne r-xdata
mov [ ebp - 0x14 ] ax
lea ecx [ ebp - 0x1c ]
xor eax eax
push 0x1
mov [ ebp - 0x12 ] ax
call sub_405f12
lea ecx [ ebp - 0x3c ]
call sub_4679b4
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ edi ]
mov ecx [ ecx + eax * 4 ]
call sub_467388
push [ ebp + 0x10 ]
lea eax [ ebp - 0x2c ]
mov ecx esi
push edi
push eax
push 0x1
call sub_40f5c0
lea ecx [ ebp - 0x1c ]
mov [ ebp + 0x8 ] eax
call sub_405efb
jmp r-xdata
push 0x47
pop eax
mov [ edi ] ecx
mov ecx [ edx + ecx * 4 + 0x4 ]
push eax
call sub_405f12
mov esi [ ebp - 0x8 ]
or eax 0xffffffff
cmp [ ebp - 0x30 ] 0xd
mov [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp - 0x30 ] 0x4
jne r-xdata
mov eax [ edi ]
mov ecx [ ebp - 0x28 ]
push 0x34
mov ecx [ ecx + eax * 4 ]
call sub_405f12
mov ecx [ edi ]
mov eax [ ebp - 0x28 ]
mov esi [ eax + ecx * 4 ]
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_4679c3
push eax
mov ecx esi
call sub_405ea1
lea ecx [ ebp - 0x4c ]
call sub_405a64
mov esi [ ebp - 0x8 ]
lea eax [ ebp + 0xb ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x2c ]
mov ecx esi
push edi
push eax
push 0x1
call sub_40fe40
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x28 ]
xor ecx ecx
mov eax [ edi ]
push 0x7f
mov eax [ edx + eax * 4 ]
pop edx
cmp [ eax + 0x8 ] dx
je r-xdata
lea ecx [ ebp - 0x3c ]
call sub_409997
mov ecx [ ebp - 0x34 ]
mov eax [ ecx ]
mov [ ebp - 0x4c ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x48 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x44 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x40 ] eax
inc [ eax ]
call sub_407faf
push [ ebp - 0x48 ]
push [ ebp - 0x4c ]
call [ CharUpperBuffW@IAT ]
mov ecx [ rw-data ]
push [ ebp - 0x4c ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov [ ebp + 0xc ] eax
test eax eax
jle r-xdata
test eax eax
jns r-xdata
xor edi edi
mov eax [ esi ]
xor edi edi
push edi
push 0xdead
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
mov eax [ esi ]
push edi
push 0xbeef
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_41fea1
jmp r-xdata
inc [ edi ]
mov edx [ edi ]
mov eax [ ebp - 0x28 ]
mov eax [ eax + edx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax [ ebp - 0xc ]
jne r-xdata
lea ecx [ ebp - 0x3c ]
call sub_409997
push [ ebp - 0x34 ]
mov ecx esi
call sub_409fbd
test eax eax
je r-xdata
or eax 0xffffffff
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x14 ] ax
xor eax eax
push 0x1
mov [ ebp - 0x12 ] ax
call sub_405f12
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ edi ]
mov ecx [ ecx + eax * 4 ]
call sub_467388
push [ ebp + 0x10 ]
lea eax [ ebp - 0x2c ]
mov ecx esi
push edi
push eax
push 0x1
call sub_40f5c0
lea ecx [ ebp - 0x1c ]
mov [ ebp + 0x8 ] eax
call sub_405efb
jmp r-xdata
cmp ax [ ebp - 0x10 ]
jne r-xdata
inc ecx
jmp r-xdata
lea ecx [ ebp - 0x4c ]
call sub_405a64
mov eax [ edi ]
mov ecx [ ebp - 0x28 ]
push 0x34
mov ecx [ ecx + eax * 4 ]
call sub_405f12
lea ecx [ ebp - 0x3c ]
call sub_409997
mov eax [ edi ]
mov ecx [ ebp - 0x28 ]
push [ ebp - 0x34 ]
mov ecx [ ecx + eax * 4 ]
call sub_405ea1
lea eax [ ebp + 0xb ]
mov ecx esi
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x2c ]
push edi
push eax
push 0x1
call sub_40fe40
mov [ ebp + 0x8 ] eax
push 0x7f
pop edx
cmp ax dx
jne r-xdata
dec ecx
test ecx ecx
jle r-xdata
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ edi ] eax
sub_47c0a8
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x9 ] 0x0
je r-xdata
push edi
push 0x18
call sub_420f36
mov edi eax
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
call sub_409e9c
mov [ esi + 0x9 ] 0x0
jmp r-xdata
xor edi edi
push [ ebp + 0x8 ]
and [ edi + 0x8 ] 0x0
mov ecx edi
call sub_409ac0
jmp r-xdata
inc [ esi ]
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
mov [ edi + 0x10 ] eax
mov [ esi + 0x4 ] edi
pop edi
sub_47c104
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
pop esi
test eax eax
jne r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
retn
mov eax sub_43b6cf
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_47c13b
push ebp
mov ebp esp
sub esp 0x124
cmp [ ebp + 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_47c1b7
lea eax [ ebp - 0x24 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x124 ]
push 0x80
push eax
call sub_427d74
add esp 0x10
test eax eax
jne r-xdata
push r--data
jmp r-xdata
lea eax [ ebp - 0x124 ]
push eax
mov [ ebp - 0x124 ] ax
mov ecx [ ebp + 0x8 ]
call sub_407f41
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_47c198
push ebp
mov ebp esp
sub esp 0x24
lea eax [ ebp - 0x24 ]
push eax
call sub_47c1b7
test eax eax
je r-xdata
xor eax eax
mov eax [ eax + 0x18 ]
inc eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_47c1b7
push ebp
mov ebp esp
sub esp 0x24
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push ecx
lea eax [ ebp - 0x24 ]
push eax
call sub_426f80
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x80004005
call sub_457411
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
lea esi [ ebp - 0x24 ]
push 0x9
pop ecx
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_47c20d
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
xor ecx ecx
push esi
push edi
mov edi [ ebp + 0xc ]
cmp dx 0x47
jne r-xdata
lea eax [ esi + 0x1 ]
mov [ edi ] eax
test ecx ecx
jne r-xdata
push 0x48
pop eax
cmp dx ax
jne r-xdata
inc ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ edi ]
push 0x35
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
movzx edx [ eax + 0x8 ]
pop eax
cmp dx ax
jne r-xdata
test ebx ebx
je r-xdata
cmp dx 0x7f
je r-xdata
test ecx ecx
jne r-xdata
inc esi
mov [ edi ] esi
test ecx ecx
jg r-xdata
mov [ ebx ] cl
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
dec ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
push 0x35
mov eax [ ebx + 0x4 ]
pop ebx
mov eax [ eax + esi * 4 + 0x4 ]
cmp [ eax + 0x8 ] bx
mov ebx [ ebp + 0x10 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x35
mov eax [ ebx + 0x4 ]
pop ebx
mov eax [ eax + esi * 4 ]
cmp [ eax + 0x8 ] bx
mov ebx [ ebp + 0x10 ]
je r-xdata
push 0x48
pop eax
cmp dx ax
je r-xdata
lea eax [ esi - 0x1 ]
mov [ edi ] eax
sub_47c2a7
push ebp
mov ebp esp
mov eax 0x2028
call sub_431ac0
push ebx
push esi
push edi
lea ecx [ ebp - 0x14 ]
call sub_4077c7
lea ecx [ ebp - 0x24 ]
call sub_4077c7
mov ebx [ ebp + 0x8 ]
xor eax eax
mov ecx ebx
mov esi eax
call sub_409997
mov eax [ ebx + 0x8 ]
xor bl bl
mov edi [ eax ]
movzx eax [ edi ]
test ax ax
je r-xdata
lea ecx [ ebp - 0x24 ]
call sub_405a64
lea ecx [ ebp - 0x14 ]
call sub_405a64
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x25
pop ecx
inc esi
cmp ax cx
jne r-xdata
push eax
lea ecx [ ebp - 0x14 ]
call sub_407a84
cmp [ edi + esi * 2 ] cx
jne r-xdata
test bl bl
je r-xdata
jmp r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_407d2c
push 0x25
pop ebx
jmp r-xdata
push ecx
lea ecx [ ebp - 0x14 ]
mov bl 0x1
call sub_407a84
inc esi
jmp r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
call sub_409b9c
movzx eax [ edi + esi * 2 ]
cmp ax bx
jne r-xdata
movzx eax [ edi + esi * 2 ]
test ax ax
je r-xdata
test ax ax
je r-xdata
xor eax eax
cmp [ edi + esi * 2 ] ax
je r-xdata
push eax
lea ecx [ ebp - 0x24 ]
call sub_407a84
inc esi
push r--data
lea ecx [ ebp - 0x14 ]
mov bl 0x1
call sub_407e0b
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407c8e
mov [ ebp - 0x2024 ] ax
inc esi
push 0xfff
lea eax [ ebp - 0x2024 ]
push eax
push [ ebp - 0x24 ]
call [ GetEnvironmentVariableW@IAT ]
lea ecx [ ebp - 0x14 ]
test eax eax
je r-xdata
push r--data
mov bl 0x1
call sub_407e0b
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_407c8e
push r--data
lea ecx [ ebp - 0x14 ]
call sub_407e0b
jmp r-xdata
lea eax [ ebp - 0x2024 ]
push eax
call sub_407e0b
mov bl 0x1
jmp r-xdata
sub_47c3f4
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0x1c ]
push edi
call sub_4077c7
lea ecx [ ebp - 0x3c ]
call sub_4077c7
lea ecx [ ebp - 0x2c ]
call sub_4077c7
mov ebx [ ebp + 0x8 ]
xor eax eax
mov ecx ebx
mov esi eax
call sub_409997
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x40 ] 0x1
mov edi [ eax ]
xor eax eax
mov bl al
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x44 ] eax
movzx eax [ edi ]
test ax ax
je r-xdata
lea ecx [ ebp - 0x4c ]
call sub_409a20
lea ecx [ ebp - 0x2c ]
call sub_405a64
lea ecx [ ebp - 0x3c ]
call sub_405a64
lea ecx [ ebp - 0x1c ]
call sub_405a64
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x24
pop ecx
push 0x40
inc esi
pop edx
cmp ax cx
jne r-xdata
cmp ax dx
jne r-xdata
cmp [ edi + esi * 2 ] cx
jne r-xdata
push eax
lea ecx [ ebp - 0x1c ]
call sub_407a84
cmp [ edi + esi * 2 ] dx
jne r-xdata
push r--data
lea ecx [ ebp - 0x3c ]
call sub_407d2c
push 0x24
pop ebx
jmp r-xdata
push ecx
test bl bl
je r-xdata
jmp r-xdata
push r--data
lea ecx [ ebp - 0x3c ]
call sub_407d2c
push 0x40
pop ebx
jmp r-xdata
push edx
jmp r-xdata
movzx eax [ edi + esi * 2 ]
cmp ax bx
jne r-xdata
movzx eax [ edi + esi * 2 ]
test ax ax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_409b9c
movzx eax [ edi + esi * 2 ]
cmp ax bx
jne r-xdata
lea ecx [ ebp - 0x1c ]
mov bl 0x1
call sub_407a84
inc esi
jmp r-xdata
test ax ax
je r-xdata
xor ebx ebx
cmp [ edi + esi * 2 ] bx
je r-xdata
test ax ax
je r-xdata
xor eax eax
cmp [ edi + esi * 2 ] ax
je r-xdata
push eax
lea ecx [ ebp - 0x3c ]
call sub_407a84
inc esi
push r--data
lea ecx [ ebp - 0x1c ]
call sub_407e0b
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_407c8e
jmp r-xdata
lea eax [ ebp - 0x3c ]
inc esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_4081a7
lea ecx [ ebp - 0x2c ]
call sub_407faf
push [ ebp - 0x28 ]
push [ ebp - 0x2c ]
call [ CharUpperBuffW@IAT ]
push ebx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_40859a
mov ebx eax
test ebx ebx
je r-xdata
push eax
lea ecx [ ebp - 0x3c ]
call sub_407a84
inc esi
push r--data
lea ecx [ ebp - 0x1c ]
mov bl 0x1
call sub_407e0b
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_407c8e
lea eax [ ebp - 0x3c ]
inc esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_4081a7
lea ecx [ ebp - 0x2c ]
call sub_407faf
push [ ebp - 0x28 ]
push [ ebp - 0x2c ]
call [ CharUpperBuffW@IAT ]
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_40c707
test eax eax
js r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
mov bl 0x1
call sub_407e0b
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_407c8e
push r--data
jmp r-xdata
mov ecx ebx
call sub_409997
mov eax [ ebx + 0x8 ]
lea ecx [ ebp - 0x1c ]
push [ eax ]
call sub_407e0b
push r--data
lea ecx [ ebp - 0x1c ]
mov bl 0x1
call sub_407e0b
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_407c8e
push r--data
lea ecx [ ebp - 0x4c ]
call sub_409997
push [ ebp - 0x44 ]
lea ecx [ ebp - 0x1c ]
call sub_407c8e
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_407e0b
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_47c665
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ esi ]
mov edx [ ebx + 0x4 ]
push 0x35
pop ecx
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x8 ] cx
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ esi ]
mov edi [ eax ]
cmp [ edi + 0xc ] 0xf
jne r-xdata
xor eax eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x7a
call sub_469ed4
or eax 0xffffffff
jmp r-xdata
mov eax [ edx + ecx * 4 ]
push 0x10
mov edx [ eax ]
lea eax [ ecx + 0x1 ]
mov ecx [ edi ]
push edx
mov [ esi ] eax
call sub_461d53
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_47c6d7
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
push 0x4e
mov edx [ esi ]
mov [ ebp - 0x4 ] ecx
mov eax [ edi + 0x4 ]
mov eax [ eax + edx * 4 ]
pop edx
cmp [ eax + 0x8 ] dx
jne r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x4 ]
movsx eax [ eax + 0xa ]
push eax
push 0x7a
call sub_469ed4
inc [ esi ]
lea eax [ ebp - 0x18 ]
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x10 ] 0x0
push 0xffffffff
push eax
push esi
push edi
mov [ ebp - 0xc ] 0x1
call sub_40a000
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
cmp [ eax + 0x8 ] 0x4f
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx ecx
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + edx * 4 - 0x4 ]
movsx ecx [ ecx + 0xa ]
push ecx
mov ecx [ ebp - 0x4 ]
push 0x7b
call sub_469ed4
lea ecx [ ebp - 0x18 ]
call sub_409a20
jmp r-xdata
mov ebx [ ebx ]
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
cmp [ ebx + 0xc ] 0xf
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor ebx ebx
mov ebx [ ebx ]
jmp r-xdata
push [ ebp + 0x14 ]
call sub_409d46
push edx
push eax
mov ecx ebx
call sub_461dac
call sub_409997
push [ ebp + 0x14 ]
mov ecx ebx
push [ ebp - 0x10 ]
call sub_461d53
jmp r-xdata
cmp [ ebp - 0xc ] 0x4
lea ecx [ ebp - 0x18 ]
jne r-xdata
call sub_409a20
call sub_409a20
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
push 0x4e
mov eax [ eax + ecx * 4 ]
pop ecx
cmp [ eax + 0x8 ] cx
jne r-xdata
mov ebx [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
mov [ ebx ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0xc ] 0xf
jne r-xdata
sub_47c7f3
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push esi
push edi
xor esi esi
mov [ ebp - 0x28 ] r--data
mov edi ecx
mov [ ebp - 0x24 ] esi
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
call sub_4077c7
mov eax [ rw-data ]
xor ebx ebx
inc ebx
test bl al
jne r-xdata
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x2c ] ebx
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x38 ] esi
mov ecx [ ebx ]
mov [ ebp - 0x30 ] esi
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
movsx eax [ eax + 0xa ]
mov [ ebp + 0xc ] eax
call sub_456241
test al al
jne r-xdata
sub esp 0x10
or eax ebx
mov ecx esp
mov [ rw-data ] eax
push r--data
call sub_407f41
push esi
push 0x2a
mov ecx rw-data
call sub_4669c4
push sub_43b762
call sub_422ec0
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] 0x35
push 0x47
pop edx
movzx eax [ ecx + 0x8 ]
cmp ax [ ebp - 0x8 ]
je r-xdata
push 0x1
push r--data
push esi
push 0xa9
mov ecx edi
call sub_4794db
test eax eax
jns r-xdata
cmp ax dx
jne r-xdata
cmp ax dx
je r-xdata
push esi
push ebx
push [ ebp + 0x8 ]
call sub_47c20d
jmp r-xdata
push [ ebp + 0xc ]
push 0xa9
jmp r-xdata
push [ ecx ]
lea ecx [ ebp - 0x18 ]
call sub_4081a7
dec [ ebx ]
lea ecx [ ebp - 0x18 ]
push r--data
call sub_407d2c
jmp r-xdata
push [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
push rw-data
call sub_4675d6
mov eax [ edi ]
push esi
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
mov ecx edi
call sub_469ed4
cmp [ eax + 0xc ] 0xf
jne r-xdata
cmp [ eax + 0xc ] 0xf
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebx ]
push 0x47
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 + 0x4 ]
pop ecx
cmp [ eax + 0x8 ] cx
mov eax [ ebp + 0x10 ]
jne r-xdata
mov ecx [ ebp + 0x14 ]
call sub_409e9c
jmp r-xdata
lea ecx [ ebp - 0x38 ]
call sub_409a20
lea ecx [ ebp - 0x18 ]
call sub_405a64
lea ecx [ ebp - 0x28 ]
call sub_4563f2
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
inc [ ebx ]
mov eax esi
mov ecx [ eax ]
lea edx [ ebp - 0x18 ]
push edx
mov eax [ ecx ]
call [ eax + 0x8 ]
test al al
je r-xdata
lea eax [ ebp - 0x28 ]
mov ecx edi
push eax
push ebx
push [ ebp + 0x8 ]
call sub_47a0d2
test eax eax
jns r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x18 ]
push edx
mov eax [ ecx ]
call [ eax + 0x4 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebx ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
movzx eax [ eax + 0x8 ]
cmp ax [ ebp - 0x8 ]
je r-xdata
push [ ebp + 0xc ]
push 0xaa
xor eax eax
inc eax
jmp r-xdata
push ecx
push ecx
mov ecx edi
call sub_469cc2
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_456241
test al al
jne r-xdata
push 0x47
pop ecx
cmp ax cx
je r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x28 ]
push ecx
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
mov ecx edi
push eax
call sub_479ff2
test eax eax
jns r-xdata
or esi 0xffffffff
jmp r-xdata
push [ ebp + 0x14 ]
mov ecx edi
push [ ebp - 0x4 ]
push ebx
push [ ebp + 0x8 ]
call sub_47c7f3
mov esi eax
mov [ ebp + 0x13 ] 0x1
cmp [ edi + 0x484 ] al
jne r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp + 0x13 ]
push eax
push ebx
push [ ebp + 0x8 ]
call sub_47c20d
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
sub_47ca41
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
push edi
lea edi [ ecx + 0x4 ]
fld [ eax ]
mov ecx edi
fstp [ ebp - 0x8 ]
call sub_41feda
mov esi eax
mov ecx esi
call sub_409a20
fld [ ebp - 0x8 ]
mov ecx edi
fstp [ esi ]
mov [ esi + 0xc ] 0x3
call sub_41feda
pop edi
pop esi
mov [ eax + 0x10 ] 0x0
mov esp ebp
pop ebp
retn 0x8
sub_47ca82
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
and [ esi + 0xc ] 0x0
and [ esi + 0x4 ] 0x0
push 0x8
pop edx
cmp eax edx
jb r-xdata
mov [ esi + 0xc ] edx
xor ecx ecx
mov eax edx
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
xor edi edi
mov [ esi + 0x4 ] eax
pop ecx
cmp [ esi + 0x8 ] edi
jbe r-xdata
mov edx eax
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push 0x4
call sub_420f36
mov edx eax
pop ecx
test edx edx
je r-xdata
xor edx edx
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + edi * 4 ]
mov ecx [ ecx ]
mov [ edx ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + edi * 4 ] edx
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_47cb05
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
xor edi edi
push 0x28
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov [ esi ] edi
mov eax esi
pop edi
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
mov ecx eax
call sub_4669fe
mov edi eax
sub_47cb36
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ edx ]
mov [ ecx + 0x4 ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x8 ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0xc ] eax
mov eax [ edx + 0xc ]
mov [ ecx + 0x10 ] eax
inc [ eax ]
mov eax ecx
pop ebp
retn 0x8
sub_47cb60
push esi
mov esi ecx
push edi
xor edi edi
mov [ esi ] r--data
cmp [ esi + 0x8 ] edi
jbe r-xdata
push [ esi + 0x4 ]
and [ esi + 0x8 ] 0x0
call j_sub_422ed5#3
pop ecx
pop edi
pop esi
retn
mov eax [ esi + 0x4 ]
push [ eax + edi * 4 ]
call j_sub_422ed5#3
mov eax [ esi + 0x4 ]
pop ecx
and [ eax + edi * 4 ] 0x0
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_47cbb3
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_47cb60
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422ed5#3
pop ecx
sub_47cbd2
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_47cb9a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_422ed5#3
pop ecx
sub_47cbf1
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x394
push ebx
xor eax eax
cmp [ ebp + 0x10 ] al
push esi
setne al
xor ebx ebx
push edi
mov edi ecx
cwde
mov ecx [ ebp + 0x8 ]
mov [ esp + 0x28 ] eax
shl eax 0x2
mov [ esp + 0x20 ] edi
mov ecx [ ecx + 0x4 ]
sub ecx eax
mov [ esp + 0x38 ] ebx
mov esi [ ecx + 0x4 ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x60 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x64 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x68 ] eax
mov eax [ ecx + 0xc ]
mov ecx [ esp + 0x28 ]
mov [ esp + 0x6c ] eax
add ecx 0xfffffffd
inc [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
add ecx eax
mov eax ecx
mov [ esp + 0x7c ] ecx
cdq
sub eax edx
mov edx eax
sar edx 0x1
mov [ esp + 0x1c ] edx
lea eax [ edx + edx ]
cmp eax ecx
je r-xdata
lea eax [ esp + 0x70 ]
mov [ esp + 0x7c ] edx
push eax
lea eax [ esp + 0x64 ]
mov [ esp + 0x44 ] r--data
push eax
mov [ esp + 0x4c ] ebx
or esi 0xffffffff
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] ebx
call sub_47d8b9
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
mov eax [ edi ]
push ebx
push 0x4
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
push 0x3
pop eax
sub eax [ esp + 0x28 ]
mov [ esp + 0x34 ] eax
mov [ esp + 0x78 ] ebx
mov [ esp + 0x14 ] ebx
cmp [ esp + 0x7c ] ebx
jle r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
mov eax [ edi ]
push ebx
push 0x2
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
lea ecx [ esp + 0x60 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edi [ ebp + 0x8 ]
shl eax 0x2
mov [ esp + 0x18 ] eax
lea ecx [ esp + 0x40 ]
call sub_47cb60
push [ ebp + 0x8 ]
lea eax [ esp + 0x74 ]
mov ecx edi
push eax
call sub_47d9dc
mov [ esp + 0x38 ] eax
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_4687da
mov [ esp + 0x70 ] eax
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor edi edi
inc edi
push ebx
mov [ esi + 0xc ] edi
push edi
mov eax [ esp + 0x30 ]
lea edx [ esp + 0xa8 ]
add edx eax
mov [ esp + 0x2c ] edx
cmp [ edx ] 0x10
jne r-xdata
sub esp 0x10
lea eax [ esp + 0x50 ]
mov ecx esp
push eax
call sub_47ca82
push 0x4
pop eax
sub eax [ esp + 0x38 ]
push eax
push [ ebp + 0x8 ]
lea eax [ esp + 0x88 ]
push eax
call sub_47db64
mov esi [ esp + 0x7c ]
mov eax [ esp + 0x1c ]
mov [ esp + 0x7c ] eax
lea eax [ esp + 0x70 ]
push eax
call sub_420d88
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ esp + 0x7c ] esi
call sub_40942e
mov ecx [ esp + 0x7c ]
xor edi edi
inc ecx
mov esi eax
push ecx
inc edi
mov [ esp + 0x14 ] esi
push edi
push esi
call sub_4091b0
add esp 0xc
cmp [ esp + 0x80 ] edi
jne r-xdata
push 0xffffffff
push 0x67
mov ecx edi
call sub_469ed4
push ebx
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov eax [ esp + eax + 0xb0 ]
add [ esp + 0x78 ] eax
cmp [ esp + eax + 0xac ] ebx
jne r-xdata
cmp [ esp + 0x7c ] 0x0
jle r-xdata
push ebx
push edi
push 0x2
push esi
call sub_408ea0
add esp 0x10
push eax
lea eax [ esp + 0x8c ]
push eax
call sub_47d75d
lea eax [ esp + 0xc ]
inc esi
push eax
lea ecx [ esp + 0x44 ]
mov [ esp + 0x10 ] esi
call sub_46f656
mov eax [ edi + 0x4 ]
mov ecx [ esp + 0x18 ]
mov esi [ ecx + eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov esi [ esp + 0xc ]
mov [ esp + 0xc ] esi
mov eax [ ecx ]
mov [ esp + 0x50 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x54 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x58 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x5c ] eax
inc [ eax ]
imul eax esi 0x18
mov [ esp + 0x30 ] eax
lea eax [ esp + eax + 0xa0 ]
push eax
lea eax [ esp + 0x54 ]
push eax
call sub_47d0f3
test al al
je r-xdata
mov edi [ esp + 0x20 ]
mov ecx [ edi + 0x4 ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x10 ] ecx
mov ecx [ ecx + eax + 0x4 ]
cmp [ ecx + 0xc ] 0xc
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov esi [ esp + 0x34 ]
shl esi 0x2
mov [ esp + 0x14 ] esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
push ebx
mov [ esi + 0xc ] 0x1
push 0x5
jmp r-xdata
call sub_468801
mov ecx [ esp + 0x30 ]
dec eax
shr eax 0x2
add [ esp + 0x1c ] eax
mov [ esp + 0x24 ] eax
inc eax
imul eax [ esp + ecx + 0xb0 ]
mov ecx [ esp + 0x1c ]
add [ esp + 0x78 ] eax
mov eax [ esp + 0x24 ]
sub ecx eax
cmp ecx esi
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x4
jne r-xdata
push eax
lea eax [ esp + 0xa4 ]
add eax ecx
push eax
call sub_47d75d
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + esi + 0x4 ]
cmp [ ecx + 0xc ] 0xc
jne r-xdata
mov edx [ esp + 0x28 ]
mov [ esi ] ebx
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
lea ecx [ esp + 0x50 ]
call sub_405a64
jmp r-xdata
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov ecx [ edi + ecx + 0x4 ]
mov edi [ ebp + 0x8 ]
cmp [ ecx + 0xc ] 0xc
jne r-xdata
imul eax ecx 0x18
lea ebx [ esp + 0xa0 ]
lea edx [ esp + 0xa0 ]
add ebx eax
mov eax [ esp + 0x24 ]
add eax ecx
imul eax eax 0x18
add edx eax
sub ecx esi
mov [ esp + 0x3c ] ecx
mov eax ecx
push [ esp + 0x38 ]
call [ FreeLibrary@IAT ]
lea eax [ ebx + 0x1 ]
push eax
push edi
push 0x2
push [ esp + 0x1c ]
mov [ esp + 0x3c ] eax
call sub_408ea0
mov ecx [ esp + 0x54 ]
add esp 0x10
mov [ esp + 0x34 ] eax
mov ecx [ ecx + ebx * 4 ]
imul ecx [ ecx ] 0x18
cmp [ esp + ecx + 0xa8 ] 0x10
jne r-xdata
call sub_4687da
mov ebx [ esp + 0x34 ]
mov esi eax
mov ecx ebx
call sub_409a20
mov [ ebx ] esi
mov esi [ esp + 0x14 ]
mov [ ebx + 0xc ] 0x7
jmp r-xdata
push ecx
mov ecx eax
call sub_409e9c
jmp r-xdata
mov ecx ebx
mov ecx [ ecx ]
jmp r-xdata
push 0x6
mov esi ebx
mov edi edx
pop ecx
sub ebx 0x18
sub edx 0x18
[ edi ] [ esi ]
dec eax
jne r-xdata
mov esi [ esp + 0xc ]
xor ebx ebx
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x24 ]
mov ebx [ esp + 0x2c ]
add esi 0x8
mov [ esp + 0x14 ] esi
cmp ebx [ esp + 0x7c ]
jl r-xdata
dec esi
jmp r-xdata
mov edi [ esp + 0x30 ]
sub ecx esi
add esi ecx
mov [ esp + 0xc ] esi
mov esi [ esp + 0x10 ]
mov ecx [ ecx + 0x8 ]
mov [ esp + 0x10 ] ecx
lea ecx [ esi + 0x1 ]
add ecx eax
cmp esi ecx
jge r-xdata
add [ esp + 0x18 ] 0x8
lea ecx [ esp + 0x50 ]
call sub_405a64
mov eax [ esp + 0x14 ]
inc eax
mov [ esp + 0x14 ] eax
cmp eax [ esp + 0x7c ]
jl r-xdata
mov eax [ esi ]
lea esi [ esi + 0x4 ]
mov [ edx - 0x8 ] eax
mov [ edx ] 0x10
lea edx [ edx + 0x18 ]
mov [ edx - 0x14 ] ebx
mov eax [ esp + edi + 0xb0 ]
mov [ edx - 0x10 ] eax
dec ecx
jne r-xdata
mov esi [ esp + 0xc ]
mov edi [ ebp + 0x8 ]
sub_47d0f3
push ebp
mov ebp esp
sub esp 0x514
mov eax [ r--data ]
mov [ ebp - 0x510 ] eax
mov eax [ r--data ]
mov [ ebp - 0x50c ] eax
xor eax eax
push ebx
push esi
push edi
push 0x6
pop edx
push 0x4
pop ebx
mov ecx edx
lea edi [ ebp - 0x508 ]
[ edi ]
mov [ ebp - 0x4f0 ] edx
lea edi [ ebp - 0x4e8 ]
mov [ ebp - 0x4ec ] ebx
mov esi r--data
mov ecx edx
push 0x5
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x4de ]
mov esi r--data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
mov eax [ r--data ]
lea edi [ ebp - 0x4b8 ]
mov [ ebp - 0x4c0 ] eax
mov eax [ r--data ]
mov [ ebp - 0x4bc ] eax
xor eax eax
mov [ ebp - 0x4c8 ] 0x7
mov [ ebp - 0x4c4 ] ebx
[ edi ]
mov [ ebp - 0x4a0 ] ebx
lea edi [ ebp - 0x498 ]
mov [ ebp - 0x49c ] ebx
movsd [ edi ] [ esi ]
pop ecx
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x48e ]
mov esi r--data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
xor eax eax
mov [ ebp - 0x478 ] ebx
lea edi [ ebp - 0x470 ]
mov [ ebp - 0x474 ] ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x466 ]
mov esi r--data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
xor eax eax
mov [ ebp - 0x450 ] ecx
lea edi [ ebp - 0x448 ]
mov [ ebp - 0x44c ] ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x43e ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov esi r--data
push 0x3
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
xor eax eax
mov [ ebp - 0x428 ] ebx
lea edi [ ebp - 0x420 ]
mov [ ebp - 0x424 ] ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edi [ ebp - 0x414 ]
mov esi r--data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
xor eax eax
mov [ ebp - 0x400 ] ecx
lea edi [ ebp - 0x3f8 ]
mov [ ebp - 0x3fc ] ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edi [ ebp - 0x3ec ]
mov esi r--data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
xor eax eax
mov [ ebp - 0x3d8 ] ecx
lea edi [ ebp - 0x3d0 ]
mov [ ebp - 0x3d4 ] ebx
movsd [ edi ] [ esi ]
pop ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edi [ ebp - 0x3c4 ]
mov esi r--data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
xor eax eax
mov [ ebp - 0x3b0 ] 0x2
lea edi [ ebp - 0x3a8 ]
mov [ ebp - 0x3ac ] ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x39a ]
mov esi r--data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
xor eax eax
mov [ ebp - 0x388 ] ecx
lea edi [ ebp - 0x380 ]
mov [ ebp - 0x384 ] ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x376 ]
mov esi r--data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
mov [ ebp - 0x360 ] ecx
mov [ ebp - 0x35c ] ebx
xor eax eax
lea edi [ ebp - 0x358 ]
movsd [ edi ] [ esi ]
xor ecx ecx
inc ecx
push 0x8
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x34e ]
mov esi r--data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
xor eax eax
mov [ ebp - 0x338 ] ecx
lea edi [ ebp - 0x330 ]
mov [ ebp - 0x334 ] ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edi [ ebp - 0x324 ]
mov esi r--data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
xor eax eax
mov [ ebp - 0x310 ] ecx
lea edi [ ebp - 0x308 ]
mov [ ebp - 0x30c ] ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edi [ ebp - 0x2f8 ]
mov esi r--data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
xor eax eax
mov [ ebp - 0x2e8 ] ecx
lea edi [ ebp - 0x2e0 ]
mov [ ebp - 0x2e4 ] ebx
mov ecx edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edi [ ebp - 0x2d4 ]
mov esi r--data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
xor eax eax
mov [ ebp - 0x2bc ] ebx
lea edi [ ebp - 0x2b8 ]
mov [ ebp - 0x2c0 ] 0x9
movsd [ edi ] [ esi ]
pop ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x2aa ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
mov eax [ r--data ]
mov [ ebp - 0x290 ] eax
mov eax [ r--data ]
mov [ ebp - 0x28c ] eax
xor eax eax
mov [ ebp - 0x298 ] 0xa
mov [ ebp - 0x294 ] ebx
push 0x4
pop edx
lea edi [ ebp - 0x288 ]
mov esi r--data
[ edi ]
mov [ ebp - 0x26c ] edx
lea edi [ ebp - 0x268 ]
mov [ ebp - 0x270 ] ebx
movsd [ edi ] [ esi ]
push 0xb
pop ecx
push 0xc
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x25e ]
mov esi r--data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
xor eax eax
mov [ ebp - 0x244 ] edx
lea edi [ ebp - 0x240 ]
mov [ ebp - 0x248 ] ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x232 ]
mov esi r--data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
xor eax eax
mov [ ebp - 0x21c ] edx
lea edi [ ebp - 0x218 ]
mov [ ebp - 0x220 ] ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edi [ ebp - 0x208 ]
mov esi r--data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
xor eax eax
mov [ ebp - 0x1f4 ] edx
lea edi [ ebp - 0x1f0 ]
mov [ ebp - 0x1f8 ] ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x1e2 ]
mov esi r--data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
xor eax eax
mov [ ebp - 0x1cc ] edx
lea edi [ ebp - 0x1c8 ]
mov [ ebp - 0x1d0 ] ecx
movsd [ edi ] [ esi ]
pop edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x1ba ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
mov [ ebp - 0x1a8 ] edx
lea edi [ ebp - 0x1a0 ]
mov [ ebp - 0x1a4 ] 0x4
xor eax eax
mov esi r--data
push 0x4
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edi [ ebp - 0x194 ]
mov esi r--data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
xor eax eax
mov [ ebp - 0x17c ] ebx
lea edi [ ebp - 0x178 ]
mov [ ebp - 0x180 ] 0xd
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x16a ]
mov esi r--data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
xor eax eax
mov [ ebp - 0x154 ] ebx
lea edi [ ebp - 0x150 ]
mov [ ebp - 0x158 ] 0xe
movsd [ edi ] [ esi ]
pop ebx
push 0x5
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edi [ ebp - 0x140 ]
mov esi r--data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
xor eax eax
mov [ ebp - 0x130 ] ecx
lea edi [ ebp - 0x128 ]
mov [ ebp - 0x12c ] ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x116 ]
mov esi r--data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
xor eax eax
mov [ ebp - 0x108 ] edx
lea edi [ ebp - 0x100 ]
mov [ ebp - 0x104 ] ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0xee ]
mov esi r--data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
mov [ ebp - 0xe0 ] ecx
lea edi [ ebp - 0xd8 ]
mov [ ebp - 0xdc ] ebx
pop ecx
[ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0xc4 ]
stosd [ edi ]
mov esi r--data
push 0x5
pop ecx
push 0x5
stosd [ edi ]
stosd [ edi ]
xor eax eax
mov [ ebp - 0xb4 ] ebx
lea edi [ ebp - 0xb0 ]
mov [ ebp - 0xb8 ] edx
[ edi ] [ esi ]
lea edi [ ebp - 0x9c ]
mov esi r--data
stosd [ edi ]
pop ecx
push 0x7
stosd [ edi ]
stosd [ edi ]
xor eax eax
mov [ ebp - 0x8c ] ebx
lea edi [ ebp - 0x88 ]
mov [ ebp - 0x90 ] edx
[ edi ] [ esi ]
lea edi [ ebp - 0x74 ]
mov esi r--data
stosd [ edi ]
pop ecx
stosd [ edi ]
stosd [ edi ]
xor eax eax
mov [ ebp - 0x64 ] ebx
lea edi [ ebp - 0x60 ]
mov [ ebp - 0x68 ] 0xf
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x52 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
xor eax eax
mov [ ebp - 0x3c ] ebx
lea edi [ ebp - 0x36 ]
mov [ ebp - 0x40 ] 0x10
xor ebx ebx
mov [ ebp - 0x38 ] ax
mov esi ebx
[ edi ]
lea ecx [ ebp - 0x10 ]
stosw [ edi ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
call sub_4077c7
mov edi [ ebp + 0xc ]
push 0x3b
mov [ edi + 0xc ] ebx
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
mov [ edi + 0x14 ] ebx
mov ebx [ ebp + 0x8 ]
mov [ edi + 0x8 ] 0x4
pop edi
mov edi [ ebp + 0xc ]
test esi esi
je r-xdata
push esi
mov ecx ebx
call sub_407b52
cmp [ eax ] di
je r-xdata
xor eax eax
mov bl al
push esi
push ecx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_4079ab
push esi
mov ecx ebx
call sub_407b52
push 0x3b
pop ecx
cmp [ eax ] cx
mov ecx ebx
jne r-xdata
xor ecx ecx
inc esi
jmp r-xdata
push esi
lea eax [ esi + 0x1 ]
push eax
jmp r-xdata
push esi
mov ecx ebx
call sub_407b52
xor ecx ecx
cmp [ eax ] cx
je r-xdata
xor ecx ecx
xor ebx ebx
mov [ edi + 0xc ] ecx
inc ebx
lea esi [ eax - 0x1 ]
push esi
lea ecx [ ebp - 0x10 ]
call sub_407b52
cmp [ eax ] 0x2a
jne r-xdata
push 0x0
call sub_407e8c
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push [ ebp - 0x10 ]
push eax
call sub_42307d
pop ecx
pop ecx
test eax eax
je r-xdata
xor ebx ebx
lea ecx [ ebp - 0x10 ]
inc ebx
push ebx
push esi
mov [ edi + 0xc ] ebx
call sub_407e8c
xor ecx ecx
jmp r-xdata
imul ecx esi 0x28
mov eax [ ebp + ecx - 0x4f0 ]
mov [ edi + 0x8 ] eax
cmp [ edi + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0xc ]
add eax 0x28
inc esi
push 0x0
mov [ ebp + 0xc ] eax
pop ecx
jns r-xdata
lea eax [ ebp - 0x510 ]
mov esi ecx
mov [ ebp + 0xc ] eax
mov eax [ ebp + ecx - 0x4ec ]
mov [ edi + 0x10 ] eax
mov [ edi + 0x10 ] 0x4
jmp r-xdata
cmp [ eax ] cx
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405a64
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
jns r-xdata
sub_47d75d
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov eax [ ebx + 0x8 ]
cmp eax 0xf
ja r-xdata
cmp [ ebx + 0x14 ] 0x0
je r-xdata
jmp [ eax * 4 + jump_table_47d879 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebx + 0x14 ]
call sub_422ed5
pop ecx
mov ecx [ ebx ]
or edx 0xffffffff
call sub_465543
mov ecx [ ebp + 0xc ]
mov esi eax
push esi
call sub_409bf8
push esi
call j_sub_422ed5#3
pop ecx
jmp r-xdata
push [ ebx ]
mov ecx [ ebp + 0xc ]
call sub_409bf8
jmp r-xdata
mov edi [ ebx ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi [ ebx ]
call sub_409a20
and [ esi + 0x4 ] 0x0
mov [ esi + 0xc ] 0x2
mov [ esi ] edi
jmp r-xdata
movsx edi [ ebx ]
jmp r-xdata
movzx edi [ ebx ]
jmp r-xdata
movzx edi [ ebx ]
jmp r-xdata
fld [ ebx ]
fld [ ebx ]
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi [ ebx ]
call sub_409a20
mov [ esi + 0xc ] 0x7
jmp r-xdata
mov edi [ ebx ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov ebx [ ebx + 0x4 ]
call sub_409a20
mov [ esi + 0x4 ] ebx
mov ebx [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x2
mov [ esi ] edi
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x9
pop eax
mov [ ebp - 0x18 ] ax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x18 ]
push eax
call sub_46760b
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov esi [ ebp + 0xc ]
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
jmp r-xdata
mov [ esi ] edi
jmp r-xdata
sub_47d8b9
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ebp + 0xc ]
mov ecx esi
mov [ edi + 0x4 ] ebx
call sub_407faf
push [ esi + 0x4 ]
push [ esi ]
call [ CharLowerBuffW@IAT ]
push 0xffffffff
push 0xffffffff
push 0xffffffff
push 0x1
push 0x1
push r--data
mov ecx esi
call sub_45f479
mov [ ebp + 0xc ] eax
test eax eax
je r-xdata
mov [ edi + 0x10 ] 0x1
mov eax [ esi ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0xc ]
mov [ ebp - 0x4 ] eax
inc [ eax ]
lea eax [ edi + 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_47d0f3
test al al
jne r-xdata
cmp eax [ esi + 0x4 ]
jae r-xdata
mov bl 0x1
mov edx r--data
mov ecx esi
call sub_420c63
test al al
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4077c7
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0xc ]
sub eax ecx
dec eax
push eax
lea eax [ ecx + 0x1 ]
push eax
push esi
lea ecx [ ebp - 0x10 ]
call sub_4079ab
push 0xffffffff
push [ ebp + 0xc ]
mov ecx esi
call sub_407e8c
mov edx r--data
lea ecx [ ebp - 0x10 ]
call sub_420c63
test al al
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405a64
mov al bl
mov [ edi + 0x10 ] ebx
mov edx r--data
lea ecx [ ebp - 0x10 ]
call sub_420c63
test al al
jne r-xdata
mov [ edi + 0x4 ] 0x1
jmp r-xdata
mov [ edi + 0x4 ] ebx
mov edx r--data
lea ecx [ ebp - 0x10 ]
call sub_420c63
test al al
jne r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405a64
lea ecx [ ebp - 0x10 ]
call sub_405a64
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47d9dc
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
mov edi ecx
mov [ ebp - 0xc ] edi
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
mov edx [ esi + 0x8 ]
xor ebx ebx
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] bl
mov eax [ edx ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x10 ] eax
inc [ eax ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
mov ecx eax
mov [ ebp - 0x8 ] eax
cmp [ eax + 0xc ] 0x4
jne r-xdata
call sub_409c9c
test eax eax
jle r-xdata
call sub_409997
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x8 ]
push [ eax ]
call [ LoadLibraryW@IAT ]
mov esi eax
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov esi ebx
mov eax [ esi + 0x4 ]
mov esi [ edi + 0x1a8 ]
mov ecx [ eax ]
call sub_409c9c
cmp eax esi
jg r-xdata
test esi esi
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0xc ] 0x4
jne r-xdata
mov eax [ edi ]
push ebx
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
mov ecx [ edi + 0x1a4 ]
mov eax [ ecx + eax * 4 - 0x4 ]
mov esi [ eax ]
jmp r-xdata
call sub_409c9c
push eax
push esi
call [ GetProcAddress@IAT ]
mov edi [ ebp + 0x8 ]
mov [ edi ] eax
lea ecx [ ebp - 0x2c ]
call sub_405c18
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_405b75
push [ ebp - 0x2c ]
push esi
call [ GetProcAddress@IAT ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
mov [ edi ] eax
call sub_405a64
jmp r-xdata
call sub_456883
jmp r-xdata
mov ebx esi
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0xc ] 0x4
jne r-xdata
cmp [ edi ] ebx
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_405a64
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ edi ] ebx
jne r-xdata
push 0x41
lea ecx [ ebp - 0x1c ]
call sub_407a84
lea ecx [ ebp - 0x2c ]
call sub_405c18
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_405b75
push [ ebp - 0x2c ]
push esi
call [ GetProcAddress@IAT ]
lea ecx [ ebp - 0x2c ]
mov [ edi ] eax
call sub_405a64
cmp [ ebp - 0x1 ] bl
je r-xdata
mov edx [ ebp - 0xc ]
push ebx
push 0x3
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
push esi
call [ FreeLibrary@IAT ]
sub_47db64
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx eax
mov [ ebp - 0x8 ] eax
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] eax
mov [ ebx + 0x2c ] eax
cmp [ ebx + 0xc ] eax
jle r-xdata
lea ecx [ ebp + 0x14 ]
call sub_47cb60
pop ebx
mov esp ebp
pop ebp
retn 0x1c
push esi
push edi
mov edi [ ebp + 0x10 ]
shl edi 0x2
mov [ ebp + 0x8 ] edi
xor eax eax
mov [ ecx + ebx + 0x44 ] eax
cmp edx 0x10
ja r-xdata
lea eax [ esi + 0x2 ]
imul eax eax 0x18
and [ eax + ebx ] 0x0
mov ecx [ ebp - 0x8 ]
add edi 0x8
inc ecx
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] ecx
cmp ecx [ ebx + 0xc ]
jl r-xdata
jmp [ edx * 4 + jump_table_47de10 ]
mov eax [ ebp + 0x18 ]
mov eax [ eax + ecx * 4 ]
mov esi [ eax ]
imul ecx esi 0x18
mov [ ebp + 0x10 ] esi
mov [ ebp - 0x4 ] ecx
mov edx [ ecx + ebx + 0x38 ]
cmp edx 0x10
je r-xdata
pop edi
pop esi
mov eax [ ebp + 0xc ]
push 0x2a
mov eax [ eax + 0x4 ]
mov eax [ edi + eax ]
mov ecx eax
mov [ ebp - 0xc ] eax
call sub_409dae
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
push 0x2a
mov eax [ eax + 0x4 ]
mov eax [ edi + eax ]
mov ecx eax
mov [ ebp - 0xc ] eax
call sub_409dae
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ edi + eax ]
call sub_409c9c
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ edi + eax ]
call sub_409d46
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ edi + eax ]
call sub_409c9c
lea ecx [ esi + 0x2 ]
imul ecx ecx 0x18
mov [ ecx + ebx ] ax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ edi + eax ]
call sub_409c9c
lea ecx [ esi + 0x2 ]
imul ecx ecx 0x18
mov [ ecx + ebx ] al
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ edi + eax ]
call sub_409cf8
lea eax [ esi + 0x2 ]
imul eax eax 0x18
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ eax + ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ edi + eax ]
call sub_409cf8
lea eax [ esi + 0x2 ]
imul eax eax 0x18
fstp [ eax + ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ edi + eax ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ edi + eax ]
call sub_409d46
lea ecx [ esi + 0x2 ]
imul ecx ecx 0x18
mov [ ecx + ebx + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov edx [ edi + eax ]
mov ecx edx
call sub_4093dd
test al al
je r-xdata
cmp [ ecx + ebx + 0x3c ] eax
je r-xdata
lea eax [ esi + 0x2 ]
imul eax eax 0x18
and [ eax + ebx ] 0x0
jmp r-xdata
mov esi [ ebp - 0xc ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push [ eax ]
call sub_422d7c
pop ecx
mov ecx 0x10000
cmp eax ecx
jae r-xdata
mov esi [ ebp - 0xc ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push [ eax ]
call sub_422d7c
pop ecx
mov ecx 0x10000
cmp eax ecx
jae r-xdata
lea ecx [ esi + 0x2 ]
imul ecx ecx 0x18
mov [ ecx + ebx ] eax
cmp [ edx + 0xc ] 0x8
jne r-xdata
mov [ ecx + ebx + 0x3c ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ edi + eax ]
cmp [ ecx + 0xc ] 0xc
jne r-xdata
inc eax
push eax
call sub_42588c
mov esi [ ebp + 0x8 ]
mov edi eax
mov eax [ ebp + 0xc ]
pop ecx
mov ecx [ eax + 0x4 ]
mov esi [ esi + ecx ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
or edx 0xffffffff
mov ecx [ ecx ]
call sub_46592e
mov esi eax
push esi
push edi
call sub_4244b0
push esi
call j_sub_422ed5#3
add esp 0xc
mov eax ecx
lea eax [ eax * 2 + 0x2 ]
push eax
call sub_42588c
mov esi [ ebp + 0x8 ]
mov edi eax
mov eax [ ebp + 0xc ]
pop ecx
mov ecx [ eax + 0x4 ]
mov esi [ esi + ecx ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
push [ ecx ]
push edi
call sub_422f3c
pop ecx
pop ecx
jmp r-xdata
mov eax ecx
xor edx edx
mov edx [ edx ]
jmp r-xdata
call sub_4687da
mov edx [ ecx ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
add eax 0x2
imul eax eax 0x18
mov [ eax + ebx ] edi
mov eax [ ebp - 0x4 ]
mov [ eax + ebx + 0x44 ] edi
mov edi [ ebp + 0x8 ]
jmp r-xdata
lea eax [ esi + 0x2 ]
imul ecx eax 0x18
mov eax [ edx + 0x8 ]
jmp r-xdata
sub_47de5d
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
cmp [ rw-data ] 0x1
push ebx
push esi
push edi
jne r-xdata
mov esi [ ebp + 0x8 ]
mov ecx rw-data
mov bl [ rw-data ]
mov [ rw-data ] 0x1
mov [ esp + 0x13 ] bl
mov eax [ esi + 0x4 ]
push [ eax ]
call sub_409fbd
mov [ esp + 0x14 ] eax
mov cl [ eax + 0x20 ]
mov [ rw-data ] cl
push [ eax + 0x10 ]
call sub_408561
xor eax eax
mov [ esp + 0x24 ] 0x1
mov edi eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x20 ] eax
cmp [ esi + 0x1c ] eax
jle r-xdata
xor eax eax
xor edx edx
jmp r-xdata
lea eax [ esp + 0x18 ]
mov ecx rw-data
push eax
mov eax [ esp + 0x18 ]
push 0x0
mov eax [ eax + 0x10 ]
inc eax
push eax
call sub_40b89c
mov ecx rw-data
call sub_40843f
mov eax [ esi + 0x30 ]
lea ecx [ esp + 0x18 ]
sub eax 0x9
je r-xdata
lea ebx [ esi + 0x40 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_409cf8
fstp [ rw-data ]
mov edi [ rw-data ]
mov esi [ rw-data ]
dec eax
je r-xdata
lea eax [ esp + 0x18 ]
push eax
push ebx
call sub_47d75d
push 0x1
push 0x200
lea eax [ esp + 0x20 ]
push eax
mov eax [ esi + 0x4 ]
push [ eax + edi * 4 + 0x4 ]
call sub_408620
inc edi
add ebx 0x18
cmp edi [ esi + 0x1c ]
jl r-xdata
mov bl [ esp + 0x13 ]
call sub_409d46
mov esi eax
mov edi edx
jmp r-xdata
lea ecx [ esp + 0x18 ]
mov [ rw-data ] 0x0
mov [ rw-data ] bl
call sub_409a20
mov eax esi
mov edx edi
sub_47df77
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_409fbd
mov esi eax
test esi esi
jne r-xdata
mov eax [ esi + 0x18 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
xor al al
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_403f84
push [ esi + 0x10 ]
call sub_4071c8
cmp [ esi + 0x20 ] 0x0
push 0x3
mov [ ebp + 0x8 ] eax
pop edi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor ebx ebx
cmp [ esi + 0x14 ] ebx
jle r-xdata
push 0x4
pop edi
mov al 0x1
shl edi 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ edi + eax ]
cmp [ eax + 0x8 ] 0x33
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi ]
cmp [ eax + 0x8 ] 0x40
jne r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405a64
jmp r-xdata
push [ eax ]
lea ecx [ ebp - 0x10 ]
call sub_4081a7
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_403f84
lea ecx [ ebp - 0x10 ]
add edi 0x4
call sub_405a64
inc ebx
cmp ebx [ esi + 0x14 ]
jl r-xdata
add edi 0x4
lea ecx [ ebp - 0x10 ]
call sub_4077c7
test ebx ebx
je r-xdata
sub_47e05f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
mov esi eax
dec esi
js r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
cmp esi [ edi + 0x1b8 ]
jge r-xdata
mov eax [ edi + 0x1b4 ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
push 0x8000
push 0x0
push [ eax + 0x10 ]
call [ VirtualFree@IAT ]
mov eax [ edi + 0x1b4 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ edi + 0x1b4 ]
mov eax [ eax + esi * 4 ]
and [ eax ] 0x0
jmp r-xdata
push ecx
call sub_469cad
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
sub_47e0de
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
test eax eax
jle r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
cmp eax [ esi + 0x1b8 ]
jg r-xdata
mov ecx [ esi + 0x1b4 ]
mov esi [ ebp + 0xc ]
push edi
mov eax [ ecx + eax * 4 - 0x4 ]
mov ecx esi
mov eax [ eax ]
mov edi [ eax + 0x10 ]
call sub_409a20
mov [ esi ] edi
mov [ esi + 0xc ] 0x7
pop edi
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
sub_47e13e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x5c
push ebx
push esi
push edi
xor esi esi
mov [ esp + 0x1c ] ecx
push 0x340
mov [ esp + 0x28 ] esi
call sub_420f36
mov ebx eax
mov [ esp + 0x18 ] ebx
pop ecx
test ebx ebx
je r-xdata
mov ebx esi
mov [ esp + 0x14 ] ebx
mov [ ebx ] r--data
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] esi
mov [ ebx + 0xc ] esi
jmp r-xdata
cmp ecx esi
jne r-xdata
mov edx [ edi + 0x1b4 ]
mov eax [ ebp + 0x8 ]
lea ecx [ ebx + 0x10 ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x10 ] ebx
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x38 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x3c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x40 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x38 ]
mov [ esp + 0x44 ] eax
inc [ eax ]
call sub_407faf
push [ esp + 0x3c ]
mov edi [ CharLowerBuffW@IAT ]
push [ esp + 0x3c ]
call edi
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x28 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x2c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x30 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x28 ]
mov [ esp + 0x34 ] eax
inc [ eax ]
call sub_407faf
push [ esp + 0x2c ]
push [ esp + 0x2c ]
call edi
mov edi [ esp + 0x1c ]
xor eax eax
mov ecx eax
mov [ esp + 0x24 ] eax
mov esi [ edi + 0x1b8 ]
test esi esi
je r-xdata
mov eax [ edi + 0x1b4 ]
mov eax [ eax + ecx * 4 ]
mov [ eax ] ebx
lea eax [ esp + 0x10 ]
push eax
lea ecx [ edi + 0x1b0 ]
call sub_46f656
mov ebx [ esp + 0x10 ]
mov [ esp + 0x14 ] ebx
jmp r-xdata
mov [ esp + 0x24 ] ecx
inc ecx
add edx 0x4
cmp ecx esi
jb r-xdata
push 0x2
pop eax
mov [ esp + 0x10 ] eax
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x48 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x4c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x50 ] eax
mov eax [ ecx + 0xc ]
mov [ esp + 0x54 ] eax
inc [ eax ]
lea eax [ esp + 0x48 ]
xor eax eax
inc eax
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x58 ]
push eax
call sub_4679c3
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
cmp [ esi + 0xc ] 0xe
jne r-xdata
mov eax [ edx ]
cmp [ eax ] 0x0
je r-xdata
test al 0x1
je r-xdata
and eax 0xfffffffd
lea ecx [ esp + 0x48 ]
mov [ esp + 0x10 ] eax
call sub_405a64
mov eax [ esp + 0x10 ]
push ebx
push eax
mov ecx edi
call sub_47df77
neg al
sbb al al
inc al
mov [ esp + 0xf ] al
mov eax [ esp + 0x10 ]
test al 0x2
je r-xdata
cmp [ esp + 0xf ] 0x0
je r-xdata
lea ecx [ esp + 0x58 ]
call sub_405a64
mov esi [ esp + 0x18 ]
lea eax [ esp + 0x38 ]
push esi
push eax
call sub_47d8b9
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor eax eax
push eax
push 0x3
jmp r-xdata
xor eax eax
xor ebx ebx
mov esi eax
mov edi eax
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor ecx ecx
inc ecx
xor eax eax
push eax
mov [ esi + 0xc ] ecx
push ecx
jmp r-xdata
mov [ esi + 0xc ] 0x1
cmp [ esp + 0x2c ] 0x1
mov ebx [ esp + 0x14 ]
mov [ esp + 0x20 ] esi
mov esi [ esp + 0x18 ]
mov [ esp + 0x10 ] edi
mov edi [ esp + 0x1c ]
jbe r-xdata
push esi
lea ecx [ esp + 0x2c ]
call sub_407b52
push 0x3b
pop ecx
inc esi
cmp [ eax ] cx
jne r-xdata
mov [ esi ] eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_405a64
lea ecx [ esp + 0x38 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esp + 0x10 ]
mov eax [ esp + 0x20 ]
lea ecx [ esp + 0x28 ]
dec eax
push eax
call sub_407b52
push 0x3b
pop ecx
cmp [ eax ] cx
mov eax [ esp + 0x10 ]
je r-xdata
push esi
lea ecx [ esp + 0x2c ]
call sub_407b52
cmp [ eax ] bx
je r-xdata
inc edi
jmp r-xdata
push 0x40
mov esi sub_420ee5
xor eax eax
push 0x3000
sub esi sub_420e6e
push esi
push eax
call [ VirtualAlloc@IAT ]
push esi
mov esi eax
mov [ esp + 0x24 ] eax
push sub_420e6e
push esi
call sub_420fc0
mov ecx [ edi + 0x1b4 ]
add esp 0xc
mov edi [ esp + 0x24 ]
mov ecx [ ecx + edi * 4 ]
mov ecx [ ecx ]
mov [ ecx + 0x10 ] esi
sub esi sub_420e6e
mov ecx [ esp + 0x18 ]
mov eax esi
add eax r-xdata
mov [ eax + 0x1 ] sub_47de54
mov eax esi
add eax r-xdata
mov [ eax + 0x1 ] ebx
mov eax esi
add eax r-xdata
add esi r-xdata
mov [ eax + 0x1 ] ecx
xor eax eax
cmp [ ecx + 0xc ] eax
je r-xdata
lea ecx [ esi + 0x40 ]
mov [ esp + 0x1c ] ecx
xor ecx ecx
mov [ esi + 0xc ] eax
mov [ esi + 0x8 ] ecx
mov [ esp + 0x20 ] ecx
test eax eax
jle r-xdata
inc eax
mov [ esp + 0x10 ] eax
jmp r-xdata
mov [ esi ] 0xc3
cmp [ ecx + 0x4 ] 0x1
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor eax eax
push eax
push 0x2
mov ecx [ esp + 0x1c ]
mov eax [ ecx ]
add ecx 0x18
add [ esi + 0x8 ] eax
mov eax [ esp + 0x20 ]
inc eax
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] eax
cmp eax [ esp + 0x10 ]
jl r-xdata
mov [ esi ] 0xc2
mov ax [ ecx + 0x8 ]
mov [ esi + 0x1 ] ax
jmp r-xdata
lea eax [ ecx - 0x10 ]
push eax
lea eax [ esp + 0x2c ]
push eax
call sub_47d0f3
test al al
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
lea eax [ edi + 0x1 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
sub_47e4ea
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
mov esi eax
dec esi
js r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
cmp esi [ edi + 0x1a8 ]
jge r-xdata
mov eax [ edi + 0x1a4 ]
mov eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
push [ eax ]
call [ FreeLibrary@IAT ]
mov eax [ edi + 0x1a4 ]
mov eax [ eax + esi * 4 ]
and [ eax ] 0x0
jmp r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
sub_47e54b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov ebx ecx
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push [ eax ]
call [ LoadLibraryW@IAT ]
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
jne r-xdata
mov ecx [ ebx + 0x1a8 ]
push edi
xor edi edi
test ecx ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
or [ esi ] 0xffffffff
jmp r-xdata
cmp edi ecx
jne r-xdata
mov edx [ ebx + 0x1a4 ]
mov [ esi + 0xc ] 0x1
xor eax eax
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x1a4 ]
mov eax [ eax + edi * 4 ]
mov [ eax ] esi
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebx + 0x1a0 ]
call sub_46f656
jmp r-xdata
inc edi
add edx 0x4
cmp edi ecx
jb r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
lea eax [ edi + 0x1 ]
mov [ esi ] eax
pop edi
mov eax [ edx ]
cmp [ eax ] 0x0
je r-xdata
sub_47e5e5
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi ecx
cmp [ esi + 0x8 ] 0x1
jbe r-xdata
mov ecx [ esi + 0x4 ]
and [ ebp + 0x8 ] 0x0
mov esi [ ecx ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
sub esp 0x10
mov esi [ ebp + 0xc ]
mov edx esp
mov eax [ ecx ]
mov [ edx ] eax
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ecx + 0x8 ]
mov [ edx + 0x8 ] eax
mov eax [ ecx + 0xc ]
mov ecx esi
mov [ edx + 0xc ] eax
push ebx
inc [ eax ]
lea eax [ ebp + 0x8 ]
push eax
call sub_4677d2
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_4687da
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ecx esi
call sub_409a20
and [ esi ] 0x0
push 0x0
push [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_4687da
mov ebx eax
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] ebx
push ebx
push 0x3
jmp r-xdata
mov [ esi + 0xc ] 0x1
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
sub_47e693
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
cmp [ eax + 0xc ] 0xc
je r-xdata
or [ esp + 0xc ] 0xffffffff
cmp [ edi + 0x8 ] 0x3
jb r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ edi + 0x4 ]
lea ecx [ esp + 0x10 ]
and [ esp + 0x18 ] 0x0
push [ eax + 0x4 ]
call sub_409ac0
cmp [ esp + 0x1c ] 0x4
je r-xdata
mov esi [ ecx + 0x8 ]
mov ecx esi
push 0x29
call sub_409dae
test al al
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0xc
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_409c9c
lea ecx [ esp + 0x10 ]
lea esi [ eax - 0x1 ]
call sub_409a20
mov [ esp + 0x1c ] 0x1
mov [ esp + 0x10 ] esi
mov ecx esi
call sub_409c9c
mov esi eax
dec esi
mov [ esp + 0xc ] esi
jns r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
push 0x0
mov [ esi + 0xc ] 0x1
push 0x5
jmp r-xdata
push 0x0
push ecx
push [ esp + 0x14 ]
lea eax [ esp + 0x1c ]
push [ ebp + 0xc ]
push eax
call sub_4662ea
pop ecx
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
lea ecx [ esp + 0x10 ]
call sub_409a20
and [ esi ] 0x0
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp r-xdata
sub_47e79b
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edx [ ebx + 0x4 ]
mov eax [ edx ]
cmp [ eax + 0xc ] 0xc
je r-xdata
cmp [ ebx + 0x8 ] 0x2
jb r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov edx [ ebp - 0x4 ]
xor eax eax
xor edi edi
inc eax
push edi
mov [ esi + 0xc ] eax
mov [ esi ] edi
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
jmp r-xdata
cmp [ eax + 0xc ] 0xc
jne r-xdata
push [ edx + 0x4 ]
xor edi edi
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] edi
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x10 ] edi
call sub_409ac0
cmp [ ebp - 0xc ] 0x4
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor edi edi
mov edi [ eax ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0xc
jne r-xdata
lea ecx [ ebp - 0x18 ]
call sub_409c9c
lea ecx [ ebp - 0x18 ]
lea esi [ eax - 0x1 ]
call sub_409a20
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x18 ] esi
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi [ edi + 0x8 ]
call sub_409a20
mov [ esi + 0xc ] 0x7
mov [ esi ] edi
mov ecx edi
mov ecx [ eax ]
jmp r-xdata
mov [ esi + 0xc ] 0x7
mov [ esi ] ebx
mov edx [ ebp - 0x4 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
push edi
mov eax [ edx ]
push [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
jmp r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_466223
mov esi [ ebp + 0xc ]
mov ebx eax
mov ecx esi
call sub_409a20
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x18 ]
call sub_409a20
jmp r-xdata
sub_47e8b2
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov eax [ eax + 0x4 ]
mov edi ecx
mov ecx esi
mov eax [ eax ]
cmp [ eax + 0xc ] 0xc
je r-xdata
mov edi [ eax ]
mov edi [ edi + 0xc ]
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
call sub_409a20
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
sub_47e906
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
cmp [ eax + 0xc ] 0xc
je r-xdata
or [ esp + 0xc ] 0xffffffff
cmp [ ebx + 0x8 ] 0x4
jb r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ ebx + 0x4 ]
lea ecx [ esp + 0x10 ]
and [ esp + 0x18 ] 0x0
push [ eax + 0x4 ]
call sub_409ac0
cmp [ esp + 0x1c ] 0x4
je r-xdata
mov esi [ ecx + 0xc ]
mov ecx esi
push 0x29
call sub_409dae
test al al
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0xc
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_409c9c
lea ecx [ esp + 0x10 ]
lea esi [ eax - 0x1 ]
call sub_409a20
mov [ esp + 0x1c ] 0x1
mov [ esp + 0x10 ] esi
mov ecx esi
call sub_409c9c
mov esi eax
dec esi
mov [ esp + 0xc ] esi
jns r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
push 0x0
mov [ esi + 0xc ] 0x1
push 0x5
jmp r-xdata
push [ esp + 0xc ]
lea eax [ esp + 0x14 ]
push 0x1
push [ ebp + 0xc ]
push edx
push eax
call sub_466306
push 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
lea ecx [ esp + 0x10 ]
call sub_409a20
and [ esi ] 0x0
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
sub_47ea12
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] 0x6
jne r-xdata
cmp [ eax + 0xc ] 0xc
je r-xdata
mov eax [ eax ]
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
pop esi
sub_47ea47
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
mov edi ecx
xor ebx ebx
mov [ esp + 0x13 ] bl
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea eax [ esp + 0x13 ]
push eax
lea edx [ esp + 0x18 ]
call sub_463c99
pop ecx
test al al
jne r-xdata
cmp [ esp + 0x13 ] bl
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
mov eax [ edi ]
push ebx
push 0x4
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
push [ esp + 0x14 ]
push ebx
push 0x1
call [ OpenProcess@IAT ]
mov ebx [ ebp + 0xc ]
mov esi eax
test esi esi
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x0
push esi
call [ TerminateProcess@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x5
jne r-xdata
push esi
call [ CloseHandle@IAT ]
jmp r-xdata
push eax
call [ GetLastError@IAT ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
mov eax [ edi ]
push 0x0
push 0x3
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov ecx ebx
call sub_409a20
and [ ebx ] 0x0
mov [ ebx + 0xc ] 0x1
push 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
mov eax [ edi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov ecx ebx
call sub_409a20
and [ ebx ] 0x0
mov [ ebx + 0xc ] 0x1
push r--data
lea ecx [ esp + 0x1c ]
call sub_4635f1
push ecx
lea ecx [ esp + 0x1c ]
call sub_458aa3
test al al
je r-xdata
mov eax [ edi ]
push 0x0
push 0x5
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
mov eax [ edi ]
push 0x0
push 0x2
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov ecx ebx
call sub_409a20
and [ ebx ] 0x0
mov [ ebx + 0xc ] 0x1
push [ esp + 0x14 ]
push 0x0
push 0x1
call [ OpenProcess@IAT ]
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
lea ecx [ esp + 0x18 ]
call sub_4584f3
jmp r-xdata
sub_47ebdd
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
mov edi ecx
xor ebx ebx
mov [ ebp - 0x1 ] bl
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
lea edx [ ebp + 0x8 ]
call sub_463c99
mov esi [ ebp + 0xc ]
pop ecx
mov ecx esi
test al al
jne r-xdata
call sub_409a20
cmp [ ebp - 0x1 ] bl
je r-xdata
call sub_409a20
xor eax eax
mov [ esi ] ebx
inc eax
push ebx
mov [ esi + 0xc ] eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x3
fild [ ebp + 0x8 ]
test eax eax
jns r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
fstp [ esi ]
jmp r-xdata
fadd [ r--data ]
sub_47ec69
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov ecx ebx
mov eax [ esi + 0x8 ]
mov [ esp + 0x10 ] eax
call sub_409a20
and [ ebx ] 0x0
xor ecx ecx
mov eax [ esp + 0x10 ]
inc ecx
mov [ ebx + 0xc ] ecx
xor ebx ebx
cmp eax ecx
jbe r-xdata
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov ebx eax
mov eax [ esp + 0x10 ]
call [ GetCurrentProcessId@IAT ]
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
call sub_409c9c
cmp eax 0xffffffff
je r-xdata
push esi
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
sub ebx esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea eax [ esp + 0xf ]
push eax
lea edx [ esp + 0x14 ]
call sub_463c99
cmp [ esp + 0x13 ] 0x0
pop ecx
jne r-xdata
push 0x28
lea ecx [ esp + 0x1c ]
push ecx
push eax
call [ GetProcessMemoryInfo@IAT ]
test eax eax
jne r-xdata
dec ebx
jne r-xdata
mov eax [ esp + 0x10 ]
jmp r-xdata
push 0x0
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_40942e
push 0x2
mov ebx eax
push 0x1
push ebx
call sub_4091b0
mov edi [ esp + 0x30 ]
push esi
push 0x1
push 0x2
push ebx
call sub_408ea0
add esp 0x1c
mov esi eax
mov ecx esi
call sub_409a20
and [ esi + 0x4 ] 0x0
push 0x2
pop eax
push 0x1
push 0x1
push eax
mov [ esi + 0xc ] eax
mov [ esi ] edi
mov edi [ esp + 0x2c ]
push ebx
call sub_408ea0
add esp 0x10
mov esi eax
mov ecx esi
call sub_409a20
and [ esi + 0x4 ] 0x0
mov eax [ edi ]
push esi
push 0x2
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push eax
call [ GetProcessIoCounters@IAT ]
test eax eax
je r-xdata
push eax
xor esi esi
push esi
push 0x410
call [ OpenProcess@IAT ]
mov [ esp + 0x14 ] eax
test eax eax
je r-xdata
mov eax [ edi ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ esp + 0x14 ]
call [ CloseHandle@IAT ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_40942e
push 0x6
mov esi eax
push 0x1
push esi
mov [ esp + 0x1c ] esi
call sub_4091b0
mov edi [ esp + 0x24 ]
mov ebx [ esp + 0x28 ]
push 0x0
push 0x1
push 0x2
push esi
call sub_408ea0
add esp 0x1c
mov esi eax
mov ecx esi
call sub_409a20
push 0x2
pop eax
push 0x1
push 0x1
push eax
push [ esp + 0x1c ]
mov [ esi + 0xc ] eax
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
mov edi [ esp + 0x30 ]
mov ebx [ esp + 0x34 ]
call sub_408ea0
add esp 0x10
mov esi eax
mov ecx esi
call sub_409a20
push 0x2
pop eax
push eax
push 0x1
push eax
push [ esp + 0x1c ]
mov [ esi + 0xc ] eax
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
mov edi [ esp + 0x38 ]
mov ebx [ esp + 0x3c ]
call sub_408ea0
add esp 0x10
mov esi eax
mov ecx esi
call sub_409a20
push 0x2
pop eax
push 0x3
push 0x1
push eax
push [ esp + 0x1c ]
mov [ esi + 0xc ] eax
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
mov edi [ esp + 0x40 ]
mov ebx [ esp + 0x44 ]
call sub_408ea0
add esp 0x10
mov esi eax
mov ecx esi
call sub_409a20
push 0x2
pop eax
push 0x4
push 0x1
push eax
push [ esp + 0x1c ]
mov [ esi + 0xc ] eax
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
mov edi [ esp + 0x48 ]
mov ebx [ esp + 0x4c ]
call sub_408ea0
add esp 0x10
mov esi eax
mov ecx esi
call sub_409a20
push 0x2
pop eax
push 0x5
push 0x1
push eax
push [ esp + 0x1c ]
mov [ esi + 0xc ] eax
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
mov edi [ esp + 0x50 ]
mov ebx [ esp + 0x54 ]
call sub_408ea0
add esp 0x10
mov esi eax
mov ecx esi
call sub_409a20
mov [ esi + 0x4 ] ebx
jmp r-xdata
push 0x2
pop eax
mov [ esi ] edi
mov [ esi + 0xc ] eax
sub_47ef21
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x294
push ebx
push esi
xor esi esi
mov [ esp + 0x28 ] r--data
push edi
push esi
push 0x2
mov [ esp + 0x38 ] esi
mov [ esp + 0x3c ] esi
mov [ esp + 0x40 ] esi
mov [ esp + 0x78 ] 0x22c
call [ CreateToolhelp32Snapshot@IAT ]
mov edi eax
lea eax [ esp + 0x70 ]
push eax
push edi
call [ Process32FirstW@IAT ]
mov ebx [ ebp + 0x8 ]
jmp r-xdata
lea ecx [ esp + 0x18 ]
call sub_4077c7
lea ecx [ esp + 0x3c ]
call sub_4077c7
lea eax [ esp + 0x94 ]
push eax
lea ecx [ esp + 0x50 ]
call sub_407f41
lea eax [ esp + 0x3c ]
xor edx edx
push eax
lea eax [ esp + 0x1c ]
push eax
push esi
lea ecx [ esp + 0x58 ]
call sub_4046f9
add esp 0xc
lea ecx [ esp + 0x4c ]
call sub_405a64
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x1c ]
call sub_407c8e
cmp [ ebx + 0x8 ] esi
je r-xdata
lea eax [ esp + 0x18 ]
push eax
push [ esp + 0x7c ]
lea ecx [ esp + 0x64 ]
call sub_47cb36
push eax
lea ecx [ esp + 0x30 ]
call sub_47fce2
lea ecx [ esp + 0x60 ]
call sub_405a64
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push 0x0
push [ esi + 0x8 ]
lea ecx [ esp + 0x20 ]
call sub_407a68
test eax eax
jne r-xdata
xor esi esi
push edi
call [ CloseHandle@IAT ]
mov ecx [ ebp + 0xc ]
call sub_40942e
mov edi [ esp + 0x34 ]
mov ebx eax
push 0x2
pop esi
push esi
lea ecx [ edi + 0x1 ]
push ecx
push esi
push ebx
call sub_4091b0
push 0x0
push 0x0
push esi
push esi
push ebx
call sub_408ea0
add esp 0x24
mov esi eax
mov ecx esi
call sub_409a20
xor eax eax
mov [ esi ] edi
inc eax
mov [ esi + 0xc ] eax
test edi edi
je r-xdata
lea ecx [ esp + 0x3c ]
call sub_405a64
lea ecx [ esp + 0x18 ]
call sub_405a64
lea eax [ esp + 0x70 ]
push eax
push edi
call [ Process32NextW@IAT ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x2c ]
call sub_47cb9a
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi eax
mov eax [ esp + 0x30 ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x10 ] eax
push 0x1
push esi
push 0x2
push 0x2
push ebx
fstp [ esp + 0x2c ]
call sub_408ea0
add esp 0x14
mov esi eax
mov ecx esi
call sub_409a20
fld [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
add eax 0x4
mov esi [ esp + 0x14 ]
inc esi
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] esi
dec edi
jne r-xdata
fadd [ r--data ]
mov eax [ eax ]
add eax 0x4
push eax
push 0x0
push esi
push 0x2
push 0x2
push ebx
call sub_408ea0
add esp 0x14
mov ecx eax
call sub_409b9c
mov ecx [ esp + 0x10 ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ esp + 0x18 ] eax
fild [ esp + 0x18 ]
test eax eax
jns r-xdata
sub_47f113
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx ecx
mov ecx edi
call sub_409a20
and [ edi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ edi + 0xc ] eax
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea eax [ ebp + 0xf ]
push eax
lea edx [ ebp - 0x4 ]
call sub_463c99
cmp [ ebp + 0xf ] 0x0
pop ecx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp - 0x4 ]
push 0x0
push 0x200
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
sub eax 0x0
je r-xdata
push 0x40
dec eax
je r-xdata
mov eax 0x4000
jmp r-xdata
dec eax
je r-xdata
push eax
push esi
call [ SetPriorityClass@IAT ]
mov ecx edi
call sub_409a20
xor eax eax
inc eax
mov [ edi + 0xc ] eax
mov [ edi ] eax
mov eax [ ebx ]
push 0x0
push 0x0
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
push 0x20
jmp r-xdata
dec eax
je r-xdata
pop eax
mov eax 0x8000
jmp r-xdata
dec eax
je r-xdata
mov eax 0x80
jmp r-xdata
dec eax
jne r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax 0x100
jmp r-xdata
sub_47f1fb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push edi
mov edi ecx
push [ eax + 0x8 ]
push eax
call sub_47f729
test al al
jne r-xdata
push ecx
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] 0x1
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fe53
push 0x0
mov ecx edi
mov [ edi + 0xf8 ] 0x8
call sub_410b30
mov eax [ edi ]
lea ecx [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_41feda
mov ecx [ ebp + 0xc ]
push eax
call sub_409e9c
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
pop esi
jmp r-xdata
xor eax eax
pop edi
pop ebp
retn 0x8
sub_47f281
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push [ eax + 0x8 ]
mov edi ecx
push eax
call sub_47f729
test al al
jne r-xdata
lea eax [ ebp + 0xb ]
xor ebx ebx
push eax
lea ecx [ edi + 0x42c ]
mov [ ebp + 0xb ] bl
lea edx [ ebp - 0x4 ]
call sub_463c99
pop ecx
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor eax eax
inc eax
xor ebx ebx
cmp [ ebp + 0xb ] bl
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi ]
push ebx
push 0xcccccccc
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
push [ ebp - 0x4 ]
push ebx
push 0x100400
call [ OpenProcess@IAT ]
mov [ edi + 0x448 ] eax
lea eax [ ebp + 0x8 ]
push ecx
push eax
mov eax [ edi ]
mov [ ebp + 0x8 ] 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fe53
push ebx
mov ecx edi
mov [ edi + 0xf8 ] 0x9
call sub_410b30
mov eax [ edi ]
lea ecx [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_41feda
mov ecx [ ebp + 0xc ]
push eax
call sub_409e9c
jmp r-xdata
push ebx
mov [ esi + 0xc ] eax
mov [ esi ] ebx
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
sub_47f393
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x8 ]
push 0x1
push 0x1
call sub_47f7a8
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_41feda
cmp [ eax + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
push 0x0
mov ecx esi
mov [ esi + 0xf8 ] 0x7
call sub_410b30
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_41feda
mov ecx [ ebp + 0xc ]
push eax
call sub_409e9c
sub_47f3ef
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x8 ]
push 0x0
push 0x1
call sub_47f7a8
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_41feda
cmp [ eax + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
push 0x0
mov ecx esi
mov [ esi + 0xf8 ] 0x7
call sub_410b30
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_41feda
mov ecx [ ebp + 0xc ]
push eax
call sub_409e9c
sub_47f463
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push [ ebp + 0xc ]
mov esi ecx
push [ eax + 0x8 ]
push eax
push 0x1
call sub_47f532
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_41feda
cmp [ eax + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
push 0x0
mov ecx esi
mov [ esi + 0xf8 ] 0x7
call sub_410b30
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_41feda
mov ecx [ ebp + 0xc ]
push eax
call sub_409e9c
sub_47f4c1
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov esi 0x80000000
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
mov edx esi
mov ecx eax
call sub_465264
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov esi eax
or esi 0x40000000
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push eax
call [ GetLastError@IAT ]
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
sub_47f532
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp - 0x24 ]
push edi
call sub_4077c7
xor ecx ecx
mov [ ebp - 0xc ] 0x1
push 0x3c
push ecx
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x4 ] ecx
push eax
mov [ ebp - 0x8 ] ecx
call sub_422f60
mov ebx [ ebp + 0x10 ]
add esp 0xc
mov edi [ ebp + 0xc ]
cmp ebx 0x2
jb r-xdata
cmp ebx 0x3
jb r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
xor ecx ecx
mov eax [ eax ]
cmp [ eax ] cx
je r-xdata
cmp ebx 0x4
jb r-xdata
mov ecx [ edi + 0x4 ]
mov esi [ ecx + 0x8 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_41fe06
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_41fe06
mov [ ebp - 0x4 ] eax
xor esi esi
mov ecx [ edi + 0x4 ]
mov esi [ ecx + 0xc ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
xor esi esi
mov eax [ eax ]
cmp [ eax ] si
je r-xdata
push 0x3c
pop ebx
push ebx
lea eax [ ebp - 0x60 ]
push esi
push eax
call sub_422f60
mov eax [ ebp - 0x24 ]
add esp 0xc
mov [ ebp - 0x54 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x5c ] 0x40
mov [ ebp - 0x58 ] esi
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ ebp - 0x4 ]
mov ebx [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
call [ ShellExecuteExW@IAT ]
mov edi eax
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_409c9c
movzx eax ax
mov [ ebp - 0xc ] eax
cmp ebx 0x5
jb r-xdata
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409dae
test al al
jne r-xdata
test ebx ebx
je r-xdata
push esi
call j_sub_422ed5#3
pop ecx
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
lea ecx [ ebp - 0x24 ]
call sub_4081a7
test edi edi
jne r-xdata
push ebx
call j_sub_422ed5#3
pop ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
xor ebx ebx
push ebx
inc edi
push edi
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
mov esi [ ebp + 0x14 ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] edi
mov [ esi ] ebx
jmp r-xdata
mov esi [ ebp + 0x14 ]
mov ecx esi
call sub_409a20
or [ esi ] 0xffffffff
xor edi edi
inc edi
cmp [ ebp - 0x28 ] 0x0
mov [ esi + 0xc ] edi
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x28 ]
mov [ edx + 0x444 ] eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
push [ ebp - 0x28 ]
call [ GetProcessId@IAT ]
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
test eax eax
jns r-xdata
mov ecx esi
fstp [ ebp - 0x14 ]
call sub_409a20
fld [ ebp - 0x14 ]
push [ ebp - 0x28 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
call [ CloseHandle@IAT ]
fadd [ r--data ]
sub_47f729
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_4562f8
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
lea ecx [ edi + 0x42c ]
call sub_4081a7
cmp [ ebp + 0xc ] 0x2
jne r-xdata
mov ecx esi
call sub_409c9c
test eax eax
jne r-xdata
and [ edi + 0x43c ] 0x0
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
imul eax eax 0x3e8
mov [ edi + 0x43c ] eax
jmp r-xdata
xor al al
jmp r-xdata
call [ timeGetTime@IAT ]
mov [ edi + 0x440 ] eax
mov al 0x1
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_47f7a8
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xac
push ebx
push esi
push edi
push 0x44
pop esi
push esi
xor ebx ebx
lea eax [ esp + 0x74 ]
mov edi ecx
push ebx
push eax
mov [ esp + 0x3c ] edi
call sub_422f60
xor eax eax
mov [ esp + 0x7c ] esi
inc eax
mov [ esp + 0x20 ] ebx
mov [ esp + 0xa8 ] eax
add esp 0xc
mov [ esp + 0xa0 ] ax
mov esi ebx
mov al [ ebp + 0xc ]
mov [ esp + 0x18 ] ebx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x20 ] ebx
mov ebx [ ebp + 0x10 ]
test al al
je r-xdata
cmp [ ebx + 0x8 ] 0x3
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
cmp [ ebx + 0x8 ] 0x7
mov [ esp + 0x2c ] eax
jbe r-xdata
push 0x2
pop eax
cmp [ ebx + 0x8 ] eax
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
mov esi eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
mov al [ ebp + 0xc ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x1c ]
call sub_409c9c
mov esi eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x1c ]
jmp r-xdata
test esi 0x10000
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
jmp r-xdata
test al al
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x18 ]
jmp r-xdata
and esi 0xffff0000
call sub_409c9c
and eax 0xffff
mov [ esp + 0x28 ] eax
mov al [ ebp + 0xc ]
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_41fe06
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ esp + 0x20 ] 0x10
cmp [ ebx + 0x8 ] 0x6
jbe r-xdata
call sub_409c9c
mov [ esp + 0xa0 ] ax
cmp [ ebx + 0x8 ] 0x1
mov [ esp + 0x1c ] eax
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov [ esp + 0x14 ] eax
mov esi [ ecx + 0x4 ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov ecx [ ecx ]
call sub_41fe06
mov ecx [ ebx + 0x4 ]
mov [ esp + 0x18 ] eax
mov esi [ ecx + 0x8 ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov ecx [ ecx ]
call sub_41fe06
mov ecx [ ebx + 0x4 ]
mov [ esp + 0x10 ] eax
mov esi [ ecx + 0x10 ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov ecx [ ecx ]
call sub_41fe06
cmp [ ebx + 0x8 ] 0x5
mov [ esp + 0x1c ] eax
jbe r-xdata
mov edi [ GetCurrentDirectoryW@IAT ]
push 0x0
push 0x0
call edi
mov esi eax
xor ecx ecx
push 0x2
pop edx
lea eax [ esi + 0x1 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
push eax
push esi
mov [ esp + 0x2c ] eax
call edi
mov esi [ esp + 0x24 ]
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_41fe06
mov esi eax
test esi esi
je r-xdata
mov edi [ GetSystemDirectoryW@IAT ]
push 0x0
push 0x0
call edi
mov esi eax
xor ecx ecx
push 0x2
pop edx
lea eax [ esi + 0x1 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
push esi
mov esi eax
mov [ esp + 0x28 ] eax
push esi
call edi
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov esi [ ecx + 0x14 ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov ecx [ ecx ]
call sub_41fe06
mov esi eax
test esi esi
je r-xdata
mov edx [ esp + 0x28 ]
lea ecx [ esp + 0x48 ]
push edx
call sub_466a83
test edx edx
je r-xdata
mov ecx [ ebx + 0x4 ]
push r--data
mov ecx [ ecx ]
call sub_409bf8
mov ecx [ ebx + 0x4 ]
push r--data
mov ecx [ ecx + 0x4 ]
call sub_409bf8
mov ecx [ ebx + 0x4 ]
push r--data
mov ecx [ ecx + 0x8 ]
call sub_409bf8
push esi
call sub_422d7c
pop ecx
test eax eax
jne r-xdata
mov edi [ esp + 0x30 ]
push esi
call sub_422d7c
pop ecx
test eax eax
jne r-xdata
xor bl bl
call sub_467140
cmp eax 0xffffffff
mov [ esp + 0xac ] eax
lea ecx [ esp + 0x48 ]
sete bl
dec bl
and bl 0x1
call sub_46704f
cmp eax 0xffffffff
mov [ esp + 0xb0 ] eax
lea ecx [ esp + 0x48 ]
sete bh
dec bh
and bh bl
call sub_4670c8
cmp eax 0xffffffff
mov [ esp + 0xa8 ] eax
sete bl
dec bl
and bl bh
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
lea eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0x74 ]
push eax
push esi
push 0x0
push [ esp + 0x30 ]
movzx eax bl
push eax
push 0x0
push 0x0
push [ esp + 0x3c ]
push 0x0
call [ CreateProcessW@IAT ]
test eax eax
setne bh
call sub_4585fd
test al al
lea eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0x74 ]
push eax
push esi
push [ esp + 0x2c ]
push [ esp + 0x2c ]
push ecx
push [ esp + 0x44 ]
push [ esp + 0x2c ]
push [ esp + 0x38 ]
push [ esp + 0x38 ]
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
or [ esp + 0x9c ] 0x100
jmp r-xdata
push [ esp + 0x3c ]
call [ CloseHandle@IAT ]
test bl bl
je r-xdata
mov eax [ edi ]
xor ebx ebx
push ebx
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
push ebx
call [ GetLastError@IAT ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
mov esi [ ebp + 0x14 ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
jmp r-xdata
call sub_4588d9
call sub_458638
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
lea ecx [ esp + 0x48 ]
call sub_466cf3
mov eax [ esp + 0x40 ]
lea ecx [ esp + 0x48 ]
mov [ esp + 0x4c ] eax
call sub_46733b
lea eax [ esp + 0x48 ]
push eax
lea ecx [ edi + 0x45c ]
call sub_47fc8a
lea ecx [ esp + 0x48 ]
call sub_466b1d
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
push [ esp + 0x18 ]
call sub_422d7c
pop ecx
mov ecx [ esp + 0x18 ]
test eax eax
je r-xdata
mov [ ecx ] 0x0
inc ecx
dec eax
jne r-xdata
push [ esp + 0x14 ]
mov bh al
call sub_422d7c
pop ecx
mov ecx [ esp + 0x14 ]
test eax eax
je r-xdata
mov eax [ esp + 0x40 ]
fild [ esp + 0x40 ]
test eax eax
jns r-xdata
mov eax [ esp + 0x38 ]
mov [ edi + 0x444 ] eax
jmp r-xdata
push [ esp + 0x10 ]
call sub_422d7c
pop ecx
mov ecx [ esp + 0x10 ]
test eax eax
je r-xdata
mov [ ecx ] 0x0
inc ecx
dec eax
jne r-xdata
mov esi [ ebp + 0x14 ]
mov ecx esi
fstp [ esp + 0x30 ]
call sub_409a20
fld [ esp + 0x30 ]
push [ esp + 0x38 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
call [ CloseHandle@IAT ]
fadd [ r--data ]
push [ esp + 0x14 ]
call j_sub_422ed5#3
pop ecx
push [ esp + 0x18 ]
call j_sub_422ed5#3
pop ecx
push [ esp + 0x10 ]
call j_sub_422ed5#3
pop ecx
jmp r-xdata
mov [ ecx ] 0x0
inc ecx
dec eax
jne r-xdata
push [ esp + 0x1c ]
call j_sub_422ed5#3
pop ecx
push esi
call j_sub_422ed5#3
pop ecx
test bh bh
jne r-xdata
sub_47fc50
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
and [ esi + 0x8 ] 0x0
pop edi
pop esi
retn
push ebx
mov eax [ esi + 0x4 ]
and [ eax + edi * 4 ] 0x0
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
lea ecx [ ebx + 0x4 ]
call sub_405a64
push ebx
call j_sub_422ed5#3
pop ecx
mov eax [ esi + 0x4 ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
pop ebx
sub_47fc8a
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
xor edi edi
push 0xc
cmp [ esi + 0x4 ] edi
jne r-xdata
call sub_420f36
pop ecx
test eax eax
je r-xdata
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_47cb05
mov edi eax
mov [ esi ] edi
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx eax
call sub_47cb05
mov edi eax
inc [ esi + 0x8 ]
mov [ esi + 0x4 ] edi
pop edi
pop esi
pop ebp
retn 0x4
sub_47fce2
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
cmp [ esi + 0x8 ] eax
jne r-xdata
push 0x14
call sub_420f36
mov edi eax
pop ecx
test edi edi
je r-xdata
lea ecx [ eax + eax ]
push 0x8
pop eax
cmp ecx eax
jb r-xdata
xor edi edi
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
mov [ edi ] ecx
mov eax [ edx + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ edx + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ edi + 0xc ] eax
mov eax [ edx + 0x10 ]
mov [ edi + 0x10 ] eax
inc [ eax ]
jmp r-xdata
xor ecx ecx
mov [ esi + 0xc ] eax
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
cmp [ esi + 0x4 ] 0x0
mov edi eax
pop ecx
je r-xdata
mov eax ecx
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax + ecx * 4 ] edi
inc [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] edi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
shl eax 0x2
push eax
push [ esi + 0x4 ]
push edi
call sub_420fc0
push [ esi + 0x4 ]
call j_sub_422ed5#3
add esp 0x10
sub_47fd9c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x5c
and [ esp ] 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
lea ecx [ esp + 0x48 ]
mov ebx [ esi + 0x8 ]
call sub_4077c7
lea ecx [ esp + 0x28 ]
call sub_4077c7
lea ecx [ esp + 0x38 ]
call sub_4077c7
lea ecx [ esp + 0x58 ]
call sub_4077c7
mov eax [ esi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
sub esp 0x10
mov ecx esp
push [ eax ]
call sub_407f41
lea eax [ esp + 0x48 ]
push eax
lea eax [ esp + 0x3c ]
push eax
lea eax [ esp + 0x60 ]
push eax
call sub_481147
mov eax [ esp + 0x28 ]
sub esp 0x10
mov ecx esp
mov [ ecx ] eax
mov eax [ esp + 0x3c ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x40 ]
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x44 ]
mov [ ecx + 0xc ] eax
inc [ eax ]
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x2c ]
push eax
call sub_480ea5
test al al
jne r-xdata
cmp [ esp + 0x4c ] 0x0
je r-xdata
mov eax [ edi ]
push 0x0
push 0x2
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov esi [ esp + 0x18 ]
lea eax [ esp + 0xc ]
push eax
push [ esp + 0x1c ]
push [ esp + 0x50 ]
call [ RegConnectRegistryW@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x58 ]
call sub_405a64
lea ecx [ esp + 0x38 ]
call sub_405a64
lea ecx [ esp + 0x28 ]
call sub_405a64
lea ecx [ esp + 0x48 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
je r-xdata
mov ecx [ edi ]
push 0x0
push eax
mov ecx [ ecx + 0x4 ]
add ecx edi
call sub_41fea1
mov eax [ edi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov esi [ ebp + 0xc ]
mov ecx esi
push 0x2
pop ebx
call sub_409a20
mov [ esi + 0xc ] 0x1
cmp [ esp + 0x18 ] ebx
jne r-xdata
mov esi [ esp + 0xc ]
jmp r-xdata
xor ebx ebx
push ebx
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
mov eax [ edi ]
push ebx
push 0x3
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
jmp r-xdata
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
call sub_48102d
push [ esp + 0x10 ]
mov bl al
call [ RegCloseKey@IAT ]
test bl bl
jne r-xdata
dec ebx
jne r-xdata
mov [ esi ] ebx
jmp r-xdata
and [ esi ] 0x0
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x18 ]
or eax 0x2001f
push eax
push 0x0
push [ esp + 0x44 ]
push esi
call [ RegOpenKeyExW@IAT ]
mov [ esp + 0x18 ] eax
test eax eax
je r-xdata
xor ebx ebx
lea ecx [ esp + 0x1c ]
mov [ esp + 0x1c ] ebx
mov [ esp + 0x24 ] ebx
call sub_480e72
test al al
je r-xdata
mov eax [ edi ]
push 0x0
push 0xfffffffe
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x2
jmp r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push [ eax ]
push [ esp + 0x14 ]
call [ RegDeleteValueW@IAT ]
test eax eax
je r-xdata
push [ esp + 0x38 ]
push esi
call [ RegDeleteKeyW@IAT ]
push ebx
push [ esp + 0x18 ]
lea ecx [ esp + 0x24 ]
push [ esp + 0x40 ]
push esi
call sub_47fd84
call eax
jmp r-xdata
push [ esp + 0xc ]
call [ RegCloseKey@IAT ]
push [ esp + 0x10 ]
call [ RegCloseKey@IAT ]
jmp r-xdata
push 0x2
pop ebx
cmp eax ebx
jne r-xdata
cmp [ esp + 0x1c ] ebx
je r-xdata
push ebx
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
mov eax [ edi ]
push ebx
push 0xfffffffe
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] 0x2
test eax eax
je r-xdata
push 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
mov eax [ edi ]
push 0x0
push 0xfffffffe
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] ebx
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
jmp r-xdata
push [ esp + 0x1c ]
call [ FreeLibrary@IAT ]
mov [ esi + 0xc ] 0x1
sub_4800c2
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x254
and [ esp ] 0x0
push ebx
push esi
push edi
mov edi ecx
mov [ esp + 0x18 ] 0xff
lea ecx [ esp + 0x30 ]
call sub_4077c7
lea ecx [ esp + 0x20 ]
call sub_4077c7
lea ecx [ esp + 0x40 ]
call sub_4077c7
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
sub esp 0x10
mov ecx esp
push [ eax ]
call sub_407f41
lea eax [ esp + 0x50 ]
push eax
lea eax [ esp + 0x34 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call sub_481147
mov eax [ esp + 0x20 ]
sub esp 0x10
mov ecx esp
mov [ ecx ] eax
mov eax [ esp + 0x34 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x38 ]
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x3c ]
mov [ ecx + 0xc ] eax
inc [ eax ]
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x24 ]
push eax
call sub_480ea5
test al al
jne r-xdata
cmp [ esp + 0x34 ] 0x0
je r-xdata
push 0x0
push 0x2
jmp r-xdata
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0xc ]
push eax
push [ esp + 0x14 ]
push [ esp + 0x38 ]
call [ RegConnectRegistryW@IAT ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
mov eax [ ebx + 0x4 ]
lea ecx [ esp + 0x50 ]
push ecx
xor ebx ebx
lea ecx [ esp + 0x1c ]
push ebx
push ebx
push ebx
push ecx
lea ecx [ esp + 0x6c ]
push ecx
mov ecx [ eax + 0x4 ]
call sub_409c9c
dec eax
push eax
push [ esp + 0x30 ]
call [ RegEnumKeyExW@IAT ]
test eax eax
je r-xdata
mov eax [ edi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
mov ecx [ esp + 0xc ]
jmp r-xdata
push 0x0
push 0x3
lea ecx [ esp + 0x40 ]
call sub_405a64
lea ecx [ esp + 0x20 ]
call sub_405a64
lea ecx [ esp + 0x30 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x58 ]
push eax
call sub_409bf8
mov eax [ edi ]
push ebx
push 0xffffffff
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
lea eax [ esp + 0x14 ]
push eax
mov eax [ esp + 0x20 ]
or eax 0x20019
push eax
push 0x0
push [ esp + 0x4c ]
push ecx
call [ RegOpenKeyExW@IAT ]
mov esi [ RegCloseKey@IAT ]
test eax eax
je r-xdata
push [ esp + 0xc ]
call esi
push [ esp + 0x14 ]
call esi
sub_48026f
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
and [ esp + 0x4 ] 0x0
push ebx
push esi
push edi
push 0x8002
mov edi ecx
call sub_420f36
pop ecx
push eax
lea ecx [ esp + 0x2c ]
call sub_40538e
lea ecx [ esp + 0x40 ]
mov [ esp + 0x20 ] 0x3fff
call sub_4077c7
lea ecx [ esp + 0x30 ]
call sub_4077c7
lea ecx [ esp + 0x50 ]
call sub_4077c7
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
sub esp 0x10
mov ecx esp
push [ eax ]
call sub_407f41
lea eax [ esp + 0x60 ]
push eax
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x58 ]
push eax
call sub_481147
mov eax [ esp + 0x30 ]
sub esp 0x10
mov ecx esp
mov [ ecx ] eax
mov eax [ esp + 0x44 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x48 ]
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x4c ]
mov [ ecx + 0xc ] eax
inc [ eax ]
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x2c ]
push eax
call sub_480ea5
test al al
jne r-xdata
cmp [ esp + 0x44 ] 0x0
je r-xdata
push 0x0
push 0x2
jmp r-xdata
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x10 ]
push eax
push [ esp + 0x1c ]
push [ esp + 0x48 ]
call [ RegConnectRegistryW@IAT ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
mov eax [ ebx + 0x4 ]
lea ecx [ esp + 0x28 ]
push esi
push ecx
push esi
lea ecx [ esp + 0x30 ]
push ecx
push [ esp + 0x3c ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
dec eax
push eax
push [ esp + 0x30 ]
call [ RegEnumValueW@IAT ]
test eax eax
je r-xdata
mov eax [ edi ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
cmp [ esp + 0x10 ] esi
je r-xdata
mov ecx [ esp + 0x10 ]
jmp r-xdata
push 0x0
push 0x3
lea ecx [ esp + 0x50 ]
call sub_405a64
lea ecx [ esp + 0x30 ]
call sub_405a64
lea ecx [ esp + 0x40 ]
call sub_405a64
mov eax [ esp + 0x2c ]
dec [ eax ]
jne r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x28 ]
push eax
call sub_46753f
mov eax [ edi ]
push esi
push [ esp + 0x28 ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
mov eax [ edi ]
push esi
push 0xffffffff
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
push [ esp + 0x10 ]
call [ RegCloseKey@IAT ]
jmp r-xdata
lea eax [ esp + 0x14 ]
xor esi esi
push eax
mov eax [ esp + 0x20 ]
or eax 0x20019
push eax
push esi
push [ esp + 0x5c ]
push ecx
call [ RegOpenKeyExW@IAT ]
push esi
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
call j_sub_422ed5#3
pop ecx
push [ esp + 0x28 ]
call j_sub_422ed5#3
pop ecx
push [ esp + 0x10 ]
call esi
push [ esp + 0x14 ]
mov esi [ RegCloseKey@IAT ]
call esi
cmp [ esp + 0x10 ] 0x0
je r-xdata
sub_480465
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx ecx
push r--data
mov ecx edi
call sub_409bf8
lea ecx [ esp + 0x38 ]
call sub_4077c7
lea ecx [ esp + 0x28 ]
call sub_4077c7
lea ecx [ esp + 0x48 ]
call sub_4077c7
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
sub esp 0x10
mov edx esp
mov eax [ ecx ]
mov [ edx ] eax
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ecx + 0x8 ]
mov [ edx + 0x8 ] eax
mov eax [ ecx + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x3c ]
push eax
lea eax [ esp + 0x50 ]
push eax
call sub_481147
mov eax [ esp + 0x28 ]
sub esp 0x10
mov ecx esp
mov [ ecx ] eax
mov eax [ esp + 0x3c ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x40 ]
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x44 ]
mov [ ecx + 0xc ] eax
inc [ eax ]
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x2c ]
push eax
call sub_480ea5
test al al
jne r-xdata
xor esi esi
mov [ esp + 0x14 ] esi
cmp [ esp + 0x3c ] esi
je r-xdata
push 0x0
push 0x2
jmp r-xdata
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x14 ]
push eax
push [ esp + 0x1c ]
push [ esp + 0x40 ]
call [ RegConnectRegistryW@IAT ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0xc ]
push ecx
xor esi esi
lea ecx [ esp + 0x20 ]
push esi
push ecx
push esi
push [ eax ]
push [ esp + 0x24 ]
call [ RegQueryValueExW@IAT ]
push esi
test eax eax
je r-xdata
push esi
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_41fea1
cmp [ esp + 0x14 ] esi
je r-xdata
mov ecx [ esp + 0x14 ]
jmp r-xdata
push esi
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_41fea1
push esi
push 0x3
jmp r-xdata
lea ecx [ esp + 0x48 ]
call sub_405a64
lea ecx [ esp + 0x28 ]
call sub_405a64
lea ecx [ esp + 0x38 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebx ]
push [ esp + 0x20 ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_41fea1
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_41fea1
push esi
push 0xffffffff
jmp r-xdata
push esi
push 0x1
push [ esp + 0x14 ]
call [ RegCloseKey@IAT ]
lea eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x24 ]
or eax 0x20019
push eax
push esi
push [ esp + 0x54 ]
push ecx
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
push esi
push 0xfffffffe
push 0x2
pop edx
cmp eax edx
jbe r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
push [ esp + 0x14 ]
call esi
mov eax [ esp + 0xc ]
xor ecx ecx
shr eax 0x1
inc eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov [ esp + 0x24 ] eax
mov eax [ ebp + 0x8 ]
pop ecx
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x4 ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea eax [ esp + 0xc ]
mov esi [ esp + 0x20 ]
push eax
push esi
xor eax eax
push eax
push eax
push [ ecx ]
push [ esp + 0x24 ]
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
cmp eax 0x3
je r-xdata
xor edi edi
push edi
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_41fea1
mov eax [ ebx ]
push edi
push 0xfffffffe
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov eax [ esp + 0xc ]
shr eax 0x1
xor ecx ecx
mov [ esp + 0xc ] eax
mov [ esi + eax * 2 ] cx
push [ esp + 0xc ]
mov ecx edi
call sub_46776d
mov edi eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x4 ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea eax [ esp + 0xc ]
push eax
push edi
xor esi esi
push esi
push esi
push [ ecx ]
push [ esp + 0x24 ]
call [ RegQueryValueExW@IAT ]
test eax eax
je r-xdata
push 0x4
pop ecx
cmp eax ecx
je r-xdata
push [ esp + 0x10 ]
mov esi [ RegCloseKey@IAT ]
call esi
cmp [ esp + 0x14 ] 0x0
je r-xdata
push esi
call j_sub_422ed5#3
pop ecx
jmp r-xdata
push esi
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_41fea1
mov eax [ ebx ]
push esi
push 0xfffffffe
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov ebx [ ebp + 0xc ]
mov ecx ebx
call sub_409a20
mov [ ebx + 0xc ] 0x1
mov [ ebx ] esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ esp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
lea eax [ esp + 0xc ]
xor ebx ebx
push eax
lea eax [ esp + 0x24 ]
push eax
mov eax [ esi + 0x8 ]
push ebx
push ebx
push [ eax ]
push [ esp + 0x24 ]
call [ RegQueryValueExW@IAT ]
mov esi [ esp + 0x20 ]
mov ecx edi
call sub_409a20
push 0x2
pop eax
mov [ edi + 0xc ] eax
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
jmp r-xdata
cmp eax 0x7
je r-xdata
mov eax [ esp + 0xc ]
xor ecx ecx
shr eax 0x1
add eax edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
mov [ esp + 0x24 ] eax
mov eax [ ebp + 0x8 ]
pop ecx
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x4 ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
lea eax [ esp + 0xc ]
mov esi [ esp + 0x20 ]
push eax
push esi
xor eax eax
push eax
push eax
push [ ecx ]
push [ esp + 0x24 ]
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
cmp eax 0xb
jne r-xdata
mov eax [ esp + 0xc ]
xor ecx ecx
shr eax 0x1
mov [ esp + 0xc ] eax
mov [ esi + eax * 2 ] cx
mov eax [ esp + 0xc ]
cmp eax 0x1
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ esp + 0xc ] 0x8
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
lea eax [ esp + 0xc ]
xor edi edi
push eax
lea eax [ esp + 0x24 ]
push eax
mov eax [ esi + 0x8 ]
push edi
push edi
push [ eax ]
push [ esp + 0x24 ]
call [ RegQueryValueExW@IAT ]
mov ebx [ ebp + 0xc ]
mov ecx ebx
mov esi [ esp + 0x20 ]
mov edi [ esp + 0x24 ]
call sub_409a20
push 0x2
pop eax
mov [ ebx + 0xc ] eax
mov [ ebx ] esi
mov [ ebx + 0x4 ] edi
jmp r-xdata
push esi
mov ecx edi
call sub_409bf8
jmp r-xdata
xor edx edx
cmp [ esi + eax * 2 - 0x2 ] dx
jne r-xdata
push 0xa
pop ebx
test eax eax
je r-xdata
dec eax
mov [ esp + 0xc ] eax
cmp [ esi + ecx * 2 - 0x2 ] bx
jne r-xdata
cmp [ esi + ecx * 2 ] dx
jne r-xdata
xor eax eax
mov [ esi + ecx * 2 - 0x2 ] ax
jmp r-xdata
inc ecx
cmp ecx eax
jb r-xdata
mov [ esi + ecx * 2 ] bx
mov eax [ esp + 0xc ]
sub_4808e2
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
and [ esp + 0x4 ] 0x0
push ebx
push esi
mov ebx ecx
lea ecx [ esp + 0x3c ]
push edi
mov [ esp + 0x14 ] ebx
call sub_4077c7
lea ecx [ esp + 0x30 ]
call sub_4077c7
lea ecx [ esp + 0x50 ]
call sub_4077c7
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ esp + 0x20 ] eax
cmp eax 0x1
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
sub esp 0x10
mov edx esp
mov eax [ ecx ]
mov [ edx ] eax
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ecx + 0x8 ]
mov [ edx + 0x8 ] eax
mov eax [ ecx + 0xc ]
mov [ edx + 0xc ] eax
inc [ eax ]
lea eax [ esp + 0x60 ]
push eax
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x58 ]
push eax
call sub_481147
mov eax [ esp + 0x30 ]
sub esp 0x10
mov ecx esp
mov [ ecx ] eax
mov eax [ esp + 0x44 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x48 ]
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x4c ]
mov [ ecx + 0xc ] eax
inc [ eax ]
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x2c ]
push eax
call sub_480ea5
test al al
jne r-xdata
cmp eax 0x4
jne r-xdata
cmp [ esp + 0x44 ] 0x0
je r-xdata
mov eax [ ebx ]
push 0x0
push 0x2
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x10 ]
push eax
push [ esp + 0x1c ]
push [ esp + 0x48 ]
call [ RegConnectRegistryW@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x50 ]
call sub_405a64
lea ecx [ esp + 0x30 ]
call sub_405a64
lea ecx [ esp + 0x40 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x20 ] 0x1
jbe r-xdata
push esi
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_41fea1
mov eax [ ebx ]
xor edi edi
push esi
inc edi
push edi
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
cmp [ esp + 0x10 ] 0x0
mov [ esi + 0xc ] edi
je r-xdata
mov ecx [ esp + 0x10 ]
jmp r-xdata
xor edi edi
push edi
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_41fea1
mov eax [ ebx ]
push edi
push 0x3
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
jmp r-xdata
push [ esp + 0xc ]
mov esi [ RegCloseKey@IAT ]
call esi
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push r--data
push [ eax ]
call sub_42307d
pop ecx
test eax eax
mov eax [ edi + 0x4 ]
pop ecx
jne r-xdata
push [ esp + 0x10 ]
call [ RegCloseKey@IAT ]
jmp r-xdata
lea eax [ esp + 0x2c ]
xor esi esi
push eax
lea eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x24 ]
push esi
or eax 0x20006
push eax
push esi
push r--data
push esi
push [ esp + 0x6c ]
push ecx
call [ RegCreateKeyExW@IAT ]
test eax eax
je r-xdata
push [ esp + 0x10 ]
call esi
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push r--data
push [ eax ]
call sub_42307d
pop ecx
test eax eax
mov eax [ edi + 0x4 ]
pop ecx
jne r-xdata
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push [ eax ]
call sub_422d7c
pop ecx
lea ebx [ eax * 2 + 0x2 ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push ebx
push edi
push 0x2
xor ebx ebx
push ebx
push [ eax ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push r--data
push [ eax ]
call sub_42307d
pop ecx
test eax eax
mov eax [ edi + 0x4 ]
pop ecx
jne r-xdata
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push [ eax ]
call sub_422d7c
pop ecx
lea ebx [ eax * 2 + 0x2 ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push ebx
push edi
xor edi edi
xor ebx ebx
inc edi
push edi
push ebx
push [ eax ]
push [ esp + 0x20 ]
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
push ebx
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_41fea1
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] ebx
jmp r-xdata
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push r--data
push [ eax ]
call sub_42307d
pop ecx
test eax eax
mov eax [ edi + 0x4 ]
pop ecx
jne r-xdata
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
xor ecx ecx
push 0x2
pop edx
mov eax [ eax + 0x4 ]
mov [ esp + 0x14 ] eax
add eax 0x2
mov [ esp + 0x20 ] eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
mov ecx [ edi + 0x4 ]
mov [ esp + 0x18 ] eax
mov esi [ ecx + 0xc ]
mov ecx esi
call sub_409997
mov edx [ esi + 0x8 ]
mov ecx [ esp + 0x14 ]
mov esi [ esp + 0x18 ]
inc ecx
push ecx
mov edx [ edx ]
mov ecx esi
call sub_40463e
mov eax [ esp + 0x18 ]
pop ecx
xor ecx ecx
mov [ esi + eax * 2 ] ecx
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
push ebx
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_41fea1
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] edi
mov [ esi ] ebx
jmp r-xdata
mov [ esi + 0xc ] 0x1
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push r--data
push [ eax ]
call sub_42307d
pop ecx
test eax eax
mov eax [ edi + 0x4 ]
pop ecx
jne r-xdata
mov ecx [ eax + 0xc ]
call sub_409c9c
mov [ esp + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
push 0x4
lea ecx [ esp + 0x24 ]
push ecx
push 0x4
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov edi [ esp + 0x18 ]
mov ecx [ eax ]
mov eax [ esp + 0x14 ]
add eax eax
push eax
push edi
push 0x7
push 0x0
push ecx
push [ esp + 0x20 ]
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
cmp [ esi + ecx * 2 ] 0xa
jne r-xdata
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push r--data
push [ eax ]
call sub_42307d
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ecx [ eax + 0xc ]
call sub_409d46
mov [ esp + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov [ esp + 0x24 ] edx
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
push 0x8
lea ecx [ esp + 0x24 ]
push ecx
push 0xb
jmp r-xdata
push edi
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_41fea1
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] edi
jmp r-xdata
push edi
call j_sub_422ed5#3
pop ecx
jmp r-xdata
push 0x0
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_41fea1
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
inc ecx
cmp ecx eax
jb r-xdata
xor edx edx
mov [ esi + ecx * 2 ] dx
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_4687be
mov edx [ edi + 0x4 ]
mov ebx eax
mov esi [ edx + 0x4 ]
mov ecx esi
mov edi [ edx + 0xc ]
call sub_409997
mov edx [ esi + 0x8 ]
mov ecx edi
call sub_468801
push eax
push ebx
push 0x3
xor ebx ebx
push ebx
push [ edx ]
jmp r-xdata
mov eax [ esi + 0x8 ]
xor edi edi
push edi
push [ eax ]
push [ esp + 0x20 ]
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
test eax eax
je r-xdata
push [ esp + 0x20 ]
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
sub_480e72
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
retn
push r--data
call [ LoadLibraryA@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
sub_480ea5
push ebp
mov ebp esp
sub esp 0x14
lea ecx [ ebp + 0x10 ]
push ebx
push esi
push edi
call sub_407faf
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call [ CharUpperBuffW@IAT ]
mov edi [ ebp + 0xc ]
push 0x2
pop esi
and [ edi ] 0x0
cmp [ ebp + 0x14 ] esi
jae r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4077c7
mov eax [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
push esi
sub eax esi
push eax
lea eax [ ebp + 0x10 ]
push eax
call sub_4079ab
mov esi r--data
lea ecx [ ebp - 0x10 ]
mov edx esi
call sub_420c63
lea ecx [ ebp - 0x10 ]
mov bl al
call sub_405a64
test bl bl
je r-xdata
mov esi [ ebp + 0x14 ]
mov edx r--data
lea ecx [ ebp + 0x10 ]
call sub_420c63
test al al
jne r-xdata
push esi
lea ecx [ ebp + 0x10 ]
call sub_407886
mov eax [ rw-data ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x80000002
mov edx r--data
lea ecx [ ebp + 0x10 ]
call sub_420c63
test al al
jne r-xdata
mov [ edi ] 0x100
mov edx r--data
lea ecx [ ebp + 0x10 ]
call sub_420c63
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x80000000
jmp r-xdata
mov edx r--data
lea ecx [ ebp + 0x10 ]
call sub_420c63
test al al
jne r-xdata
mov bl 0x1
mov edx r--data
lea ecx [ ebp + 0x10 ]
call sub_420c63
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x80000005
jmp r-xdata
mov edx r--data
lea ecx [ ebp + 0x10 ]
call sub_420c63
test al al
jne r-xdata
mov edx r--data
lea ecx [ ebp + 0x10 ]
call sub_420c63
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x80000001
jmp r-xdata
mov edx r--data
lea ecx [ ebp + 0x10 ]
call sub_420c63
test al al
jne r-xdata
mov edx r--data
lea ecx [ ebp + 0x10 ]
call sub_420c63
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x80000003
jmp r-xdata
mov edx r--data
lea ecx [ ebp + 0x10 ]
call sub_420c63
test al al
jne r-xdata
xor ebx ebx
jmp r-xdata
lea ecx [ ebp + 0x10 ]
call sub_405a64
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_48102d
push ebp
mov ebp esp
sub esp 0x228
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] 0xff
xor ecx ecx
lea eax [ ebp - 0x24 ]
push eax
push ecx
push ecx
push ecx
lea eax [ ebp - 0x4 ]
mov ebx edx
push eax
lea eax [ ebp - 0x228 ]
mov [ ebp - 0xc ] ebx
push eax
push ecx
push esi
call [ RegEnumKeyExW@IAT ]
cmp eax 0x103
je r-xdata
mov al 0x1
mov eax ebx
or eax 0x20019
mov [ ebp - 0x1c ] eax
xor al al
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx ebx
call sub_48102d
push [ ebp - 0x8 ]
mov bl al
call [ RegCloseKey@IAT ]
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x10 ] ebx
call sub_480e72
test al al
lea eax [ ebp - 0x228 ]
je r-xdata
push eax
push esi
call [ RegDeleteKeyW@IAT ]
mov ebx [ ebp - 0xc ]
push ebx
mov ebx [ ebp - 0xc ]
lea ecx [ ebp - 0x18 ]
push ebx
push eax
push esi
call sub_47fd84
call eax
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] eax
je r-xdata
test eax eax
jne r-xdata
push [ ebp - 0x18 ]
call [ FreeLibrary@IAT ]
xor ecx ecx
mov [ ebp - 0x4 ] 0xff
lea eax [ ebp - 0x24 ]
push eax
push ecx
push ecx
push ecx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x228 ]
push eax
push ecx
push esi
call [ RegEnumKeyExW@IAT ]
cmp eax 0x103
mov eax [ ebp - 0x1c ]
jne r-xdata
push [ ebp - 0x18 ]
call [ FreeLibrary@IAT ]
lea ecx [ ebp - 0x8 ]
push ecx
push eax
push 0x0
lea eax [ ebp - 0x228 ]
push eax
push esi
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
sub_481147
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
call sub_407eec
mov ecx [ ebp + 0xc ]
call sub_407eec
mov ecx [ ebp + 0x10 ]
call sub_407eec
xor edi edi
mov ebx r--data
cmp [ ebp + 0x18 ] 0x2
jb r-xdata
mov ecx [ ebp + 0x8 ]
call sub_407eec
push edi
lea ecx [ ebp + 0x14 ]
call sub_407b52
push 0x5c
pop esi
cmp [ eax ] si
jne r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp + 0x14 ]
push esi
push edi
push eax
call sub_4079ab
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x10 ]
sub eax esi
dec eax
push eax
lea eax [ esi + 0x1 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
call sub_4079ab
mov ecx [ ebp + 0x10 ]
push ebx
call sub_407886
lea ecx [ ebp + 0x14 ]
call sub_405a64
pop edi
pop esi
pop ebx
pop ebp
retn 0x1c
mov esi [ ebp + 0x18 ]
push 0x1
lea ecx [ ebp + 0x14 ]
call sub_407b52
cmp [ eax ] si
jne r-xdata
push 0x2
push edi
lea ecx [ ebp + 0x14 ]
call sub_407e8c
push ebx
lea ecx [ ebp + 0x14 ]
call sub_4654f1
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0x14 ]
push esi
push edi
push eax
call sub_4079ab
lea eax [ esi + 0x1 ]
push eax
push edi
lea ecx [ ebp + 0x14 ]
call sub_407e8c
jmp r-xdata
mov esi [ ebp + 0x18 ]
push ebx
lea ecx [ ebp + 0x14 ]
call sub_4654f1
mov esi eax
cmp esi 0xffffffff
jne r-xdata
sub_481225
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi ecx
mov ecx ebx
push r--data
call sub_409bf8
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x8 ] 0x0
jbe r-xdata
mov [ ebp + 0xf ] 0x0
mov ecx [ edx + 0x4 ]
mov ecx [ ecx ]
call sub_409c53
mov [ ebp + 0xf ] al
jmp r-xdata
mov [ ebp + 0xb ] 0x0
mov ecx [ edx + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_409c53
mov [ ebp + 0xb ] al
jmp r-xdata
xor esi esi
inc esi
cmp [ edx + 0x8 ] esi
jbe r-xdata
push 0x0
push 0x2
call sub_466c4b
mov ecx [ edi + 0x468 ]
test al al
je r-xdata
mov ecx [ edi + 0x468 ]
test ecx ecx
je r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
cmp [ ebp + 0xf ] 0x0
je r-xdata
and [ edi + 0x468 ] 0x0
push 0x0
push esi
jmp r-xdata
mov eax [ ecx ]
push esi
call [ eax ]
push ebx
call sub_466c83
mov esi eax
mov [ ebp + 0xc ] eax
push esi
push ebx
call sub_466bfe
mov esi eax
mov [ ebp + 0xc ] esi
jmp r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov eax [ edi ]
push 0x0
push [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4077c7
mov ecx ebx
call sub_4687be
mov edx esi
mov ecx eax
call sub_465543
push [ ebp + 0xc ]
mov esi eax
lea ecx [ ebp - 0x10 ]
push 0x0
push esi
call sub_4078ad
push esi
call j_sub_422ed5#3
pop ecx
lea eax [ ebp - 0x10 ]
mov ecx ebx
push eax
call sub_409b9c
lea ecx [ ebp - 0x10 ]
call sub_405a64
cmp [ ebp + 0xb ] 0x0
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_481360
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
mov [ ebp - 0x10 ] eax
lea ecx [ edi + 0x45c ]
mov [ ebp - 0x14 ] ecx
fild [ ebp - 0x10 ]
test eax eax
jns r-xdata
push ecx
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
lea eax [ ebp - 0x10 ]
push ecx
fstp [ esp ]
push ecx
push eax
call sub_481502
mov esi [ ebp - 0x10 ]
test esi esi
je r-xdata
fadd [ r--data ]
mov eax [ edi ]
push 0x0
push 0x2
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
cmp [ ebx + 0x8 ] 0x1
mov ecx [ esi ]
jbe r-xdata
add ecx 0x18
call sub_466cde
call sub_4670d8
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_4816b8
jmp r-xdata
mov eax [ edi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1 ] 0x0
mov edi [ eax + 0x4 ]
mov ecx edi
cmp [ edi + 0xc ] 0xb
jne r-xdata
mov ecx [ esi ]
call sub_466d3d
test al al
jne r-xdata
call sub_409997
mov eax [ edi + 0x8 ]
or edx 0xffffffff
mov ecx [ eax ]
call sub_46592e
mov ebx eax
mov [ ebp - 0x8 ] eax
push ebx
mov [ ebp - 0x1 ] 0x1
call sub_4238c0
pop ecx
call sub_4687be
mov ecx [ ebp + 0x8 ]
mov ebx eax
mov [ ebp - 0x8 ] ebx
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_468801
jmp r-xdata
push [ ebp - 0x8 ]
call j_sub_422ed5#3
pop ecx
jmp r-xdata
mov ecx [ esi ]
push eax
push ebx
call sub_46707e
mov edi [ ebp + 0xc ]
mov ebx eax
mov ecx edi
call sub_409a20
cmp [ ebp - 0x1 ] 0x0
mov [ edi + 0xc ] 0x1
mov [ edi ] ebx
je r-xdata
sub_481491
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ecx + 0x45c ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409cf8
push ecx
push ecx
fstp [ esp ]
push esi
lea eax [ ebp + 0x8 ]
push eax
call sub_481502
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
lea eax [ ebp + 0x8 ]
mov ecx esi
push eax
call sub_4816b8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] eax
sub_481502
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebp + 0xc ] eax
mov eax [ ebp + 0x8 ]
fstp st0
and [ eax ] 0x0
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
test eax eax
jns r-xdata
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
fadd [ r--data ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp + 0xc ]
call sub_456aca
mov eax [ ebp + 0xc ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0x10
fld [ ebp + 0x10 ]
test eax eax
je r-xdata
sub_481564
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov ebx ecx
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_409cf8
cmp [ esi + 0x8 ] 0x1
fstp [ ebp - 0xc ]
jbe r-xdata
mov [ ebp + 0xb ] 0x0
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_409c53
mov [ ebp + 0xb ] al
jmp r-xdata
mov [ ebp - 0x1 ] 0x0
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_409c53
mov [ ebp - 0x1 ] al
jmp r-xdata
cmp [ esi + 0x8 ] 0x2
jbe r-xdata
mov eax [ ebx ]
push 0x0
push 0x2
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov ecx [ esi ]
call [ ebp + 0x18 ]
test al al
je r-xdata
fld [ ebp - 0xc ]
lea edi [ ebx + 0x45c ]
push ecx
push ecx
fstp [ esp ]
push edi
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edi
push eax
call sub_481502
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
mov eax [ ebx ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
cmp [ ebp + 0xb ] 0x0
mov ecx [ esi ]
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x14
lea eax [ ebp - 0x8 ]
mov ecx edi
push eax
call sub_4816b8
jmp r-xdata
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
mov edi eax
mov [ ebp + 0x8 ] eax
push 0x1
push [ ebp + 0xc ]
call [ ebp + 0x10 ]
mov edi eax
mov [ ebp + 0x8 ] edi
jmp r-xdata
mov eax [ ebx ]
push 0x0
push [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_41fea1
mov edi [ ebp - 0x10 ]
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_4077c7
mov ecx [ ebp + 0xc ]
call sub_4687be
mov edx edi
mov ecx eax
call sub_465543
push [ ebp + 0x8 ]
mov edi eax
lea ecx [ ebp - 0x20 ]
push 0x0
push edi
call sub_4078ad
push edi
call j_sub_422ed5#3
pop ecx
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
call sub_409b9c
lea ecx [ ebp - 0x20 ]
call sub_405a64
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov ecx [ esi ]
call sub_466d3d
test al al
jne r-xdata
sub_4816b8
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
mov eax [ ecx + 0x4 ]
test edx edx
je r-xdata
test eax eax
je r-xdata
mov [ edx + 0x4 ] eax
cmp ecx [ esi ]
jne r-xdata
mov [ eax + 0x8 ] edx
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi ] eax
push ecx
call sub_469c87
and [ edi ] 0x0
dec [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] edx
sub_4816f8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
call sub_4687be
mov ecx [ esi + 0x4 ]
mov ecx [ ecx ]
call sub_468801
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
sub_481731
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call sub_4687be
mov edx [ esi + 0x4 ]
mov [ ebp - 0x4 ] eax
mov ecx [ edx ]
call sub_468801
mov ecx [ edx + 0x4 ]
mov ebx eax
or esi 0xffffffff
call sub_409c9c
lea edi [ eax - 0x1 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x2
jbe r-xdata
cmp edi ebx
jg r-xdata
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_409c9c
mov esi eax
mov edi ebx
test edi edi
jns r-xdata
mov esi ebx
sub esi edi
mov eax ebx
sub eax edi
cmp esi eax
jle r-xdata
test esi esi
js r-xdata
mov ecx [ ebp + 0xc ]
push esi
call sub_46776d
mov ecx [ ebp - 0x4 ]
push esi
add ecx edi
push ecx
push eax
call sub_420fc0
add esp 0xc
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4817b6
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov eax [ eax + 0x4 ]
push edi
mov [ esp + 0xc ] esi
mov ecx [ eax ]
call sub_4687be
mov edx [ ebp + 0x8 ]
mov ebx eax
mov eax [ edx + 0x4 ]
mov ecx [ eax ]
call sub_468801
mov edi eax
test edi edi
jne r-xdata
push 0x2
pop ecx
cmp [ edx + 0x8 ] ecx
jb r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
mov eax [ esi ]
push edi
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
xor esi esi
inc esi
mov ecx [ edx + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_409c9c
push 0x2
mov esi eax
pop ecx
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor esi esi
inc esi
cmp esi 0x4
jle r-xdata
cmp esi 0x1
jl r-xdata
mov eax edi
cdq
idiv ecx
test edx edx
je r-xdata
cmp esi 0x3
jne r-xdata
cmp esi ecx
je r-xdata
cmp esi 0x1
je r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
mov edx [ esp + 0xc ]
push 0x0
push 0x2
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
jmp r-xdata
push edi
lea ecx [ esp + 0x24 ]
call sub_467514
push edi
push ecx
push ebx
lea ecx [ esp + 0x2c ]
call sub_405ac4
push edi
lea ecx [ esp + 0x14 ]
call sub_407b76
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x24 ]
push eax
cmp esi 0x1
jne r-xdata
cmp esi 0x4
je r-xdata
call sub_456883
jmp r-xdata
call sub_4081c1
call sub_40793a
jmp r-xdata
cmp esi ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x10 ]
push eax
call sub_409b9c
lea ecx [ esp + 0x10 ]
call sub_405a64
lea ecx [ esp + 0x20 ]
call sub_405a64
push edi
call sub_420f36
pop ecx
mov edx eax
xor ecx ecx
mov [ esp + 0xc ] edx
test edi edi
jle r-xdata
mov eax edi
lea ecx [ esp + 0x20 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
push esi
call sub_407b76
push esi
push 0x0
push ebx
lea ecx [ esp + 0x2c ]
call sub_4078ad
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x20 ]
push eax
call sub_409b9c
mov eax edi
lea ecx [ esp + 0x20 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
push esi
call sub_407b76
push esi
mov esi [ esp + 0x10 ]
lea ecx [ esp + 0x24 ]
push 0x0
push esi
call sub_4078ad
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x20 ]
push eax
call sub_409b9c
push esi
call j_sub_422ed5#3
pop ecx
jmp r-xdata
mov esi edx
sub esi ebx
lea ecx [ esp + 0x20 ]
call sub_405a64
jmp r-xdata
mov al [ ebx + 0x1 ]
mov [ esi + ebx ] al
mov al [ ebx ]
lea ebx [ ebx + 0x2 ]
mov [ edx + ecx + 0x1 ] al
add ecx 0x2
cmp ecx edi
jl r-xdata
sub_481982
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x8 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0xc ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x10 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x8 ]
mov [ esp + 0x14 ] eax
inc [ eax ]
call sub_46361d
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x8 ]
push eax
call sub_409b9c
lea ecx [ esp + 0x8 ]
call sub_405a64
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4819e3
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ edi + 0x4 ]
mov ebx [ esi + 0x8 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov esi [ esi + 0x8 ]
xor eax eax
cmp [ edi + 0x8 ] 0x3
jb r-xdata
push eax
push esi
mov ecx ebx
call sub_407a68
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
test eax eax
js r-xdata
xor eax eax
cmp eax 0x3
jle r-xdata
push esi
mov ecx ebx
call sub_408019
jmp r-xdata
cmp eax 0x1
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
pop ebp
retn 0x8
sub_481a5f
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov esi ecx
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov ebx [ ecx ]
cmp [ ebx + 0xc ] 0x5
jne r-xdata
mov eax [ esi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
mov ebx [ ebx ]
xor esi esi
inc esi
mov [ ebp - 0x4 ] ebx
cmp [ edx + 0x8 ] 0x2
jbe r-xdata
push esi
mov ecx ebx
call sub_408e6b
mov ecx [ ecx + 0x8 ]
call sub_409c9c
mov edx [ ebp + 0x8 ]
jmp r-xdata
push esi
mov ecx ebx
call sub_408e6b
cmp edi eax
jbe r-xdata
push esi
mov ecx ebx
call sub_408e6b
mov edi eax
mov edi eax
cmp edi 0xffffffff
jne r-xdata
cmp [ edx + 0x8 ] esi
jbe r-xdata
push esi
mov ecx ebx
call sub_408e6b
mov edi eax
xor esi esi
mov eax [ edx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ edx + 0x8 ] 0x3
jbe r-xdata
cmp esi edi
ja r-xdata
xor eax eax
mov eax [ edx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
jmp r-xdata
mov eax edi
sub eax esi
mov [ ebp - 0x8 ] eax
inc eax
push eax
call sub_420f36
mov ebx eax
xor eax eax
mov [ ebp - 0x10 ] ebx
pop ecx
cmp esi edi
jae r-xdata
cmp eax 0x2
je r-xdata
mov [ ebp + 0x8 ] eax
cmp eax 0x1
je r-xdata
cmp [ ebp + 0x8 ] 0x1
mov ecx ebx
mov [ eax + ebx ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
sub ebx esi
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x20 ]
call sub_4077c7
jmp r-xdata
call sub_465991
or edx 0xffffffff
call sub_465543
jmp r-xdata
push esi
push 0x1
push 0x2
push ebx
call sub_408ea0
add esp 0x10
mov ecx eax
call sub_409c9c
mov ecx [ ebp - 0xc ]
mov [ ecx + esi ] al
inc esi
cmp esi edi
jb r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
cmp esi edi
jb r-xdata
mov ecx [ ebp + 0xc ]
mov esi eax
push esi
call sub_409bf8
push ebx
call j_sub_422ed5#3
push esi
call j_sub_422ed5#3
pop ecx
pop ecx
jmp r-xdata
push esi
push 0x1
push 0x2
push ebx
call sub_408ea0
add esp 0x10
mov ecx eax
call sub_409c9c
push eax
lea ecx [ ebp - 0x20 ]
call sub_407a84
inc esi
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
call sub_409b9c
lea ecx [ ebp - 0x20 ]
call sub_405a64
jmp r-xdata
sub_481bfb
push ebp
mov ebp esp
sub esp 0x18
and [ ebp - 0x18 ] 0x0
or eax 0xffffffff
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
mov edi ecx
mov [ ebp - 0xc ] 0x1
xor ebx ebx
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x8 ]
dec eax
dec eax
je r-xdata
push [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
push [ ebp - 0x8 ]
mov esi [ ebp - 0x10 ]
mov ecx esi
push [ eax + 0x4 ]
push [ ebp - 0xc ]
push ebx
push [ eax ]
call sub_45f479
mov ebx eax
jmp r-xdata
dec eax
je r-xdata
cmp ebx [ esi + 0x4 ]
mov esi [ ebp + 0xc ]
mov ecx esi
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
mov ebx eax
test ebx ebx
js r-xdata
dec eax
je r-xdata
call sub_409a20
xor eax eax
inc eax
mov [ esi + 0xc ] eax
lea eax [ ebx + 0x1 ]
mov [ esi ] eax
call sub_409a20
xor eax eax
inc eax
and [ esi ] 0x0
mov [ esi + 0xc ] eax
jmp r-xdata
xor ebx ebx
cmp ebx 0x3
jle r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
mov [ ebp - 0xc ] eax
test eax eax
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] ebx
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_409c9c
dec eax
mov [ ebp - 0x8 ] eax
js r-xdata
dec eax
jne r-xdata
mov ebx [ ebp - 0x18 ]
mov esi [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_409c9c
mov [ ebp - 0x4 ] eax
test eax eax
jg r-xdata
sub_481d33
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi [ eax ]
call sub_409a20
and [ esi ] 0x0
xor ebx ebx
inc ebx
mov [ esi + 0xc ] ebx
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push eax
call sub_42379a
pop ecx
test eax eax
je r-xdata
add edi 0x2
movzx eax [ edi ]
test ax ax
jne r-xdata
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] ebx
mov [ esi ] ebx
sub_481d93
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi [ eax ]
call sub_409a20
and [ esi ] 0x0
xor ebx ebx
inc ebx
mov [ esi + 0xc ] ebx
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push eax
call [ IsCharAlphaNumericW@IAT ]
test eax eax
je r-xdata
add edi 0x2
movzx eax [ edi ]
test ax ax
jne r-xdata
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] ebx
mov [ esi ] ebx
sub_481df3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi [ eax ]
call sub_409a20
and [ esi ] 0x0
xor ebx ebx
inc ebx
mov [ esi + 0xc ] ebx
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push eax
call [ IsCharAlphaW@IAT ]
test eax eax
je r-xdata
add edi 0x2
movzx eax [ edi ]
test ax ax
jne r-xdata
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] ebx
mov [ esi ] ebx
sub_481e53
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi [ eax ]
call sub_409a20
and [ esi ] 0x0
xor ebx ebx
inc ebx
mov [ esi + 0xc ] ebx
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push eax
call sub_4237ac
pop ecx
test eax eax
je r-xdata
add edi 0x2
movzx eax [ edi ]
test ax ax
jne r-xdata
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] ebx
mov [ esi ] ebx
sub_481eb3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov eax [ eax + 0x4 ]
push [ eax ]
call sub_482adc
mov esi [ ebp + 0xc ]
mov ecx esi
movzx edi al
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
sub_481ee3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov eax [ eax + 0x4 ]
push [ eax ]
call sub_482bd6
mov esi [ ebp + 0xc ]
mov ecx esi
movzx edi al
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
sub_481f13
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi [ eax ]
call sub_409a20
and [ esi ] 0x0
xor ebx ebx
inc ebx
mov [ esi + 0xc ] ebx
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push eax
call [ IsCharLowerW@IAT ]
test eax eax
je r-xdata
add edi 0x2
movzx eax [ edi ]
test ax ax
jne r-xdata
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] ebx
mov [ esi ] ebx
sub_481f73
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov [ ebp + 0x8 ] eax
mov ebx [ eax + 0x4 ]
call sub_409a20
xor edi edi
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
test ebx ebx
je r-xdata
mov ecx esi
call sub_409a20
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] eax
mov ecx [ ebp + 0x8 ]
push edi
call sub_407b20
mov cx [ eax ]
call sub_464aee
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
inc edi
cmp edi ebx
jb r-xdata
sub_481fdc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi [ eax ]
call sub_409a20
and [ esi ] 0x0
xor ebx ebx
inc ebx
mov [ esi + 0xc ] ebx
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push eax
call [ IsCharUpperW@IAT ]
test eax eax
je r-xdata
add edi 0x2
movzx eax [ edi ]
test ax ax
jne r-xdata
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] ebx
mov [ esi ] ebx
sub_48203c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi [ eax ]
call sub_409a20
and [ esi ] 0x0
xor ebx ebx
inc ebx
mov [ esi + 0xc ] ebx
movzx eax [ edi ]
test ax ax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push eax
call sub_4237ce
pop ecx
test eax eax
je r-xdata
add edi 0x2
movzx eax [ edi ]
test ax ax
jne r-xdata
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] ebx
mov [ esi ] ebx
sub_48209c
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push edi
call sub_4077c7
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ eax + 0x4 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov edi eax
test edi edi
js r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_409b9c
lea ecx [ ebp - 0x10 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp edi esi
jle r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push edi
push 0x0
push [ esi + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4079ab
mov edi esi
sub_482112
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi [ eax + 0x4 ]
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
sub_482147
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
inc [ eax ]
call sub_407faf
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call [ CharLowerBuffW@IAT ]
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_409b9c
lea ecx [ ebp - 0x10 ]
call sub_405a64
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4821aa
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push ebx
push esi
push edi
mov edi ecx
lea ecx [ esp + 0x30 ]
call sub_4077c7
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
push [ eax + 0x4 ]
call sub_407b76
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_4562f8
mov ecx esi
test al al
je r-xdata
call sub_409997
mov eax [ esi + 0x8 ]
xor esi esi
mov [ esp + 0x1c ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
call sub_409c9c
mov esi eax
dec esi
js r-xdata
cmp [ ebx + 0x8 ] 0x4
mov [ esp + 0x18 ] esi
jb r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
push esi
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
push 0x0
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
mov ecx [ eax + 0x4 ]
add ecx esi
cmp ecx [ ebx + 0x4 ]
ja r-xdata
cmp [ ebx + 0x8 ] 0x5
jb r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
mov [ esp + 0x18 ] eax
lea ecx [ esp + 0x20 ]
call sub_405a64
lea ecx [ esp + 0x30 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
push esi
push 0x0
push ebx
lea ecx [ esp + 0x2c ]
call sub_4079ab
mov edi [ esp + 0x10 ]
lea ecx [ esp + 0x20 ]
push edi
call sub_407c8e
mov ecx [ edi + 0x4 ]
mov eax [ ebx + 0x4 ]
sub eax ecx
sub eax esi
push eax
lea eax [ ecx + esi ]
push eax
push ebx
lea ecx [ esp + 0x3c ]
call sub_4079ab
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x24 ]
call sub_407c8e
jmp r-xdata
push [ esp + 0x14 ]
lea ecx [ esp + 0x24 ]
call sub_4080d7
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x20 ]
push esi
push [ esp + 0x1c ]
push eax
push [ esp + 0x28 ]
call sub_45f713
push 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_41fea1
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x10 ]
call sub_409c9c
mov esi eax
test esi esi
js r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x20 ]
push eax
call sub_409b9c
xor esi esi
cmp esi 0x3
jle r-xdata
sub_482343
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x70
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov esi [ esi + 0x8 ]
lea ecx [ esp + 0x20 ]
push [ esi + 0x4 ]
call sub_407b76
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
lea ecx [ esp + 0x40 ]
call sub_415bfd
push r--data
lea ecx [ esp + 0x34 ]
call sub_407f41
push ecx
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x48 ]
call sub_415c72
lea ecx [ esp + 0x30 ]
call sub_405a64
push esi
lea ecx [ esp + 0x44 ]
call sub_415d24
xor esi esi
mov [ esp + 0x10 ] r--data
lea ecx [ esp + 0x30 ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] esi
call sub_4077c7
mov [ esp + 0xc ] esi
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
cmp eax 0x1
jne r-xdata
mov esi [ esp + 0x18 ]
dec esi
js r-xdata
lea eax [ esp + 0x30 ]
push eax
push esi
lea ecx [ esp + 0x48 ]
call sub_456511
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_403f84
jmp r-xdata
push esi
lea ecx [ esp + 0x24 ]
call sub_4081a7
lea ecx [ esp + 0x20 ]
call sub_482c65
jmp r-xdata
lea ecx [ esp + 0x30 ]
call sub_405a64
lea ecx [ esp + 0x10 ]
call sub_404024
lea ecx [ esp + 0x40 ]
call sub_415c2e
lea ecx [ esp + 0x40 ]
call sub_405a64
mov edi [ esp + 0x14 ]
push 0x1
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x48 ]
call sub_415608
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x20 ]
push eax
call sub_409b9c
lea ecx [ esp + 0x20 ]
call sub_405a64
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
push [ edi + esi * 4 ]
lea ecx [ esp + 0x24 ]
call sub_407c8e
dec esi
jns r-xdata
sub_482487
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
lea ecx [ ebp - 0x10 ]
mov edi [ eax + 0x4 ]
call sub_4077c7
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov ebx eax
test ebx ebx
js r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_409b9c
lea ecx [ ebp - 0x10 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx edi
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push ebx
sub edi ebx
lea ecx [ ebp - 0x10 ]
push edi
push [ esi + 0x8 ]
call sub_4079ab
mov ebx edi
sub_482501
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x8 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0xc ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x10 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x8 ]
mov [ esp + 0x14 ] eax
inc [ eax ]
call sub_465432
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x8 ]
push eax
call sub_409b9c
lea ecx [ esp + 0x8 ]
call sub_405a64
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_482562
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov ecx [ esi + 0x4 ]
mov ebx eax
mov esi [ ecx ]
mov ecx esi
call sub_409997
mov edx [ esi + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ edx ]
mov esi [ edx + 0x4 ]
mov [ esp + 0x18 ] eax
mov eax [ edx + 0xc ]
mov [ esp + 0x10 ] ecx
lea ecx [ esp + 0x20 ]
push esi
mov [ esp + 0x18 ] esi
inc [ eax ]
mov [ esp + 0x20 ] eax
call sub_407b76
cmp ebx 0x8
jne r-xdata
test bl 0x1
je r-xdata
xor edi edi
test esi esi
je r-xdata
test bl 0x2
je r-xdata
test esi esi
je r-xdata
lea eax [ esp + 0x20 ]
jmp r-xdata
push edi
lea ecx [ esp + 0x14 ]
call sub_407b52
mov cx [ eax ]
call sub_464aee
test eax eax
jne r-xdata
test bl 0x4
je r-xdata
test esi esi
je r-xdata
xor edi edi
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
push eax
call sub_409b9c
lea ecx [ esp + 0x20 ]
call sub_405a64
lea ecx [ esp + 0x10 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc edi
cmp edi esi
jb r-xdata
push edi
lea ecx [ esp + 0x14 ]
call sub_407b52
lea ecx [ esp + 0x20 ]
movzx eax [ eax ]
push eax
call sub_407a84
lea eax [ esp + 0x10 ]
test esi esi
je r-xdata
jmp r-xdata
sub esi edi
lea eax [ esp + 0x10 ]
push esi
push edi
push eax
lea ecx [ esp + 0x2c ]
call sub_4079ab
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_4081a7
mov esi [ esp + 0x14 ]
push edi
lea ecx [ esp + 0x14 ]
call sub_407b52
mov cx [ eax ]
call sub_464aee
test eax eax
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ esp + 0x28 ]
call sub_407e8c
xor bl bl
xor edi edi
test esi esi
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
inc edi
cmp edi esi
jb r-xdata
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_4081a7
push edi
lea ecx [ esp + 0x14 ]
call sub_407b52
mov cx [ eax ]
call sub_464aee
test eax eax
je r-xdata
push esi
lea ecx [ esp + 0x14 ]
call sub_407b52
mov cx [ eax ]
call sub_464aee
test eax eax
je r-xdata
lea eax [ esi + 0x1 ]
push eax
push 0x0
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_4079ab
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_4081a7
mov esi [ esp + 0x14 ]
xor bl bl
test bl bl
jne r-xdata
inc edi
cmp edi esi
jb r-xdata
inc bl
jmp r-xdata
push edi
lea ecx [ esp + 0x14 ]
call sub_407b52
lea ecx [ esp + 0x20 ]
movzx eax [ eax ]
push eax
call sub_407a84
sub_482727
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
push r--data
call sub_409bf8
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
cmp [ edi + 0x8 ] 0x2
mov ebx [ esi + 0x8 ]
mov [ esp + 0xc ] ebx
jbe r-xdata
mov esi [ ebx + 0x4 ]
mov eax [ edi + 0x4 ]
push 0x29
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409dae
test al al
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jbe r-xdata
mov esi [ ebx + 0x4 ]
mov ecx esi
call sub_409c9c
mov esi eax
jmp r-xdata
xor ebx ebx
mov eax [ edi + 0x4 ]
push 0x29
mov ebx [ eax + 0x4 ]
mov ecx ebx
call sub_409dae
test al al
jne r-xdata
cmp esi [ ebx + 0x4 ]
jbe r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
jne r-xdata
mov ecx ebx
call sub_409c9c
mov ebx eax
jmp r-xdata
sub esi ebx
lea ecx [ esp + 0x20 ]
push esi
call sub_407b76
push esi
push ebx
push [ esp + 0x14 ]
lea ecx [ esp + 0x2c ]
call sub_4079ab
cmp [ edi + 0x8 ] 0x3
jbe r-xdata
inc esi
cmp ebx esi
ja r-xdata
xor edi edi
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_409c9c
mov edi eax
jmp r-xdata
lea ecx [ esp + 0x10 ]
call sub_405c18
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x24 ]
push eax
cmp edi 0x1
jne r-xdata
cmp edi 0x2
je r-xdata
cmp edi 0x1
je r-xdata
call sub_463431
call sub_47810b
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_40942e
push esi
mov ebx eax
push 0x1
push ebx
call sub_4091b0
add esp 0xc
xor edi edi
test esi esi
je r-xdata
lea ecx [ esp + 0x10 ]
call sub_405a64
lea ecx [ esp + 0x10 ]
call sub_46335d
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
cmp esi ecx
jae r-xdata
mov ecx [ ebp + 0xc ]
mov edi [ esp + 0x14 ]
call sub_40942e
push edi
mov ebx eax
push 0x1
push ebx
call sub_4091b0
add esp 0xc
xor esi esi
test edi edi
je r-xdata
lea ecx [ esp + 0x20 ]
call sub_405a64
push edi
lea ecx [ esp + 0x24 ]
call sub_407b52
and [ esp + 0x18 ] 0x0
push edi
movzx eax [ eax ]
mov [ esp + 0x14 ] eax
xor eax eax
inc eax
push eax
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x18 ]
push eax
push ebx
call sub_409040
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_409a20
inc edi
cmp edi esi
jb r-xdata
add eax ecx
add eax esi
jmp r-xdata
jmp r-xdata
movzx eax [ eax ]
and [ esp + 0x38 ] 0x0
mov [ esp + 0x30 ] eax
xor eax eax
inc eax
push esi
push eax
mov [ esp + 0x44 ] eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call sub_409040
add esp 0x10
lea ecx [ esp + 0x30 ]
call sub_409a20
inc esi
cmp esi edi
jb r-xdata
sub_4828ff
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov edi [ esi + 0x8 ]
mov eax [ edi + 0x4 ]
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
cmp [ ebx + 0x8 ] 0x2
jb r-xdata
mov ecx [ ebp + 0xc ]
push eax
call sub_46776d
jmp r-xdata
xor esi esi
inc esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov esi eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor esi esi
inc esi
cmp esi 0x4
jle r-xdata
cmp esi 0x1
jl r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405c18
lea eax [ ebp - 0x10 ]
push eax
push edi
cmp esi 0x1
jne r-xdata
cmp esi 0x4
je r-xdata
cmp esi 0x1
je r-xdata
call sub_463431
call sub_47810b
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp esi 0x2
jne r-xdata
push [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
call sub_46776d
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push eax
call sub_420fc0
add esp 0xc
lea ecx [ ebp - 0x10 ]
call sub_405a64
lea ebx [ eax + eax ]
push ebx
call sub_46776d
mov ecx [ edi ]
xor edx edx
mov [ ebp + 0xc ] eax
test ebx ebx
je r-xdata
lea esi [ eax + eax ]
push esi
call sub_46776d
push esi
push [ edi ]
push eax
call sub_420fc0
add esp 0xc
jmp r-xdata
mov esi eax
mov edi eax
sub esi ecx
mov al [ ecx + 0x1 ]
mov [ esi + ecx ] al
mov al [ ecx ]
lea ecx [ ecx + 0x2 ]
mov [ edi + edx + 0x1 ] al
add edx 0x2
cmp edx ebx
jb r-xdata
jmp r-xdata
sub_482a00
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov edi [ eax + 0x4 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
test eax eax
jns r-xdata
cmp eax edi
jle r-xdata
xor eax eax
sub edi eax
lea ecx [ ebp - 0x10 ]
push edi
call sub_407b76
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push edi
push 0x0
push [ esi + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4079ab
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_409b9c
lea ecx [ ebp - 0x10 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax edi
sub_482a79
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push esi
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
inc [ eax ]
call sub_407faf
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call [ CharUpperBuffW@IAT ]
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_409b9c
lea ecx [ ebp - 0x10 ]
call sub_405a64
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_482adc
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ecx esi
push edi
call sub_409997
mov eax [ esi + 0x8 ]
xor ebx ebx
inc ebx
mov edi ebx
mov esi [ eax ]
test esi esi
je r-xdata
xor al al
xor eax eax
cmp [ esi ] ax
je r-xdata
push r--data
push esi
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push esi
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push esi
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
cmp [ esi ] ax
je r-xdata
mov ebx eax
push 0x2e
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
movzx eax [ esi ]
cmp eax 0x2b
je r-xdata
dec eax
je r-xdata
add esi 0x2
cmp eax 0x2d
je r-xdata
movzx eax [ esi ]
push eax
call sub_4237ac
pop ecx
push 0x2e
pop ecx
test eax eax
je r-xdata
dec eax
je r-xdata
mov eax edi
dec eax
je r-xdata
cmp edi 0x4
je r-xdata
cmp eax ecx
je r-xdata
cmp [ esi ] cx
jne r-xdata
add esi 0x2
jmp r-xdata
add esi 0x2
push 0x4
jmp r-xdata
dec eax
jne r-xdata
mov al bl
jmp r-xdata
push 0x3
jmp r-xdata
add eax 0xffffffd0
cmp eax 0x9
jbe r-xdata
xor eax eax
cmp [ esi ] ax
jne r-xdata
pop edi
movzx eax [ esi ]
push eax
call sub_4237ac
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x2e
add esi 0x2
pop ecx
jmp r-xdata
sub_482bd6
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ecx esi
push edi
call sub_409997
mov eax [ esi + 0x8 ]
xor edi edi
inc edi
mov esi [ eax ]
test esi esi
je r-xdata
xor al al
xor ebx ebx
cmp [ esi ] bx
je r-xdata
push r--data
push esi
call sub_4236cc
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push esi
call sub_4236cc
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ esi ] bx
jne r-xdata
mov eax edi
dec eax
je r-xdata
mov al 0x1
jmp r-xdata
movzx eax [ esi ]
cmp eax 0x2b
je r-xdata
dec eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
add esi 0x2
cmp eax 0x2d
je r-xdata
movzx eax [ esi ]
push eax
call sub_423ddf
pop ecx
test eax eax
je r-xdata
add eax 0xffffffd0
cmp eax 0x9
ja r-xdata
add esi 0x2
jmp r-xdata
jmp r-xdata
push 0x2
pop edi
sub_482c65
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
retn
mov edx [ ecx ]
push esi
lea esi [ eax - 0x1 ]
lea esi [ edx + esi * 2 ]
jmp r-xdata
cmp esi edx
ja r-xdata
mov ax [ esi ]
movzx ecx [ edx ]
mov [ edx ] ax
add edx 0x2
mov [ esi ] cx
sub esi 0x2
pop esi
sub_482cb7
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi ecx
lea ecx [ ebp - 0x10 ]
call sub_4077c7
cmp [ rw-data ] 0x1
je r-xdata
and [ ebp - 0x14 ] 0x0
lea ecx [ ebp - 0x10 ]
push r--data
call sub_407d2c
lea eax [ ebp - 0x14 ]
mov ecx rw-data
push eax
call sub_462700
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x10 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
call sub_405a64
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
cmp [ rw-data ] 0x1
jne r-xdata
sub_482d34
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
push eax
mov ecx rw-data
call sub_462a4b
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
sub_482d6e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0xc ]
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
push ecx
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
push eax
call sub_462ca7
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
mov ecx esi
call sub_409a20
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] 0x7
mov [ esi ] eax
sub_482dbb
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
push eax
call sub_462b9a
test eax eax
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov eax [ ebp + 0x8 ]
push [ ebp - 0x4 ]
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
call j_sub_422ed5#3
pop ecx
pop esi
sub_482e07
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push ecx
mov eax [ eax + 0x4 ]
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx [ eax ]
call sub_409c9c
push eax
call sub_462b9a
test eax eax
je r-xdata
mov eax [ esi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_409bf8
push [ ebp + 0x8 ]
call j_sub_422ed5#3
pop ecx
jmp r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_482e69
push ebp
mov ebp esp
sub esp 0x38
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ eax + 0x4 ]
xor edi edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edi
mov esi [ eax + 0x4 ]
mov ecx esi
cmp [ esi + 0xc ] 0xe
jne r-xdata
push 0x2
pop ebx
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x28 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x1c ] eax
inc [ eax ]
lea eax [ ebp - 0x38 ]
xor ebx ebx
push eax
inc ebx
call sub_4679c3
mov ecx eax
jmp r-xdata
test bl 0x1
je r-xdata
lea ecx [ ebp - 0x28 ]
and ebx 0xfffffffd
call sub_405a64
mov eax [ ecx ]
mov [ ebp - 0x18 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0xc ] eax
inc [ eax ]
test bl 0x2
je r-xdata
mov ebx [ ebp - 0x4 ]
lea eax [ ebp - 0x18 ]
push eax
mov ecx ebx
call sub_409fbd
test eax eax
jne r-xdata
lea ecx [ ebp - 0x38 ]
call sub_405a64
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
push ecx
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
push eax
call sub_462fe2
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
xor eax eax
mov [ esi ] edi
inc eax
mov [ esi + 0xc ] eax
xor esi esi
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor eax eax
mov [ esi ] edi
inc eax
push edi
mov [ esi + 0xc ] eax
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
or esi 0xffffffff
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_405a64
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_482f6f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
call sub_409c9c
push eax
push r--data
mov ecx esi
call sub_409c9c
push eax
call sub_462d8e
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
sub_482fb4
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push 0xffffffff
mov ecx [ eax ]
mov eax [ edi + 0x4 ]
push ecx
mov ecx [ eax ]
call sub_409c9c
push eax
call sub_462d8e
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
xor eax eax
pop edi
mov [ esi + 0xc ] 0x1
pop esi
pop ebp
retn 0x8
sub_482ffe
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push 0x9
pop eax
cmp [ ecx + 0x8 ] 0x0
jbe r-xdata
mov [ rw-data ] eax
xor eax eax
pop ebp
retn 0x8
mov eax [ ecx + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
test eax eax
js r-xdata
push 0x9
pop eax
cmp eax 0x7f
jle r-xdata
sub_48302e
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx rw-data
push edi
push r--data
mov edi [ ebx + 0x8 ]
and [ rw-data ] 0x0
call sub_407d2c
test edi edi
je r-xdata
cmp edi 0x1
jbe r-xdata
mov eax [ ebx + 0x4 ]
push esi
mov esi [ eax ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
mov ecx rw-data
call sub_4081a7
pop esi
mov ecx rw-data
call sub_4043db
pop edi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov ecx eax
call sub_4649ed
mov [ rw-data ] eax
sub_48309c
push ebp
mov ebp esp
sub esp 0x34
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov eax [ eax + 0x4 ]
push edi
mov edi ecx
mov esi [ eax + 0x4 ]
mov ecx esi
cmp [ esi + 0xc ] 0xe
jne r-xdata
push 0x2
pop ebx
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x24 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ecx + 0xc ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] eax
inc [ eax ]
lea eax [ ebp - 0x34 ]
xor ebx ebx
push eax
inc ebx
call sub_4679c3
mov ecx eax
jmp r-xdata
test bl 0x1
je r-xdata
lea ecx [ ebp - 0x24 ]
and ebx 0xfffffffd
call sub_405a64
mov eax [ ecx ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x8 ] eax
inc [ eax ]
test bl 0x2
je r-xdata
lea eax [ ebp - 0x14 ]
mov ecx edi
push eax
call sub_409fbd
test eax eax
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_405a64
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
push ecx
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
push eax
call sub_4630fd
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
xor eax eax
mov [ esi ] edi
inc eax
mov [ esi + 0xc ] eax
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405a64
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_48319a
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx rw-data
push edi
push r--data
mov edi [ ebx + 0x8 ]
and [ rw-data ] 0x0
call sub_407d2c
test edi edi
je r-xdata
cmp edi 0x1
jbe r-xdata
mov eax [ ebx + 0x4 ]
push esi
mov esi [ eax ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
mov ecx rw-data
call sub_4081a7
pop esi
mov ecx rw-data
call sub_463127
pop edi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_409c9c
mov ecx eax
call sub_4649ed
mov [ rw-data ] eax
sub_483208
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
inc ecx
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
push ecx
call sub_463180
pop ebp
retn 0x8
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
mov ecx eax
sub_48322d
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
mov edx ecx
push esi
je r-xdata
mov eax [ edx ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
push r--data
mov ecx rw-data
call sub_407d2c
mov eax [ eax + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push 0x80
push 0x0
push [ esi + 0x8 ]
mov ecx rw-data
call sub_4079ab
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
mov ecx rw-data
call sub_40410d
jmp r-xdata
sub_4832b6
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
and [ esp + 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
push esi
or esi 0xffffffff
mov [ esp + 0x18 ] ecx
push edi
mov edi [ ebx + 0x8 ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] esi
test edi edi
je r-xdata
cmp edi 0x1
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_41fe06
mov [ esp + 0x10 ] eax
or esi 0xffffffff
cmp edi 0x2
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x4 ]
call sub_409c9c
mov esi eax
cmp edi 0x3
jbe r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x8 ]
call sub_409c9c
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x18 ]
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_409c9c
jmp r-xdata
push eax
push [ esp + 0x18 ]
push esi
push ebx
push edx
dec ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov edi [ ebp + 0x10 ]
mov ebx [ esp + 0x10 ]
sub ecx edx
je r-xdata
push ebx
call j_sub_422ed5#3
pop ecx
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ esp + 0x1c ]
push eax
push 0x1
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
mov ecx edi
call sub_409c9c
test eax eax
jne r-xdata
push edx
push [ esp + 0x18 ]
push esi
push ebx
push 0x1
jmp r-xdata
mov ecx rw-data
call sub_462502
mov ecx edi
mov esi eax
call sub_409a20
mov [ edi ] esi
mov [ edi + 0xc ] 0x1
sub_4833ab
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov eax [ ebx + 0x4 ]
lea ecx [ edi + 0x1d0 ]
push [ eax ]
call sub_409e9c
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
lea ecx [ edi + 0x1e0 ]
call sub_4081a7
xor ebx ebx
mov ecx edi
inc ebx
push ebx
call sub_40b93d
test eax eax
jg r-xdata
mov eax [ edi + 0x1f0 ]
lea ecx [ esp + 0x10 ]
and [ esp + 0x18 ] 0x0
mov esi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push [ eax + 0x8 ]
call sub_409ac0
cmp [ esp + 0x1c ] 0x7
jne r-xdata
xor al al
jmp r-xdata
cmp [ esp + 0x1c ] 0x4
je r-xdata
lea ecx [ esp + 0x10 ]
call sub_4687da
push eax
lea ecx [ edi + 0x2fc ]
call sub_45abc3
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ esp + 0x10 ]
call sub_409399
test al al
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_4562f8
test al al
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_409a20
mov al bl
lea ecx [ esp + 0x10 ]
call sub_4562f8
lea ecx [ esp + 0x10 ]
test al al
je r-xdata
lea ecx [ esp + 0x20 ]
call sub_4077c7
lea eax [ esp + 0x20 ]
push eax
push esi
lea ecx [ edi + 0x2fc ]
call sub_45a30f
test al al
jne r-xdata
xor bl bl
jmp r-xdata
call sub_409997
push [ esp + 0x18 ]
lea ecx [ edi + 0x2fc ]
push esi
call sub_45a473
call sub_409c9c
push eax
push esi
lea ecx [ edi + 0x2fc ]
call sub_45a7f1
jmp r-xdata
lea ecx [ esp + 0x20 ]
call sub_405a64
jmp r-xdata
push esi
lea ecx [ edi + 0x2fc ]
call sub_45abc3
mov bl al
sub_4834e7
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
mov eax ecx
push esi
mov [ ebp - 0xc ] eax
call sub_4833ab
test al al
jne r-xdata
push ebx
mov ebx [ esi + 0x8 ]
or eax 0xffffffff
push edi
xor edi edi
mov [ ebp - 0x4 ] eax
inc edi
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x8 ] edi
cmp ebx 0x7
jb r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
cmp ebx 0x6
jb r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_409c9c
mov [ ebp + 0x8 ] eax
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp ebx 0x5
jb r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_409c9c
mov [ ebp - 0x4 ] eax
mov eax edi
cmp ebx 0x4
jb r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_409c9c
mov [ ebp - 0x8 ] eax
dec eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov esi [ ecx + 0xc ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call sub_464c15
xor edi edi
dec eax
je r-xdata
push 0x2
pop edi
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
mov esi [ ebp - 0xc ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov ecx [ esi + 0x2fc ]
push edi
call sub_458ce1
mov ecx [ esi + 0x10c ]
call sub_4652eb
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] edi
jmp r-xdata
pop edi
pop ebx
sub_4835d4
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
and [ esp + 0x2c ] 0x0
and [ esp + 0x34 ] 0x0
push ebx
push esi
xor esi esi
mov ebx ecx
inc esi
lea ecx [ esp + 0x24 ]
push edi
mov [ esp + 0x44 ] esi
call sub_4077c7
mov edi [ ebp + 0xc ]
mov ecx edi
call sub_409a20
and [ edi ] 0x0
mov ecx ebx
mov [ edi + 0xc ] esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4833ab
test al al
jne r-xdata
push r--data
lea ecx [ esp + 0x3c ]
call sub_409bf8
jmp r-xdata
mov eax [ ebx ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp r-xdata
cmp [ esi + 0x8 ] 0x5
jb r-xdata
lea ecx [ esp + 0x28 ]
call sub_405a64
lea ecx [ esp + 0x38 ]
call sub_409a20
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x38 ]
mov ecx esi
push eax
call sub_456363
mov eax [ esi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x18 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x24 ] eax
inc [ eax ]
call sub_407faf
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call [ CharUpperBuffW@IAT ]
mov esi [ ebx + 0x2fc ]
lea ecx [ esp + 0x18 ]
mov edx r--data
mov [ esp + 0x14 ] esi
call sub_420c63
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
push [ esi ]
call [ IsWindowVisible@IAT ]
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
push [ esi ]
call [ IsWindowEnabled@IAT ]
jmp r-xdata
call sub_409a20
and [ edi ] 0x0
mov [ edi + 0xc ] 0x1
jmp r-xdata
call sub_409a20
xor eax eax
inc eax
mov [ edi + 0xc ] eax
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
push 0xffffffff
jmp r-xdata
test eax eax
lea ecx [ esp + 0x18 ]
call sub_405a64
mov [ edi ] eax
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
push 0x1
mov ecx esi
call sub_459930
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
lea eax [ esp + 0x10 ]
mov ecx esi
push eax
call sub_4599d6
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
push 0x1
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
push 0x0
jmp r-xdata
test al al
jne r-xdata
mov eax [ ebx ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
mov ecx [ esp + 0x18 ]
call sub_458fbf
jmp r-xdata
mov ecx esi
call sub_458dd7
jmp r-xdata
mov ecx edi
call sub_409a20
mov eax [ esp + 0x10 ]
mov [ edi + 0xc ] 0x1
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_409c9c
push eax
mov ecx esi
call sub_459044
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_409997
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x8 ]
call sub_4590c7
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_409c9c
push eax
mov ecx esi
call sub_45933c
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
lea eax [ esp + 0x28 ]
mov ecx esi
push eax
call sub_459152
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
mov ecx [ esp + 0x18 ]
call sub_459251
jmp r-xdata
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
mov ecx esi
call sub_458cc8
test al al
jmp r-xdata
lea eax [ esp + 0x28 ]
mov ecx edi
push eax
call sub_409b9c
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
push 0x1
jmp r-xdata
mov ecx edi
je r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
push 0x0
mov ecx esi
call sub_458c99
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
lea eax [ esp + 0x28 ]
mov ecx esi
push eax
call sub_458f0d
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
push 0x0
push 0x0
push 0xba
push [ esi ]
call [ SendMessageW@IAT ]
mov esi eax
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
push 0x0
push 0xffffffff
push 0xc9
push [ esi ]
call [ SendMessageW@IAT ]
lea esi [ eax + 0x1 ]
mov ecx edi
call sub_409a20
mov [ edi + 0xc ] 0x1
mov [ edi ] esi
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
lea eax [ esp + 0x10 ]
mov ecx esi
push eax
call sub_458e03
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push [ eax ]
mov eax [ esp + 0x18 ]
push 0x1
push 0xc2
push [ eax ]
call [ SendMessageW@IAT ]
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x28 ]
push ecx
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_409c9c
push eax
mov ecx esi
call sub_458e8d
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_409c9c
push eax
mov ecx esi
call sub_45984a
sub_483aa5
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4833ab
test al al
jne r-xdata
mov eax [ esi + 0x2fc ]
push 0x0
push [ eax ]
call [ EnableWindow@IAT ]
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
sub_483ae4
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4833ab
test al al
jne r-xdata
mov ecx [ esi + 0x2fc ]
push 0x1
call sub_45ac6f
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
sub_483b20
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4833ab
test al al
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov ecx [ esi + 0x2fc ]
call sub_45986f
test al al
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
sub_483b5c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x144
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
push [ ebp + 0x8 ]
mov ecx esi
call sub_40b9ad
push 0x1
mov ecx esi
call sub_40b93d
test eax eax
jg r-xdata
lea ecx [ esp + 0x18 ]
call sub_416259
lea ecx [ esp + 0x8 ]
call sub_4077c7
lea eax [ esp + 0x8 ]
push eax
mov eax [ esi + 0x1f0 ]
lea ecx [ esp + 0x1c ]
push [ eax ]
call sub_45a30f
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x8 ]
push eax
call sub_409b9c
lea ecx [ esp + 0x8 ]
call sub_405a64
lea ecx [ esp + 0x18 ]
call sub_4161fe
push 0x0
jns r-xdata
push 0x1
neg eax
push eax
jmp r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
jmp r-xdata
sub_483bf8
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4833ab
test al al
jne r-xdata
mov eax [ esi + 0x2fc ]
mov esi [ ebp + 0xc ]
mov ecx esi
push edi
mov edi [ eax ]
call sub_409a20
mov [ esi ] edi
pop edi
mov eax [ esi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
jmp r-xdata
mov [ esi + 0xc ] 0x7
xor eax eax
pop esi
pop ebp
retn 0x8
sub_483c4d
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov ebx ecx
call sub_4833ab
test al al
jne r-xdata
mov ecx [ ebx + 0x2fc ]
lea eax [ esp + 0x10 ]
xor edi edi
inc edi
push edi
push eax
call sub_45ad4a
cmp al 0x1
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
xor edi edi
inc edi
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov ecx [ ebp + 0xc ]
call sub_40942e
push 0x4
mov esi eax
push edi
push esi
call sub_4091b0
mov ecx [ esp + 0x1c ]
lea eax [ esp + 0x2c ]
xor ebx ebx
mov [ esp + 0x2c ] ecx
push ebx
push edi
push eax
push esi
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] edi
call sub_409040
add esp 0x1c
lea ecx [ esp + 0x20 ]
call sub_409a20
mov eax [ esp + 0x14 ]
push edi
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x24 ]
push edi
push eax
push esi
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] edi
call sub_409040
add esp 0x10
lea ecx [ esp + 0x20 ]
call sub_409a20
mov eax [ esp + 0x18 ]
sub eax [ esp + 0x10 ]
push 0x2
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x24 ]
push edi
push eax
push esi
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] edi
call sub_409040
add esp 0x10
lea ecx [ esp + 0x20 ]
call sub_409a20
mov eax [ esp + 0x1c ]
sub eax [ esp + 0x14 ]
push 0x3
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x24 ]
push edi
push eax
push esi
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] edi
call sub_409040
add esp 0x10
lea ecx [ esp + 0x20 ]
call sub_409a20
jmp r-xdata
and [ esi ] 0x0
mov [ esi + 0xc ] edi
mov eax [ ebx ]
push 0x0
push edi
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_483d84
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
push [ ebp + 0x8 ]
mov ecx esi
call sub_4833ab
test al al
jne r-xdata
lea ecx [ esp + 0x8 ]
call sub_4077c7
mov ecx [ esi + 0x2fc ]
lea eax [ esp + 0x8 ]
push eax
call sub_45adbc
test al al
jne r-xdata
mov eax [ esi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x8 ]
push eax
call sub_409b9c
mov eax [ esi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
jmp r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esp + 0x8 ]
call sub_405a64
sub_483e0b
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4833ab
test al al
jne r-xdata
mov eax [ esi + 0x2fc ]
push 0x0
push [ eax ]
call [ ShowWindow@IAT ]
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
sub_483e4b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
push edi
mov [ esp + 0x10 ] ebx
call sub_4833ab
test al al
jne r-xdata
lea ecx [ esp + 0x20 ]
call sub_4077c7
mov eax [ edi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x10 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x14 ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x18 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] eax
inc [ eax ]
call sub_407faf
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call [ CharUpperBuffW@IAT ]
push r--data
lea ecx [ esp + 0x34 ]
call sub_409f3a
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp r-xdata
cmp [ edi + 0x8 ] 0x6
jb r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x30 ]
mov ecx edi
push eax
call sub_456363
mov ebx [ ebx + 0x2fc ]
lea ecx [ esp + 0x10 ]
mov edx r--data
call sub_420c63
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_420c63
test al al
je r-xdata
push 0x0
push 0x0
push 0x1004
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_420c63
test al al
je r-xdata
mov ecx ebx
call sub_45969f
jmp r-xdata
push [ ebx ]
call [ SendMessageW@IAT ]
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_420c63
test al al
je r-xdata
mov eax [ edi + 0x4 ]
lea ecx [ esp + 0x20 ]
push ecx
mov ecx [ eax + 0x14 ]
mov esi [ eax + 0x10 ]
call sub_409c9c
push eax
mov ecx esi
call sub_409c9c
push eax
mov ecx ebx
call sub_4596c1
jmp r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_420c63
test al al
je r-xdata
push 0x0
push 0x0
push 0x1032
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x20 ]
push eax
call sub_409b9c
jmp r-xdata
lea ecx [ esp + 0x30 ]
call sub_409a20
lea ecx [ esp + 0x10 ]
call sub_405a64
lea ecx [ esp + 0x20 ]
call sub_405a64
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_420c63
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_409c9c
push 0x2
push eax
push 0x102c
push [ ebx ]
call [ SendMessageW@IAT ]
mov esi [ ebp + 0xc ]
mov ecx esi
test eax eax
je r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_420c63
test al al
je r-xdata
push 0xffffffff
push 0xffffffff
jmp r-xdata
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_409a20
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi ] eax
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_420c63
test al al
je r-xdata
push 0xffffffff
push 0xffffffff
jmp r-xdata
push 0x1
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_420c63
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_409c9c
mov ecx [ edi + 0x4 ]
mov esi eax
mov ecx [ ecx + 0x14 ]
call sub_409c9c
test eax eax
jne r-xdata
push 0x0
mov ecx ebx
call sub_459769
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_420c63
test al al
je r-xdata
mov ecx ebx
call sub_4597fe
jmp r-xdata
push eax
push esi
mov eax esi
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_420c63
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_409c9c
mov ecx [ edi + 0x4 ]
mov esi eax
mov ecx [ ecx + 0x14 ]
call sub_409c9c
test eax eax
jne r-xdata
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_420c63
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_409c9c
test eax eax
mov ecx ebx
lea eax [ esp + 0x20 ]
push eax
jne r-xdata
push eax
push esi
mov eax esi
mov edx r--data
lea ecx [ esp + 0x10 ]
call sub_420c63
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
mov edi [ eax + 0x14 ]
call sub_409997
mov esi [ esi + 0x8 ]
mov ecx edi
call sub_409c9c
push eax
push esi
mov ecx ebx
call sub_4594e7
push 0x1
push 0x0
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov edx [ esp + 0xc ]
xor eax eax
and [ esi ] 0x0
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
mov ecx ebx
call sub_459425
jmp r-xdata
call sub_4595c9
sub_4841ce
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
push edi
push esi
mov [ ebp - 0x4 ] ebx
mov edi [ esi + 0x8 ]
call sub_4833ab
test al al
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov ecx [ ebx + 0x2fc ]
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_45ad4a
test al al
je r-xdata
cmp edi 0x6
jae r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
call sub_409c9c
mov ebx eax
mov ebx [ ebp - 0xc ]
sub ebx [ ebp - 0x14 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
call sub_409c9c
mov edi eax
mov edi [ ebp - 0x8 ]
sub edi [ ebp - 0x10 ]
jmp r-xdata
cmp edi 0x7
jae r-xdata
mov ecx [ ebp + 0xc ]
call sub_409c9c
mov eax [ ebp - 0x14 ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
push 0x29
mov eax [ ecx + 0xc ]
mov ecx eax
mov [ ebp + 0xc ] eax
call sub_409dae
test al al
je r-xdata
mov ecx esi
call sub_409c9c
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
push 0x29
mov [ ebp + 0xc ] eax
mov esi [ ecx + 0x10 ]
mov ecx esi
call sub_409dae
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x4 ]
push edi
push ebx
push eax
push [ ebp + 0xc ]
mov ecx [ ecx + 0x2fc ]
call sub_45af02
jmp r-xdata
sub_4842b7
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
push esi
call sub_4833ab
test al al
jne r-xdata
cmp [ esi + 0x8 ] 0x5
push edi
jb r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax [ ebx + 0x2fc ]
mov edi [ eax ]
mov eax [ esi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409997
push edi
push [ esi + 0x8 ]
lea ecx [ ebx + 0x88 ]
call sub_46057d
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_409c9c
test eax eax
je r-xdata
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x2fc ]
mov edi [ eax ]
mov eax [ esi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409997
push edi
push [ esi + 0x8 ]
lea ecx [ ebx + 0x88 ]
call sub_46073e
jmp r-xdata
pop edi
sub_48434a
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov edi ecx
mov [ ebp - 0x4 ] 0x0
call sub_4833ab
test al al
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x4
jbe r-xdata
mov eax [ esi + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409997
push [ ebp - 0x4 ]
mov ecx [ edi + 0x2fc ]
push [ esi + 0x8 ]
call sub_4161c3
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_409c9c
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x4 ] 0x1
sub_4843bc
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4833ab
test al al
jne r-xdata
mov eax [ esi + 0x2fc ]
push 0x4
push [ eax ]
call [ ShowWindow@IAT ]
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
sub_4843fb
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
push edi
mov [ esp + 0x18 ] ebx
call sub_4833ab
test al al
jne r-xdata
lea ecx [ esp + 0x28 ]
call sub_4077c7
mov eax [ edi + 0x4 ]
mov [ esp + 0x13 ] 0x0
mov esi [ eax + 0xc ]
mov ecx esi
call sub_409997
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x18 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x24 ] eax
inc [ eax ]
call sub_407faf
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call [ CharUpperBuffW@IAT ]
push r--data
lea ecx [ esp + 0x3c ]
call sub_409f3a
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
xor eax eax
inc eax
push 0x0
mov [ esi + 0xc ] eax
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp r-xdata
cmp [ edi + 0x8 ] 0x6
jb r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x38 ]
mov ecx edi
push eax
call sub_456363
mov ebx [ ebx + 0x2fc ]
lea ecx [ esp + 0x18 ]
mov edx r--data
call sub_420c63
test al al
je r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
push 0x0
push 0x0
push 0x1105
push [ ebx ]
call [ SendMessageW@IAT ]
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_409997
push 0x1
jmp r-xdata
lea ecx [ esp + 0x38 ]
call sub_409a20
lea ecx [ esp + 0x18 ]
call sub_405a64
lea ecx [ esp + 0x28 ]
call sub_405a64
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_409997
push 0x0
jmp r-xdata
push [ esi + 0x8 ]
mov ecx ebx
call sub_459a01
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
mov ecx ebx
call sub_459c0e
mov esi [ ebp + 0xc ]
test eax eax
mov ecx esi
setne bl
call sub_409a20
movzx eax bl
mov [ esi + 0xc ] 0x1
mov [ esi ] eax
jmp r-xdata
push [ esi + 0x8 ]
mov ecx ebx
call sub_459a78
jmp r-xdata
test al al
jne r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_409997
push 0x1
mov edx [ esp + 0x14 ]
push 0x0
push 0x1
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
mov ecx ebx
call sub_459d01
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x10 ]
call sub_409c53
movzx eax al
mov ecx ebx
push eax
lea eax [ esp + 0x2c ]
push eax
call sub_459f88
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_409997
lea eax [ esp + 0x28 ]
mov ecx ebx
push eax
push [ esi + 0x8 ]
call sub_459fde
jmp r-xdata
mov al [ esp + 0x13 ]
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
mov ecx ebx
call sub_45a0d9
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ esp + 0x13 ] al
lea eax [ esp + 0x28 ]
push eax
call sub_409b9c
jmp r-xdata
mov edx r--data
lea ecx [ esp + 0x18 ]
call sub_420c63
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
mov ecx ebx
call sub_45a107
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x10 ]
mov ecx esi
call sub_409997
push 0x0
sub_484737
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x98 ] 0x0
mov ecx [ edx + 0x4 ]
mov ecx [ ecx ]
call sub_409399
test al al
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
push edx
mov ecx esi
call sub_40b9ad
push 0x1
mov ecx esi
call sub_40b93d
test eax eax
jg r-xdata
mov eax [ esi + 0x1f0 ]
mov eax [ eax ]
mov [ esi + 0x98 ] eax
jns r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
sub_4847a8
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esp + 0xc ] r--data
xor ecx ecx
mov eax [ ebx + 0x8 ]
inc ecx
push edi
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x3c ] ecx
mov edi eax
mov [ esp + 0x2c ] ecx
lea ecx [ esp + 0x30 ]
push r--data
mov [ esp + 0x34 ] eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x2c ] eax
call sub_409bf8
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
push r--data
lea ecx [ esp + 0x24 ]
call sub_409bf8
mov eax [ ebx + 0x4 ]
lea ecx [ esp + 0x10 ]
push [ eax ]
call sub_456363
cmp [ esp + 0xc ] 0x2
lea ecx [ esp + 0x10 ]
jb r-xdata
lea eax [ esp + 0x20 ]
push eax
mov eax [ ebx + 0x4 ]
push [ eax + 0x4 ]
jmp r-xdata
cmp [ esp + 0xc ] 0x3
jne r-xdata
mov eax [ esi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
jmp r-xdata
call sub_456363
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_456363
lea eax [ esp + 0x10 ]
mov ecx esi
push eax
call sub_4833ab
test al al
jne r-xdata
lea ecx [ esp + 0x40 ]
call sub_4077c7
mov ecx [ esi + 0x2fc ]
lea eax [ esp + 0x40 ]
push eax
push edi
call sub_459897
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
lea edi [ eax - 0x1 ]
lea ecx [ esp + 0x20 ]
call sub_409a20
lea ecx [ esp + 0x10 ]
call sub_4563f2
lea ecx [ esp + 0x30 ]
call sub_409a20
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
push 0x0
push 0x1
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x40 ]
push eax
call sub_409b9c
jmp r-xdata
lea ecx [ esp + 0x40 ]
call sub_405a64
sub_4848f8
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x9c
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push esi
push edi
mov edi ecx
mov [ esp + 0x20 ] eax
mov esi [ ebx + 0x8 ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x2c ] eax
mov [ esp + 0x24 ] al
mov [ esp + 0x28 ] al
mov [ esp + 0x1c ] al
cmp esi 0x4
jb r-xdata
cmp esi 0x5
jb r-xdata
mov eax [ ebx + 0x4 ]
push 0x29
mov eax [ eax + 0xc ]
mov ecx eax
mov [ esp + 0x1c ] eax
call sub_409dae
test al al
jne r-xdata
cmp esi 0x6
jb r-xdata
mov eax [ ebx + 0x4 ]
push 0x29
mov eax [ eax + 0x10 ]
mov ecx eax
mov [ esp + 0x1c ] eax
call sub_409dae
test al al
jne r-xdata
mov ecx [ esp + 0x18 ]
call sub_409997
mov ecx [ esp + 0x18 ]
mov eax [ ecx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0x20 ] eax
cmp [ esp + 0x28 ] 0x0
mov [ esp + 0x50 ] 0x30
mov [ esp + 0x54 ] 0x1a0
je r-xdata
mov ecx [ ebx + 0x4 ]
push 0x29
mov esi [ ecx + 0x14 ]
mov ecx esi
call sub_409dae
test al al
jne r-xdata
mov ecx [ esp + 0x18 ]
call sub_409c9c
mov [ esp + 0x2c ] eax
mov eax [ ebx + 0x4 ]
and [ esp + 0x58 ] 0x0
and [ esp + 0x70 ] 0x0
and [ esp + 0x5c ] 0x0
mov esi [ eax ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov eax [ eax ]
mov [ esp + 0x74 ] eax
xor eax eax
mov [ esp + 0x6c ] eax
mov [ esp + 0x68 ] eax
mov [ esp + 0x64 ] eax
mov [ esp + 0x60 ] eax
lea eax [ esp + 0xc ]
push eax
call [ GetCursorPos@IAT ]
add [ esp + 0xc ] 0x10
lea eax [ esp + 0x30 ]
add [ esp + 0x10 ] 0x10
push eax
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
mov esi [ esp + 0x14 ]
cmp esi 0x2
jb r-xdata
mov [ esp + 0x54 ] 0x1a2
mov ecx esi
call sub_409c9c
mov ecx [ ebx + 0x4 ]
and eax 0xffffff01
mov [ esp + 0x24 ] eax
mov ecx [ ecx + 0x14 ]
call sub_409c9c
mov ecx [ ebx + 0x4 ]
shr al 0x1
and eax 0xffffff01
mov [ esp + 0x28 ] eax
mov ecx [ ecx + 0x14 ]
call sub_409c9c
shr al 0x2
and eax 0xffffff01
mov [ esp + 0x1c ] eax
cmp esi 0x3
jb r-xdata
mov eax [ ebx + 0x4 ]
push 0x29
mov eax [ eax + 0x4 ]
mov ecx eax
mov [ esp + 0x18 ] eax
call sub_409dae
test al al
jne r-xdata
mov ebx [ esp + 0x24 ]
push 0xfffffff0
push [ edi + 0xe8 ]
call [ GetWindowLongW@IAT ]
test bl bl
je r-xdata
mov eax [ ebx + 0x4 ]
push 0x29
mov esi [ eax + 0x8 ]
mov ecx esi
call sub_409dae
test al al
jne r-xdata
mov ecx [ esp + 0x14 ]
call sub_409c9c
mov [ esp + 0xc ] eax
test al 0x40
je r-xdata
test al 0x40
je r-xdata
mov ecx esi
call sub_409c9c
mov [ esp + 0x10 ] eax
xor esi esi
push [ edi + 0xe8 ]
call [ DestroyWindow@IAT ]
xor esi esi
mov [ edi + 0xe8 ] esi
jmp r-xdata
mov ebx [ SendMessageW@IAT ]
lea ecx [ esp + 0x50 ]
push ecx
push esi
push 0x439
push eax
test bl bl
je r-xdata
mov eax [ edi + 0xe8 ]
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
xor esi esi
push esi
push esi
push 0x41d
push [ edi + 0xe8 ]
call ebx
jmp r-xdata
push 0x3
push 0x43
jmp r-xdata
cmp [ esp + 0x1c ] 0x0
je r-xdata
push 0xd8f0d8f0
push esi
push 0x412
push [ edi + 0xe8 ]
call ebx
lea eax [ esp + 0x50 ]
push eax
push 0x1
push 0x411
push [ edi + 0xe8 ]
call ebx
push [ edi + 0xe8 ]
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
call ebx
push [ esp + 0x20 ]
push [ esp + 0x30 ]
push 0x421
push [ edi + 0xe8 ]
call ebx
test eax eax
je r-xdata
pop eax
push esi
push esi
push esi
push esi
mov ecx 0x80000000
push ecx
push ecx
push ecx
push ecx
push eax
push esi
push r--data
push 0x8
call [ CreateWindowExW@IAT ]
mov ebx [ SendMessageW@IAT ]
lea ecx [ esp + 0x50 ]
push ecx
push esi
push 0x432
push eax
mov [ edi + 0xe8 ] eax
call ebx
push [ esp + 0x38 ]
push esi
push 0x418
push [ edi + 0xe8 ]
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
lea eax [ esp + 0x40 ]
push eax
push [ edi + 0xe8 ]
call [ GetWindowRect@IAT ]
mov esi [ esp + 0x48 ]
sub esi [ esp + 0x40 ]
mov eax [ esp + 0x4c ]
inc esi
sub eax [ esp + 0x44 ]
push 0x2
push [ esp + 0x14 ]
inc eax
push [ esp + 0x14 ]
mov [ esp + 0x20 ] eax
call [ MonitorFromPoint@IAT ]
lea ecx [ esp + 0x80 ]
mov [ esp + 0x80 ] 0x28
push ecx
push eax
call [ GetMonitorInfoW@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0xc ]
cmp edx [ esp + 0x30 ]
jge r-xdata
lea eax [ esp + 0x84 ]
push eax
lea eax [ esp + 0x34 ]
push eax
call [ CopyRect@IAT ]
mov eax [ esp + 0x38 ]
sub eax esi
cmp edx eax
jle r-xdata
mov edx [ esp + 0x30 ]
jmp r-xdata
mov eax [ esp + 0x10 ]
cmp eax [ esp + 0x34 ]
jge r-xdata
mov edx eax
mov [ esp + 0xc ] edx
mov ecx [ esp + 0x3c ]
sub ecx [ esp + 0x14 ]
cmp eax ecx
jle r-xdata
mov eax [ esp + 0x34 ]
movzx ecx ax
shl ecx 0x10
movzx eax dx
or ecx eax
push ecx
push 0x0
push 0x412
push [ edi + 0xe8 ]
call ebx
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ecx
jmp r-xdata
mov [ esp + 0x10 ] eax
jmp r-xdata
sub_484ca8
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov ebx ecx
call sub_40b9ad
xor edi edi
mov ecx ebx
inc edi
push edi
call sub_40b93d
test eax eax
jg r-xdata
mov eax [ ebx + 0x1f0 ]
mov esi [ eax ]
call [ GetForegroundWindow@IAT ]
cmp esi eax
jne r-xdata
jns r-xdata
mov eax [ ebx + 0x1f0 ]
push [ eax ]
call sub_404a35
mov esi [ ebp + 0xc ]
mov ecx esi
mov [ esp + 0xc ] eax
test eax eax
jne r-xdata
mov ecx [ ebx + 0x2f4 ]
call sub_4652eb
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] edi
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
mov eax [ ebx + 0x1f0 ]
mov edi [ eax ]
call sub_409a20
mov [ esi + 0xc ] 0x7
mov [ esi ] edi
mov eax [ ebx ]
push 0x0
push [ esp + 0x10 ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_41fea1
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] edi
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebx + 0x2f4 ]
call sub_4652eb
sub_484d72
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b9ad
mov ecx esi
call sub_485f8e
test eax eax
jg r-xdata
push edi
call [ GetForegroundWindow@IAT ]
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx esi
call sub_409a20
mov [ esi ] edi
mov [ esi + 0xc ] 0x7
pop edi
jns r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
xor eax eax
pop esi
pop ebp
retn 0x8
sub_484dd8
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b9ad
push 0x1
mov ecx esi
call sub_40b93d
test eax eax
jg r-xdata
mov eax [ esi + 0x1f0 ]
push 0x0
push 0x0
push 0x10
push [ eax ]
call [ PostMessageW@IAT ]
mov ecx [ esi + 0x2f4 ]
call sub_4652eb
jns r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
xor eax eax
pop esi
pop ebp
retn 0x8
sub_484e42
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b9ad
push 0x1
mov ecx esi
call sub_40b93d
test eax eax
jg r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
jns r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
sub_484e8b
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
call sub_40b9ad
xor ebx ebx
mov ecx esi
inc ebx
push ebx
call sub_40b93d
test eax eax
jg r-xdata
mov eax [ esi + 0x1f0 ]
push [ eax ]
call sub_41619a
test al al
je r-xdata
jns r-xdata
mov ebx [ edi + 0x8 ]
mov [ esp + 0xc ] 0x4
cmp ebx 0x2
jbe r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] ebx
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
jmp r-xdata
cmp ebx 0x3
jbe r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
mov [ esp + 0xc ] eax
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx 0x1f4
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0xc ]
call sub_409c9c
mov ebx eax
jmp r-xdata
lea edi [ ecx - 0x1 ]
mov ecx [ esp + 0xc ]
lea ecx [ ecx * 2 - 0x2 ]
cmp ecx 0x1
jle r-xdata
mov eax [ esi + 0x1f0 ]
push 0x1
push [ eax ]
call [ FlashWindow@IAT ]
mov ecx ebx
call sub_4652eb
dec edi
jne r-xdata
sub_484f57
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi ecx
push edi
mov edi [ GetForegroundWindow@IAT ]
mov [ ebp - 0x4 ] esi
call edi
mov ebx eax
mov dl 0x1
mov ecx ebx
call sub_463685
lea eax [ ebp - 0xc ]
push eax
call [ GetCaretPos@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push ebx
call [ ClientToScreen@IAT ]
call edi
push eax
lea eax [ ebp - 0x14 ]
push eax
push [ esi + 0x108 ]
call sub_473ab6
mov eax [ ebp - 0x14 ]
sub [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
sub [ ebp - 0x8 ] eax
call sub_40942e
push 0x2
mov esi eax
push 0x1
push esi
call sub_4091b0
mov ecx [ ebp - 0xc ]
xor eax eax
xor edi edi
mov [ ebp - 0x24 ] ecx
inc eax
mov [ ebp - 0x1c ] edi
push edi
push eax
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x24 ]
push eax
push esi
call sub_409040
add esp 0x1c
lea ecx [ ebp - 0x24 ]
call sub_409a20
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
xor eax eax
inc eax
mov [ ebp - 0x1c ] edi
push eax
push eax
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x24 ]
push eax
push esi
call sub_409040
add esp 0x10
lea ecx [ ebp - 0x24 ]
call sub_409a20
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov edx [ ebp - 0x4 ]
xor edi edi
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
push edi
mov eax [ edx ]
push 0x1
mov ecx [ eax + 0x4 ]
add ecx edx
call sub_456883
jmp r-xdata
xor dl dl
mov ecx ebx
call sub_463685
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_485051
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b9ad
push 0x1
mov ecx esi
call sub_40b93d
test eax eax
jg r-xdata
lea ecx [ esp + 0x8 ]
call sub_4077c7
mov ecx [ esi + 0x1f0 ]
lea edx [ esp + 0x8 ]
mov ecx [ ecx ]
call sub_46441d
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x8 ]
push eax
call sub_409b9c
lea ecx [ esp + 0x8 ]
call sub_405a64
push 0x0
jns r-xdata
push 0x1
neg eax
push eax
jmp r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
jmp r-xdata
sub_4850d1
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b9ad
mov edi [ ebp + 0xc ]
mov ecx edi
call sub_409a20
and [ edi ] 0x0
xor ebx ebx
inc ebx
mov ecx esi
push ebx
mov [ edi + 0xc ] ebx
call sub_40b93d
test eax eax
jg r-xdata
mov eax [ esi + 0x1f0 ]
lea ecx [ esp + 0x20 ]
push ecx
push [ eax ]
call [ GetClientRect@IAT ]
test eax eax
je r-xdata
push 0x0
jns r-xdata
push 0x0
mov ecx edi
call sub_40942e
push 0x2
mov esi eax
push ebx
push esi
call sub_4091b0
mov ecx [ esp + 0x34 ]
lea eax [ esp + 0x1c ]
sub ecx [ esp + 0x2c ]
add esp 0xc
and [ esp + 0x18 ] 0x0
mov [ esp + 0x10 ] ecx
mov [ esp + 0x1c ] ebx
push 0x0
push ebx
push eax
push esi
call sub_409040
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_409a20
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x24 ]
and [ esp + 0x18 ] 0x0
push ebx
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push ebx
push eax
push esi
mov [ esp + 0x2c ] ebx
call sub_409040
add esp 0x10
lea ecx [ esp + 0x10 ]
call sub_409a20
jmp r-xdata
push ebx
neg eax
push eax
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
sub_4851bb
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b9ad
push 0x1
mov ecx esi
call sub_40b93d
test eax eax
jg r-xdata
mov eax [ esi + 0x1f0 ]
mov esi [ ebp + 0xc ]
mov ecx esi
push edi
mov edi [ eax ]
call sub_409a20
mov [ esi ] edi
pop edi
push 0x0
jns r-xdata
push 0x1
neg eax
push eax
jmp r-xdata
mov [ esi + 0xc ] 0x7
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
jmp r-xdata
sub_485220
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b9ad
xor ebx ebx
mov ecx esi
inc ebx
push ebx
call sub_40b93d
test eax eax
jg r-xdata
mov ecx [ esi + 0x1f0 ]
lea eax [ esp + 0x10 ]
xor edi edi
push edi
push eax
call sub_45ad4a
mov ecx [ ebp + 0xc ]
call sub_40942e
push 0x4
mov esi eax
push ebx
push esi
call sub_4091b0
mov ecx [ esp + 0x1c ]
lea eax [ esp + 0x2c ]
add esp 0xc
mov [ esp + 0x20 ] ecx
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] ebx
push edi
push ebx
push eax
push esi
call sub_409040
add esp 0x10
lea ecx [ esp + 0x20 ]
call sub_409a20
mov eax [ esp + 0x14 ]
push ebx
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x24 ]
push ebx
push eax
push esi
mov [ esp + 0x38 ] edi
mov [ esp + 0x3c ] ebx
call sub_409040
add esp 0x10
lea ecx [ esp + 0x20 ]
call sub_409a20
mov eax [ esp + 0x18 ]
sub eax [ esp + 0x10 ]
push 0x2
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x24 ]
push ebx
push eax
push esi
mov [ esp + 0x38 ] edi
mov [ esp + 0x3c ] ebx
call sub_409040
add esp 0x10
lea ecx [ esp + 0x20 ]
call sub_409a20
mov eax [ esp + 0x1c ]
sub eax [ esp + 0x14 ]
push 0x3
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x24 ]
push ebx
push eax
push esi
mov [ esp + 0x38 ] edi
mov [ esp + 0x3c ] ebx
call sub_409040
add esp 0x10
lea ecx [ esp + 0x20 ]
call sub_409a20
jns r-xdata
xor edi edi
push edi
push ebx
xor edi edi
neg eax
push edi
push eax
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] ebx
mov [ esi ] edi
jmp r-xdata
sub_485355
push ebp
mov ebp esp
push ecx
push ecx
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b9ad
push 0x1
mov ecx esi
call sub_40b93d
test eax eax
jg r-xdata
lea eax [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x1f0 ]
push [ eax ]
call [ GetWindowThreadProcessId@IAT ]
mov eax [ ebp + 0x8 ]
fild [ ebp + 0x8 ]
test eax eax
jns r-xdata
jns r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
fstp [ ebp - 0x8 ]
call sub_409a20
fld [ ebp - 0x8 ]
fstp [ esi ]
mov [ esi + 0xc ] 0x3
fadd [ r--data ]
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
or [ esi ] 0xffffffff
mov [ esi + 0xc ] 0x1
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4853df
push ebp
mov ebp esp
push ebx
push esi
push edi
push [ ebp + 0x8 ]
xor ebx ebx
mov esi ecx
inc ebx
mov edi ebx
call sub_40b9ad
push ebx
mov ecx esi
call sub_40b93d
test eax eax
jg r-xdata
mov eax [ esi + 0x1f0 ]
mov esi [ eax ]
push esi
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
push 0x0
jns r-xdata
push esi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
push 0x3
pop edi
push ebx
neg eax
push eax
jmp r-xdata
call [ GetForegroundWindow@IAT ]
cmp eax esi
jne r-xdata
or edi 0x4
pop edi
mov [ esi + 0xc ] ebx
xor eax eax
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
jmp r-xdata
push esi
call [ IsIconic@IAT ]
test eax eax
je r-xdata
or edi 0x8
push esi
call [ IsZoomed@IAT ]
test eax eax
je r-xdata
or edi 0x10
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi ] edi
or edi 0x20
sub_48548a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b9ad
push 0x1
mov ecx esi
call sub_40b93d
test eax eax
jg r-xdata
mov eax [ esi + 0x1f0 ]
push [ eax ]
call sub_41619a
test al al
jne r-xdata
jns r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esp + 0x8 ]
call sub_4077c7
mov ecx [ esi + 0x1f0 ]
lea eax [ esp + 0x8 ]
mov dl [ esi + 0x2dc ]
push eax
mov ecx [ ecx ]
call sub_464947
pop ecx
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x8 ]
push eax
call sub_409b9c
lea ecx [ esp + 0x8 ]
call sub_405a64
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
sub_48551f
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b9ad
push 0x1
mov ecx esi
call sub_40b93d
test eax eax
jg r-xdata
lea ecx [ esp + 0x8 ]
call sub_4077c7
mov ecx [ esi + 0x1f0 ]
lea eax [ esp + 0x8 ]
push eax
call sub_45adbc
mov ecx [ ebp + 0xc ]
lea eax [ esp + 0x8 ]
push eax
call sub_409b9c
lea ecx [ esp + 0x8 ]
call sub_405a64
jns r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_409bf8
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_48559a
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b9ad
push 0x1
mov ecx esi
call sub_40b93d
test eax eax
jg r-xdata
mov ecx [ esi + 0x1f0 ]
mov ecx [ ecx ]
call sub_465490
mov ecx [ esi + 0x2f4 ]
call sub_4652eb
jns r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
xor eax eax
pop esi
pop ebp
retn 0x8
sub_4855fd
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
push esi
push edi
push 0x10000
mov edi ecx
call sub_420f36
pop ecx
push eax
lea ecx [ esp + 0x14 ]
call sub_40538e
mov eax [ edi + 0x2d4 ]
lea ecx [ edi + 0x1d0 ]
push r--data
mov [ esp + 0x10 ] eax
call sub_409bf8
lea ecx [ edi + 0x1e0 ]
push r--data
call sub_407d2c
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
lea ecx [ edi + 0x1d0 ]
call sub_409b9c
cmp [ ebx + 0x8 ] 0x1
jbe r-xdata
mov [ edi + 0x2d4 ] 0x4
jmp r-xdata
xor ebx ebx
mov ecx edi
push ebx
call sub_40b93d
test eax eax
jns r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx esi
call sub_409997
push [ esi + 0x8 ]
lea ecx [ edi + 0x1e0 ]
call sub_4081a7
mov eax [ esp + 0xc ]
mov ecx [ ebp + 0xc ]
mov ebx [ edi + 0x2e8 ]
mov [ edi + 0x2d4 ] eax
call sub_40942e
push 0x2
lea ecx [ ebx + 0x1 ]
mov esi eax
push ecx
push 0x2
push esi
mov [ esp + 0x1c ] esi
call sub_4091b0
xor eax eax
mov [ esp + 0x28 ] ebx
push eax
push eax
mov [ esp + 0x38 ] eax
lea eax [ esp + 0x30 ]
push 0x2
push eax
push esi
mov [ esp + 0x48 ] 0x1
call sub_409040
add esp 0x24
lea ecx [ esp + 0x18 ]
call sub_409a20
xor esi esi
inc esi
cmp ebx esi
jl r-xdata
neg eax
push ebx
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] ebx
jmp r-xdata
mov eax [ esp + 0x14 ]
dec [ eax ]
jne r-xdata
mov eax [ edi + 0x2e4 ]
push 0x7fff
push [ esp + 0x14 ]
mov eax [ eax + esi * 4 - 0x4 ]
push [ eax ]
call [ GetWindowTextW@IAT ]
push 0x10
call sub_420f36
pop ecx
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
call j_sub_422ed5#3
pop ecx
push [ esp + 0x10 ]
call j_sub_422ed5#3
pop ecx
and [ esp + 0x20 ] 0x0
push [ esp + 0x10 ]
mov ecx eax
call sub_407f41
mov [ esp + 0x20 ] eax
jmp r-xdata
push 0x0
push esi
push 0x2
lea eax [ esp + 0x24 ]
mov [ esp + 0x30 ] 0x4
push eax
push [ esp + 0x1c ]
call sub_409040
add esp 0x14
lea ecx [ esp + 0x18 ]
call sub_409a20
mov eax [ edi + 0x2e4 ]
and [ esp + 0x30 ] 0x0
push 0x1
push esi
mov eax [ eax + esi * 4 - 0x4 ]
push 0x2
mov [ esp + 0x40 ] 0x7
mov eax [ eax ]
mov [ esp + 0x34 ] eax
lea eax [ esp + 0x34 ]
push eax
push [ esp + 0x1c ]
call sub_409040
add esp 0x14
lea ecx [ esp + 0x28 ]
call sub_409a20
inc esi
cmp esi ebx
jle r-xdata
sub_485802
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
push edi
push 0x10000
mov eax [ esi + 0x8 ]
mov [ ebp - 0x10 ] eax
call sub_420f36
pop ecx
push eax
lea ecx [ ebp - 0x24 ]
call sub_40538e
xor edi edi
mov ecx ebx
push esi
mov [ ebp - 0x14 ] edi
call sub_40b9ad
push 0x1
mov ecx ebx
call sub_40b93d
test eax eax
jg r-xdata
mov eax [ ebx + 0x1f0 ]
mov eax [ eax ]
push eax
mov [ ebp - 0x1c ] eax
call [ GetMenu@IAT ]
mov esi eax
mov [ ebp - 0x8 ] esi
test esi esi
jne r-xdata
jns r-xdata
push 0x3
pop edi
mov [ ebp - 0xc ] edi
cmp [ ebp - 0x10 ] edi
jb r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] 0x1
mov [ esi ] edi
jmp r-xdata
neg eax
push edi
push eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
call sub_456883
jmp r-xdata
mov esi [ ebp - 0x1c ]
mov dl 0x1
mov ecx esi
call sub_463685
push 0x0
push [ ebp - 0x14 ]
push 0x111
push esi
call [ PostMessageW@IAT ]
xor dl dl
mov ecx esi
call sub_463685
mov ecx [ ebx + 0x2f4 ]
call sub_4652eb
push esi
call [ GetMenuItemCount@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
mov eax [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
dec [ eax ]
jne r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x8
push eax
call j_sub_422ed5#3
push [ ebp - 0x24 ]
call j_sub_422ed5#3
pop ecx
pop ecx
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
xor eax eax
dec ecx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] ecx
mov edi [ ebp - 0xc ]
push [ ebp - 0x4 ]
cmp edi [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax [ ebp - 0x18 ]
ja r-xdata
push [ ebp - 0x8 ]
call [ GetSubMenu@IAT ]
mov esi eax
mov [ ebp - 0x8 ] esi
test esi esi
je r-xdata
mov esi [ ebp - 0x8 ]
push esi
call [ GetMenuItemID@IAT ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
inc edi
mov [ ebp - 0xc ] edi
cmp edi [ ebp - 0x10 ]
jbe r-xdata
push 0x400
push 0x7fff
push [ ebp - 0x24 ]
push eax
push esi
call [ GetMenuStringW@IAT ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + edi * 4 - 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
mov esi [ ebp - 0xc ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + esi * 4 - 0x4 ]
mov ecx esi
call sub_409997
mov eax [ esi + 0x8 ]
push edi
mov esi [ eax ]
call sub_422d7c
push eax
push [ ebp - 0x24 ]
push esi
call sub_4237e2
add esp 0x10
test eax eax
je r-xdata
cmp eax 0xffffffff
jne r-xdata
sub_4859cd
push esi
push 0x0
push r--data
mov esi ecx
call [ FindWindowW@IAT ]
push 0x0
push 0x197
push 0x111
push eax
call [ PostMessageW@IAT ]
mov ecx [ esi + 0x2f4 ]
call sub_4652eb
xor eax eax
pop esi
retn 0x8
sub_485a01
push esi
push 0x0
push 0x1a0
push 0x111
push 0x0
push r--data
mov esi ecx
call [ FindWindowW@IAT ]
push eax
call [ PostMessageW@IAT ]
mov ecx [ esi + 0x2f4 ]
call sub_4652eb
xor eax eax
pop esi
retn 0x8
sub_485a35
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
mov ebx [ edi + 0x8 ]
mov [ esp + 0x18 ] ebx
call sub_40b9ad
push 0x1
mov ecx esi
call sub_40b93d
test eax eax
jg r-xdata
mov eax [ esi + 0x1f0 ]
push 0xfffffff0
push [ eax ]
call [ GetWindowLongW@IAT ]
mov ecx [ esi + 0x1f0 ]
test eax 0x40000000
lea eax [ esp + 0x20 ]
je r-xdata
jns r-xdata
push 0x0
push 0x1
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
mov ebx [ esp + 0x28 ]
sub ebx [ esp + 0x20 ]
mov eax [ edi + 0x4 ]
push 0x29
mov ebx [ eax + 0x10 ]
mov ecx ebx
call sub_409dae
test al al
jne r-xdata
push eax
call sub_45ad4a
cmp ebx 0x5
jb r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi [ esp + 0x2c ]
sub edi [ esp + 0x24 ]
mov eax [ edi + 0x4 ]
push 0x29
mov edi [ eax + 0x14 ]
mov ecx edi
call sub_409dae
test al al
jne r-xdata
mov ecx ebx
call sub_409c9c
mov ebx eax
jmp r-xdata
mov ecx [ esp + 0x1c ]
call sub_409c9c
mov eax [ esp + 0x20 ]
jmp r-xdata
mov ecx edi
call sub_409c9c
mov edi eax
jmp r-xdata
cmp [ esp + 0x14 ] 0x6
jb r-xdata
mov ecx [ esp + 0x1c ]
call sub_409c9c
mov eax [ esp + 0x24 ]
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0x8 ]
push 0x29
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0xc ]
mov ecx eax
mov [ esp + 0x20 ] eax
call sub_409dae
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x29
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
mov ecx eax
mov [ esp + 0x20 ] eax
call sub_409dae
test al al
je r-xdata
push edi
push ebx
push [ esp + 0x14 ]
push [ esp + 0x1c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + 0x18 ]
call sub_409c9c
mov [ esp + 0x1c ] eax
cmp eax 0xffffffff
je r-xdata
cmp [ esp + 0x14 ] 0x7
mov [ esp + 0xc ] eax
jb r-xdata
test eax eax
jle r-xdata
push 0xa
pop eax
mov [ esp + 0x1c ] eax
cmp eax 0x64
jle r-xdata
mov edx [ esp + 0xc ]
lea ecx [ esp + 0x14 ]
push ecx
lea ecx [ esp + 0x1c ]
push ecx
mov ecx [ esp + 0x18 ]
push 0x1
push eax
call sub_465115
add esp 0x10
test al al
je r-xdata
cmp [ esp + 0xc ] ecx
jne r-xdata
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x14 ] ecx
cmp [ esp + 0x10 ] edx
jne r-xdata
mov eax [ esi + 0x1f0 ]
mov esi [ ebp + 0xc ]
mov ecx esi
mov edi [ eax ]
call sub_409a20
mov [ esi + 0xc ] 0x7
mov [ esi ] edi
mov ecx [ esi + 0x1f0 ]
push edi
push ebx
push [ esp + 0x1c ]
push [ esp + 0x24 ]
call sub_45af02
push 0x32
pop ecx
call sub_4652eb
mov eax [ esp + 0x1c ]
jmp r-xdata
push edi
push ebx
push ecx
push edx
jmp r-xdata
mov ecx [ esi + 0x1f0 ]
call sub_45af02
sub_485c3e
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
call sub_40b9ad
xor ebx ebx
mov ecx esi
inc ebx
push ebx
call sub_40b93d
test eax eax
jg r-xdata
mov eax [ esi + 0x1f0 ]
push [ eax ]
call sub_41619a
test al al
je r-xdata
xor edi edi
test eax eax
jns r-xdata
mov eax [ esi + 0x1f0 ]
mov esi [ eax ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
xor edi edi
push 0x13
push edi
push edi
push edi
push edi
cmp eax ebx
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] ebx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
mov [ esi + 0xc ] ebx
mov [ esi ] edi
jmp r-xdata
neg eax
push edi
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
push 0xfffffffe
push 0xffffffff
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push esi
call [ SetWindowPos@IAT ]
sub_485cdd
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
call sub_40b9ad
xor ebx ebx
mov ecx esi
inc ebx
push ebx
call sub_40b93d
test eax eax
jg r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
cmp eax 0x40
jne r-xdata
jns r-xdata
cmp eax 0x41
jne r-xdata
mov ecx [ esi + 0x1f0 ]
push ebx
call sub_45ac6f
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] ebx
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_456883
push eax
mov eax [ esi + 0x1f0 ]
push [ eax ]
call [ ShowWindow@IAT ]
mov ecx [ esi + 0x2f4 ]
call sub_4652eb
mov eax [ esi + 0x1f0 ]
push 0x0
push [ eax ]
call [ EnableWindow@IAT ]
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_485d7a
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
mov bl al
mov ecx edi
push esi
mov [ ebp + 0x8 ] bl
call sub_40b9ad
push 0x1
mov ecx edi
call sub_40b93d
test eax eax
jg r-xdata
mov eax [ edi + 0x1f0 ]
push 0xffffffec
mov esi [ eax ]
push esi
call [ GetWindowLongW@IAT ]
mov ecx 0x80000
cmp bl 0xff
jb r-xdata
jns r-xdata
or eax ecx
push eax
push 0xffffffec
push esi
call [ SetWindowLongW@IAT ]
push 0x2
push [ ebp + 0x8 ]
push 0x0
push esi
call [ SetLayeredWindowAttributes@IAT ]
test ecx eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
call sub_409a20
and [ esi ] 0x0
mov [ esi + 0xc ] 0x1
jmp r-xdata
neg eax
push 0x0
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
xor eax ecx
push eax
push 0xffffffec
push esi
call [ SetWindowLongW@IAT ]
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_485e2e
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_485fed
push ecx
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] 0x1
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_41fe53
push 0x0
mov ecx esi
mov [ esi + 0xf8 ] 0x3
call sub_410b30
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_41feda
mov ecx [ ebp + 0xc ]
push eax
call sub_409e9c
xor eax eax
pop esi
pop ebp
retn 0x8
sub_485e86
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_485fed
push ecx
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] 0x1
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_41fe53
push 0x0
mov ecx esi
mov [ esi + 0xf8 ] 0x5
call sub_410b30
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_41feda
mov ecx [ ebp + 0xc ]
push eax
call sub_409e9c
xor eax eax
pop esi
pop ebp
retn 0x8
sub_485ede
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_485fed
push ecx
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] 0x1
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_41fe53
push 0x0
mov ecx esi
mov [ esi + 0xf8 ] 0x4
call sub_410b30
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_41feda
mov ecx [ ebp + 0xc ]
push eax
call sub_409e9c
xor eax eax
pop esi
pop ebp
retn 0x8
sub_485f36
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_485fed
push ecx
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] 0x1
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_41fe53
push 0x0
mov ecx esi
mov [ esi + 0xf8 ] 0x6
call sub_410b30
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
call sub_41feda
mov ecx [ ebp + 0xc ]
push eax
call sub_409e9c
xor eax eax
pop esi
pop ebp
retn 0x8
sub_485f8e
push ebx
push esi
push edi
push 0x0
mov edi ecx
call sub_40b93d
mov esi eax
test esi esi
jg r-xdata
call [ GetForegroundWindow@IAT ]
mov esi [ edi + 0x2e8 ]
xor edx edx
inc edx
mov ebx eax
cmp esi edx
jl r-xdata
jns r-xdata
xor eax eax
mov ecx [ edi + 0x2e4 ]
mov eax esi
jmp r-xdata
mov eax [ edi ]
mov ecx esi
neg ecx
push 0x0
push ecx
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_456883
xor eax eax
inc eax
jmp r-xdata
inc edx
add ecx 0x4
cmp edx esi
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ecx ]
cmp [ eax ] ebx
je r-xdata
sub_485fed
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
call sub_40b9ad
cmp [ edi + 0x8 ] 0x3
jne r-xdata
and [ esi + 0x2f0 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
call sub_409c9c
imul eax eax 0x3e8
mov [ esi + 0x2f0 ] eax
jmp r-xdata
call [ timeGetTime@IAT ]
pop edi
mov [ esi + 0x2f8 ] eax
pop esi
pop ebp
retn 0x4
sub_486035
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
push 0x14
and [ edi + 0x4 ] 0x0
and [ edi + 0x8 ] 0x0
call sub_420f36
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
mov [ esi ] ecx
mov eax [ edx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ edx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ edx + 0x10 ]
mov [ esi + 0x10 ] eax
inc [ eax ]
jmp r-xdata
mov [ edi ] esi
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_486081
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov eax [ esi ]
mov [ edi ] eax
lea ecx [ edi + 0x4 ]
lea eax [ esi + 0x4 ]
push eax
call sub_4081a7
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov eax [ esi + 0x18 ]
mov [ edi + 0x18 ] eax
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov eax [ esi + 0x20 ]
mov [ edi + 0x20 ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_4860bb
push esi
mov esi ecx
push edi
mov edi [ esi ]
test edi edi
je r-xdata
push esi
call j_sub_422ed5#3
pop ecx
pop edi
mov eax esi
pop esi
retn 0x4
lea ecx [ edi + 0x4 ]
call sub_405a64
push edi
call j_sub_422ed5#3
pop ecx
sub_4860e2
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi [ ebp + 0xc ]
mov ebx ecx
mov eax [ edi + 0x1c4 ]
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
mov ecx ebx
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_402402
test al al
je r-xdata
push [ ebp + 0x18 ]
and [ edi + 0x1c4 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push eax
call sub_426c0d
pop ecx
push eax
mov ecx ebx
call sub_4860e2
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push esi
push 0x24
call sub_420f36
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
lea ecx [ esi + 0x4 ]
call sub_4077c7
jmp r-xdata
mov ecx [ ebx + 0x74 ]
mov eax [ ebp - 0x4 ]
mov [ ebp + 0xc ] esi
mov eax [ ecx + eax * 4 ]
lea ecx [ esi + 0x4 ]
mov eax [ eax ]
add eax 0x14
push eax
call sub_4081a7
mov eax [ ebp + 0x8 ]
lea ecx [ ebx + 0x2c ]
mov [ esi ] eax
mov eax [ edi ]
mov [ esi + 0x14 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x1c ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x20 ] eax
lea eax [ ebp + 0xc ]
push eax
call sub_48bbb9
pop esi
sub_486193
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x24
mov [ ebp - 0x8 ] ecx
call sub_420f36
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
xor ebx ebx
lea ecx [ ebx + 0x4 ]
call sub_4077c7
jmp r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ebx + 0x4 ]
mov esi [ ebp + 0xc ]
mov eax edi
shl eax 0x4
add eax 0x15c
mov [ ebp - 0x4 ] ebx
add eax esi
push eax
call sub_4081a7
mov ecx [ ebp - 0x8 ]
mov [ ebx ] edi
add ecx 0x2c
mov eax [ esi ]
mov [ ebx + 0x14 ] eax
and [ ebx + 0x18 ] 0x0
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x20 ] eax
lea eax [ ebp - 0x4 ]
push eax
call sub_48bbb9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_486205
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
cmp [ ebx + 0x44 ] 0x0
mov eax [ ebx ]
mov [ ebp + 0xc ] eax
je r-xdata
push 0x0
call [ GetDC@IAT ]
mov esi eax
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push esi
xor esi esi
mov edi eax
push esi
call [ ReleaseDC@IAT ]
mov ecx [ ebp + 0x10 ]
imul edi [ ebp + 0x14 ]
push [ ecx ]
mov ecx [ ebp + 0x1c ]
mov eax ecx
push esi
push [ ebp + 0x20 ]
and eax 0x8
push esi
push 0x4
push 0x1
push eax
mov eax ecx
and ecx 0x2
and eax 0x4
push eax
push ecx
mov eax edi
mov ecx 0xfffffd30
cdq
idiv ecx
push [ ebp + 0x18 ]
push esi
push esi
push esi
push eax
call [ CreateFontW@IAT ]
mov esi [ ebp + 0xc ]
mov edi eax
push 0x1
push edi
push 0x30
push esi
call [ SendMessageW@IAT ]
cmp [ ebx + 0x90 ] 0x1
mov al [ ebp + 0x24 ]
jne r-xdata
push [ ebx + 0x44 ]
call [ DeleteObject@IAT ]
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
test al al
je r-xdata
push 0x1
push ebx
push [ ebp + 0x8 ]
mov [ ebx + 0x44 ] edi
call sub_48b2f9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
test al al
je r-xdata
movsx eax [ ebx + 0x8e ]
push 0x0
push eax
movsx eax [ ebx + 0x8c ]
push eax
movsx eax [ ebx + 0x8a ]
push eax
movsx eax [ ebx + 0x88 ]
push eax
push [ ebx ]
call [ MoveWindow@IAT ]
mov al [ ebp + 0x24 ]
push 0x0
push 0x0
push 0x142
push esi
call [ SendMessageW@IAT ]
sub_4862ff
push ebp
mov ebp esp
mov eax [ rw-data ]
push ebx
mov ebx [ ebp + 0x8 ]
push edi
push 0x0
push 0x0
mov eax [ eax + ebx * 4 ]
mov edi ebx
push 0xf0
mov eax [ eax ]
push [ eax ]
call [ SendMessageW@IAT ]
test eax eax
jne r-xdata
cmp ebx 0x3
jl r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
inc edi
mov eax [ rw-data ]
mov ecx [ eax + edi * 4 ]
mov eax [ ecx ]
test eax eax
je r-xdata
pop edi
pop ebx
pop ebp
retn 0x8
cmp esi [ rw-data ]
jle r-xdata
cmp [ eax + 0x90 ] 0x1a
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov eax [ ecx ]
test eax eax
je r-xdata
dec esi
mov ebx edi
cmp edi esi
jg r-xdata
push 0xfffffff0
push [ eax ]
call [ GetWindowLongW@IAT ]
test eax 0x20000
jne r-xdata
cmp [ eax + 0x90 ] 0x1a
jne r-xdata
cmp [ ebp + 0xc ] 0x1
mov eax [ rw-data ]
pop esi
jne r-xdata
mov eax [ rw-data ]
push 0x0
push 0x0
push 0xf1
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
push [ eax ]
call [ SendMessageW@IAT ]
inc ebx
cmp ebx esi
jle r-xdata
push esi
lea esi [ ebx + 0x1 ]
jmp r-xdata
dec edi
cmp edi 0x3
jge r-xdata
push 0xfffffff0
push [ eax ]
call [ GetWindowLongW@IAT ]
test eax 0x20000
jne r-xdata
mov eax [ eax + edi * 4 ]
push 0xfffffff0
mov eax [ eax ]
push [ eax ]
call [ GetWindowLongW@IAT ]
or eax 0x10000
push eax
mov eax [ rw-data ]
push 0xfffffff0
mov eax [ eax + edi * 4 ]
mov eax [ eax ]
push [ eax ]
call [ SetWindowLongW@IAT ]
mov ecx [ ebp + 0x8 ]
push 0x0
push 0x1
push 0xf1
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
push [ eax ]
call [ SendMessageW@IAT ]
jmp r-xdata
inc esi
sub_486419
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x10
jge r-xdata
push 0x2
pop eax
mov ecx [ ebp + 0x20 ]
push esi
mov esi 0x96
cmp ecx 0xffffffff
jne r-xdata
or eax 0x2
mov edx [ ebp + 0x24 ]
cmp edx 0xffffffff
jne r-xdata
mov ecx esi
cmp [ ebp + 0x30 ] 0x0
jge r-xdata
mov edx esi
push ebx
push edi
mov edi [ ebp + 0x14 ]
xor ebx ebx
cmp [ edi ] bx
je r-xdata
xor al al
jmp r-xdata
xor al al
push ebx
push ecx
push [ ebp + 0x10 ]
push edx
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push ebx
push r--data
push ebx
push [ ebp + 0x8 ]
call sub_401d35
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x2c
push edi
push ebx
mov ebx [ SendMessageW@IAT ]
push 0x467
push eax
call ebx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push edi
call [ LoadLibraryW@IAT ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
mov eax 0x300
mov [ esi + 0x86 ] ax
push [ ebp + 0x30 ]
push eax
push 0x467
push [ esi ]
call ebx
test eax eax
jne r-xdata
pop edi
pop ebx
push [ esi ]
call [ DestroyWindow@IAT ]
sub_4864df
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x14 ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov esi [ ebp + 0x28 ]
mov eax 0x96
mov ebx [ ebp + 0x2c ]
inc esi
mov edx [ ebp + 0x20 ]
neg esi
sbb esi esi
and esi [ ebp + 0x28 ]
inc ebx
neg ebx
sbb ebx ebx
and ebx [ ebp + 0x2c ]
cmp edx 0xffffffff
jne r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp + 0x24 ]
cmp ecx 0xffffffff
jne r-xdata
mov edx eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x28
mov edi [ ebp + 0xc ]
mov ax [ ebp + 0x18 ]
mov [ edi + 0x88 ] ax
mov ax [ ebp + 0x1c ]
mov [ edi + 0x8a ] ax
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8c ] dx
mov [ edi + 0x8e ] cx
cmp [ eax + 0x1cc ] 0x0
jne r-xdata
mov ecx eax
mov ecx [ eax + 0x1cc ]
push edi
push edi
push [ ebp + 0x14 ]
call sub_45ba05
cmp [ edi ] 0x0
mov [ edi + 0x80 ] eax
je r-xdata
push 0x1c
call sub_420f36
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov ecx [ ecx + edx * 4 ]
mov ecx [ ecx ]
push [ ecx ]
mov ecx eax
call sub_45b838
mov ecx eax
jmp r-xdata
or esi 0x50010000
push esi
mov esi [ SetWindowLongW@IAT ]
push 0xfffffff0
push [ edi ]
call esi
or ebx 0x10000
push ebx
push 0xffffffec
push [ edi ]
call esi
mov al 0x1
mov eax 0x300
mov [ edi + 0x86 ] ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1cc ] ecx
sub_4865e8
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
push ebx
xor bl bl
inc eax
neg eax
push esi
sbb eax eax
and eax [ ebp + 0x28 ]
push edi
or eax 0x10000
push eax
call sub_48b626
test al 0x1
je r-xdata
mov ecx [ ebp + 0x2c ]
cmp ecx 0xffffffff
jne r-xdata
inc bl
xor eax 0x1
push 0x1
push ecx
push [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x14 ]
push r--data
push ecx
push edi
call sub_401d35
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov ecx 0x100
test bl bl
je r-xdata
xor al al
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push 0x401
push [ edi ]
call [ SendMessageW@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x28
mov al 0x1
mov ecx 0x300
mov [ esi + 0x86 ] cx
sub_486682
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
cmp eax 0xffffffff
jne r-xdata
test al 0x7
jne r-xdata
push 0x3
pop eax
push esi
or eax 0x10000
push eax
call sub_48b626
mov ecx [ ebp + 0x2c ]
push 0x1
inc ecx
neg ecx
sbb ecx ecx
and ecx [ ebp + 0x2c ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x14 ]
push r--data
push ecx
push [ ebp + 0x8 ]
call sub_401d35
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
jne r-xdata
or eax 0x3
push 0x12
call [ GetSysColor@IAT ]
mov [ esi + 0x4c ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov ecx 0x200
mov [ esi + 0x86 ] cx
pop esi
pop ebp
retn 0x28
sub_486706
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
push ebx
push esi
push edi
or edi 0xffffffff
cmp eax edi
jne r-xdata
or eax 0x10000
push eax
call sub_48b626
mov edx [ ebp + 0x2c ]
mov esi eax
mov eax 0x200
cmp edx edi
jne r-xdata
mov eax 0x200042
mov ecx [ ebp + 0x20 ]
cmp ecx edi
jne r-xdata
mov edx eax
mov eax [ ebp + 0x24 ]
cmp eax edi
jne r-xdata
mov ecx 0xc8
push 0x1
push ecx
push [ ebp + 0x10 ]
xor ebx ebx
push eax
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push ebx
push r--data
push edx
push [ ebp + 0x8 ]
call sub_401d35
mov edi [ ebp + 0xc ]
mov ecx eax
mov [ edi ] ecx
test ecx ecx
jne r-xdata
mov eax 0x96
mov eax [ ebp + 0x14 ]
cmp [ eax ] bx
je r-xdata
xor al al
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ SendMessageW@IAT ]
push eax
push ebx
push 0x143
push ecx
call esi
push ebx
push ebx
push 0x14e
push [ edi ]
call esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x28
mov al 0x1
mov ecx 0x200
mov [ edi + 0x86 ] cx
sub_4867bd
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x14 ] 0xffffffff
push esi
push edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x14 ]
call sub_402402
test al al
je r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x1a0 ] 0x0
jne r-xdata
xor al al
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov esi [ ebp - 0x4 ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov [ ebp + 0x14 ] eax
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
mov al [ ecx + 0x90 ]
cmp al 0xe
je r-xdata
mov [ edi + 0x92 ] 0x0
mov al 0x1
jmp r-xdata
call [ CreatePopupMenu@IAT ]
mov [ esi + 0x1a0 ] eax
mov [ esi + 0x1a4 ] eax
mov [ edi + 0xc ] eax
cmp [ esi + 0x1a0 ] 0x0
jne r-xdata
cmp al 0xf
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
cmp al 0x2
je r-xdata
cmp al 0x3
je r-xdata
cmp [ ecx + 0xc ] 0x0
jne r-xdata
call [ CreatePopupMenu@IAT ]
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
mov [ edi + 0xc ] eax
mov [ ecx + 0x1a4 ] eax
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
mov eax [ edi + 0xc ]
mov [ ecx + 0xc ] eax
cmp [ edi + 0xc ] 0x0
je r-xdata
sub_486897
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
sub esp 0x14
push ebx
push esi
or esi 0xffffffff
push edi
cmp eax esi
jne r-xdata
or eax 0x10000
push eax
call sub_48b626
mov edx [ ebp + 0x2c ]
mov ebx eax
mov edi 0x200
cmp edx esi
jne r-xdata
push 0x4
pop eax
mov eax [ ebp + 0x20 ]
cmp eax esi
jne r-xdata
mov edx edi
mov ecx [ ebp + 0x24 ]
cmp ecx esi
jne r-xdata
mov eax 0xc8
push 0x1
push ecx
push [ ebp + 0x10 ]
push ecx
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push 0x0
push r--data
push edx
push [ ebp + 0x8 ]
call sub_401d35
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
jne r-xdata
push 0x14
pop ecx
mov ecx [ ebp + 0x14 ]
lea edx [ ebp - 0x10 ]
shr bl 0x3
not bl
and bl 0x1
mov al bl
push 0x1
push eax
call sub_4656a4
pop ecx
pop ecx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x1002
push [ esi ]
call [ SendMessageW@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov [ esi + 0x86 ] di
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_486952
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
cmp eax 0xffffffff
jne r-xdata
push ebx
push esi
test eax 0x800
je r-xdata
mov eax 0x3010c0
or eax 0x10004
or eax 0x4
jmp r-xdata
mov ecx [ ebp + 0x20 ]
cmp ecx 0xffffffff
jne r-xdata
mov eax 0x200
push eax
call sub_48b626
mov esi eax
mov eax [ ebp + 0x2c ]
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp + 0x24 ]
cmp edx 0xffffffff
jne r-xdata
mov ecx 0xc8
xor ebx ebx
inc ebx
push ebx
push ecx
push [ ebp + 0x10 ]
push edx
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x14 ]
push r--data
push eax
push [ ebp + 0x8 ]
call sub_401d35
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov edx 0x96
push eax
call [ GetWindowTextLengthW@IAT ]
push eax
push eax
push 0xb1
push [ esi ]
call [ SendMessageW@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov al bl
mov [ esi + 0x86 ] bx
pop esi
pop ebx
pop ebp
retn 0x28
sub_486a01
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
inc eax
neg eax
push ebx
sbb eax eax
and eax [ ebp + 0x28 ]
push esi
or eax 0x20007
push eax
call sub_48b626
mov ecx [ ebp + 0x2c ]
mov esi eax
mov edx [ ebp + 0x20 ]
inc ecx
neg ecx
sbb ecx ecx
and ecx [ ebp + 0x2c ]
cmp edx 0xffffffff
jne r-xdata
mov eax [ ebp + 0x24 ]
cmp eax 0xffffffff
jne r-xdata
mov edx 0xc8
xor ebx ebx
inc ebx
push ebx
push ecx
push [ ebp + 0x10 ]
push eax
push edx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x14 ]
push r--data
push ecx
push [ ebp + 0x8 ]
call sub_401d35
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax 0x96
push 0x12
call [ GetSysColor@IAT ]
mov [ esi + 0x4c ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov al bl
mov [ esi + 0x86 ] bx
pop esi
pop ebx
pop ebp
retn 0x28
sub_486a95
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
push ebx
push esi
push edi
cmp eax 0xffffffff
jne r-xdata
or eax 0x10003
push eax
call sub_48b626
mov ecx [ ebp + 0x2c ]
mov ebx [ ebp + 0x20 ]
inc ecx
neg ecx
sbb ecx ecx
and ecx [ ebp + 0x2c ]
cmp ebx 0xffffffff
jne r-xdata
mov eax 0x100
mov edi [ ebp + 0x24 ]
cmp edi 0xffffffff
jne r-xdata
push 0x20
pop ebx
xor edx edx
push edx
push ecx
push [ ebp + 0x10 ]
push edx
push edx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push edx
push r--data
push ecx
push [ ebp + 0x8 ]
call sub_401d35
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
je r-xdata
push 0x20
pop edi
xor bl bl
mov [ esi + 0x8e ] di
xor edx edx
mov edi [ ebp + 0x14 ]
mov [ esi + 0x8c ] bx
xor ebx ebx
inc ebx
cmp [ edi ] dx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
sub esp 0x10
mov [ esi + 0x88 ] ax
mov ecx esp
mov eax [ ebp + 0x1c ]
mov [ esi + 0x8a ] ax
lea eax [ ebp + 0x30 ]
push eax
mov [ ecx + 0x8 ] edx
call sub_409ac0
push edi
push esi
call sub_48b832
test al al
jne r-xdata
lea ecx [ ebp + 0x30 ]
call sub_409a20
pop edi
pop esi
mov al bl
pop ebx
pop ebp
retn 0x38
mov eax 0x300
mov [ esi + 0x86 ] ax
jmp r-xdata
movsx eax [ esi + 0x8e ]
push ebx
push eax
movsx eax [ esi + 0x8c ]
push eax
movsx eax [ esi + 0x8a ]
push eax
movsx eax [ esi + 0x88 ]
push eax
push [ esi ]
call [ MoveWindow@IAT ]
push [ esi ]
call [ DestroyWindow@IAT ]
sub_486ba2
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
cmp eax 0xffffffff
jne r-xdata
push ebx
push esi
test eax 0x800
je r-xdata
mov eax 0x80
or eax 0x10000
and eax 0xfffffffb
jmp r-xdata
mov ecx [ ebp + 0x20 ]
cmp ecx 0xffffffff
jne r-xdata
mov eax ebx
push eax
call sub_48b626
mov esi eax
mov ebx 0x200
mov eax [ ebp + 0x2c ]
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp + 0x24 ]
cmp edx 0xffffffff
jne r-xdata
mov ecx 0xc8
push 0x1
push ecx
push [ ebp + 0x10 ]
push edx
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x14 ]
push r--data
push eax
push [ ebp + 0x8 ]
call sub_401d35
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
test eax eax
jne r-xdata
push 0x14
pop edx
cmp [ rw-data ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov [ ecx + 0x86 ] bx
pop esi
pop ebx
pop ebp
retn 0x28
sub_486c39
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
sub esp 0x10
inc eax
neg eax
push ebx
sbb eax eax
and eax [ ebp + 0x28 ]
push esi
push edi
or eax 0x100
push eax
call sub_48b626
mov ecx [ ebp + 0x2c ]
mov ebx eax
inc ecx
mov edi [ ebp + 0x8 ]
neg ecx
sbb ecx ecx
xor eax eax
and ecx [ ebp + 0x2c ]
inc eax
push eax
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push r--data
push ecx
push edi
call sub_401d35
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
jne r-xdata
test bl 0x10
je r-xdata
xor al al
jmp r-xdata
push 0x12
call [ GetSysColor@IAT ]
mov [ esi + 0x4c ] eax
xor eax eax
inc eax
cmp [ rw-data ] 0x0
jne r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
mov [ edi + 0x60 ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
mov [ edi + 0x64 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
mov [ esi + 0x86 ] ax
sub_486ce2
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
push ebx
push esi
or esi 0xffffffff
push edi
cmp eax esi
jne r-xdata
or eax 0x10001
push eax
call sub_48b626
mov ecx [ ebp + 0x2c ]
cmp ecx esi
jne r-xdata
mov eax 0xa00002
mov edi [ ebp + 0x20 ]
cmp edi esi
jne r-xdata
mov ecx 0x200
mov ebx [ ebp + 0x24 ]
cmp ebx esi
jne r-xdata
mov edi 0xc8
xor edx edx
xor esi esi
inc edx
push edx
push ecx
push [ ebp + 0x10 ]
push ebx
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push esi
push r--data
push ecx
push [ ebp + 0x8 ]
call sub_401d35
mov edx eax
mov eax [ ebp + 0xc ]
mov [ eax ] edx
test edx edx
jne r-xdata
mov ebx 0x96
mov ecx [ ebp + 0x14 ]
cmp [ ecx ] si
je r-xdata
xor al al
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push ecx
push esi
mov esi [ SendMessageW@IAT ]
push 0x180
push edx
call esi
mov eax [ ebp + 0xc ]
push 0x0
push 0x0
push 0x186
push [ eax ]
call esi
mov eax [ ebp + 0xc ]
xor esi esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x28
push esi
push ebx
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ eax ]
call [ MoveWindow@IAT ]
xor eax eax
inc eax
xor ecx ecx
inc ecx
mov [ eax + 0x86 ] cx
sub_486db2
push ebp
mov ebp esp
mov eax 0x202c
call sub_431ac0
mov eax [ ebp + 0x28 ]
push ebx
push esi
or esi 0xffffffff
mov [ ebp - 0x1 ] 0x0
push edi
mov edi esi
cmp eax esi
jne r-xdata
or eax 0x10001
push eax
call sub_48b626
mov ebx [ ebp + 0x2c ]
mov edx eax
cmp ebx esi
jne r-xdata
push 0xc
pop eax
xor eax eax
inc eax
test bl 0x10
je r-xdata
mov ebx 0x220
mov eax [ ebp + 0x20 ]
cmp eax esi
jne r-xdata
mov [ ebp - 0x1 ] al
xor ebx 0x10
mov ecx [ ebp + 0x24 ]
cmp ecx esi
jne r-xdata
mov eax 0x96
push 0x0
push ecx
push [ ebp + 0x10 ]
push ecx
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edx
push r--data
push r--data
push ebx
push [ ebp + 0x8 ]
call sub_401d35
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov ecx 0x96
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor al al
jmp r-xdata
push ebx
xor ebx ebx
push ebx
push 0x1036
push [ esi ]
call [ SendMessageW@IAT ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x188 ] ebx
je r-xdata
push 0x10
push 0x10
push 0x1036
push eax
call [ SendMessageW@IAT ]
or ebx 0x10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
lea eax [ ebp - 0x2028 ]
mov [ ebp - 0x20 ] ebx
mov ebx [ SendMessageW@IAT ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x24 ] 0xf
mov [ ebp + 0x8 ] eax
push 0x13
push ebx
push ebx
push ebx
push ebx
push ebx
push [ esi ]
call [ SetWindowPos@IAT ]
or ecx 0xffffffff
mov [ esi + 0x94 ] di
xor eax eax
mov [ esi + 0x96 ] cx
inc eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x2028 ]
push eax
call sub_422d7c
mov [ ebp + 0x28 ] eax
lea eax [ ebp - 0x2028 ]
mov [ esp ] r--data
push eax
call sub_422f0d
pop ecx
pop ecx
lea eax [ ebp - 0x2028 ]
push eax
push 0x0
push 0x1057
push [ esi ]
call ebx
mov ecx 0x96
mov [ ebp - 0x1c ] eax
cmp eax ecx
jle r-xdata
mov [ esi + 0x86 ] ax
mov eax [ ebp + 0x28 ]
xor ecx ecx
inc edi
mov [ ebp - 0x10 ] edi
mov [ ebp + eax * 2 - 0x2028 ] cx
lea eax [ ebp - 0x24 ]
push eax
push edi
push 0x1061
push [ esi ]
call ebx
jmp r-xdata
mov [ ebp - 0x1c ] ecx
push rw-data
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x2028 ]
push eax
call sub_48ac9b
test al al
je r-xdata
sub_486f55
push ebp
mov ebp esp
mov eax 0x2048
call sub_431ac0
push ebx
push esi
push edi
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
call sub_402402
test al al
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0xc ]
mov ebx [ SendMessageW@IAT ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov edi [ eax ]
mov [ esi + 0x34 ] edi
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov al [ eax + 0x93 ]
mov [ esi + 0x93 ] al
xor eax eax
push eax
push eax
push 0x1200
push eax
push eax
push 0x101f
push edi
call ebx
push eax
call ebx
mov edx [ ebp - 0x4 ]
mov [ esi + 0x94 ] ax
mov ecx [ rw-data ]
push 0xfffffff0
push edi
mov [ ebp - 0x8 ] eax
mov ecx [ ecx + edx * 4 ]
mov ecx [ ecx ]
mov [ ecx + 0x94 ] ax
call [ GetWindowLongW@IAT ]
push 0x34
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x44 ]
push 0x0
push eax
call sub_422f60
add esp 0xc
push 0x0
push 0x0
push 0x1004
push edi
call ebx
mov ecx [ ebp + 0x14 ]
mov edx eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x88 ] dx
xor esi esi
mov [ ebp + 0x14 ] ecx
inc esi
mov ecx [ rw-data ]
mov [ ebp - 0x44 ] 0x7
mov [ ebp - 0x28 ] 0xfffffffe
mov [ ebp + 0x18 ] esi
mov ecx [ ecx + eax * 4 ]
mov eax [ ecx ]
mov eax [ eax + 0x9c ]
cmp eax 0xffffffff
jle r-xdata
xor al al
jmp r-xdata
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x2048 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp + 0x14 ]
push rw-data
push eax
lea eax [ ebp - 0x2048 ]
mov [ ebp - 0x40 ] edx
push eax
call sub_48ac9b
lea eax [ ebp - 0x44 ]
push eax
push 0x0
push 0x104d
push edi
call ebx
mov [ ebp + 0x10 ] eax
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x28 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push rw-data
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x2048 ]
push eax
call sub_48ac9b
test al al
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x93 ] 0xff
je r-xdata
mov [ ebp - 0x3c ] esi
cmp esi [ ebp - 0x8 ]
jge r-xdata
mov al 0x1
mov ecx [ rw-data ]
mov eax [ ebp - 0x4 ]
push 0x1
mov ecx [ ecx + eax * 4 ]
push [ ecx ]
push [ ebp - 0x10 ]
call sub_48b2f9
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x10 ]
push 0x1008
push edi
call ebx
jmp r-xdata
cmp [ ebp - 0x2048 ] 0x0
je r-xdata
test [ ebp - 0xc ] 0x1
je r-xdata
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x10 ]
push 0x1074
push edi
call ebx
test eax eax
je r-xdata
inc esi
mov [ ebp + 0x18 ] esi
jmp r-xdata
lea eax [ ebp - 0x2048 ]
push eax
push 0x0
push 0x1057
push edi
call ebx
lea esi [ eax + 0xc ]
mov eax 0x96
cmp esi eax
jle r-xdata
push 0x0
push [ ebp + 0x18 ]
push 0x101d
push edi
call ebx
cmp eax esi
jg r-xdata
mov esi eax
mov esi [ ebp + 0x18 ]
movzx eax si
mov esi [ ebp + 0x18 ]
push eax
push esi
push 0x101e
push edi
call ebx
jmp r-xdata
sub_487184
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
push 0x2c
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x34 ] 0x30
push 0x0
push eax
call sub_422f60
add esp 0xc
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x14 ]
call sub_402402
test al al
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x19c ]
test ecx ecx
jne r-xdata
xor al al
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x4 ]
mov esi [ eax ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov edx [ eax + 0xc ]
test edx edx
je r-xdata
mov edi [ ebp + 0xc ]
add edi 0xc
mov [ edi ] ecx
jmp r-xdata
call [ CreateMenu@IAT ]
push eax
push [ esi ]
mov [ esi + 0x19c ] eax
call [ SetMenu@IAT ]
mov ecx [ esi + 0x19c ]
mov [ esi + 0x1a4 ] ecx
mov edi [ ebp + 0xc ]
add edi 0xc
mov [ edi ] edx
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0xc
je r-xdata
call [ CreatePopupMenu@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x30 ] 0x4
push eax
push 0x0
push [ ebp + 0x14 ]
push edx
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x34 ]
push eax
push 0x1
push [ ebp + 0x1c ]
mov [ ebp - 0x30 ] 0x46
push [ edi ]
mov [ ebp - 0x20 ] ebx
call [ InsertMenuItemW@IAT ]
push [ esi ]
call [ DrawMenuBar@IAT ]
mov [ esi + 0x1a4 ] ebx
mov al 0x1
jmp r-xdata
push [ edi ]
call [ IsMenu@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ edi ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_4872c3
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
push edi
push 0x2c
xor ebx ebx
mov [ ebp - 0x38 ] 0x30
lea eax [ ebp - 0x34 ]
push ebx
push eax
call sub_422f60
add esp 0xc
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx rw-data
push eax
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x14 ]
call sub_402402
test al al
je r-xdata
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x1a4 ] ebx
je r-xdata
xor al al
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov edi [ eax ]
cmp [ edi + 0x1a4 ] ebx
je r-xdata
mov esi [ ebp + 0xc ]
mov eax [ edi + 0x19c ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0x20 ] 0x1
mov [ ebp - 0x34 ] 0x13
mov [ ebp - 0x30 ] ebx
jne r-xdata
mov esi [ ebp + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0xe
jne r-xdata
mov eax [ ebp + 0x18 ]
cmp [ eax ] bx
je r-xdata
mov [ ebp - 0x30 ] 0x200
cmp [ esi + 0xc ] ebx
je r-xdata
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x34 ] 0x4
push eax
push ebx
push [ ebp + 0x14 ]
push [ esi + 0xc ]
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x30 ] 0x800
mov [ ebp - 0x14 ] eax
jmp r-xdata
push [ esi + 0xc ]
call [ IsMenu@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x88 ] bx
push [ edi ]
call [ DrawMenuBar@IAT ]
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x38 ]
push eax
push 0x1
push ebx
push [ esi + 0xc ]
call [ InsertMenuItemW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
sub_48740b
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
sub esp 0x24
inc eax
neg eax
push ebx
sbb eax eax
and eax [ ebp + 0x28 ]
push esi
push edi
or eax 0x10000
push eax
call sub_48b626
mov ecx [ ebp + 0x2c ]
cmp ecx 0xffffffff
jne r-xdata
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
inc esi
neg esi
push 0x1
sbb esi esi
and esi [ ebp + 0x20 ]
inc edi
push ecx
push [ ebp + 0x10 ]
neg edi
sbb edi edi
and edi [ ebp + 0x24 ]
push edi
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push 0x0
push r--data
push ecx
push [ ebp + 0x8 ]
call sub_401d35
mov ebx [ ebp + 0xc ]
mov [ ebx ] eax
test eax eax
jne r-xdata
mov ecx 0x200
test esi esi
mov esi [ SendMessageW@IAT ]
je r-xdata
xor al al
jmp r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push 0x0
push 0x1009
push eax
call esi
push 0x4
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x0
push [ ebx ]
call [ SetWindowPos@IAT ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
mov al 0x1
mov ecx 0x300
mov [ ebx + 0x86 ] cx
mov ecx [ ebp + 0x14 ]
lea edx [ ebp - 0x20 ]
push 0x1
push 0x1
call sub_4656a4
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x1002
push [ ebx ]
call esi
cmp [ rw-data ] 0x0
jne r-xdata
sub_4874ed
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
cmp eax 0xffffffff
jne r-xdata
push ebx
push esi
push edi
or eax 0xe
push eax
call sub_48b626
mov ecx [ ebp + 0x2c ]
inc ecx
mov ebx [ ebp + 0x8 ]
neg ecx
sbb ecx ecx
xor esi esi
and ecx [ ebp + 0x2c ]
push esi
push ecx
push [ ebp + 0x10 ]
push esi
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push esi
push r--data
push ecx
push ebx
call sub_401d35
mov edi [ ebp + 0xc ]
mov [ edi ] eax
test eax eax
je r-xdata
mov eax 0x100
xor al al
cmp [ ebp + 0x20 ] 0xffffffff
mov eax 0x96
jne r-xdata
cmp [ ebp + 0x24 ] 0xffffffff
jne r-xdata
mov [ ebp + 0x20 ] eax
cmp [ rw-data ] esi
jne r-xdata
mov [ ebp + 0x24 ] eax
lea eax [ ebp + 0x24 ]
push eax
lea eax [ ebp + 0x20 ]
push eax
push [ ebp + 0x14 ]
push edi
call sub_48ba67
test eax eax
je r-xdata
mov eax 0x300
mov [ edi + 0x86 ] ax
push [ edi ]
call [ DestroyWindow@IAT ]
push esi
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ edi ]
call [ MoveWindow@IAT ]
push esi
call [ CreateCompatibleDC@IAT ]
push 0x0
push 0x0
push 0x173
push [ edi ]
mov esi eax
call [ SendMessageW@IAT ]
push eax
push esi
call [ SelectObject@IAT ]
push 0x0
push 0x0
push esi
call [ GetPixel@IAT ]
push esi
mov edi eax
call [ DeleteDC@IAT ]
push 0xffffffec
push [ ebx ]
call [ GetWindowLongW@IAT ]
test eax 0x80000
je r-xdata
mov al 0x1
jmp r-xdata
push 0x1
push 0x0
push edi
push [ ebx ]
call [ SetLayeredWindowAttributes@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x28
sub_4875ff
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
inc eax
neg eax
push esi
sbb eax eax
and eax [ ebp + 0x28 ]
push edi
push eax
call sub_48b626
mov ecx [ ebp + 0x2c ]
inc ecx
neg ecx
sbb ecx ecx
xor esi esi
and ecx [ ebp + 0x2c ]
push esi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push esi
push r--data
push ecx
push [ ebp + 0x8 ]
call sub_401d35
mov edi [ ebp + 0xc ]
mov [ edi ] eax
test eax eax
jne r-xdata
push ebx
mov ebx 0xff000000
push ebx
push esi
mov esi [ SendMessageW@IAT ]
push 0x2001
push eax
call esi
push ebx
xor ebx ebx
push ebx
push 0x409
push [ edi ]
call esi
push ebx
push ebx
push 0x402
push [ edi ]
call esi
push 0x640000
push ebx
push 0x401
push [ edi ]
call esi
push ebx
inc ebx
push ebx
push 0x404
push [ edi ]
call esi
cmp [ rw-data ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov al bl
pop ebx
mov [ edi + 0x86 ] bx
pop edi
pop esi
pop ebp
retn 0x28
sub_4876b2
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
inc eax
neg eax
sbb eax eax
and eax [ ebp + 0x28 ]
or eax 0x9
push eax
call sub_48b626
mov edx [ ebp + 0x8 ]
mov ecx eax
cmp [ edx + 0x69 ] 0x0
jne r-xdata
mov eax [ ebp + 0x2c ]
push esi
push 0x1
push ecx
push [ ebp + 0x10 ]
inc eax
push [ ebp + 0x24 ]
neg eax
push [ ebp + 0x20 ]
sbb eax eax
push [ ebp + 0x1c ]
and eax [ ebp + 0x2c ]
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x14 ]
push r--data
push eax
push edx
call sub_401d35
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
jne r-xdata
or ecx 0x10000
mov [ edx + 0x69 ] 0x1
push 0x12
call [ GetSysColor@IAT ]
mov [ esi + 0x4c ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov ecx 0x200
mov [ esi + 0x86 ] cx
pop esi
pop ebp
retn 0x28
sub_487740
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
xor ecx ecx
cmp eax 0xffffffff
jne r-xdata
push ebx
push esi
push edi
push eax
call sub_48b626
mov ecx [ ebp + 0x2c ]
mov ebx eax
inc ecx
neg ecx
sbb ecx ecx
xor edi edi
and ecx [ ebp + 0x2c ]
push edi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push edi
push r--data
push ecx
push [ ebp + 0x8 ]
call sub_401d35
mov esi [ ebp + 0xc ]
mov [ esi ] eax
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
push edi
push edi
mov edi [ SendMessageW@IAT ]
push 0x405
push eax
call edi
test bl 0x1
je r-xdata
xor al al
jmp r-xdata
xor eax eax
inc eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x640000
push 0x0
push 0x406
push [ esi ]
call edi
push 0x0
push 0xa
push 0x414
push [ esi ]
call edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x28
mov [ esi + 0x86 ] ax
sub_4877e2
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x188 ] 0x0
je r-xdata
mov eax [ ebp + 0x28 ]
inc eax
neg eax
push ebx
sbb eax eax
and eax [ ebp + 0x28 ]
or eax 0x4014000
push eax
call sub_48b626
mov ecx [ ebp + 0x2c ]
mov edx eax
mov eax [ ebp + 0x20 ]
inc ecx
neg ecx
mov ebx 0x96
sbb ecx ecx
and ecx [ ebp + 0x2c ]
cmp eax 0xffffffff
jne r-xdata
xor al al
jmp r-xdata
push edi
mov edi [ ebp + 0x24 ]
cmp edi 0xffffffff
jne r-xdata
mov eax ebx
mov [ ebp + 0x20 ] eax
pop esi
pop ebp
retn 0x28
push 0x1
push ecx
push [ ebp + 0x10 ]
push edi
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edx
push r--data
push r--data
push ecx
push esi
call sub_401d35
mov ebx [ ebp + 0xc ]
mov [ ebx ] eax
test eax eax
jne r-xdata
mov edi ebx
push 0x20
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0xffffffff
push eax
call [ SetWindowPos@IAT ]
mov eax [ ebx ]
or [ esi + 0x18c ] 0xffffffff
or [ esi + 0x190 ] 0xffffffff
and [ esi + 0x194 ] 0x0
mov [ esi + 0x188 ] eax
mov [ esi + 0x198 ] 0x1
cmp [ rw-data ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov ecx 0x300
mov [ ebx + 0x86 ] cx
pop edi
pop ebx
sub_4878be
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x188 ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
push ebx
xor ebx ebx
cmp [ eax ] bx
je r-xdata
xor al al
jmp r-xdata
mov eax [ esi + 0x194 ]
cmp [ esi + 0x38 ] bl
je r-xdata
inc [ esi + 0x18c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ esi + 0x18c ]
mov [ ebp - 0x1c ] 0x9
push 0x133e
push ecx
call [ SendMessageW@IAT ]
mov ecx [ esi + 0x18c ]
or edx 0xffffffff
mov [ esi + 0x190 ] ecx
mov al 0x1
mov ecx [ ebp + 0xc ]
mov [ esi + 0x198 ] 0x1
mov [ ecx + 0x88 ] dx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x10
push eax
push esi
mov ecx rw-data
call sub_48b6d2
mov [ esi + 0x198 ] bl
cmp [ esi + 0x38 ] bl
je r-xdata
mov eax [ esi + 0x190 ]
or [ esi + 0x190 ] 0xffffffff
pop ebx
xor al al
push 0x1
push ebx
push [ esi ]
call [ InvalidateRect@IAT ]
sub_487978
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
push ebx
push esi
xor bl bl
push edi
cmp eax 0xffffffff
jne r-xdata
or eax 0x10000
push eax
call sub_48b626
mov ecx eax
mov edx 0x100
xor eax eax
inc eax
test edx ecx
je r-xdata
push 0x37
pop eax
mov eax [ ebp + 0x2c ]
mov edi 0x96
mov esi [ ebp + 0x20 ]
inc eax
neg eax
sbb eax eax
and eax [ ebp + 0x2c ]
cmp esi 0xffffffff
jne r-xdata
xor ecx edx
mov bl al
mov edx [ ebp + 0x24 ]
cmp edx 0xffffffff
jne r-xdata
mov esi edi
push 0x0
push ecx
push [ ebp + 0x10 ]
push edx
push esi
push [ ebp + 0x1c ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push ecx
push r--data
push r--data
push eax
push esi
call sub_401d35
mov edi [ ebp + 0xc ]
mov [ edi ] eax
test eax eax
jne r-xdata
mov edx edi
xor ecx ecx
cmp [ esi + 0x188 ] ecx
je r-xdata
xor al al
jmp r-xdata
mov eax [ edi ]
mov [ esi + 0x1ac ] eax
test bl bl
je r-xdata
push 0x13
push ecx
push ecx
push ecx
push ecx
push ecx
push eax
call [ SetWindowPos@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x28
cmp [ esi + 0x38 ] 0x0
je r-xdata
push 0xfffffff0
push [ edi ]
mov [ edi + 0x90 ] 0x10
call [ GetWindowLongW@IAT ]
or eax 0x100
push eax
push 0xfffffff0
push [ edi ]
call [ SetWindowLongW@IAT ]
or [ esi + 0x1b4 ] 0xffffffff
xor eax eax
or [ esi + 0x1b8 ] 0xffffffff
inc eax
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ esi + 0x1c ]
lea eax [ ebp + 0x28 ]
push eax
lea eax [ ebp + 0x2c ]
mov ecx rw-data
push eax
push [ ebp + 0x10 ]
call sub_402402
push [ ebp + 0x28 ]
push [ ebp + 0x2c ]
call sub_402327
cmp ebx 0xffffffff
je r-xdata
mov [ edi + 0x86 ] ax
push ebx
push [ ebp + 0x2c ]
call sub_402327
sub_487aa3
push ebp
mov ebp esp
sub esp 0x78
lea eax [ ebp - 0xc ]
mov ecx rw-data
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
call sub_402402
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
xor ecx ecx
mov ebx [ eax ]
cmp [ ebx + 0x1ac ] ecx
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebx + 0x1b4 ]
mov [ ebp - 0x34 ] 0x5
test eax eax
jns r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov [ ebp - 0x34 ] 0x27
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
cmp [ ebx + 0x1b8 ] ecx
jl r-xdata
mov eax [ ebx + 0x1b8 ]
test eax eax
js r-xdata
mov [ ebp - 0x18 ] eax
test eax eax
js r-xdata
mov eax [ ebp + 0x14 ]
lea esi [ ebp - 0x34 ]
mov [ ebp - 0x24 ] eax
lea edi [ ebp - 0x6c ]
mov eax [ ebp + 0x10 ]
push 0xa
mov [ ebp - 0x10 ] eax
pop ecx
[ edi ] [ esi ]
mov eax [ ebx + 0x1b0 ]
mov [ ebp - 0x70 ] 0xffff0001
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0xc ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov dl [ eax + 0x90 ]
cmp dl 0x10
jne r-xdata
mov [ ebp - 0x70 ] eax
mov ecx [ eax + 0x34 ]
mov ecx [ eax ]
jmp r-xdata
mov eax [ eax + 0x10 ]
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x74 ] 0xffff0000
jmp r-xdata
mov [ ebp + 0x18 ] ecx
cmp dl 0x10
jne r-xdata
mov edi [ ebp + 0xc ]
lea eax [ ebp - 0x74 ]
mov esi [ SendMessageW@IAT ]
push eax
push 0x0
push 0x1132
push ecx
call esi
push 0x0
push 0x0
mov [ edi + 0x10 ] eax
mov eax [ ebp + 0x18 ]
push 0x1105
push eax
mov [ edi + 0x34 ] eax
call esi
mov [ edi + 0x88 ] ax
mov eax [ edi + 0x10 ]
mov [ ebx + 0x1b0 ] eax
mov al 0x1
sub_487bc5
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
test al 0xc
jne r-xdata
push 0x4
pop eax
push ebx
push esi
push edi
or eax 0x2
push eax
call sub_48b626
mov esi [ ebp + 0x8 ]
xor ebx ebx
push ebx
push ecx
push [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push eax
push ebx
push r--data
push ebx
push esi
call sub_401d35
mov edi eax
test edi edi
je r-xdata
or eax 0x4
xor al al
push [ ebp + 0x14 ]
call sub_423eb9
pop ecx
call sub_43b500
lea ecx [ ebp + 0x10 ]
push ecx
lea ecx [ ebp + 0x18 ]
push ecx
push eax
mov ecx rw-data
call sub_402402
test al al
je r-xdata
push edi
call [ DestroyWindow@IAT ]
mov ecx [ ebp + 0x18 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ eax ]
mov eax [ esi ]
cmp eax [ ecx ]
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ rw-data ]
mov eax [ eax + edx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0x3
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ SendMessageW@IAT ]
push ebx
mov [ ecx ] edi
mov eax [ rw-data ]
mov eax [ eax + edx * 4 ]
mov eax [ eax ]
mov eax [ eax ]
push eax
push 0x469
push edi
mov [ ecx + 0x34 ] eax
call esi
push 0x80017fff
push ebx
push 0x465
push edi
call esi
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
sub_487ca0
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_402402
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ eax + ecx * 4 ]
push [ ebp + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ SendMessageW@IAT ]
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x10
sub_487ce6
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
je r-xdata
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push sub_48bcc7
push 0xfffffffc
push [ esi ]
call [ SetWindowLongW@IAT ]
mov [ esi + 0x8 ] eax
sub_487d0f
push ebp
mov ebp esp
sub esp 0x38
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_402402
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ eax + ecx * 4 ]
mov ecx [ edx ]
movzx eax [ ecx + 0x90 ]
cmp eax 0x10
jg r-xdata
xor al al
jmp r-xdata
cmp eax 0x11
je r-xdata
je r-xdata
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ecx + 0x10 ]
jle r-xdata
mov ecx [ ecx ]
jmp r-xdata
test eax eax
js r-xdata
cmp eax 0x13
jle r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
cmp eax 0xa
jle r-xdata
add eax 0xffffffea
cmp eax 0x6
ja r-xdata
cmp eax 0xc
je r-xdata
mov ecx [ ecx + 0xc ]
jmp r-xdata
cmp eax 0xe
jne r-xdata
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x38 ] 0x30
push eax
push 0x0
push [ ebp + 0x8 ]
mov [ ebp - 0x34 ] 0x4
push [ ecx + 0xc ]
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x24 ]
mov [ ecx ] eax
jmp r-xdata
mov al 0x1
sub_487dbe
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_402402
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0x13
jne r-xdata
or eax 0xffffffff
jmp r-xdata
movzx eax [ eax + 0x92 ]
movsx eax [ eax + 0x96 ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_487e0d
push ebp
mov ebp esp
sub esp 0xc8
lea eax [ ebp - 0x8 ]
mov ecx rw-data
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x78 ]
push eax
push [ ebp + 0x8 ]
call sub_402402
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
xor edi edi
mov eax [ rw-data ]
mov ebx [ ebp + 0xc ]
mov eax [ eax + ecx * 4 ]
or [ ebx ] 0xffffffff
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
movzx eax [ ecx + 0x90 ]
mov esi [ ecx ]
mov [ ebp + 0xc ] esi
cmp eax 0x11
jg r-xdata
mov eax [ ebp + 0xc ]
and [ eax ] 0x0
jmp r-xdata
cmp eax 0x12
je r-xdata
je r-xdata
xor eax eax
xor edi edi
push edi
push edi
push 0x400
cmp eax 0x13
je r-xdata
mov eax [ ecx + 0x10 ]
xor edi edi
push 0xfffffff0
push [ ecx + 0x34 ]
mov [ ebp - 0x2c ] eax
mov [ ebx ] edi
call [ GetWindowLongW@IAT ]
cmp [ ebp + 0x10 ] 0x0
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x30 ] 0x8
mov [ ebp - 0x24 ] 0xf000
je r-xdata
cmp eax 0xa
jg r-xdata
push 0x2
push 0xffffffff
push 0x100c
push esi
mov esi [ SendMessageW@IAT ]
call esi
push 0x34
mov [ ebx ] eax
xor edi edi
lea eax [ ebp - 0x64 ]
push edi
push eax
call sub_422f60
mov eax [ ebx ]
add esp 0xc
mov [ ebp - 0x60 ] eax
lea eax [ ebp - 0x64 ]
mov [ ebp - 0x64 ] 0x4
push eax
push edi
push 0x104b
push [ ebp + 0xc ]
call esi
neg eax
sbb eax eax
and eax [ ebp - 0x44 ]
jmp r-xdata
cmp eax 0x14
je r-xdata
mov esi [ ebp - 0x8 ]
lea eax [ ebp - 0x30 ]
push eax
push edi
push 0x113e
push [ esi + 0x34 ]
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
push 0x2000
call sub_420f36
mov esi [ ebp - 0x8 ]
mov ebx eax
pop ecx
lea eax [ ebp - 0x30 ]
push eax
push edi
push 0x113e
push [ esi + 0x34 ]
jmp r-xdata
cmp eax 0xc
je r-xdata
je r-xdata
mov [ ebx ] eax
or [ ebx ] 0xffffffff
push 0xffffffec
push [ ecx + 0x34 ]
call [ GetWindowLongW@IAT ]
push 0x34
mov [ ebp + 0xc ] eax
xor edi edi
lea eax [ ebp - 0x64 ]
push edi
push eax
call sub_422f60
mov eax [ ebp + 0x8 ]
add esp 0xc
mov esi [ ebp - 0x8 ]
mov [ ebp - 0x88 ] eax
lea eax [ ebp - 0x90 ]
mov [ ebp - 0x90 ] 0x1
push eax
push 0xffffffff
push 0x1053
push [ esi + 0x34 ]
call [ SendMessageW@IAT ]
mov [ ebp - 0x60 ] eax
cmp eax 0xffffffff
je r-xdata
cmp eax 0x15
je r-xdata
mov ecx [ ebp - 0x28 ]
mov edx 0x100
test [ ebp + 0x8 ] edx
je r-xdata
mov [ ebp - 0x1c ] 0xfff
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] 0x1
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
and [ ebx ] edi
jmp r-xdata
cmp eax 0xd
jle r-xdata
xor edi edi
push edi
push edi
mov edi [ SendMessageW@IAT ]
push 0x130b
push esi
call edi
cmp [ ebp + 0x10 ] 0x0
mov [ ebx ] eax
je r-xdata
sub eax edi
je r-xdata
test [ ebp + 0xc ] 0x4
je r-xdata
cmp [ ecx + 0x7c ] 0x4
jne r-xdata
cmp eax 0x18
jle r-xdata
test cl 0x2
je r-xdata
mov eax ecx
shr eax 0xc
dec eax
neg eax
sbb eax eax
and eax 0xfffffffd
add eax 0x4
mov [ ebx ] eax
push ebx
mov eax ebx
jmp r-xdata
push edi
push edi
push 0xe
push esi
call [ SendMessageW@IAT ]
xor ecx ecx
push 0x2
pop edx
lea edi [ eax + 0x1 ]
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
push edi
mov esi eax
push esi
push [ ebp + 0xc ]
call [ GetWindowTextW@IAT ]
jmp r-xdata
cmp eax 0xf
jle r-xdata
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x94 ] 0x8
push ecx
push eax
push 0x133c
push esi
call edi
mov eax [ ebp - 0x7c ]
jmp r-xdata
push edi
push edi
push 0x147
push esi
call [ SendMessageW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
dec eax
je r-xdata
push 0x2000
call sub_420f36
mov ebx eax
mov [ ebp - 0x64 ] 0x1
pop ecx
mov edx ebx
mov [ ebp - 0x4c ] 0xfff
xor ecx ecx
mov [ ebp + 0x10 ] edx
cmp cx [ esi + 0x94 ]
mov eax edi
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0x70
call sub_409c9c
jmp r-xdata
lea ebx [ ecx + 0x70 ]
mov ecx ebx
call sub_409997
mov eax [ ebx + 0x8 ]
xor ecx ecx
push 0x2
pop edx
mov eax [ eax + 0x4 ]
inc eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
mov ecx ebx
mov edi eax
call sub_409997
mov ecx [ ebx + 0x8 ]
mov esi [ ecx + 0x4 ]
mov ecx ebx
call sub_409997
mov edx [ ebx + 0x8 ]
lea ecx [ esi + 0x1 ]
push ecx
mov ecx edi
mov edx [ edx ]
call sub_40463e
pop ecx
mov eax edi
jmp r-xdata
cmp eax 0x1a
jle r-xdata
test cl 0x20
je r-xdata
or [ ebx ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax esi
jmp r-xdata
push [ ecx + 0xc ]
call [ IsMenu@IAT ]
test eax eax
je r-xdata
cmp eax 0x10
jne r-xdata
push edi
mov edi [ SendMessageW@IAT ]
push ebx
push 0x149
push esi
call edi
xor ecx ecx
inc eax
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
mov esi eax
push esi
push ebx
push 0x148
jmp r-xdata
push edi
push edi
push 0x188
push esi
call [ SendMessageW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
sub eax 0x7
jne r-xdata
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x64 ]
push eax
push edi
push 0x104b
push [ esi + 0x34 ]
mov [ ebp - 0x50 ] edx
jl r-xdata
lea eax [ ebp - 0x64 ]
mov [ ebp - 0x64 ] 0x8
push eax
push edi
push 0x104b
push [ esi + 0x34 ]
mov [ ebp - 0x54 ] 0xf000
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
xor edi edi
cmp [ ebp + 0x10 ] 0x0
push edi
push edi
je r-xdata
cmp eax 0x1c
jne r-xdata
test cl 0x10
je r-xdata
or [ ebx ] 0x400
push 0x208
call sub_420f36
cmp [ ebp + 0x10 ] 0x0
mov edi eax
mov esi [ ebp - 0x8 ]
lea eax [ ebp - 0xc4 ]
pop ecx
mov [ ebp + 0xc ] edi
mov [ ebp - 0xc4 ] 0x30
push eax
je r-xdata
xor edi edi
push edi
push 0x9
push 0x110a
push esi
mov [ ebx ] edi
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
call edi
push edi
mov edi [ SendMessageW@IAT ]
push ebx
push 0x18a
push esi
call edi
xor ecx ecx
inc eax
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
mov esi eax
push esi
push ebx
push 0x189
push edi
push edi
push 0x408
jmp r-xdata
call [ SendMessageW@IAT ]
push [ ebp + 0x10 ]
call sub_422d7c
pop ecx
mov ecx 0xffe
sub ecx eax
mov [ ebp - 0x4c ] ecx
test ecx ecx
jle r-xdata
call [ SendMessageW@IAT ]
jmp r-xdata
mov eax [ ebp - 0x58 ]
shr eax 0xc
dec eax
neg eax
sbb eax eax
and eax 0xfffffffd
add eax 0x4
jmp r-xdata
push 0xf0
push esi
call [ SendMessageW@IAT ]
mov [ ebx ] eax
test eax eax
jne r-xdata
push 0xe
push esi
call [ SendMessageW@IAT ]
xor ecx ecx
push 0x2
pop edx
lea esi [ eax + 0x1 ]
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
push esi
push eax
push [ ebp + 0xc ]
mov [ ebp + 0x10 ] eax
call [ GetWindowTextW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x74 ]
xor edi edi
push eax
push edi
push 0x1001
push esi
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
or [ ebx ] 0x200
jmp r-xdata
push 0x0
push [ ebp + 0x8 ]
mov [ ebp - 0xc0 ] 0x1
push [ esi + 0xc ]
call [ GetMenuItemInfoW@IAT ]
push edi
test eax eax
je r-xdata
mov [ ebp - 0xa0 ] edi
xor edi edi
push edi
push [ ebp + 0x8 ]
mov [ ebp - 0xc0 ] 0x10
push [ esi + 0xc ]
mov [ ebp - 0x9c ] 0x104
call [ GetMenuItemInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x30 ] 0x4
je r-xdata
push esi
call [ SendMessageW@IAT ]
push ebx
call sub_422d7c
pop ecx
lea ecx [ ebx + eax * 2 ]
mov ax [ rw-data ]
mov [ ecx ] ax
xor eax eax
push ecx
mov [ ecx + 0x2 ] ax
call [ CharNextW@IAT ]
movsx ecx [ esi + 0x94 ]
mov edx eax
mov [ ebp + 0x10 ] eax
mov eax [ ebp + 0x8 ]
inc eax
cmp eax ecx
mov [ ebx ] 0x4
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
push [ ebp + 0x10 ]
mov [ ebx ] edi
jmp r-xdata
mov [ ebx ] edi
jmp r-xdata
push 0x16
call sub_420f36
movzx ecx [ ebp - 0x6e ]
mov esi eax
push ecx
movzx ecx [ ebp - 0x72 ]
push ecx
movzx ecx [ ebp - 0x74 ]
push ecx
push r--data
push esi
call [ wsprintfW@IAT ]
add esp 0x18
jmp r-xdata
call j_sub_422ed5#3
pop ecx
jmp r-xdata
call j_sub_422ed5#3
pop ecx
mov ecx [ ebp - 0xb8 ]
mov al cl
and al 0x3
mov [ ebx ] ecx
movsx eax al
neg eax
sbb eax eax
and eax 0x40
add eax 0x40
test ecx 0x8080
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
push [ ebp + 0xc ]
mov [ ebx ] edi
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push edi
push 0x113e
push esi
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
push 0x2000
call sub_420f36
pop ecx
mov ebx eax
lea eax [ ebp - 0x30 ]
push eax
push edi
push 0x113e
push esi
test cl 0x8
je r-xdata
or eax 0x100
mov eax [ ebp - 0xc ]
jmp r-xdata
or eax 0x4
or eax 0x1
jmp r-xdata
or eax 0x200
jmp r-xdata
test ecx 0x1000
je r-xdata
sub_488515
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_402402
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
push esi
xor esi esi
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov ecx [ eax ]
mov eax [ ebp + 0x14 ]
sub eax esi
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
dec eax
je r-xdata
mov esp ebp
pop ebp
retn 0x24
push [ ebp + 0x28 ]
push [ ebp + 0x10 ]
jmp r-xdata
dec eax
jne r-xdata
push [ ebp + 0xc ]
push ecx
call [ SendMessageW@IAT ]
mov esi eax
mov eax esi
pop esi
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call [ SendMessageW@IAT ]
mov edx [ ebp + 0x18 ]
mov esi eax
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
mov [ edx ] ecx
mov edx [ ebp + 0x1c ]
mov ecx [ ebp - 0x14 ]
mov [ edx ] ecx
mov edx [ ebp + 0x20 ]
mov ecx [ ebp - 0x10 ]
mov [ edx ] ecx
mov ecx [ ebp + 0x24 ]
mov [ ecx ] eax
jmp r-xdata
sub_4885af
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_402402
test al al
jne r-xdata
mov eax [ rw-data ]
push esi
mov esi [ ebp - 0x4 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
cmp [ ecx + 0x90 ] 0x13
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0xc ]
add ecx 0x24
call sub_4081a7
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
mov al [ ebp + 0x10 ]
mov [ ecx + 0x98 ] al
xor eax eax
inc eax
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
pop esi
sub_488614
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_402402
test al al
je r-xdata
xor esi esi
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ eax ]
cmp [ ecx + 0x90 ] 0x15
jne r-xdata
lea eax [ ebp + 0xc ]
add ecx 0x70
push eax
call sub_409e9c
push 0x0
push [ ebp + 0x8 ]
call sub_48b385
movzx esi al
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_409a20
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_488677
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0x8 ]
mov ecx rw-data
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_402402
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
lea ecx [ ebp + 0xc ]
mov edi [ eax ]
mov bl [ edi + 0x90 ]
mov esi [ edi ]
mov [ ebp - 0x8 ] esi
mov [ ebp + 0xb ] bl
call sub_40322f
cmp [ edi + 0x48 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
movzx eax bl
mov ebx [ ebp + 0xc ]
cmp eax 0x12
jg r-xdata
push [ edi + 0x48 ]
call sub_48a4e1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp eax 0x13
je r-xdata
je r-xdata
mov ebx [ ebp + 0xc ]
cmp ebx 0xfffffffe
je r-xdata
cmp eax 0x14
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0xffffffff
jl r-xdata
test eax eax
je r-xdata
mov eax 0xfe000000
cmp ebx eax
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
js r-xdata
cmp eax 0x17
je r-xdata
push 0x1
push eax
mov [ edi + 0x48 ] eax
call sub_4022d0
test [ edi + 0x92 ] 0x20
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jns r-xdata
jle r-xdata
push ebx
push 0x0
push 0x1001
push esi
mov esi [ SendMessageW@IAT ]
call esi
push ebx
push 0x0
push 0x1026
push [ ebp - 0x8 ]
call esi
push 0x1
push eax
mov [ edi + 0x48 ] eax
call sub_4022d0
jmp r-xdata
push 0x1
push eax
mov [ edi + 0x48 ] eax
call sub_4022d0
push 0x1
push 0x0
push [ edi + 0x34 ]
call [ InvalidateRect@IAT ]
jmp r-xdata
push 0x1
push ebx
mov [ edi + 0x48 ] ebx
call sub_4022d0
jmp r-xdata
cmp eax 0x18
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ShowWindow@IAT ]
push 0x0
push [ edi ]
call esi
push 0x5
push [ edi ]
call esi
push [ edi ]
call [ SetFocus@IAT ]
jmp r-xdata
jmp r-xdata
cmp eax 0x4
jle r-xdata
xor eax eax
inc eax
cmp [ ebp + 0xb ] 0x8
jne r-xdata
push 0x1
push edi
push [ ebp - 0x4 ]
call sub_48b2f9
test ebx ebx
js r-xdata
jle r-xdata
cmp eax 0x8
je r-xdata
or eax 0xffffffff
jmp r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
or eax 0xb
push eax
push 0xfffffff0
push esi
call [ SetWindowLongW@IAT ]
cmp eax 0x1b
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
cmp eax 0x10
je r-xdata
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push 0x2001
cmp [ ebp + 0xc ] 0x0
jl r-xdata
cmp eax 0x11
jne r-xdata
push [ ebp + 0xc ]
push 0x0
push 0x111d
jmp r-xdata
push esi
call [ SendMessageW@IAT ]
jmp r-xdata
sub_488883
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0x8 ]
mov ecx rw-data
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_402402
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
lea ecx [ ebp + 0xc ]
mov edi [ eax ]
mov esi [ edi ]
mov bl [ edi + 0x90 ]
call sub_40322f
movzx eax bl
cmp eax 0x13
jg r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x14
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push 0x1
push 0x0
push [ edi + 0x34 ]
mov [ edi + 0x4c ] eax
call [ InvalidateRect@IAT ]
cmp eax 0x17
je r-xdata
push [ ebp + 0xc ]
push 0x0
push 0x1024
test eax eax
js r-xdata
xor eax eax
inc eax
cmp bl 0x8
je r-xdata
mov eax [ ebp + 0xc ]
push 0x1
push edi
push [ ebp + 0x8 ]
mov [ edi + 0x4c ] eax
call sub_48b2f9
jmp r-xdata
cmp eax 0x18
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x4
jle r-xdata
or eax 0xffffffff
jmp r-xdata
cmp bl 0x4
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
or eax 0xb
push eax
push 0xfffffff0
push esi
call [ SetWindowLongW@IAT ]
jle r-xdata
cmp eax 0x8
je r-xdata
cmp bl 0x1a
je r-xdata
cmp eax 0x1b
jle r-xdata
push [ ebp + 0xc ]
push 0x0
push 0x409
jmp r-xdata
cmp eax 0x10
je r-xdata
cmp bl 0x19
jne r-xdata
jmp r-xdata
push esi
call [ SendMessageW@IAT ]
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push 0x111e
jmp r-xdata
cmp eax 0x11
jne r-xdata
sub_4889be
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_402402
test al al
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ eax ]
mov ax [ ebp + 0xc ]
push ecx
mov [ ecx + 0x84 ] ax
call sub_487ce6
xor eax eax
inc eax
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_488a07
push ebp
mov ebp esp
mov eax 0x2110
call sub_431ac0
push ebx
push esi
push edi
lea eax [ ebp - 0x1c ]
xor esi esi
push eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] esi
push eax
push [ ebp + 0x8 ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x14 ] esi
call sub_402402
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x1c ]
mov edx [ eax ]
mov eax [ rw-data ]
mov [ ebp - 0x8 ] edx
mov eax [ eax + ecx * 4 ]
mov ebx [ eax ]
mov al [ ebx + 0x90 ]
mov edi [ ebx ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x18 ] 0x143
mov [ ebp - 0x10 ] 0x158
mov [ ebp - 0xc ] 0x14e
mov [ ebp - 0x14 ] 0x14b
cmp al 0x1
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp + 0xc ] esi
je r-xdata
movzx eax [ eax + lookup_table_488f77 ]
jmp [ eax * 4 + jump_table_488f43 ]
mov [ ebp - 0x18 ] 0x180
mov [ ebp - 0x10 ] 0x1a2
mov [ ebp - 0xc ] 0x186
mov [ ebp - 0x14 ] 0x184
jmp r-xdata
jbe r-xdata
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0xc ]
push edi
call [ SetWindowTextW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
push esi
push [ ebp + 0xc ]
call sub_423eb9
pop ecx
call sub_43b500
push eax
push 0x402
push [ ebp + 0xc ]
call sub_423eb9
pop ecx
call sub_43b500
push eax
push 0x1
push 0x405
jmp r-xdata
push [ ebp + 0xc ]
call sub_423eb9
pop ecx
call sub_43b500
mov [ ebx + 0x4c ] eax
jmp r-xdata
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
lea edx [ ebp - 0x2c ]
push 0x1
push 0x1
call sub_4656a4
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push esi
push 0x1002
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebx + 0x34 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x108 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xfc ] eax
lea eax [ ebp - 0x10c ]
push eax
push esi
push 0x113f
push [ ebx + 0x34 ]
mov [ ebp - 0x10c ] 0x1
jmp r-xdata
mov eax [ ebp + 0xc ]
xor edi edi
mov [ ebp - 0xd8 ] eax
inc edi
lea eax [ ebp - 0xe4 ]
mov [ ebp - 0xe4 ] edi
push eax
movzx eax [ ebx + 0x93 ]
push eax
push 0x133d
push [ edx + 0x188 ]
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
push 0x208
call sub_420f36
pop ecx
mov edi eax
mov [ ebp - 0xb0 ] 0x30
lea eax [ ebp - 0xb0 ]
mov [ ebp - 0xac ] 0x10
push eax
push esi
push [ ebp + 0x8 ]
mov [ ebp - 0x8c ] edi
push [ ebx + 0xc ]
mov [ ebp - 0x88 ] 0x104
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
cmp al 0x3
jbe r-xdata
mov eax [ ebp - 0x8 ]
push 0x1
push ebx
push eax
call sub_48b2f9
push eax
push 0xffffffff
push [ ebp - 0x10 ]
push edi
call [ SendMessageW@IAT ]
cmp eax 0xffffffff
je r-xdata
xor eax eax
inc eax
push edi
call [ SendMessageW@IAT ]
jmp r-xdata
push [ ebp + 0xc ]
push edi
call [ SetWindowTextW@IAT ]
push 0xf423f
push 0xf4240
push 0xb1
push edi
call [ SendMessageW@IAT ]
mov eax [ ebp - 0x8 ]
or [ eax + 0x1c4 ] 0xffffffff
jmp r-xdata
cmp [ ecx ] si
je r-xdata
jmp r-xdata
push 0x20
lea eax [ ebp - 0x80 ]
push esi
push eax
call sub_422f60
add esp 0xc
mov [ ebp + 0xc ] ebx
push 0x34
lea eax [ ebp - 0x60 ]
push esi
push eax
call sub_422f60
mov eax [ ebp + 0x8 ]
add esp 0xc
mov [ ebp - 0xc0 ] eax
lea eax [ ebp - 0xc8 ]
mov [ ebp - 0xc8 ] 0x1
push eax
push 0xffffffff
push 0x1053
push ebx
call [ SendMessageW@IAT ]
mov [ ebp - 0x5c ] eax
cmp eax 0xffffffff
je r-xdata
call [ SendMessageW@IAT ]
test eax eax
jne r-xdata
cmp [ ebx + 0x93 ] 0xff
je r-xdata
push edi
call j_sub_422ed5#3
pop ecx
jmp r-xdata
test [ ebp - 0xa8 ] 0x800
jne r-xdata
movzx eax al
cmp eax 0x1c
ja r-xdata
cmp [ ecx ] si
je r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp + 0xc ] eax
movzx ecx [ eax ]
cmp cx [ rw-data ]
je r-xdata
push esi
push eax
push [ ebp - 0xc ]
push edi
call [ SendMessageW@IAT ]
mov eax [ ebp - 0x8 ]
push 0x1
push ebx
push eax
call sub_48b2f9
jmp r-xdata
push [ ebp + 0xc ]
push 0x1
push 0xc2
jmp r-xdata
push ebx
call sub_422d7c
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x210c ] 0x0
lea eax [ ebp - 0x210c ]
mov [ ebp - 0x80 ] 0x4
mov [ ebp - 0x74 ] eax
je r-xdata
mov [ ebp + 0xc ] edi
mov eax [ ebp - 0x8 ]
push edi
push esi
push [ eax ]
call [ InvalidateRect@IAT ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8c ] eax
lea eax [ ebp - 0xb0 ]
push eax
push esi
push [ ebp + 0x8 ]
push [ ebx + 0xc ]
call [ SetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
jmp r-xdata
push eax
call [ CharNextW@IAT ]
mov ebx [ SendMessageW@IAT ]
push esi
push esi
push [ ebp - 0x14 ]
mov [ ebp + 0xc ] eax
jmp r-xdata
test cx cx
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x74 ] eax
lea eax [ ebp - 0x80 ]
push eax
push esi
push 0x1060
jmp r-xdata
push ebx
call sub_422d7c
pop ecx
mov ax [ ebx + eax * 2 - 0x2 ]
cmp ax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
lea eax [ ebp - 0x80 ]
push eax
push esi
push 0x1060
push edi
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
push edi
call sub_422d7c
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x210c ] 0x0
lea eax [ ebp - 0x210c ]
mov [ ebp - 0x60 ] 0x1
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x58 ] esi
je r-xdata
mov eax [ ebp - 0x8 ]
push [ eax ]
call [ DrawMenuBar@IAT ]
push edi
call j_sub_422ed5#3
pop ecx
jmp r-xdata
push edi
call ebx
jmp r-xdata
mov ebx [ SendMessageW@IAT ]
push edi
push rw-data
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x210c ]
push eax
call sub_48ac9b
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4c ] eax
lea eax [ ebp - 0x60 ]
push eax
push [ ebp - 0x5c ]
mov [ ebp - 0x58 ] esi
push 0x1074
push ebx
jmp r-xdata
push edi
call sub_422d7c
pop ecx
mov ax [ edi + eax * 2 - 0x2 ]
cmp ax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
lea eax [ ebp - 0x60 ]
push eax
push [ ebp - 0x5c ]
push 0x1074
push ebx
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
push rw-data
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x210c ]
push eax
call sub_48ac9b
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x210c ]
push eax
push esi
push [ ebp - 0x18 ]
push rw-data
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x210c ]
push eax
call sub_48ac9b
test al al
je r-xdata
push eax
push 0xffffffff
push [ ebp - 0x10 ]
push edi
call ebx
cmp eax 0xffffffff
je r-xdata
push esi
push eax
push [ ebp - 0xc ]
push edi
call ebx
jmp r-xdata
sub_488f94
push ebp
mov ebp esp
sub esp 0x14
lea ecx [ ebp - 0x14 ]
push esi
push edi
push [ ebp + 0x10 ]
call sub_407f41
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_402402
test al al
je r-xdata
xor edi edi
mov ecx [ ebp + 0x10 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x4 ]
mov esi [ eax ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov [ ebp + 0x8 ] eax
test [ eax + 0x91 ] 0x1
jne r-xdata
fld [ ebp + 0x1c ]
fld [ r--data ]
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
fmul [ r--data ]
call sub_43b500
mov eax [ esi + 0x7c ]
fstp st0
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov ebx [ esi + 0x80 ]
push ebx
mov ebx [ ebp + 0xc ]
mov [ ebp + 0x10 ] eax
cmp ebx 0xffffffff
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x84 ]
mov [ ebp + 0x14 ] eax
xor edi edi
lea eax [ ebp - 0x14 ]
inc edi
push edi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
push esi
call sub_486205
pop ebx
jmp r-xdata
lea eax [ esi + 0x6c ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_4081a7
lea ecx [ ebp - 0x14 ]
call sub_405a64
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x1c
sub_489073
push ebp
mov ebp esp
sub esp 0xa8
push ebx
push esi
push edi
lea ecx [ ebp + 0x14 ]
call sub_409c9c
mov [ ebp - 0x18 ] eax
mov ecx rw-data
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_402402
xor edi edi
test al al
je r-xdata
mov esi edi
mov ecx [ ebp - 0xc ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ eax ]
mov dl [ ebx + 0x90 ]
mov esi [ ebx ]
mov [ ebp - 0xc ] esi
mov [ ebp + 0xb ] dl
call sub_4649ed
mov [ ebp - 0x10 ] eax
xor eax eax
movzx ecx dl
inc eax
cmp ecx 0x11
jg r-xdata
cmp ecx 0x13
jl r-xdata
cmp ecx 0x10
jge r-xdata
cmp ecx 0x14
jle r-xdata
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push [ ebp - 0x10 ]
push [ ebp + 0xc ]
call [ ExtractIconExW@IAT ]
test eax eax
jle r-xdata
sub ecx 0x6
je r-xdata
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
push [ ebp + 0xc ]
call [ ExtractIconExW@IAT ]
test eax eax
jg r-xdata
lea eax [ ecx - 0x18 ]
cmp eax 0x2
ja r-xdata
cmp [ ebp + 0xb ] 0x10
jne r-xdata
lea eax [ ebp - 0x30 ]
push eax
push esi
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x30 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x2c ]
mov [ ebp + 0x10 ] eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
push ebx
call sub_48ba67
test eax eax
je r-xdata
dec ecx
je r-xdata
cmp [ ebp + 0xb ] 0x13
jne r-xdata
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0xffffffff
push [ ebp + 0xc ]
call [ ExtractIconExW@IAT ]
cmp [ ebp - 0x1c ] edi
jne r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
test al al
jns r-xdata
mov esi [ ebx + 0x34 ]
mov ecx rw-data
push esi
call sub_4025db
mov ebx [ ebp - 0x14 ]
mov [ ebp + 0xc ] ebx
mov edx [ rw-data ]
mov eax [ ebp - 0x14 ]
push 0x3
pop ebx
mov [ ebp + 0xc ] edx
jmp r-xdata
xor esi esi
inc esi
push esi
push ebx
push [ ebp - 0x20 ]
call sub_48b2f9
jmp r-xdata
sub esp 0x10
lea eax [ ebp + 0x14 ]
mov ecx esp
push eax
mov [ ecx + 0x8 ] edi
call sub_409ac0
push [ ebp + 0xc ]
push ebx
call sub_48b832
test al al
je r-xdata
sub ecx 0x4
jne r-xdata
mov esi [ ebx + 0x34 ]
mov ecx rw-data
push esi
mov [ ebp - 0xc ] esi
call sub_4025db
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x48 ]
push eax
push 0xffffffff
push 0x1053
push esi
mov [ ebp - 0x48 ] 0x1
call [ SendMessageW@IAT ]
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x14 ]
push edi
push edi
push 0x1004
push esi
mov [ ebp + 0xc ] eax
mov [ ebp - 0x14 ] edi
call [ SendMessageW@IAT ]
jmp r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
cmp [ ebp - 0x18 ] 0xffffffff
jne r-xdata
push 0x2010
push edi
push edi
push edi
push [ ebp + 0xc ]
push edi
call [ LoadImageW@IAT ]
mov [ ebp + 0xc ] eax
test eax eax
je r-xdata
push [ ebp - 0x8 ]
push 0xffffffff
push eax
call [ ImageList_ReplaceIcon@IAT ]
cmp [ ebp + 0xb ] 0x10
mov ecx eax
mov [ ebp - 0xc ] ecx
jne r-xdata
inc eax
push eax
push eax
push 0x21
push 0x10
push 0x10
call [ ImageList_Create@IAT ]
mov ecx [ rw-data ]
mov edx [ ebp - 0xc ]
push eax
push edi
push 0x1109
mov ecx [ ecx + edx * 4 ]
push esi
mov [ ebp - 0x18 ] eax
mov ecx [ ecx ]
mov [ ecx + 0x40 ] eax
call [ SendMessageW@IAT ]
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0xc ] eax
mov ecx [ ecx + eax * 4 ]
mov ecx [ ecx ]
mov eax [ ecx + 0x40 ]
test eax eax
jne r-xdata
lea ecx [ ebp + 0x14 ]
call sub_409a20
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
push edi
push ebx
push [ ebp - 0x20 ]
call sub_48b2f9
jmp r-xdata
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push [ ebp - 0x10 ]
push [ ebp + 0xc ]
call [ ExtractIconExW@IAT ]
test eax eax
jle r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ecx + eax * 4 ]
mov eax [ ecx ]
mov ecx [ eax + 0x38 ]
mov eax [ eax + 0x3c ]
mov [ ebp - 0x18 ] ecx
mov [ ebp + 0x10 ] eax
test ecx ecx
jne r-xdata
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
push [ ebp + 0xc ]
call [ ExtractIconExW@IAT ]
test eax eax
jle r-xdata
cmp [ ebp + 0xb ] 0x18
jne r-xdata
push eax
push edi
push 0xf7
push esi
call [ SendMessageW@IAT ]
cmp [ ebx + 0x64 ] edi
je r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test [ ebp + 0x10 ] 0x2
mov eax [ ebp - 0x20 ]
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
push esi
call [ GetClientRect@IAT ]
push edi
push edi
lea eax [ ebp - 0x40 ]
push eax
push esi
call [ RedrawWindow@IAT ]
xor esi esi
inc esi
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov ecx rw-data
mov eax [ eax + 0x188 ]
push eax
mov [ ebp + 0xc ] eax
call sub_4025db
mov ecx [ rw-data ]
mov [ ebp + 0x10 ] eax
mov ecx [ ecx + eax * 4 ]
mov ecx [ ecx ]
mov esi [ ecx + 0x40 ]
test esi esi
jne r-xdata
test eax eax
jne r-xdata
push 0x1
push edi
push 0x21
push 0x10
push 0x10
call [ ImageList_Create@IAT ]
mov ecx [ rw-data ]
mov edx [ ebp + 0xc ]
push eax
push 0x1
push 0x1003
mov ecx [ ecx + edx * 4 ]
push esi
mov [ ebp - 0x18 ] eax
mov ecx [ ecx ]
mov [ ecx + 0x38 ] eax
call [ SendMessageW@IAT ]
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0x10 ] edi
mov edi [ DestroyIcon@IAT ]
je r-xdata
push 0x2010
xor edi edi
push edi
push edi
push 0x1
push [ ebp + 0xc ]
push edi
call [ LoadImageW@IAT ]
mov [ ebp + 0xc ] eax
test eax eax
je r-xdata
cmp [ ebx + 0x68 ] edi
je r-xdata
push [ ebx + 0x64 ]
call [ DeleteObject@IAT ]
mov eax [ rw-data ]
mov eax [ eax + ebx * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
mov [ eax + 0x1b4 ] ecx
mov edi [ ebp + 0xc ]
xor eax eax
inc eax
push eax
push eax
push 0x21
push 0x10
push 0x10
call [ ImageList_Create@IAT ]
mov ecx [ rw-data ]
mov esi eax
mov eax [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov ecx [ ecx + eax * 4 ]
push 0x1303
push edi
mov ecx [ ecx ]
mov [ ecx + 0x40 ] esi
call [ SendMessageW@IAT ]
test esi esi
je r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
je r-xdata
push 0x1
push edi
push 0x21
push 0x20
push 0x20
call [ ImageList_Create@IAT ]
mov ecx [ rw-data ]
mov edx [ ebp + 0xc ]
push eax
push edi
push 0x1003
mov ecx [ ecx + edx * 4 ]
push esi
mov [ ebp + 0x10 ] eax
mov ecx [ ecx ]
mov [ ecx + 0x3c ] eax
call [ SendMessageW@IAT ]
mov eax [ ebp + 0x10 ]
mov eax [ ebp - 0x8 ]
push [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
push [ ebp - 0x8 ]
jmp r-xdata
push eax
push 0x1
push 0xf7
push esi
call [ SendMessageW@IAT ]
cmp [ ebx + 0x64 ] edi
je r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx + 0x64 ] eax
mov [ ebx + 0x68 ] edi
jmp r-xdata
push [ ebx + 0x68 ]
call [ DestroyIcon@IAT ]
inc ebx
mov edx [ ebp - 0x20 ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
mov [ eax + 0x1b8 ] ecx
jmp r-xdata
push [ ebp - 0x8 ]
call [ DestroyIcon@IAT ]
jmp r-xdata
jmp r-xdata
push [ ebp - 0x8 ]
mov esi [ DestroyIcon@IAT ]
call esi
push [ ebp - 0x1c ]
call esi
test eax eax
je r-xdata
cmp [ ebx + 0x68 ] 0x0
je r-xdata
push [ ebx + 0x64 ]
call [ DeleteObject@IAT ]
mov [ ebp + 0xc ] eax
call edi
push [ ebp + 0xc ]
push 0x1
push 0xf7
push esi
call [ SendMessageW@IAT ]
cmp [ ebx + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x68 ] edi
je r-xdata
push [ ebx + 0x64 ]
call [ DeleteObject@IAT ]
cmp [ ecx + 0x90 ] 0x11
jne r-xdata
push [ ebp - 0x8 ]
movsx eax [ ebx + 0x88 ]
push eax
push esi
call [ ImageList_ReplaceIcon@IAT ]
movzx ecx [ ebx + 0x93 ]
mov esi eax
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x4c ] 0x2
push eax
push ecx
push 0x133d
push edi
mov [ ebp - 0x38 ] esi
call [ SendMessageW@IAT ]
mov [ ebx + 0x88 ] si
jmp r-xdata
push [ ebp - 0x8 ]
mov esi [ ImageList_ReplaceIcon@IAT ]
push 0xffffffff
push ecx
call esi
push [ ebp - 0x1c ]
mov [ ebp + 0xc ] eax
push 0xffffffff
push [ ebp + 0x10 ]
call esi
cmp [ ebp + 0xb ] 0x13
jne r-xdata
and [ ebx + 0x64 ] 0x0
push [ ebx + 0x68 ]
call edi
mov [ ebx + 0x64 ] edi
jmp r-xdata
push [ ebx + 0x68 ]
call [ DestroyIcon@IAT ]
cmp [ ecx + 0x34 ] esi
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx eax
mov edx [ ebp - 0x10 ]
mov esi [ ebp - 0xc ]
mov ebx [ SendMessageW@IAT ]
mov [ ebp + 0x10 ] ecx
cmp eax edx
jg r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx + 0x9c ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0x74 ]
push eax
push edi
push 0x113e
push esi
mov [ ebp - 0x74 ] 0x32
call [ SendMessageW@IAT ]
test [ ebp + 0x10 ] 0x2
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x5c ]
mov eax [ ebp - 0xc ]
je r-xdata
push edx
push eax
push 0x1015
push esi
call ebx
lea eax [ ebp - 0xa8 ]
mov [ ebp - 0xa8 ] 0x2
push eax
push edi
push 0x104b
push esi
mov [ ebp - 0xa4 ] ecx
mov [ ebp - 0xa0 ] edi
call ebx
cmp [ ebp - 0x8c ] 0xfffffffe
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
mov ecx eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8c ] eax
lea eax [ ebp - 0xa8 ]
push eax
push edi
push 0x104c
push esi
call ebx
cmp [ ebp + 0xb ] 0x14
jne r-xdata
lea eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] edx
push eax
push edi
push 0x113f
push esi
mov [ ebp - 0x58 ] ecx
call [ SendMessageW@IAT ]
mov edx eax
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp + 0x10 ]
inc ecx
mov [ ebp + 0x10 ] ecx
cmp ecx [ ebp - 0x10 ]
jle r-xdata
sub_489725
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_402402
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
push esi
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov esi [ eax ]
movzx eax [ eax + 0x90 ]
dec eax
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
dec eax
je r-xdata
mov esp ebp
pop ebp
retn 0xc
xor eax eax
inc eax
push 0x0
push [ ebp + 0xc ]
push 0x194
cmp [ ebp + 0xc ] 0x0
jle r-xdata
dec eax
je r-xdata
push 0x0
push [ ebp + 0xc ]
push 0xc5
jmp r-xdata
push 0xffffffff
push 0x0
push 0xb1
push esi
call [ SendMessageW@IAT ]
sub eax 0xf
je r-xdata
push esi
call [ SendMessageW@IAT ]
mov eax [ ebp + 0xc ]
movzx ecx ax
mov eax [ ebp + 0x10 ]
shl ecx 0x10
movzx eax ax
or ecx eax
push ecx
push 0x1
push 0x406
jmp r-xdata
sub eax 0x4
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push 0x46f
jmp r-xdata
xor eax eax
jmp r-xdata
pop esi
sub_4897e3
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_402402
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
push [ ebp + 0xc ]
mov eax [ eax + ecx * 4 ]
mov ecx [ eax ]
add ecx 0x14
call sub_4081a7
xor eax eax
inc eax
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_489826
push ebp
mov ebp esp
sub esp 0x1c
lea eax [ ebp - 0xc ]
mov ecx rw-data
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_402402
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
push esi
push edi
mov edi [ ebp + 0x14 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0xc ]
mov eax [ eax ]
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov esi [ eax ]
or eax 0xffffffff
mov [ ebp - 0xc ] esi
cmp [ ebp + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x1c ]
push ecx
push eax
mov [ ebp + 0x14 ] eax
call [ GetWindowRect@IAT ]
mov edx [ ebp - 0x1c ]
cmp edi 0xffffffff
jne r-xdata
cmp [ ebp + 0x10 ] eax
jne r-xdata
mov esp ebp
pop ebp
retn 0x14
cmp [ ebp + 0x18 ] 0xffffffff
mov ecx [ ebp - 0x18 ]
jne r-xdata
mov edi [ ebp - 0x14 ]
sub edi edx
cmp edi eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edx
push eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
push [ eax ]
call [ ScreenToClient@IAT ]
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x10 ]
sub eax ecx
mov [ ebp + 0x18 ] eax
cmp [ ebp + 0x18 ] eax
je r-xdata
mov edx [ ebp + 0x10 ]
cmp edx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp + 0xc ] ecx
xor eax eax
pop edi
inc eax
pop esi
mov eax [ ebp + 0x8 ]
mov [ eax + 0x58 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ eax + 0x5c ] edx
mov [ eax + 0x60 ] edi
mov [ eax + 0x64 ] ecx
movsx eax [ esi + 0x88 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov edx [ ebp - 0x4 ]
push 0x1
push ecx
push edi
push edx
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
call [ MoveWindow@IAT ]
push 0x1
push esi
push [ ebp + 0x8 ]
call sub_401db3
cmp [ esi + 0x90 ] 0x3
jne r-xdata
movsx eax [ esi + 0x8a ]
cmp eax edx
jne r-xdata
push 0x1
push esi
push [ ebp + 0x8 ]
call sub_48b2f9
mov edx [ rw-data ]
push 0x3
pop edi
cmp edx edi
jl r-xdata
movsx eax [ esi + 0x8c ]
cmp eax edi
jne r-xdata
mov esi [ ebp + 0x8 ]
movsx eax [ esi + 0x8e ]
cmp eax ecx
je r-xdata
inc edi
cmp edi edx
jle r-xdata
mov eax [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov esi [ ebp - 0xc ]
cmp [ ecx + 0x90 ] 0x16
jne r-xdata
mov eax [ ebp + 0x14 ]
cmp [ ecx + 0x34 ] eax
jne r-xdata
push 0x0
push eax
push 0x469
push [ ecx ]
call [ SendMessageW@IAT ]
mov edx [ rw-data ]
sub_4899ba
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_402402
test al al
jne r-xdata
mov edx [ rw-data ]
push esi
push edi
mov edi [ ebp - 0x4 ]
mov eax [ edx + edi * 4 ]
mov esi [ eax ]
xor eax eax
cmp [ esi + 0x86 ] ax
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0x400
jl r-xdata
mov esp ebp
pop ebp
retn 0x8
pop edi
pop esi
test ecx ecx
jns r-xdata
lea eax [ ecx - 0x1 ]
cmp eax 0x3fe
ja r-xdata
mov ecx eax
mov ecx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ eax ]
cmp [ ecx + 0x3a ] 0x0
jne r-xdata
mov [ esi + 0x86 ] cx
mov edx [ rw-data ]
xor eax eax
inc eax
mov eax [ edx + edi * 4 ]
push 0x0
push [ eax ]
push ecx
call sub_401db3
sub_489a4e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xa8
lea eax [ esp + 0x14 ]
mov ecx rw-data
push esi
push edi
push eax
lea eax [ esp + 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_402402
test al al
jne r-xdata
mov ecx [ esp + 0x10 ]
xor esi esi
mov eax [ rw-data ]
mov edx [ esp + 0x1c ]
mov [ esp + 0xc ] esi
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp + 0xc ]
mov eax [ eax ]
mov [ esp + 0x20 ] eax
mov eax [ rw-data ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
mov eax [ edi ]
mov [ esp + 0x14 ] eax
mov al [ edi + 0x90 ]
mov [ esp + 0xb ] al
test ecx ecx
jns r-xdata
xor eax eax
jmp r-xdata
mov eax ecx
and eax 0x100
mov [ esp + 0x18 ] eax
je r-xdata
mov ecx esi
mov [ ebp + 0xc ] ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
test ecx 0x800
je r-xdata
push edx
push [ esp + 0x14 ]
call sub_402327
mov ecx [ ebp + 0xc ]
mov [ esp + 0xc ] 0x1
movzx eax [ esp + 0xb ]
mov edx 0x1000
cmp eax 0x14
jg r-xdata
cmp [ esp + 0xb ] 0x17
mov eax esi
jne r-xdata
sub eax 0x16
je r-xdata
je r-xdata
push 0x103
push esi
push esi
push esi
push esi
push eax
push [ esp + 0x2c ]
call [ SetWindowPos@IAT ]
mov ecx [ ebp + 0xc ]
mov [ esp + 0xc ] 0x1
xor eax eax
inc eax
push 0x3
pop edx
cmp [ rw-data ] edx
jl r-xdata
dec eax
dec eax
je r-xdata
mov eax [ esp + 0x1c ]
mov edi [ edi + 0x34 ]
mov [ esp + 0x2c ] eax
lea eax [ esp + 0x24 ]
push eax
push 0xffffffff
push 0x1053
push edi
mov [ esp + 0x34 ] 0x1
call [ SendMessageW@IAT ]
or ecx 0xffffffff
mov [ esp + 0x10 ] eax
cmp eax ecx
je r-xdata
cmp eax 0x9
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0x10f8
mov [ ebp + 0xc ] eax
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax + edx * 4 ]
mov eax [ eax ]
mov [ esp + 0x18 ] eax
test eax eax
je r-xdata
test ecx 0x200
je r-xdata
dec eax
je r-xdata
push 0xffffffec
push edi
mov [ esp + 0x60 ] eax
mov [ esp + 0x64 ] esi
mov [ esp + 0x5c ] 0x8
call [ GetWindowLongW@IAT ]
test al 0x4
mov eax [ ebp + 0xc ]
je r-xdata
and ecx 0x7
sub ecx esi
je r-xdata
cmp eax 0xb
je r-xdata
mov eax [ esp + 0xc ]
mov [ esp + 0xc ] 0x1
mov ecx esi
mov [ esp + 0x10 ] ecx
test al al
jns r-xdata
inc edx
cmp edx [ rw-data ]
jle r-xdata
mov ecx [ esp + 0x20 ]
mov eax [ eax + 0x4 ]
cmp eax [ ecx + 0x4 ]
mov ecx [ ebp + 0xc ]
jne r-xdata
mov eax [ esp + 0x20 ]
push esi
push [ esp + 0x20 ]
push 0x401
push [ eax ]
call [ SendMessageW@IAT ]
call [ GetFocus@IAT ]
cmp eax [ edi ]
jne r-xdata
and ecx 0x7
je r-xdata
dec eax
jne r-xdata
test eax 0x2100
je r-xdata
test al 0x5
je r-xdata
push esi
push esi
push 0x466
dec ecx
je r-xdata
test cl 0x10
je r-xdata
cmp eax 0xc
je r-xdata
test al 0x40
je r-xdata
push esi
push [ esp + 0x18 ]
mov ecx 0xc0
mov [ esp + 0x18 ] ecx
call [ EnableWindow@IAT ]
mov eax [ ebp + 0xc ]
jmp r-xdata
mov eax [ esp + 0x18 ]
cmp [ eax + 0x90 ] 0x3
jne r-xdata
mov [ esp + 0xc ] 0x1
jmp r-xdata
push [ esp + 0x1c ]
push [ esp + 0x14 ]
call sub_402327
jmp r-xdata
push esi
and ecx 0x3
push ecx
push 0xf1
and ecx 0x7
je r-xdata
mov eax esi
jmp r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
dec eax
mov [ esp + 0x64 ] 0xf000
neg eax
sbb eax eax
and eax 0xfffff000
add eax 0x2000
mov [ esp + 0x60 ] eax
lea eax [ esp + 0x54 ]
push eax
push esi
push 0x104c
push edi
call [ SendMessageW@IAT ]
mov esi eax
mov eax [ ebp + 0xc ]
jmp r-xdata
push 0xffff0000
push 0xffffffff
push 0x465
jmp r-xdata
push esi
push esi
push 0x467
jmp r-xdata
mov edx [ esp + 0x20 ]
movzx ecx [ edi + 0x93 ]
cmp [ edx + 0x198 ] 0x0
je r-xdata
cmp eax 0xd
jle r-xdata
mov ecx [ esp + 0x10 ]
mov edx eax
and edx 0x20
je r-xdata
push 0x1
push [ esp + 0x18 ]
mov ecx 0xc0
mov [ esp + 0x18 ] ecx
call [ EnableWindow@IAT ]
mov eax [ ebp + 0xc ]
mov eax [ eax ]
cmp eax [ edi + 0x34 ]
je r-xdata
and ecx 0x3
push ecx
push [ esp + 0x20 ]
call sub_4862ff
mov ecx [ esp + 0x60 ]
or ecx 0xffffffff
jmp r-xdata
push [ esp + 0x20 ]
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
push [ esp + 0x20 ]
push ecx
push edx
mov ecx rw-data
call sub_48b6d2
mov ecx [ esp + 0x20 ]
movzx eax [ edi + 0x93 ]
mov [ ecx + 0x194 ] eax
jmp r-xdata
mov eax [ edx + 0x194 ]
mov [ edx + 0x190 ] eax
cmp eax 0xf
jle r-xdata
mov [ esp + 0x18 ] eax
and [ esp + 0x18 ] 0x10
je r-xdata
add ecx 0x30
mov al [ edi + 0x92 ]
test cl al
jne r-xdata
and eax 0x2000
mov [ esp + 0x64 ] 0x3
neg eax
sbb eax eax
not eax
and eax ecx
mov [ esp + 0x60 ] eax
lea eax [ esp + 0x54 ]
push eax
push [ esp + 0x14 ]
push 0x102b
push edi
call [ SendMessageW@IAT ]
mov esi eax
lea eax [ esp + 0x24 ]
mov [ esp + 0x24 ] 0x30
push eax
push esi
push [ esp + 0x24 ]
mov [ esp + 0x34 ] 0x1
push [ edi + 0xc ]
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
cmp eax 0x11
jne r-xdata
test al 0x8
je r-xdata
add ecx 0x30
test al 0x10
je r-xdata
mov eax [ ebp + 0xc ]
test al 0x20
jne r-xdata
mov eax [ edi + 0x10 ]
mov [ esp + 0x8c ] eax
mov al cl
and al 0x1
mov [ esp + 0x88 ] 0x8
movsx eax al
neg eax
mov [ esp + 0x94 ] 0xf010
sbb eax eax
and eax edx
add eax edx
mov [ esp + 0x90 ] eax
test ecx 0x200
je r-xdata
test eax 0x1000
je r-xdata
add ecx 0x1008
mov eax [ rw-data ]
push esi
mov eax [ eax + edx * 4 ]
mov ecx [ eax ]
movsx eax [ ecx + 0x8e ]
push eax
movsx eax [ ecx + 0x8c ]
push eax
movsx eax [ ecx + 0x8a ]
push eax
movsx eax [ ecx + 0x88 ]
push eax
push [ ecx ]
call [ MoveWindow@IAT ]
push esi
push [ edi + 0x34 ]
push 0x469
push [ esp + 0x20 ]
call [ SendMessageW@IAT ]
test al al
jns r-xdata
lea eax [ esp + 0x88 ]
push eax
push esi
push 0x113f
push [ edi + 0x34 ]
call [ SendMessageW@IAT ]
test [ ebp + 0xc ] 0x400
je r-xdata
or eax 0x10
mov [ esp + 0x90 ] eax
not cl
and cl [ edi + 0x92 ]
or cl al
mov al [ edi + 0x93 ]
mov [ edi + 0x92 ] cl
cmp al 0xff
je r-xdata
add ecx 0x1008
mov ecx esi
push 0x3
pop ecx
jmp r-xdata
cmp [ esp + 0x18 ] esi
je r-xdata
push [ edi + 0x10 ]
push 0x2
push 0x1102
push [ edi + 0x34 ]
call [ SendMessageW@IAT ]
test edx edx
je r-xdata
mov ecx [ esp + 0x20 ]
movzx eax al
mov ecx [ ecx + 0x190 ]
cmp eax ecx
je r-xdata
cmp [ esp + 0x18 ] esi
je r-xdata
or ecx 0x8
test al 0x1
je r-xdata
push [ edi + 0x34 ]
mov ecx rw-data
call sub_4025db
push eax
push [ esp + 0x14 ]
call sub_402327
push [ edi + 0x10 ]
push 0x9
push 0x110b
push [ edi + 0x34 ]
jmp r-xdata
mov esi [ esp + 0x14 ]
push esi
mov esi [ esp + 0x18 ]
push esi
call [ ShowWindow@IAT ]
jmp r-xdata
cmp ecx 0xffffffff
jne r-xdata
test [ esp + 0x30 ] 0x8
je r-xdata
or ecx 0x80
call [ SendMessageW@IAT ]
jmp r-xdata
push 0x1
push edi
push [ esp + 0x28 ]
call sub_48b2f9
push 0x4
push esi
call [ ShowWindow@IAT ]
cmp [ esp + 0xb ] 0x1a
jne r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
lea eax [ esp + 0x24 ]
mov [ esp + 0x30 ] ecx
push eax
push esi
push [ esp + 0x24 ]
push [ edi + 0xc ]
call [ SetMenuItemInfoW@IAT ]
test [ ebp + 0xc ] 0x200
je r-xdata
test al 0x4
jne r-xdata
test [ edi + 0x92 ] 0x40
je r-xdata
lea eax [ esp + 0x24 ]
push eax
push esi
push [ esp + 0x24 ]
push [ edi + 0xc ]
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
push esi
push [ esp + 0x20 ]
jmp r-xdata
or ecx 0x8
push 0x1
push esi
call [ EnableWindow@IAT ]
mov eax [ esp + 0x20 ]
push [ eax ]
call [ DrawMenuBar@IAT ]
jmp r-xdata
test [ esp + 0x30 ] 0x1000
je r-xdata
push [ edi + 0xc ]
call [ SetMenuDefaultItem@IAT ]
push esi
or ecx 0xffffffff
push ecx
sub_48a088
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov ecx rw-data
push eax
push [ ebp + 0x8 ]
call sub_402402
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x8 ]
push edi
mov eax [ eax ]
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ SendMessageW@IAT ]
mov edi [ eax ]
mov ebx [ edi ]
cmp esi 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
cmp esi 0xffffffff
je r-xdata
movzx eax [ edi + 0x90 ]
dec eax
dec eax
je r-xdata
mov esp ebp
pop ebp
retn 0xc
mov al [ edi + 0x93 ]
mov ecx [ ebp + 0x8 ]
cmp al 0xff
je r-xdata
push esi
push 0xffffffec
push ebx
call [ SetWindowLongW@IAT ]
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0x13
jne r-xdata
or esi 0x4
dec eax
je r-xdata
push 0x1
push edi
push ecx
call sub_48b2f9
movzx eax al
cmp eax [ ecx + 0x190 ]
je r-xdata
push esi
push 0x0
push 0x1036
push ebx
call [ SendMessageW@IAT ]
mov [ ebp - 0x4 ] eax
or esi 0x10000
push 0x0
push 0x1
jmp r-xdata
push 0x0
test esi 0x800
je r-xdata
sub eax 0x3
je r-xdata
push 0x27
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ edi ]
call [ SetWindowPos@IAT ]
cmp al 0x3
je r-xdata
push 0x0
push ebx
call [ ShowWindow@IAT ]
jmp r-xdata
push 0xcf
push ebx
call ecx
or esi 0xe
jmp r-xdata
dec eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
mov al [ edi + 0x90 ]
cmp al 0x2
je r-xdata
or esi 0x50000000
push esi
push 0xfffffff0
push ebx
call [ SetWindowLongW@IAT ]
mov [ ebp - 0x4 ] eax
or esi 0x3
jmp r-xdata
sub eax 0x3
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
setne al
or esi 0x4000000
jmp r-xdata
sub eax 0xc
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
sub_48a1eb
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x48
lea eax [ esp ]
mov ecx rw-data
push esi
push edi
push eax
lea eax [ esp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_402402
test al al
je r-xdata
xor eax eax
mov ecx [ esp + 0xc ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esp + 0x8 ]
mov edi [ eax ]
mov eax [ rw-data ]
mov [ esp + 0xc ] edi
mov eax [ eax + ecx * 4 ]
mov esi [ eax ]
mov al [ esi + 0x90 ]
cmp al 0xe
je r-xdata
cmp al 0xf
je r-xdata
cmp al 0xc
je r-xdata
cmp al 0x9
je r-xdata
cmp al 0x14
je r-xdata
cmp al 0x11
je r-xdata
cmp al 0x1d
je r-xdata
cmp al 0x1b
je r-xdata
cmp al 0x15
je r-xdata
push 0x2c
lea eax [ esp + 0x28 ]
push 0x0
push eax
call sub_422f60
mov eax [ ebp + 0x1c ]
add esp 0xc
mov edx [ rw-data ]
movzx eax al
neg eax
mov [ esp + 0x20 ] 0x30
sbb eax eax
and eax 0x2
or eax 0x11
mov [ esp + 0x24 ] eax
mov eax [ esi ]
mov [ esp + 0x28 ] eax
mov [ esp + 0x40 ] edx
mov eax [ esi ]
mov [ esp + 0x2c ] eax
mov eax [ ebp + 0xc ]
mov [ esp + 0x44 ] eax
cmp [ esi + 0x90 ] 0xb
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
push [ edi + 0x188 ]
mov ecx rw-data
call sub_4025db
mov ecx [ rw-data ]
mov edi eax
mov ecx [ ecx + edi * 4 ]
mov ecx [ ecx ]
cmp [ ecx + 0x50 ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx 0x80000000
movzx eax al
neg eax
sbb eax eax
xor edi edi
push edi
push edx
push edi
push [ esi ]
and eax 0x40
push ecx
push ecx
push ecx
push ecx
or eax 0x80000013
push eax
push edi
push r--data
push 0x8
call [ CreateWindowExW@IAT ]
mov edi eax
test edi edi
je r-xdata
push [ esi + 0x50 ]
call [ DestroyWindow@IAT ]
mov edx [ rw-data ]
mov ecx [ esp + 0xc ]
mov edi [ esi + 0x50 ]
mov eax [ ecx + 0x188 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x8 ]
mov [ esp + 0x2c ] eax
test edi edi
jne r-xdata
cmp [ ecx + 0x58 ] 0x0
je r-xdata
lea eax [ esp + 0x20 ]
push eax
push 0x0
push 0x432
push edi
call [ SendMessageW@IAT ]
push [ ebp + 0xc ]
lea ecx [ esi + 0x54 ]
mov [ esi + 0x50 ] edi
call sub_407d2c
lea eax [ esp + 0x10 ]
push eax
call [ GetDesktopWindow@IAT ]
push eax
call [ GetWindowRect@IAT ]
push [ esp + 0x18 ]
mov esi [ SendMessageW@IAT ]
push 0x0
push 0x418
push edi
call esi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
lea eax [ esp + 0x20 ]
push eax
push 0x0
push 0x433
push edi
call [ SendMessageW@IAT ]
mov eax [ ebp + 0x18 ]
push edi
push [ rw-data ]
movzx eax al
push edi
push [ ecx + 0x188 ]
mov ecx 0x80000000
neg eax
push ecx
push ecx
push ecx
sbb eax eax
push ecx
and eax 0x40
or eax 0x80000013
push eax
push edi
push r--data
push 0x8
call [ CreateWindowExW@IAT ]
mov edi eax
test edi edi
je r-xdata
push [ ecx + 0x50 ]
call [ DestroyWindow@IAT ]
mov eax [ rw-data ]
push r--data
mov eax [ eax + edi * 4 ]
mov eax [ eax ]
and [ eax + 0x50 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
mov ecx [ eax ]
add ecx 0x54
call sub_407d2c
xor eax eax
inc eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x14 ]
push 0x421
push edi
call esi
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x18
mov [ esi + 0x50 ] edi
jmp r-xdata
lea eax [ esp + 0x20 ]
push eax
push 0x0
push 0x432
push edi
call [ SendMessageW@IAT ]
push [ ebp + 0xc ]
lea ecx [ esi + 0x54 ]
call sub_407d2c
sub_48a487
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
cmp [ esi + 0x1cc ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_45bc5a
push [ edi + 0x84 ]
lea eax [ edi + 0x70 ]
push eax
push esi
call sub_45bc09
test eax eax
jne r-xdata
and [ ebx ] 0x0
pop ebx
mov edi [ esi + 0x1cc ]
test edi edi
je r-xdata
and [ esi + 0x1cc ] 0x0
mov ecx edi
call sub_45b8cc
push edi
call j_sub_422ed5#3
pop ecx
sub_48a4e1
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov ecx [ eax ]
cmp [ ecx ] esi
je r-xdata
dec [ ecx + 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
call sub_456aca
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
push [ eax + 0x8 ]
call [ DeleteObject@IAT ]
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
call sub_48bc47
test eax eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_48a53c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x10
ja r-xdata
push 0x7f00
jmp [ eax * 4 + jump_table_48a5c8 ]
push 0x7f89
jmp r-xdata
push 0x7f8a
jmp r-xdata
push 0x7f03
jmp r-xdata
push 0x7f8b
jmp r-xdata
push 0x7f01
jmp r-xdata
push 0x7f88
jmp r-xdata
push 0x7f86
jmp r-xdata
push 0x7f83
jmp r-xdata
push 0x7f85
jmp r-xdata
push 0x7f82
jmp r-xdata
push 0x7f84
jmp r-xdata
push 0x7f04
jmp r-xdata
push 0x7f02
jmp r-xdata
push 0x0
jmp r-xdata
push 0x0
call [ LoadCursorW@IAT ]
push eax
call [ SetCursor@IAT ]
pop ebp
retn 0x4
sub_48a60c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x10 ]
mov ecx eax
mov ebx [ esi + 0x18 ]
and ecx 0x10
mov [ esp + 0x14 ] ecx
mov ecx eax
and eax 0x1
and ecx 0x6
mov [ esp + 0x1c ] eax
mov eax [ GetSysColor@IAT ]
mov [ esp + 0x24 ] ecx
test ecx ecx
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_48a8fc
jmp r-xdata
mov edi [ ebp + 0xc ]
cmp [ edi + 0x4c ] 0xffffffff
jne r-xdata
push 0xe
call eax
push eax
push ebx
call [ SetTextColor@IAT ]
mov edi [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ edi + 0x4c ]
push 0x12
call eax
push eax
jmp r-xdata
cmp [ edi + 0x48 ] 0xffffffff
mov [ esp + 0x20 ] eax
jne r-xdata
push [ edi + 0x48 ]
call [ CreateSolidBrush@IAT ]
mov [ esp + 0xc ] eax
mov eax [ edi + 0x48 ]
push 0xf
call [ GetSysColorBrush@IAT ]
push 0xf
mov [ esp + 0x10 ] eax
call [ GetSysColor@IAT ]
jmp r-xdata
push ebx
call [ SetTextColor@IAT ]
cmp [ esp + 0x14 ] 0x0
je r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ esp + 0x38 ]
push eax
call [ InflateRect@IAT ]
push 0x10
call [ GetSysColor@IAT ]
push eax
call [ CreateSolidBrush@IAT ]
mov esi eax
lea eax [ esp + 0x30 ]
push esi
push eax
push ebx
call [ FrameRect@IAT ]
push esi
call [ DeleteObject@IAT ]
jmp r-xdata
push eax
push ebx
call [ SetBkColor@IAT ]
push [ esp + 0xc ]
mov [ esp + 0x30 ] eax
push ebx
call [ SelectObject@IAT ]
cmp [ esp + 0x1c ] 0x0
lea edi [ esp + 0x30 ]
mov [ esp + 0x28 ] eax
lea eax [ esi + 0x1c ]
mov esi eax
mov [ esp + 0x18 ] eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
je r-xdata
push 0x10
push 0x4
lea eax [ esp + 0x38 ]
push eax
push ebx
call [ DrawFrameControl@IAT ]
push 0xffffffff
push 0xffffffff
lea eax [ esp + 0x38 ]
push eax
call [ InflateRect@IAT ]
mov esi [ esp + 0x18 ]
lea edi [ esp + 0x30 ]
lea eax [ esp + 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ esp + 0x1c ]
test esi esi
je r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
push 0xfffffffe
push 0xfffffffe
push eax
call [ InflateRect@IAT ]
jmp r-xdata
push 0xfffffffe
push 0xfffffffe
push 0xfffffffd
push 0xfffffffd
jmp r-xdata
push [ esp + 0xc ]
lea eax [ esp + 0x34 ]
push eax
push ebx
call [ FillRect@IAT ]
push 0x2
pop eax
test esi esi
jne r-xdata
add [ esp + 0x30 ] eax
add [ esp + 0x34 ] eax
cmp [ esp + 0x24 ] esi
je r-xdata
push eax
call [ InflateRect@IAT ]
dec [ esp + 0x30 ]
dec [ esp + 0x34 ]
test eax 0x100
jne r-xdata
add edi 0x20
mov [ esp + 0x10 ] edi
mov esi [ ebp + 0xc ]
mov edi 0x104
push 0xfffffff0
mov [ esp + 0x14 ] edi
push [ esi ]
call [ GetWindowLongW@IAT ]
test eax 0x2000
jne r-xdata
push 0x0
push 0x0
push 0xe
push [ esi ]
call [ SendMessageW@IAT ]
xor ecx ecx
push 0x2
pop edx
lea esi [ eax + 0x1 ]
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
push esi
push eax
mov [ esp + 0x24 ] eax
mov eax [ ebp + 0xc ]
push [ eax ]
call [ GetWindowTextW@IAT ]
push edi
lea eax [ esp + 0x34 ]
push eax
push 0xffffffff
push [ esp + 0x28 ]
push ebx
call [ DrawTextW@IAT ]
cmp [ esp + 0x24 ] 0x0
je r-xdata
or edi 0x1
mov [ esp + 0x10 ] edi
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov esi [ esp + 0x18 ]
lea edi [ esp + 0x30 ]
push 0x11
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
inc [ esp + 0x34 ]
inc [ esp + 0x38 ]
call [ GetSysColor@IAT ]
push eax
push ebx
call [ SetTextColor@IAT ]
push [ esp + 0x10 ]
lea eax [ esp + 0x34 ]
push eax
push 0xffffffff
push [ esp + 0x28 ]
push ebx
call [ DrawTextW@IAT ]
push [ esp + 0x1c ]
call j_sub_422ed5#3
pop ecx
push [ esp + 0x28 ]
push ebx
call [ SelectObject@IAT ]
push [ esp + 0xc ]
call [ DeleteObject@IAT ]
push [ esp + 0x20 ]
push ebx
call [ SetTextColor@IAT ]
push [ esp + 0x2c ]
push ebx
call [ SetBkColor@IAT ]
xor eax eax
inc eax
mov esi [ esp + 0x18 ]
lea edi [ esp + 0x30 ]
push 0x0
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call [ CreateSolidBrush@IAT ]
mov esi eax
lea eax [ esp + 0x30 ]
push esi
push eax
push ebx
call [ FrameRect@IAT ]
push esi
call [ DeleteObject@IAT ]
push 0xfffffffc
push 0xfffffffc
lea eax [ esp + 0x38 ]
push eax
call [ InflateRect@IAT ]
lea eax [ esp + 0x30 ]
push eax
push ebx
call [ DrawFocusRect@IAT ]
sub_48a8fc
push ebp
mov ebp esp
sub esp 0x34
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ eax + 0x10 ]
mov ecx esi
mov ebx [ eax + 0x18 ]
and ecx 0x10
mov edi [ GetSysColor@IAT ]
and esi 0x6
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] esi
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4c ]
cmp eax 0xffffffff
jne r-xdata
push 0xe
jmp r-xdata
push eax
push ebx
call [ SetTextColor@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x48 ]
cmp eax 0xffffffff
jne r-xdata
push 0x12
call edi
push eax
call [ CreateSolidBrush@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x48 ]
push 0xf
call [ GetSysColorBrush@IAT ]
push 0xf
mov [ ebp - 0x4 ] eax
call edi
jmp r-xdata
mov eax 0x743c00
push 0x11
call edi
jmp r-xdata
mov [ ebp - 0xc ] eax
test esi esi
je r-xdata
test eax 0x100
jne r-xdata
add edi 0x20
mov [ ebp + 0x8 ] edi
push eax
push 0x1
push 0x0
call [ CreatePen@IAT ]
mov esi [ SelectObject@IAT ]
push eax
push ebx
mov [ ebp - 0x20 ] eax
call esi
push [ ebp - 0xc ]
mov [ ebp - 0x1c ] eax
push ebx
call [ SetBkColor@IAT ]
push [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
push ebx
call esi
mov [ ebp - 0x18 ] eax
lea edi [ ebp - 0x34 ]
mov eax [ ebp + 0x8 ]
add eax 0x1c
mov esi eax
mov [ ebp - 0xc ] eax
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call [ InflateRect@IAT ]
push 0x5
push 0x5
push [ ebp - 0x28 ]
push [ ebp - 0x2c ]
push [ ebp - 0x30 ]
push [ ebp - 0x34 ]
push ebx
call [ RoundRect@IAT ]
mov esi [ ebp + 0xc ]
mov edi 0x104
push 0xfffffff0
mov [ ebp + 0x8 ] edi
push [ esi ]
call [ GetWindowLongW@IAT ]
test eax 0x2000
jne r-xdata
push 0x0
push 0x0
push 0xe
push [ esi ]
call [ SendMessageW@IAT ]
xor ecx ecx
push 0x2
pop edx
lea edi [ eax + 0x1 ]
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_420f36
pop ecx
push edi
push eax
push [ esi ]
mov [ ebp + 0xc ] eax
call [ GetWindowTextW@IAT ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
or edi 0x1
mov [ ebp + 0x8 ] edi
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov esi [ ebp - 0xc ]
lea edi [ ebp - 0x34 ]
push 0xfffffffd
push 0xfffffffd
lea eax [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call [ InflateRect@IAT ]
lea eax [ ebp - 0x34 ]
push eax
push ebx
call [ DrawFocusRect@IAT ]
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x34 ]
push eax
push 0xffffffff
push esi
push ebx
call [ DrawTextW@IAT ]
push esi
call j_sub_422ed5#3
mov edi [ SelectObject@IAT ]
pop ecx
push [ ebp - 0x18 ]
push ebx
call edi
push [ ebp - 0x4 ]
mov esi [ DeleteObject@IAT ]
call esi
push [ ebp - 0x1c ]
push ebx
call edi
push [ ebp - 0x20 ]
call esi
push [ ebp - 0x8 ]
push ebx
call [ SetTextColor@IAT ]
push [ ebp - 0x24 ]
push ebx
call [ SetBkColor@IAT ]
pop edi
xor eax eax
pop esi
inc eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x11
call [ GetSysColor@IAT ]
push eax
push ebx
call [ SetTextColor@IAT ]
sub_48aaf1
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push edi
call [ GetWindowRect@IAT ]
mov esi [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
sub esi [ ebp - 0xc ]
imul esi eax
mov eax [ rw-data ]
cmp eax [ ebp - 0x10 ]
jl r-xdata
xor eax eax
pop edi
inc eax
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0xc ]
jl r-xdata
cmp eax [ ebp - 0x4 ]
jg r-xdata
cmp esi [ rw-data ]
jg r-xdata
push edi
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
push edi
call [ GetDlgCtrlID@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] edi
mov [ rw-data ] esi
sub_48ab69
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0x8 ]
or eax 0xffffffff
push esi
push edi
or edi eax
mov [ ebp - 0x8 ] eax
mov ecx [ ebx ]
lea eax [ ebp + 0xc ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0xc ] edi
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
push [ eax ]
call [ ClientToScreen@IAT ]
mov eax [ rw-data ]
xor esi esi
mov [ ebp - 0x10 ] eax
test eax eax
jle r-xdata
push 0x0
call [ MessageBeep@IAT ]
or eax 0xffffffff
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov edx [ eax ]
mov [ ebp + 0x8 ] edx
test edx edx
je r-xdata
inc esi
cmp esi [ ebp - 0x10 ]
jl r-xdata
push 0x3
pop edi
cmp [ rw-data ] edi
jl r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
js r-xdata
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov edi [ ebp - 0xc ]
test edi edi
js r-xdata
inc edi
cmp edi [ rw-data ]
jle r-xdata
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ ebx ] edi
jmp r-xdata
test [ ecx + 0x92 ] 0x20
jne r-xdata
mov al [ ecx + 0x93 ]
cmp al 0xff
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ecx ]
call [ GetWindowRect@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
push eax
call [ PtInRect@IAT ]
test eax eax
je r-xdata
movzx eax al
cmp eax [ edx + 0x190 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ ebx ] esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov ecx esi
mov [ ebp - 0xc ] ecx
jmp r-xdata
cmp [ ebx ] esi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
jge r-xdata
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
mov eax [ eax ]
test [ eax + 0x92 ] 0x8
jne r-xdata
mov eax edi
jmp r-xdata
mov [ ebx ] ecx
mov [ ebp - 0x8 ] edi
jmp r-xdata
sub_48ac9b
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
push [ ebx ]
call sub_427d91
mov [ ebp + 0xc ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebx ]
call sub_422d7c
pop ecx
mov edi eax
mov edi eax
sub edi [ ebx ]
sar edi 0x1
jmp r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebx ]
push esi
call sub_42422e
add esp 0xc
xor eax eax
mov [ esi + edi * 2 ] ax
pop esi
cmp [ ebp + 0xc ] eax
je r-xdata
xor al al
jmp r-xdata
cmp edi 0xffe
jle r-xdata
lea eax [ edi + edi ]
add [ ebx ] eax
test edi edi
setne al
inc edi
pop edi
pop ebx
pop ebp
retn 0xc
sub_48ad01
push esi
push edi
call [ GetForegroundWindow@IAT ]
mov esi eax
call [ GetFocus@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
retn
push ebx
mov ebx rw-data
push esi
mov ecx ebx
call sub_402612
cmp eax 0xffffffff
je r-xdata
pop ebx
mov edx [ rw-data ]
mov ecx ebx
push edi
mov eax [ edx + eax * 4 ]
mov esi [ eax ]
call sub_4025db
mov edx eax
cmp edx 0xffffffff
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + edx * 4 ]
cmp [ ecx ] 0x0
je r-xdata
mov [ esi + 0x1c ] edx
mov eax [ rw-data ]
mov eax [ eax + edx * 4 ]
mov ecx [ eax ]
cmp [ ecx + 0x90 ] 0x2
jne r-xdata
lea eax [ esi + 0x1c0 ]
push eax
lea eax [ esi + 0x1bc ]
push eax
push 0xb0
push [ ecx ]
call [ SendMessageW@IAT ]
sub_48ad87
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ rw-data ]
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_402612
mov ecx eax
mov [ rw-data ] ecx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
push [ eax ]
call [ DestroyWindow@IAT ]
xor eax eax
inc eax
xor eax eax
jmp r-xdata
cmp ecx 0xffffffff
jne r-xdata
pop ebp
retn 0x4
sub_48adcf
push ebp
mov ebp esp
mov ecx [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp ecx 0xffffffff
jne r-xdata
push edi
mov ecx rw-data
call sub_402612
mov ecx eax
mov eax [ rw-data ]
push esi
mov eax [ eax + ecx * 4 ]
mov esi [ eax ]
test edi edi
jne r-xdata
xor al al
jmp r-xdata
push 0xffffffff
push esi
mov ecx rw-data
call sub_402344
mov ecx [ esi + 0x174 ]
mov eax [ ebp + 0xc ]
push 0x0
push sub_48aae8
mov [ eax ] ecx
mov ecx [ esi + 0x178 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] ecx
mov ecx [ esi + 0x17c ]
mov eax [ ebp + 0x14 ]
mov [ eax ] ecx
mov ecx [ esi + 0x180 ]
mov eax [ ebp + 0x18 ]
and [ rw-data ] 0x0
mov [ rw-data ] 0x7fffffff
mov [ eax ] ecx
mov eax [ esi + 0x16c ]
mov [ rw-data ] eax
mov eax [ esi + 0x170 ]
mov [ rw-data ] eax
push [ esi ]
call [ EnumChildWindows@IAT ]
mov edi [ ebp + 0x1c ]
mov eax [ rw-data ]
or [ edi ] 0xffffffff
test eax eax
je r-xdata
call [ GetActiveWindow@IAT ]
cmp [ esi ] eax
je r-xdata
pop edi
pop ebp
retn 0x18
and [ edi ] 0x0
cmp eax [ esi ]
je r-xdata
xor al al
jmp r-xdata
push eax
mov ecx rw-data
call sub_4025db
mov [ edi ] eax
cmp eax 0xffffffff
jne r-xdata
pop esi
mov al 0x1
sub_48aeb8
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ rw-data ]
push [ ebp + 0x10 ]
mov ecx rw-data
call sub_402612
mov ecx eax
mov [ rw-data ] ecx
jmp r-xdata
mov eax [ rw-data ]
push edi
push 0xfffffff0
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov edi [ eax ]
push edi
call [ GetWindowLongW@IAT ]
mov ecx [ ebp + 0x8 ]
push 0xffffffec
push edi
mov [ ecx ] eax
call [ GetWindowLongW@IAT ]
mov ecx [ ebp + 0xc ]
pop edi
mov [ ecx ] eax
xor eax eax
inc eax
xor eax eax
jmp r-xdata
cmp ecx 0xffffffff
jne r-xdata
pop ebp
retn 0xc
sub_48af18
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax ]
cmp [ ecx ] edi
je r-xdata
lea ecx [ ebp - 0x14 ]
call sub_4077c7
push esi
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] edi
call sub_4081a7
lea eax [ ebp - 0x18 ]
mov ecx rw-data
push eax
call sub_48bbef
lea ecx [ ebp - 0x14 ]
call sub_405a64
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
call sub_456aca
mov eax [ ebp - 0x4 ]
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
push ecx
mov ecx [ eax ]
add ecx 0x4
call sub_4081a7
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
call sub_48bc87
jmp r-xdata
test eax eax
je r-xdata
xor eax eax
inc eax
sub_48afb0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ rw-data ]
push [ ebp + 0x10 ]
mov ecx rw-data
call sub_402612
mov ecx eax
mov [ rw-data ] ecx
jmp r-xdata
pop ebp
retn 0xc
mov eax [ rw-data ]
push esi
mov eax [ eax + ecx * 4 ]
mov esi [ eax ]
cmp [ esi + 0x18 ] 0x0
je r-xdata
cmp ecx 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] ecx
jne r-xdata
pop esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateAcceleratorTableW@IAT ]
mov [ esi + 0x18 ] eax
call [ GetForegroundWindow@IAT ]
cmp [ esi ] eax
jne r-xdata
push [ esi + 0x18 ]
call [ DestroyAcceleratorTable@IAT ]
and [ esi + 0x18 ] 0x0
or [ rw-data ] 0xffffffff
mov eax [ rw-data ]
mov [ rw-data ] eax
sub_48b036
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov ecx [ rw-data ]
push [ ebp + 0x18 ]
mov ecx rw-data
call sub_402612
mov ecx eax
mov [ rw-data ] ecx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x58 ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x5c ] eax
mov eax [ ebp + 0x10 ]
test eax eax
jle r-xdata
xor eax eax
jmp r-xdata
cmp ecx 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
mov [ ecx + 0x60 ] eax
pop ebp
retn 0x14
xor eax eax
inc eax
mov [ ecx + 0x64 ] eax
sub_48b096
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ rw-data ]
push [ ebp + 0x10 ]
mov ecx rw-data
call sub_402612
mov ecx eax
mov [ rw-data ] ecx
jmp r-xdata
pop ebp
retn 0xc
mov eax [ rw-data ]
push 0x0
push 0x0
push 0x20
mov eax [ eax + ecx * 4 ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
push [ ecx ]
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x14 ] eax
call [ PostMessageW@IAT ]
cmp ecx 0xffffffff
je r-xdata
sub_48b0e9
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov ecx [ rw-data ]
push [ ebp + 0x18 ]
mov ecx rw-data
call sub_402612
mov ecx eax
mov [ rw-data ] ecx
jmp r-xdata
mov eax [ rw-data ]
fld [ ebp + 0x1c ]
fld [ r--data ]
push esi
mov eax [ eax + ecx * 4 ]
fucomp st1
mov esi [ eax ]
fnstsw ax
test ah 0x44
jpo r-xdata
xor eax eax
jmp r-xdata
cmp ecx 0xffffffff
jne r-xdata
fstp st0
fmul [ r--data ]
call sub_43b500
mov [ esi + 0x7c ] eax
jmp r-xdata
pop ebp
retn 0x1c
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x80 ] eax
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
je r-xdata
push [ ebp + 0xc ]
lea ecx [ esi + 0x6c ]
call sub_4081a7
mov eax [ ebp + 0x14 ]
mov [ esi + 0x88 ] eax
xor eax eax
inc eax
pop esi
mov [ esi + 0x84 ] eax
sub_48b17f
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ rw-data ]
push [ ebp + 0x10 ]
mov ecx rw-data
call sub_402612
mov ecx eax
mov [ rw-data ] ecx
jmp r-xdata
mov eax [ rw-data ]
push esi
push edi
push 0xfffffff0
mov eax [ eax + ecx * 4 ]
mov edi [ eax ]
mov eax [ edi ]
push eax
mov [ ebp + 0x10 ] eax
call [ GetWindowLongW@IAT ]
mov esi [ ebp + 0x8 ]
mov ecx 0xc00000
and eax ecx
sub eax ecx
neg eax
sbb eax eax
inc eax
mov [ ebp - 0x4 ] eax
cmp esi 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
cmp ecx 0xffffffff
jne r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
push esi
push 0xfffffff0
push [ ebp + 0x10 ]
call [ SetWindowLongW@IAT ]
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn 0xc
cmp [ edi + 0x38 ] 0x0
je r-xdata
push [ ebp + 0xc ]
push 0xffffffec
push [ ebp + 0x10 ]
call [ SetWindowLongW@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
mov eax 0xc00000
and esi eax
sub esi eax
neg esi
sbb esi esi
inc esi
cmp [ ebp - 0x4 ] esi
je r-xdata
pop edi
pop esi
push 0x47
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp + 0x10 ]
call [ SetWindowPos@IAT ]
push 0x4
call [ GetSystemMetrics@IAT ]
test esi esi
je r-xdata
sub [ edi + 0x48 ] eax
add [ edi + 0x48 ] eax
jmp r-xdata
sub_48b25b
push ebp
mov ebp esp
push ecx
mov ecx [ rw-data ]
push esi
push edi
cmp ecx 0xffffffff
je r-xdata
xor esi esi
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov esi [ eax ]
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
mov [ rw-data ] eax
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x8 ]
mov edi rw-data
mov ecx edi
call sub_402612
mov [ ebp + 0x8 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax esi
lea eax [ ebp - 0x4 ]
mov ecx edi
push eax
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_402402
test al al
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0xb
jne r-xdata
mov [ edx + 0x198 ] 0x1
movzx ecx [ eax + 0x93 ]
mov [ edx + 0x190 ] ecx
sub_48b2f9
push ebp
mov ebp esp
sub esp 0x20
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x39 ] 0x0
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn 0xc
cmp [ edi + 0x3a ] 0x0
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0xc ]
push [ eax ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ edi ]
call [ ScreenToClient@IAT ]
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ edi ]
call [ ScreenToClient@IAT ]
mov eax [ ebp - 0xc ]
push [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ edi ]
call [ InvalidateRect@IAT ]
sub_48b385
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
mov ecx rw-data
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_402402
test al al
je r-xdata
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0xc ]
mov eax [ rw-data ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp - 0x10 ]
push edi
mov esi [ eax ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov edi [ eax ]
mov al [ edi + 0x90 ]
mov [ ebp - 0x1 ] al
cmp ebx 0x6
jne r-xdata
cmp ebx 0x4
jne r-xdata
cmp al 0x18
je r-xdata
cmp ebx 0x3
jne r-xdata
cmp al 0x1
je r-xdata
mov [ esi + 0x1c ] ecx
mov ecx [ esi + 0x1cc ]
test ecx ecx
je r-xdata
cmp ebx 0x100
jne r-xdata
test al al
je r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
push edi
call sub_45bd75
cmp al 0x2
je r-xdata
xor al al
jmp r-xdata
test ebx ebx
jne r-xdata
cmp al 0x3
jne r-xdata
pop edi
pop esi
pop ebx
mov eax [ rw-data ]
mov ecx [ ebp - 0x10 ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov al [ eax + 0x93 ]
cmp al 0xff
je r-xdata
cmp [ edi ] ebx
je r-xdata
push 0x0
push esi
mov ecx rw-data
call sub_402344
movzx eax [ ebp - 0x1 ]
mov ecx [ esi + 0x174 ]
mov edx [ esi + 0x178 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp + 0xf ] 0x0
cmp eax 0x1c
ja r-xdata
movzx eax al
cmp eax [ esi + 0x190 ]
je r-xdata
push [ edi ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov bl [ ebp + 0xf ]
movzx eax [ eax + lookup_table_48b609 ]
jmp [ eax * 4 + jump_table_48b5e9 ]
push [ edi ]
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
mov al bl
push 0x0
push 0x0
push 0x41c
push [ eax + 0x50 ]
call [ SendMessageW@IAT ]
cmp ebx 0x1
push edx
push ecx
push [ edi ]
push esi
push [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
push [ esi ]
call [ IsDlgButtonChecked@IAT ]
cmp eax 0x1
jne r-xdata
push 0xffffffec
push [ edi ]
call [ GetWindowLongW@IAT ]
test eax 0x100000
je r-xdata
test ebx ebx
jmp r-xdata
push ebx
push esi
mov ecx rw-data
call sub_48b6d2
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x10 ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
cmp ebx 0x300
jne r-xdata
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ edi ]
push esi
push ebx
jmp r-xdata
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
push 0x0
push 0x2
push 0xa1
push [ esi ]
call [ SendMessageW@IAT ]
jne r-xdata
cmp ebx 0x200
jne r-xdata
mov eax [ esi + 0x1c4 ]
mov ebx [ ebp + 0x8 ]
test eax eax
jle r-xdata
mov ecx rw-data
call sub_4860e2
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x90 ] 0x2
jne r-xdata
mov [ esi + 0x1c4 ] ebx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x1c4 ]
test eax eax
jle r-xdata
lea eax [ esi + 0x1c0 ]
push eax
lea eax [ esi + 0x1bc ]
push eax
push 0xb0
push [ edi ]
call [ SendMessageW@IAT ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
and [ esi + 0x1c4 ] 0x0
push edx
push ecx
push [ edi ]
mov ecx rw-data
push esi
push eax
call sub_4860e2
cmp eax [ ebp + 0x8 ]
jne r-xdata
and [ esi + 0x1c4 ] 0x0
push edx
push ecx
push [ edi ]
mov ecx rw-data
push esi
push eax
call sub_4860e2
jmp r-xdata
sub_48b626
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0x20000
mov eax [ eax + ecx * 4 ]
push edi
mov edi [ eax ]
test ebx esi
je r-xdata
cmp [ edi + 0x68 ] 0x0
jne r-xdata
push 0x0
mov ecx rw-data
call sub_402f66
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edi + 0x68 ] 0x1
or esi ebx
sub_48b669
push ebp
mov ebp esp
push ebx
push esi
push 0x44
push 0x0
mov ebx rw-data
push ebx
call sub_422f60
push 0x10
push 0x0
mov esi rw-data
push esi
call sub_422f60
add esp 0x18
mov [ rw-data ] 0x44
xor eax eax
inc eax
mov [ rw-data ] eax
push esi
push ebx
mov [ rw-data ] ax
xor eax eax
push eax
push eax
push 0x20
push eax
push eax
push eax
push [ ebp + 0x8 ]
push eax
call [ CreateProcessW@IAT ]
pop esi
pop ebx
test eax eax
je r-xdata
pop ebp
retn 0x4
push [ rw-data ]
call [ CloseHandle@IAT ]
sub_48b6d2
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x3
mov edi ecx
mov edx [ ebx + 0x4 ]
mov [ ebp + 0x8 ] edx
pop esi
cmp [ ebx + 0x190 ] eax
je r-xdata
cmp [ edi + 0x84 ] esi
jl r-xdata
cmp [ edi + 0x84 ] esi
jl r-xdata
push 0x0
push eax
push 0x130c
push [ ebx + 0x188 ]
call [ SendMessageW@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x74 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov [ ebx + 0x190 ] eax
mov eax [ edi + 0x74 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
inc esi
cmp esi [ edi + 0x84 ]
jle r-xdata
cmp [ ecx + 0x4 ] edx
jne r-xdata
inc esi
cmp esi [ edi + 0x84 ]
jle r-xdata
cmp [ ecx + 0x4 ] edx
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ ecx + 0x90 ] 0xb
je r-xdata
mov eax [ ebp + 0xc ]
push 0x3
pop esi
mov dl [ ecx + 0x90 ]
cmp dl 0xb
je r-xdata
movzx eax [ ecx + 0x93 ]
cmp eax [ ebx + 0x190 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov dh [ ecx + 0x93 ]
movzx eax dh
cmp eax [ ebx + 0x190 ]
je r-xdata
test [ ecx + 0x92 ] 0x20
jne r-xdata
push 0x0
push [ ecx ]
call [ ShowWindow@IAT ]
mov eax [ edi + 0x74 ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
test [ eax + 0x92 ] 0x40
je r-xdata
cmp [ ebx + 0x198 ] 0x0
je r-xdata
push 0x0
push [ ecx ]
call [ ShowWindow@IAT ]
mov eax [ edi + 0x74 ]
push 0x4
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
push [ eax ]
call [ ShowWindow@IAT ]
mov eax [ edi + 0x74 ]
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
test [ eax + 0x92 ] 0x40
je r-xdata
cmp [ eax + 0x90 ] 0x1a
jne r-xdata
cmp dh 0xff
je r-xdata
cmp [ eax + 0x90 ] 0x1a
jne r-xdata
push 0x0
push [ eax ]
call [ EnableWindow@IAT ]
cmp dl 0xa
je r-xdata
push 0x1
push [ eax ]
call [ EnableWindow@IAT ]
sub_48b832
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x10 ]
push ebx
push esi
push edi
call sub_409c9c
mov ebx [ ebp + 0xc ]
mov esi eax
push ebx
mov [ ebp - 0x8 ] 0x0
call sub_422d7c
mov edi [ ebp + 0x8 ]
pop ecx
cmp eax 0x4
jbe r-xdata
movsx eax [ edi + 0x8e ]
push 0x2010
push eax
movsx eax [ edi + 0x8c ]
push eax
push 0x1
push ebx
push 0x0
call [ LoadImageW@IAT ]
mov [ ebp - 0x4 ] eax
push r--data
push ebx
call sub_422d7c
add eax 0xfffffffc
pop ecx
lea eax [ ebx + eax * 2 ]
push eax
call sub_42307d
neg eax
pop ecx
pop ecx
sbb al al
inc al
push r--data
push ebx
mov [ ebp - 0x8 ] eax
call sub_422d7c
add eax 0xfffffffc
pop ecx
lea ecx [ ebx + eax * 2 ]
push ecx
call sub_42307d
neg eax
pop ecx
pop ecx
sbb al al
inc al
push r--data
push ebx
mov [ ebp + 0xc ] eax
call sub_422d7c
add eax 0xfffffffc
pop ecx
lea ecx [ ebx + eax * 2 ]
push ecx
call sub_42307d
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x68 ] 0x0
je r-xdata
lea ecx [ ebp + 0x10 ]
call sub_4562f8
test al al
je r-xdata
push 0x32
push 0x0
push ebx
call [ LoadLibraryExW@IAT ]
mov ecx eax
mov [ ebp + 0xc ] ecx
test ecx ecx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ SendMessageW@IAT ]
push 0x0
push eax
mov [ edi + 0x68 ] eax
mov edi [ edi ]
push 0x170
push edi
call esi
push 0x1
push 0x172
push 0x64
push edi
call esi
cmp [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x10 ]
setne bl
call sub_409a20
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x18
push [ edi + 0x68 ]
call [ DestroyIcon@IAT ]
test esi esi
jle r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp + 0x1c ] 0x4
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
jns r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test esi esi
jle r-xdata
lea ecx [ ebp + 0x10 ]
call sub_409997
movsx eax [ edi + 0x8e ]
mov ecx [ ebp + 0x18 ]
push 0x0
push eax
movsx eax [ edi + 0x8c ]
push eax
push 0x1
push [ ecx ]
push [ ebp + 0xc ]
call [ LoadImageW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp [ edi + 0x8c ] 0x10
lea eax [ ebp - 0x4 ]
push 0x1
jle r-xdata
or eax 0xffffffff
sub eax esi
mov esi eax
test esi esi
mov eax [ ebp - 0x4 ]
movsx eax [ edi + 0x8e ]
push 0x0
push eax
movsx eax [ edi + 0x8c ]
push eax
push 0x1
movzx eax si
push eax
push ecx
call [ LoadImageW@IAT ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
push [ ebp + 0xc ]
call [ FreeLibrary@IAT ]
jmp r-xdata
push eax
movsx eax [ edi + 0x8e ]
push eax
movsx eax [ edi + 0x8c ]
push eax
push 0x1
movzx eax si
push eax
jmp r-xdata
push eax
push 0x0
push 0x0
push eax
jmp r-xdata
lea ecx [ ebp + 0x10 ]
call sub_409997
mov eax [ ebp + 0x18 ]
push 0x0
mov ecx [ eax ]
movsx eax [ edi + 0x8e ]
push eax
movsx eax [ edi + 0x8c ]
push eax
push 0x1
push ecx
test eax eax
jne r-xdata
push [ ebp + 0xc ]
call [ LoadImageW@IAT ]
mov [ ebp - 0x4 ] eax
push esi
push ebx
call [ ExtractIconExW@IAT ]
sub_48ba67
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x24
push ebx
push esi
push edi
xor edi edi
cmp [ eax ] di
je r-xdata
mov eax edi
mov [ ebp + 0xc ] eax
push edi
push edi
push 0x3
push edi
push edi
push 0x80000000
push eax
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push eax
push edi
mov [ esi + 0x64 ] eax
mov esi [ esi ]
push 0x172
push esi
call [ SendMessageW@IAT ]
mov eax esi
push [ esi + 0x64 ]
call [ DeleteObject@IAT ]
mov eax [ ebp + 0xc ]
push 0x0
push edi
call [ GetFileSize@IAT ]
mov esi eax
push esi
push 0x2
call [ GlobalAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
call [ GlobalLock@IAT ]
push 0x0
lea ecx [ ebp - 0xc ]
push ecx
push esi
push eax
push edi
call [ ReadFile@IAT ]
push ebx
mov esi eax
call [ GlobalUnlock@IAT ]
push edi
call [ CloseHandle@IAT ]
test esi esi
je r-xdata
push edi
call [ CloseHandle@IAT ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push ebx
call [ CreateStreamOnHGlobal@IAT ]
lea eax [ ebp - 0x4 ]
xor edi edi
push eax
push r--data
push edi
push edi
push [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edi
call [ OleLoadPicture@IAT ]
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
push ebx
call [ GlobalFree@IAT ]
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
lea edx [ ebp + 0xc ]
push edx
push ecx
call [ eax + 0xc ]
lea eax [ ebp - 0x24 ]
push eax
push 0x18
push [ ebp + 0xc ]
call [ GetObjectW@IAT ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
cmp [ edx ] edi
jne r-xdata
push 0x2000
push [ ecx ]
push [ edx ]
push edi
push [ ebp + 0xc ]
call [ CopyImage@IAT ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0xc ]
jmp r-xdata
cmp [ ecx ] edi
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp - 0x1c ]
mov [ ecx ] eax
sub_48bbb9
push ebp
mov ebp esp
push esi
push 0x8
mov esi ecx
call sub_420f36
mov edx [ ebp + 0x8 ]
pop ecx
mov ecx eax
mov edx [ edx ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] edx
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov [ esi + 0x4 ] ecx
mov eax [ esi + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
inc [ esi ]
mov [ esi + 0x8 ] ecx
pop esi
pop ebp
retn 0x4
sub_48bbef
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
xor edi edi
push 0xc
cmp [ esi + 0x4 ] edi
jne r-xdata
call sub_420f36
pop ecx
test eax eax
je r-xdata
call sub_420f36
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_486035
mov edi eax
mov [ esi ] edi
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx eax
call sub_486035
mov edi eax
inc [ esi + 0x8 ]
mov [ esi + 0x4 ] edi
pop edi
pop esi
pop ebp
retn 0x4
sub_48bc47
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
mov eax [ ecx + 0x4 ]
test edx edx
je r-xdata
test eax eax
je r-xdata
mov [ edx + 0x4 ] eax
cmp ecx [ esi ]
jne r-xdata
mov [ eax + 0x8 ] edx
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi ] eax
push ecx
call sub_4032af
and [ edi ] 0x0
dec [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] edx
sub_48bc87
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
mov eax [ ecx + 0x4 ]
test edx edx
je r-xdata
test eax eax
je r-xdata
mov [ edx + 0x4 ] eax
cmp ecx [ esi ]
jne r-xdata
mov [ eax + 0x8 ] edx
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi ] eax
push ecx
call sub_4860bb
and [ edi ] 0x0
dec [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] edx
sub_48bcd0
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_4025db
mov ecx eax
cmp ecx 0xffffffff
jne r-xdata
cmp [ ebp + 0xc ] 0x20
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
je r-xdata
pop ebp
jmp [ DefDlgProcW@IAT ]
mov ecx [ ebp + 0x14 ]
mov eax ecx
shr eax 0x10
push eax
movzx eax cx
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_48bd31
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ eax + 0x8 ]
call [ CallWindowProcW@IAT ]
jmp r-xdata
pop ebp
retn 0x10
sub_48bd31
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_4025db
mov ecx [ rw-data ]
mov eax [ ecx + eax * 4 ]
mov edx [ eax ]
movzx eax [ edx + 0x84 ]
cmp ax 0xffff
je r-xdata
mov eax [ ebp + 0x14 ]
movzx ecx ax
mov eax [ ebp + 0x10 ]
shl ecx 0x10
movzx eax ax
or ecx eax
push ecx
push [ ebp + 0xc ]
push 0x20
push [ ebp + 0x8 ]
call [ edx + 0x8 ]
cwde
push eax
call sub_48a53c
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x10
sub_48bd86
push ebp
mov ebp esp
test [ ebp + 0x1c ] 0x2
je r-xdata
pop ebp
retn 0x18
push esi
mov esi [ ebp + 0x8 ]
push 0x1
push 0x2
push 0xffffffff
push 0x0
push esi
call sub_4012f3
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ MoveToEx@IAT ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
call [ LineTo@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
push esi
call [ StrokePath@IAT ]
pop esi
push esi
call [ EndPath@IAT ]
mov [ rw-data ] 0x0
sub_48bde0
push ebp
mov ebp esp
sub esp 0x18
and [ ebp - 0x8 ] 0x0
xor ecx ecx
and [ ebp - 0x10 ] 0x0
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
test esi esi
je r-xdata
push 0xffffffff
push [ ebp + 0x8 ]
call sub_4013b0
pop esi
mov esp ebp
pop ebp
retn 0x8
push ebx
push edi
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
lea eax [ esi + 0x14 ]
lea ebx [ esi + 0x10 ]
mov [ ebp + 0xc ] eax
xor edi edi
cmp [ esi + 0xc ] edi
jle r-xdata
pop edi
pop ebx
inc edi
add eax 0x8
add ebx 0x8
mov [ ebp + 0xc ] eax
cmp edi [ esi + 0xc ]
jl r-xdata
cmp [ ebp - 0x14 ] 0x7
jbe r-xdata
mov ecx [ eax ]
mov edx [ ebx ]
mov [ ebp - 0xc ] ecx
mov cl [ esi + edi + 0x810 ]
mov [ ebp - 0x14 ] ecx
cmp cl 0x2
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x18 ] edx
jb r-xdata
push ecx
push [ ebp - 0xc ]
push edx
push [ ebp + 0x8 ]
call sub_48bf14
mov al [ esi + edi + 0x810 ]
and al 0xfe
cmp al 0x4
jne r-xdata
cmp [ ebp - 0x14 ] 0x14
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
add [ ebp + 0xc ] 0x8
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_48bd86
push [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
push [ eax ]
push [ ebx + 0x8 ]
push [ ebp + 0x8 ]
call sub_48bf14
mov eax [ ebp + 0xc ]
add edi 0x2
push [ ebp - 0x4 ]
mov ecx [ ebx + 0x8 ]
add ebx 0x10
mov [ ebp - 0x8 ] ecx
mov edx [ eax ]
add eax 0x8
push edx
push ecx
mov [ ebp - 0x10 ] edx
push [ eax ]
mov [ ebp + 0xc ] eax
push [ ebx ]
push [ ebp + 0x8 ]
call sub_48bd86
push [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
push [ eax ]
push [ ebx ]
push [ ebp + 0x8 ]
call sub_48bf14
jmp r-xdata
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0xc ]
sub_48bf14
push ebp
mov ebp esp
test [ ebp + 0x14 ] 0x1
je r-xdata
pop ebp
retn 0x10
push ebx
push esi
push 0x1
xor ebx ebx
push ebx
push 0xffffffff
push ebx
push [ ebp + 0x8 ]
call sub_4012f3
mov esi [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
lea eax [ esi - 0x2 ]
push eax
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
push ebx
lea eax [ esi + 0x3 ]
mov esi [ LineTo@IAT ]
push eax
push [ ebp + 0x8 ]
call esi
push 0x0
lea eax [ ebx - 0x2 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
lea eax [ ebx + 0x3 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
cmp [ rw-data ] 0x0
pop esi
pop ebx
je r-xdata
push [ ebp + 0x8 ]
call [ StrokePath@IAT ]
push [ ebp + 0x8 ]
call [ EndPath@IAT ]
mov [ rw-data ] 0x0
sub_48bf9a
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi rw-data
mov ecx esi
call sub_402612
mov edx [ rw-data ]
mov ecx esi
push 0x1
mov eax [ edx + eax * 4 ]
push [ eax ]
call sub_402344
mov eax [ ebp + 0x14 ]
movzx ecx ax
mov eax [ ebp + 0x10 ]
shl ecx 0x10
movzx eax ax
pop esi
or ecx eax
cmp [ ebp + 0x1c ] 0x0
push ecx
push [ ebp + 0x18 ]
je r-xdata
push 0x204
push 0x201
jmp r-xdata
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
pop ebp
retn 0x18
sub_48bff6
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push edi
push [ ebp + 0x8 ]
mov edi rw-data
mov ecx edi
call sub_402612
mov ecx [ rw-data ]
mov [ esp + 0x4 ] eax
push 0x1
mov eax [ ecx + eax * 4 ]
mov ecx edi
push [ eax ]
call sub_402344
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
mov edi [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx ax
mov eax [ ebp + 0xc ]
shl ecx 0x10
movzx eax ax
or ecx eax
push ecx
push [ ebp + 0x14 ]
push 0x205
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx ax
movzx eax di
shl ecx 0x10
or ecx eax
push ecx
push [ ebp + 0x14 ]
push 0x202
push 0x0
call [ ImageList_DragLeave@IAT ]
call [ ImageList_EndDrag@IAT ]
call [ ReleaseCapture@IAT ]
push [ ebp + 0x10 ]
lea eax [ esp + 0x8 ]
push edi
push eax
call sub_48ab69
mov edx eax
mov [ esp + 0x8 ] edx
cmp edx 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
pop edi
mov esp ebp
pop ebp
retn 0x14
cmp edx [ rw-data ]
je r-xdata
mov ecx [ esp + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov [ esp + 0x10 ] eax
mov eax [ rw-data ]
mov eax [ eax + edx * 4 ]
mov eax [ eax ]
test [ eax + 0x92 ] 0x8
je r-xdata
and [ rw-data ] 0x0
mov eax [ eax ]
mov [ esp + 0x4 ] eax
lea eax [ esp + 0xc ]
push 0x0
push eax
push [ rw-data ]
call sub_487e0d
push 0x0
lea eax [ esp + 0x18 ]
push eax
push [ esp + 0x14 ]
call sub_487e0d
mov ecx [ rw-data ]
mov edx eax
mov eax [ esp + 0x8 ]
mov [ esp + 0xc ] edx
mov ecx [ ecx + eax * 4 ]
mov ecx [ ecx ]
mov cl [ ecx + 0x90 ]
cmp cl 0x2
je r-xdata
push edx
push [ esp + 0x8 ]
call [ SetWindowTextW@IAT ]
push 0xffffffff
push 0x0
push 0xb1
push [ esp + 0x10 ]
call [ SendMessageW@IAT ]
mov edx [ esp + 0xc ]
cmp cl 0x3
jne r-xdata
push edx
call j_sub_422ed5#3
and [ esp + 0x1c ] 0x0
and [ esp + 0x24 ] 0x0
pop ecx
lea ecx [ esp + 0x18 ]
mov [ esp + 0x24 ] 0x1
call sub_409a20
mov eax [ esp + 0x8 ]
lea ecx [ esp + 0x28 ]
push r--data
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x1c ] eax
call sub_407f41
push 0x1
lea eax [ esp + 0x1c ]
mov ecx rw-data
push eax
lea eax [ esp + 0x30 ]
push eax
call sub_408b13
lea ecx [ esp + 0x28 ]
call sub_405a64
push r--data
lea ecx [ esp + 0x1c ]
call sub_409bf8
push r--data
lea ecx [ esp + 0x2c ]
call sub_407f41
push 0x1
lea eax [ esp + 0x1c ]
mov ecx rw-data
push eax
lea eax [ esp + 0x30 ]
push eax
call sub_408b13
lea ecx [ esp + 0x28 ]
call sub_405a64
push 0x0
push 0x0
push [ esp + 0x18 ]
mov ecx rw-data
push 0xfffffff3
call sub_486193
lea ecx [ esp + 0x18 ]
call sub_409a20
sub_48c216
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_402612
mov ecx [ rw-data ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + eax * 4 ]
mov ebx [ eax ]
mov eax [ ebp + 0xc ]
mov [ esp + 0x1c ] ebx
cmp eax 0x2
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edi [ ebp + 0x14 ]
xor esi esi
mov ecx [ ebp + 0x10 ]
mov [ esp + 0x14 ] edi
test edi edi
jne r-xdata
call [ GetFocus@IAT ]
push eax
mov [ esp + 0x24 ] eax
call [ GetDlgCtrlID@IAT ]
mov edi eax
lea eax [ esp + 0x20 ]
push eax
push edi
call sub_487d0f
push [ ebx + 0x1c4 ]
call sub_426c0d
pop ecx
cmp edi eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push 0x0
push 0xf060
push 0x112
cmp edi 0x1
jne r-xdata
test ecx ecx
jne r-xdata
xor esi esi
mov [ ebx + 0x1c4 ] esi
cmp [ ebp + 0x14 ] esi
jne r-xdata
push ecx
mov ecx rw-data
call sub_4025db
mov ebx eax
mov [ esp + 0x18 ] ebx
mov [ esp + 0xc ] ebx
cmp ebx 0xffffffff
je r-xdata
test ecx ecx
jne r-xdata
mov ebx eax
mov [ esp + 0x18 ] ebx
jmp r-xdata
cmp [ ebp + 0x10 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
movzx ecx di
movzx eax ax
shl ecx 0x10
or ecx eax
push ecx
push 0x111
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
lea eax [ esp + 0xc ]
mov ecx rw-data
push eax
lea eax [ esp + 0x24 ]
push eax
push ebx
call sub_402402
test al al
jne r-xdata
mov ebx eax
mov edi esi
mov [ esp + 0x18 ] ebx
mov [ esp + 0x14 ] edi
jmp r-xdata
push esi
movzx eax di
push eax
push 0x111
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ esp + 0xc ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0xf
jne r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ eax + 0x1c4 ]
test ecx ecx
je r-xdata
push [ ebp + 0x8 ]
call [ PostMessageW@IAT ]
jmp r-xdata
push edi
push ebx
call sub_48b385
test al al
jne r-xdata
push 0x208
call sub_420f36
pop ecx
mov ecx [ rw-data ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0xc ]
push 0x2c
push esi
mov ecx [ ecx + eax * 4 ]
mov ecx [ ecx ]
mov eax [ ecx + 0xc ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x34 ]
push eax
mov [ esp + 0x34 ] 0x30
call sub_422f60
mov eax [ esp + 0x28 ]
add esp 0xc
mov [ esp + 0x4c ] eax
lea eax [ esp + 0x28 ]
mov [ esp + 0x2c ] 0x10
mov [ esp + 0x50 ] 0x104
push eax
push esi
push ebx
push [ esp + 0x18 ]
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
push esi
push ecx
mov [ eax + 0x1c4 ] esi
call sub_48b385
jmp r-xdata
push [ esp + 0x1c ]
call j_sub_422ed5#3
pop ecx
test [ esp + 0x30 ] 0x200
je r-xdata
push [ esp + 0xc ]
call [ GetMenuItemCount@IAT ]
mov [ esp + 0x10 ] eax
test eax eax
jle r-xdata
or eax 0xffffffff
push esi
push [ esp + 0x10 ]
call [ GetMenuItemID@IAT ]
cmp eax ebx
je r-xdata
mov eax esi
dec esi
mov [ esp + 0x20 ] eax
js r-xdata
inc esi
cmp esi [ esp + 0x10 ]
jl r-xdata
mov edx [ esp + 0x1c ]
lea ecx [ esi + 0x1 ]
lea esi [ eax + 0x1 ]
mov [ esp + 0x24 ] ecx
mov [ esp + 0x4c ] edx
cmp esi [ esp + 0x10 ]
jge r-xdata
mov edi [ esp + 0xc ]
jmp r-xdata
push 0x400
push eax
lea eax [ esi - 0x1 ]
push eax
push ecx
push [ esp + 0x1c ]
call [ CheckMenuRadioItem@IAT ]
mov edi [ esp + 0xc ]
mov ebx [ esp + 0x10 ]
dec esi
jns r-xdata
test [ esp + 0x30 ] 0x200
je r-xdata
cmp eax ebx
jne r-xdata
inc esi
cmp esi ebx
jl r-xdata
test [ esp + 0x30 ] 0x200
je r-xdata
lea eax [ esp + 0x28 ]
push eax
push 0x1
push esi
push edi
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov edi [ esp + 0x14 ]
mov eax [ esp + 0x20 ]
lea eax [ esp + 0x28 ]
push eax
push 0x1
push esi
push edi
call [ GetMenuItemInfoW@IAT ]
test eax eax
je r-xdata
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
sub_48c502
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi rw-data
push edi
mov ecx esi
call sub_402612
mov ecx [ rw-data ]
mov eax [ ecx + eax * 4 ]
mov ebx [ eax ]
cmp [ ebp + 0xc ] edi
jne r-xdata
push [ ebp + 0xc ]
mov ecx esi
call sub_4025db
mov [ ebp + 0x8 ] eax
cmp eax 0xffffffff
je r-xdata
xor esi esi
cmp [ ebx + 0x1a0 ] esi
je r-xdata
mov eax [ ebp + 0x14 ]
movzx ecx ax
mov eax [ ebp + 0x10 ]
shl ecx 0x10
movzx eax ax
or ecx eax
push ecx
push [ ebp + 0xc ]
push 0x7b
push edi
call [ DefDlgProcW@IAT ]
mov ecx [ rw-data ]
mov ecx [ ecx + eax * 4 ]
mov eax [ ecx ]
mov cl [ eax + 0x90 ]
cmp cl 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call [ GetCursorPos@IAT ]
push esi
push edi
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push esi
push [ ebx + 0x1a0 ]
cmp cl 0xf
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp cl 0x13
je r-xdata
cmp cl 0x10
je r-xdata
xor esi esi
cmp [ eax + 0xc ] esi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call [ GetCursorPos@IAT ]
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
push esi
push [ ebx ]
push [ ebp - 0x4 ]
mov eax [ eax + ecx * 4 ]
push [ ebp - 0x8 ]
push esi
mov eax [ eax ]
push [ eax + 0xc ]
jmp r-xdata
call [ TrackPopupMenuEx@IAT ]
jmp r-xdata
sub_48c5e7
push ebp
mov ebp esp
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov edi rw-data
mov ecx edi
call sub_402612
mov edx [ rw-data ]
mov esi [ ebp + 0xc ]
mov eax [ edx + eax * 4 ]
cmp [ esi ] 0x4
mov ebx [ eax ]
jne r-xdata
push esi
push [ esi + 0x4 ]
push 0x2b
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
push [ esi + 0x14 ]
mov ecx edi
call sub_4025db
mov edi eax
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov ecx [ rw-data ]
mov ecx [ ecx + edi * 4 ]
push [ ecx ]
push esi
call sub_48a60c
test [ esi + 0x10 ] 0x10
je r-xdata
and [ ebx + 0x1c4 ] 0x0
jmp r-xdata
push 0x0
push edi
push 0x401
push [ ebx ]
call [ SendMessageW@IAT ]
jmp r-xdata
sub_48c668
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x25c
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_402612
mov esi [ ebp + 0xc ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x48 ]
push eax
push esi
call [ DragQueryPoint@IAT ]
push [ esp + 0x4c ]
lea eax [ esp + 0x14 ]
push [ esp + 0x4c ]
push eax
call sub_48ab69
mov edx [ esp + 0x10 ]
mov ebx eax
mov ecx [ rw-data ]
mov ecx [ ecx + edx * 4 ]
mov eax [ ecx ]
mov [ esp + 0x38 ] eax
cmp ebx 0xffffffff
je r-xdata
push 0x0
push esi
push 0x233
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
mov eax [ rw-data ]
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
test [ eax + 0x92 ] 0x8
je r-xdata
mov eax [ eax ]
lea ecx [ esp + 0x50 ]
push ecx
lea ecx [ esp + 0x44 ]
mov [ esp + 0x14 ] eax
push ecx
push 0xb0
xor edi edi
push eax
mov [ esp + 0x24 ] edi
call [ SendMessageW@IAT ]
push edi
push edi
push 0xffffffff
push esi
call [ DragQueryFileW@IAT ]
mov [ esp + 0x44 ] eax
test eax eax
jle r-xdata
push [ esp + 0x14 ]
push [ esp + 0x44 ]
push 0xb1
push [ esp + 0x1c ]
call [ SendMessageW@IAT ]
push esi
call [ DragFinish@IAT ]
xor esi esi
lea ecx [ esp + 0x18 ]
xor edi edi
inc esi
mov [ esp + 0x18 ] edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] esi
call sub_409a20
push r--data
lea ecx [ esp + 0x2c ]
mov [ esp + 0x28 ] esi
mov [ esp + 0x1c ] ebx
call sub_407f41
xor ebx ebx
lea eax [ esp + 0x18 ]
inc ebx
mov esi rw-data
push ebx
push eax
lea eax [ esp + 0x30 ]
mov ecx esi
push eax
call sub_408b13
lea ecx [ esp + 0x28 ]
call sub_405a64
lea ecx [ esp + 0x18 ]
call sub_409a20
or [ esp + 0x18 ] 0xffffffff
lea ecx [ esp + 0x28 ]
push r--data
mov [ esp + 0x28 ] ebx
call sub_407f41
push ebx
lea eax [ esp + 0x1c ]
mov ecx esi
push eax
lea eax [ esp + 0x30 ]
push eax
call sub_408b13
lea ecx [ esp + 0x28 ]
call sub_405a64
lea eax [ esp + 0x58 ]
push eax
lea ecx [ esp + 0x1c ]
call sub_409bf8
push r--data
lea ecx [ esp + 0x2c ]
call sub_407f41
push ebx
lea eax [ esp + 0x1c ]
mov ecx esi
push eax
lea eax [ esp + 0x30 ]
push eax
call sub_408b13
lea ecx [ esp + 0x28 ]
call sub_405a64
push edi
push edi
push [ esp + 0x40 ]
mov ecx rw-data
push 0xfffffff3
call sub_486193
lea ecx [ esp + 0x18 ]
call sub_409a20
jmp r-xdata
dec eax
mov [ esp + 0x3c ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x58 ]
push eax
push 0x1
push 0xc2
push [ esp + 0x1c ]
call [ SendMessageW@IAT ]
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x58 ]
push eax
push 0xb0
push [ esp + 0x1c ]
call [ SendMessageW@IAT ]
push [ esp + 0x14 ]
push [ esp + 0x18 ]
push 0xb1
push [ esp + 0x1c ]
call [ SendMessageW@IAT ]
inc edi
cmp edi [ esp + 0x44 ]
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0x2
lea eax [ esp + 0x58 ]
jne r-xdata
push 0x104
lea eax [ esp + 0x5c ]
push eax
push edi
push esi
call [ DragQueryFileW@IAT ]
cmp edi [ esp + 0x3c ]
jge r-xdata
push r--data
push r--data
jmp r-xdata
push eax
call sub_422f0d
pop ecx
pop ecx
sub_48c8ca
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
mov eax [ eax + ecx * 4 ]
push 0x211
push [ ebp + 0x10 ]
mov eax [ eax ]
mov [ eax + 0x1a8 ] 0x0
call [ DefDlgProcW@IAT ]
pop ebp
retn 0x14
sub_48c8f9
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
mov eax [ eax + ecx * 4 ]
push 0x212
push [ ebp + 0x10 ]
mov eax [ eax ]
mov [ eax + 0x1a8 ] 0x1
call [ DefDlgProcW@IAT ]
pop ebp
retn 0x14
sub_48c928
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
push esi
mov eax [ eax + ecx * 4 ]
mov esi [ eax ]
cmp [ esi + 0x184 ] 0x0
je r-xdata
push [ ebp + 0x18 ]
mov [ esi + 0x184 ] 0x0
push [ ebp + 0x14 ]
push 0x232
push [ ebp + 0x10 ]
call [ DefDlgProcW@IAT ]
pop esi
pop ebp
retn 0x14
push 0x0
push 0x0
push esi
push 0xfffffff4
mov ecx rw-data
call sub_486193
sub_48c973
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x53
push [ ebp + 0x10 ]
call [ DefDlgProcW@IAT ]
push [ eax + 0x28 ]
call sub_48b669
jmp r-xdata
pop ebp
retn 0x14
sub_48c9a8
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rw-data ] 0x0
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
je r-xdata
movzx ecx si
shl ecx 0x10
movzx eax di
or ecx eax
push ecx
push [ ebp + 0x14 ]
push 0x200
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
call [ ClientToScreen@IAT ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call [ ImageList_DragMove@IAT ]
sub_48ca02
push ebp
mov ebp esp
sub esp 0x1c
push edi
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_402612
mov ecx [ rw-data ]
mov eax [ ecx + eax * 4 ]
mov edi [ eax ]
lea eax [ ebp - 0x1c ]
push eax
push [ edi ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
sub eax [ edi + 0x3c ]
sub edx [ edi + 0x40 ]
cmp [ edi + 0xc ] 0x80000000
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edx
jne r-xdata
add [ edi + 0x3c ] eax
add [ edi + 0x40 ] edx
pop edi
mov esp ebp
pop ebp
retn 0xc
push ebx
push esi
mov esi [ rw-data ]
xor ecx ecx
mov [ ebp - 0xc ] esi
mov ebx ecx
test esi esi
je r-xdata
pop esi
pop ebx
cmp ecx [ rw-data ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax + ebx * 4 ]
mov edx [ eax ]
test edx edx
je r-xdata
inc ebx
cmp ebx esi
jb r-xdata
mov eax [ edx + 0x8 ]
inc ecx
mov [ ebp - 0x8 ] ecx
cmp eax [ edi ]
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push [ edx ]
call [ GetWindowRect@IAT ]
mov edx [ ebp - 0x10 ]
mov esi [ ebp - 0x18 ]
sub edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
sub eax ecx
add ecx [ ebp + 0x8 ]
add esi [ ebp - 0x4 ]
push 0x1
push edx
push eax
mov [ ebp - 0x14 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] esi
mov eax [ eax + ebx * 4 ]
push esi
push ecx
mov eax [ eax ]
push [ eax ]
call [ MoveWindow@IAT ]
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
sub_48cae6
push ebp
mov ebp esp
push 0xffffffec
push [ ebp + 0x8 ]
call [ GetWindowLongW@IAT ]
test eax 0x10000
je r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx ax
mov eax [ ebp + 0xc ]
shl ecx 0x10
movzx eax ax
or ecx eax
push ecx
push 0x0
push 0x84
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
push 0x2
pop eax
jmp r-xdata
pop ebp
retn 0xc
sub_48cb26
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xa8
push esi
push edi
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_402612
mov ecx [ rw-data ]
mov edi [ ebp + 0x10 ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + eax * 4 ]
mov ecx 0xfffffe6e
mov esi [ eax ]
mov eax [ edi + 0x8 ]
mov [ esp + 0x3c ] esi
cmp eax ecx
ja r-xdata
cmp eax 0xfffffff0
ja r-xdata
je r-xdata
cmp eax 0xfffffff4
je r-xdata
je r-xdata
xor esi esi
push esi
push 0x9
push 0x110a
push [ edi ]
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
mov ecx 0xfffffdd9
cmp eax ecx
ja r-xdata
push [ edi ]
mov esi rw-data
mov ecx esi
call sub_4025db
mov [ esp + 0x10 ] eax
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffb
je r-xdata
call [ ReleaseCapture@IAT ]
jmp r-xdata
cmp eax 0xfffffec0
je r-xdata
push edi
push [ ebp + 0xc ]
push 0x4e
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
mov [ esp + 0x58 ] eax
lea eax [ esp + 0x54 ]
push eax
push esi
push 0x113e
push [ edi ]
mov [ esp + 0x64 ] 0x4
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
cmp eax 0xfffffdda
je r-xdata
je r-xdata
mov ecx [ rw-data ]
mov eax [ ecx + eax * 4 ]
mov ecx [ eax ]
mov al [ ecx + 0x90 ]
cmp al 0x10
je r-xdata
push 0x1
push esi
mov esi rw-data
mov [ esp + 0x17 ] 0x0
mov ecx esi
call sub_402344
lea eax [ esp + 0x18 ]
push eax
call [ GetCursorPos@IAT ]
lea eax [ esp + 0x18 ]
push eax
push [ edi ]
call [ ScreenToClient@IAT ]
push [ edi ]
mov ecx esi
call sub_4025db
mov ecx eax
mov [ esp + 0x14 ] ecx
mov [ esp + 0x10 ] ecx
cmp ecx 0xffffffff
jne r-xdata
cmp eax 0xfffffffe
jne r-xdata
push 0x1
push 0x0
push [ edi ]
call [ InvalidateRect@IAT ]
jmp r-xdata
cmp eax 0xfffffed4
je r-xdata
mov eax [ edi + 0x34 ]
cmp eax [ edi + 0x5c ]
je r-xdata
mov esi [ GetKeyState@IAT ]
push 0x11
call esi
test ax ax
jns r-xdata
cmp eax 0xfffffdee
je r-xdata
push 0x0
push 0x0
push 0x130b
push [ edi ]
call [ SendMessageW@IAT ]
cmp eax 0xfffffd09
je r-xdata
mov eax [ edi + 0xc ]
dec eax
je r-xdata
cmp al 0x13
jne r-xdata
mov eax [ rw-data ]
mov [ esp + 0x24 ] ecx
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov al [ eax + 0x90 ]
cmp al 0x10
je r-xdata
push [ edi ]
call [ GetParent@IAT ]
push eax
mov ecx esi
call sub_4025db
mov ecx eax
mov [ esp + 0x14 ] ecx
mov [ esp + 0x10 ] ecx
cmp ecx 0xffffffff
je r-xdata
push 0x1
push esi
mov esi rw-data
mov ecx esi
call sub_402344
lea eax [ esp + 0x18 ]
push eax
call [ GetCursorPos@IAT ]
lea eax [ esp + 0x18 ]
push eax
push [ edi ]
call [ ScreenToClient@IAT ]
push [ edi ]
mov ecx esi
call sub_4025db
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffff93
je r-xdata
cmp [ edi + 0xc ] 0x1000
je r-xdata
push 0x9
call esi
test ax ax
jns r-xdata
cmp [ esi + 0x188 ] 0x0
je r-xdata
cmp eax 0xfffffe3d
je r-xdata
push [ edi + 0x4 ]
cmp [ esi + 0x199 ] 0x0
mov [ esi + 0x19a ] 0x1
jne r-xdata
cmp eax 0xfffffd0e
je r-xdata
push 0x20
pop eax
jmp r-xdata
sub eax 0x10000
jne r-xdata
mov eax [ esp + 0x18 ]
xor esi esi
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x2c ] eax
lea eax [ esp + 0x28 ]
push eax
push esi
push 0x1111
push [ edi ]
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
cmp al 0x13
jne r-xdata
mov [ esp + 0xf ] 0x1
mov ecx [ rw-data ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax ]
mov al [ eax + 0x90 ]
cmp al 0x10
jb r-xdata
xor eax eax
push eax
push eax
push eax
push [ rw-data ]
call [ ImageList_SetDragCursorImage@IAT ]
push 0xfffffff0
push 0xfffffff8
xor esi esi
push esi
push [ rw-data ]
call [ ImageList_BeginDrag@IAT ]
push [ ebp + 0x8 ]
call [ SetCapture@IAT ]
mov eax [ ebp + 0xc ]
lea ecx [ esp + 0x28 ]
mov [ rw-data ] eax
mov [ esp + 0x28 ] esi
mov [ esp + 0x30 ] esi
mov [ esp + 0x34 ] 0x1
call sub_409a20
mov eax [ ebp + 0xc ]
lea ecx [ esp + 0x40 ]
inc esi
mov [ esp + 0x28 ] eax
push r--data
mov [ esp + 0x38 ] esi
call sub_407f41
push esi
lea eax [ esp + 0x2c ]
mov ecx rw-data
push eax
lea eax [ esp + 0x48 ]
push eax
call sub_408b13
lea ecx [ esp + 0x40 ]
call sub_405a64
lea esi [ edi + 0x20 ]
push esi
push [ edi ]
call [ ClientToScreen@IAT ]
push [ edi + 0x24 ]
push [ esi ]
push 0x0
call [ ImageList_DragEnter@IAT ]
lea ecx [ esp + 0x28 ]
call sub_409a20
jmp r-xdata
cmp eax 0xffffff94
jne r-xdata
cmp [ edi + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x0
push 0x130b
push [ edi ]
call [ SendMessageW@IAT ]
push 0x10
mov esi eax
call [ GetKeyState@IAT ]
test ax ax
jns r-xdata
mov edx [ rw-data ]
push 0x3
pop ecx
cmp edx ecx
jl r-xdata
cmp eax 0xfffffe64
jne r-xdata
mov [ esi + 0x19a ] 0x0
push [ edi + 0x8 ]
jmp r-xdata
mov [ esi + 0x199 ] 0x1
jmp r-xdata
cmp eax 0xfffffd0f
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp [ ecx + 0x48 ] 0xfe000000
mov [ esp + 0xf ] al
jne r-xdata
lea eax [ esp + 0x18 ]
push eax
push [ edi ]
call [ ClientToScreen@IAT ]
mov ecx [ esp + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov [ esp + 0x58 ] eax
lea eax [ esp + 0x54 ]
push eax
push esi
push 0x113e
push [ edi ]
mov [ esp + 0x64 ] 0x4
call [ SendMessageW@IAT ]
test [ esp + 0x30 ] 0x46
je r-xdata
mov eax [ esp + 0x18 ]
xor esi esi
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x44 ] eax
lea eax [ esp + 0x40 ]
push eax
push esi
push 0x1012
push [ edi ]
call [ SendMessageW@IAT ]
cmp eax 0xffffffff
jle r-xdata
cmp al 0x11
jbe r-xdata
mov esi [ edi + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x24 ]
mov ecx rw-data
push eax
push esi
call sub_402402
test al al
je r-xdata
je r-xdata
inc esi
dec esi
jmp r-xdata
mov esi [ rw-data ]
mov eax [ edi ]
push 0xfffffff0
push eax
mov [ esp + 0x28 ] eax
call [ GetWindowLongW@IAT ]
test eax 0x100
je r-xdata
cmp [ esi + 0x19a ] 0x1
jne r-xdata
cmp eax 0xfffffd16
je r-xdata
lea eax [ esp + 0x10 ]
mov ecx esi
push eax
lea eax [ esp + 0x24 ]
push eax
push [ edi + 0x2c ]
call sub_402402
test al al
jne r-xdata
mov [ esp + 0xf ] 0x1
mov eax [ esp + 0x3c ]
push esi
push [ eax ]
push [ esp + 0x24 ]
push [ esp + 0x24 ]
push 0x80
push ecx
call [ TrackPopupMenuEx@IAT ]
jmp r-xdata
lea eax [ esp + 0x10 ]
mov ecx rw-data
push eax
lea eax [ esp + 0x24 ]
push eax
push [ esp + 0x80 ]
call sub_402402
test al al
je r-xdata
lea eax [ esp + 0x18 ]
push eax
push [ edi ]
call [ ClientToScreen@IAT ]
mov ecx [ esp + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
cmp [ esp + 0xf ] 0x0
jne r-xdata
mov eax [ esp + 0x18 ]
xor esi esi
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x2c ] eax
lea eax [ esp + 0x28 ]
push eax
push esi
push 0x1111
push [ edi ]
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
cmp al 0x13
jne r-xdata
mov eax [ rw-data ]
mov ecx [ esp + 0x10 ]
push 0x0
mov eax [ eax + ecx * 4 ]
mov ecx [ eax ]
mov ax [ edi + 0x10 ]
mov [ ecx + 0x96 ] ax
push [ edi + 0x4 ]
call sub_48b385
mov edx [ rw-data ]
mov ecx [ esp + 0x10 ]
mov eax [ edx + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x28 ] 0x0
jbe r-xdata
push esi
push [ esp + 0x7c ]
jmp r-xdata
push esi
inc ecx
cmp ecx edx
jle r-xdata
movzx eax [ eax + 0x93 ]
cmp eax [ edi + 0x4 ]
je r-xdata
cmp [ edi + 0xc ] 0x20
jne r-xdata
mov [ esi + 0x199 ] 0x0
jmp r-xdata
push eax
push [ edi + 0x4 ]
call sub_48b385
push eax
jmp r-xdata
mov eax [ rw-data ]
mov esi [ esp + 0x10 ]
push 0xfffffff0
mov eax [ eax + esi * 4 ]
mov eax [ eax ]
push [ eax + 0x34 ]
call [ GetWindowLongW@IAT ]
test eax 0x8000000
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ esp + 0x24 ]
mov [ esp + 0x14 ] eax
mov ecx [ esp + 0x10 ]
mov eax [ rw-data ]
mov [ esp + 0x14 ] ecx
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
cmp [ eax + 0xc ] esi
jne r-xdata
mov eax [ esp + 0x3c ]
push esi
push [ eax ]
push [ esp + 0x24 ]
push [ esp + 0x24 ]
push esi
push ecx
call [ TrackPopupMenuEx@IAT ]
jmp r-xdata
mov [ esp + 0x80 ] eax
lea eax [ esp + 0x7c ]
push eax
push esi
push 0x104b
push [ edi ]
mov [ esp + 0x8c ] 0x4
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
mov [ esp + 0x58 ] eax
lea eax [ esp + 0x54 ]
push eax
push esi
push 0x113e
push [ edi ]
mov [ esp + 0x64 ] 0xc
mov [ esp + 0x70 ] 0xf000
call [ SendMessageW@IAT ]
test [ esp + 0x30 ] 0x46
je r-xdata
mov eax [ esp + 0x18 ]
xor esi esi
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x44 ] eax
lea eax [ esp + 0x40 ]
push eax
push esi
push 0x1012
push [ edi ]
call [ SendMessageW@IAT ]
cmp eax 0xffffffff
je r-xdata
mov [ rw-data ] esi
mov eax [ edx + ecx * 4 ]
mov ecx rw-data
mov eax [ eax ]
add eax 0x24
push eax
call sub_4081a7
mov eax [ rw-data ]
mov ecx [ esp + 0x10 ]
push sub_48b37c
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
mov al [ eax + 0x98 ]
mov [ rw-data ] al
push [ edi + 0x10 ]
push 0x1030
push [ edi ]
call [ SendMessageW@IAT ]
jmp r-xdata
call sub_48b385
jmp r-xdata
mov eax [ esi + ecx * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp ecx edx
jg r-xdata
xor esi esi
push esi
push 0x9
push 0x110a
push [ esp + 0x2c ]
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
test [ edi + 0x28 ] 0x11
mov ecx [ rw-data ]
je r-xdata
test [ esp + 0x48 ] 0xe
je r-xdata
push esi
mov esi [ SendMessageW@IAT ]
push 0x9
push 0x110b
push [ edi ]
call esi
push [ esp + 0x34 ]
push 0x9
push 0x110b
push [ edi ]
call esi
jmp r-xdata
mov [ esp + 0x80 ] eax
lea eax [ esp + 0x7c ]
push eax
push esi
push 0x104b
push [ edi ]
mov [ esp + 0x8c ] 0x4
call [ SendMessageW@IAT ]
test [ esp + 0x48 ] 0xe
je r-xdata
mov eax [ esi + ecx * 4 ]
push 0x4f
mov eax [ eax ]
push [ eax + 0x54 ]
lea eax [ edi + 0x10 ]
push eax
call sub_42422e
add esp 0xc
xor eax eax
mov [ edi + 0xae ] ax
mov [ esp + 0x58 ] eax
lea eax [ esp + 0x54 ]
push eax
push esi
push 0x113e
push [ esp + 0x2c ]
mov [ esp + 0x64 ] 0x4
call [ SendMessageW@IAT ]
test eax eax
mov eax [ ecx + esi * 4 ]
mov eax [ eax ]
mov eax [ eax + 0x4c ]
cmp eax 0xffffffff
je r-xdata
mov eax [ ecx + esi * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0x14
jne r-xdata
lea eax [ esp + 0x10 ]
mov ecx rw-data
push eax
lea eax [ esp + 0x24 ]
push eax
push [ esp + 0xa4 ]
call sub_402402
test al al
je r-xdata
push esi
push [ esp + 0xa0 ]
jmp r-xdata
mov eax [ ecx + esi * 4 ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
test eax eax
js r-xdata
mov [ edi + 0x30 ] eax
mov ecx [ rw-data ]
mov eax [ esp + 0x24 ]
mov [ esp + 0x14 ] eax
mov ecx [ esp + 0x10 ]
mov eax [ rw-data ]
mov [ esp + 0x14 ] ecx
mov eax [ eax + ecx * 4 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ esp + 0xf ] 0x0
je r-xdata
cmp [ eax + 0xc ] esi
jne r-xdata
mov [ edi + 0x34 ] eax
jmp r-xdata
test [ edi + 0x24 ] 0x1
je r-xdata
sub_48d422
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
mov ecx rw-data
call sub_4025db
mov esi [ ebp + 0x10 ]
mov edx eax
cmp edx 0xffffffff
je r-xdata
mov eax [ ebp + 0x14 ]
push [ ebp + 0xc ]
movzx ecx ax
shl ecx 0x10
movzx eax si
or ecx eax
cmp [ ebp + 0x18 ] 0x0
push ecx
je r-xdata
mov edi [ rw-data ]
cmp esi 0x8
jne r-xdata
push 0x115
push 0x114
jmp r-xdata
cmp esi 0x4
jne r-xdata
mov ecx [ edi + edx * 4 ]
mov eax [ ecx ]
cmp [ eax + 0x90 ] 0x12
je r-xdata
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
mov eax [ edi + edx * 4 ]
mov eax [ eax ]
cmp [ eax + 0x90 ] 0x16
jne r-xdata
push esi
push edx
call sub_48b385
test al al
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x14
sub_48d4a8
push ebp
mov ebp esp
sub esp 0x10
mov ecx rw-data
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_402612
mov ecx [ rw-data ]
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x14 ]
mov eax [ ecx + eax * 4 ]
mov edi [ eax ]
cmp [ edi + 0x3a ] 0x0
je r-xdata
cmp [ edi + 0x19c ] 0x0
mov eax [ edi + 0x44 ]
mov ecx [ edi + 0x48 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
je r-xdata
cmp [ edi + 0x19c ] 0x0
mov [ edi + 0x44 ] esi
mov [ edi + 0x48 ] ebx
je r-xdata
test eax eax
jle r-xdata
push 0xf
call [ GetSystemMetrics@IAT ]
mov ecx [ ebp - 0x4 ]
sub ecx eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] ecx
push 0xf
call [ GetSystemMetrics@IAT ]
add [ edi + 0x48 ] eax
movzx ecx bx
shl ecx 0x10
movzx eax si
or ecx eax
push ecx
push [ ebp + 0xc ]
push 0x5
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
test ecx ecx
jle r-xdata
test esi esi
jle r-xdata
test ebx ebx
jle r-xdata
cmp [ ebp + 0xc ] 0x1
je r-xdata
push 0x3
pop ebx
mov [ ebp - 0x10 ] ebx
cmp [ rw-data ] ebx
jl r-xdata
push 0x1
push 0x0
push [ edi ]
call [ InvalidateRect@IAT ]
mov [ edi + 0x184 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + ebx * 4 ]
mov ebx [ eax ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ ebp - 0x10 ]
inc ebx
mov [ ebp - 0x10 ] ebx
cmp ebx [ rw-data ]
jle r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ edi + 0x4 ]
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
movsx eax [ ebx + 0x88 ]
mov [ ebp - 0xc ] eax
imul eax esi
cdq
idiv [ ebp - 0x8 ]
mov esi eax
movsx eax [ ebx + 0x8a ]
imul eax [ ebp + 0x14 ]
cdq
idiv ecx
mov ecx eax
movsx eax [ ebx + 0x8c ]
imul eax [ ebp + 0x10 ]
cdq
idiv [ ebp - 0x8 ]
mov [ ebp + 0x8 ] eax
movsx eax [ ebx + 0x8e ]
imul eax [ ebp + 0x14 ]
cdq
idiv [ ebp - 0x4 ]
movzx edx [ ebx + 0x86 ]
mov [ ebp + 0xc ] eax
test dx dx
je r-xdata
push 0x0
push eax
push [ ebp + 0x8 ]
push ecx
push esi
push [ ebx ]
call [ MoveWindow@IAT ]
mov al [ ebx + 0x90 ]
test al al
jne r-xdata
test edx 0x100
je r-xdata
cmp al 0x16
jne r-xdata
push 0xffff
push 0x0
push 0x142
push [ ebx ]
call [ SendMessageW@IAT ]
jmp r-xdata
test edx 0x200
je r-xdata
movsx edx [ ebx + 0x8c ]
mov [ ebp + 0x8 ] edx
movzx edx [ ebx + 0x86 ]
test dl 0x6
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov esi [ ebp + 0x10 ]
test [ ebx + 0x92 ] 0x20
jne r-xdata
mov [ ebp + 0xc ] edx
and [ ebp + 0xc ] 0x2
je r-xdata
movsx eax [ ebx + 0x8e ]
mov [ ebp + 0xc ] eax
test dl 0x60
jne r-xdata
mov eax [ ebp + 0x10 ]
test dl 0x8
je r-xdata
push 0x0
push [ ebx + 0x34 ]
push 0x469
push [ ebx ]
call [ SendMessageW@IAT ]
mov al [ ebx + 0x93 ]
cmp al 0xff
je r-xdata
test dl 0x4
je r-xdata
movsx esi [ ebx + 0x88 ]
mov eax [ ebp + 0x14 ]
test dl dl
jns r-xdata
cdq
sub eax edx
sar eax 0x1
cmp esi eax
jle r-xdata
sub eax [ ebp - 0x8 ]
cdq
sub eax edx
mov esi eax
movsx eax [ ebx + 0x88 ]
sar esi 0x1
add esi eax
jmp r-xdata
movzx eax al
cmp eax [ edi + 0x190 ]
je r-xdata
mov [ ebp + 0xc ] edx
and [ ebp + 0xc ] 0x20
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cdq
sub eax edx
sar eax 0x1
cmp ecx eax
jle r-xdata
sub eax [ ebp - 0x4 ]
cdq
sub eax edx
mov ecx eax
movsx eax [ ebx + 0x8a ]
sar ecx 0x1
add ecx eax
mov eax [ ebp + 0xc ]
movzx edx [ ebx + 0x86 ]
movsx edx [ ebx + 0x88 ]
mov eax [ ebp - 0x8 ]
mov esi [ ebp + 0x10 ]
sub eax edx
sub eax [ ebp + 0x8 ]
imul eax esi
cdq
idiv [ ebp - 0x8 ]
sub esi eax
sub esi [ ebp + 0x8 ]
push 0x0
push [ ebx ]
call [ ShowWindow@IAT ]
test dl 0x40
je r-xdata
movsx ecx [ ebx + 0x8a ]
movsx esi [ ebx + 0x8c ]
sub esi [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
add esi [ ebp - 0xc ]
add esi [ ebp + 0x10 ]
movsx edx [ ebx + 0x8c ]
sub edx esi
sub edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
add edx [ ebp + 0x10 ]
mov [ ebp + 0x8 ] edx
movzx edx [ ebx + 0x86 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx ecx [ ebx + 0x8a ]
mov eax [ ebp - 0x4 ]
sub eax ecx
mov ecx [ ebp + 0x14 ]
sub eax [ ebp + 0xc ]
imul eax ecx
cdq
idiv [ ebp - 0x4 ]
sub ecx eax
mov eax [ ebp + 0xc ]
sub ecx eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
movsx edx [ ebx + 0x8a ]
je r-xdata
movzx edx [ ebx + 0x86 ]
movsx ecx [ ebx + 0x8e ]
sub ecx eax
sub ecx [ ebp - 0x4 ]
add ecx edx
add ecx [ ebp + 0x14 ]
movsx eax [ ebx + 0x8e ]
sub eax ecx
sub eax [ ebp - 0x4 ]
add eax edx
add eax [ ebp + 0x14 ]
jmp r-xdata
sub_48d7f6
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi rw-data
mov ecx esi
call sub_402612
mov ecx [ rw-data ]
mov eax [ ecx + eax * 4 ]
mov edx [ eax ]
mov eax [ ebp + 0xc ]
and eax 0xfff0
sub eax 0xf000
je r-xdata
mov [ edx + 0x184 ] 0x1
sub eax 0x20
je r-xdata
push 0x0
push 0x0
push edx
push 0xfffffffc
mov ecx esi
call sub_486193
call sub_48ad01
sub eax 0x10
je r-xdata
pop esi
pop ebp
retn 0x10
jmp r-xdata
push 0x0
push 0x0
push edx
push 0xfffffffa
jmp r-xdata
sub eax 0x30
je r-xdata
mov eax [ ebp + 0x14 ]
movzx ecx ax
mov eax [ ebp + 0x10 ]
shl ecx 0x10
movzx eax ax
or ecx eax
push ecx
push [ ebp + 0xc ]
push 0x112
push [ ebp + 0x8 ]
call [ DefDlgProcW@IAT ]
mov ecx esi
call sub_486193
jmp r-xdata
push 0x0
push 0x0
push edx
push 0xfffffffd
mov ecx esi
call sub_486193
jmp r-xdata
sub eax 0xc0
jne r-xdata
test [ rw-data ] 0x1
jne r-xdata
push eax
push eax
push edx
push 0xfffffffb
sub_48d8ad
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
movzx esi [ ecx ]
push edi
mov edi edx
test si si
je r-xdata
xor eax eax
mov ebx 0x95
mov [ ebp - 0x4 ] 0x10
mov [ ebp - 0x8 ] 0xf
cmp si 0x7c
jne r-xdata
movzx eax [ ecx + 0x2 ]
jmp r-xdata
mov eax 0x85
cmp si ax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
lea ecx [ ecx + eax * 2 ]
movzx eax [ ecx + 0x4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
add eax 0x5
cmp si ax
je r-xdata
mov eax ecx
jmp r-xdata
add ecx 0x4
jmp r-xdata
cmp si 0x70
jne r-xdata
movzx eax si
movzx eax [ eax + r--data ]
mov eax 0x86
cmp si ax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx esi [ ecx ]
test si si
jne r-xdata
add eax 0x5
cmp si ax
je r-xdata
movzx edx si
cmp edx ebx
jg r-xdata
mov eax edx
sub eax 0x97
je r-xdata
je r-xdata
movzx eax [ ecx + 0x2 ]
lea ecx [ ecx + eax * 2 ]
dec eax
dec eax
je r-xdata
cmp edx 0x55
jl r-xdata
cmp edx 0x1d
jl r-xdata
dec eax
dec eax
jne r-xdata
movzx eax [ edx + r--data ]
lea ecx [ ecx + eax * 2 ]
test edi edi
je r-xdata
cmp edx 0x5a
jle r-xdata
cmp edx 0x1e
jle r-xdata
movzx eax [ ecx + 0x2 ]
push 0x10
pop esi
cmp ax si
je r-xdata
cmp edx 0x5d
jle r-xdata
mov ax [ ecx - 0x2 ]
mov edx 0xfc00
and ax dx
mov edx 0xd800
cmp ax dx
jne r-xdata
lea eax [ edx - 0x21 ]
cmp eax 0x19
ja r-xdata
add ecx 0x4
jmp r-xdata
push 0xf
pop esi
cmp ax si
movzx eax [ ecx + 0x4 ]
cmp ax [ ebp - 0x4 ]
je r-xdata
cmp edx 0x60
jle r-xdata
add ecx 0x2
jmp r-xdata
cmp ax [ ebp - 0x8 ]
jmp r-xdata
cmp edx 0x61
jne r-xdata
jne r-xdata
sub_48d9fe
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] ecx
mov eax [ esi ]
cmp eax 0xffffffff
jae r-xdata
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push edi
lea esi [ esi + edi * 4 ]
add esi 0x4
mov eax [ esi ]
cmp eax 0xffffffff
jb r-xdata
lea edx [ esi + 0x4 ]
lea ecx [ eax + 0x1 ]
jmp r-xdata
xor edi edi
cmp eax [ ebp + 0x14 ]
je r-xdata
pop edi
cmp [ edx ] ecx
je r-xdata
inc edi
lea edx [ edx + 0x4 ]
inc ecx
push [ esi + edi * 4 ]
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418286
add esp 0x10
add ebx eax
sub_48da60
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ edi + 0x2c ]
cmp [ edi + 0x30 ] eax
jle r-xdata
mov ax [ ebp + 0xc ]
mov [ esi ] ax
lea eax [ ebx + ebx ]
push eax
push [ ebp - 0x8 ]
lea eax [ esi + 0x2 ]
push eax
call sub_420fc0
add esp 0xc
xor eax eax
mov [ esi + ebx * 2 + 0x2 ] ax
inc [ edi + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebx + ebx ]
js r-xdata
cmp [ esi + ebx * 2 + 0x2 ] ax
je r-xdata
mov eax [ edi + 0x30 ]
sub eax [ ebp - 0x4 ]
mov ecx [ edi + 0x34 ]
imul eax ecx
add eax eax
push eax
lea eax [ esi + ecx * 2 ]
push esi
push eax
call sub_427f60
add esp 0xc
mov eax [ edi + 0x34 ]
lea esi [ esi + eax * 2 ]
mov eax [ ebp - 0x4 ]
inc eax
cmp eax [ edi + 0x30 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebx + ebx ]
jl r-xdata
or eax 0xffffffff
test eax eax
push eax
lea eax [ esi + 0x2 ]
push eax
push [ ebp - 0x8 ]
call sub_421604
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_48db00
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
xor ebx ebx
push edi
mov edi [ ebp + 0x8 ]
shr edi 0xb
mov eax [ esi ]
and edi 0x1
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] ecx
test eax eax
je r-xdata
mov edx [ esi ]
cmp edx 0xffffffff
jb r-xdata
dec eax
push eax
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418286
add esp 0x10
mov ebx eax
jmp r-xdata
lea eax [ edx + 0x1 ]
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ esi + 0x4 ]
cmp [ ecx ] eax
je r-xdata
mov esi ecx
mov eax [ esi ]
inc eax
lea eax [ esi + 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ eax ]
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x4 ]
dec eax
mov ecx [ ebp - 0x8 ]
push eax
mov eax [ esi ]
inc eax
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418286
mov esi [ ebp + 0x10 ]
add esp 0x10
add ebx eax
mov eax edi
neg eax
sbb eax eax
and eax 0x110000
sub_48db8f
push ebp
mov ebp esp
push esi
lea esi [ edx - 0x1 ]
mov eax ecx
cdq
push edi
mov edi 0x80
idiv edi
movzx eax [ eax + r--data ]
shl eax 0x7
add eax edx
movzx eax [ eax * 2 + r--data ]
cmp esi 0x8
ja r-xdata
xor eax eax
jmp [ esi * 4 + jump_table_48dd23 ]
mov al [ eax * 8 + r--data ]
cmp al 0x9
je r-xdata
movzx ecx [ eax * 8 + r--data ]
xor edx edx
mov eax [ ebp + 0x8 ]
cmp eax [ ecx * 4 + r--data ]
sete dl
movzx eax [ eax * 8 + r--data ]
movzx eax [ eax * 8 + r--data ]
jmp r-xdata
movzx eax [ eax * 8 + r--data ]
xor edx edx
inc edx
mov eax [ eax * 4 + r--data ]
cmp eax edx
je r-xdata
mov edx 0x180e
cmp ecx edx
ja r-xdata
movzx eax [ eax * 8 + r--data ]
xor edx edx
inc edx
mov eax [ eax * 4 + r--data ]
cmp eax edx
je r-xdata
movzx eax [ eax * 8 + r--data ]
lea eax [ eax * 4 + r--data ]
jmp r-xdata
xor ecx ecx
inc ecx
cmp al 0x5
je r-xdata
sete al
jmp r-xdata
xor eax eax
cmp ecx [ ebp + 0xc ]
xor ecx ecx
cmp [ ebp + 0x8 ] eax
xor eax eax
cmp edx [ ebp + 0xc ]
jmp r-xdata
cmp eax 0x3
cmp ecx 0x2000
jb r-xdata
je r-xdata
cmp eax 0x3
je r-xdata
mov edx [ eax ]
cmp ecx edx
jae r-xdata
pop edi
pop esi
pop ebp
retn
cmp al 0x8
je r-xdata
xor edx edx
jmp r-xdata
movzx eax [ eax * 8 + r--data ]
xor ecx ecx
cmp [ eax * 4 + r--data ] 0x6
jmp r-xdata
cmp ecx 0x200a
jbe r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
cmp ecx 0x9
jb r-xdata
cmp ecx 0x5f
jmp r-xdata
lea eax [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ebp + 0xc ] eax
jmp r-xdata
xor ecx ecx
jmp r-xdata
sete cl
jmp r-xdata
cmp ecx 0x2027
jbe r-xdata
cmp ecx 0xd
jbe r-xdata
je r-xdata
cmp ecx 0x2029
jbe r-xdata
cmp ecx 0x20
je r-xdata
cmp ecx 0x202f
je r-xdata
cmp ecx 0x85
je r-xdata
cmp ecx 0x205f
je r-xdata
cmp ecx 0xa0
je r-xdata
cmp ecx 0x3000
jne r-xdata
cmp ecx 0x1680
je r-xdata
sub_48dd47
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi r--data
mov [ ebp - 0x8 ] ecx
xor esi esi
mov al 0x5
mov al [ esi + r--data ]
inc edi
add edi ebx
inc esi
test al al
jne r-xdata
push edx
mov edx edi
call sub_41832a
pop ecx
test eax eax
je r-xdata
movzx ebx al
cmp edx ebx
jne r-xdata
or eax 0xffffffff
mov eax esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48dd94
push ebx
push esi
mov esi ecx
push edi
mov edi edx
movzx ebx [ esi + 0x2 ]
add esi 0x4
movzx eax [ esi ]
test ax ax
je r-xdata
xor eax eax
push 0x5d
pop edx
cmp ax dx
je r-xdata
cmp [ esi + 0x2 ] dx
jne r-xdata
cmp ax bx
jne r-xdata
add esi 0x2
jmp r-xdata
cmp ax 0x5b
jne r-xdata
cmp [ esi + 0x2 ] dx
je r-xdata
add esi 0x2
movzx eax [ esi ]
test ax ax
jne r-xdata
movzx eax [ esi + 0x2 ]
cmp eax 0x3a
je r-xdata
xor eax eax
mov [ edi ] esi
inc eax
jmp r-xdata
cmp ax 0x5c
jne r-xdata
mov edx edi
mov ecx esi
call sub_48dd94
test eax eax
jne r-xdata
cmp eax 0x2e
je r-xdata
pop edi
pop esi
pop ebx
retn
push 0x5d
pop edx
cmp eax 0x3d
jne r-xdata
sub_48de0f
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx edx
push edi
mov edi ecx
jmp r-xdata
test esi esi
jne r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx edi
jb r-xdata
xor eax eax
inc eax
push 0x0
push [ ebp + 0x10 ]
mov edx ebx
push [ ebp + 0xc ]
call sub_418413
add esp 0xc
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ esi ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_48de4d
push ebx
push esi
mov esi ecx
mov eax 0x32000
push edi
mov ecx [ esi + 0x3c ]
lea edi [ ecx + ecx ]
cmp edi eax
jle r-xdata
cmp ecx eax
jge r-xdata
mov edi eax
push 0x48
mov eax edi
sub eax ecx
cmp eax 0x64
jl r-xdata
lea eax [ edi + edi ]
push eax
call [ r--data ]
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
mov eax [ esi + 0x3c ]
add eax eax
push eax
push [ esi + 0x10 ]
push ebx
call sub_420fc0
mov eax [ esi + 0x20 ]
add esp 0xc
sub eax [ esi + 0x10 ]
sar eax 0x1
cmp [ esi + 0x3c ] 0x800
lea eax [ ebx + eax * 2 ]
mov [ esi + 0x20 ] eax
jle r-xdata
push 0x15
jmp r-xdata
mov [ esi + 0x10 ] ebx
xor eax eax
mov [ esi + 0x3c ] edi
jmp r-xdata
push [ esi + 0x10 ]
call [ r--data ]
pop ecx
pop eax
pop edi
pop esi
pop ebx
retn
sub_48dec9
mov edx r--data
jmp r-xdata
test ecx ecx
jg r-xdata
mov al [ edx ]
inc edx
test al al
jne r-xdata
mov eax edx
retn
cmp [ edx ] al
je r-xdata
mov eax r--data
retn
dec ecx
sub_48dee9
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
or ebx 0xffffffff
mov [ ebp - 0x8 ] edx
push edi
mov [ ebp - 0x4 ] ebx
lea esi [ ecx + 0x4 ]
push 0xfffffffc
movzx eax [ eax + lookup_table_48e11d ]
jmp [ eax * 4 + jump_table_48e0e1 ]
push [ ebp + 0xc ]
xor eax eax
mov ecx 0x85
push [ ebp + 0x8 ]
cmp dx cx
mov edx [ ebp - 0x8 ]
sete al
lea ecx [ esi + eax * 2 ]
call sub_48dee9
pop ecx
pop ecx
test eax eax
js r-xdata
test ebx ebx
jns r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x77
pop ebx
movzx eax [ esi + 0x2 ]
movzx ecx [ ecx + r--data ]
add ecx eax
lea esi [ esi + ecx * 2 ]
jmp r-xdata
movzx eax [ ecx + r--data ]
jmp r-xdata
inc edi
add esi 0x4
movzx eax [ esi + 0x2 ]
add edi eax
add esi 0x6
jmp r-xdata
movzx eax [ esi + 0x2 ]
add edi eax
movzx eax [ esi + 0x4 ]
cmp eax 0x10
je r-xdata
add esi 0x4
inc edi
jmp r-xdata
cmp edx 0x70
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push 0xfffffffe
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x77
add edi eax
pop ebx
cmp ebx edi
jne r-xdata
mov ebx edi
mov [ ebp - 0x4 ] ebx
jmp r-xdata
push 0xfffffffd
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx ecx [ esi + 0x2 ]
push 0x77
pop ebx
mov eax [ eax + 0x14 ]
lea ecx [ eax + ecx * 2 ]
mov edx ecx
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] bx
je r-xdata
movzx eax [ esi ]
mov ebx [ ebp - 0x4 ]
movzx eax [ eax + r--data ]
movzx ecx [ esi ]
mov edx ecx
mov eax edx
cmp eax 0xa1
ja r-xdata
lea esi [ esi + eax * 2 ]
jmp r-xdata
mov ax [ esi - 0x2 ]
mov ecx 0xfc00
and ax cx
mov ecx 0xd800
cmp ax cx
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
add esi 0x4
jmp r-xdata
cmp eax 0xf
jne r-xdata
add esi 0x2
jmp r-xdata
add esi 0x22
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
jmp r-xdata
pop eax
movzx eax [ esi + 0x2 ]
lea esi [ esi + eax * 2 ]
cmp [ esi ] bx
je r-xdata
mov ebx [ ebp - 0x4 ]
push 0x77
pop eax
cmp cx ax
jne r-xdata
movzx eax [ ecx + 0x2 ]
lea ecx [ ecx + eax * 2 ]
cmp [ ecx ] bx
je r-xdata
mov ebx [ ebp - 0x4 ]
cmp esi edx
jbe r-xdata
add esi 0x6
jmp r-xdata
inc edi
jmp r-xdata
cmp eax 0x67
jle r-xdata
movzx eax [ esi ]
cmp eax 0x62
jl r-xdata
mov eax ebx
jmp r-xdata
add esi 0x4
jmp r-xdata
push [ ebp + 0xc ]
lea ecx [ edx + 0x2 ]
mov edx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_48dee9
pop ecx
pop ecx
test eax eax
js r-xdata
cmp esi ecx
jb r-xdata
cmp eax 0x69
jle r-xdata
xor edi edi
add edi eax
jmp r-xdata
movzx eax [ esi + 0x2 ]
cmp ax [ esi + 0x4 ]
jne r-xdata
cmp eax 0x6c
jle r-xdata
add esi 0x4
jmp r-xdata
add edi eax
cmp eax 0x6d
jne r-xdata
sub_48e1bf
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
mov edi edx
mov esi [ ebx ]
cmp esi edi
ja r-xdata
or eax 0xffffffff
mov [ ebp - 0x4 ] 0x80
mov ecx [ ebp + 0x8 ]
mov [ ecx ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx ] ecx
jmp r-xdata
mov ecx [ ecx * 8 + r--data ]
add ecx esi
cmp ecx esi
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp esi edi
ja r-xdata
inc esi
cmp esi edi
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov eax esi
mov ecx 0x80
cdq
idiv ecx
movzx eax [ eax + r--data ]
shl eax 0x7
add eax edx
movzx ecx [ eax * 2 + r--data ]
movzx eax [ ecx * 8 + r--data ]
test eax eax
jne r-xdata
inc ecx
inc esi
cmp esi edi
jbe r-xdata
mov eax esi
cdq
idiv [ ebp - 0x4 ]
movzx eax [ eax + r--data ]
shl eax 0x7
add eax edx
movzx eax [ eax * 2 + r--data ]
cmp [ eax * 8 + r--data ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
dec ecx
mov [ ebx ] esi
mov [ eax ] ecx
xor eax eax
jmp r-xdata
mov eax [ eax * 8 + r--data ]
add eax esi
cmp eax ecx
jne r-xdata
sub_48e27b
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov [ ebp - 0x8 ] edi
mov esi [ edi ]
add esi 0x2
movzx eax [ esi ]
test ax ax
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x2e
xor edx edx
mov [ ebx ] edx
cmp eax 0x7b
jne r-xdata
mov [ ebp - 0x50 ] ax
xor eax eax
mov [ ebp - 0x4e ] ax
cmp [ esi + 0x2 ] 0x5e
jne r-xdata
movzx edi [ eax ]
add eax 0x2
mov [ ebp - 0x4 ] eax
movzx eax [ ebx ]
inc ebx
mov [ ebp - 0x10 ] edi
cmp di ax
mov edi [ ebp - 0x8 ]
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax edx
mov [ ebx ] 0x1
add esi 0x2
mov eax [ ebp - 0x4 ]
movzx edi [ eax ]
test di di
jne r-xdata
cmp ax [ ebp - 0x10 ]
sbb eax eax
neg eax
lea eax [ eax * 2 - 0x1 ]
test eax eax
je r-xdata
imul esi ecx 0x6
xor eax eax
mov ecx [ ebp + 0x8 ]
inc eax
movzx edx [ esi + r--data ]
mov [ ecx ] edx
mov ecx [ ebp + 0xc ]
movzx edx [ esi + r--data ]
mov [ ecx ] edx
jmp r-xdata
cmp ecx 0x7d
je r-xdata
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
mov [ ebp + eax * 2 - 0x50 ] cx
jmp r-xdata
mov [ ebp + eax * 2 - 0x50 ] cx
inc eax
cmp eax 0x1f
jl r-xdata
mov eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov eax 0x92
mov [ edi ] esi
mov [ ebp - 0xc ] eax
add esi 0x2
movzx ecx [ esi ]
test cx cx
je r-xdata
lea ecx [ eax + edx ]
lea eax [ ebp - 0x50 ]
sar ecx 0x1
mov [ ebp - 0x4 ] eax
imul eax ecx 0x6
movzx ebx [ eax + r--data ]
add ebx r--data
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x2f
jmp r-xdata
cmp edx eax
jl r-xdata
xor eax eax
mov [ edi ] esi
sub_48e399
movzx eax [ ecx ]
push ebx
push esi
push edi
push 0x30
pop edx
cmp ax dx
jb r-xdata
xor eax eax
push 0x39
pop edi
cmp ax di
ja r-xdata
push 0x2
pop esi
jmp r-xdata
add ecx esi
movzx eax [ ecx ]
cmp ax dx
jae r-xdata
cmp ax di
ja r-xdata
movzx eax [ ecx ]
push 0x7d
pop ebx
cmp ax bx
jne r-xdata
add ecx esi
cmp eax 0x2c
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
movzx eax [ ecx ]
cmp ax bx
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp ax dx
jb r-xdata
cmp ax di
jbe r-xdata
add ecx esi
movzx eax [ ecx ]
cmp ax dx
jae r-xdata
cmp ax di
ja r-xdata
xor eax eax
cmp [ ecx ] bx
sete al
jmp r-xdata
sub_48e40b
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
push 0x30
pop ecx
xor edx edx
mov [ ebp - 0x4 ] ebx
movzx eax [ esi ]
or edi 0xffffffff
cmp ax cx
jb r-xdata
push 0x7d
pop ecx
cmp [ esi ] cx
jne r-xdata
push 0x39
pop ebx
add esi 0x2
movzx eax [ esi ]
cmp ax cx
je r-xdata
mov edi edx
mov ebx [ ebp - 0x4 ]
test edx edx
js r-xdata
imul ecx edx 0xa
add esi 0x2
movzx edx ax
push 0x30
movzx eax [ esi ]
add ecx 0xffffffd0
add edx ecx
pop ecx
cmp ax cx
jae r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx ] edx
mov [ eax ] edi
push 0x30
pop ecx
xor edi edi
cmp ax cx
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x5
jmp r-xdata
cmp edx 0xffff
jle r-xdata
cmp ax bx
ja r-xdata
cmp edi edx
jge r-xdata
push 0x39
pop ebx
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
mov [ eax ] 0x4
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test edi edi
js r-xdata
imul ecx edi 0xa
add esi 0x2
movzx edi ax
push 0x30
movzx eax [ esi ]
add ecx 0xffffffd0
add edi ecx
pop ecx
cmp ax cx
jae r-xdata
cmp edi 0xffff
jg r-xdata
cmp ax bx
ja r-xdata
sub_48e4d2
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov eax [ eax + 0x8 ]
add edx eax
mov al [ edx + esi ]
not al
or [ esi + ecx ] al
inc esi
cmp esi 0x20
jb r-xdata
pop esi
pop ebp
retn
sub_48e4f1
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov eax [ eax + 0x8 ]
add edx eax
mov al [ edx + esi ]
or [ esi + ecx ] al
inc esi
cmp esi 0x20
jb r-xdata
pop esi
pop ebp
retn
sub_48e50e
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] esi
mov eax [ ebx + 0xc ]
push edi
mov ecx [ eax + ecx * 4 ]
mov eax [ ebx + 0x78 ]
lea edi [ eax + ecx * 2 ]
test edx edx
jns r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
test edx edx
jle r-xdata
cmp [ ebx + 0x50 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub esi [ ebp - 0x8 ]
sar esi 0x1
mov eax esi
mov ebx [ ebx + 0x7c ]
test edx edx
jle r-xdata
lea eax [ edi + edx * 2 ]
mov [ ebp + 0x8 ] eax
cmp edi eax
jae r-xdata
push 0xfffffffe
pop eax
jmp r-xdata
mov cx [ edi ]
add edi 0x2
mov ax [ esi ]
add esi 0x2
cmp cx ax
jne r-xdata
sub edi esi
mov eax [ ebx + 0x7c ]
mov [ ebp - 0x4 ] eax
test edx edx
jg r-xdata
movzx eax [ edi + esi ]
movzx ecx [ esi ]
mov [ ebp + 0x8 ] eax
cmp eax 0xff
ja r-xdata
movzx ecx [ esi ]
add esi 0x2
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
dec edx
cmp esi ebx
jae r-xdata
cmp ecx 0xff
ja r-xdata
mov eax [ ebx + 0x3c ]
mov ebx [ ebp + 0x8 ]
movzx ebx [ eax + ebx ]
mov [ ebp + 0x8 ] ebx
mov ebx [ ebp + 0xc ]
movzx ebx [ edi ]
add edi 0x2
mov eax ebx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
movzx eax [ esi ]
and ecx edx
shl ecx 0xa
and eax edx
or ecx eax
add ecx 0x10000
add esi 0x2
cmp [ ebp + 0x8 ] ecx
jne r-xdata
mov eax [ ebx + 0x3c ]
movzx ecx [ eax + ecx ]
mov eax ebx
mov [ ebp + 0xc ] 0x80
cdq
idiv [ ebp + 0xc ]
movzx eax [ eax + r--data ]
shl eax 0x7
add eax edx
movzx edx [ eax * 2 + r--data ]
cmp ecx ebx
je r-xdata
movzx eax [ edi ]
and ebx edx
shl ebx 0xa
and eax edx
or ebx eax
add ebx 0x10000
add edi 0x2
add esi 0x2
test edx edx
jg r-xdata
cmp edi [ ebp + 0x8 ]
jae r-xdata
mov eax [ edx * 8 + r--data ]
add eax ebx
cmp ecx eax
je r-xdata
dec edx
cmp esi [ ebx + 0x7c ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
movzx eax [ edx * 8 + r--data ]
lea eax [ eax * 4 + r--data ]
mov edx 0x3ff
cmp esi eax
jae r-xdata
add eax 0x4
cmp ecx edx
jne r-xdata
mov edx [ eax ]
cmp ecx edx
jb r-xdata
sub_48e6a9
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
push ebx
mov ebx edx
push esi
push edi
test eax eax
js r-xdata
push 0xfffffff9
cmp eax [ ebp + 0x8 ]
jge r-xdata
add eax eax
mov [ ebp + 0xc ] eax
mov esi [ ebx + eax * 4 + 0x4 ]
sub esi [ ebx + eax * 4 ]
lea eax [ esi * 2 + 0x2 ]
push eax
call [ r--data ]
mov edi eax
pop ecx
test edi edi
jne r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esi + esi ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebx + ecx * 4 ]
lea ecx [ eax + ecx * 2 ]
push ecx
push edi
call sub_420fc0
mov ecx [ ebp + 0x10 ]
add esp 0xc
xor eax eax
mov [ edi + esi * 2 ] ax
mov eax esi
mov [ ecx ] edi
jmp r-xdata
push 0xfffffffa
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop eax
sub_48e719
sub ecx edx
push esi
movzx esi [ edx ]
add edx 0x2
cmp ax si
je r-xdata
cmp [ edx ] ax
je r-xdata
movzx eax [ ecx + edx ]
test ax ax
jne r-xdata
cmp si ax
pop esi
sbb eax eax
neg eax
lea eax [ eax * 2 - 0x1 ]
retn
xor eax eax
pop esi
retn
sub_48e749
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
je r-xdata
xor eax eax
sub ecx edx
sbb eax eax
neg eax
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
retn
movzx esi [ ecx + edx ]
dec eax
movzx edi [ edx ]
lea edx [ edx + 0x2 ]
cmp di si
jne r-xdata
sub_48e77e
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x2
mov esi ecx
pop edi
sub esi edi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
movzx ecx [ esi ]
mov ax [ esi ]
mov ebx 0xfc00
and ax bx
mov ecx 0xdc00
cmp ax cx
jne r-xdata
cmp ecx 0xa
je r-xdata
cmp ecx 0xa
je r-xdata
movzx ecx [ esi ]
mov eax ecx
and eax ebx
cmp eax 0xd800
jne r-xdata
sub esi edi
xor edx edx
cmp esi [ ebp + 0x8 ]
jbe r-xdata
jbe r-xdata
cmp ecx 0xd
je r-xdata
cmp edx edi
jne r-xdata
movzx eax [ esi + 0x2 ]
mov ebx 0x3ff
and ecx ebx
and eax ebx
shl ecx 0xa
or ecx eax
add ecx 0x10000
jmp r-xdata
lea edi [ edx + 0x1 ]
cmp [ esi - 0x2 ] 0xd
je r-xdata
xor eax eax
jmp r-xdata
xor edx edx
inc edx
cmp ecx 0xd
jbe r-xdata
mov ecx [ ebp + 0xc ]
xor edx edx
inc edx
mov [ ecx ] edx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] edi
lea eax [ edx + 0x1 ]
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0xc ]
mov [ eax ] edx
cmp ecx 0x85
je r-xdata
mov eax edx
jmp r-xdata
lea eax [ ecx - 0x2028 ]
cmp eax edx
ja r-xdata
sub_48e837
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx edx
xor edx edx
push esi
inc edx
push edi
movzx eax [ ebx ]
mov edi ecx
movzx esi al
and esi edx
mov [ ebp - 0x4 ] eax
cmp edi 0x100
jae r-xdata
push 0x2
pop ecx
add ebx ecx
and al cl
je r-xdata
test al 0x4
jne r-xdata
movzx ecx [ ebx ]
test cx cx
je r-xdata
add ebx 0x20
test al 0x2
je r-xdata
test al 0x2
je r-xdata
mov eax esi
mov eax edi
mov [ ebp - 0x4 ] 0x80
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] 0x3
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax edi
and ecx 0x7
shr eax 0x3
shl edx cl
test [ eax + ebx + 0x2 ] dl
je r-xdata
and ecx 0x7
shr edi 0x3
shl dl cl
push 0x0
pop eax
test [ edi + ebx + 0x2 ] dl
setne al
jmp r-xdata
cmp cx ax
jne r-xdata
movzx ecx [ ebx ]
add ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor eax eax
test esi esi
sete al
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
movzx eax [ eax + r--data ]
shl eax 0x7
add eax edx
xor edx edx
cmp cx [ ebp - 0xc ]
movzx ecx [ ebx ]
sete dl
movzx eax [ eax * 2 + r--data ]
cmp ecx 0xd
ja r-xdata
movzx ecx [ ebx ]
add ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp edi ecx
je r-xdata
mov eax ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
xor eax eax
jmp r-xdata
jmp [ ecx * 4 + jump_table_48ec43 ]
movzx edx [ ebx ]
mov eax ecx
and eax 0xfc00
push 0x2
cmp eax 0xd800
jne r-xdata
jmp r-xdata
movzx eax [ ebx ]
and ecx 0x3ff
and eax 0x3ff
shl ecx 0xa
or ecx eax
push 0x2
pop eax
add ecx 0x10000
add ebx eax
test edx edx
jne r-xdata
mov al [ eax * 8 + r--data ]
cmp al 0x9
je r-xdata
movzx eax [ eax * 8 + r--data ]
movzx ecx [ ebx + 0x2 ]
sub ecx [ eax * 4 + r--data ]
neg ecx
sbb ecx ecx
inc ecx
movzx eax [ eax * 8 + r--data ]
movzx eax [ eax * 8 + r--data ]
jmp r-xdata
movzx eax [ eax * 8 + r--data ]
xor ecx ecx
inc ecx
mov eax [ eax * 4 + r--data ]
cmp eax ecx
je r-xdata
mov ecx 0x180e
cmp edi ecx
ja r-xdata
movzx eax [ eax * 8 + r--data ]
xor ecx ecx
inc ecx
mov eax [ eax * 4 + r--data ]
cmp eax ecx
je r-xdata
cmp edi 0xa0
jae r-xdata
mov cl [ eax * 8 + r--data ]
movzx eax cl
mov eax [ eax * 4 + r--data ]
cmp eax 0x6
je r-xdata
mov cl [ eax * 8 + r--data ]
cmp cl 0x1b
je r-xdata
movzx eax [ eax * 8 + r--data ]
mov eax [ eax * 4 + r--data ]
cmp eax 0x4
je r-xdata
mov edx [ ebp - 0x4 ]
cmp edi edx
jbe r-xdata
pop eax
movzx eax [ ebx ]
mov edx 0x3ff
and ecx edx
and eax edx
shl ecx 0xa
or ecx eax
pop eax
add ecx 0x10000
add ebx eax
jmp r-xdata
movzx ecx [ ebx ]
test cx cx
jne r-xdata
jmp r-xdata
xor eax eax
inc eax
cmp al 0x5
je r-xdata
je r-xdata
cmp ecx edx
jmp r-xdata
xor ecx ecx
cmp [ ebx + 0x2 ] ax
mov eax ecx
jmp r-xdata
cmp eax 0x3
jne r-xdata
cmp edi 0x2000
jb r-xdata
je r-xdata
cmp eax 0x3
je r-xdata
lea eax [ edi - 0xd800 ]
mov ecx 0x7ff
cmp ecx eax
sbb eax eax
neg eax
jmp r-xdata
cmp edi 0x24
je r-xdata
xor eax eax
jmp r-xdata
test eax eax
jne r-xdata
cmp cl 0x1c
je r-xdata
cmp edi 0x100
jae r-xdata
xor eax eax
add ebx 0x2
inc eax
push 0x2
cmp cx ax
pop eax
jne r-xdata
jmp r-xdata
cmp edi ecx
jb r-xdata
movzx eax [ ebx ]
and edx 0x3ff
and eax 0x3ff
shl edx 0xa
or edx eax
push 0x2
add edx 0x10000
pop eax
jmp r-xdata
movzx edx [ ebx ]
add ebx eax
mov eax edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
add ebx 0x4
cmp al 0x8
jmp r-xdata
cmp eax edx
movzx eax [ eax * 8 + r--data ]
xor ecx ecx
cmp [ eax * 4 + r--data ] 0x6
jmp r-xdata
cmp edi 0x200a
jbe r-xdata
cmp edi 0x9
jb r-xdata
cmp edi 0x5f
je r-xdata
cmp edi 0x40
je r-xdata
cmp cl 0x1
jne r-xdata
movzx eax cl
cmp [ eax * 4 + r--data ] 0x0
jne r-xdata
cmp eax 0x5
add ebx eax
je r-xdata
sete cl
jmp r-xdata
cmp edi 0x2027
jbe r-xdata
cmp edi 0xd
jbe r-xdata
jmp r-xdata
cmp edi 0x60
jmp r-xdata
cmp edi 0x61c
je r-xdata
cmp cl 0x1
jne r-xdata
cmp edi 0x2029
jbe r-xdata
cmp edi 0x20
je r-xdata
cmp edi 0x180e
cmp edi 0x61c
jmp r-xdata
cmp edi 0x202f
je r-xdata
cmp edi 0x85
je r-xdata
cmp edi 0x2066
jb r-xdata
je r-xdata
cmp edi 0x205f
je r-xdata
cmp edi 0xa0
je r-xdata
cmp edi 0x2069
jbe r-xdata
cmp edi 0x3000
cmp edi 0x1680
jmp r-xdata
je r-xdata
sub_48ec7b
cmp ecx 0xffff
ja r-xdata
sub ecx 0x10000
mov eax ecx
and ecx 0x3ff
shr eax 0xa
or ecx 0xdc00
or eax 0xd800
mov [ edx ] ax
push 0x2
mov [ edx + 0x2 ] cx
pop eax
retn
xor eax eax
mov [ edx ] cx
inc eax
retn
sub_48ecb1
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x2
pop edi
test edx edx
jns r-xdata
mov esi ecx
jmp r-xdata
xor eax eax
mov edx ecx
cmp [ ecx ] ax
je r-xdata
test edx edx
jg r-xdata
sub edx ecx
sar edx 0x1
add edx edi
cmp [ edx ] ax
jne r-xdata
movzx ebx [ esi ]
dec edx
mov eax ebx
and eax 0xf800
cmp eax 0xd800
jne r-xdata
xor eax eax
add esi edi
test ebx 0x400
jne r-xdata
push 0x3
pop edi
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor edi edi
inc edi
jmp r-xdata
add esi edi
mov ebx 0xfc00
dec edx
mov ax [ esi ]
and ax bx
mov ebx 0xdc00
cmp ax bx
jne r-xdata
sub esi ecx
mov eax edi
mov ecx [ ebp + 0x8 ]
sar esi 0x1
mov [ ecx ] esi
jmp r-xdata
sub_401000
mov ecx rw-data
call sub_43b441
push sub_43b6d9
call sub_422ec0
pop ecx
retn
sub_401016
call sub_404ad2
push j_sub_404ab6
call sub_422ec0
pop ecx
retn
sub_401027
call sub_404a10
push j_sub_4049ff
call sub_422ec0
pop ecx
retn
sub_401038
push j_sub_420c53
call sub_422ec0
pop ecx
retn
sub_401044
call sub_403ca8
push j_sub_40363c
call sub_422ec0
pop ecx
retn
sub_401055
call sub_402649
push j_sub_40277c
call sub_422ec0
pop ecx
retn
sub_401066
push ecx
call sub_40f8cf
push sub_43b6fd
call sub_422ec0
pop ecx
retn
sub_401078
mov eax [ rw-data ]
push ecx
mov eax [ eax + 0x4 ]
add eax rw-data
push eax
call sub_4071eb
push j_sub_407336
call sub_422ec0
pop ecx
retn
sub_401098
call sub_404233
push j_sub_40436a
call sub_422ec0
pop ecx
retn
sub_4010a9
call sub_4085f4
push j_sub_408530
call sub_422ec0
pop ecx
retn
sub_4010ba
call sub_415e86
push j_sub_415d41
call sub_422ec0
pop ecx
retn
sub_4010cb
mov ecx rw-data
call sub_4077c7
push sub_43b730
call sub_422ec0
pop ecx
retn
sub_401287
push ebp
mov ebp esp
pop ebp
jmp sub_4018f4
sub_4022ac
add al 0x5
push es
add eax 0x6060605
push es
add [ esi ] eax
add eax 0x6060601
add al [ 0xffffffffcc030202 ]
int3
sub_4032af
push esi
mov esi ecx
push [ esi ]
call j_sub_422ed5#3
push esi
call j_sub_422ed5#3
pop ecx
pop ecx
mov eax esi
pop esi
retn 0x4
sub_403569
push esi
mov esi ecx
mov [ esi ] r--data
call sub_403553
push [ esi + 0x4 ]
call j_sub_422ed5#3
pop ecx
pop esi
retn
sub_403633
push ebp
mov ebp esp
pop ebp
jmp sub_40366a
sub_40363c
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx rw-data
call sub_405a64
mov ecx rw-data
call sub_405a64
mov ecx rw-data
jmp sub_405a64
push eax
call [ DestroyIcon@IAT ]
sub_404665
push esi
mov esi ecx
lea ecx [ esi + 0x4 ]
call sub_405a64
push esi
call j_sub_422ed5#3
pop ecx
mov eax esi
pop esi
retn 0x4
sub_4049ff
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
call j_sub_422ed5#3
pop ecx
sub_404a94
mov eax [ rw-data ]
test al 0x1
jne r-xdata
mov eax rw-data
retn
or eax 0x1
push sub_43b6e8
mov [ rw-data ] eax
call sub_422ec0
pop ecx
sub_404ab6
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
pop esi
retn
lea ecx [ esi + 0xc ]
call sub_405a64
push esi
call j_sub_422ed5#3
pop ecx
sub_4053db
test [ ecx + 0x28 ] 0x8000
je r-xdata
retn
mov eax [ ecx + 0x30 ]
push 0x0
cdq
push edx
push eax
call sub_405c4e
sub_405934
push esi
mov esi ecx
call sub_405dcf
lea ecx [ esi + 0x18 ]
call sub_405a64
mov ecx esi
call sub_405dcf
push [ esi + 0x4 ]
call j_sub_422ed5#3
pop ecx
pop esi
retn
sub_405a4b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push 0x10
pop eax
jmp r-xdata
add eax 0xf
and eax 0xfffffff0
pop ebp
retn 0x4
sub_4085f4
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] ax
mov eax rw-data
retn
sub_409382
mov eax [ ecx ]
mov ecx [ eax ]
xor eax eax
inc eax
cmp ecx eax
jne r-xdata
cmp ecx 0x7fffffff
je r-xdata
retn
xor eax eax
retn
sub_40997f
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
push ecx
call sub_407b3d
and [ esi + 0x8 ] 0x0
pop esi
retn
pop esi
retn
sub_409dcb
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x8 ] 0x0
call sub_409ac0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40f33c
imul esi edx 0x40
add al bl
jmp sub_40f383
sub_41245d
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x1b
call sub_4108ab
pop ebp
retn 0x8
sub_415e86
push edi
push 0x40
mov edx rw-data
xor eax eax
pop ecx
mov edi edx
[ edi ]
and [ rw-data ] eax
mov eax edx
pop edi
retn
j_sub_422ed5#2
jmp sub_422ed5
sub_416181
push esi
mov esi ecx
mov [ esi ] r--data
call sub_416154
push [ esi + 0x4 ]
call j_sub_422ed5#3
pop ecx
pop esi
retn
sub_4162e0
push 0x10
lea eax [ ecx + 0x4 ]
pop edx
and [ eax ] 0x0
lea eax [ eax + 0x8 ]
dec edx
jne r-xdata
mov eax ecx
retn
sub_416493
push ebp
mov ebp esp
pop ebp
jmp sub_42588c
sub_41fa94
cmp [ ecx + 0x4 ] 0x2
jne r-xdata
cmp [ ecx + 0xd ] 0x0
mov eax [ ecx + 0x8 ]
mov eax [ eax + 0x10 ]
je r-xdata
mov eax [ ecx ]
retn
mov eax [ eax + 0x10 ]
retn
sub_41faad
cmp [ ecx + 0x4 ] 0x1
je r-xdata
mov eax [ ecx ]
retn
cmp [ ecx + 0xd ] 0x0
mov eax [ ecx + 0x8 ]
jne r-xdata
mov eax [ eax + 0x10 ]
retn
retn
sub_41fdec
xor edx edx
xor eax eax
inc eax
mov [ ecx + 0x10 ] edx
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x18 ] edx
mov [ ecx + 0x2c ] eax
mov eax ecx
mov [ ecx + 0x20 ] edx
mov [ ecx + 0x28 ] edx
retn
sub_41fe8c
xor eax eax
mov [ ecx ] r--data
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] ax
mov eax ecx
retn
sub_41ff5c
push esi
mov esi ecx
lea ecx [ esi + 0x20 ]
call sub_409a20
mov ecx esi
call sub_409a20
push esi
call j_sub_422ed5#3
pop ecx
mov eax esi
pop esi
retn 0x4
sub_42001d
cmp [ ecx + 0x9 ] 0x0
mov eax [ ecx + 0x4 ]
jne r-xdata
mov eax [ eax + 0x4 ]
retn
retn
sub_420125
push esi
mov esi ecx
lea ecx [ esi + 0x68 ]
call sub_405a64
lea ecx [ esi + 0x34 ]
call sub_420140
mov ecx esi
pop esi
jmp sub_420140
sub_42015c
push esi
mov esi ecx
lea ecx [ esi + 0x4 ]
call sub_4077c7
lea ecx [ esi + 0x14 ]
call sub_4077c7
lea ecx [ esi + 0x24 ]
call sub_4077c7
mov eax esi
pop esi
retn
sub_420646
call sub_409399
test al al
jne r-xdata
xor eax eax
inc eax
retn
mov ecx edx
call sub_409399
test al al
jne r-xdata
xor eax eax
retn
sub_420661
call sub_409399
test al al
je r-xdata
xor eax eax
retn
mov ecx edx
call sub_409399
test al al
je r-xdata
xor eax eax
inc eax
retn
sub_42067c
call sub_408cd0
xor ecx ecx
test al al
sete cl
mov al cl
retn
sub_420732
mov eax [ rw-data ]
test al 0x1
je r-xdata
or eax 0x1
mov ecx rw-data
mov [ rw-data ] eax
call sub_420756
jmp r-xdata
fld [ rw-data ]
retn
sub_420cf7
push esi
mov esi ecx
and [ esi + 0x8 ] 0x0
lea ecx [ esi + 0x18 ]
and [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x1
call sub_4077c7
lea ecx [ esi + 0x38 ]
call sub_4077c7
mov eax esi
pop esi
retn
sub_420d1d
push esi
mov esi ecx
lea ecx [ esi + 0x18 ]
call sub_405a64
lea ecx [ esi + 0x8 ]
call sub_405a64
push esi
call j_sub_422ed5#3
pop ecx
mov eax esi
pop esi
retn 0x4
sub_420d3d
push esi
mov esi ecx
lea ecx [ esi + 0x8 ]
call sub_4077c7
lea ecx [ esi + 0x18 ]
call sub_4077c7
mov eax esi
pop esi
retn
sub_420d7f
add ecx 0x8
jmp sub_405a64
sub_420ee5
push ebp
mov ebp esp
pop ebp
jmp sub_420f36
sub_420eee
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x1
push 0x0
call sub_4285a4
pop ecx
pop ecx
jmp sub_4285c3
call eax
sub_420f10
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_42862e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_420f2b
mov [ ecx ] r--data
jmp sub_428651
sub_422e02
call sub_4233a0
retn
sub_422ec0
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_422dc4
neg eax
pop ecx
sbb eax eax
neg eax
dec eax
pop ebp
retn
j_sub_422ed5
jmp j_sub_422ed5#3
sub_42321f
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4231eb
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_423251
push 0x1
push 0x1
push 0x0
call sub_4233a9
add esp 0xc
retn
sub_423260
push 0x1
push 0x0
push 0x0
call sub_4233a9
add esp 0xc
retn
sub_4232f3
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_4233a9
add esp 0xc
pop ebp
retn
sub_423397
push 0x8
call sub_429d8b
pop ecx
retn
sub_4233a0
push 0x8
call sub_429ef5
pop ecx
retn
sub_4234c3
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_429ef5
pop ecx
sub_4234d8
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_4233a9
add esp 0xc
pop ebp
retn
sub_423547
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_423713
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_42af1e
add esp 0xc
pop ebp
retn
sub_423727
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_42ac36
add esp 0xc
pop ebp
retn
sub_423775
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_42373b
pop ecx
pop ecx
pop ebp
retn
sub_42379a
push ebp
mov ebp esp
mov eax 0x80
cmp [ ebp + 0x8 ] ax
sbb eax eax
neg eax
pop ebp
retn
sub_4237bd
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_42af48
pop ecx
pop ecx
pop ebp
retn
sub_4237ce
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_42af48
pop ecx
pop ecx
pop ebp
retn
sub_423ea6
call sub_426d88
add eax 0x20
push eax
push 0x1
call sub_426e37
pop ecx
pop ecx
retn
sub_423f45
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_423f5d
add esp 0x10
pop ebp
retn
sub_42409a
push 0xc
push r--data
call sub_428a80
call sub_429b2c
and [ ebp - 0x4 ] 0x0
push [ eax + 0x58 ]
call [ eax + 0x54 ]
push eax
call sub_4240db
sub_4240cf
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_4232f3
int3
sub_424768
push esi
call sub_42d72c
pop ecx
retn
sub_424a4d
push esi
call sub_426dfd
pop ecx
retn
sub_424b5f
push edi
call sub_426dfd
pop ecx
retn
sub_424c11
push 0x1
call sub_424c73
pop ecx
retn
sub_424c6b
push esi
call sub_426dfd
pop ecx
retn
sub_424d1b
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_426e37
pop ecx
pop ecx
retn
sub_424d4e
push 0x1
call sub_429ef5
pop ecx
retn
sub_424e08
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_424d57
pop ecx
pop ecx
pop ebp
retn
sub_4254a2
push esi
call sub_426dfd
pop ecx
retn
sub_425585
push esi
call sub_426dfd
pop ecx
retn
sub_425752
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_42576d
add esp 0x14
pop ebp
retn
sub_4257f6
push esi
call sub_426dfd
pop ecx
retn
sub_425a38
push esi
call sub_426dfd
pop ecx
retn
sub_425e34
push esi
call sub_426dfd
pop ecx
retn
sub_425edb
push 0xc
push r--data
call sub_428a80
call sub_429b2c
and [ ebp - 0x4 ] 0x0
push [ eax + 0x58 ]
call [ eax + 0x54 ]
pop ecx
call sub_425f1c
sub_425f10
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_4232f3
int3
sub_4265cf
lea edx [ esp + 0x4 ]
call sub_430315
sub_4266ff
lea edx [ esp + 0x4 ]
call sub_430315
sub_42682f
lea edx [ esp + 0x4 ]
call sub_430315
sub_4268d0
mov edx r--data
jmp sub_431e2b
sub_4268da
mov edx r--data
jmp sub_431db0
sub_4268e4
fxch st1
fprem
fwait
fnstsw ax
fwait
sahf
jpe r-xdata
fstp st1
retn
sub_426900
sub esp 0xc
fst [ esp ]
call sub_430358
call sub_42691d
add esp 0xc
retn
sub_426914
lea edx [ esp + 0x4 ]
call sub_430315
sub_426d61
call sub_424c11
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_422ed5
and [ rw-data ] 0x0
pop ecx
retn
call sub_433ade
sub_427d74
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_427c13
add esp 0x18
pop ebp
retn
sub_427ee6
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
push ecx
push eax
call sub_42d16d
pop ecx
pop ecx
retn
sub_427efa
mov esp [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_423251
push esi
call sub_4232f3
sub_427f14
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
call sub_428ac5
retn
sub_427f23
push ebp
mov ebp esp
cmp [ rw-data ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
call sub_42a348
push 0xff
call sub_42321f
call sub_42a2eb
_start
call sub_435007
jmp sub_427dd3
sub_4285a4
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ rw-data ]
not edx
mov ecx [ ebp + 0x8 ]
and edx eax
and ecx [ ebp + 0xc ]
or edx ecx
mov [ rw-data ] edx
pop ebp
retn
sub_428606
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_428613
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] r--data
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
mov eax ecx
mov [ ecx + 0x8 ] 0x0
pop ebp
retn 0x8
sub_428651
mov [ ecx ] r--data
jmp sub_4286f2
sub_4286f2
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_422ed5
pop ecx
sub_42870e
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_42877e
push ecx
mov [ ecx ] r--data
call sub_4351f1
pop ecx
retn
sub_428ac5
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_428cfc
call [ GetProcessHeap@IAT ]
xor ecx ecx
mov [ rw-data ] eax
test eax eax
setne cl
mov eax ecx
retn
sub_428efe
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_429277
push 0xc
call sub_429ef5
pop ecx
retn
sub_4292cb
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_429628
pop ecx
mov [ rw-data ] 0x1
sub_42961f
push 0xd
call sub_429ef5
pop ecx
retn
sub_42979a
push 0xd
call sub_429ef5
pop ecx
retn
sub_4299bb
mov eax [ rw-data ]
retn
sub_429ae1
push 0xd
call sub_429ef5
pop ecx
retn
sub_429aed
push 0xc
call sub_429ef5
pop ecx
retn
sub_429b2c
push esi
call sub_429b44
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push 0x10
call sub_423235
sub_429c54
push 0xd
call sub_429ef5
pop ecx
retn
sub_429c5d
push 0xc
call sub_429ef5
pop ecx
retn
sub_429cdc
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
jmp sub_429dbf
push eax
call sub_429f28
or [ rw-data ] 0xffffffff
pop ecx
sub_429d42
push 0xc
call sub_429ef5
pop ecx
retn
sub_429eb3
push 0xa
call sub_429ef5
pop ecx
retn
sub_429ef5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_429f0a
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
pop ebp
jmp [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_429f28
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsFree@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_429f47
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsGetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_42a2a4
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ SetUnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_42a2b2
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ Sleep@IAT ]
pop ebp
retn
sub_42a2c0
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop ebp
retn
sub_42a2d5
push ebp
mov ebp esp
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push [ ebp + 0x8 ]
call [ UnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_42a5e9
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_42a651
push esi
xor esi esi
push [ esi + rw-data ]
call [ EncodePointer@IAT ]
mov [ esi + rw-data ] eax
add esi 0x4
cmp esi 0x28
jb r-xdata
pop esi
retn
sub_42a670
push 0x8
push r--data
call sub_428a80
call sub_429b2c
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_4285c3
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_42a690
xor eax eax
inc eax
retn
sub_42a6a4
push sub_42a670
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_42a6b5
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_42a6c2
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_42a85f
test ebx ebx
je r-xdata
retn
push 0x0
call sub_429ef5
pop ecx
sub_42a8d3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_42ac36
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42aa55
add esp 0x10
pop ebp
retn
sub_42c776
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_435a76
retn
sub_42c785
push ebp
mov ebp esp
call sub_42c79c
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_437bb4
sub_42c79c
mov eax sub_437116
mov [ rw-data ] sub_437a02
mov [ rw-data ] eax
mov [ rw-data ] sub_437a93
mov [ rw-data ] sub_437aed
mov [ rw-data ] sub_437b72
mov [ rw-data ] eax
mov [ rw-data ] sub_437137
mov [ rw-data ] sub_437aab
mov [ rw-data ] sub_437a13
mov [ rw-data ] sub_437afe
retn
sub_42d082
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp [ eax ] 0xc000001d
je r-xdata
xor eax eax
retn
sub_42d0c9
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_42d15d
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_42d40b
push 0xa
call sub_429ef5
pop ecx
retn
sub_42d4ec
push 0xa
call sub_429ef5
pop ecx
retn
sub_42d5b4
push 0xb
call sub_429ef5
pop ecx
retn
sub_42d9fd
push 0xb
call sub_429ef5
pop ecx
retn
sub_42dacd
push esi
call sub_42d72c
pop ecx
retn
sub_42f08e
push edi
call sub_42d72c
pop ecx
retn
sub_42f328
push 0xa
call IsProcessorFeaturePresent
mov [ rw-data ] eax
xor eax eax
retn
sub_42f340
push ebp
mov ebp esp
sub esp 0x10
and esp 0xfffffff0
fxch st1
fstp [ esp ]
fstp [ esp + 0x8 ]
call sub_42f359
leave
retn
j_sub_4301ab
jmp sub_4301ab
sub_42ff08
fstp st0
fstp st0
fld [ r--data ]
mov [ ebp - 0x90 ] 0x2
retn
sub_42ff34
mov [ ebp - 0x90 ] 0x2
fstp st0
fld [ r--data ]
retn
sub_42ff44
or cl cl
jne r-xdata
jmp r-xdata
retn
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_42ff49
fldlg2
jmp r-xdata
fxch st1
or cl cl
jne r-xdata
jmp sub_430246
fyl2x
retn
sub_42ff4d
fldln2
fxch st1
or cl cl
jne r-xdata
jmp sub_430246
fyl2x
retn
j_sub_4301ab#2
jmp sub_4301ab
sub_42ff99
fstp st0
jmp r-xdata
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_42ffcf
fstp st0
fstp st0
fld [ r--data ]
mov [ ebp - 0x90 ] 0x3
retn
sub_42ffe1
or cl cl
jne r-xdata
jmp sub_4301a6
fstp st0
fld [ r--data ]
retn
sub_430198
fxch st1
fstp st0
retn
sub_4301a6
fstp st0
fldz
retn
sub_4301ab
fstp st0
fstp st0
fld1
retn
sub_4301b2
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
fadd [ r--data ]
retn
mov [ ebp - 0x90 ] 0x7
retn
sub_4301dd
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x90 ] 0x7
jmp r-xdata
faddp st1
retn
sub_430246
fstp st0
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_430259
mov [ ebp - 0x90 ] 0x1
or cl cl
retn
sub_430263
or cl cl
je r-xdata
retn
fchs
sub_4302d0
fld st0
frndint
fsubr st1
fxch st1
fchs
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_4302e5
mov edx [ esp + 0x4 ]
and edx 0x300
or edx 0x7f
mov [ esp + 0x6 ] dx
fldcw [ esp + 0x6 ]
retn
sub_4302fc
test eax 0x80000
je r-xdata
fadd [ r--data ]
mov eax 0x1
retn
mov eax 0x7
retn
sub_430358
mov eax [ esp + 0x8 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ esp + 0x8 ]
retn
retn
sub_43077e
push 0x1
call sub_429ef5
pop ecx
retn
sub_430b06
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_430a30
add esp 0xc
pop ebp
retn 0x4
sub_430b39
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_438855
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_430b6b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_430a30
add esp 0xc
pop ebp
retn 0x8
sub_430c35
push esi
call sub_42d72c
pop ecx
retn
sub_430fb3
push esi
call sub_42d72c
pop ecx
retn
sub_431876
push esi
call sub_42d72c
pop ecx
retn
sub_431a17
push edi
call sub_42d72c
pop ecx
retn
sub_431af0
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_431b0e
leave
retn
sub_431b08
movlpd xmm0 [ esp + 0x4 ]
sub_431e6c
and [ ebp - 0x2c8 ] 0xfe
sub_432030
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_43204e
leave
retn
sub_432048
movlpd xmm0 [ esp + 0x4 ]
sub_4322a0
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm7 [ esp ]
call sub_4322be
leave
retn
sub_4322b8
movq xmm7 [ esp + 0x4 ]
sub_432590
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_4325ae
leave
retn
sub_4325a8
movlpd xmm0 [ esp + 0x4 ]
sub_432af0
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_432b0e
leave
retn
sub_432b08
movlpd xmm0 [ esp + 0x4 ]
sub_433070
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_43308e
leave
retn
sub_433088
movlpd xmm0 [ esp + 0x4 ]
j_sub_4332d0
jmp sub_4332d0
sub_4332d0
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_4332ee
leave
retn
sub_4332e8
movlpd xmm0 [ esp + 0x4 ]
sub_433480
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_43349e
leave
retn
sub_433498
movlpd xmm0 [ esp + 0x4 ]
sub_433b72
push 0x1
call sub_429ef5
pop ecx
retn
sub_433b81
mov eax rw-data
retn
sub_433b8d
mov eax rw-data
retn
sub_433e83
push 0x6
call sub_429ef5
pop ecx
retn
sub_433ecd
push 0x6
call sub_429ef5
pop ecx
retn
sub_43434a
push 0x7
call sub_429ef5
pop ecx
retn
sub_434c36
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_431ac0
sub_434c8d
push sub_434c4c
call sub_42a2a4
pop ecx
xor eax eax
retn
sub_434fba
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_435259
push 0xe
call sub_429ef5
pop ecx
retn
sub_435a13
call sub_429b2c
mov edx eax
mov eax [ edx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov ecx [ rw-data ]
test [ edx + 0x70 ] ecx
jne r-xdata
call sub_429200
sub_435de2
push 0x2
call sub_423235
sub_436110
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_435fde
add esp 0x10
pop ebp
retn
sub_4361aa
mov ecx [ rw-data ]
xor eax eax
or ecx 0x1
cmp [ rw-data ] ecx
sete al
retn
sub_43643a
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_436345
add esp 0x10
pop ebp
retn
sub_437519
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_437688
add esp 0x18
pop ebp
retn
sub_437a02
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_437a13
pop ecx
pop ecx
pop ebp
retn
sub_437a93
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_437aab
add esp 0x10
pop ebp
retn
sub_437aed
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_437afe
pop ecx
pop ecx
pop ebp
retn
sub_437bdb
xor eax eax
retn
sub_437d45
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_437c21
add esp 0x14
pop ebp
retn
sub_437e69
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
frndint
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_438721
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_437f05
add esp 0x18
pop ebp
retn
sub_438829
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_438760
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_438874
call eax
retn
sub_438877
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_4398c2
add esp 0xc
pop ebp
retn
sub_4398ec
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_439903
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_439b67
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_439b7f
add esp 0x10
pop ebp
retn
sub_43b14a
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43b15f
add esp 0xc
pop ebp
retn
sub_43b4b7
push esi
mov esi ecx
lea eax [ esi + 0x14 ]
push eax
call [ DeleteCriticalSection@IAT ]
lea ecx [ esi + 0x2c ]
pop esi
jmp sub_43b4cd
sub_43b4cd
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi ]
call sub_422ed5
and [ esi ] 0x0
pop ecx
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_43b5ab
mov eax 0x80004001
retn 0xc
sub_43b5b3
mov eax 0x80004001
retn 0x14
sub_43b5bb
or eax 0xffffffff
retn 0x4
sub_43b5c1
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_43b5d2
xor eax eax
inc eax
retn 0x4
sub_43b5d8
xor eax eax
inc eax
retn 0x8
sub_43b5de
mov eax 0x80020006
retn 0x18
sub_43b5e6
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
and [ eax ] 0x0
mov eax 0x80004001
pop ebp
retn 0x10
sub_43b5f8
mov eax 0x80070057
retn 0x10
sub_43b600
mov eax 0x80070057
retn 0x8
sub_43b608
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn 0x8
sub_43b61c
retn 0x4
sub_43b61f
retn 0xc
sub_43b622
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3c ] 0x1
xor eax eax
pop ebp
retn 0x4
sub_43b635
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3c ] 0x0
xor eax eax
pop ebp
retn 0x4
sub_43b648
retn 0x8
sub_43b64b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3d ] 0x1
xor eax eax
pop ebp
retn 0x4
sub_43b65e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3d ] 0x0
xor eax eax
pop ebp
retn 0x8
sub_43b671
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
dec eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_43b682
xor eax eax
retn 0x4
sub_43b687
mov eax 0x80004001
retn 0x8
sub_43b68f
xor eax eax
retn 0xc
sub_43b694
mov eax 0x80004005
retn 0x8
sub_43b69c
mov eax 0x80004001
retn 0x4
sub_43b6a4
mov eax 0x80004001
retn 0x10
sub_43b6ac
xor eax eax
inc eax
retn 0xc
sub_43b6b2
mov al 0x1
retn 0x4
sub_43b6b7
sub ecx [ ecx - 0x4 ]
jmp sub_469c0a
sub_43b6bf
sub ecx [ ecx - 0x4 ]
jmp sub_413bc0
sub_43b6c7
sub ecx [ ecx - 0x4 ]
jmp sub_46a188
sub_43b6cf
xor eax eax
retn 0x8
sub_43b6d4
xor eax eax
retn 0x10
sub_43b6d9
mov ecx rw-data
jmp sub_43b4b7
j_sub_404ab6
jmp sub_404ab6
sub_43b6e8
retn
j_sub_4049ff
jmp sub_4049ff
j_sub_420c53
jmp sub_420c53
j_sub_40363c
jmp sub_40363c
j_sub_40277c
jmp sub_40277c
sub_43b6fd
push esi
mov esi rw-data
mov ecx esi
call sub_40fbbd
mov ecx esi
pop esi
jmp sub_420d60
j_sub_407336
jmp sub_407336
j_sub_40436a
jmp sub_40436a
j_sub_408530
jmp sub_408530
j_sub_415d41
jmp sub_415d41
sub_43b726
mov ecx rw-data
jmp sub_409df0
sub_43b730
mov ecx rw-data
jmp sub_405a64
sub_43b73a
mov ecx rw-data
jmp sub_405a64
sub_43b744
mov ecx rw-data
jmp sub_409df0
sub_43b74e
mov ecx rw-data
jmp sub_409df0
sub_43b758
mov ecx rw-data
jmp sub_409df0
sub_43b762
mov ecx rw-data
jmp sub_420d7f
sub_43b76c
mov ecx rw-data
jmp sub_409df0
sub_43f562
setne al
retn
sub_456313
cmp [ ecx + 0xc ] 0x5
jne r-xdata
xor eax eax
retn
mov eax [ ecx ]
retn
sub_45631f
push esi
mov esi ecx
call sub_409df0
push esi
call j_sub_422ed5#3
pop ecx
mov eax esi
pop esi
retn 0x4
sub_4564ed
cmp [ ecx + 0x9 ] 0x0
mov eax [ ecx + 0x4 ]
je r-xdata
retn
mov eax [ eax + 0x8 ]
sub_4564fa
push esi
mov esi ecx
push [ esi ]
call sub_408720
push esi
call j_sub_422ed5#3
pop ecx
mov eax esi
pop esi
retn 0x4
sub_45692a
push esi
mov esi ecx
call sub_405efb
push esi
call j_sub_422ed5#3
pop ecx
mov eax esi
pop esi
retn 0x4
sub_45696e
push esi
mov esi ecx
lea ecx [ esi + 0x20 ]
call sub_409a20
lea ecx [ esi + 0x10 ]
call sub_409a20
push esi
call j_sub_422ed5#3
pop ecx
mov eax esi
pop esi
retn 0x4
sub_456e76
push esi
mov esi ecx
push esi
call [ VariantInit@IAT ]
and [ esi + 0x8 ] 0x0
mov eax esi
and [ esi + 0xc ] 0x0
pop esi
retn
sub_456e8c
push esi
mov esi ecx
push esi
call [ VariantClear@IAT ]
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
pop esi
retn
sub_456ea0
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call [ VariantClear@IAT ]
push [ ebp + 0x8 ]
push esi
call [ VariantCopy@IAT ]
pop esi
pop ebp
retn 0x4
sub_4571d0
push esi
mov esi ecx
call sub_4662a9
push esi
call j_sub_422ed5#3
pop ecx
mov eax esi
pop esi
retn 0x4
sub_4571e5
push esi
mov esi ecx
call sub_4618f9
push esi
call j_sub_422ed5#3
pop ecx
mov eax esi
pop esi
retn 0x4
sub_45734c
mov ecx [ ecx ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
sub_457411
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x8007000e
push 0x1
sete al
dec eax
and eax 0x6
add eax 0xc0000017
push eax
call sub_457eee
int3
sub_457eee
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RaiseException@IAT ]
pop ebp
retn
sub_457f9c
push 0x10
push r--data
push r--data
push 0x0
call [ MessageBoxW@IAT ]
push 0x1
call sub_4234d8
int3
sub_458493
test ecx ecx
je r-xdata
retn
push ecx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_458cc8
push 0x0
push 0x0
push 0xf0
push [ ecx ]
call [ SendMessageW@IAT ]
dec eax
neg eax
sbb al al
inc al
retn
sub_45a14d
call sub_420c63
xor ecx ecx
test al al
sete cl
mov al cl
retn
sub_45a3f5
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
pop ebp
jmp sub_45a401
sub_45a844
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
pop ebp
jmp sub_45a850
sub_45ac6f
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x1
jmp r-xdata
push [ ecx ]
call [ EnableWindow@IAT ]
mov al 0x1
pop ebp
retn 0x4
sub_45ad2b
push ebp
mov ebp esp
push 0xfffffff0
push [ ebp + 0x8 ]
call [ GetWindowLongW@IAT ]
test eax eax
jns r-xdata
pop ebp
jmp [ GetParent@IAT ]
xor eax eax
pop ebp
retn 0x4
sub_45b196
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
pop ebp
jmp sub_45b1a2
sub_45b4ae
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
pop ebp
jmp sub_45b4ba
sub_45b919
push esi
mov esi ecx
call sub_45bacc
push esi
call j_sub_422ed5#3
pop ecx
mov eax esi
pop esi
retn 0x4
sub_45c0d9
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ MkParseDisplayName@IAT ]
pop ebp
retn 0x14
sub_45c0f2
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
call sub_45bf60
pop ebp
retn 0xc
sub_45c10a
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov ecx [ ecx + 0x8 ]
call sub_45be71
pop ebp
retn 0xc
sub_45c122
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
call sub_45be71
pop ebp
retn 0xc
sub_45c24f
push ebp
mov ebp esp
push 0x0
push sub_45c6fa
push [ ebp + 0xc ]
mov [ rw-data ] ecx
push 0x3e8
push [ rw-data ]
call [ DialogBoxParamW@IAT ]
and [ rw-data ] 0x0
pop ebp
retn 0x8
sub_45c2a3
push esi
mov esi ecx
push r--data
lea ecx [ esi + 0x34 ]
call sub_407d2c
push 0x2
push [ esi + 0x54 ]
call [ EndDialog@IAT ]
pop esi
retn
sub_45c6fa
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
jmp sub_45c712
xor eax eax
pop ebp
retn 0x10
sub_45c831
push esi
mov esi ecx
mov [ esi ] r--data
call sub_45cac5
push [ esi + 0x4 ]
call j_sub_422ed5#3
pop ecx
pop esi
retn
sub_45c8ce
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call [ InterlockedIncrement@IAT ]
pop ebp
retn 0x4
sub_45c99c
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
mov eax 0x80004001
mov eax 0x80070057
jmp r-xdata
pop ebp
retn 0x10
sub_45c9b9
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80070057
and [ eax ] 0x0
xor eax eax
jmp r-xdata
pop ebp
retn 0x8
sub_45cd22
push esi
mov esi ecx
call sub_4563f2
push esi
call j_sub_422ed5#3
pop ecx
mov eax esi
pop esi
retn 0x4
sub_45ce6c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x24
push eax
call [ InterlockedIncrement@IAT ]
pop ebp
retn 0x4
sub_45d9fd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x38
push eax
call [ InterlockedIncrement@IAT ]
pop ebp
retn 0x4
sub_45ffb6
xor edx edx
xor eax eax
mov [ ecx + 0x1 ] edx
mov [ ecx + 0x5 ] dx
mov [ ecx + 0x6 ] eax
mov eax ecx
mov [ ecx ] 0xff
mov [ ecx + 0x4 ] dx
mov [ ecx + 0xa ] dl
retn
sub_460006
xor eax eax
cmp [ ecx + 0x20 ] eax
je r-xdata
cmp [ ecx ] eax
jge r-xdata
push 0x2
pop eax
push [ ecx ]
push eax
jmp r-xdata
call sub_461473
retn
sub_46001f
xor eax eax
cmp [ ecx + 0x20 ] eax
je r-xdata
cmp [ ecx + 0x4 ] eax
jge r-xdata
push 0x2
pop eax
push [ ecx + 0x4 ]
push eax
jmp r-xdata
call sub_461473
retn
sub_46107a
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_460e07
push [ ebp + 0x8 ]
mov ecx esi
call sub_460f42
pop esi
pop ebp
retn 0x4
sub_4616f8
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_423f45
add esp 0xc
pop ebp
retn
sub_46339d
xor eax eax
cmp [ ecx + 0x8 ] eax
je r-xdata
retn
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
jmp sub_4633f8
sub_463c7b
mov ecx [ ecx ]
call sub_46449b
xor ecx ecx
cmp eax 0xffffffff
setne al
retn
sub_463c8b
call sub_46449b
xor ecx ecx
cmp eax 0xffffffff
setne al
retn
sub_465b5d
push esi
mov esi ecx
lea ecx [ esi + 0xc ]
call sub_4077c7
mov eax esi
pop esi
retn
sub_465b6c
add ecx 0xc
jmp sub_405a64
sub_4662ea
push ebp
mov ebp esp
push ecx
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_466306
pop ecx
pop ebp
retn 0xc
sub_466cf3
push esi
mov esi ecx
lea ecx [ esi + 0x1c ]
call sub_466cde
lea ecx [ esi + 0xc ]
call sub_466cde
lea ecx [ esi + 0x14 ]
pop esi
jmp sub_466cde
sub_466d3d
call sub_466d49
neg eax
sbb eax eax
neg eax
retn
sub_467012
call sub_466d49
movzx eax al
shr eax 0x2
and eax 0x1
retn
sub_4670c8
lea eax [ ecx + 0x18 ]
push eax
lea eax [ ecx + 0x1c ]
push eax
push ecx
push ecx
call sub_466f13
retn
sub_4670d8
xor eax eax
test [ ecx ] 0x1
je r-xdata
retn
cmp [ ecx + 0x18 ] eax
je r-xdata
inc eax
sub_46710f
call sub_466d49
movzx eax al
shr eax 0x1
and eax 0x1
retn
sub_467296
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x1f4
call sub_46716f
jmp r-xdata
pop ebp
retn 0x4
sub_467466
movzx eax [ ecx + 0x8 ]
cmp ax 0x20
jl r-xdata
xor al al
retn
cmp ax 0x2f
jg r-xdata
mov al 0x1
retn
sub_46747c
movzx eax [ ecx + 0x8 ]
cmp ax 0x10
jl r-xdata
xor al al
retn
cmp ax 0x1f
jg r-xdata
mov al 0x1
retn
sub_467492
movzx eax [ ecx + 0x8 ]
test ax ax
js r-xdata
xor al al
retn
cmp ax 0xf
jg r-xdata
mov al 0x1
retn
sub_467682
call sub_409399
xor ecx ecx
test al al
sete cl
mov al cl
retn
sub_467740
mov eax edx
mov edx ecx
mov ecx eax
call sub_408cd0
xor ecx ecx
test al al
sete cl
mov al cl
retn
sub_467755
push esi
mov esi ecx
lea ecx [ esi + 0x8 ]
call sub_405a64
push esi
call j_sub_422ed5#3
pop ecx
mov eax esi
pop esi
retn 0x4
sub_4679b4
cmp [ ecx + 0xc ] 0xd
jne r-xdata
xor eax eax
retn
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
retn
sub_4687b0
cmp [ ecx + 0xc ] 0xa
jne r-xdata
xor eax eax
retn
mov eax [ ecx ]
mov eax [ eax ]
retn
sub_4687be
push esi
mov esi ecx
cmp [ esi + 0xc ] 0xb
je r-xdata
mov ecx esi
call sub_40997f
mov eax [ esi ]
pop esi
mov eax [ eax + 0x4 ]
retn
call sub_46785c
sub_469c53
push esi
mov esi ecx
lea ecx [ esi + 0xc ]
call sub_405a64
push esi
call j_sub_422ed5#3
pop ecx
mov eax esi
pop esi
retn 0x4
sub_469cad
push esi
mov esi ecx
call sub_404024
push esi
call j_sub_422ed5#3
pop ecx
mov eax esi
pop esi
retn 0x4
sub_46d388
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x1
push [ eax + 0x8 ]
push [ ebp + 0xc ]
push eax
call sub_46ebaf
pop ebp
retn 0x8
sub_46d601
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x0
push [ eax + 0x8 ]
push [ ebp + 0xc ]
push eax
call sub_46ebaf
pop ebp
retn 0x8
sub_46dee9
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_46f2c6
pop ebp
retn 0x8
sub_46defd
push ebp
mov ebp esp
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_46f2c6
pop ebp
retn 0x8
sub_46f6df
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x9
call sub_4108ab
pop ebp
retn 0x8
sub_46f6f3
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x18
call sub_4108ab
pop ebp
retn 0x8
sub_46f707
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x19
call sub_4108ab
pop ebp
retn 0x8
sub_46f71b
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call sub_4108ab
pop ebp
retn 0x8
sub_46f72f
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0xc
call sub_4108ab
pop ebp
retn 0x8
sub_46f743
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x5
call sub_4108ab
pop ebp
retn 0x8
sub_46f757
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x15
call sub_4108ab
pop ebp
retn 0x8
sub_46f76b
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x2
call sub_4108ab
pop ebp
retn 0x8
sub_46f77f
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x4
call sub_4108ab
pop ebp
retn 0x8
sub_46f793
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x7
call sub_4108ab
pop ebp
retn 0x8
sub_46f7a7
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x3
call sub_4108ab
pop ebp
retn 0x8
sub_46f7bb
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x17
call sub_4108ab
pop ebp
retn 0x8
sub_46f7cf
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x1
call sub_4108ab
pop ebp
retn 0x8
sub_46f7e3
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x13
call sub_4108ab
pop ebp
retn 0x8
sub_46f7f7
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x14
call sub_4108ab
pop ebp
retn 0x8
sub_46f80b
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0xe
call sub_4108ab
pop ebp
retn 0x8
sub_46f81f
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0xf
call sub_4108ab
pop ebp
retn 0x8
sub_46f833
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x1c
call sub_4108ab
pop ebp
retn 0x8
sub_46f847
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x1d
call sub_4108ab
pop ebp
retn 0x8
sub_46f85b
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x6
call sub_4108ab
pop ebp
retn 0x8
sub_46f86f
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x8
call sub_4108ab
pop ebp
retn 0x8
sub_46f883
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x1a
call sub_4108ab
pop ebp
retn 0x8
sub_46f897
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x12
call sub_4108ab
pop ebp
retn 0x8
sub_46f8ab
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0xa
call sub_4108ab
pop ebp
retn 0x8
sub_46f8bf
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0xb
call sub_4108ab
pop ebp
retn 0x8
sub_46f8d3
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x10
call sub_4108ab
pop ebp
retn 0x8
sub_46f8e7
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x11
call sub_4108ab
pop ebp
retn 0x8
sub_46f8fb
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x16
call sub_4108ab
pop ebp
retn 0x8
sub_4716d3
push esi
mov esi ecx
mov [ esi ] r--data
call sub_4728b1
push [ esi + 0x4 ]
call j_sub_422ed5#3
pop ecx
pop esi
retn
sub_471a10
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
add ecx 0x44
call sub_472622
xor eax eax
pop ebp
retn 0x8
sub_471c7e
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
add ecx 0x10
call sub_472622
xor eax eax
pop ebp
retn 0x8
sub_472404
push ebp
mov ebp esp
cmp [ ecx + 0x30 ] 0x0
je r-xdata
pop ebp
jmp sub_472419
pop ebp
jmp sub_4724d4
sub_472882
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_471a24
pop ebp
retn
sub_472b4f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push [ eax ]
call sub_409e9c
mov ecx [ ebp + 0xc ]
call sub_46785c
xor eax eax
pop ebp
retn 0x8
sub_4737fe
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
mov ecx eax
call sub_4688f5
xor eax eax
pop ebp
retn 0x8
sub_4739b9
push esi
mov esi ecx
lea ecx [ esi + 0x44 ]
call sub_405a64
lea ecx [ esi + 0x34 ]
call sub_405a64
lea ecx [ esi + 0x24 ]
pop esi
jmp sub_405a64
sub_47405d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call sub_409c9c
test eax eax
setne [ rw-data ]
xor eax eax
pop ebp
retn 0x8
sub_475ec5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x1
push [ eax + 0x8 ]
push eax
call sub_4775c0
pop ebp
retn 0x8
sub_475eda
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x0
push [ eax + 0x8 ]
push eax
call sub_4775c0
pop ebp
retn 0x8
sub_47616c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x0
push [ eax + 0x8 ]
push eax
call sub_47791b
pop ebp
retn 0x8
sub_476181
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x2
push [ eax + 0x8 ]
push eax
call sub_47791b
pop ebp
retn 0x8
sub_47c0f7
cmp [ ecx + 0x9 ] 0x0
mov eax [ ecx + 0x4 ]
je r-xdata
retn
mov eax [ eax + 0x10 ]
sub_47c1f9
push esi
push 0x0
mov esi ecx
call sub_42537a
mov [ esi ] eax
mov eax esi
pop ecx
mov [ esi + 0x4 ] edx
pop esi
retn
sub_47cb9a
push esi
mov esi ecx
mov [ esi ] r--data
call sub_47fc50
push [ esi + 0x4 ]
call j_sub_422ed5#3
pop ecx
pop esi
retn
sub_47de54
push ebp
mov ebp esp
pop ebp
jmp sub_47de5d
sub_47e037
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_47cbf1
pop ebp
retn 0x8
sub_47e04b
push ebp
mov ebp esp
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_47cbf1
pop ebp
retn 0x8
sub_47f367
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
push 0x0
call sub_47f7a8
pop ebp
retn 0x8
sub_47f37d
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x1
push 0x0
call sub_47f7a8
pop ebp
retn 0x8
sub_47f44b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax + 0x8 ]
push eax
push 0x0
call sub_47f532
pop ebp
retn 0x8
sub_47fd84
push esi
mov esi ecx
call sub_480e72
test al al
je r-xdata
mov eax sub_43b6d4
pop esi
retn
mov eax [ esi + 0x8 ]
pop esi
retn
sub_48133f
push ebp
mov ebp esp
push sub_467012
push sub_467021
push sub_466fde
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_481564
pop ebp
retn 0x8
sub_4814e1
push ebp
mov ebp esp
push sub_46710f
push sub_46711d
push sub_4670e6
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_481564
pop ebp
retn 0x8
sub_482c8f
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call sub_4832b6
pop ebp
retn 0x8
sub_482ca3
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x1
call sub_4832b6
pop ebp
retn 0x8
sub_48aae8
push ebp
mov ebp esp
pop ebp
jmp sub_48aaf1
sub_48b37c
push ebp
mov ebp esp
pop ebp
jmp sub_47105b
sub_48bcc7
push ebp
mov ebp esp
pop ebp
jmp sub_48bcd0
