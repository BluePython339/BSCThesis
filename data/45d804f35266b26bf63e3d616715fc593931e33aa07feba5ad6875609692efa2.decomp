sub_401001
mov eax sub_42932a
call sub_41a05c
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x38d0 ]
mov [ ebp - 0x4 ] 0x3
call sub_4095e4
lea ecx [ esi + 0x2d6c ]
mov [ ebp - 0x4 ] 0x2
call sub_4095e4
lea ecx [ esi + 0x2208 ]
mov [ ebp - 0x4 ] 0x1
call sub_4095e4
lea ecx [ esi + 0x1100 ]
mov [ ebp - 0x4 ] 0x0
call sub_405dc9
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x40 ]
call sub_405dc9
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_40106a
xor eax eax
cmp [ esp + 0x8 ] 0x1
jb r-xdata
retn 0x8
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x52
jne r-xdata
cmp [ esp + 0x8 ] 0x7
jb r-xdata
cmp [ ecx + 0x1 ] 0x61
jne r-xdata
cmp [ ecx + 0x2 ] 0x72
jne r-xdata
cmp [ ecx + 0x3 ] 0x21
jne r-xdata
cmp [ ecx + 0x4 ] 0x1a
jne r-xdata
cmp [ ecx + 0x5 ] 0x7
jne r-xdata
mov cl [ ecx + 0x6 ]
test cl cl
jne r-xdata
cmp cl 0x1
jne r-xdata
push 0x2
jmp r-xdata
cmp cl 0x2
jne r-xdata
push 0x3
jmp r-xdata
pop eax
push 0x4
sub_4010d4
push ebp
mov ebp esp
cmp [ ecx + 0xb05c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
not eax
inc eax
and eax 0xf
add [ ebp + 0x8 ] eax
cmp [ ecx + 0xb050 ] 0x3
jne r-xdata
add [ ebp + 0x8 ] 0x8
add [ ebp + 0x8 ] 0x10
jmp r-xdata
sub_401106
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jbe r-xdata
pop esi
retn 0x4
mov eax [ esi + 0xc ]
push ebx
push ebp
push edi
mov ebp rw-data
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx eax
shr ecx 0x2
lea eax [ ecx + eax + 0x20 ]
mov ecx [ esi + 0x4 ]
mov ebx ecx
cmp ecx eax
ja r-xdata
cmp ecx eax
jbe r-xdata
push ebx
push [ esi ]
call sub_41a114
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov ebx eax
push eax
push r--data
push ebp
call sub_406381
add esp 0xc
mov ecx ebp
call sub_40632c
mov [ esi ] edi
pop edi
pop ebp
mov [ esi + 0x8 ] ebx
pop ebx
mov ecx ebp
call sub_40632c
sub_4011a7
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jbe r-xdata
pop esi
retn 0x4
mov eax [ esi + 0xc ]
push ebx
push ebp
push edi
mov ebp rw-data
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi + 0x4 ]
mov ecx eax
shr ecx 0x2
lea eax [ ecx + eax + 0x20 ]
cmp edi eax
ja r-xdata
cmp ecx eax
jbe r-xdata
lea eax [ edi + edi ]
push eax
push [ esi ]
call sub_41a114
mov ebx eax
pop ecx
pop ecx
test ebx ebx
jne r-xdata
mov edi eax
push eax
push r--data
push ebp
call sub_406381
add esp 0xc
mov ecx ebp
call sub_40632c
mov [ esi + 0x8 ] edi
pop edi
pop ebp
mov [ esi ] ebx
pop ebx
mov ecx ebp
call sub_40632c
sub_401228
mov eax sub_429088
call sub_41a05c
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
cmp [ esi + 0x6520 ] 0x0
mov [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ esi + 0x9948 ]
call sub_4125e9
lea ecx [ esi + 0x7608 ]
call sub_4125e9
lea ecx [ esi + 0x20e8 ]
mov [ ebp - 0x4 ] 0x1
call sub_401001
lea ecx [ esi + 0x1024 ]
mov [ ebp - 0x4 ] 0x0
call sub_405dc9
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_408a05
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push edi
mov edi [ esi + 0x6524 ]
test edi edi
je r-xdata
pop edi
mov ecx edi
call sub_409d84
push edi
call sub_41a07b
pop ecx
sub_4012d0
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ ebp + 0x8 ]
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0xc ] 0x1
call sub_4112c0
leave
retn 0x8
sub_401332
mov eax sub_42909a
call sub_41a05c
sub esp 0x10
push ebx
push esi
xor esi esi
mov ebx ecx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] esi
push esi
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] esi
call sub_402c53
test al al
jne r-xdata
push edi
mov edi [ ebp - 0x18 ]
push esi
lea ecx [ ebp - 0x1c ]
call sub_4012b5
mov esi [ ebp + 0x8 ]
lea eax [ edi + 0x1 ]
push eax
mov ecx esi
call sub_401318
cmp [ ebx + 0xb050 ] 0x3
jne r-xdata
cmp [ ebp - 0x1c ] esi
je r-xdata
test [ ebx + 0x8944 ] 0x1
je r-xdata
push [ esi + 0x4 ]
push [ esi ]
push [ ebp - 0x1c ]
call sub_411857
jmp r-xdata
xor al al
jmp r-xdata
push [ ebp - 0x1c ]
call sub_41a086
pop ecx
push [ esi + 0x4 ]
push [ esi ]
push [ ebp - 0x1c ]
call sub_4116c2
shr edi 0x1
push edi
push [ esi ]
push [ ebp - 0x1c ]
call sub_41172d
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
jmp r-xdata
push [ esi ]
call sub_41a32f
pop ecx
push eax
mov ecx esi
call sub_401318
cmp [ ebp - 0x1c ] 0x0
pop edi
je r-xdata
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
mov al 0x1
push [ ebp - 0x1c ]
call sub_41a086
pop ecx
sub_401425
xor edx edx
mov eax ecx
lea ecx [ eax + 0x1020 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] edx
mov [ eax + 0x1030 ] edx
mov [ eax + 0x1034 ] edx
mov [ eax + 0x1038 ] edx
mov [ eax + 0x103c ] edx
mov [ eax + 0x1040 ] edx
mov [ eax + 0x1044 ] edx
retn
sub_40145f
mov eax sub_4290b4
call sub_41a05c
sub esp 0x28
push ebx
push esi
mov esi ecx
mov eax [ esi ]
push edi
push 0x7
xor ebx ebx
lea edi [ esi + 0x6560 ]
push edi
mov [ esi + 0xb05c ] bl
mov [ esi + 0xb064 ] bl
call [ eax + 0x8 ]
cmp eax 0x7
je r-xdata
push 0x7
push edi
mov ecx esi
mov [ esi + 0xb060 ] ebx
call sub_40106a
cmp eax ebx
je r-xdata
xor al al
jmp r-xdata
push 0x100000
lea ecx [ ebp - 0x24 ]
call sub_4012f9
mov eax [ esi ]
mov ecx esi
mov [ ebp - 0x4 ] ebx
call [ eax + 0x10 ]
mov ecx [ ebp - 0x20 ]
add ecx 0xfffffff0
push ecx
push [ ebp - 0x24 ]
mov edi eax
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
xor edx edx
cmp eax ebx
mov [ ebp - 0x10 ] eax
jle r-xdata
mov [ esi + 0xb050 ] eax
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ esi + 0xb060 ] ebx
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax edx
cmp [ eax ] 0x52
jne r-xdata
mov eax [ esi + 0xb050 ]
cmp eax 0x4
jne r-xdata
mov edi [ esi ]
push ebx
mov ecx esi
call [ edi + 0x10 ]
sub eax 0x7
sbb edx ebx
push edx
push eax
mov ecx esi
call [ edi + 0xc ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x24 ] ebx
je r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
inc edx
cmp edx [ ebp - 0x10 ]
jl r-xdata
mov ecx [ ebp - 0x10 ]
sub ecx edx
push ecx
push eax
mov ecx esi
call sub_40106a
cmp eax ebx
je r-xdata
cmp eax 0x3
jne r-xdata
add esi 0x1e
push esi
push 0x3b
call sub_4012d0
jmp r-xdata
push [ ebp - 0x24 ]
call sub_41a086
pop ecx
push [ ebp - 0x24 ]
call sub_41a086
pop ecx
jmp r-xdata
jmp r-xdata
mov [ esi + 0xb050 ] eax
cmp eax 0x1
jne r-xdata
mov [ esi + 0x6568 ] 0x7
jmp r-xdata
mov eax [ esi ]
push 0x1
lea edi [ esi + 0x6567 ]
push edi
mov ecx esi
call [ eax + 0x8 ]
cmp [ edi ] bl
jne r-xdata
push ebx
lea eax [ edx + edi ]
mov edx [ esi ]
push ebx
push eax
mov ecx esi
mov [ esi + 0xb060 ] eax
call [ edx + 0xc ]
mov eax [ esi + 0xb050 ]
cmp eax 0x2
je r-xdata
cmp edx ebx
jle r-xdata
mov ecx esi
call sub_40365b
test eax eax
jne r-xdata
mov [ esi + 0x6568 ] 0x8
jmp r-xdata
mov edx [ esi ]
push 0x7
lea eax [ esi + 0x6560 ]
push eax
mov ecx esi
call [ edx + 0x8 ]
cmp eax 0x3
jne r-xdata
cmp edi 0x1c
jge r-xdata
mov eax [ esi + 0x6544 ]
cmp eax 0x1
je r-xdata
cmp [ esi + 0xb065 ] bl
je r-xdata
cmp [ ebp - 0x10 ] 0x1f
jle r-xdata
cmp [ esi + 0x6548 ] bl
je r-xdata
mov ecx esi
call sub_4010c0
cmp [ esi + 0xb064 ] bl
je r-xdata
cmp [ ebp + 0x8 ] bl
je r-xdata
mov eax [ ebp - 0x24 ]
sub eax edi
add eax 0x1c
cmp [ eax ] 0x52
jne r-xdata
mov ecx esi
call sub_4010c0
cmp eax 0x4
je r-xdata
mov al [ esi + 0x658c ]
mov [ esi + 0xb056 ] al
cmp [ esi + 0x6548 ] bl
je r-xdata
lea eax [ esi + 0x1e ]
push eax
push 0x19
call sub_4012d0
cmp [ ebp + 0x8 ] bl
je r-xdata
cmp [ eax + 0x1 ] 0x53
jne r-xdata
push esi
lea ecx [ ebp - 0x34 ]
call sub_40117b
mov eax [ esi + 0xb044 ]
mov edi [ esi + 0xb040 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xb048 ]
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0xb04c ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ esi + 0xb05c ] bl
jne r-xdata
cmp [ eax + 0x2 ] 0x46
jne r-xdata
mov ecx esi
call sub_40365b
test eax eax
jne r-xdata
cmp [ esi + 0xb055 ] bl
je r-xdata
cmp [ eax + 0x3 ] 0x58
je r-xdata
mov eax [ esi + 0x6544 ]
cmp eax 0x3
jne r-xdata
jmp r-xdata
lea eax [ esi + 0x1e ]
push eax
add esi 0xb09a
push esi
call sub_41a377
pop ecx
pop ecx
cmp [ esi + 0xb059 ] bl
je r-xdata
cmp eax 0x2
je r-xdata
cmp [ esi + 0xb055 ] bl
je r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x34 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0xb044 ] eax
mov eax [ ebp - 0x14 ]
push ebx
push [ ebp - 0x28 ]
mov [ esi + 0xb048 ] eax
mov eax [ ebp - 0x10 ]
push [ ebp - 0x2c ]
mov [ esi + 0xb040 ] edi
mov [ esi + 0xb04c ] eax
mov eax [ ecx ]
call [ eax + 0xc ]
mov al 0x1
cmp [ esi + 0xb055 ] bl
je r-xdata
mov ecx esi
call sub_4010c0
xor eax eax
cmp [ esi + 0x99b0 ] bl
jne r-xdata
xor eax eax
cmp [ esi + 0x7670 ] bl
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ esi + 0xb059 ] al
jmp r-xdata
mov [ esi + 0xb059 ] al
sub_401797
mov eax sub_4292c5
call sub_41a05c
sub esp 0x10
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi + 0xb056 ] bl
jne r-xdata
push esi
lea ecx [ ebp - 0x1c ]
call sub_40117b
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x658c ] bl
je r-xdata
xor al al
jmp r-xdata
push edi
mov edi [ esi ]
push ebx
mov ecx esi
call sub_401b3a
push edx
push eax
mov ecx esi
call [ edi + 0xc ]
push r--data
mov ecx esi
call sub_403723
pop edi
test eax eax
je r-xdata
mov ecx [ esi + 0xb060 ]
mov eax [ esi ]
push ebx
add ecx 0x14
push ebx
push ecx
mov ecx esi
call [ eax + 0xc ]
mov ecx esi
call sub_40365b
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] ebx
seta [ ebp + 0xb ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
mov [ ebp + 0xb ] bl
push [ ebp + 0x8 ]
mov ecx esi
call sub_401332
mov [ ebp + 0xb ] 0x1
test al al
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ecx ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
call [ eax + 0xc ]
mov al [ ebp + 0xb ]
sub_401851
mov eax sub_429108
call sub_41a05c
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_40851e
xor ebx ebx
lea ecx [ esi + 0x1024 ]
mov [ ebp - 0x4 ] ebx
mov [ esi ] r--data
call sub_405ed9
lea ecx [ esi + 0x20e8 ]
mov [ ebp - 0x4 ] 0x1
call sub_40b5f2
lea ecx [ esi + 0x65e8 ]
mov [ esi + 0x6538 ] ebx
mov [ esi + 0x653c ] ebx
call sub_401425
lea ecx [ esi + 0x8928 ]
call sub_401425
cmp [ ebp + 0x8 ] ebx
mov [ ebp - 0x4 ] 0x4
sete al
mov [ esi + 0x6524 ] ebx
mov [ esi + 0x6520 ] al
cmp al bl
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x72a8
call sub_41a41a
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] 0x5
cmp ecx ebx
je r-xdata
xor eax eax
jmp r-xdata
call sub_409dae
jmp r-xdata
mov [ esi + 0x6524 ] eax
mov al [ eax + 0x5195 ]
or [ esi + 0x6528 ] 0xffffffff
or [ esi + 0x652c ] 0xffffffff
or [ esi + 0x6530 ] 0xffffffff
push 0x40
mov [ esi + 0x1c ] al
lea eax [ esi + 0x6570 ]
push ebx
push eax
mov [ esi + 0xb050 ] 0x2
mov [ esi + 0xb054 ] bl
mov [ esi + 0xb055 ] bl
mov [ esi + 0xb056 ] bl
mov [ esi + 0xb057 ] bl
mov [ esi + 0xb058 ] bl
mov [ esi + 0xb059 ] bl
mov [ esi + 0xb05a ] bl
mov [ esi + 0xb060 ] ebx
mov [ esi + 0x6538 ] ebx
mov [ esi + 0x653c ] ebx
mov [ esi + 0xb05b ] bl
mov [ esi + 0xb05c ] bl
mov [ esi + 0xb065 ] bl
mov [ esi + 0xb064 ] bl
mov [ esi + 0x6540 ] ebx
mov [ esi + 0xb040 ] ebx
mov [ esi + 0xb044 ] ebx
mov [ esi + 0xb048 ] ebx
mov [ esi + 0xb04c ] ebx
call sub_41a3a0
push 0x34
lea eax [ esi + 0x65b0 ]
push ebx
push eax
call sub_41a3a0
push 0x20
lea eax [ esi + 0x88e8 ]
push ebx
push eax
call sub_41a3a0
mov ecx [ ebp - 0xc ]
add esp 0x24
xor eax eax
mov [ esi + 0xb09a ] ax
mov [ esi + 0xb078 ] ebx
mov [ esi + 0xb080 ] ebx
mov [ esi + 0xb084 ] ebx
mov [ esi + 0xb088 ] ebx
mov [ esi + 0xb08c ] ebx
mov [ esi + 0xb090 ] ebx
mov [ esi + 0xb094 ] ebx
mov [ esi + 0xb076 ] bl
mov [ esi + 0xb098 ] bl
mov [ esi + 0x6548 ] bl
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_401a16
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_40145f
test al al
jne r-xdata
pop esi
retn 0x4
cmp [ esi + 0xb065 ] al
jne r-xdata
push 0x2
mov ecx rw-data
call j_sub_40629a
add esi 0x1e
push esi
push 0x38
call sub_4012d0
sub_401a49
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_408695
test al al
jne r-xdata
push 0x0
mov ecx esi
call sub_40145f
test al al
jne r-xdata
xor al al
jmp r-xdata
mov al 0x1
lea eax [ esi + 0x1e ]
push eax
push 0x38
call sub_4012d0
mov ecx esi
call sub_4087ca
jmp r-xdata
pop esi
retn 0x4
sub_401aad
cmp [ ecx + 0xb050 ] 0x2
mov eax [ esp + 0x4 ]
jne r-xdata
cmp [ eax + 0x10ec ] 0x2
jne r-xdata
cmp [ eax + 0x19 ] 0x14
jae r-xdata
add eax 0x20
jmp r-xdata
xor edx edx
cmp [ eax + 0x10e1 ] dl
sete dl
dec edx
and edx 0xfffffff0
add edx 0x20
mov [ eax + 0x1c ] edx
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov [ eax + 0x10e1 ] 0x1
cmp [ eax ] 0x5c
jne r-xdata
retn 0x4
cmp [ eax ] 0x3a
jne r-xdata
cmp [ ecx + 0xb050 ] 0x3
jne r-xdata
movzx edx [ eax ]
cmp dx 0x2f
je r-xdata
push 0x5f
pop edx
mov [ eax ] dx
push 0x5f
pop edx
mov [ eax ] dx
push 0x5c
pop edx
mov [ eax ] dx
cmp dx 0x5c
jne r-xdata
inc eax
inc eax
cmp [ ecx + 0xb050 ] 0x3
je r-xdata
sub_401b3a
push ebx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x6568 ]
add edi [ esi + 0xb060 ]
xor ebx ebx
cmp [ esi + 0xb050 ] 0x2
jne r-xdata
push [ esi + 0x657c ]
call sub_4010d4
add eax [ esi + 0x65bc ]
mov eax [ esi + 0x657c ]
jmp r-xdata
add edi eax
mov eax edi
pop edi
adc ebx ebx
pop esi
mov edx ebx
pop ebx
retn
sub_401bce
push esi
mov esi ecx
mov eax [ esi + 0x6524 ]
cmp [ eax + 0x4120 ] 0x0
jne r-xdata
pop esi
retn
add eax 0x4020
push eax
lea eax [ esi + 0x1e ]
push eax
push 0x2
call sub_411518
test al al
jne r-xdata
mov eax [ esi + 0x6524 ]
mov [ eax + 0x4123 ] 0x1
mov ecx esi
call sub_4087ca
push 0x2
call sub_401bae
push 0xff
mov ecx rw-data
call j_sub_40629a
sub_401c3b
push esi
mov esi ecx
call sub_408b8b
mov ecx [ esi + 0xb040 ]
cmp ecx eax
jne r-xdata
add esi 0x1e
push esi
push 0x37
call sub_4012d0
push 0x1
mov ecx rw-data
call sub_406257
mov ecx [ esi + 0xb044 ]
cmp ecx edx
jne r-xdata
mov ecx [ esi + 0xb048 ]
cmp ecx eax
jne r-xdata
mov eax [ esi + 0xb04c ]
cmp eax edx
je r-xdata
pop esi
retn
sub_401cc5
mov eax sub_429122
call sub_41a05c
mov eax 0x2874
call sub_41a670
push ebx
push esi
mov ebx ecx
push edi
push ebx
lea ecx [ ebp - 0x48 ]
call sub_40b445
xor edi edi
cmp [ ebx + 0xb05c ] 0x0
mov [ ebp - 0x4 ] edi
je r-xdata
mov [ ebp - 0xe ] 0x0
jmp r-xdata
mov eax [ ebx + 0xb060 ]
mov edx [ ebx + 0xb044 ]
xor ecx ecx
add eax 0x7
adc ecx edi
cmp edx ecx
jl r-xdata
push 0x7
lea ecx [ ebp - 0x48 ]
call sub_40b1d7
cmp [ ebp - 0x34 ] edi
je r-xdata
jg r-xdata
mov ecx ebx
call sub_401c3b
lea ecx [ ebp - 0x48 ]
call sub_40b289
movzx eax ax
lea ecx [ ebp - 0x48 ]
mov [ ebx + 0x654c ] eax
mov [ ebx + 0x655c ] 0x0
call sub_40b271
lea ecx [ ebp - 0x48 ]
movzx esi al
call sub_40b289
movzx eax ax
mov [ ebx + 0x6554 ] eax
shr eax 0xe
and al 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebx + 0x655c ] al
call sub_40b289
movzx eax ax
mov [ ebx + 0x6558 ] eax
mov [ ebx + 0x6550 ] esi
cmp eax 0x7
jae r-xdata
mov ecx ebx
mov [ ebp - 0xe ] 0x1
call sub_401bce
mov eax [ ebx ]
push 0x8
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx ebx
call [ eax + 0x8 ]
cmp eax 0x8
je r-xdata
mov ecx [ ebx + 0xb040 ]
cmp ecx eax
jbe r-xdata
xor eax eax
jmp r-xdata
push [ ebp - 0x48 ]
call sub_41a086
pop ecx
sub esi 0x73
push 0x3
pop edi
je r-xdata
mov ecx ebx
call sub_401c84
jmp r-xdata
push edi
push edi
push edi
push edi
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x6524 ]
add eax 0x4020
push eax
push 0x4
lea esi [ ebx + 0x1024 ]
push edi
mov ecx esi
call sub_405f84
mov [ ebp - 0x2c ] esi
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov [ ebx + 0x6550 ] 0x1
dec esi
je r-xdata
cmp [ ebp - 0x48 ] edi
je r-xdata
cmp ecx 0x1
jne r-xdata
push 0x6
jmp r-xdata
mov [ ebx + 0x6550 ] 0x2
jmp r-xdata
sub esi 0x6
je r-xdata
add eax 0xfffffff9
push eax
test [ ebx + 0x6554 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x48 ]
call sub_40b1d7
push [ ebx + 0x6558 ]
mov ecx ebx
call sub_4010d4
xor ecx ecx
add eax [ ebx + 0xb040 ]
adc ecx [ ebx + 0xb044 ]
mov [ ebx + 0xb048 ] eax
mov eax [ ebx + 0x6550 ]
mov [ ebx + 0xb04c ] ecx
cmp eax 0x1
je r-xdata
mov ecx [ ebx + 0x6550 ]
mov [ ebx + 0x6544 ] ecx
cmp ecx 0x75
jne r-xdata
mov [ ebx + 0x6550 ] edi
jmp r-xdata
dec esi
jne r-xdata
lea edi [ ebx + 0x6570 ]
mov ecx edi
call sub_4098a1
push 0x5
pop ecx
lea esi [ ebx + 0x654c ]
[ edi ] [ esi ]
lea ecx [ ebp - 0x48 ]
call sub_40b289
lea ecx [ ebp - 0x48 ]
mov [ ebx + 0x6584 ] ax
call sub_40b2be
mov esi eax
lea ecx [ ebx + 0x6578 ]
mov al [ ecx ]
mov ecx [ ecx ]
and al 0x1
mov [ ebx + 0xb055 ] al
mov eax ecx
shr eax 0x3
and al 0x1
mov [ ebx + 0xb054 ] al
mov eax ecx
shr eax 0x2
and al 0x1
mov [ ebx + 0xb057 ] al
mov eax ecx
shr eax 0x6
and al 0x1
mov [ ebx + 0xb05b ] al
mov eax ecx
shr eax 0x7
and al 0x1
mov [ ebx + 0x6588 ] esi
mov [ ebx + 0xb05c ] al
test esi esi
jne r-xdata
jle r-xdata
mov [ ebx + 0x6550 ] 0x5
jmp r-xdata
xor eax eax
inc eax
xor eax eax
cmp [ ebx + 0x6584 ] ax
je r-xdata
test [ ebx + 0x6554 ] 0x8000
je r-xdata
cmp eax edi
jle r-xdata
mov eax [ ebx + 0xb04c ]
cmp eax [ ebx + 0xb044 ]
jg r-xdata
mov eax [ ebx + 0x6550 ]
cmp eax 0x79
je r-xdata
mov [ ebx + 0xb058 ] al
mov eax ecx
shr eax 0x1
and al 0x1
mov [ ebx + 0x658c ] al
mov eax ecx
shr eax 0x8
and al 0x1
shr ecx 0x4
and cl 0x1
mov [ ebx + 0xb059 ] al
mov [ ebx + 0xb05a ] cl
xor edi edi
push edi
lea ecx [ ebp - 0x48 ]
call sub_40b3f5
movzx eax ax
cmp [ ebx + 0x654c ] eax
je r-xdata
lea ecx [ ebp - 0x48 ]
call sub_40b2be
add [ ebx + 0xb048 ] eax
adc [ ebx + 0xb04c ] 0x0
jmp r-xdata
cmp eax 0x2
sete [ ebp - 0xd ]
cmp [ ebp - 0xd ] 0x0
lea eax [ ebx + 0x65e8 ]
jne r-xdata
cmp eax 0x5
jne r-xdata
mov esi [ ebp - 0x34 ]
cmp [ ebp - 0x48 ] edi
je r-xdata
jl r-xdata
cmp eax 0x76
je r-xdata
mov edi eax
push 0x0
mov ecx edi
mov [ ebp - 0x14 ] eax
call sub_4098cc
push 0x5
pop ecx
lea esi [ ebx + 0x654c ]
[ edi ] [ esi ]
mov esi [ ebp - 0x14 ]
mov al [ esi + 0x8 ]
and al 0x1
mov [ esi + 0x1088 ] al
mov eax [ esi + 0x8 ]
mov ecx eax
shr ecx 0x1
and cl 0x1
mov [ esi + 0x1089 ] cl
mov ecx eax
shr ecx 0x2
and cl 0x1
mov [ esi + 0x108b ] cl
mov ecx eax
shr ecx 0xa
and cl 0x1
cmp [ ebp - 0xd ] 0x0
mov [ esi + 0x1090 ] cl
je r-xdata
lea eax [ ebx + 0x8928 ]
push eax
lea eax [ ebx + 0x88f0 ]
lea edi [ ebx + 0x88e8 ]
pop ecx
lea esi [ ebx + 0x654c ]
[ edi ] [ esi ]
mov cl [ eax ]
mov edi [ eax ]
and cl 0x1
mov [ ebx + 0x8904 ] cl
mov ecx edi
shr ecx 0x2
and cl 0x1
mov [ ebx + 0x8906 ] cl
mov eax edi
shr eax 0x1
mov ecx edi
shr ecx 0x3
and al 0x1
and cl 0x1
lea esi [ ebx + 0x8907 ]
mov [ ebx + 0x8905 ] al
mov [ esi ] cl
test al al
je r-xdata
mov eax esi
push [ ebp - 0x48 ]
call sub_41a086
pop ecx
mov eax [ ebx + 0xb048 ]
cmp eax [ ebx + 0xb040 ]
jbe r-xdata
cmp eax 0x5
jne r-xdata
xor ecx ecx
test al 0x10
je r-xdata
cmp [ esi ] 0x0
je r-xdata
lea ecx [ ebp - 0x48 ]
call sub_40b2be
mov [ ebx + 0x88fc ] eax
push 0x3
mov ecx rw-data
mov [ ebx + 0xb064 ] 0x1
call sub_406257
cmp [ ebp - 0xe ] 0x0
je r-xdata
cmp [ ebx + 0x8906 ] 0x0
je r-xdata
xor ecx ecx
test al 0x10
je r-xdata
xor ecx ecx
inc ecx
jmp r-xdata
lea ecx [ ebp - 0x48 ]
call sub_40b289
movzx eax ax
mov [ ebx + 0x8900 ] eax
mov [ ebx + 0xb078 ] eax
jmp r-xdata
lea eax [ ebx + 0x1e ]
push eax
push eax
push 0x4
call sub_4062fd
mov [ ebx + 0xb065 ] 0x1
jmp r-xdata
push ebx
lea ecx [ ebp - 0x58 ]
call sub_40117b
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x10 ]
push edi
push 0x7
pop esi
sub eax esi
sbb edx edi
push edx
push eax
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0xc ]
mov [ ebp - 0xd ] 0x1
mov ecx eax
shr ecx 0x5
and ecx 0x7
mov edx 0x10000
shl edx cl
xor edx edx
jmp r-xdata
xor ecx ecx
inc ecx
jmp r-xdata
cmp [ ebp - 0xd ] 0x0
mov esi [ ebp - 0x14 ]
mov [ esi + 0x10e0 ] cl
jne r-xdata
dec esi
jne r-xdata
mov [ ebp - 0xd ] 0x0
mov dl [ esi + 0x18 ]
mov [ esi + 0x10ec ] edi
cmp dl 0x3
je r-xdata
movzx ecx [ esi + 0x19 ]
sub ecx 0xd
je r-xdata
mov ecx eax
shr ecx 0x3
and cl 0x1
shr eax 0xb
mov [ esi + 0x10e2 ] cl
and al 0x1
lea ecx [ ebp - 0x48 ]
mov [ esi + 0x10e4 ] edx
mov [ esi + 0x10e3 ] al
call sub_40b2be
lea ecx [ ebp - 0x48 ]
mov [ esi + 0x14 ] eax
call sub_40b2be
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x1c ] eax
call sub_40b271
push 0x2
pop edi
lea ecx [ ebp - 0x48 ]
mov [ esi + 0x18 ] al
mov [ esi + 0x1060 ] edi
call sub_40b2be
lea ecx [ ebp - 0x48 ]
mov [ esi + 0x1064 ] eax
call sub_40b2be
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x20 ] eax
call sub_40b271
lea ecx [ ebp - 0x48 ]
mov [ esi + 0x19 ] al
call sub_40b271
sub al 0x30
lea ecx [ ebp - 0x48 ]
mov [ esi + 0x1a ] al
call sub_40b289
movzx eax ax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x14 ] eax
call sub_40b2be
and [ esi + 0x108c ] 0x0
cmp [ esi + 0x108b ] 0x0
mov [ esi + 0x1c ] eax
je r-xdata
mov [ esi + 0x10ea ] cl
mov ecx eax
and ecx 0xe0
cmp cl 0xe0
sete cl
mov [ esi + 0x10e1 ] cl
test cl cl
je r-xdata
mov ecx ebx
call sub_4089b7
test al al
je r-xdata
mov ecx [ ebp - 0x58 ]
mov eax [ ecx ]
push edi
push [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x0
push [ ebp - 0x50 ]
call [ eax + 0xc ]
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov [ esi + 0x10ec ] 0x1
cmp dl 0x5
je r-xdata
mov [ esi + 0x108c ] 0x1
sub ecx edi
je r-xdata
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov edx eax
and edx 0xf000
cmp edx 0xa000
jne r-xdata
cmp dl 0x6
jae r-xdata
mov [ esi + 0x108c ] edi
jmp r-xdata
sub ecx 0x5
je r-xdata
xor eax eax
test eax eax
jns r-xdata
mov [ ecx ] 0x1
xor ecx ecx
mov [ esi + 0x10f4 ] cx
xor edi edi
lea ecx [ esi + 0x10f0 ]
mov [ ecx ] edi
cmp dl 0x3
jne r-xdata
and [ esi + 0x10ec ] 0x0
jmp r-xdata
mov [ esi + 0x108c ] 0x3
jmp r-xdata
sub ecx 0x6
je r-xdata
cmp [ ebp - 0x1c ] 0xffffffff
mov [ ebp - 0x18 ] edi
sete al
lea ecx [ ebp - 0x48 ]
call sub_40b2be
lea ecx [ ebp - 0x48 ]
mov edi eax
call sub_40b2be
cmp [ ebp - 0x1c ] 0xffffffff
mov [ ebp - 0x18 ] eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ esi + 0x108c ] 0x4
jmp r-xdata
mov edi 0x1fff
cmp [ ebp - 0x14 ] edi
jae r-xdata
mov eax 0x7fffffff
mov [ esi + 0x1050 ] eax
mov [ esi + 0x1054 ] eax
xor eax eax
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ esi + 0x10e8 ] al
mov eax [ esi + 0x8 ]
shr eax 0x8
and al 0x1
mov [ esi + 0x10e9 ] al
je r-xdata
push edi
lea eax [ ebp - 0x2880 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_40b3a5
cmp [ ebp - 0xd ] 0x0
mov [ ebp + edi - 0x2880 ] 0x0
je r-xdata
mov edi [ ebp - 0x14 ]
push 0x1
push 0x0
push 0x0
push edi
mov [ esi + 0x108a ] al
call sub_41a750
mov ecx [ esi + 0x14 ]
xor edi edi
push 0x1
push edi
add eax ecx
push edi
push [ ebp - 0x18 ]
adc edx edi
mov [ esi + 0x1048 ] eax
mov [ esi + 0x104c ] edx
call sub_41a750
xor ecx ecx
add eax [ ebp - 0x1c ]
adc edx ecx
mov [ esi + 0x1050 ] eax
mov [ esi + 0x1054 ] edx
cmp [ esi + 0x108a ] cl
je r-xdata
xor eax eax
inc eax
jmp r-xdata
lea eax [ esi + 0x20 ]
push 0x800
push eax
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x2880 ]
push eax
call sub_4116c2
mov edi [ esi + 0xc ]
sub edi [ ebp - 0x14 ]
sub edi 0x20
test [ esi + 0x8 ] 0x400
je r-xdata
test [ esi + 0x8 ] 0x200
mov edi 0x800
je r-xdata
test edi edi
jle r-xdata
sub edi 0x8
lea eax [ esi + 0x20 ]
xor ecx ecx
mov [ ebp - 0x18 ] eax
mov [ eax ] cx
lea ecx [ ebp - 0x5c ]
call sub_4060cb
lea eax [ ebp - 0x2880 ]
push eax
call sub_41a5e0
pop ecx
push edi
lea ecx [ esi + 0x20 ]
push ecx
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x14 ]
inc eax
sub ecx eax
push ecx
lea eax [ ebp + eax - 0x2880 ]
push eax
lea eax [ ebp - 0x2880 ]
push eax
lea ecx [ ebp - 0x5c ]
call sub_4060dc
jmp r-xdata
push r--data
push [ ebp - 0x18 ]
call sub_41a5a1
pop ecx
pop ecx
test eax eax
jne r-xdata
lea ecx [ esi + 0x1020 ]
push edi
call sub_401c21
push edi
push [ esi + 0x1020 ]
lea ecx [ ebp - 0x48 ]
call sub_40b3a5
push r--data
push [ ebp - 0x18 ]
call sub_41a5a1
pop ecx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x400
je r-xdata
push edi
lea eax [ ebp - 0x880 ]
push eax
lea eax [ ebp - 0x2880 ]
push eax
call sub_410728
push edi
push [ ebp - 0x18 ]
lea eax [ ebp - 0x880 ]
push [ ebp - 0x18 ]
push eax
call sub_40a0b2
push esi
mov ecx ebx
call sub_401aad
jmp r-xdata
mov [ ebx + 0xb056 ] 0x1
mov eax [ esi + 0x1020 ]
movzx ecx [ eax + 0xb ]
movzx edx [ eax + 0xa ]
add eax 0x8
shl ecx 0x8
add ecx edx
movzx edx [ eax + 0x1 ]
movzx eax [ eax ]
and [ ebx + 0x652c ] 0x0
shl ecx 0x8
push 0x0
add ecx edx
push 0x200
push [ ebx + 0x652c ]
shl ecx 0x8
add ecx eax
push ecx
call sub_41a750
mov [ ebx + 0x6528 ] eax
mov eax [ ebx ]
mov ecx ebx
mov [ ebx + 0x652c ] edx
call [ eax + 0x10 ]
push edx
push eax
push [ ebx + 0x652c ]
mov [ ebp - 0x28 ] eax
push [ ebx + 0x6528 ]
mov [ ebp - 0x24 ] edx
call sub_4106fd
push [ ebp - 0x24 ]
mov [ ebx + 0x6530 ] eax
push [ ebp - 0x28 ]
mov edi eax
push 0x0
push 0xc8
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
call sub_41a6a0
add eax [ ebx + 0x6528 ]
adc edx [ ebx + 0x652c ]
push edx
push eax
call sub_4106fd
cmp eax edi
jle r-xdata
push [ ebp - 0x20 ]
lea ecx [ esi + 0x1030 ]
call sub_411202
test [ esi + 0x8 ] 0x1000
je r-xdata
push 0x8
lea eax [ esi + 0x1091 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_40b3a5
inc edi
mov [ ebx + 0x6530 ] edi
mov eax [ esi + 0x1048 ]
add [ ebx + 0xb048 ] eax
mov eax [ esi + 0x104c ]
lea ecx [ ebp - 0x48 ]
adc [ ebx + 0xb04c ] eax
mov al [ esi + 0x10e2 ]
mov [ ebp - 0x24 ] al
push [ ebp - 0x24 ]
call sub_40b3f5
movzx eax ax
cmp [ esi ] eax
je r-xdata
lea ecx [ ebp - 0x48 ]
call sub_40b289
and [ ebp - 0x4c ] 0x0
and [ ebp - 0x14 ] 0x0
lea ecx [ ebx + 0x7618 ]
movzx eax ax
mov [ ebp - 0x58 ] ecx
lea ecx [ ebx + 0x7620 ]
movzx eax ax
mov [ ebp - 0x54 ] ecx
lea ecx [ ebx + 0x7628 ]
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] 0xc
push 0x1
mov ecx rw-data
mov [ ebx + 0xb064 ] 0x1
call sub_406257
cmp [ ebp - 0xe ] 0x0
jne r-xdata
sub [ ebp - 0x1c ] 0x4
inc [ ebp - 0x14 ]
cmp [ ebp - 0x1c ] 0xfffffffc
jg r-xdata
test edi edi
je r-xdata
push [ ebp - 0x18 ]
lea eax [ ebx + 0x1e ]
push eax
push 0x1a
call sub_4062fd
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov edi [ ebp + eax * 4 - 0x58 ]
mov eax [ ebp - 0x24 ]
mov cl [ ebp - 0x1c ]
shr eax cl
mov [ ebp - 0x20 ] eax
test al 0x8
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0x80 ]
push eax
mov ecx edi
call sub_410fa3
test [ ebp - 0x20 ] 0x4
je r-xdata
lea ecx [ ebp - 0x48 ]
call sub_40b2be
push eax
mov ecx edi
call sub_411202
mov eax [ ebp - 0x20 ]
and [ ebp - 0x68 ] 0x0
and eax 0x3
jle r-xdata
inc [ ebp - 0x6c ]
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + eax * 4 - 0x58 ]
call sub_4110f3
push 0x3
pop edi
sub edi eax
shl edi 0x3
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x48 ]
call sub_40b271
movzx eax al
mov ecx edi
shl eax cl
add edi 0x8
or [ ebp - 0x68 ] eax
dec [ ebp - 0x20 ]
jne r-xdata
sub_402732
push ebp
lea ebp [ esp - 0x6c ]
mov eax 0x20c0
call sub_41a670
push edi
mov edi [ ebp + 0x74 ]
mov [ ebp + 0x68 ] ecx
mov ecx [ edi + 0x14 ]
mov eax ecx
sub eax [ ebp + 0x78 ]
cmp eax [ edi + 0x18 ]
jb r-xdata
pop edi
add ebp 0x6c
leave
retn 0xc
sub ecx eax
mov [ edi + 0x18 ] eax
cmp ecx 0x2
jb r-xdata
push esi
mov esi [ ebp + 0x7c ]
push ebx
pop ebx
pop esi
mov ecx [ edi + 0x18 ]
mov edx [ edi + 0x14 ]
sub edx ecx
je r-xdata
xor ebx ebx
cmp [ ebp + 0x50 ] ebx
jg r-xdata
jl r-xdata
add ecx eax
mov [ ebp + 0x5c ] ecx
mov ecx edi
call sub_40b31c
mov ebx [ edi + 0x14 ]
sub ebx [ edi + 0x18 ]
cmp [ esi + 0x4 ] 0x1
mov [ ebp + 0x60 ] eax
mov [ ebp + 0x64 ] edx
jne r-xdata
cmp eax edx
ja r-xdata
mov eax [ esi + 0x4 ]
cmp eax 0x2
je r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
ja r-xdata
cmp eax 0x3
jne r-xdata
test edx edx
jne r-xdata
mov eax [ ebp + 0x5c ]
mov [ edi + 0x18 ] eax
mov eax [ edi + 0x14 ]
sub eax [ edi + 0x18 ]
cmp eax 0x2
jae r-xdata
jb r-xdata
mov ecx edi
mov [ esi + 0x1e ] al
call sub_40b31c
mov [ ebp + 0x74 ] eax
test al 0x1
je r-xdata
mov ecx edi
call sub_40b31c
mov ecx eax
or ecx edx
mov [ ebp + 0x50 ] edx
je r-xdata
mov eax [ ebp + 0x60 ]
dec eax
je r-xdata
cmp [ ebp + 0x60 ] 0x7
ja r-xdata
test [ ebp + 0x74 ] 0x2
je r-xdata
mov ecx edi
call sub_40b31c
mov [ ebp + 0x54 ] eax
or eax edx
je r-xdata
mov ecx edi
call sub_40b31c
test eax eax
jbe r-xdata
dec eax
je r-xdata
mov ecx edi
call sub_40b31c
mov [ ebp + 0x44 ] eax
or eax edx
je r-xdata
mov ecx [ ebp + 0x68 ]
mov eax [ ecx + 0xb040 ]
add eax [ ebp + 0x54 ]
mov ecx [ ecx + 0xb044 ]
adc ecx edx
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] ecx
mov ecx edi
call sub_40b31c
mov cl al
and cl 0x1
shr eax 0x1
mov [ esi + 0x10b1 ] cl
and al 0x1
mov ecx edi
mov [ esi + 0x10ba ] al
call sub_40b271
movzx eax al
mov [ esi + 0x10dc ] eax
cmp eax 0x18
jbe r-xdata
mov ecx [ ebp + 0x68 ]
lea eax [ esi + 0x20 ]
push eax
call sub_401ca7
jmp r-xdata
mov ecx edi
call sub_40b31c
test eax eax
jne r-xdata
dec eax
je r-xdata
mov ecx [ ebp + 0x68 ]
mov eax [ ecx + 0xb040 ]
add eax [ ebp + 0x44 ]
mov ecx [ ecx + 0xb044 ]
adc ecx edx
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] ecx
push 0x10
lea eax [ esi + 0x1091 ]
push eax
mov ecx edi
call sub_40b3a5
push 0x10
lea eax [ esi + 0x10a1 ]
push eax
mov ecx edi
call sub_40b3a5
cmp [ esi + 0x10b1 ] 0x0
je r-xdata
mov ecx [ ebp + 0x68 ]
lea eax [ esi + 0x20 ]
push eax
call sub_401ca7
push 0x20
lea eax [ esi + 0x1064 ]
mov [ esi + 0x1060 ] 0x3
push eax
xor eax eax
jl r-xdata
dec eax
je r-xdata
mov [ esi + 0x1090 ] 0x1
mov [ esi + 0x108c ] 0x5
mov [ esi + 0x108b ] 0x1
push 0x8
lea ebx [ esi + 0x10b2 ]
push ebx
mov ecx edi
call sub_40b3a5
push 0x4
lea eax [ ebp + 0x7c ]
push eax
mov ecx edi
call sub_40b3a5
lea eax [ ebp - 0x54 ]
push eax
call sub_4102a4
push 0x8
push ebx
lea eax [ ebp - 0x54 ]
push eax
call sub_4105a6
lea eax [ ebp + 0x24 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
call sub_41061f
push 0x4
lea eax [ ebp + 0x24 ]
push eax
lea eax [ ebp + 0x7c ]
push eax
call sub_41a784
add esp 0xc
neg eax
sbb al al
inc al
mov [ esi + 0x10b1 ] al
jg r-xdata
xor eax eax
jl r-xdata
dec eax
je r-xdata
mov ecx edi
call sub_40b31c
mov bl al
and bl 0x1
mov [ ebp + 0x77 ] al
test al 0x2
je r-xdata
cmp ebx 0x9
jb r-xdata
jg r-xdata
mov ecx edi
call sub_40b31c
mov ecx edi
mov [ esi + 0x10f0 ] eax
call sub_40b31c
and al 0x1
mov ecx edi
mov [ esi + 0x20f4 ] al
call sub_40b31c
mov ebx eax
mov [ ebp - 0x2054 ] 0x0
cmp ebx 0x1fff
jae r-xdata
dec eax
je r-xdata
test [ ebp + 0x77 ] 0x4
je r-xdata
mov ecx edi
test bl bl
je r-xdata
mov ecx edi
call sub_40b31c
mov ecx edi
call sub_40b31c
test eax eax
je r-xdata
cmp ebx 0x1
jb r-xdata
push 0x2000
lea eax [ ebp - 0x2054 ]
push eax
push eax
call sub_409fd3
push 0x800
lea eax [ esi + 0x10f4 ]
push eax
lea eax [ ebp - 0x2054 ]
push eax
call sub_411857
jmp r-xdata
push ebx
lea eax [ ebp - 0x2054 ]
push eax
mov ecx edi
call sub_40b3a5
mov [ ebp + ebx - 0x2054 ] 0x0
mov ecx edi
call sub_40b31c
mov ecx eax
shr ecx 0x2
and cl 0x1
mov [ esi + 0x20f6 ] cl
mov ecx eax
shr ecx 0x3
and cl 0x1
lea ebx [ esi + 0x20f8 ]
mov [ ebp + 0x78 ] eax
mov [ esi + 0x20f7 ] cl
mov [ esi + 0x21f8 ] 0x0
mov [ ebx ] 0x0
test al 0x1
je r-xdata
dec eax
jne r-xdata
test [ ebp + 0x77 ] 0x8
je r-xdata
mov ecx edi
test bl bl
je r-xdata
call sub_40b2fb
push edx
push eax
lea ecx [ esi + 0x1030 ]
call sub_410f35
call sub_40b2be
push 0x0
push eax
lea ecx [ esi + 0x1030 ]
call sub_410f09
jmp r-xdata
push eax
push r--data
lea eax [ ebp + 0x1c ]
push 0x14
push eax
mov [ esi + 0x10e3 ] 0x1
call sub_401b7b
add esp 0x10
push 0x800
lea eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x68 ]
add eax 0x6608
push eax
call sub_4107bf
jmp r-xdata
test [ ebp + 0x78 ] 0x2
je r-xdata
mov ecx edi
call sub_40b31c
mov [ ebp + 0x74 ] eax
mov eax 0xff
cmp [ ebp + 0x74 ] eax
jb r-xdata
lea ecx [ esi + 0x1020 ]
push ebx
call sub_401c21
push ebx
push [ esi + 0x1020 ]
jmp r-xdata
mov ecx edi
test bl bl
je r-xdata
call sub_40b2fb
push edx
push eax
lea ecx [ esi + 0x1038 ]
call sub_410f35
call sub_40b2be
push 0x0
push eax
lea ecx [ esi + 0x1038 ]
call sub_410f09
jmp r-xdata
cmp [ esi + 0x20f6 ] 0x0
je r-xdata
mov ecx edi
call sub_40b31c
mov [ ebp + 0x74 ] eax
mov eax 0xff
cmp [ ebp + 0x74 ] eax
jb r-xdata
push [ ebp + 0x74 ]
mov ecx edi
push ebx
call sub_40b3a5
mov eax [ ebp + 0x74 ]
mov [ ebx + eax ] 0x0
mov [ ebp + 0x74 ] eax
mov ecx edi
call sub_40b3a5
jmp r-xdata
call sub_40b2fb
push edx
push eax
lea ecx [ esi + 0x1040 ]
call sub_410f35
jmp r-xdata
call sub_40b2be
push 0x0
push eax
lea ecx [ esi + 0x1040 ]
call sub_410f09
jmp r-xdata
cmp [ esi + 0x20f7 ] 0x0
je r-xdata
mov ecx edi
call sub_40b31c
mov [ esi + 0x22f8 ] eax
push [ ebp + 0x74 ]
lea ebx [ esi + 0x21f8 ]
push ebx
mov ecx edi
call sub_40b3a5
mov eax [ ebp + 0x74 ]
mov [ ebx + eax ] 0x0
mov [ ebp + 0x74 ] eax
mov [ esi + 0x20f5 ] 0x1
jmp r-xdata
mov ecx edi
call sub_40b31c
mov [ esi + 0x22fc ] eax
sub_402c53
mov eax sub_429137
call sub_41a05c
mov eax 0xe6e0
call sub_41a670
push ebx
push esi
mov esi ecx
cmp [ esi + 0xb064 ] 0x0
push edi
je r-xdata
cmp [ esi + 0x8942 ] 0x5
ja r-xdata
add esi 0x1e
push esi
push 0x1b
call sub_4012d0
push 0x3
mov ecx rw-data
call sub_406257
jmp r-xdata
add esi 0x1e
push esi
push 0x1c
call sub_4012d0
mov eax [ esi + 0xb050 ]
movzx ecx [ esi + 0x8941 ]
sub eax 0x3
neg eax
sbb eax eax
and eax 0x1d
cmp ecx eax
jg r-xdata
xor al al
mov eax [ esi + 0x9970 ]
or eax [ esi + 0x9974 ]
jne r-xdata
lea edi [ esi + 0x20e8 ]
mov ecx edi
call sub_40b467
push edi
lea ecx [ ebp - 0xe6ec ]
call sub_417214
xor ebx ebx
push ebx
push [ esi + 0x9a0c ]
lea ecx [ ebp - 0xe6ec ]
mov [ ebp - 0x4 ] ebx
call sub_412276
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp [ esi + 0x99b1 ] al
jne r-xdata
cmp [ esi + 0x99b3 ] 0x0
je r-xdata
cmp [ esi + 0x997c ] ebx
jl r-xdata
mov al 0x1
jmp r-xdata
push 0x1
lea ebx [ esi + 0x9988 ]
push [ ebx ]
lea ecx [ esi + 0x59b8 ]
call sub_40960d
mov ecx [ esi + 0x9974 ]
push [ ebp + 0xc ]
mov eax [ esi + 0x9970 ]
mov [ esi + 0x210c ] ecx
push esi
mov ecx edi
mov [ esi + 0x2108 ] eax
mov [ esi + 0x2110 ] 0x0
call sub_40b572
mov al [ esi + 0x99b1 ]
mov [ esi + 0x42af ] al
and [ edi + 0x3c ] 0x0
lea eax [ esi + 0x8928 ]
mov [ edi + 0x38 ] eax
cmp [ esi + 0x8942 ] 0x0
mov eax [ esi + 0x9978 ]
mov ecx [ esi + 0x997c ]
mov [ ebp - 0x9aac ] eax
mov [ ebp - 0x9aa8 ] ecx
mov [ ebp - 0x9a94 ] 0x0
jne r-xdata
mov eax [ esi + 0x6524 ]
cmp [ eax + 0x4120 ] 0x0
je r-xdata
mov ebx [ ebp + 0x8 ]
push [ esi + 0x9978 ]
mov ecx ebx
call sub_401c21
push [ esi + 0x9978 ]
mov ecx edi
push [ ebx ]
call sub_40b5dd
xor ebx ebx
jg r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
movzx eax [ esi + 0x8941 ]
push 0x0
push eax
lea ecx [ ebp - 0xe6ec ]
call sub_41867d
push ecx
push eax
push edi
call sub_406fac
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xe6ec ]
call sub_415195
jmp r-xdata
movzx edx [ esi + 0x99b8 ]
lea ecx [ esi + 0x99e3 ]
push ecx
lea ecx [ esi + 0x99da ]
push ecx
push [ esi + 0x9a04 ]
lea ecx [ esi + 0x99c9 ]
push ecx
neg edx
sbb edx edx
lea ecx [ esi + 0x99b9 ]
and edx ecx
push edx
add eax 0x4020
push eax
push [ esi + 0x99b4 ]
mov ecx edi
push ebx
call sub_40b592
add esi 0x1e
push esi
push 0x1c
call sub_4012d0
cmp [ esi + 0x9978 ] 0x1000000
jbe r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xe6ec ]
call sub_415195
jmp r-xdata
lea eax [ esi + 0x8948 ]
push eax
add esi 0x1e
push esi
push 0x1d
call sub_4062fd
push 0x3
mov ecx rw-data
call sub_406257
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
movzx ecx [ esi + 0x99e2 ]
neg ecx
sbb ecx ecx
lea eax [ esi + 0x99e3 ]
and ecx eax
push ecx
push ebx
lea ecx [ esi + 0x59b8 ]
call sub_409871
test al al
jne r-xdata
call sub_4125f7
jmp r-xdata
sub_402ee8
push ebp
sub esp 0x50
mov eax sub_429149
call sub_41a05c
mov eax 0x2070
call sub_41a670
push ebx
push esi
mov ebx ecx
push edi
push ebx
lea ecx [ ebp + 0x28 ]
call sub_40b445
xor edi edi
cmp [ ebx + 0xb05c ] 0x0
mov [ ebp - 0x4 ] edi
je r-xdata
mov [ ebp + 0x53 ] 0x0
jmp r-xdata
mov eax [ ebx + 0xb060 ]
mov edx [ ebx + 0xb044 ]
xor ecx ecx
add eax 0x8
adc ecx edi
cmp edx ecx
jl r-xdata
push 0x7
lea ecx [ ebp + 0x28 ]
call sub_40b1d7
cmp eax 0x7
jb r-xdata
jg r-xdata
mov ecx ebx
call sub_401c3b
lea ecx [ ebp + 0x28 ]
mov [ ebx + 0x655c ] 0x0
lea esi [ ebx + 0x654c ]
call sub_40b2be
push 0x4
lea ecx [ ebp + 0x28 ]
mov [ esi ] eax
call sub_40b37f
lea ecx [ ebp + 0x28 ]
mov edi eax
call sub_40b31c
mov ecx eax
or ecx edx
je r-xdata
mov ecx ebx
mov [ ebp + 0x53 ] 0x1
call sub_401bce
mov eax [ ebx ]
push 0x10
lea ecx [ ebp + 0x10 ]
push ecx
mov ecx ebx
call [ eax + 0x8 ]
cmp eax 0x10
je r-xdata
mov ecx [ ebx + 0xb040 ]
cmp ecx eax
jbe r-xdata
je r-xdata
mov ecx ebx
call sub_401c84
test edi edi
je r-xdata
lea eax [ ebp + 0x20 ]
push eax
push edi
push [ ebx + 0x65c8 ]
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebx + 0x65cc ]
push eax
mov eax [ ebx + 0x6524 ]
add eax 0x4020
push eax
push 0x5
lea esi [ ebx + 0x1024 ]
push edi
mov ecx esi
call sub_405f84
cmp [ ebx + 0x65c4 ] 0x0
je r-xdata
xor eax eax
push [ ebp + 0x28 ]
call sub_41a086
pop ecx
add eax edi
lea ecx [ eax - 0x3 ]
lea edi [ eax + 0x4 ]
test ecx ecx
jl r-xdata
mov [ ebp + 0x44 ] esi
push 0x8
lea eax [ ebx + 0x65dc ]
push eax
lea eax [ ebp + 0x20 ]
push eax
call sub_41a784
add esp 0xc
test eax eax
je r-xdata
cmp edi 0x7
jb r-xdata
lea eax [ ebx + 0x1e ]
push eax
push 0x6
call sub_4012d0
push 0xb
mov ecx rw-data
mov [ ebx + 0xb065 ] 0x1
call sub_406257
jmp r-xdata
push ecx
lea ecx [ ebp + 0x28 ]
call sub_40b1d7
cmp [ ebp + 0x3c ] edi
jae r-xdata
cmp [ ebp + 0x28 ] edi
jmp r-xdata
lea ecx [ ebp + 0x28 ]
call sub_40b425
lea ecx [ ebp + 0x28 ]
mov [ ebp + 0x4c ] eax
call sub_40b31c
lea ecx [ ebp + 0x28 ]
mov [ ebx + 0x6550 ] eax
call sub_40b31c
mov [ ebx + 0x6554 ] eax
shr eax 0x2
and al 0x1
mov [ ebx + 0x655c ] al
mov eax [ ebx + 0x6550 ]
mov [ ebx + 0x6544 ] eax
mov eax [ ebp + 0x4c ]
cmp [ esi ] eax
mov [ ebx + 0x6558 ] edi
setne [ ebp + 0x4b ]
cmp [ ebp + 0x4b ] 0x0
je r-xdata
mov ecx ebx
call sub_401c3b
jmp r-xdata
xor edi edi
test [ ebx + 0x6554 ] 0x1
mov [ ebp + 0x18 ] edi
mov [ ebp + 0x1c ] edi
je r-xdata
mov ecx ebx
call sub_401c84
push 0x3
mov ecx rw-data
mov [ ebx + 0xb064 ] 0x1
call sub_406257
cmp [ ebp + 0x53 ] 0x0
je r-xdata
cmp [ ebp + 0x28 ] 0x0
test [ ebx + 0x6554 ] 0x2
mov [ ebp + 0x20 ] edi
mov [ ebp + 0x24 ] edi
je r-xdata
lea ecx [ ebp + 0x28 ]
call sub_40b31c
xor ecx ecx
mov [ ebp + 0x18 ] eax
mov eax [ ebx + 0x6558 ]
mov [ ebp + 0x1c ] edx
cmp edx ecx
jb r-xdata
lea eax [ ebx + 0x1e ]
push eax
push eax
push 0x4
call sub_4062fd
mov [ ebx + 0xb065 ] 0x1
jmp r-xdata
push [ ebx + 0x6558 ]
mov ecx ebx
call sub_4010d4
xor ecx ecx
add eax [ ebx + 0xb040 ]
adc ecx [ ebx + 0xb044 ]
add eax [ ebp + 0x20 ]
adc ecx [ ebp + 0x24 ]
mov [ ebx + 0xb048 ] eax
mov eax [ ebx + 0x6550 ]
mov [ ebx + 0xb04c ] ecx
cmp eax 0x1
je r-xdata
lea ecx [ ebp + 0x28 ]
call sub_40b31c
mov [ ebp + 0x20 ] eax
mov [ ebp + 0x24 ] edx
ja r-xdata
lea edi [ ebx + 0x6570 ]
mov ecx edi
call sub_4098a1
push 0x5
pop ecx
[ edi ] [ esi ]
lea ecx [ ebp + 0x28 ]
call sub_40b31c
mov cl al
and cl 0x1
mov [ ebx + 0xb055 ] cl
mov ecx eax
shr ecx 0x2
and cl 0x1
mov [ ebx + 0xb054 ] cl
mov ecx eax
shr ecx 0x4
and cl 0x1
mov [ ebx + 0xb057 ] cl
mov ecx eax
shr ecx 0x3
and cl 0x1
mov [ ebx + 0xb05b ] cl
mov [ ebx + 0xb058 ] 0x0
mov [ ebx + 0xb05a ] 0x1
test al 0x2
je r-xdata
jle r-xdata
mov ecx ebx
call sub_401c84
jmp r-xdata
cmp [ ebp + 0x18 ] eax
jb r-xdata
and [ ebx + 0xb078 ] 0x0
lea ecx [ ebp + 0x28 ]
call sub_40b31c
mov [ ebx + 0xb078 ] eax
jmp r-xdata
mov eax [ ebx + 0xb04c ]
cmp eax [ ebx + 0xb044 ]
jg r-xdata
cmp eax 0x3
jle r-xdata
xor eax eax
cmp [ ebx + 0xb078 ] 0x0
jne r-xdata
cmp [ ebx + 0xb055 ] 0x0
je r-xdata
cmp [ ebp + 0x28 ] 0x0
mov esi [ ebp + 0x3c ]
je r-xdata
jl r-xdata
cmp eax 0x2
lea eax [ ebx + 0x65e8 ]
je r-xdata
cmp eax 0x4
je r-xdata
lea eax [ ebx + 0x6570 ]
push eax
push [ ebp + 0x18 ]
lea eax [ ebp + 0x28 ]
push eax
mov ecx ebx
call sub_402732
xor eax eax
inc eax
jmp r-xdata
mov eax esi
jmp r-xdata
push [ ebp + 0x28 ]
call sub_41a086
pop ecx
mov eax [ ebx + 0xb048 ]
cmp eax [ ebx + 0xb040 ]
jbe r-xdata
mov edi eax
push 0x0
mov ecx edi
mov [ ebp + 0x4c ] eax
call sub_4098cc
mov eax [ ebp + 0x20 ]
push 0x5
pop ecx
[ edi ] [ esi ]
cmp [ ebx + 0x6550 ] 0x2
mov esi [ ebp + 0x4c ]
mov [ esi + 0x1048 ] eax
mov eax [ ebp + 0x24 ]
lea ecx [ ebp + 0x28 ]
sete [ ebp + 0x53 ]
mov [ esi + 0x10e9 ] 0x1
mov [ esi + 0x104c ] eax
call sub_40b31c
lea ecx [ ebp + 0x28 ]
mov [ esi + 0x1084 ] eax
call sub_40b31c
mov [ esi + 0x1050 ] eax
mov eax [ esi + 0x1084 ]
shr eax 0x3
and al 0x1
mov [ esi + 0x1054 ] edx
mov [ esi + 0x108a ] al
je r-xdata
lea eax [ ebx + 0x8928 ]
push 0x5
pop ecx
lea edi [ ebx + 0x65b0 ]
[ edi ] [ esi ]
lea ecx [ ebp + 0x28 ]
call sub_40b31c
test eax eax
jbe r-xdata
cmp eax 0x5
jne r-xdata
mov [ ebx + 0xb059 ] al
mov eax [ ebp + 0x18 ]
or eax [ ebp + 0x1c ]
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add ebp 0x54
leave
retn
mov eax [ esi + 0x104c ]
mov ecx [ esi + 0x1054 ]
cmp eax ecx
mov edx [ esi + 0x1048 ]
mov edi [ esi + 0x1050 ]
jl r-xdata
mov eax 0x7fffffff
mov [ esi + 0x1050 ] eax
mov [ esi + 0x1054 ] eax
lea ecx [ ebp + 0x28 ]
call sub_40b31c
and al 0x1
lea ecx [ ebp + 0x28 ]
mov [ ebx + 0x65c4 ] al
call sub_40b271
movzx eax al
mov [ ebx + 0x65c8 ] eax
cmp eax 0x18
ja r-xdata
lea eax [ ebx + 0x1e ]
push eax
mov ecx ebx
call sub_401ca7
jmp r-xdata
push eax
pop ecx
lea edi [ ebx + 0x88e8 ]
[ edi ] [ esi ]
lea ecx [ ebp + 0x28 ]
call sub_40b31c
and al 0x1
mov [ ebx + 0x8904 ] al
mov [ ebx + 0x8907 ] 0x0
mov [ ebx + 0x8905 ] 0x0
mov [ ebx + 0x8906 ] 0x0
jmp r-xdata
mov edx edi
mov eax ecx
jg r-xdata
push 0x10
lea eax [ ebx + 0x65cc ]
push eax
lea ecx [ ebp + 0x28 ]
call sub_40b3a5
cmp [ ebx + 0x65c4 ] 0x0
je r-xdata
lea eax [ esi + 0x1060 ]
and [ eax ] 0x0
test [ esi + 0x1084 ] 0x4
je r-xdata
lea ecx [ ebp + 0x28 ]
call sub_40b2be
push 0x0
push eax
lea ecx [ esi + 0x1030 ]
call sub_410f09
lea ecx [ ebp + 0x28 ]
mov [ esi + 0x1058 ] edx
mov [ esi + 0x105c ] eax
call sub_40b31c
test [ esi + 0x1084 ] 0x2
mov [ esi + 0x1c ] eax
je r-xdata
cmp edx edi
ja r-xdata
mov [ ebx + 0xb05c ] 0x1
jmp r-xdata
push 0x8
lea esi [ ebx + 0x65dc ]
push esi
lea ecx [ ebp + 0x28 ]
call sub_40b3a5
push 0x4
lea eax [ ebp + 0x4c ]
push eax
lea ecx [ ebp + 0x28 ]
call sub_40b3a5
lea eax [ ebp - 0x7c ]
push eax
call sub_4102a4
push 0x8
push esi
lea eax [ ebp - 0x7c ]
push eax
call sub_4105a6
lea eax [ ebp ]
push eax
lea eax [ ebp - 0x7c ]
push eax
call sub_41061f
push 0x4
lea eax [ ebp ]
push eax
lea eax [ ebp + 0x4c ]
push eax
call sub_41a784
add esp 0xc
neg eax
sbb al al
inc al
mov [ ebx + 0x65c4 ] al
and [ esi + 0x10f0 ] 0x0
lea ecx [ ebp + 0x28 ]
call sub_40b31c
mov ecx eax
shr ecx 0x7
and cl 0x7
mov [ ebp + 0x4c ] eax
mov [ esi + 0x1a ] cl
and al 0x3f
lea ecx [ ebp + 0x28 ]
mov [ esi + 0x19 ] al
call sub_40b31c
lea ecx [ ebp + 0x28 ]
mov [ esi + 0x18 ] al
call sub_40b31c
mov dl [ esi + 0x18 ]
mov edi eax
mov eax [ ebx + 0x6554 ]
shr eax 0x6
and al 0x1
lea ecx [ esi + 0x10ec ]
mov [ esi + 0x10e8 ] al
mov [ ecx ] 0x2
cmp dl 0x1
jne r-xdata
lea ecx [ ebp + 0x28 ]
mov [ eax ] 0x2
call sub_40b2be
mov [ esi + 0x1064 ] eax
test dl dl
jne r-xdata
mov [ ecx ] 0x1
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax ecx
shr eax 0x3
and al 0x1
mov [ esi + 0x1088 ] al
mov eax ecx
shr eax 0x4
shr ecx 0x5
and al 0x1
and cl 0x1
cmp [ ebp + 0x53 ] 0x0
mov [ esi + 0x1089 ] al
mov [ esi + 0x10ea ] cl
je r-xdata
and [ ecx ] 0x0
xor ecx ecx
test [ ebp + 0x4c ] 0x40
je r-xdata
push edi
lea eax [ ebp - 0x207c ]
push eax
lea ecx [ ebp + 0x28 ]
call sub_40b3a5
mov [ ebp + edi - 0x207c ] 0x0
push 0x800
lea edi [ esi + 0x20 ]
push edi
lea eax [ ebp - 0x207c ]
push eax
call sub_411857
mov eax [ ebp + 0x18 ]
or eax [ ebp + 0x1c ]
je r-xdata
mov edi ecx
xor ecx ecx
inc ecx
jmp r-xdata
cmp [ ebp + 0x53 ] 0x0
je r-xdata
push esi
push [ ebp + 0x18 ]
lea eax [ ebp + 0x28 ]
push eax
mov ecx ebx
call sub_402732
mov dl [ esi + 0x1084 ]
mov [ esi + 0x10e0 ] cl
mov ecx [ ebp + 0x4c ]
shr ecx 0xa
and ecx 0xf
and dl 0x1
mov eax 0x20000
shl eax cl
movzx ecx dl
neg ecx
sbb ecx ecx
not ecx
and ecx eax
movzx eax [ esi + 0x108b ]
neg eax
sbb eax eax
mov [ esi + 0x10e4 ] ecx
and eax 0x5
mov ecx 0x1fff
mov [ esi + 0x10e1 ] dl
mov [ esi + 0x108c ] eax
cmp edi ecx
jb r-xdata
push r--data
push edi
call sub_41a5a1
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov ecx ebx
call sub_401aad
jmp r-xdata
cmp [ ebp + 0x4b ] 0x0
je r-xdata
mov [ ebx + 0xb056 ] 0x1
push edi
lea eax [ ebx + 0x1e ]
push eax
push 0x1a
call sub_4062fd
jmp r-xdata
sub_40365b
push ecx
push esi
mov esi ecx
cmp [ esi + 0xb065 ] 0x0
jne r-xdata
xor eax eax
mov eax [ esi ]
call [ eax + 0x10 ]
mov [ esi + 0xb040 ] eax
mov eax [ esi + 0xb050 ]
dec eax
dec eax
mov [ esi + 0xb044 ] edx
je r-xdata
mov ecx esi
call sub_401cc5
jmp r-xdata
dec eax
jne r-xdata
test eax eax
jbe r-xdata
mov eax [ esp + 0x4 ]
mov ecx esi
call sub_402ee8
jmp r-xdata
pop esi
pop ecx
retn
mov ecx [ esi + 0xb04c ]
cmp ecx [ esi + 0xb044 ]
jg r-xdata
jl r-xdata
mov ecx esi
call sub_401c84
mov ecx [ esi + 0xb048 ]
cmp ecx [ esi + 0xb040 ]
ja r-xdata
sub_4036ca
push ebx
push ebp
push esi
push edi
mov esi ecx
xor ebx ebx
call sub_40365b
mov edi eax
test edi edi
je r-xdata
xor eax eax
mov ebp [ esp + 0x14 ]
inc ebx
test bl 0x7f
jne r-xdata
cmp [ esi + 0x6544 ] 0x5
je r-xdata
cmp [ esi + 0x6544 ] ebp
je r-xdata
call sub_4109c9
mov eax edi
jmp r-xdata
mov ecx esi
call sub_4010c0
mov ecx esi
call sub_40365b
mov edi eax
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
cmp ebp 0x5
je r-xdata
sub_403723
push esi
push edi
mov esi ecx
jmp r-xdata
call sub_40365b
mov edi eax
test edi edi
jne r-xdata
mov eax [ esi + 0x6544 ]
cmp eax 0x5
je r-xdata
xor eax eax
cmp eax 0x3
jne r-xdata
mov ecx esi
call sub_4010c0
mov ecx esi
push [ esp + 0xc ]
lea ecx [ esi + 0x8928 ]
call sub_401b97
test al al
jne r-xdata
mov eax edi
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_40376b
push esi
mov eax 0x6a09e667
mov ecx 0xbb67ae85
mov edx 0x3c6ef372
mov esi 0xa54ff53a
movd xmm0 esi
movd xmm1 edx
movd xmm2 ecx
movd xmm3 eax
mov esi 0x5be0cd19
mov eax 0x510e527f
mov ecx 0x9b05688c
mov edx 0x1f83d9ab
punpckldq xmm2 xmm0
punpckldq xmm3 xmm1
punpckldq xmm3 xmm2
movdqa [ rw-data ] xmm3
movd xmm0 esi
movd xmm1 edx
movd xmm2 ecx
movd xmm3 eax
pop esi
punpckldq xmm2 xmm0
punpckldq xmm3 xmm1
punpckldq xmm3 xmm2
movdqa [ rw-data ] xmm3
retn
sub_4037de
push ebp
mov ebp esp
and esp 0xfffffff0
sub esp 0x54
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0xf4 ]
movdqa xmm4 [ ecx + 0x10 ]
movdqa xmm0 [ ecx ]
mov ecx [ edx + 0xf8 ]
movdqa xmm2 [ ecx ]
movdqa xmm1 [ rw-data ]
mov ecx [ eax + 0x18 ]
mov edx [ eax + 0x10 ]
push ebx
mov ebx [ eax + 0x1c ]
pxor xmm1 xmm2
push esi
mov esi [ eax + 0x8 ]
push edi
mov edi [ eax ]
movd xmm2 ecx
movd xmm3 edx
mov [ esp + 0x14 ] ebx
mov ebx [ eax + 0x14 ]
movd xmm5 esi
movd xmm6 edi
mov [ esp + 0x1c ] ebx
mov ebx [ eax + 0xc ]
movdqa [ esp + 0x40 ] xmm0
mov [ esp + 0x24 ] ebx
mov ebx [ eax + 0x4 ]
punpckldq xmm5 xmm2
punpckldq xmm6 xmm3
punpckldq xmm6 xmm5
paddd xmm0 xmm6
paddd xmm0 xmm4
pxor xmm1 xmm0
movdqa xmm2 xmm1
pslld xmm1 0x10
psrld xmm2 0x10
pxor xmm2 xmm1
movdqa xmm1 [ rw-data ]
movdqa [ esp + 0x50 ] xmm4
paddd xmm1 xmm2
pxor xmm4 xmm1
mov [ esp + 0x10 ] ebx
mov ebx [ esp + 0x14 ]
movdqa xmm3 xmm4
pslld xmm4 0x14
psrld xmm3 0xc
pxor xmm3 xmm4
movd xmm4 ebx
mov ebx [ esp + 0x1c ]
movd xmm5 ebx
mov ebx [ esp + 0x24 ]
movd xmm6 ebx
mov ebx [ esp + 0x10 ]
movd xmm7 ebx
mov ebx [ eax + 0x38 ]
mov [ esp + 0x30 ] ebx
mov ebx [ eax + 0x30 ]
punpckldq xmm6 xmm4
mov [ esp + 0x2c ] ebx
mov ebx [ eax + 0x28 ]
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm0 xmm7
paddd xmm0 xmm3
pxor xmm2 xmm0
movdqa xmm4 xmm2
pslld xmm2 0x18
psrld xmm4 0x8
pxor xmm4 xmm2
paddd xmm1 xmm4
pxor xmm3 xmm1
movdqa xmm5 xmm3
pslld xmm3 0x19
psrld xmm5 0x7
pxor xmm5 xmm3
pshufd xmm3 xmm1 0x4e
mov [ esp + 0x38 ] ebx
mov ebx [ eax + 0x20 ]
pshufd xmm2 xmm4 0x93
pshufd xmm1 xmm5 0x39
mov [ esp + 0x18 ] ebx
mov ebx [ esp + 0x30 ]
movd xmm4 ebx
mov ebx [ esp + 0x2c ]
movd xmm5 ebx
mov ebx [ esp + 0x38 ]
movd xmm6 ebx
mov ebx [ esp + 0x18 ]
movd xmm7 ebx
mov ebx [ eax + 0x3c ]
mov [ esp + 0x3c ] ebx
mov ebx [ eax + 0x34 ]
punpckldq xmm6 xmm4
mov [ esp + 0x20 ] ebx
mov ebx [ eax + 0x2c ]
mov eax [ eax + 0x24 ]
punpckldq xmm7 xmm5
movd xmm5 [ esp + 0x20 ]
punpckldq xmm7 xmm6
paddd xmm0 xmm7
paddd xmm0 xmm1
movdqa xmm4 xmm0
pxor xmm2 xmm4
movdqa xmm0 xmm2
pslld xmm2 0x10
psrld xmm0 0x10
pxor xmm0 xmm2
paddd xmm3 xmm0
pxor xmm1 xmm3
movdqa xmm2 xmm1
pslld xmm2 0x14
psrld xmm1 0xc
pxor xmm1 xmm2
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x3c ]
movd xmm6 ebx
mov [ esp + 0x34 ] ebx
mov ebx [ esp + 0x28 ]
movd xmm7 ebx
mov ebx [ esp + 0x20 ]
movd xmm2 eax
punpckldq xmm7 xmm5
punpckldq xmm6 xmm2
punpckldq xmm7 xmm6
paddd xmm4 xmm7
movd xmm7 [ esp + 0x30 ]
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm2 xmm0
pslld xmm0 0x18
psrld xmm2 0x8
pxor xmm2 xmm0
paddd xmm3 xmm2
pxor xmm1 xmm3
movdqa xmm5 xmm1
pslld xmm1 0x19
pshufd xmm0 xmm2 0x39
pshufd xmm2 xmm3 0x4e
movd xmm3 ebx
mov ebx [ esp + 0x28 ]
psrld xmm5 0x7
pxor xmm5 xmm1
pshufd xmm1 xmm5 0x93
movd xmm5 ebx
movd xmm6 edx
punpckldq xmm7 xmm5
punpckldq xmm6 xmm3
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
pslld xmm3 0x10
psrld xmm0 0x10
pxor xmm0 xmm3
paddd xmm2 xmm0
pxor xmm1 xmm2
movdqa xmm3 xmm1
psrld xmm1 0xc
pslld xmm3 0x14
pxor xmm1 xmm3
movd xmm6 [ esp + 0x18 ]
movd xmm7 [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
movd xmm3 ecx
movd xmm5 eax
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
movd xmm7 [ esp + 0x10 ]
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
psrld xmm3 0x8
pslld xmm0 0x18
pxor xmm3 xmm0
paddd xmm2 xmm3
pxor xmm1 xmm2
movdqa xmm5 xmm1
pshufd xmm0 xmm3 0x93
movd xmm3 [ esp + 0x1c ]
pslld xmm1 0x19
psrld xmm5 0x7
pxor xmm5 xmm1
pshufd xmm1 xmm5 0x39
movd xmm5 ebx
movd xmm6 edi
mov ebx [ esp + 0x1c ]
pshufd xmm2 xmm2 0x4e
punpckldq xmm7 xmm5
movd xmm5 [ esp + 0x14 ]
punpckldq xmm6 xmm3
punpckldq xmm7 xmm6
paddd xmm4 xmm7
movd xmm7 [ esp + 0x2c ]
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
pslld xmm3 0x10
psrld xmm0 0x10
pxor xmm0 xmm3
paddd xmm2 xmm0
pxor xmm1 xmm2
movdqa xmm3 xmm1
pslld xmm3 0x14
psrld xmm1 0xc
pxor xmm1 xmm3
movd xmm3 [ esp + 0x24 ]
movd xmm6 esi
punpckldq xmm7 xmm5
punpckldq xmm6 xmm3
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
psrld xmm3 0x8
pslld xmm0 0x18
pxor xmm3 xmm0
paddd xmm2 xmm3
pxor xmm1 xmm2
movdqa xmm5 xmm1
psrld xmm5 0x7
pslld xmm1 0x19
pxor xmm5 xmm1
pshufd xmm1 xmm5 0x93
movd xmm5 ebx
mov ebx [ esp + 0x2c ]
movd xmm6 ebx
mov ebx [ esp + 0x34 ]
pshufd xmm0 xmm3 0x39
movd xmm3 eax
movd xmm7 ebx
pshufd xmm2 xmm2 0x4e
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
mov ebx [ esp + 0x20 ]
pslld xmm3 0x10
psrld xmm0 0x10
pxor xmm0 xmm3
paddd xmm2 xmm0
pxor xmm1 xmm2
movdqa xmm3 xmm1
pslld xmm3 0x14
psrld xmm1 0xc
pxor xmm1 xmm3
movd xmm3 ebx
mov ebx [ esp + 0x18 ]
movd xmm7 ebx
mov ebx [ esp + 0x28 ]
movd xmm5 esi
movd xmm6 edi
punpckldq xmm7 xmm5
punpckldq xmm6 xmm3
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
psrld xmm3 0x8
pslld xmm0 0x18
pxor xmm3 xmm0
paddd xmm2 xmm3
pxor xmm1 xmm2
pshufd xmm0 xmm3 0x93
movdqa xmm5 xmm1
pslld xmm1 0x19
movd xmm3 ebx
mov ebx [ esp + 0x14 ]
psrld xmm5 0x7
pxor xmm5 xmm1
pshufd xmm1 xmm5 0x39
movd xmm5 ebx
mov ebx [ esp + 0x24 ]
movd xmm6 ebx
mov ebx [ esp + 0x38 ]
movd xmm7 ebx
mov ebx [ esp + 0x10 ]
pshufd xmm2 xmm2 0x4e
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
pslld xmm3 0x10
psrld xmm0 0x10
pxor xmm0 xmm3
paddd xmm2 xmm0
pxor xmm1 xmm2
movdqa xmm3 xmm1
pslld xmm3 0x14
movd xmm5 ebx
mov ebx [ esp + 0x30 ]
psrld xmm1 0xc
pxor xmm1 xmm3
movd xmm3 edx
movd xmm6 ecx
movd xmm7 ebx
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
pslld xmm0 0x18
psrld xmm3 0x8
pxor xmm3 xmm0
paddd xmm2 xmm3
pxor xmm1 xmm2
movdqa xmm5 xmm1
psrld xmm5 0x7
pslld xmm1 0x19
pxor xmm5 xmm1
pshufd xmm0 xmm3 0x39
mov ebx [ esp + 0x34 ]
movd xmm3 ebx
mov ebx [ esp + 0x20 ]
pshufd xmm1 xmm5 0x93
movd xmm5 ebx
mov ebx [ esp + 0x24 ]
movd xmm6 ebx
mov ebx [ esp + 0x14 ]
movd xmm7 ebx
mov ebx [ esp + 0x30 ]
pshufd xmm2 xmm2 0x4e
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
pslld xmm3 0x10
psrld xmm0 0x10
pxor xmm0 xmm3
paddd xmm2 xmm0
pxor xmm1 xmm2
movdqa xmm3 xmm1
pslld xmm3 0x14
psrld xmm1 0xc
pxor xmm1 xmm3
movd xmm3 ebx
mov ebx [ esp + 0x2c ]
movd xmm5 ebx
mov ebx [ esp + 0x10 ]
movd xmm6 ebx
mov ebx [ esp + 0x28 ]
movd xmm7 ebx
mov ebx [ esp + 0x1c ]
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
psrld xmm3 0x8
pslld xmm0 0x18
pxor xmm3 xmm0
paddd xmm2 xmm3
pxor xmm1 xmm2
movdqa xmm5 xmm1
pslld xmm1 0x19
pshufd xmm0 xmm3 0x93
psrld xmm5 0x7
pxor xmm5 xmm1
pshufd xmm1 xmm5 0x39
movd xmm5 edx
movd xmm6 ebx
mov ebx [ esp + 0x18 ]
movd xmm3 eax
movd xmm7 esi
pshufd xmm2 xmm2 0x4e
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
pslld xmm3 0x10
psrld xmm0 0x10
pxor xmm0 xmm3
paddd xmm2 xmm0
pxor xmm1 xmm2
movdqa xmm3 xmm1
movd xmm5 edi
movd xmm7 ecx
pslld xmm3 0x14
psrld xmm1 0xc
pxor xmm1 xmm3
movd xmm3 ebx
mov ebx [ esp + 0x38 ]
movd xmm6 ebx
punpckldq xmm7 xmm5
punpckldq xmm6 xmm3
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
psrld xmm3 0x8
pslld xmm0 0x18
pxor xmm3 xmm0
paddd xmm2 xmm3
pshufd xmm0 xmm3 0x39
pxor xmm1 xmm2
movd xmm3 ebx
mov ebx [ esp + 0x1c ]
movdqa xmm5 xmm1
pslld xmm1 0x19
psrld xmm5 0x7
pxor xmm5 xmm1
pshufd xmm1 xmm5 0x93
movd xmm6 ebx
mov ebx [ esp + 0x28 ]
movd xmm7 ebx
mov ebx [ esp + 0x14 ]
movd xmm5 esi
pshufd xmm2 xmm2 0x4e
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
pslld xmm3 0x10
psrld xmm0 0x10
pxor xmm0 xmm3
paddd xmm2 xmm0
pxor xmm1 xmm2
movdqa xmm3 xmm1
pslld xmm3 0x14
psrld xmm1 0xc
pxor xmm1 xmm3
movd xmm6 ebx
mov ebx [ esp + 0x24 ]
movd xmm3 eax
movd xmm5 edx
movd xmm7 edi
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
pslld xmm0 0x18
psrld xmm3 0x8
pxor xmm3 xmm0
paddd xmm2 xmm3
pshufd xmm0 xmm3 0x93
movd xmm3 ebx
mov ebx [ esp + 0x34 ]
pxor xmm1 xmm2
movdqa xmm5 xmm1
psrld xmm5 0x7
pslld xmm1 0x19
pxor xmm5 xmm1
movd xmm6 ebx
mov ebx [ esp + 0x30 ]
pshufd xmm1 xmm5 0x39
movd xmm5 ecx
movd xmm7 ebx
pshufd xmm2 xmm2 0x4e
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
psrld xmm0 0x10
pslld xmm3 0x10
pxor xmm0 xmm3
mov ebx [ esp + 0x20 ]
paddd xmm2 xmm0
pxor xmm1 xmm2
movdqa xmm3 xmm1
pslld xmm3 0x14
psrld xmm1 0xc
pxor xmm1 xmm3
movd xmm3 ebx
mov ebx [ esp + 0x18 ]
movd xmm5 ebx
mov ebx [ esp + 0x2c ]
movd xmm6 ebx
mov ebx [ esp + 0x10 ]
movd xmm7 ebx
mov ebx [ esp + 0x18 ]
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
psrld xmm3 0x8
pslld xmm0 0x18
pxor xmm3 xmm0
paddd xmm2 xmm3
pxor xmm1 xmm2
movdqa xmm5 xmm1
pslld xmm1 0x19
pshufd xmm0 xmm3 0x39
psrld xmm5 0x7
pxor xmm5 xmm1
pshufd xmm1 xmm5 0x93
movd xmm3 ebx
mov ebx [ esp + 0x24 ]
movd xmm5 edi
movd xmm6 ecx
movd xmm7 esi
pshufd xmm2 xmm2 0x4e
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
pslld xmm3 0x10
psrld xmm0 0x10
pxor xmm0 xmm3
paddd xmm2 xmm0
pxor xmm1 xmm2
movdqa xmm3 xmm1
pslld xmm3 0x14
psrld xmm1 0xc
pxor xmm1 xmm3
movd xmm3 ebx
mov ebx [ esp + 0x34 ]
movd xmm5 ebx
mov ebx [ esp + 0x38 ]
movd xmm6 ebx
mov ebx [ esp + 0x2c ]
movd xmm7 ebx
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
pslld xmm0 0x18
psrld xmm3 0x8
pxor xmm3 xmm0
paddd xmm2 xmm3
pxor xmm1 xmm2
movdqa xmm5 xmm1
pslld xmm1 0x19
psrld xmm5 0x7
pxor xmm5 xmm1
pshufd xmm0 xmm3 0x93
pshufd xmm2 xmm2 0x4e
pshufd xmm1 xmm5 0x39
mov ebx [ esp + 0x10 ]
movd xmm3 ebx
mov ebx [ esp + 0x14 ]
movd xmm6 ebx
mov ebx [ esp + 0x28 ]
movd xmm5 eax
movd xmm7 edx
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
pslld xmm3 0x10
psrld xmm0 0x10
pxor xmm0 xmm3
paddd xmm2 xmm0
pxor xmm1 xmm2
movdqa xmm3 xmm1
pslld xmm3 0x14
psrld xmm1 0xc
pxor xmm1 xmm3
movd xmm3 ebx
mov ebx [ esp + 0x30 ]
movd xmm5 ebx
mov ebx [ esp + 0x1c ]
movd xmm6 ebx
mov ebx [ esp + 0x20 ]
movd xmm7 ebx
mov ebx [ esp + 0x30 ]
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
psrld xmm3 0x8
pslld xmm0 0x18
pxor xmm3 xmm0
paddd xmm2 xmm3
pxor xmm1 xmm2
movdqa xmm5 xmm1
pslld xmm1 0x19
psrld xmm5 0x7
pxor xmm5 xmm1
pshufd xmm1 xmm5 0x93
movd xmm5 ebx
mov ebx [ esp + 0x10 ]
pshufd xmm0 xmm3 0x39
movd xmm6 ebx
mov ebx [ esp + 0x2c ]
movd xmm7 ebx
mov ebx [ esp + 0x38 ]
movd xmm3 edx
pshufd xmm2 xmm2 0x4e
punpckldq xmm7 xmm5
punpckldq xmm6 xmm3
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
pslld xmm3 0x10
psrld xmm0 0x10
pxor xmm0 xmm3
paddd xmm2 xmm0
pxor xmm1 xmm2
movdqa xmm3 xmm1
pslld xmm3 0x14
psrld xmm1 0xc
pxor xmm1 xmm3
movd xmm3 ebx
mov ebx [ esp + 0x20 ]
movd xmm5 ebx
mov ebx [ esp + 0x1c ]
movd xmm6 eax
movd xmm7 ebx
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
mov ebx [ esp + 0x18 ]
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
psrld xmm3 0x8
pslld xmm0 0x18
pxor xmm3 xmm0
paddd xmm2 xmm3
pxor xmm1 xmm2
pshufd xmm0 xmm3 0x93
movdqa xmm5 xmm1
movd xmm3 ebx
mov ebx [ esp + 0x28 ]
pslld xmm1 0x19
psrld xmm5 0x7
pxor xmm5 xmm1
pshufd xmm1 xmm5 0x39
movd xmm5 ebx
mov ebx [ esp + 0x34 ]
movd xmm6 ecx
movd xmm7 edi
pshufd xmm2 xmm2 0x4e
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
pslld xmm3 0x10
psrld xmm0 0x10
pxor xmm0 xmm3
paddd xmm2 xmm0
pxor xmm1 xmm2
movdqa xmm3 xmm1
pslld xmm3 0x14
psrld xmm1 0xc
pxor xmm1 xmm3
movd xmm3 ebx
mov ebx [ esp + 0x24 ]
movd xmm6 ebx
mov ebx [ esp + 0x14 ]
movd xmm7 ebx
mov ebx [ esp + 0x24 ]
movd xmm5 esi
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
pslld xmm0 0x18
psrld xmm3 0x8
pxor xmm3 xmm0
paddd xmm2 xmm3
pxor xmm1 xmm2
movdqa xmm5 xmm1
pshufd xmm0 xmm3 0x39
movd xmm3 ebx
mov ebx [ esp + 0x2c ]
psrld xmm5 0x7
pslld xmm1 0x19
pxor xmm5 xmm1
pshufd xmm1 xmm5 0x93
movd xmm5 ebx
mov ebx [ esp + 0x14 ]
movd xmm6 ebx
mov ebx [ esp + 0x20 ]
movd xmm7 ebx
pshufd xmm2 xmm2 0x4e
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
psrld xmm0 0x10
mov ebx [ esp + 0x28 ]
pslld xmm3 0x10
pxor xmm0 xmm3
paddd xmm2 xmm0
pxor xmm1 xmm2
movdqa xmm3 xmm1
pslld xmm3 0x14
psrld xmm1 0xc
pxor xmm1 xmm3
movd xmm3 ebx
mov ebx [ esp + 0x10 ]
movd xmm5 ebx
mov ebx [ esp + 0x30 ]
movd xmm6 ebx
mov ebx [ esp + 0x34 ]
movd xmm7 ebx
mov ebx [ esp + 0x18 ]
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
psrld xmm3 0x8
pslld xmm0 0x18
pxor xmm3 xmm0
paddd xmm2 xmm3
pxor xmm1 xmm2
movdqa xmm5 xmm1
pslld xmm1 0x19
psrld xmm5 0x7
pxor xmm5 xmm1
pshufd xmm0 xmm3 0x93
pshufd xmm1 xmm5 0x39
movd xmm5 ebx
mov ebx [ esp + 0x1c ]
movd xmm3 esi
movd xmm7 ebx
mov ebx [ esp + 0x38 ]
movd xmm6 eax
pshufd xmm2 xmm2 0x4e
punpckldq xmm7 xmm5
movd xmm5 ecx
punpckldq xmm6 xmm3
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
pslld xmm3 0x10
psrld xmm0 0x10
pxor xmm0 xmm3
paddd xmm2 xmm0
pxor xmm1 xmm2
movdqa xmm3 xmm1
pslld xmm3 0x14
psrld xmm1 0xc
pxor xmm1 xmm3
movd xmm3 ebx
movd xmm6 edx
movd xmm7 edi
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
pslld xmm0 0x18
psrld xmm3 0x8
pxor xmm3 xmm0
paddd xmm2 xmm3
pxor xmm1 xmm2
movdqa xmm5 xmm1
pslld xmm1 0x19
psrld xmm5 0x7
pxor xmm5 xmm1
pshufd xmm0 xmm3 0x39
pshufd xmm2 xmm2 0x4e
pshufd xmm1 xmm5 0x93
mov ebx [ esp + 0x34 ]
movd xmm5 ebx
mov ebx [ esp + 0x30 ]
movd xmm6 ebx
mov ebx [ esp + 0x18 ]
movd xmm3 edi
movd xmm7 ecx
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
pslld xmm3 0x10
psrld xmm0 0x10
pxor xmm0 xmm3
paddd xmm2 xmm0
pxor xmm1 xmm2
movdqa xmm3 xmm1
pslld xmm3 0x14
psrld xmm1 0xc
pxor xmm1 xmm3
movd xmm3 ebx
mov ebx [ esp + 0x24 ]
movd xmm5 ebx
mov ebx [ esp + 0x28 ]
movd xmm6 ebx
mov ebx [ esp + 0x38 ]
movd xmm7 eax
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
psrld xmm3 0x8
pslld xmm0 0x18
pxor xmm3 xmm0
paddd xmm2 xmm3
pxor xmm1 xmm2
pshufd xmm0 xmm3 0x93
movdqa xmm5 xmm1
movd xmm3 ebx
mov ebx [ esp + 0x10 ]
pslld xmm1 0x19
psrld xmm5 0x7
pxor xmm5 xmm1
pshufd xmm1 xmm5 0x39
movd xmm5 ebx
mov ebx [ esp + 0x20 ]
movd xmm6 ebx
mov ebx [ esp + 0x2c ]
movd xmm7 ebx
mov ebx [ esp + 0x1c ]
pshufd xmm2 xmm2 0x4e
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
pslld xmm3 0x10
psrld xmm0 0x10
pxor xmm0 xmm3
paddd xmm2 xmm0
pxor xmm1 xmm2
movdqa xmm3 xmm1
pslld xmm3 0x14
psrld xmm1 0xc
pxor xmm1 xmm3
movd xmm3 ebx
mov ebx [ esp + 0x14 ]
movd xmm5 edx
movd xmm6 ebx
movd xmm7 esi
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
mov ebx [ esp + 0x10 ]
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
psrld xmm3 0x8
pslld xmm0 0x18
pxor xmm3 xmm0
paddd xmm2 xmm3
pxor xmm1 xmm2
pshufd xmm0 xmm3 0x39
movdqa xmm5 xmm1
pslld xmm1 0x19
psrld xmm5 0x7
pxor xmm5 xmm1
pshufd xmm1 xmm5 0x93
movd xmm3 ebx
mov ebx [ esp + 0x14 ]
movd xmm5 ebx
mov ebx [ esp + 0x18 ]
movd xmm6 ebx
mov ebx [ esp + 0x38 ]
movd xmm7 ebx
mov ebx [ esp + 0x1c ]
pshufd xmm2 xmm2 0x4e
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
pslld xmm3 0x10
psrld xmm0 0x10
pxor xmm0 xmm3
paddd xmm2 xmm0
pxor xmm1 xmm2
movdqa xmm3 xmm1
pslld xmm3 0x14
psrld xmm1 0xc
pxor xmm1 xmm3
movd xmm5 ecx
mov ecx [ esp + 0x20 ]
movd xmm3 ebx
movd xmm6 edx
movd xmm7 esi
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
pslld xmm0 0x18
psrld xmm3 0x8
pxor xmm3 xmm0
paddd xmm2 xmm3
pxor xmm1 xmm2
pshufd xmm0 xmm3 0x93
movdqa xmm5 xmm1
movd xmm3 ecx
mov ecx [ esp + 0x24 ]
psrld xmm5 0x7
pslld xmm1 0x19
pxor xmm5 xmm1
pshufd xmm1 xmm5 0x39
movd xmm5 ecx
mov ecx [ esp + 0x28 ]
movd xmm6 ecx
movd xmm7 eax
pshufd xmm2 xmm2 0x4e
punpckldq xmm6 xmm3
punpckldq xmm7 xmm5
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
psrld xmm0 0x10
pslld xmm3 0x10
pxor xmm0 xmm3
mov eax [ esp + 0x2c ]
paddd xmm2 xmm0
pxor xmm1 xmm2
movdqa xmm3 xmm1
movd xmm5 eax
mov eax [ esp + 0x30 ]
psrld xmm1 0xc
pslld xmm3 0x14
pxor xmm1 xmm3
movd xmm6 eax
mov eax [ esp + 0x34 ]
movd xmm7 eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xf4 ]
movd xmm3 edi
pop edi
pop esi
punpckldq xmm7 xmm5
pop ebx
punpckldq xmm6 xmm3
punpckldq xmm7 xmm6
paddd xmm4 xmm7
paddd xmm4 xmm1
pxor xmm0 xmm4
movdqa xmm3 xmm0
pslld xmm0 0x18
psrld xmm3 0x8
pxor xmm3 xmm0
paddd xmm2 xmm3
pxor xmm1 xmm2
movdqa xmm0 xmm1
pslld xmm1 0x19
psrld xmm0 0x7
pxor xmm0 xmm1
pshufd xmm1 xmm2 0x4e
pxor xmm4 xmm1
movdqa xmm1 [ esp + 0x34 ]
pxor xmm1 xmm4
movdqa [ ecx ] xmm1
mov eax [ eax + 0xf4 ]
movdqa xmm1 [ esp + 0x44 ]
pshufd xmm3 xmm3 0x39
pshufd xmm0 xmm0 0x93
add eax 0x10
pxor xmm0 xmm3
pxor xmm1 xmm0
movdqa [ eax ] xmm1
xor eax eax
mov esp ebp
pop ebp
retn 0x8
sub_4048de
cmp [ rw-data ] 0x2
push esi
push edi
mov edi eax
mov esi ecx
jl r-xdata
mov ecx esi
call sub_4048bb
xor eax eax
call sub_40376b
mov edx [ eax + r--data ]
mov ecx [ esi + 0xf4 ]
mov [ eax + ecx ] edx
add eax 0x4
cmp eax 0x20
jl r-xdata
mov eax [ esi + 0xf4 ]
xor [ eax ] 0x2080020
mov eax [ esi + 0xf4 ]
mov ecx [ esp + 0xc ]
xor [ eax + 0x8 ] ecx
mov esi [ esi + 0xf4 ]
or edi 0x2000
shl edi 0x10
xor [ esi + 0xc ] edi
pop edi
pop esi
retn 0x4
sub_404942
push ebp
mov ebp esp
sub esp 0x80
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0x10
mov esi eax
mov eax [ edx + 0xf8 ]
pop ecx
lea edi [ ebp - 0x80 ]
[ edi ] [ esi ]
mov esi [ edx + 0xf4 ]
push 0x8
pop ecx
lea edi [ ebp - 0x40 ]
[ edi ] [ esi ]
mov ecx [ eax ]
mov esi [ eax + 0x4 ]
mov eax [ edx + 0xfc ]
mov edx [ eax ]
mov eax [ eax + 0x4 ]
xor eax 0x5be0cd19
xor edx 0x1f83d9ab
xor ecx 0x510e527f
xor esi 0x9b05688c
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x20 ] 0x6a09e667
mov [ ebp - 0x1c ] 0xbb67ae85
mov [ ebp - 0x18 ] 0x3c6ef372
mov [ ebp - 0x14 ] 0xa54ff53a
mov [ ebp - 0x8 ] edx
xor eax eax
jmp r-xdata
movzx edx [ eax + r--data ]
mov edx [ ebp + edx * 4 - 0x80 ]
add edx [ ebp - 0x30 ]
mov ebx [ ebp - 0x40 ]
add ebx edx
movzx edi [ eax + r--data ]
mov edi [ ebp + edi * 4 - 0x80 ]
mov edx ebx
xor edx ecx
ror edx 0x10
add [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x30 ]
xor ecx [ ebp - 0x20 ]
ror ecx 0xc
add edi ecx
add ebx edi
mov [ ebp - 0x40 ] ebx
xor ebx edx
movzx edx [ eax + r--data ]
mov edx [ ebp + edx * 4 - 0x80 ]
add edx [ ebp - 0x2c ]
ror ebx 0x8
add [ ebp - 0x3c ] edx
add [ ebp - 0x20 ] ebx
xor ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x3c ]
xor edx esi
movzx esi [ eax + r--data ]
mov esi [ ebp + esi * 4 - 0x80 ]
ror ecx 0x7
ror edx 0x10
add [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x2c ]
xor edx [ ebp - 0x1c ]
mov edi [ ebp - 0x24 ]
ror edx 0xc
add esi edx
add [ ebp - 0x3c ] esi
mov esi [ ebp - 0x3c ]
xor esi [ ebp - 0xc ]
ror esi 0x8
add [ ebp - 0x1c ] esi
xor edx [ ebp - 0x1c ]
mov [ ebp - 0xc ] esi
mov esi [ ebp - 0x28 ]
ror edx 0x7
mov [ ebp - 0x2c ] edx
movzx edx [ eax + r--data ]
mov edx [ ebp + edx * 4 - 0x80 ]
add edx esi
add [ ebp - 0x38 ] edx
mov edx [ ebp - 0x38 ]
xor edx [ ebp - 0x8 ]
ror edx 0x10
add [ ebp - 0x18 ] edx
xor esi [ ebp - 0x18 ]
mov [ ebp - 0x8 ] edx
movzx edx [ eax + r--data ]
mov edx [ ebp + edx * 4 - 0x80 ]
ror esi 0xc
add edx esi
add [ ebp - 0x38 ] edx
mov edx [ ebp - 0x38 ]
xor edx [ ebp - 0x8 ]
ror edx 0x8
add [ ebp - 0x18 ] edx
xor esi [ ebp - 0x18 ]
mov [ ebp - 0x8 ] edx
movzx edx [ eax + r--data ]
mov edx [ ebp + edx * 4 - 0x80 ]
add edx edi
add [ ebp - 0x34 ] edx
mov edx [ ebp - 0x34 ]
xor edx [ ebp - 0x4 ]
ror esi 0x7
ror edx 0x10
add [ ebp - 0x14 ] edx
xor edi [ ebp - 0x14 ]
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x4 ] edx
movzx edx [ eax + r--data ]
mov edx [ ebp + edx * 4 - 0x80 ]
ror edi 0xc
add edx edi
add [ ebp - 0x34 ] edx
mov edx [ ebp - 0x34 ]
xor edx [ ebp - 0x4 ]
ror edx 0x8
add [ ebp - 0x14 ] edx
xor edi [ ebp - 0x14 ]
mov [ ebp - 0x4 ] edx
movzx edx [ eax + r--data ]
mov esi [ ebp + edx * 4 - 0x80 ]
mov edx [ ebp - 0x2c ]
add esi edx
add [ ebp - 0x40 ] esi
mov esi [ ebp - 0x40 ]
xor esi [ ebp - 0x4 ]
ror edi 0x7
ror esi 0x10
add [ ebp - 0x18 ] esi
xor edx [ ebp - 0x18 ]
mov [ ebp - 0x24 ] edi
movzx edi [ eax + r--data ]
mov edi [ ebp + edi * 4 - 0x80 ]
ror edx 0xc
add edi edx
add [ ebp - 0x40 ] edi
mov [ ebp - 0x2c ] edx
mov edx [ ebp - 0x40 ]
xor edx esi
ror edx 0x8
add [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x2c ]
xor edx [ ebp - 0x18 ]
movzx edi [ eax + r--data ]
mov edi [ ebp + edi * 4 - 0x80 ]
ror edx 0x7
mov [ ebp - 0x2c ] edx
movzx edx [ eax + r--data ]
mov esi [ ebp + edx * 4 - 0x80 ]
mov edx [ ebp - 0x28 ]
add esi edx
add [ ebp - 0x3c ] esi
mov esi [ ebp - 0x3c ]
xor esi ebx
ror esi 0x10
add [ ebp - 0x14 ] esi
xor edx [ ebp - 0x14 ]
ror edx 0xc
add edi edx
add [ ebp - 0x3c ] edi
mov edi [ ebp - 0x3c ]
xor edi esi
ror edi 0x8
mov esi edi
add [ ebp - 0x14 ] esi
xor edx [ ebp - 0x14 ]
movzx edi [ eax + r--data ]
mov edi [ ebp + edi * 4 - 0x80 ]
ror edx 0x7
mov [ ebp - 0x28 ] edx
movzx edx [ eax + r--data ]
mov [ ebp - 0x10 ] esi
mov esi [ ebp + edx * 4 - 0x80 ]
mov edx [ ebp - 0x24 ]
add esi edx
add [ ebp - 0x38 ] esi
mov esi [ ebp - 0x38 ]
xor esi [ ebp - 0xc ]
ror esi 0x10
add [ ebp - 0x20 ] esi
xor edx [ ebp - 0x20 ]
ror edx 0xc
add edi edx
add [ ebp - 0x38 ] edi
mov edi [ ebp - 0x38 ]
xor edi esi
ror edi 0x8
mov esi edi
add [ ebp - 0x20 ] esi
xor edx [ ebp - 0x20 ]
movzx edi [ eax + r--data ]
mov edi [ ebp + edi * 4 - 0x80 ]
ror edx 0x7
mov [ ebp - 0x24 ] edx
movzx edx [ eax + r--data ]
mov edx [ ebp + edx * 4 - 0x80 ]
add edx ecx
add [ ebp - 0x34 ] edx
mov edx [ ebp - 0x34 ]
xor edx [ ebp - 0x8 ]
add eax 0x10
ror edx 0x10
add [ ebp - 0x1c ] edx
xor ecx [ ebp - 0x1c ]
mov [ ebp - 0xc ] esi
ror ecx 0xc
add edi ecx
add [ ebp - 0x34 ] edi
mov edi [ ebp - 0x34 ]
xor edi edx
ror edi 0x8
mov edx edi
add [ ebp - 0x1c ] edx
xor ecx [ ebp - 0x1c ]
mov [ ebp - 0x8 ] edx
ror ecx 0x7
mov [ ebp - 0x30 ] ecx
cmp eax 0x90
jbe r-xdata
mov ecx [ ebp - 0x10 ]
pop edi
pop esi
xor ecx ecx
pop ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xf4 ]
mov edx [ ebp + ecx - 0x20 ]
add eax ecx
xor edx [ eax ]
add ecx 0x4
xor edx [ ebp + ecx - 0x44 ]
mov [ eax ] edx
cmp ecx 0x20
jb r-xdata
leave
retn 0x4
sub_404c63
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jbe r-xdata
pop ebx
pop ebp
retn 0x8
push edi
push ebx
push [ ebp + 0x8 ]
push ecx
call sub_41be10
add [ esi + 0x100 ] ebx
add [ ebp + 0x8 ] ebx
add esp 0xc
xor ebx ebx
push edi
push [ ebp + 0x8 ]
push ecx
call sub_41be10
add [ esi + 0x100 ] edi
lea eax [ esi + 0xf8 ]
mov ecx [ eax ]
add [ ecx ] 0x40
mov eax [ eax ]
add esp 0xc
cmp [ eax ] 0x40
sbb ecx ecx
neg ecx
add [ eax + 0x4 ] ecx
cmp [ rw-data ] 0x2
jl r-xdata
mov eax [ esi + 0x100 ]
mov ecx [ esi + 0xf0 ]
mov edi 0x80
sub edi eax
add ecx eax
cmp ebx edi
jbe r-xdata
pop edi
mov eax [ esi + 0xf0 ]
push esi
call sub_404942
push [ esi + 0xf0 ]
push esi
call sub_4037de
jmp r-xdata
test ebx ebx
ja r-xdata
mov eax [ esi + 0xf0 ]
push 0x40
lea ecx [ eax + 0x40 ]
push ecx
push eax
call sub_41be10
add [ esi + 0x100 ] 0xffffffc0
add [ ebp + 0x8 ] edi
add esp 0xc
sub ebx edi
jmp r-xdata
sub_404d22
cmp [ esi + 0x100 ] 0x40
jbe r-xdata
mov ecx [ esi + 0x100 ]
lea eax [ esi + 0xf8 ]
mov edx [ eax ]
add [ edx ] ecx
mov eax [ eax ]
cmp [ eax ] ecx
sbb ecx ecx
neg ecx
add [ eax + 0x4 ] ecx
cmp [ esi + 0x104 ] 0x0
je r-xdata
lea eax [ esi + 0xf8 ]
mov ecx [ eax ]
add [ ecx ] 0x40
mov eax [ eax ]
cmp [ eax ] 0x40
push edi
sbb ecx ecx
neg ecx
add [ eax + 0x4 ] ecx
lea edi [ esi + 0xf0 ]
mov eax [ edi ]
push esi
call sub_404942
add [ esi + 0x100 ] 0xffffffc0
mov eax [ esi + 0x100 ]
mov edi [ edi ]
push eax
lea eax [ edi + 0x40 ]
push eax
push edi
call sub_41be10
add esp 0xc
pop edi
mov eax [ esi + 0xfc ]
or [ eax ] 0xffffffff
mov eax [ esi + 0x100 ]
mov ecx 0x80
sub ecx eax
push ecx
mov ecx [ esi + 0xf0 ]
add ecx eax
push 0x0
push ecx
call sub_41a3a0
mov eax [ esi + 0xf0 ]
add esp 0xc
push esi
call sub_404942
xor eax eax
mov eax [ esi + 0xfc ]
or [ eax + 0x4 ] 0xffffffff
mov ecx [ esi + 0xf4 ]
mov ecx [ eax + ecx ]
mov edx [ esp + 0x4 ]
mov [ eax + edx ] ecx
add eax 0x4
cmp eax 0x20
jl r-xdata
retn 0x4
sub_404df0
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
push 0x200
xor edi edi
lea eax [ esi + 0x948 ]
push edi
push eax
call sub_41a3a0
add esp 0xc
xor eax eax
push edi
lea ecx [ esi + 0x840 ]
inc eax
mov [ esi + 0xb48 ] edi
call sub_4048de
mov ebx esi
push edi
xor eax eax
mov ecx ebx
call sub_4048de
inc edi
add ebx 0x108
cmp edi 0x8
jb r-xdata
pop edi
mov [ esi + 0x944 ] 0x1
mov [ esi + 0x83c ] 0x1
pop esi
pop ebx
retn 0x4
sub_404e4f
push ecx
push ebx
push ebp
mov ebx ecx
mov ebp [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
push edi
mov edi 0x200
mov [ esp + 0xc ] eax
cmp ebp edi
jb r-xdata
pop edi
pop ebp
pop ebx
pop ecx
retn
push esi
jmp r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
mov esi [ ebx ]
push 0x40
push eax
call sub_404c63
add [ esp + 0x10 ] edi
sub ebp edi
cmp ebp edi
jae r-xdata
cmp ebp 0x400
jb r-xdata
mov eax [ esp + 0x10 ]
pop esi
prefetcht0 [ eax + 0x200 ]
sub_404ead
push ebp
mov ebp esp
sub esp 0x70
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebx + 0xb48 ]
push edi
mov edi 0x200
sub edi esi
mov [ ebp - 0x4 ] esi
test esi esi
je r-xdata
cmp [ ebp + 0x10 ] 0x1000
jae r-xdata
cmp [ ebp + 0x10 ] edi
jb r-xdata
mov eax [ ebx + 0xb50 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x6
je r-xdata
mov [ ebp + 0x8 ] 0x1
jmp r-xdata
push edi
push [ ebp + 0xc ]
lea eax [ esi + ebx + 0x948 ]
push eax
call sub_41be10
lea eax [ ebx + 0x948 ]
add esp 0xc
mov esi ebx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x10 ] 0x8
mov [ ebp + 0x8 ] 0x4
cmp eax 0x7
jne r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x40
push [ ebp + 0x8 ]
call sub_404c63
add [ ebp + 0x8 ] 0x40
add esi 0x108
dec [ ebp - 0x10 ]
jne r-xdata
add [ ebp + 0xc ] edi
sub [ ebp + 0x10 ] edi
and [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0x4 ]
mov ecx [ ebx + 0xb4c ]
test ecx ecx
je r-xdata
mov esi eax
imul esi esi 0x108
shl eax 0x6
add esi ebx
add eax [ ebp + 0xc ]
lea edi [ ebp - 0x70 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax 0x8
jb r-xdata
call sub_410c38
cmp [ ebp - 0x8 ] 0x8
jae r-xdata
and [ ebp - 0x10 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov edi eax
and edi 0x1ff
sub eax edi
add [ ebp + 0xc ] eax
test edi edi
jbe r-xdata
mov esi [ ebp - 0x4 ]
cmp [ ebp + 0x8 ] 0x1
mov ecx [ ebp + 0x10 ]
mov [ edi + 0x8 ] ecx
mov [ edi + 0x4 ] eax
mov [ edi ] esi
jbe r-xdata
add esi edi
pop edi
mov [ ebx + 0xb48 ] esi
pop esi
pop ebx
leave
retn 0xc
push edi
push [ ebp + 0xc ]
lea eax [ esi + ebx + 0x948 ]
push eax
call sub_41be10
add esp 0xc
mov ecx edi
call sub_404e4f
mov ecx [ ebx + 0xb4c ]
push edi
push sub_404ea1
call sub_410e85
jmp r-xdata
mov eax [ ebp - 0xc ]
inc [ ebp - 0x8 ]
add [ ebp - 0xc ] 0x40
add esi 0x108
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0xc
cmp eax [ ebp + 0x8 ]
jb r-xdata
sub_405015
push ebp
mov ebp esp
sub esp 0x104
push ebx
push esi
lea eax [ ebp - 0x104 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ edi + 0x948 ]
xor ebx ebx
mov esi edi
mov [ ebp + 0x8 ] eax
push [ ebp - 0x4 ]
call sub_404d22
add [ ebp + 0x8 ] 0x40
add [ ebp - 0x4 ] 0x20
add ebx 0x40
add esi 0x108
cmp ebx 0x200
jb r-xdata
sub eax ebx
cmp eax 0x40
jbe r-xdata
mov eax [ edi + 0xb48 ]
cmp eax ebx
jbe r-xdata
push 0x8
lea esi [ edi + 0x840 ]
lea edi [ ebp - 0x104 ]
pop ebx
push eax
push [ ebp + 0x8 ]
call sub_404c63
push 0x40
pop eax
push 0x20
push edi
call sub_404c63
add edi 0x20
dec ebx
jne r-xdata
push [ ebp + 0xc ]
call sub_404d22
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_4050a4
push ebp
mov ebp esp
sub esp 0x22c
lea eax [ ebp - 0x4 ]
push eax
call [ SHGetMalloc@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x22c ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
push esi
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x14 ] 0x41
call [ SHBrowseForFolderW@IAT ]
mov esi eax
test esi esi
jne r-xdata
xor al al
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push esi
call [ SHGetPathFromIDListW@IAT ]
mov edi eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push esi
push eax
call [ ecx + 0x14 ]
xor eax eax
test edi edi
setne al
pop edi
xor al al
jmp r-xdata
leave
retn 0xc
pop esi
sub_405120
push ebp
mov ebp esp
sub esp 0x458
cmp [ ebp + 0x14 ] 0x0
push ebx
push esi
push edi
lea esi [ ebp - 0x458 ]
je r-xdata
push 0xa2
call sub_40c0b2
push eax
push esi
call sub_41a377
push esi
call sub_41a32f
lea esi [ esi + eax * 2 + 0x2 ]
push r--data
push esi
call sub_41a377
push esi
call sub_41a32f
xor ecx ecx
push 0x58
mov [ esi + eax * 2 + 0x2 ] cx
pop esi
push esi
push ecx
lea eax [ ebp - 0x58 ]
push eax
call sub_41a3a0
mov eax [ ebp + 0x8 ]
mov ebx [ GetOpenFileNameW@IAT ]
mov [ ebp - 0x54 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0xc ]
add esp 0x24
cmp [ ebp + 0x18 ] 0x0
mov [ ebp - 0x58 ] esi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] 0x800
mov [ ebp - 0x24 ] 0x1080c
push eax
je r-xdata
push [ ebp + 0x14 ]
mov eax esi
push eax
call sub_41a377
mov eax esi
push eax
call sub_41a32f
push [ ebp + 0x14 ]
lea esi [ ebp + eax * 2 - 0x456 ]
push esi
call sub_41a377
push esi
call sub_41a32f
add esp 0x18
lea esi [ esi + eax * 2 + 0x2 ]
call ebx
call [ GetSaveFileNameW@IAT ]
jmp r-xdata
pop edi
pop esi
setne al
pop ebx
leave
retn 0x14
call [ CommDlgExtendedError@IAT ]
cmp eax 0x3002
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
test edi edi
xor eax eax
cmp [ ebp + 0x18 ] 0x0
mov [ esi ] ax
lea eax [ ebp - 0x58 ]
push eax
je r-xdata
call ebx
call [ GetSaveFileNameW@IAT ]
jmp r-xdata
mov edi eax
sub_405234
push ebp
mov ebp esp
mov eax 0x2008
call sub_41a670
push esi
push edi
push 0x0
push [ ebp + 0x10 ]
call sub_40a145
mov ecx [ ebp + 0x8 ]
mov [ ebp + 0x10 ] eax
call sub_4108e6
mov esi 0x800
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x1004 ]
push eax
call sub_410992
test al al
jne r-xdata
lea eax [ ebp - 0x1004 ]
push eax
call sub_409e12
mov edi eax
movzx eax [ edi ]
push eax
call sub_409e4d
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop edi
pop esi
leave
retn 0x14
test al al
je r-xdata
test al al
je r-xdata
cmp [ ebp - 0x1004 ] 0x2a
mov edi [ ebp + 0x10 ]
jne r-xdata
lea eax [ ebp - 0x1004 ]
push r--data
push eax
call sub_41a349
pop ecx
pop ecx
lea eax [ ebp - 0x1004 ]
push eax
call sub_40a108
push eax
call sub_409e2c
test al al
jne r-xdata
xor eax eax
mov [ edi ] ax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x1004 ]
push edi
push 0x0
push eax
call sub_40a145
push eax
call sub_409b7f
test al al
jne r-xdata
movzx eax [ ebp - 0x1002 ]
push eax
call sub_409e4d
test al al
je r-xdata
jmp r-xdata
mov al 0x1
jmp r-xdata
push 0x2e
pop eax
push 0x5c
mov [ ebp - 0x2008 ] ax
pop eax
push esi
mov [ ebp - 0x2006 ] ax
push edi
lea eax [ ebp - 0x2004 ]
push eax
call sub_410792
lea edi [ ebp - 0x2008 ]
sub_405358
push esi
mov esi ecx
call sub_409d0d
xor eax eax
lea ecx [ esi + 0x92d4 ]
mov [ esi + 0x72b2 ] ax
mov [ esi + 0x82d2 ] ax
mov [ esi + 0x72a8 ] al
mov [ esi + 0x72ac ] eax
mov [ esi + 0x72b0 ] al
call sub_4108eb
lea ecx [ esi + 0x9330 ]
call sub_4108eb
lea ecx [ esi + 0x938c ]
call sub_4108eb
lea ecx [ esi + 0x9444 ]
call sub_4108eb
lea ecx [ esi + 0x93e8 ]
call sub_4108eb
lea ecx [ esi + 0x5168 ]
pop esi
jmp sub_4125f7
sub_4053c5
push ebp
mov ebp esp
push esi
push 0x5
push [ ebp + 0x10 ]
mov esi ecx
push [ ebp + 0x8 ]
lea eax [ esi + 0x9330 ]
push [ ebp + 0xc ]
push eax
call sub_405234
test al al
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov al 0x1
jmp r-xdata
xor al al
cmp [ esi + 0x93a0 ] 0x0
je r-xdata
pop esi
pop ebp
retn 0x10
push 0x5
push [ ebp + 0x10 ]
lea eax [ esi + 0x938c ]
push [ ebp + 0x8 ]
mov ecx esi
push [ ebp + 0xc ]
push eax
call sub_405234
neg al
sbb al al
inc al
jmp r-xdata
sub_405421
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea ebx [ edi + 0x20 ]
push ebx
mov esi ecx
call sub_41a32f
pop ecx
cmp eax 0x800
jae r-xdata
xor eax eax
mov al [ edi + 0x10e1 ]
xor edi edi
inc edi
push edi
push 0x0
mov [ ebp + 0x8 ] al
push [ ebp + 0x8 ]
mov ecx esi
push ebx
call sub_4053c5
test al al
jne r-xdata
add esi 0x92d4
mov ecx esi
call sub_4108e6
mov [ ebp + 0x8 ] edi
jmp r-xdata
mov ecx esi
call sub_4109b7
mov edi eax
test edi edi
jne r-xdata
push [ ebp + 0x10 ]
push ebx
push edi
call sub_409b7f
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
inc [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
push ebx
push edi
call j_sub_4119e6
neg eax
sbb al al
inc al
mov [ esi ] al
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4054af
mov eax sub_4291a1
call sub_41a05c
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_409dae
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x92d4 ]
call sub_410979
lea ecx [ esi + 0x9330 ]
mov [ ebp - 0x4 ] 0x1
call sub_410979
lea ecx [ esi + 0x938c ]
mov [ ebp - 0x4 ] 0x2
call sub_410979
lea ecx [ esi + 0x93e8 ]
mov [ ebp - 0x4 ] 0x3
call sub_410979
lea ecx [ esi + 0x9444 ]
mov [ ebp - 0x4 ] 0x4
call sub_410979
mov ecx esi
mov [ ebp - 0x4 ] 0x5
call sub_405358
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_40552a
mov edx [ esp + 0x4 ]
xor eax eax
cmp [ edx + 0x4 ] eax
jne r-xdata
retn 0x4
push esi
shr ecx 0x1
shr ecx 0x1
xor ecx 0xedb88320
jmp r-xdata
test cl 0x1
je r-xdata
mov [ edx + eax * 4 ] ecx
inc eax
cmp eax 0x100
jb r-xdata
dec esi
jne r-xdata
push 0x8
mov ecx eax
pop esi
pop esi
sub_40555e
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push rw-data
mov [ ebp - 0x4 ] ecx
call sub_40552a
mov ecx rw-data
mov edi 0x100
movzx ebx al
shr eax 0x8
xor eax [ ebx * 4 + rw-data ]
mov [ edx ] eax
add edx 0x400
dec esi
jne r-xdata
add ecx 0x4
dec edi
jne r-xdata
mov eax [ ecx - 0x400 ]
push 0x7
mov edx ecx
pop esi
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
sub_4055ad
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
cmp esi 0x8
jb r-xdata
test cl 0x7
je r-xdata
test esi esi
ja r-xdata
mov edx esi
shr edx 0x3
mov [ ebp + 0x8 ] edx
push ebx
movzx edx [ ecx ]
movzx edi al
xor edx edi
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
dec esi
inc ecx
jmp r-xdata
movzx edx [ ecx ]
movzx edi al
xor edx edi
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
dec esi
inc ecx
pop edi
pop esi
pop ebp
retn 0xc
mov edx [ ecx + 0x4 ]
xor eax [ ecx ]
mov ebx edx
shr ebx 0x10
movzx edi bl
mov edi [ edi * 4 + rw-data ]
mov ebx edx
shr ebx 0x18
xor edi [ ebx * 4 + rw-data ]
mov ebx edx
shr ebx 0x8
movzx ebx bl
xor edi [ ebx * 4 + rw-data ]
mov ebx eax
shr ebx 0x18
xor edi [ ebx * 4 + rw-data ]
mov ebx eax
shr ebx 0x10
movzx ebx bl
xor edi [ ebx * 4 + rw-data ]
mov ebx eax
shr ebx 0x8
movzx ebx bl
xor edi [ ebx * 4 + rw-data ]
movzx edx dl
xor edi [ edx * 4 + rw-data ]
movzx eax al
xor edi [ eax * 4 + rw-data ]
sub esi 0x8
add ecx 0x8
dec [ ebp + 0x8 ]
mov eax edi
jne r-xdata
pop ebx
jmp r-xdata
test esi esi
jbe r-xdata
sub_405687
push ebp
lea ebp [ esp - 0x68 ]
sub esp 0x290
push ebx
push esi
mov ebx ecx
push edi
xor edi edi
lea esi [ ebx + 0x12a ]
inc edi
add esi 0x12c
cmp edi 0x4
jb r-xdata
cmp [ ebp + 0x7c ] 0x0
jne r-xdata
push [ ebp + 0x74 ]
lea ecx [ esi - 0x12a ]
call sub_40cd71
test al al
je r-xdata
push 0x108
lea eax [ ebp - 0x18c ]
push eax
push [ ebp + 0x78 ]
call sub_4116fd
push [ ebp + 0x78 ]
call sub_41a32f
mov esi eax
add esi esi
xor edi edi
pop ecx
mov [ ebp + 0x60 ] esi
cmp [ ebp + 0x7c ] edi
je r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x84 ]
push eax
call sub_4100ce
mov [ ebp + 0x64 ] edi
push 0x8
push [ ebp + 0x7c ]
lea eax [ ebp + esi - 0x18c ]
push eax
call sub_41be10
add esp 0xc
add esi 0x8
mov [ ebp + 0x60 ] esi
push 0x8
push [ ebp + 0x7c ]
lea eax [ esi - 0x28 ]
push eax
call sub_41a784
add esp 0xc
test eax eax
je r-xdata
jne r-xdata
dec eax
or eax 0xffffc000
inc eax
imul edi edi 0x12c
lea esi [ edi + ebx ]
push 0x10
lea eax [ esi + 0x10a ]
push eax
lea eax [ ebp + 0x50 ]
push eax
call sub_41be10
push 0x10
add esi 0x11a
lea eax [ ebp + 0x40 ]
push esi
push eax
call sub_41be10
add esp 0x18
jmp r-xdata
inc [ ebp + 0x64 ]
cmp [ ebp + 0x64 ] 0x40000
jl r-xdata
push 0x27
pop ecx
push 0x0
lea eax [ ebp + 0x2c ]
push eax
lea eax [ ebp - 0x228 ]
lea esi [ ebp - 0x84 ]
lea edi [ ebp - 0x228 ]
push eax
[ edi ] [ esi ]
call sub_4101b3
mov eax [ ebp + 0x64 ]
mov cl [ ebp + 0x3c ]
mov esi [ ebp + 0x60 ]
cdq
and edx 0x3fff
add eax edx
sar eax 0xe
mov [ ebp + eax + 0x40 ] cl
xor edi edi
lea eax [ ebp + 0x40 ]
push eax
push 0x80
lea eax [ ebp + 0x50 ]
push eax
push [ ebp + 0x70 ]
lea ecx [ ebx + 0xa9c ]
call sub_40c745
push 0x10
lea eax [ ebp + 0x50 ]
push eax
call sub_40cc96
push 0x10
lea eax [ ebp + 0x40 ]
push eax
call sub_40cc96
pop edi
pop esi
pop ebx
add ebp 0x68
leave
retn 0x10
push edi
push esi
lea eax [ ebp - 0x18c ]
push eax
lea eax [ ebp - 0x84 ]
push eax
call sub_4100ff
mov eax [ ebp + 0x64 ]
mov ecx eax
mov [ ebp + 0x78 ] al
sar eax 0x10
push edi
mov [ ebp + 0x7a ] al
push 0x3
lea eax [ ebp + 0x78 ]
push eax
lea eax [ ebp - 0x84 ]
sar ecx 0x8
push eax
mov [ ebp + 0x79 ] cl
call sub_4100ff
mov eax [ ebp + 0x64 ]
and eax 0x80003fff
jns r-xdata
push edi
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0x84 ]
push eax
call sub_4101b3
xor esi esi
mov ecx [ ebp + 0x78 ]
add [ ebp + 0x78 ] 0x8
mov edx eax
shr edx cl
mov [ edi ] dl
inc edi
cmp [ ebp + 0x78 ] 0x20
jl r-xdata
add esi 0x4
cmp esi 0x10
jl r-xdata
mov eax [ ebp + esi + 0x18 ]
and [ ebp + 0x78 ] 0x0
lea edi [ ebp + esi + 0x50 ]
mov edi [ ebx + 0x4b0 ]
mov esi [ ebp + 0x74 ]
imul edi edi 0x12c
add edi ebx
cmp [ ebp + 0x7c ] 0x0
push 0x40
pop ecx
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx [ ebx + 0x4b0 ]
setne al
imul ecx ecx 0x12c
mov [ ecx + ebx + 0x12a ] al
mov eax [ ebx + 0x4b0 ]
imul eax eax 0x12c
add eax ebx
cmp [ eax + 0x12a ] 0x1
jne r-xdata
push 0x10
lea eax [ ebp + 0x50 ]
push eax
mov eax [ ebx + 0x4b0 ]
imul eax eax 0x12c
lea eax [ eax + ebx + 0x10a ]
push eax
call sub_41be10
push 0x10
lea eax [ ebp + 0x40 ]
push eax
mov eax [ ebx + 0x4b0 ]
imul eax eax 0x12c
lea eax [ eax + ebx + 0x11a ]
push eax
call sub_41be10
mov eax [ ebx + 0x4b0 ]
add esp 0x18
inc eax
and eax 0x3
mov [ ebx + 0x4b0 ] eax
push 0x108
lea eax [ ebp - 0x18c ]
push eax
call sub_40cc96
push 0x8
push [ ebp + 0x7c ]
add eax 0x102
push eax
call sub_41be10
add esp 0xc
sub_40593e
push ebp
mov ebp esp
sub esp 0x1d0
push ebx
push esi
mov esi [ ebp + 0xc ]
push 0x40
pop ebx
cmp esi ebx
jbe r-xdata
xor ecx ecx
push edi
test esi esi
jbe r-xdata
lea eax [ ebp - 0x1d0 ]
push eax
call sub_4102a4
push esi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1d0 ]
push eax
call sub_4105a6
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x1d0 ]
push eax
call sub_41061f
lea eax [ ebp - 0x80 ]
push 0x20
mov [ ebp + 0x8 ] eax
pop esi
cmp esi ebx
jae r-xdata
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
sub edi eax
lea eax [ ebp - 0xf0 ]
push eax
call sub_4102a4
push ebx
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0xf0 ]
push eax
call sub_4105a6
push [ ebp + 0x14 ]
lea eax [ ebp - 0xf0 ]
push [ ebp + 0x10 ]
push eax
call sub_4105a6
lea eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0xf0 ]
push eax
call sub_41061f
lea eax [ ebp - 0x160 ]
push eax
call sub_4102a4
xor ecx ecx
test esi esi
jbe r-xdata
mov ecx ebx
sub ecx esi
push ecx
lea eax [ ebp + esi - 0x40 ]
push 0x36
push eax
call sub_41a3a0
add esp 0xc
lea eax [ ebp + ecx - 0x40 ]
mov dl [ edi + eax ]
xor dl 0x36
inc ecx
mov [ eax ] dl
cmp ecx esi
jb r-xdata
pop edi
cmp esi ebx
jae r-xdata
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
sub edi eax
push ebx
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x160 ]
push eax
call sub_4105a6
push 0x20
lea eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x160 ]
push eax
call sub_4105a6
push [ ebp + 0x18 ]
lea eax [ ebp - 0x160 ]
push eax
call sub_41061f
pop esi
pop ebx
leave
retn 0x14
mov ecx ebx
sub ecx esi
push ecx
lea eax [ ebp + esi - 0x40 ]
push 0x5c
push eax
call sub_41a3a0
add esp 0xc
lea eax [ ebp + ecx - 0x40 ]
mov dl [ edi + eax ]
xor dl 0x5c
inc ecx
mov [ eax ] dl
cmp ecx esi
jb r-xdata
sub_405a7b
push ebp
lea ebp [ esp - 0x58 ]
sub esp 0xbc
push esi
mov esi [ ebp + 0x6c ]
push edi
push 0x40
pop eax
cmp esi eax
jae r-xdata
push eax
push [ ebp + 0x68 ]
lea eax [ ebp - 0x44 ]
push eax
call sub_41be10
add esp 0xc
lea eax [ ebp + 0x20 ]
push eax
mov [ ebp + esi - 0x44 ] 0x0
mov [ ebp + esi - 0x43 ] 0x0
mov [ ebp + esi - 0x42 ] 0x0
mov [ ebp + esi - 0x41 ] 0x1
add esi 0x4
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x64 ]
push [ ebp + 0x60 ]
call sub_40593e
push 0x20
pop esi
push esi
lea eax [ ebp + 0x20 ]
push eax
lea eax [ ebp ]
push eax
call sub_41be10
mov eax [ ebp + 0x7c ]
add esp 0xc
dec eax
mov [ ebp + 0x4c ] eax
push 0x10
pop eax
mov [ ebp + 0x50 ] eax
mov [ ebp + 0x54 ] eax
mov eax [ ebp + 0x70 ]
mov [ ebp + 0x40 ] eax
mov eax [ ebp + 0x74 ]
mov [ ebp + 0x44 ] eax
mov eax [ ebp + 0x78 ]
mov [ ebp + 0x48 ] eax
xor edi edi
mov eax esi
push esi
lea eax [ ebp ]
push eax
push [ ebp + edi + 0x40 ]
call sub_41be10
add edi 0x4
add esp 0xc
cmp edi 0xc
jb r-xdata
mov [ ebp + 0x6c ] eax
mov eax [ ebp + edi + 0x4c ]
test eax eax
jbe r-xdata
push 0x44
lea eax [ ebp - 0x44 ]
push eax
call sub_40cc96
push esi
lea eax [ ebp ]
push eax
call sub_40cc96
push esi
lea eax [ ebp + 0x20 ]
push eax
call sub_40cc96
push esi
lea eax [ ebp - 0x64 ]
push eax
call sub_40cc96
pop edi
pop esi
add ebp 0x58
leave
retn 0x20
mov cl [ ebp + eax + 0x20 ]
xor [ ebp + eax ] cl
inc eax
cmp eax esi
jb r-xdata
dec [ ebp + 0x6c ]
jne r-xdata
lea eax [ ebp - 0x64 ]
push eax
push esi
lea eax [ ebp + 0x20 ]
push eax
push [ ebp + 0x64 ]
push [ ebp + 0x60 ]
call sub_40593e
push esi
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp + 0x20 ]
push eax
call sub_41be10
add esp 0xc
xor eax eax
sub_405b96
push ebp
mov ebp esp
sub esp 0x268
cmp [ ebp + 0x1c ] 0x18
push edi
mov edi ecx
mov [ ebp - 0x8 ] edi
ja r-xdata
pop edi
leave
retn 0x20
and [ ebp - 0x4 ] 0x0
push ebx
push esi
lea ebx [ edi + 0x4b4 ]
inc [ ebp - 0x4 ]
add ebx 0x178
cmp [ ebp - 0x4 ] 0x4
jb r-xdata
push [ ebp + 0xc ]
mov ecx ebx
call sub_40cd71
test al al
je r-xdata
mov eax [ ebp + 0x1c ]
lea esi [ ebx + 0x102 ]
cmp [ esi + 0x32 ] eax
jne r-xdata
mov esi 0x200
push esi
lea eax [ ebp - 0x268 ]
push eax
push [ ebp + 0x10 ]
call sub_41176d
mov ecx [ ebp + 0x1c ]
xor eax eax
inc eax
shl eax cl
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push 0x10
push [ ebp + 0x14 ]
lea eax [ ebp - 0x268 ]
push eax
call sub_41a5e0
pop ecx
push eax
lea eax [ ebp - 0x268 ]
push eax
call sub_405a7b
push esi
lea eax [ ebp - 0x268 ]
push eax
call sub_40cc96
mov esi [ ebp + 0xc ]
lea eax [ edi + 0xa94 ]
mov ecx [ eax ]
mov edx ecx
and edx 0x3
imul edx edx 0x178
lea ebx [ edx + edi + 0x4b4 ]
inc ecx
mov [ eax ] ecx
mov eax [ ebp + 0x1c ]
push 0x40
pop ecx
mov [ ebx + 0x134 ] eax
mov edi ebx
[ edi ] [ esi ]
push 0x10
push [ ebp + 0x14 ]
lea eax [ ebx + 0x102 ]
push eax
movsw [ edi ] [ esi ]
call sub_41be10
push 0x20
pop esi
push esi
lea eax [ ebp - 0x48 ]
push eax
lea edi [ ebx + 0x112 ]
push edi
call sub_41be10
push esi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebx + 0x138 ]
push eax
call sub_41be10
push esi
lea eax [ ebp - 0x68 ]
push eax
add ebx 0x158
push ebx
call sub_41be10
add esp 0x30
push 0x0
push 0x1
push esi
push edi
call sub_40cbe8
mov edi [ ebp - 0x8 ]
push 0x10
push [ ebp + 0x14 ]
push esi
call sub_41a784
add esp 0xc
test eax eax
je r-xdata
mov ebx [ ebp + 0x24 ]
test ebx ebx
je r-xdata
push esi
lea eax [ ebp - 0x68 ]
push eax
push [ ebp + 0x20 ]
call sub_41be10
add esp 0xc
push 0x0
push 0x0
push 0x20
pop esi
lea eax [ ebx + 0x112 ]
push esi
push eax
call sub_40cbe8
push esi
lea eax [ ebx + 0x112 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call sub_41be10
add esp 0xc
push 0x0
push 0x1
push esi
lea eax [ ebx + 0x112 ]
push eax
call sub_40cbe8
push esi
lea eax [ ebx + 0x138 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_41be10
push esi
add ebx 0x158
lea eax [ ebp - 0x68 ]
push ebx
push eax
call sub_41be10
add esp 0x18
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push 0x8
push 0x0
push ebx
call sub_41a3a0
add esp 0xc
xor ecx ecx
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push esi
lea eax [ ebp - 0x48 ]
push eax
call sub_40cc96
pop esi
pop ebx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x48 ]
push 0x100
push eax
push [ ebp + 0x8 ]
lea ecx [ edi + 0xa9c ]
call sub_40c745
mov dl [ ebp + ecx - 0x28 ]
mov eax ecx
and eax 0x7
add eax ebx
xor [ eax ] dl
inc ecx
cmp ecx esi
jb r-xdata
push esi
lea eax [ ebp - 0x28 ]
push eax
call sub_40cc96
sub_405dc9
mov eax sub_4291db
call sub_41a05c
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
push 0x4b0
push esi
mov [ ebp - 0x4 ] 0x1
call sub_40cc96
push 0x5e0
lea edi [ esi + 0x4b4 ]
push edi
call sub_40cc96
push j_sub_40cdf1
push 0x4
push 0x178
push edi
mov [ ebp - 0x4 ] 0x0
call sub_41c1d3
or [ ebp - 0x4 ] 0xffffffff
push j_sub_40cdf1
push 0x4
push 0x12c
push esi
call sub_41c1d3
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_405e60
push ebp
mov ebp esp
sub esp 0x20
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x2
jne r-xdata
cmp [ esi ] 0x3
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp - 0x20 ]
push eax
push 0x4
lea eax [ ebp + 0x8 ]
push eax
push 0x20
push [ ebp + 0xc ]
call sub_40593e
xor edx edx
mov [ esi + 0x4 ] edx
xor eax eax
push ebx
pop esi
leave
retn 0x8
lea eax [ ebp - 0x20 ]
push eax
push 0x20
add esi 0x4
push esi
push 0x20
push [ ebp + 0xc ]
call sub_40593e
push 0x20
lea eax [ ebp - 0x20 ]
push eax
push esi
call sub_41be10
add esp 0xc
movzx ebx [ ebp + eax - 0x20 ]
mov ecx eax
and ecx 0x3
shl ecx 0x3
shl ebx cl
xor edx ebx
inc eax
cmp eax 0x20
jb r-xdata
mov [ esi + 0x4 ] edx
pop ebx
sub_405ed9
mov eax sub_4291db
call sub_41a05c
push ecx
push ebx
push esi
push edi
push j_sub_40cdf1
push sub_405db8
push 0x4
mov esi ecx
push 0x12c
push esi
mov [ ebp - 0x10 ] esi
call sub_41c236
push j_sub_40cdf1
push sub_405db8
push 0x4
push 0x178
lea ebx [ esi + 0x4b4 ]
xor edi edi
push ebx
mov [ ebp - 0x4 ] edi
call sub_41c236
lea ecx [ esi + 0xa9c ]
mov [ ebp - 0x4 ] 0x1
call sub_40c72c
push 0x4b0
push edi
push esi
mov [ esi + 0xa98 ] edi
call sub_41a3a0
push 0x5e0
push edi
push ebx
call sub_41a3a0
push 0x400
lea eax [ esi + 0xba4 ]
push edi
push eax
mov [ esi + 0x4b0 ] edi
mov [ esi + 0xa94 ] edi
call sub_41a3a0
mov ecx [ ebp - 0xc ]
add esp 0x24
pop edi
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
sub_405f84
push ebp
mov ebp esp
sub esp 0x180
push ebx
mov ebx ecx
mov ecx [ ebp + 0x10 ]
cmp [ ecx + 0x100 ] 0x0
push edi
je r-xdata
xor al al
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
push esi
mov esi 0x80
push esi
lea eax [ ebp - 0x100 ]
push eax
mov [ ebx + 0xa98 ] edi
call sub_40cced
push esi
lea eax [ ebp - 0x180 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
call sub_411683
sub edi 0x4
je r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x100 ]
push eax
push [ ebp + 0x10 ]
mov ecx ebx
push [ ebp + 0x8 ]
call sub_405687
dec edi
jne r-xdata
pop edi
pop ebx
leave
retn 0x20
push esi
lea eax [ ebp - 0x180 ]
push eax
call sub_40cc96
push 0x100
lea eax [ ebp - 0x100 ]
push eax
call sub_40cc96
mov al 0x1
pop esi
jmp r-xdata
push [ ebp + 0x24 ]
lea eax [ ebp - 0x100 ]
push [ ebp + 0x20 ]
mov ecx ebx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_405b96
jmp r-xdata
sub_40608b
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x30
je r-xdata
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40b8fe
cmp [ ebp + 0xc ] 0x110
jne r-xdata
xor al al
pop ebp
retn 0x1c
mov al [ ebp + 0x20 ]
and al 0x1
movzx eax al
push eax
push [ ebp + 0x18 ]
mov ecx rw-data
push [ ebp + 0x8 ]
call sub_40be4f
jmp r-xdata
sub_4060dc
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
xor edx edx
mov ebx ecx
mov cl [ esi ]
inc edx
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp + 0xf ] cl
cmp [ ebp + 0x10 ] edx
jbe r-xdata
cmp eax [ ebp + 0x18 ]
jb r-xdata
cmp eax [ ebp + 0x18 ]
jae r-xdata
xor ecx ecx
mov [ edi + eax * 2 ] cx
pop edi
pop esi
pop ebx
leave
retn 0x14
mov eax [ ebp + 0x18 ]
dec eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
movzx ecx [ ebx + 0x4 ]
shr ecx 0x6
sub ecx 0x0
je r-xdata
mov cl [ edx + esi ]
mov [ ebx + 0x4 ] cl
inc edx
mov [ ebx + 0x8 ] 0x8
movzx cx [ edx + esi ]
mov [ edi + eax * 2 ] cx
inc eax
inc edx
jmp r-xdata
dec ecx
je r-xdata
shl [ ebx + 0x4 ] 0x2
add [ ebx + 0x8 ] 0xfffffffe
cmp edx [ ebp + 0x10 ]
jb r-xdata
movzx di [ ebp + 0xf ]
movzx cx [ edx + esi ]
mov ebx 0x100
imul di bx
add cx di
mov edi [ ebp + 0x14 ]
mov [ edi + eax * 2 ] cx
inc eax
inc edx
jmp r-xdata
dec ecx
je r-xdata
mov ebx [ ebp - 0x8 ]
movzx cx [ edx + esi + 0x1 ]
mov ebx 0x100
imul cx bx
movzx bx [ edx + esi ]
add cx bx
mov [ edi + eax * 2 ] cx
inc eax
inc edx
inc edx
jmp r-xdata
dec ecx
jne r-xdata
movzx ecx [ edx + esi ]
inc edx
test cl cl
jns r-xdata
inc ecx
inc ecx
jmp r-xdata
mov bl [ edx + esi ]
and ecx 0x7f
inc edx
inc ecx
inc ecx
mov [ ebp - 0x1 ] bl
mov [ ebp - 0xc ] ecx
test ecx ecx
jle r-xdata
test ecx ecx
jg r-xdata
cmp eax [ ebp + 0x18 ]
jae r-xdata
cmp eax [ ebp + 0x18 ]
jae r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movsx cx [ eax + ecx ]
movzx di [ ebp - 0x1 ]
add cx di
mov edi 0xff
and cx di
movzx di [ ebp + 0xf ]
mov ebx 0x100
imul di bx
add cx di
mov edi [ ebp + 0x14 ]
dec [ ebp - 0xc ]
mov [ edi + eax * 2 ] cx
inc eax
cmp [ ebp - 0xc ] 0x0
jg r-xdata
mov ebx [ ebp + 0x8 ]
movsx bx [ eax + ebx ]
mov [ edi + eax * 2 ] bx
mov ebx [ ebp - 0x8 ]
dec ecx
inc eax
sub_406257
mov edx [ esp + 0x4 ]
mov eax edx
dec eax
je r-xdata
cmp [ ecx ] 0x0
jne r-xdata
dec eax
je r-xdata
inc [ ecx + 0x4 ]
retn 0x4
mov [ ecx ] edx
mov eax [ ecx ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov [ ecx ] 0x2
jmp r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ecx ] 0xb
je r-xdata
sub eax 0xfc
jne r-xdata
mov [ ecx ] 0x3
jmp r-xdata
sub_40629a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xff
jne r-xdata
push esi
call sub_406257
push r--data
lea eax [ ebp + 0x8 ]
push eax
mov [ ebp + 0x8 ] esi
call sub_41c33f
cmp [ ecx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebp
retn 0x4
sub_4062fd
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ ebp + 0x8 ]
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0xc ] 0x2
call sub_4112c0
leave
retn 0xc
sub_406381
push ebp
mov ebp esp
sub esp 0x800
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
lea eax [ ebp - 0x800 ]
push 0x400
push eax
call sub_41a577
add esp 0x14
lea eax [ ebp - 0x800 ]
push eax
push 0x1
call sub_4012d0
leave
retn
sub_4064b1
push ebp
mov ebp esp
sub esp 0x14
push ebx
lea eax [ ebp - 0x4 ]
push eax
push 0x20
xor ebx ebx
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
mov al bl
pop ebx
leave
retn 0x4
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x14 ] 0x1
push ebx
mov [ ebp - 0x8 ] 0x2
call [ LookupPrivilegeValueW@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
push ebx
push ebx
push ebx
lea eax [ ebp - 0x14 ]
push eax
push ebx
push [ ebp - 0x4 ]
call [ AdjustTokenPrivileges@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov bl 0x1
sub_406522
push ebp
mov ebp esp
mov eax 0x2000
call sub_41a670
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xb050 ] 0x2
mov edx [ eax + 0x9948 ]
mov ecx [ eax + 0x994c ]
push esi
jne r-xdata
mov eax 0x1fff
mov esi ecx
cmp ecx eax
jb r-xdata
mov eax [ ebp + 0x10 ]
shr ecx 0x1
dec eax
mov esi ecx
cmp ecx eax
jb r-xdata
push esi
push edx
lea eax [ ebp - 0x2000 ]
push eax
call sub_41be10
add esp 0xc
push [ ebp + 0x10 ]
lea eax [ ebp - 0x2000 ]
push [ ebp + 0xc ]
mov [ ebp + esi - 0x2000 ] 0x0
push eax
call sub_411857
mov esi eax
push edi
mov edi [ ebp + 0xc ]
push esi
push edi
push edx
call sub_41172d
xor eax eax
mov [ edi + esi * 2 ] ax
pop edi
jmp r-xdata
mov esi eax
pop esi
leave
retn 0xc
sub_4065a8
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
push esi
push esi
call sub_40a00c
push esi
call sub_40902d
test al al
je r-xdata
pop esi
pop ebp
retn 0xc
push ebx
push 0x1
push [ ebp + 0x8 ]
call sub_4090e7
push 0x0
push esi
push [ ebp + 0x8 ]
call [ CreateHardLinkW@IAT ]
test eax eax
setne bl
test bl bl
jne r-xdata
mov al bl
pop ebx
push [ ebp + 0x8 ]
push 0x15
call sub_4012d0
mov esi rw-data
mov ecx esi
call sub_401000
push 0x9
mov ecx esi
call sub_406257
sub_406633
mov eax sub_42909a
call sub_41a05c
mov eax 0x1010
call sub_41a670
push esi
xor esi esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] esi
mov ecx [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] esi
call sub_402c53
test al al
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x1c ] esi
jmp r-xdata
cmp [ rw-data ] 0x0
push ebx
push edi
push 0x7
pop edi
je r-xdata
push r--data
call sub_4064b1
test al al
je r-xdata
je r-xdata
mov ebx [ ebp - 0x1c ]
mov esi [ SetFileSecurityW@IAT ]
push ebx
push edi
push [ ebp + 0xc ]
call esi
test eax eax
jne r-xdata
push 0xf
pop edi
push r--data
call sub_4064b1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push [ ebp - 0x1c ]
call sub_41a086
pop ecx
cmp [ ebp - 0x1c ] 0x0
pop edi
pop ebx
push 0x800
lea eax [ ebp - 0x101c ]
push eax
push [ ebp + 0xc ]
call sub_40a5bc
test al al
je r-xdata
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0x1e
push eax
push 0x4f
call sub_4062fd
mov esi rw-data
mov ecx esi
call sub_401000
push 0x1
mov ecx esi
call sub_406257
push ebx
push edi
lea eax [ ebp - 0x101c ]
push eax
call esi
test eax eax
jne r-xdata
sub_406733
mov eax sub_4291f8
call sub_41a05c
mov eax 0x303c
call sub_41a670
cmp [ rw-data ] 0x0
jne r-xdata
push edi
push 0x1
push [ ebp + 0xc ]
call sub_4090e7
mov edi [ ebp + 0x10 ]
cmp [ edi + 0x10e1 ] 0x0
jne r-xdata
push r--data
call sub_4064b1
push r--data
call sub_4064b1
mov [ rw-data ] 0x1
push 0x0
push [ ebp + 0xc ]
call [ CreateDirectoryW@IAT ]
test eax eax
jne r-xdata
cmp [ edi + 0x20f4 ] 0x0
jne r-xdata
push ebx
push esi
push 0x1418
lea ecx [ ebp - 0x20 ]
call sub_4012f9
and [ ebp - 0x4 ] 0x0
push 0x800
lea eax [ edi + 0x10f4 ]
push eax
lea eax [ ebp - 0x1024 ]
push eax
call sub_410792
lea eax [ ebp - 0x1024 ]
push eax
call sub_41a32f
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x2024 ]
push 0x4
lea esi [ ebp - 0x1024 ]
mov [ ebp - 0x10 ] eax
mov eax esi
push r--data
push eax
call sub_41c3dc
add esp 0x10
mov ebx eax
neg ebx
sbb bl bl
inc bl
je r-xdata
xor al al
jmp r-xdata
xor eax eax
push eax
push 0x80
push 0x1
push eax
push eax
push 0x40000000
push [ ebp + 0xc ]
call [ CreateFileW@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x10 ]
push 0x4
lea esi [ ebp - 0x101c ]
mov eax esi
push r--data
push eax
call sub_41c3dc
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push eax
call [ CloseHandle@IAT ]
cmp ecx 0x2
je r-xdata
mov ecx [ ebp + 0x10 ]
mov esi [ ebp - 0x20 ]
add eax ecx
lea eax [ eax + eax + 0xc ]
mov [ esi + 0x4 ] ax
xor eax eax
mov [ esi + 0x6 ] ax
mov [ esi + 0x8 ] ax
lea eax [ ebp - 0x1024 ]
push eax
lea eax [ esi + 0x10 ]
lea ebx [ ecx + ecx ]
push eax
mov [ esi ] 0xa0000003
mov [ esi + 0xa ] bx
call sub_41a377
mov eax [ ebp - 0x10 ]
add eax eax
mov [ esi + 0xe ] ax
lea eax [ ebp - 0x2024 ]
push eax
mov eax [ ebp + 0x10 ]
lea eax [ esi + eax * 2 + 0x12 ]
add ebx 0x2
push eax
mov [ esi + 0xc ] bx
call sub_41a377
add esp 0x10
jmp r-xdata
push 0x5c
pop eax
mov [ ebp - 0x2024 ] ax
lea eax [ ebp - 0x2022 ]
lea esi [ ebp - 0x1016 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov esi [ ebp - 0x20 ]
add eax ecx
lea eax [ eax + eax + 0x10 ]
mov [ esi + 0x4 ] ax
xor eax eax
mov [ esi + 0x6 ] ax
mov [ esi + 0x8 ] ax
lea eax [ ecx + ecx ]
mov [ esi + 0xa ] ax
lea eax [ ebp - 0x1024 ]
push eax
lea eax [ esi + 0x14 ]
push eax
mov [ esi ] 0xa000000c
call sub_41a377
mov eax [ ebp + 0x10 ]
add eax eax
add eax 0x2
mov [ esi + 0xc ] ax
mov eax [ ebp - 0x10 ]
add eax eax
mov [ esi + 0xe ] ax
lea eax [ ebp - 0x2024 ]
push eax
mov eax [ ebp + 0x10 ]
lea eax [ esi + eax * 2 + 0x16 ]
push eax
call sub_41a377
xor eax eax
add esp 0x10
test bl bl
sete al
mov [ esi + 0x10 ] eax
cmp ecx 0x1
je r-xdata
xor eax eax
push eax
push 0x2200000
push 0x3
push eax
push eax
push 0xc0000000
push [ ebp + 0xc ]
call [ CreateFileW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
push esi
push eax
call sub_41a377
lea eax [ ebp - 0x2024 ]
push eax
call sub_41a32f
mov ecx [ edi + 0x10f0 ]
add esp 0xc
mov [ ebp - 0x10 ] eax
cmp ecx 0x3
jne r-xdata
xor eax eax
push eax
lea ecx [ ebp - 0x24 ]
push ecx
push eax
push eax
movzx eax [ esi + 0x4 ]
add eax 0x8
push eax
push esi
push 0x900a4
push ebx
call [ DeviceIoControl@IAT ]
test eax eax
jne r-xdata
push esi
cmp [ ebp - 0x20 ] 0x0
je r-xdata
lea ecx [ ebp - 0x3048 ]
call sub_40851e
lea ecx [ ebp - 0x3048 ]
mov [ ebp - 0x4 ] 0x1
call sub_4087ca
mov [ ebp - 0x3044 ] ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x6294 ]
neg eax
sbb eax eax
lea ecx [ edi + 0x1040 ]
and eax ecx
push eax
mov eax [ ebx + 0x6290 ]
neg eax
sbb eax eax
lea ecx [ edi + 0x1038 ]
and eax ecx
push eax
mov eax [ ebx + 0x628c ]
neg eax
lea ecx [ edi + 0x1030 ]
sbb eax eax
and eax ecx
push eax
lea ecx [ ebp - 0x3048 ]
call sub_408abd
lea ecx [ ebp - 0x3048 ]
call sub_4087ca
cmp [ ebx + 0x519b ] 0x0
jne r-xdata
push ebx
call [ CloseHandle@IAT ]
push [ ebp + 0xc ]
push 0x0
push 0x14
call sub_4062fd
call [ GetLastError@IAT ]
cmp eax 0x522
jne r-xdata
xor al al
push [ ebp - 0x20 ]
jmp r-xdata
lea ecx [ ebp - 0x3048 ]
mov [ ebp - 0x4 ] 0x0
call sub_408a05
mov bl 0x1
jmp r-xdata
push [ edi + 0x1c ]
push [ ebp + 0xc ]
call sub_408e15
mov ebx rw-data
mov ecx ebx
call sub_401000
push 0x9
mov ecx ebx
call sub_406257
cmp [ edi + 0x10e1 ] 0x0
push [ ebp + 0xc ]
je r-xdata
push 0x16
call sub_401bae
call sub_41a086
pop ecx
push esi
call sub_41a086
pop ecx
mov al bl
jmp r-xdata
call [ DeleteFileW@IAT ]
call [ RemoveDirectoryW@IAT ]
jmp r-xdata
pop esi
pop ebx
xor bl bl
sub_406b09
mov eax sub_429218
call sub_41a05c
mov eax 0x5094
call sub_41a670
push ebx
push esi
mov esi [ ebp + 0xc ]
cmp [ esi ] 0x0
push edi
mov edi 0x802
lea ebx [ edi - 0x2 ]
je r-xdata
push edi
lea eax [ ebp - 0x307c ]
cmp [ esi + 0x2 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x407c ]
push eax
lea eax [ ebp - 0x307c ]
push eax
call sub_4107bf
lea ecx [ ebp - 0x2078 ]
call sub_40660a
xor edi edi
push edi
lea eax [ ebp - 0x2078 ]
push eax
push esi
call sub_409444
mov bl al
mov eax [ ebp - 0x1070 ]
test al 0x1
je r-xdata
push esi
add ebx 0x1e
push ebx
push 0x50
call sub_4062fd
push 0x3
mov ecx rw-data
call sub_406257
jmp r-xdata
lea eax [ ebp - 0x307c ]
push r--data
push eax
call sub_41a377
pop ecx
pop ecx
push ebx
lea eax [ ebp - 0x3078 ]
jmp r-xdata
lea ecx [ ebp - 0x1030 ]
call sub_40851e
push 0x11
lea eax [ ebp - 0x307c ]
push eax
lea ecx [ ebp - 0x1030 ]
mov [ ebp - 0x4 ] edi
call sub_4087a2
test al al
je r-xdata
and eax 0xfffffffe
push eax
push esi
call sub_408e15
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push esi
push eax
call sub_410792
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x407c ]
push eax
push ebx
call sub_406522
cmp [ ebp - 0x407c ] 0x3a
je r-xdata
lea ecx [ ebp - 0x50a0 ]
call sub_40851e
mov [ ebp - 0x4 ] 0x1
test bl bl
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1030 ]
push eax
push edi
call sub_402c53
test al al
je r-xdata
push [ ebp - 0x1070 ]
push esi
call sub_408e15
lea ecx [ ebp - 0x50a0 ]
mov [ ebp - 0x4 ] 0x0
call sub_408a05
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1030 ]
call sub_408a05
push 0x5
push esi
lea ecx [ ebp - 0x50a0 ]
call sub_40855b
test al al
je r-xdata
lea ecx [ ebp - 0x1030 ]
call sub_4087ca
lea eax [ ebp - 0x1040 ]
push eax
lea eax [ ebp - 0x1048 ]
push eax
lea eax [ ebp - 0x1050 ]
push eax
push [ ebp - 0x509c ]
call [ SetFileTime@IAT ]
sub_406ca5
mov eax [ esp + 0x4 ]
cmp [ eax + 0x5188 ] 0x0
push esi
mov esi [ esp + 0xc ]
je r-xdata
lea eax [ esi + 0x8948 ]
push r--data
push eax
call sub_41a5a1
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ esi + 0x8948 ]
push r--data
push eax
call sub_41a5a1
pop ecx
pop ecx
test eax eax
jne r-xdata
pop esi
retn 0xc
push [ esp + 0x10 ]
push esi
call sub_406b09
push [ esp + 0x10 ]
push esi
call sub_406633
sub_406cfd
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov esi ecx
mov eax [ esi + 0x8 ]
add eax 0x1012
push eax
push edi
call sub_410792
mov eax [ esi + 0x8 ]
add eax 0x1012
cmp [ eax ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x5154 ] 0x4
push ebx
movzx ebx [ eax + 0x72b2 ]
jne r-xdata
push eax
call sub_409e12
movzx eax [ eax ]
push eax
call sub_409e4d
test al al
jne r-xdata
mov [ ebp + 0x13 ] 0x0
jmp r-xdata
cmp bx 0x58
jne r-xdata
push [ ebp + 0x14 ]
push edi
call sub_409e72
cmp bx 0x45
pop ebx
je r-xdata
push 0x3a
call sub_409e65
test al al
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_40a108
push eax
mov eax [ esi + 0x8 ]
cmp [ eax + 0x5154 ] 0x1
je r-xdata
xor eax eax
mov [ ebp + 0x13 ] 0x1
mov [ edi ] ax
pop edi
pop esi
pop ebp
retn 0x10
cmp [ edi + 0x2 ] 0x5f
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
jmp r-xdata
cmp [ edi ] 0x5f
jne r-xdata
movzx eax [ edi + 0x4 ]
push eax
call sub_409e4d
test al al
je r-xdata
push edi
call sub_4107bf
movzx eax [ edi ]
push eax
call CharUpperW
cmp [ ebp + 0x13 ] 0x0
movzx esi ax
je r-xdata
cmp [ edi + 0x2 ] 0x5f
jne r-xdata
add esi 0xffffffbf
cmp si 0x19
ja r-xdata
push 0x5c
pop eax
mov [ edi ] ax
push eax
push 0x3a
jmp r-xdata
pop eax
mov [ edi + 0x2 ] ax
sub_406df7
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x4 ]
cmp edx [ eax + 0x4 ]
ja r-xdata
xor eax eax
jb r-xdata
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ecx ]
cmp ecx [ eax ]
jae r-xdata
retn 0x4
sub_406e15
mov eax [ esp + 0x4 ]
mov edx [ ecx ]
mov ecx [ ecx + 0x4 ]
push esi
mov esi [ eax ]
mov eax [ eax + 0x4 ]
cmp ecx eax
ja r-xdata
xor eax eax
inc eax
jb r-xdata
cmp edx esi
jne r-xdata
cmp edx esi
ja r-xdata
xor eax eax
jmp r-xdata
cmp ecx eax
je r-xdata
pop esi
retn 0x4
sub_406e41
mov eax sub_42922d
call sub_41a05c
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov edi [ esi + 0x4448 ]
and [ ebp - 0x4 ] 0x0
test edi edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x10 ]
call sub_401001
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov ecx edi
call sub_415195
push edi
call sub_41a07b
pop ecx
sub_406e89
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
call sub_408b8b
mov ecx [ esi + 0x8 ]
mov [ esi + 0x21e0 ] eax
xor eax eax
mov [ esi + 0x21e4 ] edx
mov [ esi + 0x4450 ] eax
mov [ esi + 0x4454 ] eax
mov cl [ ecx + 0x4120 ]
mov [ esi + 0x545c ] cl
mov ecx esi
mov [ esi + 0x21d7 ] al
mov [ esi + 0x545d ] al
mov [ esi + 0x4459 ] 0x1
mov [ esi + 0x445a ] al
mov [ esi + 0x445b ] al
call sub_410f45
pop esi
retn 0x4
sub_406ee8
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ ebp + 0x8 ]
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x14 ]
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0xc ] 0x3
call sub_4112c0
leave
retn 0x10
sub_406f1d
mov eax sub_42924c
call sub_41a05c
push ecx
push ebx
push esi
mov esi ecx
push edi
xor edi edi
lea ebx [ esi + 0x10 ]
mov ecx ebx
mov [ ebp - 0x10 ] esi
mov [ esi ] edi
mov [ esi + 0x4 ] edi
call sub_40b5f2
xor eax eax
and [ esi + 0x444c ] eax
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
push 0xe6e0
mov [ esi + 0x8 ] edi
mov [ esi + 0x445c ] ax
mov [ esi + 0x545e ] ax
call sub_41a41a
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
xor eax eax
push ebx
mov ecx eax
call sub_417214
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ eax + 0x1c ] edi
pop edi
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push 0x8
pop edi
mov [ esi + 0x4448 ] eax
mov edi [ edi + 0x7298 ]
cmp edi 0x8
jb r-xdata
sub_406fac
mov eax sub_42909a
call sub_41a05c
sub esp 0x10
push esi
push edi
push 0x40000
lea ecx [ ebp - 0x1c ]
call sub_4012f9
push [ ebp - 0x18 ]
mov edi [ ebp - 0x1c ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push edi
call sub_40b65d
mov esi eax
test esi esi
je r-xdata
test edi edi
je r-xdata
push ebx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push edi
call sub_41a086
pop ecx
pop ebx
xor eax eax
cmp eax [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push esi
push edi
call sub_40b80d
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
jg r-xdata
push [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
push edi
call sub_40b65d
mov esi eax
test esi esi
jne r-xdata
jg r-xdata
mov esi ebx
cmp esi ebx
jb r-xdata
cmp esi 0xffffffff
je r-xdata
sub ebx esi
sbb [ ebp + 0x10 ] 0x0
test ebx ebx
jb r-xdata
sub_407043
mov eax sub_429269
call sub_41a05c
mov eax 0x1034
call sub_41a670
push ebx
push esi
push [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
push esi
push esi
call sub_40a00c
lea ecx [ ebp - 0x1040 ]
call sub_40851e
xor ebx ebx
push esi
lea ecx [ ebp - 0x1040 ]
mov [ ebp - 0x4 ] ebx
call sub_408695
test al al
jne r-xdata
push 0x100000
lea ecx [ ebp - 0x1c ]
call sub_4012f9
mov [ ebp - 0x4 ] 0x1
call sub_4109c9
mov esi [ ebp - 0x1c ]
jmp r-xdata
push [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push 0x11
call sub_406ee8
push [ ebp + 0xc ]
push 0x12
call sub_4012d0
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x1040 ]
push esi
call sub_408c03
cmp eax ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push eax
push esi
call sub_408841
call sub_4109c9
cmp esi ebx
je r-xdata
mov bl 0x1
jmp r-xdata
push esi
call sub_41a086
pop ecx
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1040 ]
call sub_408a05
mov ecx [ ebp - 0xc ]
pop esi
mov al bl
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x14
sub_40710b
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
cmp [ eax + 0x4120 ] 0x0
jne r-xdata
mov al 0x1
add eax 0x4020
push eax
push [ esp + 0x10 ]
push 0x1
call sub_411518
test al al
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ eax + 0x4123 ] 0x1
push 0x2
call sub_401bae
push [ esp + 0xc ]
push 0x6
call sub_4012d0
xor al al
jmp r-xdata
pop esi
retn 0x8
sub_407155
push ebp
mov ebp esp
mov eax 0x1004
call sub_41a670
push edi
mov edi ecx
mov eax [ edi + 0x8 ]
cmp [ eax + 0x51c1 ] 0x0
jne r-xdata
pop edi
leave
retn 0x8
cmp [ eax + 0x519b ] 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
push [ esi + 0x6604 ]
sete al
movzx eax al
push eax
lea ebx [ edi + 0x545e ]
push ebx
call sub_409051
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov [ edi + 0x545d ] 0x1
jmp r-xdata
push ebx
call sub_40902d
mov [ ebp + 0xb ] al
test al al
je r-xdata
cmp [ edi + 0x545d ] 0x0
je r-xdata
push 0x1
push ebx
call sub_4090e7
mov eax [ edi + 0x8 ]
cmp [ eax + 0x519b ] 0x0
push [ esi + 0x6604 ]
sete al
movzx eax al
push eax
push ebx
call sub_409051
test eax eax
je r-xdata
push ebx
call sub_408dc9
push eax
call sub_408da4
test al al
jne r-xdata
pop esi
pop ebx
mov edi [ edi + 0x8 ]
mov eax [ edi + 0x6294 ]
neg eax
sbb eax eax
lea ecx [ esi + 0x7628 ]
and eax ecx
push eax
mov eax [ edi + 0x6290 ]
neg eax
sbb eax eax
lea ecx [ esi + 0x7620 ]
and eax ecx
push eax
mov eax [ edi + 0x628c ]
add esi 0x7618
neg eax
sbb eax eax
and eax esi
push eax
push ebx
call sub_408ebd
push 0x800
push ebx
lea eax [ ebp - 0x1004 ]
push eax
call sub_410792
push 0x1
push ebx
call sub_409f6d
push 0x1
push ebx
call sub_4090e7
mov eax [ edi + 0x8 ]
cmp [ eax + 0x519b ] 0x0
push [ esi + 0x6604 ]
sete al
movzx eax al
push eax
push ebx
call sub_409051
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xb ] 0x0
jne r-xdata
push 0x0
lea eax [ esi + 0x7618 ]
push eax
push [ esi + 0x763c ]
lea eax [ ebp + 0xb ]
push [ esi + 0x7638 ]
push eax
push 0x800
push ebx
push 0x0
push [ edi + 0x8 ]
call sub_408450
mov [ ebp + 0xb ] 0x0
cmp [ ebp + 0xb ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push ebx
lea eax [ esi + 0x1e ]
push eax
push 0x13
call sub_4062fd
mov ecx rw-data
call sub_401000
push 0x9
mov ecx rw-data
call sub_406257
mov eax [ edi + 0x8 ]
cmp [ eax + 0x519b ] 0x0
jne r-xdata
push [ esi + 0x6604 ]
push ebx
call sub_408e15
sub_407301
push ebp
mov ebp esp
mov eax 0x100c
call sub_41a670
mov eax [ ecx + 0x8 ]
movzx edx [ eax + 0x72b2 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x1 ] 0x1
cmp dx 0x45
je r-xdata
cmp [ eax + 0x51c1 ] 0x0
jne r-xdata
cmp dx 0x58
jne r-xdata
mov al [ ebp - 0x1 ]
leave
retn 0x8
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x1
lea edx [ esi + 0x7618 ]
push edx
push [ esi + 0x763c ]
lea ebx [ ecx + 0x545e ]
push [ esi + 0x7638 ]
lea ecx [ ebp + 0xb ]
push ecx
mov edi 0x800
push edi
push ebx
push [ ebp + 0xc ]
push eax
call sub_408450
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov [ ebp - 0x1 ] al
cmp [ ebp + 0xb ] al
jne r-xdata
lea eax [ esi + 0x1e ]
push ebx
push eax
mov ecx rw-data
mov [ ebp - 0x8 ] eax
call sub_4063d6
push ebx
call sub_409ef9
test al al
jne r-xdata
push [ ebp - 0x8 ]
push 0x6a
call sub_4012d0
push edi
push ebx
lea eax [ ebp - 0x100c ]
push eax
call sub_410792
push 0x1
push ebx
call sub_409f6d
push 0x1
push ebx
call sub_4090e7
push 0x1
lea eax [ esi + 0x7618 ]
push eax
push [ esi + 0x763c ]
lea eax [ ebp + 0xb ]
push [ esi + 0x7638 ]
push eax
mov eax [ ebp - 0xc ]
push edi
push ebx
push [ ebp + 0xc ]
push [ eax + 0x8 ]
call sub_408450
test al al
je r-xdata
push ebx
push [ ebp - 0x8 ]
mov ecx rw-data
call sub_4063d6
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_407414
mov eax [ esp + 0x4 ]
cmp [ eax + 0xb050 ] 0x3
push ebx
jne r-xdata
cmp [ eax + 0x6601 ] 0x1d
setne bl
cmp [ eax + 0x6601 ] 0x0
seta bl
jmp r-xdata
test bl bl
je r-xdata
xor bl bl
cmp [ eax + 0x6602 ] 0x0
jne r-xdata
xor eax eax
test bl bl
sete al
pop ebx
retn 0x8
push esi
push [ esp + 0x10 ]
lea esi [ eax + 0x1e ]
push esi
mov ecx rw-data
call sub_406433
push esi
push 0x22
call sub_4012d0
pop esi
sub_40746e
mov eax sub_429289
call sub_41a05c
mov eax 0x4198
call sub_41a670
cmp [ ebp + 0xc ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
movzx eax [ eax + 0x72b2 ]
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x18 ] eax
jne r-xdata
push edi
mov edi [ ebx + 0x6544 ]
cmp edi 0x2
je r-xdata
cmp [ esi + 0x21d7 ] 0x0
je r-xdata
mov ecx [ esi + 0x8 ]
mov [ esi + 0x545d ] 0x0
cmp [ ecx + 0x5158 ] 0x0
jne r-xdata
cmp edi 0x3
jne r-xdata
xor al al
jmp r-xdata
push eax
push 0x0
lea eax [ esi + 0x10 ]
push eax
push ebx
call sub_4186bb
test al al
jne r-xdata
push 0x5
lea eax [ ebp - 0x12 ]
push eax
lea eax [ ebx + 0x65e8 ]
push eax
mov [ ebp - 0x12 ] 0x0
call sub_405421
test eax eax
setne [ ebp - 0xe ]
cmp [ ebp - 0xe ] 0x0
je r-xdata
mov eax [ ecx + 0x92e8 ]
cmp [ esi + 0x4454 ] eax
jb r-xdata
cmp edi 0x5
jne r-xdata
cmp [ esi + 0x545d ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push 0x1
mov ecx rw-data
call sub_406257
mov ecx ebx
call sub_401a8b
lea eax [ ebp - 0x215c ]
push eax
lea eax [ ebx + 0x6608 ]
push eax
call sub_40a145
cmp [ ebx + 0x76cb ] 0x0
je r-xdata
cmp [ ebp - 0x12 ] 0x0
jne r-xdata
cmp [ esi + 0x4459 ] 0x0
jne r-xdata
mov ecx ebx
call sub_4010c0
jmp r-xdata
cmp [ ebx + 0x8904 ] 0x0
je r-xdata
lea eax [ esi + 0x545e ]
push eax
push ebx
push [ esi + 0x8 ]
call sub_406ca5
mov ecx ebx
call sub_401a84
test al al
jne r-xdata
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x6284 ]
cmp eax 0x1
je r-xdata
mov [ esi + 0x4459 ] 0x0
xor al al
jmp r-xdata
mov al 0x1
push [ ebp - 0x18 ]
add esi 0x10
push 0x0
push esi
push ebx
call sub_4186bb
test al al
jne r-xdata
mov al [ ebx + 0x7671 ]
mov [ esi + 0x21d7 ] al
mov [ esi + 0x21d8 ] 0x0
mov ecx [ ebx + 0xb048 ]
sub ecx [ ebx + 0x7630 ]
mov edx [ ebx + 0xb04c ]
sbb edx [ ebx + 0x7634 ]
mov eax [ ebx ]
push 0x0
push edx
push ecx
mov ecx ebx
call [ eax + 0xc ]
cmp [ ebp - 0xe ] 0x0
mov [ ebp + 0xf ] 0x0
mov [ ebp - 0x1d ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x6284 ] 0x1
jbe r-xdata
cmp [ ebp - 0x12 ] 0x0
jne r-xdata
pop edi
mov eax [ ebx ]
push 0x0
push [ ebx + 0xb044 ]
mov ecx ebx
push [ ebx + 0xb040 ]
call [ eax + 0xc ]
push 0x1
mov ecx rw-data
call sub_406257
jmp r-xdata
mov eax [ esi + 0x8 ]
mov al [ eax + 0x51c1 ]
test al al
je r-xdata
mov al [ ebx + 0xb054 ]
mov [ ebp - 0x1d ] al
test al al
je r-xdata
mov [ ebp - 0xe ] 0x0
test eax eax
jne r-xdata
xor cl cl
cmp [ ebp - 0x18 ] 0x49
je r-xdata
cmp [ esi + 0x21d8 ] 0x0
jne r-xdata
push 0x0
lea eax [ ebp - 0x215c ]
push eax
call sub_40a07d
mov ecx [ esi + 0x8 ]
mov ecx [ ecx + 0x6284 ]
dec ecx
cmp ecx eax
jne r-xdata
mov [ ebp - 0xe ] al
push 0x800
lea edi [ esi + 0x545e ]
push edi
lea eax [ ebp - 0x215c ]
push eax
push ebx
mov ecx esi
call sub_406cfd
cmp [ ebp - 0x1d ] 0x0
jne r-xdata
mov cl 0x1
jmp r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
push 0x1
lea eax [ ebp - 0x215c ]
push eax
call sub_40a07d
jmp r-xdata
mov [ ebp + 0xf ] 0x0
cmp [ edi ] 0x0
je r-xdata
push [ ebp - 0x1d ]
test al al
sete al
movzx eax al
push ecx
push eax
lea eax [ ebp - 0x215c ]
push eax
call j_sub_40daf0
test al al
je r-xdata
cmp [ ebx + 0xb054 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x45
je r-xdata
cmp [ eax + 0x5150 ] 0x0
je r-xdata
cmp [ ebx + 0x7670 ] 0x0
mov [ ebp + 0xf ] 0x1
je r-xdata
cmp [ ebp - 0x1d ] 0x0
jne r-xdata
lea ecx [ ebp - 0x31a4 ]
call sub_40660a
push 0x0
lea eax [ ebp - 0x31a4 ]
push eax
push edi
call sub_409444
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x58
jne r-xdata
cmp [ ebx + 0x7673 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x514f ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x514f ] 0x0
lea eax [ ebx + 0x7618 ]
push eax
lea ecx [ ebp - 0x2194 ]
call sub_406e15
test al al
je r-xdata
lea eax [ ebp - 0x215c ]
push eax
push ebx
mov ecx esi
call sub_407414
test al al
jne r-xdata
lea eax [ ebp - 0x215c ]
push eax
push ebx
mov ecx esi
call sub_40710b
test al al
jne r-xdata
mov [ ebp + 0xf ] 0x0
cmp [ ebp - 0x2198 ] 0x0
je r-xdata
lea ecx [ ebp - 0x115c ]
call sub_40851e
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x76d8 ]
test eax eax
setne [ ebp - 0x11 ]
cmp [ ebp - 0x11 ] 0x0
je r-xdata
push 0x2
mov ecx rw-data
mov [ ebp + 0xf ] al
call sub_406257
mov eax [ esi + 0x8 ]
cmp [ eax + 0x4120 ] 0x0
jne r-xdata
mov [ esi + 0x645e ] 0x1
jmp r-xdata
push esi
lea ecx [ ebp - 0x2194 ]
call sub_406df7
test al al
jmp r-xdata
mov ecx ebx
call sub_401a84
test al al
je r-xdata
cmp eax 0x5
je r-xdata
push 0x1
mov ecx rw-data
call sub_406257
mov [ ebp + 0xf ] 0x0
je r-xdata
cmp [ ebp + 0xf ] 0x0
je r-xdata
cmp [ ebp + 0xf ] 0x0
je r-xdata
cmp [ ebp + 0xf ] 0x0
je r-xdata
cmp [ ebx + 0xb054 ] 0x0
je r-xdata
lea eax [ ebp - 0x115c ]
push eax
push ebx
mov ecx esi
call sub_407301
mov [ ebp + 0xf ] al
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x115c ]
call sub_408a05
jmp r-xdata
cmp [ ebp - 0x18 ] 0x50
je r-xdata
cmp [ ebp - 0x18 ] 0x50
je r-xdata
cmp [ ebp + 0xf ] 0x0
je r-xdata
push 0x1
push 0x0
push 0x0
lea eax [ ebp - 0x215c ]
push eax
mov [ ebp - 0x1d ] 0x1
mov [ ebp + 0xf ] 0x1
call j_sub_40daf0
test al al
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x51c1 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x49
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x51c1 ] 0x0
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x115c ]
call sub_408a05
cmp [ ebp - 0xe ] 0x0
je r-xdata
xor bl bl
jmp r-xdata
cmp [ ebp - 0x1d ] 0x0
mov [ ebp - 0x10 ] 0x1
jne r-xdata
cmp [ ebp - 0x1d ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x45
je r-xdata
push edi
mov [ ebp + 0xb ] 0x0
call sub_40902d
test al al
je r-xdata
inc [ esi + 0x4454 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x115c ]
call sub_408a05
mov al bl
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov esi [ eax + 0x8 ]
inc [ eax + 0x4450 ]
push 0x40
add esi 0x4020
pop ecx
lea edi [ ebp - 0x138 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea ecx [ eax + 0x10 ]
lea edx [ ebx + 0x76a3 ]
push edx
movzx edx [ ebx + 0x7678 ]
lea eax [ ebp - 0x34 ]
push eax
push [ ebx + 0x76c4 ]
lea eax [ ebx + 0x7689 ]
push eax
neg edx
lea eax [ ebx + 0x7679 ]
sbb edx edx
and edx eax
push edx
lea eax [ ebp - 0x138 ]
push eax
push [ ebx + 0x7674 ]
mov [ ebp - 0x4 ] 0x1
push 0x0
mov [ ebp - 0x28 ] ecx
call sub_40b592
cmp [ ebx + 0x7673 ] 0x0
mov [ ebp - 0xf ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp - 0x18 ] 0x50
mov [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x5154 ] 0x1
je r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov esi [ ebp - 0x24 ]
xor eax eax
mov [ esi + 0x21f8 ] eax
mov [ esi + 0x21fc ] eax
mov [ esi + 0x2200 ] eax
mov [ esi + 0x2204 ] eax
mov eax [ esi + 0x8 ]
push [ eax + 0x7298 ]
lea edi [ ebx + 0x7648 ]
push [ edi ]
lea ecx [ esi + 0x38e0 ]
call sub_40960d
mov eax [ esi + 0x8 ]
push [ eax + 0x7298 ]
lea ecx [ esi + 0x2218 ]
push [ edi ]
call sub_40960d
mov eax [ ebx + 0x7630 ]
mov ecx [ ebx + 0x7634 ]
mov [ esi + 0x30 ] eax
lea eax [ ebp - 0x115c ]
push eax
mov [ esi + 0x34 ] ecx
mov ecx [ ebp - 0x28 ]
push ebx
call sub_40b572
mov al [ ebp - 0x10 ]
mov cl [ ebp - 0x1d ]
mov [ esi + 0x39 ] al
mov [ esi + 0x3a ] cl
test al al
jne r-xdata
cmp [ ebx + 0x7699 ] 0x0
je r-xdata
inc [ esi + 0x444c ]
lea ecx [ ebp - 0x115c ]
call sub_4089e2
test al al
je r-xdata
inc [ esi + 0x444c ]
lea eax [ ebp - 0x215c ]
push eax
push ebx
mov ecx esi
call sub_407155
mov bl 0x1
mov [ ebp + 0xf ] 0x0
jmp r-xdata
push 0x0
lea eax [ ebx + 0x7618 ]
push eax
push [ ebx + 0x763c ]
lea eax [ ebp + 0xb ]
push [ ebx + 0x7638 ]
push eax
push 0x800
push edi
push 0x0
push [ esi + 0x8 ]
call sub_408450
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x5194 ] 0x0
sete al
cmp [ ebp - 0x10 ] 0x0
mov [ ebp - 0x1149 ] al
jne r-xdata
cmp [ ebp - 0xf ] al
jne r-xdata
push 0x8
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebx + 0x769a ]
push eax
call sub_41a784
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x545e ]
push eax
lea edi [ ebx + 0x1e ]
push edi
push 0x3a
call sub_4062fd
lea eax [ esi + 0x545e ]
push eax
push edi
mov ecx rw-data
call sub_406451
mov [ ebp - 0xd ] 0x0
cmp [ ebp - 0x1d ] 0x0
jne r-xdata
cmp [ ebx + 0xb064 ] al
jne r-xdata
cmp [ ebx + 0xb064 ] 0x0
jne r-xdata
cmp [ ebx + 0x7670 ] 0x0
jne r-xdata
mov eax [ ebx + 0x76d8 ]
mov [ ebp - 0x2c ] eax
cmp eax 0x4
je r-xdata
cmp [ ebp - 0x18 ] 0x50
mov [ ebp - 0xd ] 0x1
jne r-xdata
mov eax [ ebx + 0x7630 ]
mov ecx [ ebx + 0x7634 ]
mov edx [ ebx + 0x763c ]
mov edi [ ebx + 0x7638 ]
shld ecx eax 0xb
shl eax 0xb
cmp ecx edx
jl r-xdata
lea eax [ ebx + 0x1e ]
push eax
push 0x6
call sub_4012d0
push 0xb
mov ecx rw-data
call sub_406257
mov [ ebp - 0xf ] 0x1
mov ecx ebx
call sub_4010c0
cmp [ ebx + 0x7671 ] 0x0
jne r-xdata
cmp [ ebp - 0xf ] 0x0
jne r-xdata
mov edi 0x800
push edi
lea eax [ ebp - 0x41a4 ]
push eax
lea eax [ ebx + 0x76dc ]
push eax
push ebx
mov ecx esi
call sub_406cfd
cmp [ ebp - 0xd ] 0x0
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ ebp - 0x11 ] 0x0
mov [ ebp - 0x19 ] 0x1
mov [ ebp + 0xb ] 0x1
je r-xdata
jg r-xdata
xor al al
movzx ecx [ ebx + 0x76a2 ]
neg ecx
sbb ecx ecx
lea eax [ ebx + 0x76a3 ]
and ecx eax
push ecx
lea eax [ ebx + 0x7648 ]
push eax
lea ecx [ esi + 0x38e0 ]
call sub_409871
test al al
je r-xdata
cmp [ ebx + 0x6602 ] 0x0
jne r-xdata
cmp [ ebx + 0xb050 ] 0x2
jne r-xdata
cmp [ ebp - 0x41a4 ] 0x0
je r-xdata
cmp eax 0x1
je r-xdata
test edx edx
jl r-xdata
cmp eax edi
jbe r-xdata
cmp [ ebx + 0x6602 ] 0x0
je r-xdata
mov [ esi + 0x445b ] 0x0
jmp r-xdata
mov al 0x1
jmp r-xdata
movzx eax [ ebx + 0x76c8 ]
mov ecx [ esi + 0x4448 ]
push eax
push [ ebx + 0x76cc ]
call sub_412276
mov ecx [ ebx + 0x7638 ]
mov eax [ esi + 0x4448 ]
mov edx [ ebx + 0x763c ]
mov [ eax + 0x4c40 ] ecx
mov [ eax + 0x4c44 ] edx
mov [ eax + 0x4c58 ] 0x0
movzx eax [ ebx + 0x76c8 ]
mov ecx [ esi + 0x4448 ]
push eax
movzx eax [ ebx + 0x6601 ]
push eax
call sub_41867d
push [ ebx + 0x763c ]
push [ ebx + 0x7638 ]
push [ ebp - 0x28 ]
call sub_406fac
jmp r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
cmp [ ebp - 0xd ] 0x0
jne r-xdata
cmp [ ebp - 0x2c ] 0x4
push edi
lea eax [ ebp - 0x41a4 ]
push eax
lea eax [ esi + 0x545e ]
push eax
jne r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
cmp eax 0x2
je r-xdata
push [ ebx + 0x763c ]
lea ecx [ ebp - 0x115c ]
push [ ebx + 0x7638 ]
call sub_408d47
jg r-xdata
cmp [ ebp - 0x1d ] 0x0
mov [ ebp - 0xd ] 0x0
jne r-xdata
cmp [ ebx + 0x763c ] 0x0
jl r-xdata
cmp [ ebx + 0x76c8 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov [ ebp - 0x19 ] 0x0
lea eax [ ebx + 0x1e ]
push eax
lea eax [ ebp - 0x115c ]
push eax
mov ecx esi
call sub_407043
call sub_4065a8
jmp r-xdata
lea eax [ esi + 0x545e ]
push eax
push ebx
push [ ebp - 0x28 ]
push ecx
call sub_406ae2
jmp r-xdata
cmp eax 0x3
je r-xdata
mov ecx ebx
call sub_408b8b
cmp edx [ ebx + 0x7634 ]
jl r-xdata
cmp edi 0x5f5e100
jb r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x19 ] 0x0
je r-xdata
jg r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp + 0xb ] al
test al al
je r-xdata
lea eax [ esi + 0x545e ]
push eax
lea eax [ ebx + 0x1e ]
push eax
push 0x46
call sub_4062fd
mov [ ebp + 0xb ] 0x0
jmp r-xdata
jg r-xdata
lea ecx [ ebp - 0x138 ]
mov [ ebp - 0x4 ] 0x0
call j_sub_40cdf1#2
cmp [ ebp - 0xf ] 0x0
jne r-xdata
cmp [ ebp - 0xf ] 0x0
jne r-xdata
test al al
je r-xdata
cmp [ ebx + 0x7638 ] 0x0
jbe r-xdata
mov [ esi + 0x545d ] al
jmp r-xdata
cmp eax [ ebx + 0x7630 ]
jbe r-xdata
cmp [ ebp - 0x18 ] 0x58
je r-xdata
push 0x3
mov ecx rw-data
mov [ ebp - 0xd ] 0x1
call sub_406257
test al al
jne r-xdata
mov [ esi + 0x445b ] 0x1
cmp [ ebp - 0x11 ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x45
jne r-xdata
cmp [ ebx + 0x7673 ] al
je r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
cmp [ ebx + 0x76d8 ] 0x5
jne r-xdata
lea eax [ ebp - 0x215c ]
push eax
lea eax [ ebx + 0x1e ]
push eax
push 0x3
cmp [ ebx + 0x7699 ] al
je r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x514c ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x5194 ] 0x0
je r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
cmp [ esi + 0x445b ] 0x0
jne r-xdata
cmp [ ebx + 0xb064 ] al
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x6294 ]
neg ecx
sbb ecx ecx
lea edi [ ebx + 0x7628 ]
and ecx edi
push ecx
mov ecx [ eax + 0x6290 ]
neg ecx
sbb ecx ecx
lea edx [ ebx + 0x7620 ]
and ecx edx
push ecx
mov ecx [ eax + 0x628c ]
neg ecx
sbb ecx ecx
lea eax [ ebx + 0x7618 ]
and ecx eax
push ecx
lea ecx [ ebp - 0x115c ]
call sub_408abd
lea ecx [ ebp - 0x115c ]
call sub_4087ca
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x6294 ]
neg ecx
sbb ecx ecx
and ecx edi
push ecx
mov ecx [ eax + 0x628c ]
neg ecx
sbb ecx ecx
lea eax [ ebx + 0x7618 ]
and ecx eax
push ecx
lea ecx [ ebp - 0x115c ]
call sub_4089df
mov eax [ esi + 0x8 ]
cmp [ eax + 0x519b ] 0x0
jne r-xdata
and [ ebx + 0x6604 ] 0xffffffdf
lea ecx [ ebp - 0x115c ]
call sub_4089cf
lea eax [ ebp - 0x215c ]
push eax
lea eax [ ebx + 0x1e ]
push eax
push 0x4
jmp r-xdata
mov [ esi + 0x545d ] 0x1
push [ ebx + 0x6604 ]
lea eax [ ebp - 0x113e ]
push eax
call sub_408e15
test al al
jne r-xdata
call sub_4062fd
lea eax [ ebp - 0x113e ]
push eax
lea eax [ ebx + 0x1e ]
push eax
push 0x10
call sub_4062fd
sub_407f9d
mov eax sub_42929e
call sub_41a05c
mov eax 0xe0f4
call sub_41a670
push ebx
push esi
mov esi ecx
push edi
push [ esi + 0x8 ]
lea ecx [ ebp - 0xe100 ]
call sub_401851
lea edi [ esi + 0x445c ]
xor ebx ebx
push edi
lea ecx [ ebp - 0xe100 ]
mov [ ebp - 0x4 ] ebx
call sub_408695
lea ecx [ ebp - 0xe100 ]
test al al
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_401228
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
push 0x1
call sub_40145f
test al al
jne r-xdata
cmp [ ebp - 0x309b ] bl
jne r-xdata
push r--data
push edi
call sub_40a2b5
test al al
je r-xdata
lea ecx [ ebp - 0xe100 ]
mov [ ebp - 0x14 ] ebx
cmp [ ebp - 0x30ab ] bl
je r-xdata
push 0x1
mov ecx rw-data
call sub_406257
jmp r-xdata
lea eax [ ebp - 0xe100 ]
push eax
mov ecx esi
call sub_406e89
mov eax [ esi + 0x8 ]
movzx ecx [ eax + 0x72b2 ]
cmp cx 0x54
je r-xdata
lea eax [ ebp - 0xe0e2 ]
push eax
lea eax [ ebp - 0x1018 ]
push eax
call sub_41a377
cmp [ ebp - 0x30a6 ] bl
pop ecx
pop ecx
mov edi 0x800
jmp r-xdata
mov [ eax + 0x51c1 ] 0x1
cmp cx 0x49
jne r-xdata
sete al
movzx eax al
push eax
push edi
lea eax [ ebp - 0x1018 ]
push eax
call sub_40a3ce
lea ecx [ ebp - 0x2060 ]
call sub_40660a
push 0x0
lea eax [ ebp - 0x2060 ]
push eax
lea eax [ ebp - 0x1018 ]
push eax
call sub_409444
test al al
jne r-xdata
lea ecx [ ebp - 0xe100 ]
call sub_401000
cmp [ eax + 0x51c1 ] 0x0
lea ecx [ esi + 0x445c ]
sete al
movzx eax al
push ecx
push eax
call sub_41127b
mov eax [ esi + 0x8 ]
cmp [ eax + 0x72b2 ] 0x49
je r-xdata
mov eax [ ebp - 0x1060 ]
add ebx eax
mov eax [ ebp - 0x105c ]
adc [ ebp - 0x14 ] eax
cmp [ ebp - 0x30a6 ] 0x0
mov ecx [ ebp - 0x14 ]
lea eax [ esi + 0x2210 ]
add [ eax ] ebx
adc [ eax + 0x4 ] ecx
lea ecx [ ebp - 0xe100 ]
call sub_40365b
lea ecx [ ebp - 0xd ]
push ecx
push eax
lea eax [ ebp - 0xe100 ]
push eax
mov ecx esi
call sub_40746e
test al al
jne r-xdata
sub_408152
push ebp
mov ebp esp
mov eax 0x1048
call sub_41a670
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov [ esi + 0x645e ] 0x0
mov ax [ eax + 0x72b2 ]
push edi
lea ecx [ ebp - 0x1048 ]
mov [ esi + 0x21d4 ] ax
call sub_40660a
lea ebx [ esi + 0x445c ]
mov edi 0x800
jmp r-xdata
mov ecx [ esi + 0x8 ]
push edi
push ebx
call sub_405348
test al al
jne r-xdata
push 0x0
lea eax [ ebp - 0x1048 ]
push eax
push ebx
call sub_409444
test al al
je r-xdata
mov ecx [ esi + 0x8 ]
add ecx 0x93e8
call sub_4108e6
jmp r-xdata
mov ecx [ ebp - 0x48 ]
lea eax [ esi + 0x2210 ]
add [ eax ] ecx
mov ecx [ ebp - 0x44 ]
adc [ eax + 0x4 ] ecx
mov ecx [ esi + 0x8 ]
push edi
push ebx
call sub_405348
test al al
mov eax [ esi + 0x8 ]
jne r-xdata
cmp [ eax + 0x4123 ] 0x0
je r-xdata
cmp [ eax + 0x4123 ] 0x0
je r-xdata
mov ecx esi
call sub_407f9d
cmp eax 0x1
je r-xdata
lea ecx [ eax + 0x4020 ]
call sub_40cdf1
cmp [ esi + 0x444c ] 0x0
jne r-xdata
lea ecx [ eax + 0x4020 ]
call sub_40cdf1
push 0x0
lea eax [ ebp - 0x1048 ]
push eax
push ebx
call sub_409444
test al al
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0x8 ]
cmp [ eax + 0x72b2 ] 0x49
je r-xdata
mov ecx [ ebp - 0x48 ]
lea eax [ esi + 0x2208 ]
add [ eax ] ecx
mov ecx [ ebp - 0x44 ]
adc [ eax + 0x4 ] ecx
cmp [ rw-data ] 0xb
je r-xdata
cmp [ esi + 0x645e ] 0x0
jne r-xdata
push 0xa
mov ecx rw-data
call sub_406257
push ebx
push 0x43
call sub_4012d0
sub_408280
mov eax sub_4292b3
call sub_41a05c
mov eax 0x5028
call sub_41a670
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi 0x800
push esi
lea eax [ ebp - 0x5034 ]
push eax
push ebx
call [ GetLongPathNameW@IAT ]
test eax eax
je r-xdata
xor al al
cmp eax esi
jae r-xdata
push esi
lea eax [ ebp - 0x4034 ]
push eax
push ebx
call [ GetShortPathNameW@IAT ]
test eax eax
je r-xdata
cmp eax esi
jae r-xdata
lea eax [ ebp - 0x5034 ]
push eax
call sub_40a108
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x4034 ]
push eax
call sub_40a108
mov edi eax
cmp [ edi ] 0x0
je r-xdata
push edi
push [ ebp - 0x10 ]
call sub_4119e6
test eax eax
je r-xdata
push edi
push ebx
call sub_40a108
push eax
call sub_4119e6
test eax eax
jne r-xdata
mov [ ebp - 0x1010 ] ax
xor edi edi
push esi
push ebx
lea eax [ ebp - 0x3034 ]
push eax
call sub_410792
push esi
push [ ebp - 0x10 ]
lea eax [ ebp - 0x3034 ]
push eax
call sub_40a272
mov esi [ MoveFileW@IAT ]
lea eax [ ebp - 0x1010 ]
push eax
lea eax [ ebp - 0x3034 ]
push eax
call esi
test eax eax
je r-xdata
push esi
push ebx
lea eax [ ebp - 0x1010 ]
push eax
call sub_410792
push edi
push r--data
push esi
lea eax [ ebp - 0x1010 ]
push eax
call sub_40a108
push eax
call sub_401b7b
add esp 0x10
lea eax [ ebp - 0x1010 ]
push eax
call sub_40902d
test al al
je r-xdata
lea ecx [ ebp - 0x2034 ]
call sub_40851e
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
xor bl bl
call sub_40902d
test al al
jne r-xdata
add edi 0x7b
cmp edi 0x2710
jl r-xdata
xor eax eax
mov [ ebp - 0x1010 ] ax
lea eax [ ebp - 0x3034 ]
push eax
lea eax [ ebp - 0x1010 ]
push eax
call esi
test bl bl
je r-xdata
push 0x12
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x2034 ]
call sub_4086bb
mov bl al
cmp [ ebp - 0x1010 ] 0x0
jne r-xdata
cmp [ ebp - 0x1010 ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2034 ]
call sub_408a05
mov al 0x1
jmp r-xdata
lea ecx [ ebp - 0x2034 ]
call sub_4087ca
lea ecx [ ebp - 0x2034 ]
call sub_408818
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_408450
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
push esi
xor bl bl
call sub_40902d
mov edi [ ebp + 0xc ]
jmp r-xdata
mov [ eax ] 0x0
test al al
jne r-xdata
test bl bl
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x28 ] bl
setne bl
add ebx 0x11
test edi edi
je r-xdata
xor eax eax
xor bl bl
test edi edi
sete al
push eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push esi
push [ ebp + 0x8 ]
call sub_41153e
test eax eax
je r-xdata
push esi
inc bl
call sub_408280
test al al
jne r-xdata
push esi
call sub_409043
push 0x1
push esi
call sub_4090e7
test edi edi
je r-xdata
push ebx
push esi
mov ecx edi
call sub_4086bb
test al al
je r-xdata
cmp eax 0x1
je r-xdata
push esi
call sub_40902d
push esi
call sub_408e6c
push ebx
push esi
mov ecx edi
call sub_4086bb
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
cmp eax 0x6
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x24
xor al al
jmp r-xdata
mov [ eax ] 0x1
push 0xff
mov ecx rw-data
call j_sub_40629a
sub_40851e
mov eax ecx
or [ eax + 0x4 ] 0xffffffff
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x1e ] cx
mov [ eax + 0x12 ] cl
mov [ eax + 0x8 ] cl
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] cl
mov [ eax + 0x11 ] cl
mov [ eax + 0x1020 ] ecx
mov [ eax + 0x1c ] cl
mov [ eax + 0x13 ] 0x1
mov [ eax + 0x14 ] 0x1
mov [ eax + 0x15 ] cl
mov [ eax + 0x18 ] 0x100
retn
sub_40855b
mov eax 0x100c
call sub_41a670
mov eax [ esp + 0x1014 ]
push ebx
push ebp
push esi
mov esi ecx
xor ebp ebp
cmp [ esi + 0x1c ] 0x0
push edi
mov [ esi + 0x1020 ] ebp
jne r-xdata
mov cl 0x1
test al 0x4
jne r-xdata
shr eax 0x3
not eax
and eax 0x1
mov [ esp + 0x10 ] eax
test cl cl
je r-xdata
or edi 0x40000000
xor cl cl
jmp r-xdata
xor ecx ecx
cmp [ esi + 0x15 ] cl
mov ebx [ CreateFileW@IAT ]
setne cl
push ebp
dec ecx
and ecx 0x8000000
push ecx
push 0x3
push ebp
push eax
push edi
push [ esp + 0x1038 ]
mov [ esp + 0x34 ] ecx
call ebx
mov ebp eax
cmp ebp 0xffffffff
jne r-xdata
or eax 0x2
mov [ esp + 0x10 ] eax
mov edx eax
shr edx 0x1
and dl 0x1
movzx edi dl
neg edi
sbb edi edi
and edi 0xc0000000
add edi 0x80000000
test al 0x1
je r-xdata
and [ esi + 0xc ] 0x0
cmp ebp 0xffffffff
setne bl
mov [ esi + 0x12 ] 0x0
mov [ esi + 0x10 ] 0x0
test bl bl
je r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0x14 ] eax
push 0x800
lea eax [ esp + 0x20 ]
push eax
push [ esp + 0x1028 ]
call sub_40a5bc
test al al
je r-xdata
pop edi
pop esi
pop ebp
mov al bl
pop ebx
add esp 0x100c
retn 0x8
push 0x800
push [ esp + 0x1024 ]
mov [ esi + 0x4 ] ebp
add esi 0x1e
push esi
call sub_410792
cmp [ esp + 0x14 ] 0x2
jne r-xdata
push 0x0
push [ esp + 0x1c ]
lea eax [ esp + 0x24 ]
push 0x3
push 0x0
push [ esp + 0x20 ]
push edi
push eax
call ebx
mov ebp eax
call [ GetLastError@IAT ]
push 0x2
pop ecx
cmp eax ecx
jne r-xdata
mov [ esi + 0x1020 ] 0x1
cmp ebp 0xffffffff
jne r-xdata
mov [ esp + 0x14 ] ecx
sub_408695
mov eax [ ecx ]
push 0x0
push [ esp + 0x8 ]
call [ eax + 0x4 ]
test al al
je r-xdata
push [ esp + 0x4 ]
mov ecx rw-data
call sub_40646e
xor al al
mov al 0x1
jmp r-xdata
retn 0x4
sub_4086bb
push ebp
mov ebp esp
mov eax 0x1004
call sub_41a670
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
mov eax ecx
shr eax 0x1
and al 0x1
xor ebx ebx
push edi
test cl 0x10
jne r-xdata
mov dl 0x1
cmp [ esi + 0x1c ] bl
jne r-xdata
or [ esi + 0x4 ] 0xffffffff
jmp r-xdata
cmp ax 0x20
jne r-xdata
xor dl dl
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jne r-xdata
push ebx
push ebx
push 0x2
push ebx
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call edi
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
mov [ esi + 0x18 ] ecx
xor ecx ecx
cmp al bl
sete cl
xor eax eax
dec ecx
and ecx 0x80000000
add ecx 0xc0000000
cmp dl bl
setne al
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0xc ] eax
call sub_409e12
movzx eax [ eax ]
mov edi [ CreateFileW@IAT ]
cmp ax 0x2e
je r-xdata
push 0x800
push [ ebp + 0x8 ]
lea eax [ esi + 0x1e ]
push eax
mov [ esi + 0x12 ] 0x1
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] bl
call sub_410792
xor eax eax
cmp [ esi + 0x4 ] 0xffffffff
pop edi
pop esi
setne al
pop ebx
leave
retn 0x8
push 0x800
lea eax [ ebp - 0x1004 ]
push eax
push [ ebp + 0x8 ]
call sub_40a5bc
test al al
je r-xdata
push ebx
push ebx
push 0x2
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x1004 ]
push [ ebp - 0x4 ]
push eax
call edi
mov [ esi + 0x4 ] eax
sub_4087ca
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov bl 0x1
cmp eax 0xffffffff
je r-xdata
and [ esi + 0xc ] 0x0
test bl bl
jne r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
pop esi
mov al bl
pop ebx
retn
cmp [ esi + 0x14 ] bl
je r-xdata
or [ esi + 0x4 ] 0xffffffff
cmp [ esi + 0xc ] 0x0
jne r-xdata
add esi 0x1e
push esi
mov ecx rw-data
call sub_40633f
push eax
call [ CloseHandle@IAT ]
mov ebx eax
dec ebx
neg ebx
sbb bl bl
inc bl
sub_408818
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0xffffffff
je r-xdata
xor al al
pop esi
retn
cmp [ esi + 0x13 ] 0x0
je r-xdata
call sub_4087ca
add esi 0x1e
push esi
call sub_408e6c
pop esi
retn
sub_408841
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
push esi
mov esi ecx
cmp [ ebp + 0xc ] ebx
je r-xdata
pop esi
pop ebx
leave
retn 0x8
cmp [ esi + 0xc ] 0x1
jne r-xdata
push edi
push 0xfffffff5
call [ GetStdHandle@IAT ]
mov [ esi + 0x4 ] eax
push ebx
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call [ WriteFile@IAT ]
dec eax
neg eax
sbb al al
inc al
xor edi edi
cmp [ ebp + 0xc ] ebx
jbe r-xdata
mov [ esi + 0x8 ] 0x1
pop edi
cmp [ esi + 0x14 ] bl
je r-xdata
mov ecx [ ebp + 0xc ]
sub ecx edi
mov eax 0x4000
cmp ecx eax
jae r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
push ebx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
mov eax [ ebp + 0x8 ]
add eax edi
push eax
push [ esi + 0x4 ]
call [ WriteFile@IAT ]
dec eax
neg eax
sbb al al
inc al
je r-xdata
mov eax ecx
push ebx
lea eax [ esi + 0x1e ]
mov edi rw-data
push eax
mov ecx edi
call sub_4062d3
test al al
je r-xdata
add edi 0x4000
cmp edi [ ebp + 0xc ]
jb r-xdata
lea eax [ esi + 0x1e ]
push eax
push ebx
mov ecx edi
call sub_406451
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0xc ] ebx
je r-xdata
cmp eax ebx
jbe r-xdata
cmp al bl
jne r-xdata
mov edi [ esi ]
push ebx
mov ecx esi
call [ edi + 0x10 ]
mov ecx [ ebp - 0x4 ]
xor ebx ebx
sub eax ecx
sbb edx ebx
push edx
push eax
mov ecx esi
call [ edi + 0xc ]
jmp r-xdata
sub_408936
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
or edx 0xffffffff
xor ebx ebx
cmp [ esi + 0x4 ] edx
jne r-xdata
push edi
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push ebx
push [ esi + 0x4 ]
mov [ ebp - 0x4 ] ebx
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
cmp [ esi + 0x14 ] bl
je r-xdata
mov eax [ ebp - 0x4 ]
push 0x1
cdq
push ebx
push edx
push eax
call sub_41a750
xor ecx ecx
add eax edi
adc edx ecx
call [ GetLastError@IAT ]
test eax eax
je r-xdata
mov eax edx
jmp r-xdata
lea eax [ esi + 0x1e ]
push eax
mov ecx rw-data
call sub_406360
cmp [ esi + 0x14 ] bl
je r-xdata
pop esi
pop ebx
leave
retn
or edx 0xffffffff
mov eax edx
jmp r-xdata
add esi 0x1e
push esi
mov ecx rw-data
call sub_406360
pop edi
sub_4089e2
mov eax [ ecx + 0x4 ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ GetFileType@IAT ]
cmp eax 0x2
je r-xdata
xor al al
retn
xor eax eax
inc eax
retn
cmp eax 0x3
je r-xdata
xor eax eax
retn
sub_408a28
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x1
push edi
jne r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push 0xfffffff6
call [ GetStdHandle@IAT ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx esi
call sub_4089e2
test al al
je r-xdata
cmp [ esi + 0xc ] 0x1
mov ebx [ GetLastError@IAT ]
jne r-xdata
mov eax 0x4e20
cmp [ ebp + 0xc ] eax
jbe r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
call ebx
cmp eax 0x6d
jne r-xdata
push eax
or eax 0xffffffff
jmp r-xdata
mov edi 0x8000
cmp [ ebp + 0xc ] edi
jbe r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
call ebx
cmp eax 0x21
jne r-xdata
push edi
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call sub_408a28
jmp r-xdata
sub_408abd
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ecx + 0x18 ]
mov [ ebp - 0x4 ] ecx
cmp eax 0x100
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
test al 0x2
jne r-xdata
mov [ ebp + 0xb ] 0x0
mov eax [ ecx ]
or eax [ ecx + 0x4 ]
mov [ ebp + 0xb ] 0x1
jne r-xdata
push [ ecx + 0x4 ]
call [ FlushFileBuffers@IAT ]
mov [ ebp + 0xf ] 0x0
mov eax [ edi ]
or eax [ edi + 0x4 ]
mov [ ebp + 0xf ] 0x1
jne r-xdata
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor bl bl
mov eax [ esi ]
or eax [ esi + 0x4 ]
je r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
cmp [ ebp + 0xf ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_410ef8
mov bl 0x1
jmp r-xdata
test bl bl
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
call sub_410ef8
cmp [ ebp + 0xb ] 0x0
je r-xdata
movzx eax [ ebp + 0xb ]
neg eax
sbb eax eax
lea ecx [ ebp - 0xc ]
and eax ecx
push eax
movzx eax bl
neg eax
sbb eax eax
lea ecx [ ebp - 0x14 ]
and eax ecx
push eax
movzx eax [ ebp + 0xf ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x1c ]
and eax ecx
push eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x4 ]
call [ SetFileTime@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0xc
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_410ef8
sub_408b8b
mov eax sub_4292c5
call sub_41a05c
sub esp 0x10
push ebx
push esi
mov esi ecx
push esi
lea ecx [ ebp - 0x1c ]
call sub_40117b
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
push 0x2
push 0x0
push 0x0
mov ecx esi
call [ eax + 0xc ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov ecx [ ebp - 0x1c ]
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push [ ebp - 0x10 ]
mov esi eax
push [ ebp - 0x14 ]
mov eax [ ecx ]
mov ebx edx
call [ eax + 0xc ]
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov edx ebx
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
sub_408c03
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
xor ebx ebx
mov esi ecx
push edi
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
cmp [ esi + 0x11 ] bl
je r-xdata
mov edi rw-data
mov eax [ esi ]
call [ eax + 0x10 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
mov [ esi + 0x1020 ] 0x2
cmp [ esi + 0x14 ] bl
je r-xdata
cmp [ esi + 0x11 ] bl
jne r-xdata
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov edi 0x200
jmp r-xdata
add esi 0x1e
push esi
mov ecx edi
call sub_406498
lea eax [ esi + 0x1e ]
push eax
mov ecx edi
call sub_406252
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
add ecx [ ebp - 0x10 ]
push ebx
adc edx [ ebp - 0xc ]
push edx
push ecx
mov ecx esi
call [ eax + 0xc ]
mov ebx [ ebp + 0xc ]
mov eax ebx
sub eax [ ebp - 0x4 ]
cmp eax edi
jb r-xdata
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_408a28
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jne r-xdata
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_408a28
cmp eax 0xffffffff
jne r-xdata
mov eax edi
add [ ebp - 0x4 ] edi
add [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov eax edi
xor ebx ebx
jmp r-xdata
sub_408cd3
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0xffffffff
je r-xdata
mov al 0x1
push edi
mov edi [ ebp + 0xc ]
test edi edi
jg r-xdata
push [ ebp + 0x10 ]
mov eax edi
sar eax 0x1f
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
push [ esi + 0x4 ]
call [ SetFilePointer@IAT ]
pop edi
cmp eax 0xffffffff
jne r-xdata
jl r-xdata
call [ GetLastError@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jae r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
pop esi
leave
retn 0xc
call sub_408b8b
mov eax [ esi ]
call [ eax + 0x10 ]
jmp r-xdata
add [ ebp + 0x8 ] eax
adc edi edx
and [ ebp + 0x10 ] 0x0
sub_408d47
push esi
push 0x0
push [ esp + 0x10 ]
mov esi ecx
push [ esp + 0x10 ]
call sub_408cd3
test al al
je r-xdata
pop esi
retn 0x8
mov ecx esi
call sub_4089cf
mov eax [ esi ]
push 0x0
push 0x0
push 0x0
mov ecx esi
call [ eax + 0xc ]
sub_408d75
push esi
push [ esp + 0x10 ]
mov esi ecx
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_408cd3
test al al
jne r-xdata
pop esi
retn 0xc
cmp [ esi + 0x14 ] al
je r-xdata
add esi 0x1e
push esi
mov ecx rw-data
call sub_406360
sub_408dc9
push ebp
mov ebp esp
mov eax 0x1000
call sub_41a670
push esi
mov esi [ GetFileAttributesW@IAT ]
push edi
push [ ebp + 0x8 ]
call esi
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov eax edi
pop edi
pop esi
leave
retn 0x4
push 0x800
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0x8 ]
call sub_40a5bc
test al al
je r-xdata
lea eax [ ebp - 0x1000 ]
push eax
call esi
mov edi eax
sub_408e15
push ebp
mov ebp esp
mov eax 0x1000
call sub_41a670
push ebx
push esi
push [ ebp + 0xc ]
mov esi [ SetFileAttributesW@IAT ]
push [ ebp + 0x8 ]
call esi
test eax eax
setne bl
test bl bl
jne r-xdata
pop esi
mov al bl
pop ebx
leave
retn 0x8
push 0x800
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0x8 ]
call sub_40a5bc
test al al
je r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x1000 ]
push eax
call esi
test eax eax
setne bl
sub_408e6c
push ebp
mov ebp esp
mov eax 0x1000
call sub_41a670
push ebx
push esi
push [ ebp + 0x8 ]
mov esi [ DeleteFileW@IAT ]
call esi
test eax eax
setne bl
test bl bl
jne r-xdata
pop esi
mov al bl
pop ebx
leave
retn 0x4
push 0x800
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0x8 ]
call sub_40a5bc
test al al
je r-xdata
lea eax [ ebp - 0x1000 ]
push eax
call esi
test eax eax
setne bl
sub_408ebd
push ebp
mov ebp esp
mov eax 0x1024
call sub_41a670
mov eax [ ebp + 0xc ]
push ebx
push esi
xor esi esi
push edi
cmp eax esi
je r-xdata
mov [ ebp - 0x3 ] 0x0
mov ecx [ eax ]
or ecx [ eax + 0x4 ]
mov [ ebp - 0x3 ] 0x1
jne r-xdata
mov [ ebp - 0x2 ] 0x0
mov ecx [ eax ]
or ecx [ eax + 0x4 ]
mov [ ebp - 0x2 ] 0x1
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax esi
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov ecx [ eax ]
or ecx [ eax + 0x4 ]
mov [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x14 ]
cmp eax esi
je r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
test al 0x1
je r-xdata
push [ ebp + 0x8 ]
call sub_408dc9
mov [ ebp - 0xc ] eax
cmp eax 0xffffffff
je r-xdata
push esi
mov ebx 0x2000000
push ebx
push 0x3
push esi
mov esi [ CreateFileW@IAT ]
push 0x3
mov edi 0x40000000
push edi
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jne r-xdata
push esi
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
call sub_408e15
cmp [ ebp - 0x3 ] 0x0
je r-xdata
push 0x800
lea eax [ ebp - 0x1024 ]
push eax
push [ ebp + 0x8 ]
call sub_40a5bc
test al al
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x24 ]
push eax
call sub_410ef8
pop edi
pop esi
pop ebx
leave
retn 0x10
push 0x0
push ebx
push 0x3
push 0x0
push 0x3
push edi
lea eax [ ebp - 0x1024 ]
push eax
call esi
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_410ef8
movzx eax [ ebp - 0x3 ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x24 ]
and eax ecx
push eax
movzx eax [ ebp - 0x1 ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x14 ]
and eax ecx
push eax
movzx eax [ ebp - 0x2 ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x1c ]
and eax ecx
push eax
push [ ebp - 0x8 ]
call [ SetFileTime@IAT ]
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
lea eax [ ebp - 0x14 ]
push eax
call sub_410ef8
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call sub_408e15
sub_409051
push ebp
mov ebp esp
mov eax 0x1000
call sub_41a670
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_409e12
movzx eax [ eax ]
mov esi [ CreateDirectoryW@IAT ]
cmp ax 0x2e
je r-xdata
push edi
call sub_40902d
test al al
jne r-xdata
cmp ax 0x20
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
push 0x800
lea eax [ ebp - 0x1000 ]
push eax
push edi
call sub_40a5bc
test al al
je r-xdata
push 0x0
push edi
call esi
test eax eax
jne r-xdata
push 0x2
pop eax
cmp eax 0x3
je r-xdata
push 0x0
lea eax [ ebp - 0x1000 ]
push eax
call esi
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
inc eax
jmp r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x10 ]
push edi
call sub_408e15
pop edi
pop esi
leave
retn 0xc
sub_4090e7
push ebp
mov ebp esp
mov eax 0x1004
call sub_41a670
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
xor al al
cmp [ esi ] 0x0
je r-xdata
and [ ebp + 0x8 ] 0x0
push ebx
push edi
mov bl 0x1
mov edi esi
cmp [ ebp + 0xc ] 0x0
jne r-xdata
movzx eax [ edi ]
push eax
call sub_409e4d
test al al
je r-xdata
pop edi
mov al bl
pop ebx
jmp r-xdata
push esi
call sub_409e12
movzx eax [ eax ]
push eax
call sub_409e4d
test al al
jne r-xdata
add [ ebp + 0x8 ] 0x2
inc edi
inc edi
cmp [ edi ] 0x0
jne r-xdata
cmp edi esi
jbe r-xdata
pop esi
leave
retn 0x8
push 0x0
push 0x1
push esi
call sub_409051
mov ebx eax
neg ebx
sbb bl bl
inc bl
mov eax [ ebp + 0x8 ]
sar eax 0x1
mov [ ebp - 0x4 ] eax
cmp eax 0x800
jae r-xdata
lea eax [ esi + 0x4 ]
cmp edi eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
push ebx
lea eax [ ebp - 0x1004 ]
push esi
push eax
call sub_41c413
add esp 0xc
xor eax eax
push eax
mov [ ebp + ebx * 2 - 0x1004 ] ax
push 0x1
lea eax [ ebp - 0x1004 ]
push eax
call sub_409051
mov ebx eax
neg ebx
sbb bl bl
inc bl
cmp [ esi + 0x2 ] 0x3a
je r-xdata
sub_4091fe
push ebp
mov ebp esp
mov eax 0x1250
call sub_41a670
cmp [ ebp + 0x8 ] 0xffffffff
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
lea eax [ ebp - 0x250 ]
mov edi 0x800
push eax
jne r-xdata
push [ ebp + 0x8 ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0xc ]
mov ebx [ FindFirstFileW@IAT ]
call ebx
mov [ ebp + 0x8 ] eax
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
or [ ebp + 0x8 ] 0xffffffff
call [ GetLastError@IAT ]
cmp eax 0x12
setne al
mov [ esi + 0x1044 ] al
push edi
push [ ebp + 0xc ]
push esi
call sub_410792
push edi
lea eax [ ebp - 0x224 ]
push eax
push esi
call sub_40a272
push 0x1
push 0x0
push 0x0
push [ ebp - 0x234 ]
call sub_41a750
mov ecx [ ebp - 0x230 ]
xor edi edi
add eax ecx
mov [ esi + 0x1000 ] eax
mov eax [ ebp - 0x250 ]
mov [ esi + 0x1008 ] eax
mov eax [ ebp - 0x24c ]
mov [ esi + 0x1028 ] eax
mov eax [ ebp - 0x248 ]
mov [ esi + 0x102c ] eax
mov eax [ ebp - 0x244 ]
mov [ esi + 0x1030 ] eax
mov eax [ ebp - 0x240 ]
mov [ esi + 0x1034 ] eax
mov eax [ ebp - 0x23c ]
mov [ esi + 0x1038 ] eax
mov eax [ ebp - 0x238 ]
mov [ esi + 0x103c ] eax
lea eax [ ebp - 0x23c ]
adc edx edi
push eax
lea ecx [ esi + 0x1010 ]
mov [ esi + 0x1004 ] edx
call sub_410ee5
lea eax [ ebp - 0x24c ]
push eax
lea ecx [ esi + 0x1018 ]
call sub_410ee5
lea eax [ ebp - 0x244 ]
push eax
lea ecx [ esi + 0x1020 ]
call sub_410ee5
push edi
lea eax [ ebp - 0x1250 ]
push eax
push [ ebp + 0xc ]
call sub_40a5bc
test al al
je r-xdata
and [ esi + 0x1040 ] 0x0
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn 0xc
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x250 ]
push eax
lea eax [ ebp - 0x1250 ]
push eax
call ebx
mov [ ebp + 0x8 ] eax
cmp eax 0xffffffff
jne r-xdata
xor eax eax
cmp eax 0x3
je r-xdata
cmp eax 0x12
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ esi + 0x1044 ] al
jmp r-xdata
sub_409396
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
xor ebx ebx
jmp r-xdata
mov [ esi + 0x1044 ] bl
cmp [ edi ] bx
jne r-xdata
push esi
push edi
cmp [ edi + 0x1000 ] bl
je r-xdata
xor al al
jmp r-xdata
push [ edi + 0x1004 ]
call sub_4091fe
push 0xffffffff
call sub_4091fe
mov [ edi + 0x1004 ] eax
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
lea ebp [ esi + 0x1008 ]
push [ ebp ]
mov [ esi + 0x1040 ] ebx
call sub_408da4
push [ ebp ]
mov [ esi + 0x100c ] al
call sub_408dbc
mov [ esi + 0x100d ] al
push esi
mov [ edi + 0x1000 ] bl
call sub_40a108
mov ebp eax
push r--data
push ebp
call sub_41a5a1
pop ecx
pop ecx
test eax eax
je r-xdata
cmp eax 0xffffffff
je r-xdata
push r--data
push ebp
call sub_41a5a1
pop ecx
pop ecx
test eax eax
jne r-xdata
mov al 0x1
sub_409444
push esi
mov esi [ esp + 0xc ]
push [ esp + 0x8 ]
mov [ esi + 0x1044 ] 0x0
call sub_409e2c
test al al
je r-xdata
push esi
push [ esp + 0xc ]
push 0xffffffff
call sub_4091fe
cmp eax 0xffffffff
je r-xdata
xor al al
jmp r-xdata
push edi
push eax
call [ FindClose@IAT ]
and [ esi + 0x1040 ] 0x0
lea edi [ esi + 0x1008 ]
push [ edi ]
call sub_408da4
push [ edi ]
mov [ esi + 0x100c ] al
call sub_408dbc
mov [ esi + 0x100d ] al
mov al 0x1
pop edi
pop esi
retn 0xc
sub_4094a8
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
mov [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0xc ] 0x0
push edi
mov edi 0x8003
push edi
call sub_419c68
push edi
push 0x0
push eax
mov [ esi + 0xc ] eax
call sub_41a3a0
add esp 0x10
pop edi
jmp r-xdata
mov eax esi
pop esi
retn 0x4
sub_4094ee
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x8 ] 0x1
pop esi
retn 0x4
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push eax
call sub_41c45d
pop ecx
sub_409514
mov edx ecx
mov eax [ edx + 0xc ]
mov ecx [ edx ]
add ecx eax
movzx eax [ ecx ]
push esi
movzx esi [ ecx + 0x1 ]
movzx ecx [ ecx + 0x2 ]
shl eax 0x8
or eax esi
shl eax 0x8
or eax ecx
push 0x8
pop ecx
sub ecx [ edx + 0x4 ]
pop esi
shr eax cl
and eax 0xffff
retn
sub_40955e
mov eax [ esp + 0x4 ]
mov [ ecx ] eax
cmp eax 0x1
je r-xdata
and [ ecx + 0x4 ] 0x0
cmp eax 0x2
jne r-xdata
retn 0x4
push 0x20
add ecx 0x4
push rw-data
push ecx
call sub_41be10
add esp 0xc
cmp eax 0x3
jne r-xdata
sub_40958d
mov edx [ ecx ]
push esi
test edx edx
je r-xdata
mov al 0x1
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
cmp edx 0x1
jne r-xdata
cmp edx 0x2
jne r-xdata
cmp eax edx
je r-xdata
cmp edx 0x3
jne r-xdata
cmp eax edx
jne r-xdata
mov eax [ ecx + 0x4 ]
sub eax [ esi + 0x4 ]
xor al al
jmp r-xdata
cmp eax edx
jne r-xdata
pop esi
retn 0x4
push 0x20
add esi 0x4
add ecx 0x4
push esi
push ecx
call sub_41a784
add esp 0xc
jmp r-xdata
neg eax
sbb eax eax
inc eax
jmp r-xdata
sub_4095e4
push esi
mov esi ecx
push [ esi + 0xb5c ]
call sub_410db6
push 0xb54
lea eax [ esi + 0x8 ]
push eax
call sub_40cc96
push 0x4
add esi 0x4
push esi
call sub_40cc96
pop esi
retn
sub_40960d
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov [ esi ] eax
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
and [ esi + 0x4 ] 0x0
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0xffffffff
mov eax [ esp + 0xc ]
cmp eax 0x8
jb r-xdata
lea eax [ esi + 0x8 ]
push eax
call sub_404df0
mov [ esi + 0xb60 ] eax
pop esi
retn 0x8
push 0x8
pop eax
sub_40964c
push esi
mov esi ecx
cmp [ esi ] 0x2
jne r-xdata
cmp [ esi ] 0x3
jne r-xdata
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esi + 0x4 ]
call sub_4055ad
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
push edi
lea edi [ esi + 0xb60 ]
cmp [ edi ] 0x1
jbe r-xdata
mov eax [ esi + 0xb5c ]
push [ esp + 0x10 ]
mov [ esi + 0xb54 ] eax
mov eax [ edi ]
push [ esp + 0x10 ]
mov [ esi + 0xb58 ] eax
add esi 0x8
push esi
call sub_404ead
pop edi
push ebx
lea ebx [ esi + 0xb5c ]
cmp [ ebx ] 0x0
jne r-xdata
pop ebx
call sub_410c7f
mov [ ebx ] eax
sub_4096b6
push ebp
mov ebp esp
dec [ ebp + 0x14 ]
js r-xdata
pop ebp
retn 0x14
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
push esi
mov ecx edi
call [ ebp + 0x18 ]
add edi [ ebp + 0x10 ]
add esi [ ebp + 0x10 ]
dec [ ebp + 0x14 ]
jns r-xdata
pop edi
pop esi
sub_4096dd
mov eax ecx
not eax
inc eax
and eax 0x3f
add eax ecx
mov [ ecx + 0xf0 ] eax
sub eax 0xffffff80
mov [ ecx + 0xf4 ] eax
add eax 0x20
mov [ ecx + 0xf8 ] eax
add eax 0x8
mov [ ecx + 0xfc ] eax
retn
sub_409709
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
retn 0x4
push 0xb0
push [ edi + 0xf0 ]
push [ esi + 0xf0 ]
call sub_41be10
mov eax [ edi + 0x100 ]
mov [ esi + 0x100 ] eax
mov al [ edi + 0x104 ]
add esp 0xc
mov [ esi + 0x104 ] al
sub_409766
push ebx
push esi
push edi
mov esi ecx
push 0x7
mov edi esi
pop ebx
mov ecx edi
call sub_4096dd
add edi 0x108
dec ebx
jns r-xdata
lea ecx [ esi + 0x840 ]
call sub_4096dd
pop edi
mov eax esi
pop esi
pop ebx
retn
sub_409791
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
push sub_40974d
push 0x8
push 0x108
mov ebx ecx
push ebp
push ebx
call sub_4096b6
lea eax [ ebp + 0x840 ]
push eax
lea ecx [ ebx + 0x840 ]
call sub_40974d
lea esi [ ebp + 0x948 ]
lea edi [ ebx + 0x948 ]
mov ecx 0x80
[ edi ] [ esi ]
mov eax [ ebp + 0xb48 ]
mov [ ebx + 0xb48 ] eax
mov eax [ ebp + 0xb4c ]
pop edi
mov [ ebx + 0xb4c ] eax
mov eax [ ebp + 0xb50 ]
pop esi
mov [ ebx + 0xb50 ] eax
pop ebp
mov eax ebx
pop ebx
retn 0x4
sub_40981f
push ebp
mov ebp esp
mov eax [ ecx ]
sub esp 0xb54
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
cmp [ ecx ] 0x1
jne r-xdata
cmp [ ecx ] 0x2
jne r-xdata
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
cmp [ ecx ] 0x3
jne r-xdata
mov eax [ ecx + 0x4 ]
not eax
mov [ esi + 0x4 ] eax
pop esi
leave
retn 0x4
add ecx 0x8
push ecx
lea ecx [ ebp - 0xb54 ]
call sub_409791
add esi 0x4
push esi
lea eax [ ebp - 0xb54 ]
push eax
call sub_405015
sub_409871
push ebp
mov ebp esp
sub esp 0x24
lea eax [ ebp - 0x24 ]
push eax
call sub_40981f
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x24 ]
call sub_40958d
leave
retn 0x8
push [ ebp + 0xc ]
lea eax [ ebp - 0x24 ]
push eax
call sub_405e60
sub_4098a1
xor eax eax
mov [ ecx + 0x14 ] ax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x1c ] al
mov [ ecx + 0x1d ] al
mov [ ecx + 0x1e ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x28 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x30 ] eax
mov [ ecx + 0x34 ] eax
mov [ ecx + 0x38 ] eax
mov [ ecx + 0x3c ] eax
retn
sub_4098cc
push ebx
push esi
push [ esp + 0xc ]
mov esi ecx
lea ecx [ esi + 0x1020 ]
call sub_401c21
xor ebx ebx
push ebx
lea ecx [ esi + 0x1060 ]
mov [ esi + 0x10 ] bl
call sub_40955e
mov [ esi + 0x1030 ] ebx
mov [ esi + 0x1034 ] ebx
mov [ esi + 0x1040 ] ebx
mov [ esi + 0x1044 ] ebx
mov [ esi + 0x1038 ] ebx
mov [ esi + 0x103c ] ebx
mov [ esi + 0x1088 ] bl
mov [ esi + 0x1089 ] bl
mov [ esi + 0x108a ] bl
mov [ esi + 0x1c ] ebx
mov [ esi + 0x108c ] ebx
mov [ esi + 0x108b ] bl
mov [ esi + 0x1090 ] bl
mov [ esi + 0x10b1 ] bl
mov [ esi + 0x10ba ] bl
mov [ esi + 0x10dc ] ebx
mov [ esi + 0x10e0 ] bl
mov [ esi + 0x10e1 ] bl
mov [ esi + 0x10e4 ] ebx
mov [ esi + 0x10e8 ] bl
mov [ esi + 0x10ea ] bl
mov [ esi + 0x10e2 ] bl
mov [ esi + 0x10e3 ] bl
mov [ esi + 0x10e9 ] bl
mov [ esi + 0x10f0 ] ebx
mov [ esi + 0x20f5 ] bl
pop esi
pop ebx
retn 0x4
sub_40998e
push ebp
mov ebp esp
mov ecx [ rw-data ]
sub esp 0x114
cmp ecx 0xffffffff
jne r-xdata
mov eax [ rw-data ]
lea eax [ ebp - 0x114 ]
push eax
mov [ ebp - 0x114 ] 0x114
call [ GetVersionExW@IAT ]
mov ecx [ ebp - 0x104 ]
mov eax [ ebp - 0x110 ]
mov edx [ ebp - 0x10c ]
mov [ rw-data ] ecx
mov [ rw-data ] eax
mov [ rw-data ] edx
jmp r-xdata
mov eax 0x501
leave
retn
shl eax 0x8
add eax [ rw-data ]
leave
retn
cmp ecx 0x2
jne r-xdata
sub_409a13
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call j_sub_4119e6
call sub_41a5a1
pop ecx
pop ecx
jmp r-xdata
pop ebp
retn 0xc
sub_409a34
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call sub_411a07
call sub_41c3dc
add esp 0xc
jmp r-xdata
pop ebp
retn 0x10
sub_409a59
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor eax eax
test di di
sete al
cmp eax 0x2a
je r-xdata
movzx eax [ esi ]
test ax ax
jne r-xdata
cmp eax 0x3f
je r-xdata
cmp ax 0x2e
jne r-xdata
mov al 0x1
jmp r-xdata
test di di
je r-xdata
cmp cx di
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x2a
mov [ ebp + 0xc ] eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor al al
jmp r-xdata
inc ebx
inc ebx
jmp r-xdata
cmp cx 0x2e
jne r-xdata
push [ ebp + 0x10 ]
push ebx
push esi
call sub_409a59
inc ebx
inc ebx
test al al
jne r-xdata
jmp r-xdata
push 0x2e
push ebx
call sub_41c5e9
pop ecx
pop ecx
mov ecx [ ebp + 0xc ]
mov edi eax
xor eax eax
cmp [ ecx ] ax
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
movzx eax [ ebx ]
push [ ebp + 0x10 ]
push eax
call sub_4099fa
push [ ebp + 0x10 ]
movzx edi ax
movzx eax [ esi ]
push eax
call sub_4099fa
movzx ecx ax
inc esi
movzx eax cx
inc esi
test eax eax
je r-xdata
test di di
je r-xdata
cmp edi eax
je r-xdata
cmp edi eax
je r-xdata
cmp di 0x5c
je r-xdata
push r--data
push esi
mov ebx edi
call sub_41c5a6
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp [ edi + 0x2 ] ax
jne r-xdata
cmp di cx
je r-xdata
add edi 0x2
push 0x2e
push edi
call sub_41c5e9
pop ecx
pop ecx
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
call sub_409a13
neg eax
sbb eax eax
inc eax
jmp r-xdata
sub_409b7f
push ebp
mov ebp esp
mov eax 0x2000
call sub_41a670
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
shr eax 0x1f
and al 0x1
and edi 0xffff
mov [ ebp + 0x10 ] al
je r-xdata
push ebx
call sub_40a108
push [ ebp + 0xc ]
mov ebx eax
call sub_40a108
push 0x6
mov esi eax
push esi
push r--data
call sub_411a07
test eax eax
je r-xdata
push ebx
call sub_41a32f
pop ecx
mov esi eax
cmp edi 0x2
je r-xdata
xor al al
jmp r-xdata
push [ ebp + 0x10 ]
push esi
cmp edi 0x2
jne r-xdata
cmp edi 0x1
jne r-xdata
cmp edi 0x3
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
push ebx
call sub_409a59
push ebx
call sub_409a13
neg eax
sbb eax eax
inc eax
jmp r-xdata
mov esi 0x800
push esi
lea eax [ ebp - 0x1000 ]
push eax
push ebx
call sub_40a2db
push esi
lea eax [ ebp - 0x2000 ]
push eax
push [ ebp + 0xc ]
call sub_40a2db
cmp edi 0x2
je r-xdata
push [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push ebx
call sub_409a34
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x2000 ]
push eax
lea eax [ ebp - 0x1000 ]
push eax
call sub_409a13
test eax eax
jne r-xdata
cmp edi 0x3
jne r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + esi * 2 ]
cmp ax 0x5c
je r-xdata
cmp edi 0x4
je r-xdata
mov al 0x1
jmp r-xdata
cmp ax 0x2f
je r-xdata
lea eax [ ebp - 0x1000 ]
push eax
call sub_409e2c
test al al
je r-xdata
cmp edi 0x5
jne r-xdata
test ax ax
jne r-xdata
cmp edi 0x4
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
cmp [ ebp - 0x1000 ] 0x0
je r-xdata
push ebx
call sub_409e2c
test al al
jne r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x1000 ]
push eax
call sub_41a32f
pop ecx
push eax
lea eax [ ebp - 0x2000 ]
push eax
lea eax [ ebp - 0x1000 ]
push eax
call sub_409a34
push [ ebp + 0x10 ]
lea eax [ ebp - 0x2000 ]
push eax
lea eax [ ebp - 0x1000 ]
push eax
call sub_409a13
jmp r-xdata
test eax eax
jne r-xdata
sub_409d0d
push esi
push 0x72a8
mov esi ecx
push 0x0
push esi
call sub_41a3a0
and [ esi + 0x512c ] 0x0
and [ esi + 0x5124 ] 0x0
and [ esi + 0x5184 ] 0x0
mov eax 0x7fffffff
add esp 0xc
mov [ esi + 0xc ] 0x2000000
mov [ esi + 0x5130 ] 0x3
mov [ esi + 0x628c ] 0x4
mov [ esi + 0x51b0 ] eax
mov [ esi + 0x51b4 ] eax
mov [ esi + 0x51b8 ] eax
mov [ esi + 0x51bc ] eax
mov [ esi + 0x5134 ] 0x2
call sub_410b1f
mov [ esi + 0x7298 ] eax
pop esi
retn
sub_409dae
mov eax sub_4292eb
call sub_41a05c
push ecx
push esi
mov esi ecx
lea ecx [ esi + 0x4020 ]
mov [ ebp - 0x10 ] esi
call sub_40cdd9
xor ecx ecx
lea eax [ esi + 0x5168 ]
mov [ ebp - 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ esi + 0x51a0 ] ecx
mov [ esi + 0x51a4 ] ecx
mov [ esi + 0x51a8 ] ecx
mov [ esi + 0x51ac ] ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_409d0d
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_409e72
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_41a32f
pop ecx
test eax eax
jbe r-xdata
pop esi
retn 0x8
cmp [ esi + eax * 2 - 0x2 ] 0x5c
je r-xdata
inc eax
cmp eax [ esp + 0xc ]
jae r-xdata
push r--data
push esi
call sub_41a349
pop ecx
pop ecx
sub_409ea2
push ebp
mov ebp esp
mov eax 0x1000
call sub_41a670
push esi
mov esi 0x800
push esi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1000 ]
push eax
call sub_410792
push esi
lea eax [ ebp - 0x1000 ]
push eax
call sub_409e72
push esi
push [ ebp + 0xc ]
lea eax [ ebp - 0x1000 ]
push eax
call sub_4107bf
push [ ebp + 0x14 ]
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0x10 ]
call sub_410792
pop esi
leave
retn 0x10
sub_409ef9
push esi
mov esi [ esp + 0x8 ]
cmp [ esi ] 0x0
je r-xdata
movzx eax [ esi ]
mov ecx esi
test ax ax
je r-xdata
cmp [ esi + 0x2 ] 0x0
je r-xdata
xor eax eax
movzx eax ax
lea eax [ esi + 0x4 ]
push 0x3a
push eax
call sub_41c5e9
pop ecx
pop ecx
test eax eax
je r-xdata
xor al al
jmp r-xdata
je r-xdata
pop esi
retn 0x4
movzx eax [ ecx + 0x2 ]
push eax
call sub_409e4d
test al al
jne r-xdata
cmp ax 0x2e
jne r-xdata
inc ecx
inc ecx
movzx eax [ ecx ]
test ax ax
jne r-xdata
cmp ax 0x20
jb r-xdata
push r--data
push esi
call sub_41c5a6
pop ecx
pop ecx
test eax eax
jne r-xdata
inc eax
jmp r-xdata
sub_409f6d
push esi
mov esi [ esp + 0x8 ]
cmp [ esi ] 0x0
je r-xdata
pop esi
retn 0x8
push edi
xor edi edi
movzx ecx [ esi ]
push ecx
push eax
call sub_41c5e9
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax r--data
push 0x5f
pop eax
mov [ esi ] ax
cmp [ esp + 0x10 ] al
je r-xdata
inc esi
inc esi
inc edi
inc edi
cmp [ esi ] 0x0
jne r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov eax edi
and eax 0xfffffffe
cmp eax 0x2
jle r-xdata
cmp [ esi ] 0x20
jae r-xdata
cmp [ esp + 0x10 ] 0x0
mov eax r--data
jne r-xdata
pop edi
push 0x5f
pop eax
mov [ esi ] ax
sub_409fd3
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
push edi
xor edi edi
dec esi
je r-xdata
mov [ edi + ebx ] 0x0
pop edi
pop esi
pop ebx
retn 0xc
mov eax [ esp + 0x10 ]
mov edx ebx
sub edx eax
cmp cl 0x2f
jne r-xdata
inc edi
mov [ edx + eax ] cl
inc eax
cmp edi esi
jb r-xdata
add cl 0x2d
mov cl [ eax ]
test cl cl
je r-xdata
sub_40a00c
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
push edi
xor edi edi
dec esi
je r-xdata
xor eax eax
mov [ ebx + edi * 2 ] ax
pop edi
pop esi
pop ebx
retn 0xc
mov eax [ esp + 0x10 ]
mov edx ebx
sub edx eax
cmp cx 0x2f
jne r-xdata
movzx ecx cx
push 0x5c
pop ecx
jmp r-xdata
movzx ecx [ eax ]
test cx cx
je r-xdata
mov [ edx + eax ] cx
inc edi
inc eax
inc eax
cmp edi esi
jb r-xdata
sub_40a051
push esi
mov esi [ esp + 0x8 ]
movzx eax [ esi ]
push eax
call sub_410748
movzx eax ax
add eax 0xffffffbf
cmp ax 0x19
ja r-xdata
xor eax eax
cmp [ esi + 0x2 ] 0x3a
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop esi
retn 0x4
sub_40a07d
push esi
push edi
push 0x3b
push [ esp + 0x10 ]
xor edi edi
call sub_41c60f
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x8
lea eax [ esi + 0x2 ]
push eax
call j_sub_411a6f
cmp [ esp + 0x10 ] 0x0
mov edi eax
je r-xdata
xor eax eax
mov [ esi ] ax
sub_40a0b2
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x14 ]
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
mov esi [ ebp + 0x10 ]
je r-xdata
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov [ esi ] ax
push edi
push esi
push [ ebp + 0x8 ]
call sub_4116c2
jmp r-xdata
mov esi [ ebp + 0x10 ]
cmp esi eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
xor eax eax
mov [ esi + edi * 2 - 0x2 ] ax
test edi edi
jbe r-xdata
push edi
push eax
push esi
call sub_41c413
add esp 0xc
jmp r-xdata
sub_40a108
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_41a32f
pop ecx
mov ecx eax
jmp r-xdata
dec ecx
jns r-xdata
movzx eax [ esi + ecx * 2 ]
push eax
call sub_409e4d
test al al
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
lea eax [ esi + ecx * 2 + 0x2 ]
jmp r-xdata
mov eax esi
cmp [ esi + 0x2 ] 0x3a
lea eax [ esi + 0x4 ]
je r-xdata
pop esi
retn 0x4
sub_40a145
push ebp
mov ebp esp
mov eax 0x1000
call sub_41a670
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
push edi
mov edi eax
test cx cx
je r-xdata
cmp [ edi ] 0x0
je r-xdata
movzx edx cx
lea ecx [ eax + 0x4 ]
cmp [ edi ] 0x2e
jne r-xdata
push esi
inc ecx
movzx eax [ ecx - 0x3 ]
inc ecx
movzx edx ax
test ax ax
jne r-xdata
cmp [ ecx - 0x2 ] 0x2e
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ edi + 0x2 ] 0x2e
jne r-xdata
cmp [ esi ] 0x5c
jne r-xdata
cmp [ edi + 0x2 ] 0x3a
jne r-xdata
movzx eax dx
push eax
call sub_409e4d
test al al
je r-xdata
cmp [ ecx ] 0x2e
jne r-xdata
mov eax edi
pop edi
leave
retn 0x8
push 0x800
push edi
lea eax [ ebp - 0x1000 ]
push eax
call sub_410792
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0xc ]
call sub_41a377
pop ecx
pop ecx
lea eax [ edi + 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
movzx eax [ esi ]
mov edx esi
test ax ax
je r-xdata
cmp [ esi + 0x2 ] 0x5c
jne r-xdata
lea esi [ edi + 0x4 ]
movzx eax [ ecx + 0x2 ]
push eax
call sub_409e4d
test al al
je r-xdata
mov edi eax
cmp esi edi
je r-xdata
movzx ecx ax
lea eax [ esi + 0x4 ]
push 0x5c
push eax
call sub_41c5e9
pop ecx
pop ecx
test eax eax
je r-xdata
lea edi [ ecx + 0x4 ]
pop esi
cmp [ esi ] 0x0
mov edi esi
jne r-xdata
cmp cx 0x2e
jne r-xdata
lea esi [ edx + 0x2 ]
jmp r-xdata
add eax 0x2
push 0x5c
push eax
call sub_41c5e9
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi ] 0x0
mov esi edi
je r-xdata
inc edx
inc edx
movzx ecx [ edx ]
test cx cx
jne r-xdata
lea esi [ eax + 0x2 ]
movzx eax cx
push eax
call sub_409e4d
test al al
je r-xdata
sub_40a2b5
push [ esp + 0x4 ]
call sub_40a297
test eax eax
je r-xdata
xor eax eax
push [ esp + 0x8 ]
add eax 0x2
push eax
call sub_4119e6
test eax eax
jne r-xdata
inc eax
jmp r-xdata
retn 0x8
sub_40a2db
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
retn 0xc
push esi
push edi
mov edi [ esp + 0xc ]
push edi
lea esi [ eax - 0x1 ]
call sub_40a108
sub eax edi
sar eax 0x1
cmp esi eax
jb r-xdata
push esi
push edi
mov edi [ esp + 0x18 ]
push edi
call sub_41c413
add esp 0xc
xor eax eax
mov [ edi + esi * 2 ] ax
pop edi
pop esi
push edi
call sub_40a108
mov esi eax
sub esi edi
sar esi 0x1
sub_40a320
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_40a108
lea ecx [ esi + 0x4 ]
cmp eax ecx
jb r-xdata
xor ecx ecx
mov [ eax ] cx
pop esi
retn 0x4
cmp [ esi + 0x2 ] 0x3a
jne r-xdata
dec eax
dec eax
add esi 0x8
cmp eax esi
jb r-xdata
sub_40a34b
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
push ebx
call sub_41a32f
pop ecx
lea edi [ ebx + eax * 2 - 0x2 ]
jmp r-xdata
movzx eax [ edi ]
push eax
call sub_410763
test al al
je r-xdata
cmp edi ebx
jbe r-xdata
movzx eax [ edi ]
mov esi edi
jmp r-xdata
dec edi
dec edi
push eax
call sub_410763
test al al
jne r-xdata
cmp esi ebx
jbe r-xdata
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn 0x4
dec esi
dec esi
movzx eax [ esi ]
cmp esi ebx
ja r-xdata
movzx eax [ esi ]
cmp ax 0x2e
je r-xdata
jmp r-xdata
movzx eax ax
push eax
call sub_410763
test al al
jne r-xdata
push ebx
call sub_40a108
push 0x2e
push eax
call sub_41c5e9
pop ecx
pop ecx
test eax eax
je r-xdata
dec esi
dec esi
cmp eax esi
jae r-xdata
mov edi esi
sub_40a3ce
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
push ebx
call sub_40a297
mov esi eax
test esi esi
jne r-xdata
lea edi [ esi + 0x2 ]
cmp [ edi ] 0x0
jne r-xdata
push [ esp + 0x14 ]
push r--data
push ebx
call sub_4107bf
push ebx
call sub_40a297
mov esi eax
jmp r-xdata
push r--data
push edi
call sub_4119e6
test eax eax
je r-xdata
push ebx
call sub_41a32f
pop ecx
mov ecx [ esp + 0x14 ]
add ecx 0xfffffffd
cmp eax ecx
jb r-xdata
cmp [ esp + 0x18 ] 0x0
jne r-xdata
push r--data
push edi
call sub_41a377
pop ecx
pop ecx
push r--data
push edi
call sub_4119e6
test eax eax
jne r-xdata
lea edi [ esi + 0x4 ]
movzx eax [ edi ]
push eax
call sub_410763
test al al
je r-xdata
push ebx
call sub_40a34b
mov esi eax
jmp r-xdata
push r--data
push edi
call sub_41a377
pop ecx
pop ecx
add esi 0x6
movzx eax [ esi ]
push eax
call sub_410763
test al al
je r-xdata
inc [ esi ]
movzx eax [ esi ]
cmp ax 0x3a
je r-xdata
mov eax esi
jmp r-xdata
push 0x30
pop eax
mov [ esi ] ax
dec esi
dec esi
cmp esi ebx
jb r-xdata
jmp r-xdata
inc [ eax ]
movzx ecx [ eax ]
cmp cx 0x3a
je r-xdata
push ebx
call sub_41a32f
pop ecx
lea eax [ ebx + eax * 2 ]
jmp r-xdata
movzx eax [ esi ]
push eax
call sub_410763
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn 0xc
lea ecx [ eax - 0x2 ]
cmp [ ecx ] 0x2e
je r-xdata
jmp r-xdata
cmp eax esi
jne r-xdata
push 0x41
pop ecx
mov [ eax ] cx
jmp r-xdata
push 0x30
pop edx
mov [ eax ] dx
mov eax ecx
mov cx [ eax ]
mov [ eax + 0x2 ] cx
dec eax
dec eax
push 0x31
pop eax
mov [ esi + 0x2 ] ax
jmp r-xdata
sub_40a4f8
push esi
mov esi [ esp + 0x8 ]
cmp [ esi ] 0x5c
jne r-xdata
push esi
call sub_40a051
test al al
je r-xdata
cmp [ esi + 0x2 ] 0x5c
je r-xdata
xor eax eax
movzx eax [ esi + 0x4 ]
push eax
call sub_409e4d
test al al
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop esi
retn 0x4
sub_40a52d
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
xor eax eax
push esi
mov [ ebx ] ax
call sub_40a051
test al al
je r-xdata
push edi
push 0x5c
pop edi
cmp [ esi ] di
jne r-xdata
movzx eax [ esi ]
push eax
push r--data
push [ esp + 0x1c ]
push ebx
call sub_401b7b
add esp 0x10
jmp r-xdata
pop edi
cmp [ esi + 0x2 ] di
jne r-xdata
pop esi
pop ebx
retn 0xc
lea eax [ esi + 0x4 ]
push edi
push eax
call sub_41c5e9
pop ecx
pop ecx
test eax eax
je r-xdata
add eax 0x2
push edi
push eax
call sub_41c5e9
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
call sub_41a32f
pop ecx
sub eax esi
sar eax 0x1
inc eax
jmp r-xdata
push edi
push esi
push ebx
call sub_41c413
add esp 0xc
xor eax eax
mov [ ebx + edi * 2 ] ax
xor edi edi
mov edi eax
cmp edi [ esp + 0x18 ]
jb r-xdata
sub_40a5bc
push ebp
mov ebp esp
mov eax 0x1000
call sub_41a670
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
jne r-xdata
push ebx
push edi
push esi
call sub_40a051
push esi
call sub_41a32f
pop ecx
push esi
mov ebx eax
call sub_40a4f8
test al al
je r-xdata
xor al al
jmp r-xdata
lea eax [ ebp - 0x1000 ]
push eax
mov edi 0x7ff
push edi
call [ GetCurrentDirectoryW@IAT ]
test eax eax
je r-xdata
push esi
call sub_40a051
test al al
je r-xdata
pop esi
leave
retn 0xc
xor al al
cmp eax edi
ja r-xdata
cmp [ esi ] 0x5c
jne r-xdata
add ebx 0x4
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
movzx eax [ esi ]
push eax
call sub_409e4d
test al al
je r-xdata
add esi 0x2
cmp [ esi ] 0x5c
jne r-xdata
mov edi [ ebp + 0xc ]
push 0x4
push r--data
push edi
call sub_41c413
push esi
add edi 0x8
push edi
call sub_41a377
add esp 0x14
jmp r-xdata
push 0x800
lea eax [ ebp - 0x1000 ]
push eax
call sub_409e72
lea eax [ ebp - 0x1000 ]
push eax
call sub_41a32f
lea eax [ eax + ebx + 0x4 ]
pop ecx
cmp [ ebp + 0x10 ] eax
jbe r-xdata
add ebx 0x6
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
add ebx 0x6
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
mov al 0x1
jmp r-xdata
mov edi [ ebp + 0xc ]
push 0x4
push r--data
push edi
call sub_41c413
lea eax [ ebp - 0x1000 ]
push eax
lea eax [ edi + 0x8 ]
push eax
call sub_41a377
add esp 0x14
cmp [ esi ] 0x2e
jne r-xdata
mov edi [ ebp + 0xc ]
push 0x4
push r--data
push edi
call sub_41c413
push 0x2
lea eax [ ebp - 0x1000 ]
push eax
lea eax [ edi + 0x8 ]
push eax
call sub_41c413
push esi
add edi 0xc
push edi
call sub_41a377
add esp 0x20
jmp r-xdata
mov edi [ ebp + 0xc ]
push 0x4
push r--data
push edi
call sub_41c413
lea eax [ edi + 0x8 ]
push r--data
push eax
call sub_41a377
push esi
add edi 0xe
push edi
call sub_41a377
add esp 0x1c
jmp r-xdata
pop edi
pop ebx
push [ ebp + 0x10 ]
push esi
push edi
call sub_4107bf
movzx eax [ esi + 0x2 ]
push eax
call sub_409e4d
test al al
je r-xdata
add esi 0x4
sub_40a769
push ebp
mov ebp esp
mov eax 0x2004
call sub_41a670
mov eax [ ebp + 0x8 ]
push ebx
push esi
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
leave
retn 0xc
mov ecx [ ebp + 0xc ]
xor eax eax
mov [ ecx ] ax
push edi
mov edi [ GetFullPathNameW@IAT ]
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x1004 ]
push ecx
mov esi 0x800
push esi
push eax
call edi
mov ebx eax
test ebx ebx
je r-xdata
push esi
lea eax [ ebp - 0x2004 ]
push eax
push [ ebp + 0x8 ]
call sub_40a5bc
test al al
je r-xdata
cmp ebx esi
jbe r-xdata
pop edi
test ebx ebx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1004 ]
push eax
push esi
lea eax [ ebp - 0x2004 ]
push eax
call edi
mov ebx eax
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x8 ] eax
je r-xdata
cmp ebx esi
jae r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x1004 ]
push eax
push [ ebp + 0xc ]
jmp r-xdata
call sub_410792
jmp r-xdata
sub_40a867
push esi
push edi
mov edi [ esp + 0xc ]
mov ecx edi
call j_sub_409514
mov esi eax
and eax 0xc000
mov ecx edi
je r-xdata
push 0x6
call sub_409542
mov eax esi
shr eax 0xa
and eax 0xf
cmp eax 0x4000
je r-xdata
test esi 0x3c00
jne r-xdata
push 0x2
cmp eax 0x8000
je r-xdata
shr esi 0x6
and esi 0xff
push 0xa
shr esi 0x2
or esi 0xffffff00
push 0xe
jmp r-xdata
call sub_409542
mov ecx edi
call j_sub_409514
mov esi eax
call sub_409542
mov ecx edi
call j_sub_409514
mov esi eax
push 0x10
mov ecx edi
shl esi 0x10
call sub_409542
mov ecx edi
call j_sub_409514
or esi eax
jmp r-xdata
pop edi
pop esi
retn 0x4
call sub_409542
mov eax esi
jmp r-xdata
push 0x10
mov ecx edi
jmp r-xdata
sub_40a905
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax 0x40000
cmp edx eax
jae r-xdata
pop ebp
retn 0xc
mov ecx [ ecx + 0x10 ]
add ecx edx
cmp [ ebp + 0xc ] ecx
je r-xdata
sub eax edx
cmp [ ebp + 0x10 ] eax
jae r-xdata
push eax
push [ ebp + 0xc ]
push ecx
call sub_41c710
add esp 0xc
mov eax [ ebp + 0x10 ]
sub_40a939
push esi
mov esi [ esp + 0xc ]
push esi
push [ esp + 0xc ]
push 0xffffffff
call sub_4055ad
xor edx edx
not eax
xor ecx ecx
add ecx 0xc
inc edx
cmp ecx 0x48
jb r-xdata
cmp [ ecx + rw-data ] esi
je r-xdata
cmp [ ecx + rw-data ] eax
jne r-xdata
xor eax eax
imul edx edx 0xc
mov eax [ edx + rw-data ]
jmp r-xdata
pop esi
retn 0x8
sub_40a97a
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
movzx edx [ eax + ecx ]
inc eax
push esi
movzx esi [ eax + ecx ]
lea ecx [ eax + ecx + 0x1 ]
movzx eax [ ecx + 0x1 ]
movzx ecx [ ecx ]
shl eax 0x8
or eax ecx
mov ecx [ esp + 0xc ]
shl esi 0x8
or edx esi
shl eax 0x10
or eax edx
and ecx 0x7
shr eax cl
push 0x20
pop ecx
sub ecx [ esp + 0x10 ]
or edx 0xffffffff
shr edx cl
pop esi
and eax edx
retn 0xc
sub_40a9ca
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax ecx
cdq
push esi
and edx 0x7
add eax edx
and ecx 0x7
push edi
mov esi eax
mov eax ecx
push 0x20
pop ecx
sub ecx [ ebp + 0x14 ]
or edx 0xffffffff
shr edx cl
mov ecx eax
mov eax [ ebp + 0x8 ]
shl [ ebp + 0xc ] cl
shl edx cl
sar esi 0x3
xor edi edi
add esi eax
not edx
mov al [ esi + edi ]
and al dl
or al [ ebp + 0xc ]
shr [ ebp + 0xc ] 0x8
shr edx 0x8
or edx 0xff000000
mov [ esi + edi ] al
inc edi
cmp edi 0x4
jb r-xdata
pop edi
pop esi
pop ebp
retn 0x10
sub_40aa23
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jbe r-xdata
pop esi
retn 0x4
mov eax [ esi + 0xc ]
push ebx
push ebp
push edi
mov ebp rw-data
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx eax
shr ecx 0x2
lea eax [ ecx + eax + 0x20 ]
mov ecx [ esi + 0x4 ]
mov ebx ecx
cmp ecx eax
ja r-xdata
cmp ecx eax
jbe r-xdata
mov eax ebx
imul eax eax 0x28
push eax
push [ esi ]
call sub_41a114
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov ebx eax
push eax
push r--data
push ebp
call sub_406381
add esp 0xc
mov ecx ebp
call sub_40632c
mov [ esi ] edi
pop edi
pop ebp
mov [ esi + 0x8 ] ebx
pop ebx
mov ecx ebp
call sub_40632c
sub_40aa9d
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
and [ edi + 0x4 ] 0x0
and [ edi ] 0x0
mov eax 0x8000
cmp [ ebp + 0xc ] eax
jae r-xdata
mov esi [ ebp + 0x8 ]
push eax
push esi
push [ edi + 0xc ]
call sub_41be10
xor eax eax
inc eax
add esp 0xc
xor bl bl
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov eax [ ebp + 0xc ]
push 0x8
mov ecx edi
call sub_409542
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
and [ esi + 0x14 ] 0x0
cmp bl [ eax ]
jne r-xdata
xor bl [ eax + esi ]
inc eax
cmp eax [ ebp + 0xc ]
jb r-xdata
push 0x1
mov ecx esi
call sub_40aa23
mov eax [ esi + 0x14 ]
lea ecx [ eax + 0x1 ]
imul eax eax 0x28
add eax [ esi ]
mov [ esi + 0x14 ] ecx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] ecx
lea ecx [ eax + 0x1c ]
mov [ eax + 0x24 ] ecx
push 0x3
pop ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x8 ] ecx
xor edx edx
mov [ eax ] 0x16
xor ecx ecx
cmp [ esi + 0x14 ] edx
jle r-xdata
push [ ebp + 0xc ]
mov ecx edi
push eax
call sub_40a939
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor edi edi
push 0x1
mov ecx esi
call sub_40aa23
mov eax [ esi + 0x14 ]
lea ecx [ eax + 0x1 ]
imul eax eax 0x28
add eax [ esi ]
mov [ esi + 0x14 ] ecx
lea ecx [ eax + 0xc ]
mov [ ecx ] edi
mov [ eax + 0x14 ] ecx
lea ecx [ eax + 0x1c ]
push 0x3
mov [ eax + 0x24 ] ecx
pop ecx
mov [ eax ] 0x28
mov [ eax + 0x18 ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
cmp [ eax + 0x24 ] edx
jne r-xdata
lea ebx [ eax + 0xc ]
mov [ eax + 0x14 ] ebx
inc ecx
add edi 0x28
cmp ecx [ esi + 0x14 ]
jl r-xdata
lea ebx [ eax + 0x1c ]
mov [ eax + 0x24 ] ebx
mov eax [ esi ]
add eax edi
cmp [ eax + 0x14 ] edx
jne r-xdata
sub_40aba1
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
sub esp 0x50
push ebx
xor ebx ebx
cmp edx ebx
push esi
mov esi ecx
jle r-xdata
pop esi
pop ebx
leave
retn 0x4
cmp edx 0x2
push edi
jle r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x10 ]
mov esi [ esi + 0x2c ]
cmp eax 0x3c000
jae r-xdata
cmp edx 0x3
je r-xdata
pop edi
cmp eax 0x4
jl r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ esi + 0x24 ]
cmp eax 0x3c000
jae r-xdata
cmp edx 0x4
je r-xdata
cmp edx 0x2
sete dl
lea edi [ eax - 0x4 ]
add dl 0xe8
cmp edi ebx
mov [ ebp + 0x8 ] ebx
jle r-xdata
cmp eax 0x15
jl r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x14 ]
mov edx [ esi + 0x18 ]
mov esi [ esi + 0x10 ]
sub ecx 0x3
lea edi [ esi + eax ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x8 ] edi
mov [ esi + 0x3c020 ] eax
cmp eax 0x1e000
jae r-xdata
cmp edx 0x5
je r-xdata
mov al [ ecx ]
inc ecx
inc [ ebp + 0x8 ]
inc esi
cmp al 0xe8
je r-xdata
mov ebx [ esi + 0x2c ]
add eax 0xffffffeb
shr ebx 0x4
test eax eax
jle r-xdata
cmp ecx ebx
jl r-xdata
mov edi [ esi + 0x24 ]
mov eax [ esi + 0x14 ]
mov esi [ esi + 0x10 ]
lea ecx [ esi + edi ]
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x30 ] ecx
mov [ esi + 0x3c020 ] edi
cmp edi 0x1e000
jae r-xdata
cmp edx 0x6
jne r-xdata
mov eax [ ecx ]
test eax eax
jge r-xdata
cmp al dl
jne r-xdata
lea ecx [ eax - 0x1 ]
shr ecx 0x4
inc ecx
mov [ ebp - 0x2c ] ecx
cmp edx ebx
jl r-xdata
cmp eax ebx
mov [ ebp - 0x10 ] ebx
jle r-xdata
mov ecx [ esi + 0x24 ]
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x10 ]
mov [ ebp - 0x1c ] eax
lea edx [ ecx + ecx ]
mov [ edi + 0x3c020 ] ecx
cmp ecx 0x1e000
jae r-xdata
cmp eax 0x1000000
jge r-xdata
lea ebx [ esi + eax ]
test ebx ebx
jl r-xdata
cmp [ ebp + 0x8 ] edi
jl r-xdata
add [ ebp + 0x8 ] 0x10
inc ebx
dec ecx
mov [ ebp - 0x2c ] ecx
jne r-xdata
mov al [ eax + rw-data ]
test al al
je r-xdata
neg ecx
mov [ ebp + 0x8 ] ebx
mov [ ebp - 0x14 ] ecx
jmp r-xdata
and [ ebp + 0x8 ] ebx
test eax eax
jle r-xdata
add [ ebp + 0x8 ] 0x4
add ecx 0x4
add esi 0x4
sub eax esi
add eax 0x1000000
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
and eax 0x1f
sub eax 0x10
js r-xdata
jmp r-xdata
and [ ebp - 0x1c ] 0x0
movzx eax al
push 0x12
mov [ ebp - 0x34 ] eax
pop edi
inc [ ebp + 0x8 ]
inc [ ebp - 0x14 ]
cmp [ ebp + 0x8 ] 0x3
jl r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
lea esi [ ecx + eax ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
sub eax [ ebp + 0x8 ]
push 0x3
dec eax
xor edx edx
pop ecx
div ecx
inc eax
mov [ ebp - 0xc ] eax
xor ebx ebx
push 0x1c
lea eax [ ebp - 0x50 ]
push ebx
push eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp + 0x8 ] ebx
call sub_41a3a0
mov eax [ ebp - 0x10 ]
add esp 0xc
mov [ ebp - 0x1c ] ebx
cmp eax edi
jmp r-xdata
mov edi [ ebp + 0x8 ]
xor al al
add edi ecx
jmp r-xdata
mov [ ecx ] eax
inc [ ebp - 0x1c ]
add edi 0x29
cmp edi 0x64
jle r-xdata
push 0x4
lea eax [ edi + 0x18 ]
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_40a97a
cmp eax 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
xor ebx ebx
cmp [ ebp + 0x8 ] eax
jge r-xdata
mov esi [ ebp - 0x10 ]
mov eax [ ebp - 0x30 ]
add esi 0xfffffffe
cmp eax esi
jge r-xdata
mov eax ebx
movzx edi [ esi ]
movzx eax [ esi - 0x3 ]
mov [ ebp - 0x24 ] edi
sub edi eax
mov [ ebp - 0x20 ] eax
add edi ebx
mov eax edi
sub eax ebx
push eax
call sub_41ca75
mov [ ebp - 0x2c ] eax
mov eax edi
sub eax [ ebp - 0x24 ]
push eax
call sub_41ca75
sub edi [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
push edi
call sub_41ca75
mov ecx [ ebp - 0x28 ]
add esp 0xc
cmp [ ebp - 0x2c ] ecx
jg r-xdata
mov [ ebp - 0x18 ] eax
jl r-xdata
cmp edi edx
jl r-xdata
mov ecx [ ebp - 0x1c ]
xor eax eax
inc eax
shl eax cl
mov ecx [ ebp - 0x34 ]
test ecx eax
je r-xdata
mov ecx [ ebp - 0x2c ]
push 0x14
push edi
push 0x14
push edi
push [ ebp + 0x8 ]
mov ecx esi
call sub_40a97a
sub eax ebx
and eax 0xfffff
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_40a9ca
mov edx [ ebp - 0x8 ]
cmp [ ebp - 0x18 ] 0x3
jl r-xdata
cmp [ ebp - 0x28 ] eax
jg r-xdata
cmp [ ebp - 0x2c ] eax
jle r-xdata
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx eax
sub ecx [ ebp - 0xc ]
mov edi ebx
mov ebx ecx
mov ecx [ ebp - 0x14 ]
imul edx ebx
movzx ecx [ ecx ]
mov esi edi
imul esi [ ebp + 0x8 ]
add esi edx
mov edx [ ebp - 0x8 ]
imul edx eax
inc [ ebp - 0x14 ]
add esi edx
mov edx [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea eax [ esi + edx * 8 ]
mov esi [ ebp - 0x30 ]
shr eax 0x3
mov [ ebp - 0x34 ] ecx
and eax 0xff
sub eax ecx
mov ecx [ ebp - 0x18 ]
mov [ ecx + esi ] al
movsx esi [ ebp - 0x34 ]
mov cl al
sub cl dl
movsx ecx cl
shl esi 0x3
push esi
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x24 ] eax
call sub_41ca75
add [ ebp - 0x50 ] eax
mov eax esi
sub eax [ ebp - 0xc ]
push eax
call sub_41ca75
add [ ebp - 0x4c ] eax
mov eax [ ebp - 0xc ]
add eax esi
push eax
call sub_41ca75
add [ ebp - 0x48 ] eax
mov eax esi
sub eax ebx
push eax
call sub_41ca75
add [ ebp - 0x44 ] eax
lea eax [ esi + ebx ]
push eax
call sub_41ca75
add [ ebp - 0x40 ] eax
mov eax esi
sub eax edi
push eax
call sub_41ca75
add [ ebp - 0x3c ] eax
add esi edi
push esi
call sub_41ca75
add [ ebp - 0x38 ] eax
add esp 0x1c
test [ ebp - 0x1c ] 0x1f
jne r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x2c ]
jl r-xdata
mov edx [ esi + 0x10 ]
sub al [ edx + ebx ]
inc ebx
mov [ edx + edi ] al
add edi [ ebp - 0x1c ]
lea edx [ ecx + ecx ]
inc [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x1c ]
jl r-xdata
mov cl [ eax + edx + 0x1 ]
add [ eax + edx ] cl
add [ eax + edx + 0x2 ] cl
add eax 0x3
cmp eax esi
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x2c ]
inc [ ebp - 0x1c ]
cmp eax [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
xor edi edi
xor ecx ecx
mov [ ebp - 0x50 ] edi
inc ecx
mov edi [ ebp - 0x28 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x1c ]
sub al [ ecx ]
inc [ ebp - 0x1c ]
add [ ebp - 0x18 ] 0x3
movzx ebx al
mov eax [ ebp - 0x34 ]
mov [ esi + eax ] bl
add esi 0x3
dec [ ebp - 0xc ]
jne r-xdata
and [ eax ] 0x0
inc ecx
cmp ecx 0x7
jb r-xdata
mov edx esi
mov edi ecx
lea eax [ ebp + ecx * 4 - 0x50 ]
mov esi [ eax ]
cmp esi edx
jae r-xdata
mov eax edi
dec eax
je r-xdata
cmp [ ebp - 0x8 ] 0xfffffff0
jl r-xdata
dec eax
je r-xdata
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x10
jge r-xdata
dec eax
je r-xdata
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0xfffffff0
jl r-xdata
dec eax
je r-xdata
dec [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x10
jge r-xdata
dec eax
je r-xdata
inc [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp + 0x8 ] 0xfffffff0
jl r-xdata
dec eax
jne r-xdata
dec [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp + 0x8 ] 0x10
jge r-xdata
inc [ ebp + 0x8 ]
jmp r-xdata
sub_40b059
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi 0x17d7840
mov edx [ ecx + 0x30 ]
cmp edx 0x40000
jae r-xdata
cmp edx 0x28
je r-xdata
mov al 0x1
jmp r-xdata
mov edi [ ecx + 0x10 ]
mov eax edx
and eax 0x3ffff
mov eax [ eax + edi ]
cmp eax [ esp + 0x10 ]
jae r-xdata
push [ eax + 0xc ]
call sub_40aba1
add eax 0x28
dec esi
jmp r-xdata
pop edi
pop esi
retn 0x8
dec esi
test esi esi
jle r-xdata
mov edx [ eax ]
cmp edx 0x16
je r-xdata
xor al al
imul eax eax 0x28
add eax [ esp + 0xc ]
add edx 0x4
mov [ ecx + 0x30 ] edx
jmp r-xdata
sub_40b0bb
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x1c
lea eax [ esi + 0x38 ]
mov edi ecx
push eax
lea eax [ edi + 0x14 ]
push eax
call sub_41be10
mov eax [ esi + 0x1c ]
mov ebx 0x2000
add esp 0xc
mov [ ebp + 0x8 ] eax
cmp eax ebx
jb r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp + 0x8 ] ebx
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x2c ]
sub ebx ecx
cmp eax ebx
jb r-xdata
push [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
push [ esi + 0x18 ]
add eax 0x3c000
push eax
call sub_41be10
add esp 0xc
test eax eax
je r-xdata
mov eax ebx
and [ edi + 0x34 ] 0x0
mov [ edi + 0x30 ] 0x40000
mov eax [ esi + 0x10 ]
mov ebx eax
test eax eax
jne r-xdata
push eax
mov eax [ edi + 0x10 ]
push [ esi + 0x28 ]
lea eax [ eax + ecx + 0x3c000 ]
push eax
call sub_41be10
add esp 0xc
mov eax [ esi + 0x14 ]
test eax eax
jle r-xdata
mov ebx [ esi ]
mov edx [ edi + 0x10 ]
mov ecx [ edx + 0x3c020 ]
mov eax [ edx + 0x3c01c ]
mov ebx 0x3ffff
and ecx ebx
and eax ebx
lea ebx [ eax + ecx ]
cmp ebx 0x40000
jb r-xdata
push eax
push ebx
mov ecx edi
call sub_40b059
test al al
jne r-xdata
add edx ecx
mov [ esi + 0x54 ] edx
mov [ esi + 0x58 ] eax
add esi 0x18
mov ecx esi
call sub_4125f7
mov eax [ edi + 0x10 ]
mov ecx [ eax + 0x3c030 ]
mov eax 0x1fc0
cmp ecx eax
jae r-xdata
xor eax eax
xor ecx ecx
mov [ ebx ] 0x16
test eax eax
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
lea ebx [ eax + 0x40 ]
push ebx
mov ecx esi
call sub_401106
mov eax [ edi + 0x10 ]
push ebx
add eax 0x3c000
push eax
push [ esi ]
call sub_41be10
add esp 0xc
sub_40b1d7
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi + 0x1c ] ebx
je r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov ebx [ esi + 0x4 ]
mov edx [ esi + 0x14 ]
mov eax [ ebp + 0x8 ]
mov ecx ebx
sub ecx edx
mov [ ebp - 0x4 ] ebx
cmp eax ecx
jbe r-xdata
pop esi
mov eax ebx
pop ebx
leave
retn 0x4
push [ ebp + 0x8 ]
call sub_401106
mov eax [ esi + 0x14 ]
add eax [ esi ]
push [ ebp + 0x8 ]
mov ecx [ esi + 0x10 ]
mov edx [ ecx ]
push eax
call [ edx + 0x8 ]
mov ebx eax
add [ esi + 0x14 ] ebx
add edx eax
mov ebx eax
mov [ esi + 0x14 ] edx
jmp r-xdata
push edi
sub eax ecx
mov edi eax
not edi
inc edi
and edi 0xf
add edi eax
push edi
mov ecx esi
call sub_401106
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov edx [ ecx ]
add eax ebx
push edi
push eax
call [ edx + 0x8 ]
mov ecx [ esi + 0x1c ]
mov ebx eax
mov eax [ esi ]
add eax [ ebp - 0x4 ]
push edi
push eax
call sub_405e38
mov eax ebx
neg eax
sbb eax eax
and eax [ ebp + 0x8 ]
pop edi
add [ esi + 0x14 ] eax
jmp r-xdata
sub_40b289
mov edx [ ecx + 0x18 ]
lea eax [ edx + 0x1 ]
cmp eax [ ecx + 0x14 ]
jae r-xdata
xor eax eax
retn
mov eax [ ecx ]
push esi
add eax edx
movzx si [ eax + 0x1 ]
movzx ax [ eax ]
push edi
mov edi 0x100
imul si di
add si ax
add edx 0x2
pop edi
movzx eax si
mov [ ecx + 0x18 ] edx
pop esi
retn
sub_40b2be
push esi
mov esi [ ecx + 0x18 ]
lea eax [ esi + 0x3 ]
cmp eax [ ecx + 0x14 ]
jae r-xdata
xor eax eax
pop esi
retn
mov eax [ ecx ]
lea edx [ esi + eax ]
movzx eax [ edx + 0x3 ]
push edi
movzx edi [ edx + 0x2 ]
shl eax 0x8
add eax edi
movzx edi [ edx + 0x1 ]
movzx edx [ edx ]
shl eax 0x8
add eax edi
shl eax 0x8
add eax edx
add esi 0x4
pop edi
mov [ ecx + 0x18 ] esi
pop esi
retn
sub_40b2fb
push esi
call sub_40b2be
mov esi eax
call sub_40b2be
push 0x1
push 0x0
push 0x0
push eax
call sub_41a750
xor ecx ecx
add eax esi
adc edx ecx
pop esi
retn
sub_40b31c
push ecx
push ecx
push ebx
push ebp
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
xor ebp ebp
push edi
mov [ esp + 0x10 ] ebp
mov [ esp + 0x14 ] ebp
cmp eax [ esi + 0x14 ]
jae r-xdata
xor eax eax
xor edx edx
mov edi [ esi ]
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
add ebp 0x7
cmp eax [ esi + 0x14 ]
jb r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
mov eax [ esi + 0x18 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x18 ] ecx
mov bl [ edi + eax ]
mov al bl
and al 0x7f
movzx eax al
cdq
mov ecx ebp
call sub_41ca90
add [ esp + 0x10 ] eax
adc [ esp + 0x14 ] edx
test bl bl
jns r-xdata
sub_40b37f
mov edx [ ecx + 0x14 ]
push esi
mov esi [ esp + 0x8 ]
mov eax esi
cmp esi edx
jae r-xdata
xor eax eax
mov ecx [ ecx ]
sub eax esi
inc eax
jmp r-xdata
inc eax
cmp eax edx
jb r-xdata
pop esi
retn 0x4
test [ ecx + eax ] 0x80
je r-xdata
sub_40b3a5
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
push edi
mov edi [ esi + 0x14 ]
sub edi eax
cmp edi ebx
jb r-xdata
test edi edi
jbe r-xdata
mov edi ebx
cmp ebx edi
jbe r-xdata
mov ecx [ esi ]
push edi
add ecx eax
push ecx
push [ esp + 0x18 ]
call sub_41be10
add esp 0xc
add [ esi + 0x18 ] edi
mov eax edi
pop edi
pop esi
pop ebx
retn 0x8
mov eax [ esp + 0x10 ]
sub ebx edi
push ebx
add eax edi
push 0x0
push eax
call sub_41a3a0
add esp 0xc
sub_40b3f5
mov edx [ ecx + 0x14 ]
cmp edx 0x2
ja r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx ]
inc eax
add edx 0xfffffffe
push edx
inc eax
push eax
push 0xffffffff
call sub_4055ad
not eax
and eax 0xffff
mov edx [ ecx + 0x18 ]
retn 0x4
sub_40b425
mov edx [ ecx + 0x14 ]
cmp edx 0x4
ja r-xdata
mov eax [ ecx ]
add edx 0xfffffffc
push edx
add eax 0x4
push eax
push 0xffffffff
call sub_4055ad
not eax
retn
or eax 0xffffffff
retn
sub_40b467
or [ ecx + 0x21c0 ] 0xffffffff
xor eax eax
xor edx edx
mov [ ecx ] al
mov [ ecx + 0xc ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x28 ] 0x1
mov [ ecx + 0x29 ] al
mov [ ecx + 0x2a ] al
mov [ ecx + 0x21c6 ] al
mov [ ecx + 0x21c7 ] al
mov [ ecx + 0x21c8 ] al
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x30 ] eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x34 ] eax
mov [ ecx + 0x4434 ] al
mov [ ecx + 0x4435 ] al
mov [ ecx + 0x21f0 ] eax
mov [ ecx + 0x21f4 ] eax
mov [ ecx + 0x21e8 ] eax
mov [ ecx + 0x21ec ] eax
mov [ ecx + 0x21e0 ] eax
mov [ ecx + 0x21e4 ] eax
mov [ ecx + 0x21d8 ] eax
mov [ ecx + 0x21dc ] eax
mov [ ecx + 0x38 ] eax
mov [ ecx + 0x3c ] eax
mov [ ecx + 0x21c4 ] dx
mov [ ecx + 0x2200 ] eax
mov [ ecx + 0x2204 ] eax
mov [ ecx + 0x21f8 ] eax
mov [ ecx + 0x21fc ] eax
retn
sub_40b507
push ebp
mov ebp esp
cmp [ ecx + 0x28 ] 0x0
je r-xdata
pop ebp
retn 0x10
mov eax [ ecx + 0x2c ]
test eax eax
je r-xdata
mov edx [ ecx + 0x2200 ]
push esi
mov esi [ ecx + 0x2204 ]
push edi
mov edi edx
or edi esi
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ eax + 0x763c ]
push [ eax + 0x7638 ]
push [ ecx + 0x21f4 ]
push [ ecx + 0x21f0 ]
call sub_41129c
pop edi
pop esi
mov [ ebp + 0x10 ] edx
mov edx [ ecx + 0x21f8 ]
add [ ebp + 0x8 ] edx
mov edx [ ecx + 0x21fc ]
mov [ ebp + 0x14 ] esi
adc [ ebp + 0xc ] edx
sub_40b592
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push [ ebp + 0x20 ]
mov esi ecx
push [ ebp + 0x24 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
je r-xdata
push 0x0
lea ecx [ esi + 0x1100 ]
call sub_405f84
mov [ esi + 0x4435 ] al
push 0x1
lea ecx [ esi + 0x40 ]
call sub_405f84
mov [ esi + 0x4434 ] al
jmp r-xdata
pop esi
pop ebp
retn 0x20
sub_40b5f2
mov eax sub_42932a
call sub_41a05c
push ecx
push esi
mov esi ecx
lea ecx [ esi + 0x40 ]
mov [ ebp - 0x10 ] esi
call sub_405ed9
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x1100 ]
call sub_405ed9
lea ecx [ esi + 0x2208 ]
mov [ ebp - 0x4 ] 0x1
call sub_409800
lea ecx [ esi + 0x2d6c ]
mov [ ebp - 0x4 ] 0x2
call sub_409800
lea ecx [ esi + 0x38d0 ]
mov [ ebp - 0x4 ] 0x3
call sub_409800
mov ecx esi
call sub_40b467
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_40b65d
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi ecx
cmp [ esi + 0x4435 ] 0x0
push edi
je r-xdata
mov eax [ ebp + 0x8 ]
xor ebx ebx
xor edi edi
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] eax
jmp r-xdata
and [ ebp + 0xc ] 0xfffffff0
cmp [ ebp + 0xc ] ebx
ja r-xdata
cmp [ esi ] 0x0
mov eax [ esi + 0x2c ]
mov [ ebp - 0xc ] eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
mov eax [ esi + 0x24 ]
cmp ebx eax
mov edx [ esi + 0x20 ]
jl r-xdata
push [ esi + 0x4 ]
push [ esi + 0x8 ]
push [ ebp + 0x8 ]
call sub_41be10
mov edi [ esi + 0x4 ]
add esp 0xc
mov [ esi + 0x4 ] ebx
jmp r-xdata
cmp edi 0xffffffff
je r-xdata
mov ecx [ eax + 0xb040 ]
push [ esi + 0x21d4 ]
add ecx [ esi + 0x21e8 ]
mov eax [ eax + 0xb044 ]
push [ esi + 0x21d0 ]
adc eax [ esi + 0x21ec ]
push eax
push ecx
mov ecx esi
call sub_40b507
mov ecx [ ebp + 0xc ]
jg r-xdata
mov eax edi
cdq
lea ecx [ esi + 0x21e8 ]
add [ ecx ] eax
adc [ ecx + 0x4 ] edx
add [ ebp - 0x4 ] edi
add [ ebp - 0x8 ] edi
sub [ ebp + 0xc ] edi
sub [ esi + 0x20 ] eax
sbb [ esi + 0x24 ] edx
cmp [ esi + 0x21c7 ] 0x0
je r-xdata
call sub_4109c9
mov eax edi
cmp [ esi + 0x4435 ] 0x0
mov edi [ ebp - 0x4 ]
je r-xdata
cmp [ esi + 0x21c7 ] 0x0
je r-xdata
mov ecx edx
jmp r-xdata
cmp [ ebp + 0xc ] edx
jbe r-xdata
mov eax [ esi + 0x20 ]
or eax [ esi + 0x24 ]
jne r-xdata
push edi
push [ ebp + 0x8 ]
lea ecx [ esi + 0x1100 ]
call sub_405e38
mov ebx [ ebp - 0xc ]
or eax 0xffffffff
cmp [ ebx + 0x4 ] eax
je r-xdata
cmp [ esi + 0x4435 ] 0x0
je r-xdata
test ecx ecx
jbe r-xdata
xor ebx ebx
cmp edi ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebx ]
push ecx
push [ ebp - 0x8 ]
mov ecx ebx
call [ eax + 0x8 ]
mov edi eax
mov eax [ esi + 0x38 ]
test eax eax
jne r-xdata
cmp ebx eax
jl r-xdata
movzx eax [ esi + 0x21c4 ]
push eax
push 0x1
push esi
push [ ebp - 0xc ]
call sub_4186bb
test al al
je r-xdata
cmp [ esi + 0x4435 ] bl
je r-xdata
cmp [ eax + 0x1089 ] 0x0
je r-xdata
lea eax [ ebx + 0x65e8 ]
jg r-xdata
mov [ esi + 0x21c8 ] 0x1
or eax 0xffffffff
jmp r-xdata
test [ ebp - 0x4 ] 0xf
je r-xdata
push edi
push [ ebp - 0x8 ]
lea ecx [ esi + 0x2208 ]
call sub_40964c
mov eax [ ebp - 0x4 ]
lea edx [ ecx + eax ]
mov eax edx
and eax 0xfffffff0
sub eax edx
add eax ecx
test eax eax
jle r-xdata
cmp [ ebp + 0xc ] edx
jbe r-xdata
mov ecx eax
sub_40b80d
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
push edi
mov edi [ esp + 0x14 ]
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] edi
je r-xdata
cmp [ esi + 0x29 ] 0x0
jne r-xdata
cmp edi [ esi + 0x10 ]
ja r-xdata
lea eax [ esi + 0x21f0 ]
add [ eax ] edi
adc [ eax + 0x4 ] 0x0
cmp [ esi + 0x2a ] 0x0
jne r-xdata
mov ecx [ esi + 0x30 ]
push edi
push ebx
call sub_408841
push edi
push ebx
push [ esi + 0x14 ]
call sub_41be10
add [ esi + 0x14 ] edi
add esp 0xc
sub [ esi + 0x10 ] edi
jmp r-xdata
call sub_4109c9
pop edi
pop esi
pop ebx
retn 0x8
push edi
push ebx
lea ecx [ esi + 0x38d0 ]
call sub_40964c
sub_40b898
push esi
mov esi [ ecx ]
movzx eax [ esi ]
push edi
test ax ax
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
movzx eax [ esi ]
test ax ax
jne r-xdata
push 0x7
lea eax [ edi + 0x2 ]
push eax
lea eax [ esi + 0x2 ]
push eax
call sub_41c3dc
add esp 0xc
test eax eax
jne r-xdata
cmp ax 0xc
je r-xdata
jmp r-xdata
cmp [ esi + 0x10 ] 0x3d
jne r-xdata
inc esi
inc esi
inc esi
inc esi
cmp [ esi ] 0xc
je r-xdata
cmp [ esi + 0x12 ] 0x22
jne r-xdata
movzx eax [ esi ]
test ax ax
jne r-xdata
mov eax esi
jmp r-xdata
cmp ax [ edi ]
jne r-xdata
pop edi
pop esi
retn 0x4
sub_40b925
mov eax sub_42933f
call sub_41a05c
mov eax 0x4034
call sub_41a670
push esi
push 0x5c
push [ ebp + 0x8 ]
mov esi ecx
call sub_41c5e9
pop ecx
test eax eax
pop ecx
lea eax [ ebp - 0x2040 ]
jne r-xdata
push [ ebp + 0x8 ]
push eax
call sub_41a377
pop ecx
pop ecx
push ebx
lea ecx [ ebp - 0x1040 ]
call sub_40851e
push 0x4
lea eax [ ebp - 0x2040 ]
xor ebx ebx
push eax
lea ecx [ ebp - 0x1040 ]
mov [ ebp - 0x4 ] ebx
call sub_40855b
test al al
jne r-xdata
push 0x800
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
lea eax [ ebp - 0x2040 ]
push 0x5c
push eax
call sub_41c60f
pop ecx
pop ecx
test eax eax
je r-xdata
or [ ebp - 0x10 ] 0xffffffff
mov [ ebp + 0xb ] bl
mov [ ebp - 0x14 ] ebx
push edi
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1040 ]
call sub_408a05
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
add eax 0x2
mov eax [ ebp - 0x10 ]
cdq
push ebx
push edx
push eax
lea ecx [ ebp - 0x1040 ]
call sub_408d75
push 0x80002
call sub_41cafe
pop ecx
mov [ esi ] eax
lea ecx [ ebp - 0x1040 ]
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x1040 ]
call sub_408936
mov [ ebp - 0x1c ] eax
push 0x2000
lea eax [ ebp - 0x4040 ]
push eax
lea ecx [ ebp - 0x1040 ]
call sub_408c03
mov [ ebp - 0x18 ] eax
add eax 0xfffffff0
xor edi edi
cmp eax ebx
jl r-xdata
pop ebx
or [ ebp - 0x4 ] 0xffffffff
call sub_408a05
pop edi
push 0x80000
push eax
call sub_408c03
cmp [ ebp + 0xb ] 0x0
mov [ esi + 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
xor ebx ebx
push ebx
lea eax [ eax + ecx - 0x10 ]
push ebx
push eax
lea ecx [ ebp - 0x1040 ]
call sub_408d75
inc [ ebp - 0x14 ]
cmp [ ebp - 0x14 ] 0x80
jb r-xdata
lea ebx [ ebp + edi - 0x4040 ]
cmp [ ebx ] 0x2a
jne r-xdata
lea eax [ eax + eax + 0x2 ]
push eax
call sub_41cafe
mov edi eax
pop ecx
cmp edi ebx
je r-xdata
shr eax 0x1
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
cmp [ ebp - 0x10 ] 0xffffffff
je r-xdata
cmp [ ebx ] 0x2a
jne r-xdata
cmp [ ebp + edi - 0x403f ] 0x2a
jne r-xdata
lea ecx [ ebp - 0x1040 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov [ eax + ecx ] 0x0
mov eax [ esi + 0x4 ]
inc eax
push eax
push edi
push [ esi ]
call sub_4116c2
push [ esi ]
call sub_41a086
pop ecx
mov [ esi ] edi
mov ecx [ esi + 0x4 ]
mov eax 0x40000
cmp ecx eax
ja r-xdata
cmp [ ebx ] 0x52
jne r-xdata
lea eax [ ebp + edi - 0x403c ]
cmp [ eax - 0x2 ] 0x2a
jne r-xdata
push 0xb
lea eax [ ebp + edi - 0x403e ]
push r--data
push eax
call sub_41cbc8
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esi ]
xor edx edx
mov [ ecx + eax * 2 ] dx
xor ecx ecx
cmp [ esi + 0x4 ] ecx
jbe r-xdata
mov eax ecx
mov eax [ ebp - 0x18 ]
inc edi
add eax 0xfffffff0
cmp edi eax
jle r-xdata
cmp [ ebp + edi - 0x403f ] 0x61
jne r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0xffffffe0
cmp edi ecx
jg r-xdata
mov eax [ ebp - 0x1c ]
add edi eax
mov [ ebp - 0x10 ] edi
mov eax [ esi ]
xor edx edx
mov [ eax + ecx * 2 ] dx
mov [ esi + 0x4 ] ecx
mov eax [ esi ]
movzx edx [ eax + ebx * 2 ]
inc ebx
test dx dx
je r-xdata
jmp r-xdata
push 0x4
lea eax [ ebp + edi - 0x403e ]
push r--data
push eax
call sub_41cbc8
add esp 0xc
test eax eax
je r-xdata
push 0xb
push r--data
push eax
call sub_41c3dc
add esp 0xc
test eax eax
je r-xdata
cmp dx 0x5c
jne r-xdata
mov [ ebp + 0xb ] 0x1
cmp dx 0xd
je r-xdata
movzx edi [ eax + ebx * 2 ]
sub edi 0x22
je r-xdata
push 0xc
cmp dx 0xa
jne r-xdata
push 0x22
sub edi 0x3a
je r-xdata
mov [ eax + ecx * 2 ] dx
inc ecx
cmp ebx [ esi + 0x4 ]
jb r-xdata
pop edx
push 0x5c
jmp r-xdata
sub edi 0x12
je r-xdata
inc ebx
jmp r-xdata
push 0xa
jmp r-xdata
sub edi 0x4
je r-xdata
push 0xd
jmp r-xdata
dec edi
dec edi
jne r-xdata
push 0x9
jmp r-xdata
sub_40bc10
push ebp
mov ebp esp
mov eax 0x2014
call sub_41a670
push ebx
mov ebx ecx
cmp [ ebx ] 0x0
push esi
push edi
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x8 ] eax
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax 0x0
mov ecx r--data
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
push [ ebp + 0x8 ]
push eax
call sub_41a377
pop ecx
pop ecx
mov ecx r--data
dec eax
je r-xdata
push esi
lea eax [ ebp - 0x1014 ]
push eax
push [ ebp + 0x8 ]
call sub_411683
lea eax [ ebp - 0x1014 ]
push eax
mov [ ebp - 0x15 ] 0x0
call sub_41a5e0
pop ecx
push eax
lea eax [ ebp - 0x1014 ]
push eax
push edi
call sub_4055ad
not eax
push eax
push r--data
lea eax [ ebp - 0x14 ]
push 0xa
push eax
call sub_401b7b
add esp 0x10
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
call sub_40b898
test eax eax
je r-xdata
push esi
lea eax [ ebp - 0x2014 ]
push eax
push [ ebp + 0x18 ]
call sub_411683
lea eax [ ebp - 0x2014 ]
push eax
call sub_41a5e0
pop ecx
push eax
lea eax [ ebp - 0x2014 ]
push eax
push edi
call sub_4055ad
mov edi eax
mov ecx r--data
jmp r-xdata
dec eax
jne r-xdata
lea ebx [ eax + 0x12 ]
cmp [ ebx ] 0x22
jne r-xdata
push 0x1
push ecx
push 0xffffffff
call sub_4055ad
cmp [ ebp + 0x18 ] 0x0
mov edi eax
mov esi 0x1000
je r-xdata
mov ecx r--data
jmp r-xdata
push 0xc
push ebx
call sub_41c5e9
pop ecx
pop ecx
test eax eax
je r-xdata
inc ebx
inc ebx
mov esi 0xff
sub eax ebx
sar eax 0x1
mov esi eax
jmp r-xdata
mov edi [ ebp + 0xc ]
test esi esi
jbe r-xdata
neg eax
sbb eax eax
and eax ecx
mov esi eax
mov eax [ ebp + 0x10 ]
lea ecx [ eax - 0x1 ]
cmp esi ecx
jbe r-xdata
xor eax eax
push 0x22
push edi
mov [ edi + esi * 2 ] ax
call sub_41c60f
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
push ebx
push edi
call sub_41c413
add esp 0xc
xor ecx ecx
mov [ eax ] cx
jmp r-xdata
sub_40bd68
push ebp
mov ebp esp
sub esp 0x400
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x400 ]
push 0x1
push 0x200
push eax
push r--data
call sub_40bc10
lea eax [ ebp - 0x400 ]
push 0x2a
push eax
call sub_41c5e9
pop ecx
pop ecx
mov edi eax
push 0x64
pop ebx
test edi edi
je r-xdata
mov ecx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov [ ecx ] ebx
mov [ esi ] ebx
lea eax [ ebp - 0x400 ]
push eax
call j_sub_411a6f
mov esi [ ebp + 0xc ]
add edi 0x2
push edi
mov [ esi ] eax
call j_sub_411a6f
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ecx ] ebx
jne r-xdata
cmp [ esi ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_40bde9
push ebp
mov ebp esp
sub esp 0x800
push esi
push edi
push 0x0
mov edi ecx
call [ GetModuleHandleW@IAT ]
push 0x5
mov esi r--data
push esi
push eax
call [ FindResourceW@IAT ]
test eax eax
je r-xdata
mov eax r--data
push eax
push 0x1
push 0x400
lea ecx [ ebp - 0x800 ]
push ecx
push eax
mov ecx edi
call sub_40bc10
lea eax [ ebp - 0x800 ]
push esi
push eax
call sub_41a5a1
neg eax
sbb al al
pop ecx
inc al
pop ecx
mov [ edi + 0x10 ] al
mov [ edi + 0x10 ] 0x1
jmp r-xdata
pop edi
pop esi
leave
retn
sub_40be4f
push ebp
mov ebp esp
sub esp 0x850
push ebx
push esi
push edi
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
mov [ ebp - 0x20 ] ecx
call sub_40bd68
mov [ ebp - 0x1 ] al
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x50 ]
push eax
push [ ebp + 0x8 ]
call [ GetClientRect@IAT ]
mov ecx [ ebp - 0x28 ]
sub ecx [ ebp - 0x30 ]
mov esi [ ebp - 0x24 ]
sub esi [ ebp - 0x2c ]
mov eax [ ebp - 0x48 ]
inc ecx
inc esi
mov ebx ecx
mov edi esi
sub edi [ ebp - 0x44 ]
sub ebx eax
cmp [ ebp - 0x1 ] 0x0
mov [ ebp - 0x8 ] ebx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
mov esi 0x400
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push 0x8
call [ GetSystemMetrics@IAT ]
push 0x5
push [ ebp + 0x8 ]
sub edi eax
call [ GetWindow@IAT ]
and [ ebp + 0x8 ] 0x0
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
push esi
lea eax [ ebp - 0x850 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowTextW@IAT ]
push [ ebp + 0xc ]
mov ecx [ ebp - 0x20 ]
push 0x1
push esi
lea eax [ ebp - 0x850 ]
push eax
push eax
call sub_40bc10
lea eax [ ebp - 0x850 ]
push eax
push [ ebp + 0x8 ]
call [ SetWindowTextW@IAT ]
jmp r-xdata
mov esi 0x400
imul eax [ ebp - 0x10 ]
cdq
push 0x64
pop ebx
idiv ebx
add eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x44 ]
imul eax [ ebp - 0xc ]
cdq
idiv ebx
add eax edi
mov [ ebp - 0x18 ] eax
mov eax ecx
sub eax [ ebp - 0x14 ]
cdq
sub eax edx
mov ebx eax
mov eax esi
sub eax [ ebp - 0x18 ]
sar ebx 0x1
add ebx [ ebp - 0x30 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
add esi [ ebp - 0x2c ]
test ebx ebx
jge r-xdata
test eax eax
jne r-xdata
test esi esi
jge r-xdata
xor ebx ebx
cmp [ ebp + 0x8 ] 0x200
jge r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
push 0xfffffff0
push [ ebp + 0x8 ]
mov [ ebp - 0x1c ] 0x204
call [ GetWindowLongW@IAT ]
test eax 0x800
jne r-xdata
xor esi esi
push esi
lea eax [ ebp - 0x850 ]
push eax
push [ ebp + 0x10 ]
call [ GetWindowTextW@IAT ]
cmp [ ebp - 0x850 ] 0x0
je r-xdata
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push esi
push ebx
push 0x0
push [ ebp + 0x8 ]
call [ SetWindowPos@IAT ]
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
mov ebx [ ebp - 0x8 ]
mov [ ebp - 0x1c ] 0x206
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push [ ebp + 0xc ]
mov ecx [ ebp - 0x20 ]
push 0x1
push esi
lea eax [ ebp - 0x850 ]
push eax
push eax
call sub_40bc10
lea eax [ ebp - 0x850 ]
push eax
push [ ebp + 0x10 ]
call [ SetWindowTextW@IAT ]
push 0x2
push [ ebp + 0x10 ]
call [ GetWindow@IAT ]
mov [ ebp + 0x10 ] eax
cmp eax [ ebp - 0x8 ]
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
push [ ebp + 0x10 ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x34 ]
sub eax [ ebp - 0x3c ]
push 0x204
inc eax
imul eax [ ebp - 0xc ]
cdq
push 0x64
pop ecx
idiv ecx
push eax
mov eax [ ebp - 0x38 ]
sub eax [ ebp - 0x40 ]
inc eax
imul eax [ ebp - 0x10 ]
cdq
idiv ecx
push eax
mov eax [ ebp - 0x3c ]
sub eax edi
sub eax [ ebp - 0x2c ]
imul eax [ ebp - 0xc ]
cdq
idiv ecx
push eax
mov eax ebx
cdq
sub eax edx
mov ecx eax
mov eax [ ebp - 0x40 ]
sar ecx 0x1
sub eax ecx
sub eax [ ebp - 0x30 ]
push 0x64
imul eax [ ebp - 0x10 ]
pop ecx
cdq
idiv ecx
push eax
push 0x0
push [ ebp + 0x10 ]
call [ SetWindowPos@IAT ]
inc [ ebp + 0x8 ]
sub_40c0b2
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
cmp eax 0x8
jb r-xdata
push ebx
push ebp
shl eax 0xa
add eax rw-data
push esi
mov esi eax
xor eax eax
mov ebp rw-data
push edi
mov ecx ebp
mov [ esi ] ax
call sub_40b890
mov ebx [ LoadStringW@IAT ]
mov edi 0x200
test al al
jne r-xdata
xor eax eax
mov [ rw-data ] eax
push edi
push esi
push [ esp + 0x1c ]
push [ rw-data ]
call ebx
push edi
push esi
push [ esp + 0x1c ]
push [ rw-data ]
call ebx
test eax eax
jne r-xdata
push 0x0
push 0x0
push edi
push esi
push esi
mov ecx ebp
call sub_40bc10
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
sub_40c12e
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x4 ]
push esi
mov esi [ eax ]
xor esi [ ecx ]
mov [ edx ] esi
mov esi [ eax + 0x4 ]
xor esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ eax + 0x8 ]
xor esi [ ecx + 0x8 ]
mov [ edx + 0x8 ] esi
mov eax [ eax + 0xc ]
xor eax [ ecx + 0xc ]
pop esi
mov [ edx + 0xc ] eax
retn 0xc
sub_40c160
push ebp
mov ebp esp
and esp 0xfffffff0
push ecx
cmp [ ebp + 0xc ] 0x0
mov eax [ ebp + 0x10 ]
push ebx
push esi
lea ebx [ ecx + 0x8 ]
movdqu xmm1 [ ebx ]
push edi
mov edi [ ebp + 0x8 ]
mov [ esp + 0xc ] eax
lea esi [ ecx + 0x18 ]
jbe r-xdata
pop edi
pop esi
movdqu [ ebx ] xmm1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax edi
movdqu xmm2 [ eax ]
mov eax [ ecx + 0x4 ]
mov edx eax
shl edx 0x4
add edx esi
movdqu xmm0 [ edx ]
add edi 0x10
dec eax
pxor xmm0 xmm2
test eax eax
jle r-xdata
cmp [ ecx + 0x1 ] 0x0
movdqu xmm3 [ esi ]
aesdeclast xmm0 xmm3
je r-xdata
mov edx eax
shl edx 0x4
add edx esi
mov eax [ esp + 0xc ]
add [ esp + 0xc ] 0x10
dec [ ebp + 0xc ]
movdqa xmm1 xmm2
movdqu [ eax ] xmm0
jne r-xdata
pxor xmm0 xmm1
movdqu xmm3 [ edx ]
dec eax
sub edx 0x10
aesdec xmm0 xmm3
test eax eax
jg r-xdata
sub_40c1f2
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
push edi
push 0x20
push [ ebp + 0x8 ]
mov edi ecx
mov ebx [ edi + 0x4 ]
lea eax [ ebp - 0x38 ]
push eax
mov [ ebp - 0x4 ] edi
sub ebx 0x6
call sub_41be10
xor eax eax
add esp 0xc
xor edx edx
cmp ebx eax
mov [ ebp + 0x8 ] eax
jle r-xdata
cmp edx [ edi + 0x4 ]
jg r-xdata
cmp edx [ edi + 0x4 ]
jg r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax ebx
shl eax 0x2
lea ecx [ ebp + eax - 0x3b ]
mov [ ebp - 0xc ] ecx
lea ecx [ ebp + eax - 0x3a ]
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp + eax - 0x39 ]
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x8 ] rw-data
cmp eax ebx
jge r-xdata
push 0x3
lea ecx [ ebp - 0x34 ]
pop edi
cmp ebx 0x1
jle r-xdata
cmp [ ebp + 0x8 ] 0x4
jne r-xdata
lea ecx [ ebp + eax * 4 - 0x38 ]
mov al [ ecx - 0x4 ]
xor [ ecx ] al
inc ecx
dec esi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
test ebx ebx
jle r-xdata
lea ecx [ ebp - 0x34 ]
lea edi [ ebx - 0x1 ]
cmp eax ebx
jl r-xdata
inc edx
and [ ebp + 0x8 ] 0x0
lea esi [ esi + edx * 4 ]
lea edi [ edi + esi * 4 + 0x18 ]
mov esi ecx
inc eax
add ecx 0x4
inc [ ebp + 0x8 ]
cmp eax ebx
movsd [ edi ] [ esi ]
mov edi [ ebp - 0x4 ]
jl r-xdata
push 0x4
pop esi
movzx eax [ ebp - 0x2c ]
mov al [ eax + rw-data ]
xor [ ebp - 0x28 ] al
movzx eax [ ebp - 0x2b ]
mov al [ eax + rw-data ]
xor [ ebp - 0x27 ] al
movzx eax [ ebp - 0x2a ]
mov al [ eax + rw-data ]
xor [ ebp - 0x26 ] al
movzx eax [ ebp - 0x29 ]
mov al [ eax + rw-data ]
xor [ ebp - 0x25 ] al
push 0x3
lea ecx [ ebp - 0x24 ]
pop edi
cmp edx [ edi + 0x4 ]
jle r-xdata
cmp edx [ edi + 0x4 ]
jg r-xdata
mov al [ ecx + esi - 0x4 ]
xor [ ecx + esi ] al
inc esi
cmp esi 0x4
jl r-xdata
add ecx 0x4
dec edi
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp esi 0x4
jge r-xdata
mov al [ ecx - 0x4 ]
xor [ ecx ] al
inc ecx
dec esi
jne r-xdata
dec edi
jne r-xdata
mov eax [ ebp - 0xc ]
movzx ecx [ eax ]
mov al [ ebp - 0x38 ]
xor al [ ecx + rw-data ]
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x38 ] al
movzx ecx [ ecx ]
mov cl [ ecx + rw-data ]
xor [ ebp - 0x37 ] cl
mov ecx [ ebp - 0x14 ]
movzx ecx [ ecx ]
mov cl [ ecx + rw-data ]
xor [ ebp - 0x36 ] cl
mov ecx [ ebp - 0x18 ]
movzx ecx [ ecx ]
mov cl [ ecx + rw-data ]
xor [ ebp - 0x35 ] cl
mov ecx [ ebp - 0x8 ]
xor al [ ecx ]
inc [ ebp - 0x8 ]
mov [ ebp - 0x38 ] al
cmp ebx 0x8
je r-xdata
cmp ecx ebx
jge r-xdata
xor esi esi
jmp r-xdata
push 0x4
pop esi
mov edi [ ebp - 0x4 ]
cmp [ ebp + 0x8 ] 0x4
jne r-xdata
lea eax [ ebp + ecx * 4 - 0x38 ]
cmp ecx ebx
jl r-xdata
inc edx
and [ ebp + 0x8 ] 0x0
lea esi [ esi + edx * 4 ]
lea edi [ edi + esi * 4 + 0x18 ]
mov esi eax
inc ecx
add eax 0x4
inc [ ebp + 0x8 ]
cmp ecx ebx
movsd [ edi ] [ esi ]
mov edi [ ebp - 0x4 ]
jl r-xdata
mov esi [ ebp + 0x8 ]
cmp esi 0x4
jge r-xdata
sub_40c3b7
push ebp
mov ebp esp
sub esp 0x1c
xor eax eax
push edi
inc eax
mov edi ecx
cmp [ edi + 0x4 ] eax
mov [ ebp - 0x8 ] eax
jle r-xdata
pop edi
leave
retn
lea eax [ edi + 0x28 ]
push ebx
mov [ ebp - 0x4 ] eax
push esi
movzx edx [ ecx + 0x1 ]
movzx ebx [ ecx - 0x1 ]
mov dl [ eax + edx * 4 + rw-data ]
xor dl [ eax + ebx * 4 + rw-data ]
movzx ebx [ ecx - 0x2 ]
xor dl [ eax + ebx * 4 + rw-data ]
movzx ebx [ ecx ]
xor dl [ eax + ebx * 4 + rw-data ]
add ecx 0x4
mov [ esi ] dl
add esi 0x4
dec [ ebp - 0xc ]
jne r-xdata
inc eax
cmp eax 0x4
jl r-xdata
mov ecx [ ebp - 0x4 ]
lea esi [ ebp + eax - 0x1c ]
add ecx 0x2
mov [ ebp - 0xc ] 0x4
push 0x10
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x4 ]
call sub_41be10
add [ ebp - 0x4 ] 0x10
add esp 0xc
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi + 0x4 ]
jl r-xdata
xor eax eax
pop esi
pop ebx
sub_40c449
push ebp
mov ebp esp
sub esp 0x304
push ebx
push esi
xor eax eax
xor ecx ecx
inc eax
mov esi 0x11b
push edi
mov edx eax
and dl 0x80
movsx edx dl
mov [ ebp + ecx - 0x304 ] al
mov [ ebp + ecx - 0x205 ] al
mov [ ebp + eax - 0x104 ] cl
inc ecx
neg edx
sbb edx edx
and edx esi
lea edi [ eax + eax ]
xor edx edi
xor eax edx
cmp eax 0x1
jne r-xdata
xor ecx ecx
pop edi
mov edx eax
and dl 0x80
movsx edx dl
neg edx
sbb edx edx
mov [ ecx + rw-data ] al
and edx esi
add eax eax
xor eax edx
inc ecx
cmp ecx 0x1e
jb r-xdata
xor ebx ebx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
test bl bl
je r-xdata
xor eax eax
movzx eax bl
movzx eax [ ebp + eax - 0x104 ]
lea ecx [ ebp - 0x205 ]
sub ecx eax
movzx eax [ ecx ]
jmp r-xdata
xor edx edx
movzx edx cl
movzx edx [ ebp + edx - 0x104 ]
movzx edx [ ebp + edx - 0x2eb ]
jmp r-xdata
lea ecx [ eax + eax ]
xor ecx eax
add ecx ecx
xor ecx eax
add ecx ecx
xor ecx eax
add ecx ecx
xor eax ecx
mov ecx eax
sar ecx 0x8
xor cl al
xor cl 0x63
lea eax [ ebx * 4 ]
lea edx [ eax + rw-data ]
mov [ ebx + rw-data ] cl
mov [ edx + 0x1 ] cl
mov [ edx ] cl
mov [ eax + rw-data ] cl
mov [ eax + rw-data ] cl
mov [ eax + rw-data ] cl
mov [ eax + rw-data ] cl
mov [ eax + rw-data ] cl
mov [ eax + rw-data ] cl
je r-xdata
xor ecx ecx
movzx ecx cl
movzx ecx [ ebp + ecx - 0x104 ]
movzx ecx [ ebp + ecx - 0x303 ]
jmp r-xdata
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
test cl cl
je r-xdata
xor bl bl
mov ecx esi
shl ecx 0x3
xor ecx esi
shl ecx 0x2
xor ecx esi
add ecx ecx
mov edx ecx
sar edx 0x8
movzx edx dl
movzx ecx cl
xor edx ecx
xor edx 0x5
movzx ecx [ ebp + edx - 0x104 ]
lea edx [ ebp - 0x205 ]
sub edx ecx
mov bl [ edx ]
jmp r-xdata
mov [ eax + rw-data ] cl
mov [ eax + rw-data ] cl
mov [ eax + rw-data ] cl
mov [ eax + rw-data ] cl
movzx esi bl
mov ecx esi
shl ecx 0x3
xor ecx esi
shl ecx 0x2
xor ecx esi
add ecx ecx
mov edx ecx
sar edx 0x8
xor dl cl
xor dl 0x5
je r-xdata
xor edx edx
movzx ecx bl
movzx ecx [ ebp + ecx - 0x104 ]
movzx edx [ ebp + ecx - 0x29c ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + rw-data ] bl
test bl bl
je r-xdata
xor edx edx
movzx edx [ ebp + esi - 0x104 ]
movzx edx [ ebp + edx - 0x23d ]
jmp r-xdata
movzx esi bl
mov ecx esi
shl ecx 0x2
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
test bl bl
je r-xdata
xor edx edx
movzx edx [ ebp + esi - 0x104 ]
movzx edx [ ebp + edx - 0x216 ]
jmp r-xdata
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
test bl bl
je r-xdata
xor edx edx
movzx edx [ ebp + esi - 0x104 ]
movzx edx [ ebp + edx - 0x225 ]
jmp r-xdata
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
test bl bl
je r-xdata
mov ebx [ ebp - 0x4 ]
pop esi
pop ebx
leave
retn
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x100
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ eax + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
mov [ ecx + rw-data ] dl
jl r-xdata
sub_40c745
push ebp
mov ebp esp
sub esp 0x24
xor eax eax
inc eax
mov [ ebp - 0x4 ] ecx
xor ecx ecx
push ebx
cpuid
push esi
lea esi [ ebp - 0x14 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
mov eax [ ebp - 0xc ]
mov esi [ ebp - 0x4 ]
shr eax 0x19
and al 0x1
mov [ esi ] al
mov eax [ ebp + 0x10 ]
sub eax 0x80
je r-xdata
push 0x10
pop ecx
mov [ esi + 0x4 ] 0xa
jmp r-xdata
sub eax 0x40
je r-xdata
xor eax eax
test ecx ecx
jbe r-xdata
push 0x18
pop ecx
mov [ esi + 0x4 ] 0xc
jmp r-xdata
sub eax 0x40
jne r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
jne r-xdata
push edi
mov ecx [ ebp + 0x8 ]
push 0x20
pop ecx
mov [ esi + 0x4 ] 0xe
jmp r-xdata
xor eax eax
push 0x10
push ecx
lea eax [ esi + 0x8 ]
push eax
call sub_41a3a0
add esp 0xc
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov bl [ eax + ebx ]
mov edx eax
mov edi eax
shr edx 0x2
and edi 0x3
inc eax
lea edi [ ebp + edi - 0x24 ]
mov [ edi + edx * 4 ] bl
cmp eax ecx
jb r-xdata
pop edi
mov dl [ eax + ecx ]
mov [ esi + eax + 0x8 ] dl
inc eax
cmp eax 0x10
jl r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov ecx esi
call sub_40c1f2
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
leave
retn 0x10
mov ecx esi
call sub_40c3b7
sub_40c816
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x34
push esi
mov esi ecx
test eax eax
jbe r-xdata
pop esi
leave
retn 0xc
shr eax 0x4
cmp [ esi ] 0x0
push edi
mov edi eax
je r-xdata
lea eax [ esi + 0x8 ]
push 0x10
push eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x34 ]
push eax
call sub_41be10
add esp 0xc
mov [ ebp + 0xc ] edi
test edi edi
jbe r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_40c160
jmp r-xdata
push 0x10
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x4 ]
call sub_41be10
add esp 0xc
mov edi [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
pop edi
lea eax [ esi + 0x28 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_40c12e
movzx eax [ ebp - 0x14 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x24 ] al
movzx eax [ ebp - 0x7 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x23 ] al
movzx eax [ ebp - 0xa ]
mov al [ eax + rw-data ]
mov [ ebp - 0x22 ] al
movzx eax [ ebp - 0xd ]
mov al [ eax + rw-data ]
mov [ ebp - 0x21 ] al
movzx eax [ ebp - 0x10 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x20 ] al
movzx eax [ ebp - 0x13 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x1f ] al
movzx eax [ ebp - 0x6 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x1e ] al
movzx eax [ ebp - 0x9 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x1d ] al
movzx eax [ ebp - 0xc ]
mov al [ eax + rw-data ]
mov [ ebp - 0x1c ] al
movzx eax [ ebp - 0xf ]
mov al [ eax + rw-data ]
mov [ ebp - 0x1b ] al
movzx eax [ ebp - 0x12 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x1a ] al
movzx eax [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x19 ] al
movzx eax [ ebp - 0x8 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x18 ] al
movzx eax [ ebp - 0xb ]
mov al [ eax + rw-data ]
mov [ ebp - 0x17 ] al
movzx eax [ ebp - 0xe ]
mov al [ eax + rw-data ]
mov [ ebp - 0x16 ] al
movzx eax [ ebp - 0x11 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x15 ] al
lea eax [ esi + 0x18 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push eax
call sub_40c12e
cmp [ esi + 0x1 ] 0x0
je r-xdata
mov ecx eax
shl ecx 0x4
lea ecx [ ecx + esi + 0x18 ]
dec eax
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0x8 ] eax
mov eax [ edi ]
mov [ ebp - 0x34 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x30 ] eax
mov eax [ edi + 0x8 ]
mov [ ebp - 0x2c ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebx ] eax
mov eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebx + 0xc ] eax
add edi 0x10
add ebx 0x10
dec [ ebp + 0xc ]
jne r-xdata
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push eax
call sub_40c12e
push [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_40c12e
movzx eax [ ebp - 0x14 ]
mov eax [ eax * 4 + rw-data ]
movzx ecx [ ebp - 0x7 ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0xa ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0xd ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x13 ]
mov [ ebp - 0x24 ] eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x6 ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x9 ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0xf ]
mov [ ebp - 0x20 ] eax
movzx eax [ ebp - 0xc ]
mov eax [ eax * 4 + rw-data ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x12 ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x5 ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0xb ]
sub [ ebp + 0x10 ] 0x10
mov [ ebp - 0x1c ] eax
movzx eax [ ebp - 0x8 ]
mov eax [ eax * 4 + rw-data ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0xe ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x11 ]
xor eax [ ecx * 4 + rw-data ]
dec [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ esi + 0x4 ]
shl eax 0x4
lea eax [ eax + esi + 0x18 ]
push eax
push edi
lea eax [ ebp - 0x14 ]
push eax
call sub_40c12e
movzx eax [ ebp - 0x14 ]
mov eax [ eax * 4 + rw-data ]
movzx ecx [ ebp - 0x7 ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0xa ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0xd ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x13 ]
mov [ ebp - 0x24 ] eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x6 ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x9 ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0xf ]
mov [ ebp - 0x20 ] eax
movzx eax [ ebp - 0xc ]
mov eax [ eax * 4 + rw-data ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x12 ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x5 ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0xb ]
mov [ ebp - 0x1c ] eax
movzx eax [ ebp - 0x8 ]
mov eax [ eax * 4 + rw-data ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0xe ]
xor eax [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x11 ]
xor eax [ ecx * 4 + rw-data ]
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x4 ]
dec eax
cmp eax 0x1
jle r-xdata
pop ebx
sub_40cba9
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
jne r-xdata
pop esi
retn
push r--data
call [ LoadLibraryW@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x1
push edi
mov edi [ GetProcAddress@IAT ]
push r--data
push eax
call edi
push r--data
push [ esi ]
mov [ esi + 0x8 ] eax
call edi
mov [ esi + 0xc ] eax
pop edi
sub_40cbe8
push ebp
mov ebp esp
push ebx
xor ebx ebx
push esi
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
and ecx 0xf
mov eax esi
xor edx edx
sub eax ecx
cmp [ ebp + 0x14 ] bl
setne dl
cmp [ ebp + 0x10 ] bl
je r-xdata
mov ecx rw-data
call sub_40cba9
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
call [ GetCurrentProcessId@IAT ]
xor ecx ecx
cmp esi ebx
jbe r-xdata
push edx
push eax
push [ ebp + 0x8 ]
call ecx
test eax eax
jne r-xdata
push edx
push eax
push [ ebp + 0x8 ]
call ecx
test eax eax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
mov dl al
add dl 0x4b
push r--data
jmp r-xdata
push r--data
mov eax [ ebp + 0x8 ]
add eax ecx
mov bl dl
add bl cl
xor [ eax ] bl
inc ecx
cmp ecx esi
jb r-xdata
mov esi rw-data
push esi
call sub_406381
pop ecx
pop ecx
mov ecx esi
call sub_401000
push 0x2
mov ecx esi
call j_sub_40629a
jmp r-xdata
sub_40ccac
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi ecx
cmp eax esi
jb r-xdata
add eax eax
push eax
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call sub_41be10
movzx eax [ edi + 0x101 ]
add esp 0xc
push eax
push [ ebp + 0x18 ]
lea eax [ esi + esi ]
push eax
push [ ebp + 0x10 ]
call sub_40cbe8
pop edi
pop esi
pop ebp
retn 0x14
mov eax esi
sub_40cced
cmp [ ecx + 0x100 ] 0x0
je r-xdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ ecx ] ax
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push 0x0
push esi
push edi
push 0x80
push ecx
call sub_40ccac
xor eax eax
mov [ edi + esi * 2 - 0x2 ] ax
pop edi
pop esi
jmp r-xdata
retn 0x8
sub_40cd26
push esi
push edi
mov edi [ esp + 0xc ]
xor eax eax
mov esi ecx
cmp [ edi ] ax
jne r-xdata
push 0x1
push 0x80
push esi
push edi
mov [ esi + 0x100 ] 0x1
call sub_41a32f
pop ecx
inc eax
push eax
push edi
mov ecx esi
call sub_40ccac
push 0x100
push eax
push esi
mov [ esi + 0x100 ] al
call sub_41a3a0
add esp 0xc
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_40cd71
push ebp
mov ebp esp
sub esp 0x200
push esi
mov esi 0x80
push esi
lea eax [ ebp - 0x100 ]
push eax
call sub_40cced
mov ecx [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x200 ]
push eax
call sub_40cced
lea eax [ ebp - 0x200 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
call sub_41a5a1
neg eax
pop ecx
sbb al al
pop ecx
inc al
mov edx esi
lea ecx [ ebp - 0x100 ]
mov [ ecx ] 0x0
inc ecx
dec edx
jne r-xdata
lea ecx [ ebp - 0x200 ]
mov [ ecx ] 0x0
inc ecx
dec esi
jne r-xdata
pop esi
leave
retn 0x4
sub_40ce09
push ebp
mov ebp esp
sub esp 0x1c
push esi
xor esi esi
push esi
push esi
push esi
push esi
lea eax [ ebp - 0x1c ]
push eax
call [ PeekMessageW@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn
push esi
push esi
push esi
lea eax [ ebp - 0x1c ]
push eax
call [ GetMessageW@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageW@IAT ]
sub_40ce48
push ebp
mov ebp esp
sub esp 0x12c
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
mov edi 0x400
jne r-xdata
lea eax [ ebp - 0x64 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4107ed
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
push ebx
push esi
xor eax eax
push rw-data
mov [ esi ] ax
lea eax [ ebp - 0x64 ]
push eax
push 0x0
push edi
call [ GetNumberFormatW@IAT ]
xor eax eax
pop edi
mov [ esi + ebx * 2 - 0x2 ] ax
pop esi
pop ebx
leave
retn 0x10
push 0x64
lea eax [ ebp - 0x12c ]
push eax
push 0xf
push edi
call [ GetLocaleInfoW@IAT ]
mov ax [ ebp - 0x12c ]
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] ax
mov [ rw-data ] rw-data
sub_40cecf
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xf4240
jbe r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
shr eax 0x8
shr [ ebp + 0xc ] 0x8
cmp [ ebp + 0xc ] eax
jae r-xdata
xor eax eax
jmp r-xdata
imul eax eax 0x64
xor edx edx
div [ ebp + 0xc ]
push 0x64
pop eax
jmp r-xdata
pop ebp
retn 0x8
sub_40cf03
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ SHGetMalloc@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push 0x0
call [ SHGetSpecialFolderLocation@IAT ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call [ SHGetPathFromIDListW@IAT ]
mov eax [ ebp - 0x8 ]
push [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
leave
retn 0x8
sub_40cf3d
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
xor ecx ecx
mov [ eax ] cx
retn 0x4
push esi
mov [ eax ] dx
inc eax
inc eax
inc ecx
inc ecx
movzx esi [ ecx + 0x2 ]
cmp si dx
jne r-xdata
movzx edx [ ecx ]
cmp dx 0x5c
jne r-xdata
pop esi
cmp si 0x6e
jne r-xdata
push 0x5c
push 0xa
jmp r-xdata
cmp [ ecx ] 0x0
jne r-xdata
pop edx
mov [ eax ] dx
inc eax
inc eax
add ecx 0x4
jmp r-xdata
sub_40cf89
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
push edi
push 0x68
push [ rw-data ]
call [ GetDlgItem@IAT ]
cmp [ rw-data ] 0x0
mov esi [ SendMessageW@IAT ]
mov edi eax
mov [ ebp - 0x4 ] edi
mov ebx 0xb1
jne r-xdata
mov edi 0x5f5e100
push edi
push edi
push ebx
push [ ebp - 0x4 ]
call esi
lea eax [ ebp - 0x60 ]
push eax
push 0x0
push 0x43a
push [ ebp - 0x4 ]
mov [ ebp - 0x60 ] 0x5c
call esi
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x47 ] 0x0
mov [ ebp - 0x5c ] eax
je r-xdata
mov ecx [ rw-data ]
call sub_418d09
push 0x5
push edi
call [ ShowWindow@IAT ]
push 0xffffffff
push 0x0
push ebx
push edi
call esi
push r--data
push 0x0
push 0xc2
push edi
call esi
mov [ rw-data ] 0x1
lea ecx [ ebp - 0x60 ]
push ecx
push eax
push 0x444
push [ ebp - 0x4 ]
call esi
push [ ebp + 0xc ]
push 0x0
push 0xc2
push [ ebp - 0x4 ]
call esi
push edi
push edi
push ebx
push [ ebp - 0x4 ]
call esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x58 ]
and ecx 0xbfffffff
or ecx eax
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x4c ] 0xa0
mov [ ebp - 0x5c ] 0x40000001
push r--data
push 0x0
push 0xc2
push [ ebp - 0x4 ]
call esi
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebp - 0x58 ]
and eax 0xfffffffe
or eax 0x40000000
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x60 ]
push eax
push 0x1
push 0x444
push [ ebp - 0x4 ]
call esi
sub_40d09d
push ebp
mov ebp esp
mov eax 0x2800
call sub_41a670
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
inc [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
leave
retn
lea ecx [ ebp + 0xc ]
push ecx
push eax
lea eax [ ebp - 0x2800 ]
push eax
call [ wvsprintfW@IAT ]
lea eax [ ebp - 0x2800 ]
push eax
push 0x1
call sub_40cf89
sub_40d0df
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
push 0x0
push 0x0
push r--data
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_40608b
test al al
jne r-xdata
xor eax eax
inc eax
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
push esi
push 0x65
mov [ rw-data ] esi
mov esi [ SetDlgItemTextW@IAT ]
push edi
call esi
push [ rw-data ]
push 0x66
push edi
call esi
dec eax
jne r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ebp + 0x10 ]
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
push 0x800
push [ rw-data ]
push 0x66
push edi
call [ GetDlgItemTextW@IAT ]
push 0x1
jmp r-xdata
dec eax
je r-xdata
push edi
call [ EndDialog@IAT ]
jmp r-xdata
push 0x0
sub_40d168
push ebp
mov ebp esp
sub esp 0x100
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push esi
push esi
push r--data
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_40608b
test al al
jne r-xdata
xor eax eax
inc eax
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
push [ ebp + 0x14 ]
push 0x66
push edi
call [ SetDlgItemTextW@IAT ]
dec eax
jne r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ebp + 0x10 ]
dec eax
je r-xdata
pop edi
pop esi
leave
retn 0x10
mov esi 0x80
push esi
lea eax [ ebp - 0x100 ]
push eax
push 0x65
push edi
call [ GetDlgItemTextW@IAT ]
lea eax [ ebp - 0x100 ]
push eax
mov ecx rw-data
call sub_40cd26
push esi
lea eax [ ebp - 0x100 ]
push eax
call sub_40cc96
push 0x1
jmp r-xdata
dec eax
je r-xdata
push edi
call [ EndDialog@IAT ]
jmp r-xdata
push esi
sub_40d22f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
push 0x0
push 0x0
push r--data
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_40608b
test al al
jne r-xdata
xor eax eax
inc eax
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
push [ esi ]
mov [ rw-data ] esi
dec eax
jne r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ebp + 0x10 ]
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
mov eax [ rw-data ]
push [ eax + 0x4 ]
push [ eax ]
push 0x65
push edi
call [ GetDlgItemTextW@IAT ]
push 0x1
jmp r-xdata
dec eax
je r-xdata
push edi
call [ EndDialog@IAT ]
jmp r-xdata
push 0x0
sub eax 0x64
je r-xdata
mov eax [ rw-data ]
push 0x0
push [ eax ]
call sub_40a108
push eax
mov eax [ rw-data ]
push [ eax ]
push 0x8e
call sub_40c0b2
push eax
push edi
call sub_405120
test al al
je r-xdata
mov eax [ rw-data ]
push [ eax ]
jmp r-xdata
push 0x65
push edi
call [ SetDlgItemTextW@IAT ]
sub_40d2e8
push ebp
mov ebp esp
sub esp 0x800
push esi
mov esi [ SetEnvironmentVariableW@IAT ]
push edi
push [ ebp + 0x8 ]
push r--data
call esi
push 0x400
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0x8 ]
call sub_410843
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
leave
retn 0x4
jmp r-xdata
movzx eax [ edi ]
push eax
call sub_410775
test al al
jne r-xdata
inc edi
inc edi
push edi
push r--data
call esi
sub_40d33c
push ebp
mov ebp esp
sub esp 0x804
and [ ebp - 0x4 ] 0x0
push esi
push edi
mov esi 0x400
push esi
lea eax [ ebp - 0x804 ]
push eax
push [ ebp + 0x8 ]
call sub_410843
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
leave
retn 0x4
push ebx
mov ebx 0x800
push esi
lea eax [ ebp - 0x804 ]
push eax
push edi
call sub_410843
mov edi eax
test edi edi
jne r-xdata
cmp [ ebp - 0x804 ] 0x2f
je r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x1
je r-xdata
pop ebx
movzx eax [ ebp - 0x802 ]
push eax
call CharUpperW
sub eax 0x44
je r-xdata
cmp [ ebp - 0x804 ] 0x2d
jne r-xdata
push ebx
lea eax [ ebp - 0x800 ]
push eax
push rw-data
dec eax
je r-xdata
movzx eax [ ebp - 0x800 ]
push eax
call CharUpperW
cmp eax 0x4c
jne r-xdata
sub eax 0xb
je r-xdata
cmp [ ebp - 0x7fe ] 0x0
jne r-xdata
lea eax [ ebp - 0x800 ]
push eax
mov ecx rw-data
call sub_40cd26
jmp r-xdata
sub eax 0x3
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
movzx eax [ ebp - 0x800 ]
push eax
call CharUpperW
sub eax 0x0
je r-xdata
mov [ rw-data ] 0x1
sub eax 0x31
je r-xdata
dec eax
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
sub eax 0x1e
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push ebx
lea eax [ ebp - 0x7fe ]
push eax
push rw-data
jmp r-xdata
call sub_410792
sub_40d472
push ebp
mov ebp esp
mov eax 0x2000
call sub_41a670
push ebx
mov ebx ecx
push edi
mov edi [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov [ ebx ] 0x0
test edi edi
je r-xdata
mov [ eax ] 0x0
xor eax eax
movzx eax [ edi ]
test ax ax
je r-xdata
push esi
xor esi esi
xor ecx ecx
cmp ax 0xd
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
inc edi
inc edi
cmp ax 0xa
je r-xdata
mov [ edx ] ax
mov eax [ ebp + 0x14 ]
inc edx
add eax 0xfffffffe
inc edx
cmp ecx eax
jge r-xdata
test esi esi
jne r-xdata
mov eax edi
pop esi
jmp r-xdata
mov [ ebx ] ax
test esi esi
je r-xdata
mov ebx [ ebp + 0xc ]
xor eax eax
mov [ edx ] ax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x1
jmp r-xdata
movzx eax [ edi ]
inc ecx
test ax ax
jne r-xdata
test ebx ebx
je r-xdata
pop edi
pop ebx
leave
retn 0x10
push 0x1000
lea eax [ ebp - 0x2000 ]
push eax
push esi
call [ ExpandEnvironmentStringsW@IAT ]
push [ ebp + 0x14 ]
lea eax [ ebp - 0x2000 ]
push eax
push ebx
call sub_410792
xor eax eax
mov [ esi ] ax
movzx eax ax
inc edi
inc edi
cmp ax 0x3d
jne r-xdata
jmp r-xdata
mov esi edx
jmp r-xdata
mov [ ebx ] 0x1
sub_40d548
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi [ WaitForSingleObject@IAT ]
push edi
push 0xa
push [ ebp + 0x8 ]
call esi
mov edi 0x102
jmp r-xdata
cmp eax edi
je r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call [ PeekMessageW@IAT ]
push 0xa
push [ ebp + 0x8 ]
call esi
pop edi
pop esi
leave
retn 0x4
sub_40d587
push ebp
mov ebp esp
mov eax 0x1020
call sub_41a670
push 0x800
lea eax [ ebp - 0x1020 ]
push eax
call sub_419819
cmp [ rw-data ] 0x0
jne r-xdata
leave
retn
push 0x6
push [ rw-data ]
lea eax [ ebp - 0x1020 ]
push eax
call sub_40a108
push eax
call sub_411a07
test eax eax
jne r-xdata
push r--data
call sub_419806
lea eax [ ebp - 0x1020 ]
push eax
call sub_41a32f
xor ecx ecx
push 0x1e
mov [ ebp + eax * 2 - 0x101e ] cx
push ecx
lea eax [ ebp - 0x20 ]
push eax
call sub_41a3a0
add esp 0x10
push 0x14
pop eax
mov [ ebp - 0x10 ] ax
lea eax [ ebp - 0x1020 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x3
call [ SHFileOperationW@IAT ]
sub_40d61e
push ebp
mov ebp esp
mov eax 0x2004
call sub_41a670
push ebx
push esi
push 0x20000
call sub_41cafe
mov esi eax
pop ecx
test esi esi
jne r-xdata
xor eax eax
mov [ esi ] ax
xor ebx ebx
jmp r-xdata
mov ecx rw-data
call sub_40632c
push 0x1000
lea eax [ ebp - 0x1 ]
push eax
push 0x0
push [ edi ]
xor ecx ecx
lea edx [ ebp - 0x2004 ]
call sub_40d472
mov [ edi ] eax
test eax eax
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x2004 ] 0x7d
je r-xdata
cmp [ ebp - 0x2004 ] 0x7b
je r-xdata
lea eax [ ebp - 0x2004 ]
push eax
call sub_41a32f
add eax ebx
pop ecx
cmp eax 0xfffb
ja r-xdata
lea eax [ ebp - 0x2004 ]
push eax
push esi
call sub_41a349
push esi
call sub_41a32f
mov ebx eax
add esp 0xc
test ebx ebx
jbe r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
lea eax [ esi + ebx * 2 - 0x2 ]
lea eax [ esi + ebx * 2 ]
push r--data
push eax
call sub_41a377
pop ecx
pop ecx
dec ebx
dec eax
dec eax
test ebx ebx
ja r-xdata
cmp [ eax ] 0x20
jne r-xdata
sub_40d6ee
push ebx
push 0x1
xor ebx ebx
push esi
mov [ rw-data ] 0x1
mov [ rw-data ] ebx
mov [ rw-data ] 0x1
call [ ShowWindow@IAT ]
push ebx
push 0x2
push esi
call sub_406048
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] bl
je r-xdata
pop ebx
retn
push ebx
push 0x1
push 0x111
push esi
call [ SendMessageW@IAT ]
sub_40d740
push [ esp + 0x4 ]
push esi
call sub_41a377
pop ecx
pop ecx
xor ecx ecx
cmp [ esi ] cx
je r-xdata
retn 0x4
mov eax esi
push 0x25
pop edx
mov [ eax ] dx
cmp dx 0x5c
je r-xdata
movzx edx [ eax ]
cmp dx 0x3a
je r-xdata
cmp dx 0x2f
jne r-xdata
inc ecx
lea eax [ esi + ecx * 2 ]
cmp [ eax ] 0x0
jne r-xdata
sub_40d77d
push ebp
mov ebp esp
mov eax 0x1008
call sub_41a670
push ebx
xor ebx ebx
cmp [ rw-data ] bl
je r-xdata
pop ebx
leave
retn 0x4
cmp [ rw-data ] bx
je r-xdata
push esi
push rw-data
lea esi [ ebp - 0x1008 ]
call sub_40d740
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push 0x20006
push ebx
push ebx
push ebx
push r--data
push 0x80000001
call [ RegCreateKeyExW@IAT ]
pop esi
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_41a32f
pop ecx
lea eax [ eax + eax + 0x2 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1008 ]
push 0x1
push ebx
push eax
push [ ebp - 0x4 ]
call [ RegSetValueExW@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
sub_40d807
push ebp
mov ebp esp
mov eax 0x200c
call sub_41a670
cmp [ rw-data ] 0x0
je r-xdata
leave
retn 0x8
push esi
push [ ebp + 0x8 ]
lea esi [ ebp - 0x200c ]
call sub_40d740
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x0
push r--data
push 0x80000001
call [ RegOpenKeyExW@IAT ]
pop esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x100c ]
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea eax [ ebp - 0x200c ]
push eax
push [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x1000
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
shr [ ebp - 0x4 ] 0x1
mov eax 0x7ff
cmp [ ebp - 0x4 ] eax
jae r-xdata
push [ ebp + 0xc ]
xor ecx ecx
mov [ ebp + eax * 2 - 0x100c ] cx
lea eax [ ebp - 0x100c ]
push eax
push [ ebp + 0x8 ]
call sub_410792
mov eax [ ebp - 0x4 ]
sub_40d8b2
push ebp
mov ebp esp
mov eax 0x101c
call sub_41a670
call sub_4199d4
test al al
je r-xdata
leave
retn 0x4
push edi
push 0x5
push [ ebp + 0x8 ]
call [ GetWindow@IAT ]
and [ ebp + 0x8 ] 0x0
mov edi eax
mov [ ebp - 0x4 ] edi
test edi edi
je r-xdata
pop edi
push ebx
mov ebx [ SendMessageW@IAT ]
push esi
pop esi
pop ebx
push 0x800
lea eax [ ebp - 0x101c ]
push eax
push edi
call [ GetClassNameW@IAT ]
push r--data
lea eax [ ebp - 0x101c ]
push eax
call sub_4119e6
test eax eax
jne r-xdata
push 0x2
push edi
call [ GetWindow@IAT ]
mov edi eax
cmp edi [ ebp - 0x4 ]
je r-xdata
push 0xfffffff0
push edi
call [ GetWindowLongW@IAT ]
and eax 0x1f
cmp al 0xe
jne r-xdata
inc [ ebp + 0x8 ]
test edi edi
jne r-xdata
push 0x0
push 0x0
push 0x173
push edi
call ebx
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x8 ] 0x200
jge r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x18
push esi
call [ GetObjectW@IAT ]
push [ ebp - 0x14 ]
call sub_419991
push eax
push [ ebp - 0x18 ]
call sub_41994e
push eax
push esi
call sub_419a1e
push eax
push 0x0
push 0x172
push edi
call ebx
cmp esi [ rw-data ]
je r-xdata
push esi
call [ DeleteObject@IAT ]
sub_40d9a9
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
mov [ ecx ] ax
movzx eax [ esi ]
test ax ax
je r-xdata
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] esi
mov [ ebp + 0xb ] 0x0
movzx eax [ esi ]
cmp ax 0x2c
jne r-xdata
lea ecx [ esi + 0x2 ]
cmp [ ecx ] dx
jne r-xdata
mov [ edi ] ax
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov bl [ ebp + 0xb ]
test bl bl
je r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
push 0x22
pop edx
cmp ax dx
jne r-xdata
xor eax eax
mov [ edi ] ax
jmp r-xdata
xor eax eax
mov [ edi ] ax
push edx
push ecx
call sub_41c5e9
pop ecx
test eax eax
pop ecx
setne [ ebp + 0xb ]
mov [ ebp + 0xb ] 0x0
jmp r-xdata
mov esi ecx
mov [ edi ] dx
jmp r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
mov eax esi
jmp r-xdata
inc esi
inc esi
movzx eax [ esi ]
push eax
call sub_410775
test al al
jne r-xdata
inc esi
inc esi
movzx eax [ esi ]
test ax ax
jne r-xdata
cmp bl [ ebp + 0xb ]
jne r-xdata
inc edi
inc edi
movzx eax [ esi + 0x4 ]
cmp ax 0x2c
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
test ax ax
je r-xdata
sub_40da6f
push ebx
mov ebx [ esp + 0x8 ]
push 0x20
push ebx
call sub_41c5e9
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn 0x8
cmp [ ebx ] 0x22
jne r-xdata
push esi
push edi
push ebx
call sub_41a32f
mov edi eax
xor ecx ecx
push 0x2
pop edx
lea eax [ edi + 0x3 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_419c68
mov esi eax
lea eax [ esi + 0x2 ]
push ebx
push eax
call sub_41a377
add esp 0x10
push 0x22
pop eax
push [ esp + 0x14 ]
mov [ esi + edi * 2 + 0x2 ] ax
mov [ esi ] ax
push esi
xor eax eax
push ebx
mov [ esi + edi * 2 + 0x4 ] ax
call sub_410792
push esi
call sub_41c45d
pop ecx
pop edi
pop esi
push ebx
call sub_409e12
cmp [ eax ] 0x22
je r-xdata
sub_40daf0
push ebp
mov ebp esp
mov eax 0x1400
call sub_41a670
cmp [ ebp + 0x14 ] 0x0
push [ ebp + 0x8 ]
je r-xdata
push 0x65
push 0x66
jmp r-xdata
call sub_40c0b2
push eax
lea eax [ ebp - 0x1400 ]
push 0xa00
push eax
call sub_401b7b
add esp 0x10
lea eax [ ebp - 0x1400 ]
push eax
push 0x65
push [ rw-data ]
call [ SetDlgItemTextW@IAT ]
call sub_40ce09
xor eax eax
cmp [ rw-data ] al
sete al
leave
retn 0x10
sub_40db4f
push ebp
lea ebp [ esp - 0x68 ]
mov eax 0x1a50
call sub_41a670
push ebx
push edi
mov edi [ ebp + 0x70 ]
xor ebx ebx
push ebx
push ebx
push r--data
push [ ebp + 0x7c ]
push [ ebp + 0x78 ]
push [ ebp + 0x74 ]
push edi
call sub_40608b
test al al
je r-xdata
mov eax [ ebp + 0x74 ]
sub eax 0x110
push esi
je r-xdata
xor eax eax
inc eax
jmp r-xdata
push 0x6c
push edi
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
mov esi 0x800
push esi
push [ ebp + 0x7c ]
lea eax [ ebp - 0x19e8 ]
push eax
call sub_410792
push esi
lea eax [ ebp - 0x19e8 ]
push eax
push eax
call sub_40a00c
lea eax [ ebp - 0x19e8 ]
push eax
push 0x65
push edi
mov edi [ SetDlgItemTextW@IAT ]
call edi
push 0x100
push 0x2b4
lea eax [ ebp - 0x9e8 ]
push eax
push ebx
lea eax [ ebp - 0x19e8 ]
push eax
call [ SHGetFileInfoW@IAT ]
push ebx
push [ ebp - 0x9e8 ]
push 0x170
push 0x66
push [ ebp + 0x70 ]
call [ SendDlgItemMessageW@IAT ]
lea eax [ ebp - 0x334 ]
push eax
lea eax [ ebp - 0x19e8 ]
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp + 0x74 ] eax
cmp eax 0xffffffff
je r-xdata
dec eax
jne r-xdata
pop edi
pop ebx
add ebp 0x68
leave
retn 0x10
xor eax eax
lea eax [ ebp + 0x60 ]
push eax
lea eax [ ebp - 0x320 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ ebp + 0x50 ]
push eax
lea eax [ ebp + 0x60 ]
push eax
call [ FileTimeToSystemTime@IAT ]
push 0x32
lea eax [ ebp - 0x80 ]
push eax
push ebx
lea eax [ ebp + 0x50 ]
push eax
push 0x2
mov esi 0x400
push esi
call [ GetTimeFormatW@IAT ]
push 0x32
lea eax [ ebp - 0x1c ]
push eax
push ebx
lea eax [ ebp + 0x50 ]
push eax
push ebx
push esi
call [ GetDateFormatW@IAT ]
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x99
call sub_40c0b2
push eax
push r--data
mov ebx 0x200
lea eax [ ebp - 0x734 ]
push ebx
push eax
call sub_401b7b
add esp 0x18
lea eax [ ebp - 0x734 ]
push eax
push 0x6a
push [ ebp + 0x70 ]
call edi
push [ ebp + 0x74 ]
call [ FindClose@IAT ]
test [ ebp - 0x334 ] 0x10
jne r-xdata
movzx eax [ ebp + 0x78 ]
push 0x2
pop esi
sub eax esi
je r-xdata
push 0x0
push [ ebp - 0x9e8 ]
push 0x170
push 0x67
push [ ebp + 0x70 ]
call [ SendDlgItemMessageW@IAT ]
mov ecx [ rw-data ]
lea eax [ ebp + 0x48 ]
push eax
call sub_410ef8
lea eax [ ebp + 0x60 ]
push eax
lea eax [ ebp + 0x48 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ ebp + 0x50 ]
push eax
lea eax [ ebp + 0x60 ]
push eax
call [ FileTimeToSystemTime@IAT ]
push 0x32
lea eax [ ebp - 0x80 ]
push eax
push 0x0
lea eax [ ebp + 0x50 ]
push eax
push 0x2
push esi
call [ GetTimeFormatW@IAT ]
push 0x32
lea eax [ ebp - 0x1c ]
push eax
push 0x0
lea eax [ ebp + 0x50 ]
push eax
push 0x0
push esi
call [ GetDateFormatW@IAT ]
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x99
call sub_40c0b2
push eax
push r--data
lea eax [ ebp - 0x734 ]
push ebx
push eax
call sub_401b7b
add esp 0x18
lea eax [ ebp - 0x734 ]
push eax
push 0x6b
push [ ebp + 0x70 ]
call edi
test [ ebp - 0x334 ] 0x10
mov eax [ rw-data ]
mov ecx [ rw-data ]
je r-xdata
push 0x32
lea eax [ ebp - 0xe4 ]
push eax
push 0x1
push 0x0
push 0x0
push [ ebp - 0x318 ]
call sub_41a750
mov ecx [ ebp - 0x314 ]
xor ebx ebx
add eax ecx
adc edx ebx
push edx
push eax
call sub_40ce48
push 0x98
call sub_40c0b2
push eax
lea eax [ ebp - 0xe4 ]
push eax
push r--data
mov ebx 0x200
lea eax [ ebp - 0x734 ]
push ebx
push eax
call sub_401b7b
add esp 0x14
lea eax [ ebp - 0x734 ]
push eax
push 0x68
push [ ebp + 0x70 ]
call edi
push 0x6
sub eax 0x6a
je r-xdata
push 0x32
lea edx [ ebp - 0xe4 ]
push edx
push eax
push ecx
call sub_40ce48
push 0x98
call sub_40c0b2
push eax
lea eax [ ebp - 0xe4 ]
push eax
push r--data
lea eax [ ebp - 0x734 ]
push ebx
push eax
call sub_401b7b
add esp 0x14
lea eax [ ebp - 0x734 ]
push eax
push 0x69
push [ ebp + 0x70 ]
call edi
mov edx ecx
or edx eax
je r-xdata
push esi
push edi
call [ EndDialog@IAT ]
xor eax eax
inc eax
jmp r-xdata
push eax
call [ DestroyIcon@IAT ]
xor esi esi
jmp r-xdata
dec eax
je r-xdata
pop esi
push ebx
push ebx
push 0x171
push 0x66
push edi
call [ SendDlgItemMessageW@IAT ]
cmp eax ebx
je r-xdata
xor esi esi
inc esi
jmp r-xdata
dec eax
je r-xdata
push 0x4
jmp r-xdata
dec eax
je r-xdata
pop esi
dec eax
je r-xdata
push 0x3
jmp r-xdata
dec eax
jne r-xdata
sub_40dea3
push ebp
mov ebp esp
mov eax 0x1000
call sub_41a670
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
je r-xdata
cmp [ ebp + 0x8 ] 0x2
mov eax [ rw-data ]
mov esi eax
jne r-xdata
mov ebx [ ebp + 0x14 ]
mov esi rw-data
mov edi ebx
jmp r-xdata
push 0x800
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40a0b2
cmp [ rw-data ] 0x0
jne r-xdata
push eax
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
push 0x40
pop ecx
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ebx [ ebp + 0x14 ]
push 0x40
pop ecx
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea eax [ ebp - 0x1000 ]
push eax
push sub_40d168
push esi
push r--data
push [ rw-data ]
call [ DialogBoxParamW@IAT ]
test eax eax
jne r-xdata
xor esi esi
mov al [ ebx + 0x100 ]
pop edi
pop esi
pop ebx
leave
retn 0x10
mov esi ebx
mov edi rw-data
mov ebx [ ebp + 0x14 ]
push r--data
mov ecx ebx
call sub_40cd26
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebx + 0x100 ] 0x0
je r-xdata
sub_40df74
cmp [ rw-data ] 0x0
jne r-xdata
retn
mov eax [ esp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
push esi
push edi
call [ GetLastError@IAT ]
mov edi eax
lea eax [ esp + 0x14 ]
push eax
push 0x0
push [ esp + 0x18 ]
mov esi rw-data
push 0x1000
push esi
call sub_41a577
push esi
push r--data
call sub_40d09d
add esp 0x1c
test edi edi
je r-xdata
pop edi
pop esi
push edi
call [ SetLastError@IAT ]
sub_40dfc8
mov eax sub_429354
call sub_41a05c
push ecx
mov eax 0x6460
call sub_41a670
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push r--data
push rw-data
call sub_41a377
pop ecx
pop ecx
push r--data
mov ecx rw-data
call sub_410901
push [ ebp + 0xc ]
push rw-data
call sub_41a377
pop ecx
pop ecx
push [ ebp + 0xc ]
mov esi rw-data
mov ecx esi
call sub_40533d
and [ ebp - 0x4 ] 0x0
push 0x4
pop eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov al [ rw-data ]
mov [ rw-data ] al
mov al [ rw-data ]
push esi
lea ecx [ ebp - 0x6470 ]
mov [ rw-data ] 0x1
mov [ rw-data ] al
call sub_406f1d
lea ecx [ ebp - 0x6470 ]
mov [ ebp - 0x4 ] 0x1
call sub_408152
lea ecx [ ebp - 0x6470 ]
mov [ ebp - 0x4 ] 0x0
call sub_406e41
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x8
sub_40e0c0
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push sub_40d22f
push [ rw-data ]
push r--data
push [ rw-data ]
call [ DialogBoxParamW@IAT ]
dec eax
neg eax
sbb eax eax
inc eax
leave
retn 0x8
sub_40e0fb
push ebp
mov ebp esp
mov eax 0x1400
call sub_41a670
xor eax eax
cmp [ ebp + 0x8 ] 0x54
push esi
push [ ebp + 0xc ]
sete al
dec eax
and eax 0xfffffe82
add eax 0x20b
mov esi eax
call sub_40a108
push eax
push esi
call sub_40c0b2
push eax
lea eax [ ebp - 0x1400 ]
push 0xa00
push eax
call sub_401b7b
add esp 0x10
lea eax [ ebp - 0x1400 ]
push eax
push 0x0
call sub_40cf89
pop esi
leave
retn 0x8
sub_40e156
push ebp
mov ebp esp
mov eax 0x1048
call sub_41a670
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi ] bx
je r-xdata
pop esi
pop ebx
leave
retn 0x8
push esi
call sub_41a32f
pop ecx
cmp eax 0x7f6
jae r-xdata
push edi
push 0x3c
pop edi
push edi
lea eax [ ebp - 0x48 ]
push ebx
push eax
call sub_41a3a0
movzx ecx [ esi ]
add esp 0xc
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x44 ] 0x1c0
cmp cx 0x22
jne r-xdata
mov [ ebp - 0x38 ] esi
lea eax [ esi + 0x2 ]
mov [ ebp - 0x38 ] eax
jmp r-xdata
mov eax [ ebp - 0x34 ]
cmp eax ebx
je r-xdata
mov ecx esi
xor eax eax
cmp cx bx
je r-xdata
cmp [ ebp + 0xc ] bl
jne r-xdata
cmp [ eax ] bx
jne r-xdata
cmp [ esi + eax * 2 ] 0x20
je r-xdata
jmp r-xdata
push [ ebp - 0x38 ]
mov [ ebp - 0x2c ] 0x1
call sub_40a297
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
cmp [ rw-data ] bx
je r-xdata
lea eax [ esi + eax * 2 ]
cmp [ eax ] 0x20
jne r-xdata
cmp [ esi + eax * 2 + 0x2 ] 0x2f
je r-xdata
inc eax
cmp [ esi + eax * 2 ] bx
jne r-xdata
push [ ebp - 0x38 ]
call sub_40902d
test al al
je r-xdata
push r--data
push eax
call sub_4119e6
test eax eax
jne r-xdata
mov [ ebp - 0x34 ] rw-data
add eax 0x2
mov [ ebp - 0x34 ] eax
xor ecx ecx
mov [ eax ] cx
inc eax
lea ecx [ esi + eax * 2 ]
cmp [ ecx ] bx
jne r-xdata
cmp [ esi + eax * 2 ] 0x22
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x48 ]
push eax
call [ ShellExecuteExW@IAT ]
test eax eax
je r-xdata
push 0x800
lea eax [ ebp - 0x1048 ]
push eax
push [ ebp - 0x38 ]
call sub_40a769
lea eax [ ebp - 0x1048 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] r--data
cmp [ ecx ] 0x22
jne r-xdata
jmp r-xdata
push 0x20
pop ecx
mov [ esi + eax * 2 ] cx
pop edi
mov esi [ ShowWindow@IAT ]
mov [ ebp - 0x1 ] bl
mov edi 0x3e8
cmp [ rw-data ] bl
jne r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
cmp [ ebp + 0xc ] bl
jne r-xdata
push 0x7d0
push [ ebp - 0x10 ]
call [ WaitForInputIdle@IAT ]
push [ ebp - 0x10 ]
call sub_40d548
cmp [ rw-data ] bl
je r-xdata
push [ ebp + 0x8 ]
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] bl
je r-xdata
push [ ebp - 0x10 ]
call [ CloseHandle@IAT ]
cmp [ ebp - 0x8 ] ebx
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
call [ GetExitCodeProcess@IAT ]
test eax eax
je r-xdata
push ebx
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x1 ] 0x1
cmp [ rw-data ] bl
je r-xdata
push r--data
push [ ebp - 0x8 ]
call sub_4119e6
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
add eax edi
cmp eax [ rw-data ]
jbe r-xdata
xor eax eax
cmp [ ebp + 0xc ] bl
sete al
dec eax
and eax 0xfffffce0
add eax edi
mov [ rw-data ] eax
cmp [ ebp + 0xc ] bl
jne r-xdata
cmp [ ebp - 0x1 ] bl
je r-xdata
mov [ rw-data ] eax
cmp [ ebp + 0xc ] bl
je r-xdata
mov [ rw-data ] 0x1b58
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call esi
sub_40e377
push esi
mov esi ecx
lea ecx [ esi + 0x9444 ]
call sub_4125e9
lea ecx [ esi + 0x93e8 ]
call sub_4125e9
lea ecx [ esi + 0x938c ]
call sub_4125e9
lea ecx [ esi + 0x9330 ]
call sub_4125e9
lea ecx [ esi + 0x92d4 ]
call sub_4125e9
mov ecx esi
pop esi
jmp sub_409d84
sub_40e3b9
cmp [ rw-data ] 0x0
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x14 ]
mov [ rw-data ] eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push ebx
push ebp
push esi
mov esi [ DialogBoxParamW@IAT ]
push edi
mov ebp sub_40db4f
mov ebx r--data
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
retn 0x18
push [ esp + 0x14 ]
push ebp
push [ rw-data ]
push ebx
push [ rw-data ]
call esi
mov edi eax
cmp edi 0x4
je r-xdata
push [ esp + 0x14 ]
push sub_40d0df
push [ rw-data ]
push r--data
push [ rw-data ]
call esi
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
sub_40e449
mov eax sub_429371
call sub_41a05c
push ecx
mov eax 0xc0b0
call sub_41a670
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] esp
push ebx
lea ecx [ ebp - 0xc0c0 ]
mov [ ebp - 0x4 ] ebx
call sub_401851
push [ ebp + 0xc ]
lea ecx [ ebp - 0xc0c0 ]
mov [ ebp - 0x4 ] 0x1
call sub_401a49
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0xc0c0 ]
mov [ ebp - 0x4 ] 0x2
call sub_401797
cmp al bl
je r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
mov eax [ ebp - 0x1c ]
lea esi [ eax + eax ]
mov edi eax
lea eax [ esi + 0x2 ]
push eax
call sub_41cafe
pop ecx
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
cmp eax ebx
jne r-xdata
lea ecx [ ebp - 0xc0c0 ]
mov [ ebp - 0x4 ] bl
call sub_401228
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
push [ ebp - 0x20 ]
call sub_41a086
pop ecx
xor ecx ecx
push esi
mov [ esi + eax ] cx
push [ ebp - 0x20 ]
push eax
call sub_41be10
add esp 0xc
xor edi edi
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] edi
sub_40e541
mov eax sub_429386
call sub_41a05c
mov eax 0x1bc84
call sub_41a670
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push 0x1000
lea eax [ ebp + 0xf ]
push eax
lea eax [ ebp - 0x4440 ]
push eax
push [ ebp + 0xc ]
lea ecx [ ebp - 0x11 ]
lea edx [ ebp - 0xec90 ]
call sub_40d472
mov [ ebp + 0xc ] eax
test eax eax
je r-xdata
push ebx
push esi
push edi
mov ebx 0x800
push [ ebp - 0x10 ]
push eax
call sub_40d9a9
add [ ebp - 0x10 ] 0x2000
dec [ ebp - 0x18 ]
jne r-xdata
and [ ebp - 0x10 ] 0x0
cmp [ ebp - 0x10 ] 0xd
ja r-xdata
inc [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0xe
jb r-xdata
push 0x1000
lea eax [ ebp + 0xf ]
push eax
lea eax [ ebp - 0x4440 ]
push eax
push [ ebp + 0xc ]
lea ecx [ ebp - 0x11 ]
lea edx [ ebp - 0xec90 ]
call sub_40d472
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
jmp [ eax * 4 + r-xdata ]
mov eax [ ebp - 0x10 ]
push [ eax * 4 + rw-data ]
lea eax [ ebp - 0xec90 ]
push eax
call sub_4119e6
test eax eax
je r-xdata
jmp r-xdata
mov edi [ GetFileAttributesW@IAT ]
lea ecx [ ebp - 0x1bc90 ]
mov esi rw-data
lea eax [ ebp - 0x4440 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] 0x6
pop edi
pop esi
pop ebx
sub_40fb3c
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
push edi
push 0x1
call sub_410a29
xor ebx ebx
push ebx
call [ OleInitialize@IAT ]
mov ecx rw-data
call sub_411adc
mov esi 0x7002
push esi
push ebx
push rw-data
call sub_41a3a0
add esp 0xc
call [ GetCommandLineW@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push 0x800
mov esi rw-data
push esi
push ebx
call [ GetModuleFileNameW@IAT ]
push esi
push r--data
call [ SetEnvironmentVariableW@IAT ]
push ebx
call [ GetModuleHandleW@IAT ]
mov edi eax
push 0x64
push edi
mov [ rw-data ] edi
mov [ rw-data ] edi
call [ LoadIconW@IAT ]
push 0x65
push [ rw-data ]
mov [ rw-data ] eax
call [ LoadBitmapW@IAT ]
lea ecx [ ebp - 0x8 ]
mov [ rw-data ] eax
call sub_419bde
push esi
mov ecx rw-data
call sub_40c09b
lea ecx [ ebp - 0x60 ]
call sub_418cb5
lea ecx [ ebp - 0x34 ]
call sub_418cb5
push 0x64
call sub_41994e
push 0x64
mov [ ebp - 0x40 ] eax
call sub_41994e
push ebx
push r-xdata
mov [ ebp - 0x14 ] eax
push ebx
lea eax [ ebp - 0x60 ]
mov [ rw-data ] eax
push r--data
lea eax [ ebp - 0x34 ]
push edi
mov [ rw-data ] eax
call [ DialogBoxParamW@IAT ]
lea ecx [ ebp - 0x34 ]
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_418cda
lea ecx [ ebp - 0x60 ]
call sub_418cda
lea ecx [ ebp - 0x8 ]
call sub_419c38
cmp [ rw-data ] bl
je r-xdata
push edi
call sub_40d33c
cmp [ rw-data ] bl
je r-xdata
mov ecx rw-data
call sub_40cdf1
cmp [ rw-data ] ebx
jbe r-xdata
call sub_40d587
push edi
call sub_40d2e8
push r--data
push ebx
mov edi 0xf001f
push edi
call [ OpenFileMappingW@IAT ]
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
push [ rw-data ]
mov esi [ DeleteObject@IAT ]
call esi
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push [ rw-data ]
call sub_41a086
pop ecx
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
jmp r-xdata
push esi
push ebx
push ebx
push edi
push eax
call [ MapViewOfFile@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push eax
call esi
push edi
call [ UnmapViewOfFile@IAT ]
push esi
push edi
push rw-data
call sub_41be10
add esp 0xc
push rw-data
mov [ edi ] 0x1
call sub_40d2e8
mov eax [ rw-data ]
mov [ rw-data ] 0x1
cmp eax ebx
je r-xdata
cmp [ rw-data ] bl
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push eax
call sub_40d548
push [ rw-data ]
call [ CloseHandle@IAT ]
push 0xff
mov ecx rw-data
call sub_406257
call [ OleUninitialize@IAT ]
mov eax [ rw-data ]
pop edi
pop esi
cmp eax ebx
pop ebx
ja r-xdata
push eax
call [ Sleep@IAT ]
leave
retn 0x10
mov eax [ rw-data ]
sub_40fd6e
push ebp
mov ebp esp
sub esp 0x20
cmp [ ebp + 0x14 ] 0x0
push ebx
push esi
push edi
je r-xdata
mov ebx [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push 0x40
push [ ebp + 0x10 ]
push ebx
call sub_41be10
add esp 0xc
jmp r-xdata
mov esi [ ebp + 0x8 ]
push 0x5
pop ecx
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov eax rw-data
mov [ ebp + 0x14 ] ebx
xor ecx ecx
mov esi rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov esi [ ebp + 0x14 ]
mov edx [ esi ]
mov ecx edx
ror ecx 0x8
and ecx 0xff00ff00
rol edx 0x8
and edx 0xff00ff
or ecx edx
mov [ esi ] ecx
mov esi [ eax - 0x8 ]
mov edx [ eax ]
mov edx [ ebp + edx * 4 - 0x20 ]
mov edi [ eax - 0x4 ]
mov edi [ ebp + edi * 4 - 0x20 ]
add [ ebp + 0x14 ] 0x4
lea esi [ ebp + esi * 4 - 0x20 ]
mov [ ebp + 0x10 ] esi
mov esi [ eax + 0x4 ]
lea esi [ ebp + esi * 4 - 0x20 ]
xor edi edx
mov [ ebp - 0x4 ] esi
mov esi [ eax - 0xc ]
mov esi [ ebp + esi * 4 - 0x20 ]
mov [ ebp + 0xc ] edx
mov edx [ ebp + 0x10 ]
and edi [ edx ]
rol esi 0x5
xor edi [ ebp + 0xc ]
add esi ecx
mov ecx [ ebp - 0x4 ]
lea edx [ edi + esi + 0x5a827999 ]
add [ ecx ] edx
mov ecx [ ebp + 0x10 ]
ror [ ecx ] 0x2
add eax 0x14
mov edx rw-data
cmp eax edx
jl r-xdata
mov [ ebp + 0x14 ] 0x10
push 0x4
pop ecx
dec ecx
jmp r-xdata
mov eax [ ebp + 0x14 ]
lea ecx [ eax - 0x3 ]
and eax 0xf
lea esi [ ebx + eax * 4 ]
lea eax [ ecx - 0x5 ]
and eax 0xf
mov eax [ ebx + eax * 4 ]
lea edi [ ecx + 0x5 ]
and edi 0xf
xor eax [ ebx + edi * 4 ]
and ecx 0xf
xor eax [ ebx + ecx * 4 ]
xor eax [ esi ]
rol eax 0x1
mov [ esi ] eax
mov esi [ edx - 0x8 ]
mov ecx [ edx ]
mov ecx [ ebp + ecx * 4 - 0x20 ]
mov edi [ edx - 0x4 ]
mov edi [ ebp + edi * 4 - 0x20 ]
lea esi [ ebp + esi * 4 - 0x20 ]
mov [ ebp + 0x10 ] esi
mov esi [ edx + 0x4 ]
lea esi [ ebp + esi * 4 - 0x20 ]
xor edi ecx
mov [ ebp - 0x4 ] esi
mov esi [ edx - 0xc ]
mov esi [ ebp + esi * 4 - 0x20 ]
mov [ ebp + 0xc ] ecx
mov ecx [ ebp + 0x10 ]
and edi [ ecx ]
rol esi 0x5
xor edi [ ebp + 0xc ]
add esi eax
mov eax [ ebp - 0x4 ]
lea ecx [ edi + esi + 0x5a827999 ]
add [ eax ] ecx
mov eax [ ebp + 0x10 ]
ror [ eax ] 0x2
inc [ ebp + 0x14 ]
add edx 0x14
mov eax rw-data
cmp edx eax
jl r-xdata
mov [ ebp + 0x14 ] 0x14
mov edx eax
lea eax [ ecx + 0x1 ]
cdq
push 0x5
pop edi
idiv edi
lea eax [ ecx + 0x2 ]
mov [ esi - 0x4 ] ecx
mov [ esi ] edx
cdq
idiv edi
lea eax [ ecx + 0x3 ]
add esi 0x14
mov [ esi - 0x10 ] edx
cdq
idiv edi
lea eax [ ecx + 0x4 ]
mov [ esi - 0xc ] edx
cdq
idiv edi
mov [ esi - 0x8 ] edx
test ecx ecx
je r-xdata
mov [ rw-data ] 0x1
cmp esi rw-data
jl r-xdata
mov eax [ ebp + 0x14 ]
lea ecx [ eax - 0x3 ]
and eax 0xf
lea esi [ ebx + eax * 4 ]
lea eax [ ecx - 0x5 ]
lea edi [ ecx + 0x5 ]
and eax 0xf
mov eax [ ebx + eax * 4 ]
and ecx 0xf
and edi 0xf
xor eax [ ebx + edi * 4 ]
xor eax [ ebx + ecx * 4 ]
xor eax [ esi ]
rol eax 0x1
mov [ esi ] eax
mov ecx [ edx - 0x8 ]
mov edi [ edx ]
lea ecx [ ebp + ecx * 4 - 0x20 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ edx + 0x4 ]
lea ecx [ ebp + ecx * 4 - 0x20 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ edx - 0xc ]
mov esi [ ebp + ecx * 4 - 0x20 ]
mov ecx [ edx - 0x4 ]
mov ecx [ ebp + ecx * 4 - 0x20 ]
xor ecx [ ebp + edi * 4 - 0x20 ]
rol esi 0x5
mov edi ecx
mov ecx [ ebp + 0x10 ]
xor edi [ ecx ]
add esi eax
mov eax [ ebp - 0x4 ]
lea esi [ edi + esi + 0x6ed9eba1 ]
add [ eax ] esi
ror [ ecx ] 0x2
inc [ ebp + 0x14 ]
add edx 0x14
cmp edx rw-data
jl r-xdata
mov ecx rw-data
mov [ ebp + 0x14 ] 0x28
mov [ ebp + 0x10 ] ecx
mov eax [ ebp + 0x14 ]
lea edx [ eax - 0x3 ]
and eax 0xf
lea esi [ ebx + eax * 4 ]
lea eax [ edx - 0x5 ]
and eax 0xf
mov eax [ ebx + eax * 4 ]
lea edi [ edx + 0x5 ]
and edi 0xf
xor eax [ ebx + edi * 4 ]
and edx 0xf
xor eax [ ebx + edx * 4 ]
xor eax [ esi ]
rol eax 0x1
mov [ esi ] eax
mov edx [ ecx - 0x4 ]
mov edi [ ecx + 0x8 ]
mov esi [ ecx ]
mov esi [ ebp + esi * 4 - 0x20 ]
lea edx [ ebp + edx * 4 - 0x20 ]
lea edi [ ebp + edi * 4 - 0x20 ]
mov [ ebp - 0xc ] edx
mov edx [ edx ]
mov [ ebp - 0x8 ] edi
mov edi [ ecx - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov ecx [ ebp + ecx * 4 - 0x20 ]
mov edi [ ebp + edi * 4 - 0x20 ]
mov [ ebp + 0xc ] edx
or edx esi
and ecx edx
mov edx ecx
mov ecx [ ebp + 0xc ]
and ecx esi
or edx ecx
rol edi 0x5
add edi eax
mov eax [ ebp - 0x8 ]
lea ecx [ edx + edi - 0x70e44324 ]
add [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov eax [ ebp - 0xc ]
ror [ eax ] 0x2
inc [ ebp + 0x14 ]
add ecx 0x14
cmp ecx rw-data
mov [ ebp + 0x10 ] ecx
jl r-xdata
mov [ ebp + 0x14 ] 0x3c
mov edx rw-data
mov eax [ ebp + 0x14 ]
lea ecx [ eax - 0x3 ]
and eax 0xf
lea esi [ ebx + eax * 4 ]
lea eax [ ecx - 0x5 ]
lea edi [ ecx + 0x5 ]
and eax 0xf
mov eax [ ebx + eax * 4 ]
and ecx 0xf
and edi 0xf
xor eax [ ebx + edi * 4 ]
xor eax [ ebx + ecx * 4 ]
xor eax [ esi ]
rol eax 0x1
mov [ esi ] eax
mov ecx [ edx - 0x8 ]
mov edi [ edx ]
lea ecx [ ebp + ecx * 4 - 0x20 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ edx + 0x4 ]
lea ecx [ ebp + ecx * 4 - 0x20 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edx - 0xc ]
mov esi [ ebp + ecx * 4 - 0x20 ]
mov ecx [ edx - 0x4 ]
mov ecx [ ebp + ecx * 4 - 0x20 ]
xor ecx [ ebp + edi * 4 - 0x20 ]
rol esi 0x5
mov edi ecx
mov ecx [ ebp + 0x10 ]
xor edi [ ecx ]
add esi eax
mov eax [ ebp - 0xc ]
lea esi [ edi + esi - 0x359d3e2a ]
add [ eax ] esi
ror [ ecx ] 0x2
inc [ ebp + 0x14 ]
add edx 0x14
cmp edx rw-data
jl r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push 0x5
sub ecx eax
pop edx
mov esi [ ecx + eax ]
add [ eax ] esi
add eax 0x4
dec edx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
sub_4100ff
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x14 ]
mov ecx ebx
mov eax edx
shl ecx 0x3
shr eax 0x3
add edx ecx
and eax 0x3f
push edi
mov [ esi + 0x14 ] edx
cmp edx ecx
jae r-xdata
mov ecx ebx
shr ecx 0x1d
add [ esi + 0x18 ] ecx
lea ecx [ eax + ebx ]
cmp ecx 0x3f
jbe r-xdata
inc [ esi + 0x18 ]
xor edi edi
push 0x40
pop edi
sub edi eax
push edi
push [ ebp + 0xc ]
lea eax [ eax + esi + 0x1c ]
push eax
call sub_41be10
add esp 0xc
push [ ebp + 0x14 ]
lea ecx [ esi + 0x1c ]
push ecx
lea eax [ esi + 0x5c ]
push eax
push esi
call sub_40fd6e
lea eax [ edi + 0x3f ]
cmp eax ebx
jae r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov ecx [ ebp + 0xc ]
sub ebx edi
push ebx
add edi ecx
lea eax [ eax + esi + 0x1c ]
push edi
push eax
call sub_41be10
add esp 0xc
xor eax eax
jmp r-xdata
mov [ ebp + 0x10 ] eax
cmp ebx edi
jbe r-xdata
push [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
lea eax [ eax + ecx - 0x3f ]
push eax
lea eax [ esi + 0x5c ]
push eax
push esi
call sub_40fd6e
add [ ebp + 0x10 ] 0x40
add edi 0x40
cmp [ ebp + 0x10 ] ebx
jb r-xdata
sub_4101b3
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
mov edx eax
and edx 0x3
push 0x3
pop ecx
sub ecx edx
shl ecx 0x3
cmp eax 0x4
sbb edx edx
neg edx
mov edx [ esi + edx * 4 + 0x14 ]
shr edx cl
inc eax
mov [ ebp + eax - 0x11 ] dl
cmp eax 0x8
jb r-xdata
push ebx
push edi
push [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
push 0x1
lea eax [ ebp + 0xb ]
push eax
push esi
mov [ ebp + 0xb ] 0x80
call sub_4100ff
lea edi [ esi + 0x14 ]
mov ebx 0x1c0
jmp r-xdata
mov eax [ edi ]
push [ ebp + 0x10 ]
and eax 0x1f8
cmp eax ebx
jne r-xdata
push 0x1
lea eax [ ebp + 0xb ]
push eax
push esi
mov [ ebp + 0xb ] 0x0
call sub_4100ff
push 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call sub_4100ff
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
shl eax 0x2
mov ecx [ eax + esi ]
mov [ eax + edx ] ecx
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x5
jb r-xdata
push 0x4
lea eax [ ebp - 0x4 ]
push eax
call sub_40cc96
push 0x4
lea eax [ ebp - 0x8 ]
push eax
call sub_40cc96
push 0x40
lea eax [ esi + 0x1c ]
push eax
call sub_40cc96
push 0x14
push esi
call sub_40cc96
push 0x8
push edi
call sub_40cc96
push 0x8
lea eax [ ebp - 0x10 ]
push eax
call sub_40cc96
cmp [ ebp + 0x10 ] 0x0
pop edi
pop ebx
je r-xdata
pop esi
leave
retn 0xc
push 0x40
push 0x0
add esi 0x5c
push esi
call sub_41a3a0
add esp 0xc
sub_4102ea
push ebp
mov ebp esp
sub esp 0x124
test esi esi
jne r-xdata
mov eax [ esi + 0x28 ]
push ebx
push edi
push [ eax ]
call sub_41ce51
mov [ ebp - 0x124 ] eax
mov eax [ esi + 0x28 ]
add eax 0x4
push [ eax ]
call sub_41ce51
mov [ ebp - 0x120 ] eax
mov eax [ esi + 0x28 ]
add eax 0x8
push [ eax ]
call sub_41ce51
mov [ ebp - 0x11c ] eax
mov eax [ esi + 0x28 ]
add eax 0xc
push [ eax ]
call sub_41ce51
mov [ ebp - 0x118 ] eax
mov eax [ esi + 0x28 ]
add eax 0x10
push [ eax ]
call sub_41ce51
mov [ ebp - 0x114 ] eax
mov eax [ esi + 0x28 ]
add eax 0x14
push [ eax ]
call sub_41ce51
mov [ ebp - 0x110 ] eax
mov eax [ esi + 0x28 ]
add eax 0x18
push [ eax ]
call sub_41ce51
mov [ ebp - 0x10c ] eax
mov eax [ esi + 0x28 ]
add eax 0x1c
push [ eax ]
call sub_41ce51
mov [ ebp - 0x108 ] eax
mov eax [ esi + 0x28 ]
add eax 0x20
push [ eax ]
call sub_41ce51
mov [ ebp - 0x104 ] eax
mov eax [ esi + 0x28 ]
add eax 0x24
push [ eax ]
call sub_41ce51
mov [ ebp - 0x100 ] eax
mov eax [ esi + 0x28 ]
add eax 0x28
push [ eax ]
call sub_41ce51
mov [ ebp - 0xfc ] eax
mov eax [ esi + 0x28 ]
add eax 0x2c
push [ eax ]
call sub_41ce51
mov [ ebp - 0xf8 ] eax
mov eax [ esi + 0x28 ]
push 0x30
pop edi
add eax edi
push [ eax ]
call sub_41ce51
mov [ ebp - 0xf4 ] eax
mov eax [ esi + 0x28 ]
add eax 0x34
push [ eax ]
call sub_41ce51
mov [ ebp - 0xf0 ] eax
mov eax [ esi + 0x28 ]
add eax 0x38
push [ eax ]
call sub_41ce51
mov [ ebp - 0xec ] eax
mov eax [ esi + 0x28 ]
add eax 0x3c
push [ eax ]
call sub_41ce51
mov [ ebp - 0xe8 ] eax
add esp 0x40
lea eax [ ebp - 0xec ]
mov [ ebp - 0x4 ] edi
push 0x20
lea eax [ ebp - 0x24 ]
push eax
call sub_40cc96
push 0x100
lea eax [ ebp - 0x124 ]
push eax
call sub_40cc96
leave
retn
mov ecx [ eax - 0x34 ]
mov edx [ eax ]
mov edi ecx
rol edi 0xe
mov ebx ecx
shr ecx 0x3
ror ebx 0x7
xor edi ebx
xor edi ecx
mov ecx edx
rol ecx 0xf
mov ebx edx
rol ebx 0xd
xor ecx ebx
shr edx 0xa
xor ecx edx
add edi ecx
add edi [ eax - 0x38 ]
add eax 0x4
add edi [ eax - 0x18 ]
dec [ ebp - 0x4 ]
mov [ eax + 0x4 ] edi
jne r-xdata
mov eax [ esi + 0x4 ]
mov edi [ esi ]
mov edx [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ esi + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x1c ]
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x10 ]
mov eax edx
ror eax 0xb
mov ecx edx
rol ecx 0x7
xor eax ecx
and ebx edx
mov ecx edx
ror ecx 0x6
xor eax ecx
mov ecx edx
not ecx
and ecx [ ebp - 0xc ]
xor ecx ebx
add eax ecx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + r--data ]
add [ ebp - 0x4 ] 0x4
add eax [ ebp + ecx - 0x124 ]
mov ecx [ ebp - 0xc ]
add eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x18 ]
mov ebx edi
mov [ ebp - 0x10 ] edx
lea edx [ eax + ecx ]
mov ecx edi
ror ecx 0xd
rol ebx 0xa
xor ecx ebx
mov ebx edi
ror ebx 0x2
xor ecx ebx
mov ebx [ ebp - 0x20 ]
xor ebx edi
and ebx [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
and edi [ ebp - 0x24 ]
xor ebx edi
mov edi [ ebp - 0x1c ]
add ecx ebx
cmp [ ebp - 0x4 ] 0x100
mov ebx [ ebp - 0x20 ]
mov [ ebp - 0x18 ] edi
mov edi [ ebp - 0x24 ]
mov [ ebp - 0x20 ] edi
lea edi [ ecx + eax ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] edi
jb r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0x20 ]
add eax edi
mov [ esi ] eax
mov eax [ esi + 0x4 ]
add eax ecx
mov ecx [ ebp - 0x18 ]
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x8 ]
add eax ebx
mov [ esi + 0x8 ] eax
mov eax [ esi + 0xc ]
add eax ecx
mov ecx [ ebp - 0x10 ]
mov [ esi + 0xc ] eax
mov eax [ esi + 0x10 ]
add eax edx
mov [ esi + 0x10 ] eax
mov eax [ esi + 0x14 ]
add eax ecx
mov ecx [ ebp - 0xc ]
mov [ esi + 0x14 ] eax
mov eax [ esi + 0x18 ]
add eax ecx
mov ecx [ ebp - 0x8 ]
mov [ esi + 0x18 ] eax
mov eax [ esi + 0x1c ]
add eax ecx
pop edi
mov [ esi + 0x1c ] eax
pop ebx
leave
retn
sub_4105a6
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x20 ]
and edi 0x3f
add [ esi + 0x20 ] ebx
mov [ ebp + 0xc ] ecx
adc [ esi + 0x24 ] 0x0
test ebx ebx
jbe r-xdata
xor esi esi
call sub_4102ea
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
jmp r-xdata
push 0x40
pop eax
sub eax edi
cmp ebx eax
jbe r-xdata
cmp ebx 0x40
jne r-xdata
mov ebx eax
lea eax [ esi + 0x2c ]
push ebx
mov [ esi + 0x28 ] eax
push ecx
add eax edi
push eax
call sub_41be10
add esp 0xc
mov [ esi + 0x28 ] ecx
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
ja r-xdata
xor edi edi
call sub_4102ea
add [ ebp + 0xc ] ebx
sub [ ebp + 0x10 ] ebx
add edi ebx
cmp edi 0x40
jne r-xdata
mov ecx [ ebp + 0xc ]
sub_41061f
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x0
push 0x8
push [ esi + 0x24 ]
lea ebx [ esi + 0x2c ]
push [ esi + 0x20 ]
mov [ esi + 0x28 ] ebx
call sub_41a750
mov edi [ esi + 0x20 ]
and edi 0x3f
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov [ edi + esi + 0x2c ] 0x80
jmp r-xdata
inc edi
cmp edi 0x38
jne r-xdata
and edi 0x3f
jne r-xdata
push 0x8
lea edi [ edi + esi + 0x2c ]
pop eax
mov [ ebx + edi ] 0x0
call sub_4102ea
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
shr ecx 0x18
mov [ edi ] cl
mov ecx [ ebp - 0x8 ]
shld edx ecx 0x8
shl ecx 0x8
inc edi
dec eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
call sub_4102ea
xor edi edi
mov eax edi
and eax 0x3
push 0x3
pop ecx
sub ecx eax
mov eax edi
shr eax 0x2
mov eax [ esi + eax * 4 ]
shl ecx 0x3
shr eax cl
mov ecx [ ebp + 0xc ]
mov [ edi + ecx ] al
inc edi
cmp edi 0x20
jb r-xdata
push esi
call sub_4102a4
xor esi esi
call sub_4102ea
push 0x40
push ebx
call sub_40cc96
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_4106d2
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
or eax [ ebp + 0x14 ]
je r-xdata
pop ebp
retn 0x10
push 0x0
push 0x64
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a750
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edx
push eax
call sub_41a6a0
sub_4106fd
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
cmp ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
jg r-xdata
push ecx
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4106d2
jl r-xdata
push 0x64
pop eax
jmp r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
pop ebp
retn 0x10
sub_410792
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0xc ]
test esi esi
jbe r-xdata
mov eax edi
pop edi
pop esi
retn 0xc
lea eax [ esi - 0x1 ]
push eax
push [ esp + 0x14 ]
push edi
call sub_41c413
add esp 0xc
xor eax eax
mov [ edi + esi * 2 - 0x2 ] ax
sub_4107bf
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_41a32f
pop ecx
mov ecx eax
mov eax [ ebp + 0x10 ]
sub eax ecx
dec eax
test eax eax
jle r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn 0xc
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d0e5
add esp 0xc
sub_4107ed
push ebp
mov ebp esp
sub esp 0x6c
push esi
xor esi esi
push ebx
push 0x0
push 0xa
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d130
add ecx 0x30
mov [ ebp + esi * 2 - 0x6c ] cx
inc esi
mov [ ebp + 0x8 ] eax
or eax edx
mov [ ebp - 0x4 ] ebx
mov [ ebp + 0xc ] edx
jne r-xdata
mov edx [ ebp + 0x10 ]
pop ebx
test esi esi
jbe r-xdata
xor eax eax
mov [ edx + esi * 2 ] ax
pop esi
leave
retn 0xc
lea ecx [ ebp + esi * 2 - 0x6e ]
push edi
mov di [ ecx ]
mov [ edx + eax * 2 ] di
inc eax
dec ecx
dec ecx
cmp eax esi
jb r-xdata
pop edi
sub_410843
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
jmp r-xdata
movzx eax [ edx ]
push eax
call sub_410775
test al al
jne r-xdata
inc edx
inc edx
movzx ecx [ edx ]
test cx cx
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
mov [ ebp + 0xb ] 0x0
xor eax eax
jmp r-xdata
cmp cx 0x22
jne r-xdata
movzx eax cx
push eax
call sub_410775
test al al
jne r-xdata
pop ebp
retn 0xc
test edi edi
je r-xdata
lea eax [ edx + 0x2 ]
cmp [ eax ] cx
jne r-xdata
test edi edi
je r-xdata
inc edx
inc edx
movzx ecx [ edx ]
test cx cx
jne r-xdata
lea eax [ ebx - 0x1 ]
cmp esi eax
jae r-xdata
cmp [ ebp + 0xb ] 0x0
sete al
mov [ ebp + 0xb ] al
jmp r-xdata
test edi edi
je r-xdata
pop edi
pop esi
mov eax edx
pop ebx
xor eax eax
mov [ edi + esi * 2 ] ax
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov [ edi + esi * 2 ] cx
inc esi
mov edx eax
jmp r-xdata
lea ecx [ ebx - 0x1 ]
cmp esi ecx
jae r-xdata
push 0x22
pop ecx
mov [ edi + esi * 2 ] cx
inc esi
sub_410901
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov esi ecx
test ebx ebx
jne r-xdata
mov edi [ esi + 0x4 ]
push ebx
call sub_41a32f
pop ecx
inc eax
push eax
mov ecx esi
call sub_4011a7
mov eax [ esi ]
lea eax [ eax + edi * 2 ]
push ebx
push eax
call sub_41a377
inc [ esi + 0x14 ]
pop ecx
pop ecx
pop edi
pop esi
pop ebx
retn 0x4
mov ebx r--data
sub_41093d
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
cmp eax [ esi + 0x4 ]
jb r-xdata
mov ecx [ esi ]
push edi
lea edi [ ecx + eax * 2 ]
push edi
call sub_41a32f
inc eax
add [ esi + 0x10 ] eax
mov eax [ esp + 0x10 ]
pop ecx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
mov al 0x1
pop edi
mov [ eax ] edi
xor al al
jmp r-xdata
and [ eax ] 0x0
pop esi
retn 0x4
sub_410992
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
call sub_41093d
test al al
je r-xdata
leave
retn 0x8
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_410792
mov al 0x1
sub_4109c9
test [ rw-data ] 0x1
jne r-xdata
push esi
push edi
call sub_41c29b
sub eax [ rw-data ]
mov edi 0xff
cmp eax 0x32
mov esi rw-data
jle r-xdata
or [ rw-data ] 0x1
call sub_41c29b
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
call j_sub_40ce09
call sub_41152e
test al al
je r-xdata
pop edi
pop esi
retn
push edi
mov ecx esi
call j_sub_40629a
push edi
mov ecx esi
call j_sub_40629a
sub_410a29
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
retn 0x4
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
movzx ecx [ esp + 0x4 ]
neg ecx
sbb ecx ecx
and ecx r--data
push ecx
call eax
sub_410a5d
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
push ebx
inc eax
xor ecx ecx
cpuid
push esi
lea esi [ ebp - 0x10 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
test [ ebp - 0x8 ] 0x80000
pop esi
pop ebx
je r-xdata
test [ ebp - 0x8 ] 0x200
je r-xdata
push 0x4
mov eax [ ebp - 0x4 ]
test eax 0x4000000
je r-xdata
push 0x3
jmp r-xdata
shr eax 0x19
and eax 0x1
leave
retn
push 0x2
jmp r-xdata
pop eax
leave
retn
sub_410aad
push 0xffffffff
push [ esp + 0x8 ]
call [ WaitForSingleObject@IAT ]
cmp eax 0xffffffff
jne r-xdata
retn 0x4
push esi
call [ GetLastError@IAT ]
push eax
push 0xffffffff
push r--data
mov esi rw-data
push esi
call sub_406381
add esp 0x10
push 0x2
mov ecx esi
call j_sub_40629a
pop esi
sub_410ae8
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ GetProcessAffinityMask@IAT ]
test eax eax
je r-xdata
xor eax eax
inc eax
xor ecx ecx
xor eax eax
inc ecx
add ecx ecx
jne r-xdata
inc eax
test [ ebp - 0x4 ] ecx
je r-xdata
cmp eax 0x1
jae r-xdata
leave
retn
sub_410b36
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
push 0x20
pop edi
mov esi ecx
mov [ esi ] eax
cmp eax edi
jbe r-xdata
xor ebx ebx
cmp [ esi ] ebx
jne r-xdata
mov [ esi ] edi
mov [ esi + 0x84 ] ebx
cmp [ esi ] edi
jbe r-xdata
mov [ esi ] 0x1
lea eax [ esi + 0x1a0 ]
push eax
mov [ esi + 0x194 ] bl
call [ InitializeCriticalSection@IAT ]
push ebx
push edi
push ebx
push ebx
call [ CreateSemaphoreW@IAT ]
push ebx
push 0x1
push 0x1
push ebx
mov [ esi + 0x198 ] eax
call [ CreateEventW@IAT ]
mov [ esi + 0x19c ] eax
cmp [ esi + 0x198 ] ebx
je r-xdata
mov [ esi ] edi
push r--data
mov edi rw-data
push edi
call sub_406381
pop ecx
pop ecx
push 0x2
mov ecx edi
call j_sub_40629a
cmp eax ebx
jne r-xdata
pop edi
mov [ esi + 0x18c ] ebx
mov [ esi + 0x190 ] ebx
mov [ esi + 0x88 ] ebx
mov eax esi
pop esi
pop ebx
retn 0x4
sub_410bd8
push esi
mov esi ecx
push [ esi + 0x198 ]
call sub_410aad
cmp [ esi + 0x194 ] 0x0
je r-xdata
push ebx
push edi
lea edi [ esi + 0x1a0 ]
push edi
call [ EnterCriticalSection@IAT ]
mov edx [ esp + 0x10 ]
lea eax [ esi + 0x190 ]
mov ecx [ eax ]
mov ebx [ esi + ecx * 8 + 0x8c ]
mov [ edx ] ebx
mov ecx [ esi + ecx * 8 + 0x90 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax ]
inc ecx
and ecx 0x1f
push edi
mov [ eax ] ecx
call [ LeaveCriticalSection@IAT ]
pop edi
mov al 0x1
pop ebx
xor al al
jmp r-xdata
pop esi
retn 0x4
sub_410c38
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x18c ]
sub eax [ esi + 0x190 ]
lea ebx [ esi + 0x88 ]
and eax 0x1f
mov [ ebx ] eax
je r-xdata
pop esi
pop ebx
retn
push edi
lea edi [ esi + 0x19c ]
push [ edi ]
call [ ResetEvent@IAT ]
push 0x0
push [ ebx ]
push [ esi + 0x198 ]
call [ ReleaseSemaphore@IAT ]
push [ edi ]
call sub_410aad
pop edi
sub_410c7f
mov eax sub_4293af
call sub_41a05c
push ecx
push esi
mov esi rw-data
push esi
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
inc [ rw-data ]
test eax eax
jne r-xdata
push esi
call [ LeaveCriticalSection@IAT ]
mov ecx [ ebp - 0xc ]
mov eax [ rw-data ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push 0x1b8
call sub_41a41a
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
mov [ rw-data ] eax
push 0x20
call sub_410b36
sub_410ce4
push ebx
push ebp
push esi
mov esi ecx
call sub_410c38
xor ebx ebx
push ebx
push 0x20
push [ esi + 0x198 ]
mov [ esi + 0x194 ] 0x1
call [ ReleaseSemaphore@IAT ]
mov ebp [ CloseHandle@IAT ]
cmp [ esi + 0x84 ] ebx
jbe r-xdata
lea eax [ esi + 0x1a0 ]
push eax
call [ DeleteCriticalSection@IAT ]
push [ esi + 0x198 ]
call ebp
push [ esi + 0x19c ]
call ebp
pop esi
pop ebp
pop ebx
retn
push edi
lea edi [ esi + 0x4 ]
push [ edi ]
call sub_410aad
push [ edi ]
call ebp
inc ebx
add edi 0x4
cmp ebx [ esi + 0x84 ]
jb r-xdata
pop edi
sub_410d51
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
push eax
mov esi ecx
call sub_410bd8
test al al
je r-xdata
pop esi
leave
retn
push edi
lea edi [ esi + 0x1a0 ]
push edi
call [ LeaveCriticalSection@IAT ]
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_410bd8
test al al
jne r-xdata
push [ esi + 0x19c ]
call [ SetEvent@IAT ]
push [ ebp - 0x4 ]
call [ ebp - 0x8 ]
push edi
call [ EnterCriticalSection@IAT ]
dec [ esi + 0x88 ]
jne r-xdata
pop edi
sub_410db6
push edi
mov edi rw-data
push edi
call [ EnterCriticalSection@IAT ]
cmp [ esp + 0x8 ] 0x0
je r-xdata
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
retn 0x4
mov ecx [ rw-data ]
cmp [ esp + 0x8 ] ecx
jne r-xdata
cmp [ rw-data ] 0x0
jbe r-xdata
dec [ rw-data ]
jne r-xdata
push esi
mov esi ecx
test ecx ecx
je r-xdata
pop esi
call sub_410ce4
push esi
call sub_41a07b
pop ecx
sub_410e06
push ecx
push ebp
push esi
mov esi ecx
xor ebp ebp
cmp [ esi ] ebp
jbe r-xdata
pop esi
pop ebp
pop ecx
retn
push ebx
push edi
lea edi [ esi + 0x4 ]
mov [ edi ] ebx
inc [ esi + 0x84 ]
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
push rw-data
call sub_406381
pop ecx
pop ecx
mov ecx rw-data
call sub_401000
push 0x2
mov ecx rw-data
call j_sub_40629a
inc ebp
add edi 0x4
cmp ebp [ esi ]
jb r-xdata
push eax
push [ edi ]
call [ SetThreadPriority@IAT ]
lea eax [ esp + 0x10 ]
push eax
push 0x0
push esi
push sub_410da8
push 0x10000
push 0x0
call [ CreateThread@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
pop edi
pop ebx
sub_410e85
push esi
mov esi ecx
cmp [ esi + 0x84 ] 0x0
jne r-xdata
mov eax [ esi + 0x18c ]
inc eax
and eax 0x1f
cmp eax [ esi + 0x190 ]
jne r-xdata
call sub_410e06
mov eax [ esi + 0x18c ]
mov ecx [ esp + 0x8 ]
mov [ esi + eax * 8 + 0x8c ] ecx
mov eax [ esi + 0x18c ]
mov ecx [ esp + 0xc ]
mov [ esi + eax * 8 + 0x90 ] ecx
mov eax [ esi + 0x18c ]
inc eax
and eax 0x1f
mov [ esi + 0x18c ] eax
pop esi
retn 0x8
mov ecx esi
call sub_410c38
sub_410f09
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
push 0x0
add eax 0xb6109100
push 0x989680
adc ecx 0x2
push ecx
push eax
call sub_41a750
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov eax esi
pop esi
retn 0x8
sub_410f45
push ebp
mov ebp esp
sub esp 0x18
push esi
lea eax [ ebp - 0x18 ]
push eax
mov esi ecx
call [ GetSystemTime@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ecx
pop esi
leave
retn
sub_410f74
mov ecx [ esp + 0x4 ]
test cl 0x3
jne r-xdata
xor eax eax
push esi
mov eax ecx
push 0x64
cdq
pop esi
idiv esi
pop esi
test edx edx
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax ecx
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
retn 0x4
sub_410fa3
push ebp
mov ebp esp
sub esp 0x50
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
push ebx
push esi
push edi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] ecx
call sub_40998e
mov esi [ FileTimeToSystemTime@IAT ]
mov edi [ SystemTimeToFileTime@IAT ]
cmp eax 0x600
jae r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call esi
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x0
call [ SystemTimeToTzSpecificLocalTime@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
call edi
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call edi
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
xor ecx ecx
xor ebx ebx
push 0x1
add eax edx
push ebx
adc ecx ebx
push ecx
push eax
call sub_41a750
mov ebx [ ebp - 0x14 ]
xor ecx ecx
sub eax ecx
mov ecx [ ebp - 0x18 ]
sbb edx ebx
xor ebx ebx
sub eax ecx
mov ecx [ ebp - 0x8 ]
sbb edx ebx
add eax ecx
mov ecx [ ebp - 0x10 ]
adc edx ebx
add eax ecx
adc edx ebx
mov [ ebp - 0x8 ] eax
mov eax edx
sar eax 0x1f
mov [ ebp - 0x4 ] edx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
jmp r-xdata
cmp ecx 0x2
jbe r-xdata
mov [ ebp + 0x8 ] rw-data
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call esi
mov esi [ ebp + 0x8 ]
movzx ebx [ ebp - 0x28 ]
movzx eax [ ebp - 0x2a ]
movzx ecx [ ebp - 0x2e ]
movzx edx [ ebp - 0x30 ]
mov [ esi + 0xc ] ebx
movzx ebx [ ebp - 0x26 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] ebx
movzx ebx [ ebp - 0x24 ]
dec eax
mov [ esi + 0x20 ] eax
xor eax eax
mov [ esi + 0x14 ] ebx
movzx ebx [ ebp - 0x2c ]
inc eax
mov [ esi ] edx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x1c ] ebx
cmp ecx eax
jbe r-xdata
xor eax eax
mov [ ebp - 0x22 ] ax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call edi
mov eax [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
xor edx edx
xor ecx ecx
sub edx ecx
sub edx [ ebp - 0x20 ]
pop edi
add edx [ ebp - 0x8 ]
mov [ esi + 0x18 ] edx
pop esi
pop ebx
leave
retn 0x4
push edx
call sub_410f74
test al al
je r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx ]
add [ esi + 0x20 ] ebx
add [ ebp + 0x8 ] 0x4
inc eax
cmp eax ecx
jb r-xdata
inc [ esi + 0x20 ]
cmp eax 0xc
ja r-xdata
sub_4110f3
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ax [ esi ]
mov [ ebp - 0x28 ] ax
mov ax [ esi + 0x4 ]
mov [ ebp - 0x26 ] ax
mov ax [ esi + 0x8 ]
mov [ ebp - 0x22 ] ax
mov ax [ esi + 0xc ]
mov [ ebp - 0x20 ] ax
mov ax [ esi + 0x10 ]
mov [ ebp - 0x1e ] ax
mov ax [ esi + 0x14 ]
mov [ ebp - 0x1c ] ax
xor eax eax
push edi
mov edi [ SystemTimeToFileTime@IAT ]
mov [ ebp - 0x1a ] ax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ebx ecx
call edi
test eax eax
je r-xdata
and [ ebx ] 0x0
and [ ebx + 0x4 ] 0x0
mov esi [ esi + 0x18 ]
add [ ebp - 0x8 ] esi
cmp [ ebp - 0x8 ] esi
jae r-xdata
call sub_40998e
cmp eax 0x600
jae r-xdata
inc [ ebp - 0x4 ]
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ FileTimeToSystemTime@IAT ]
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
push 0x0
call [ TzSpecificLocalTimeToSystemTime@IAT ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call edi
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call edi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
xor ecx ecx
xor esi esi
push 0x1
add eax edx
push esi
adc ecx esi
push ecx
push eax
call sub_41a750
mov esi [ ebp - 0x14 ]
xor ecx ecx
sub eax ecx
mov ecx [ ebp - 0x18 ]
sbb edx esi
xor esi esi
sub eax ecx
mov ecx [ ebp - 0x10 ]
sbb edx esi
add eax ecx
mov ecx [ ebp - 0x8 ]
adc edx esi
add eax ecx
adc edx esi
mov ecx edx
sar ecx 0x1f
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ LocalFileTimeToFileTime@IAT ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
jmp r-xdata
sub_411202
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x8 ]
mov edx eax
and edx 0x1f
add edx edx
mov [ ebp - 0x10 ] edx
mov edx eax
shr edx 0x5
and edx 0x3f
mov [ ebp - 0x14 ] edx
and [ ebp - 0xc ] 0x0
mov edx eax
shr edx 0xb
and edx 0x1f
mov [ ebp - 0x18 ] edx
mov edx eax
shr edx 0x10
and edx 0x1f
mov [ ebp - 0x1c ] edx
mov edx eax
shr eax 0x19
add eax 0x7bc
shr edx 0x15
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x24 ]
and edx 0xf
push eax
mov [ ebp - 0x20 ] edx
call sub_4110f3
leave
retn 0x4
sub_41129c
push ebp
mov ebp esp
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d204
pop ebp
retn 0x20
sub_4112c0
push esi
mov esi ecx
mov eax [ esi + 0x48 ]
cmp eax 0x6a
jg r-xdata
pop esi
retn
je r-xdata
push 0x456
cmp eax 0x15
jg r-xdata
cmp eax 0x37
jg r-xdata
je r-xdata
sub eax 0x38
je r-xdata
je r-xdata
push [ esi ]
push 0xdd
jmp r-xdata
cmp eax 0x14
ja r-xdata
push 0x8c
jmp r-xdata
dec eax
je r-xdata
push 0x67
jmp r-xdata
sub eax 0x16
cmp eax 0xa
ja r-xdata
call sub_40c0b2
push eax
jmp r-xdata
jmp [ eax * 4 + jump_table_411498 ]
call sub_40c0b2
push eax
push [ esi ]
push 0x6f
jmp r-xdata
dec eax
je r-xdata
jmp [ eax * 4 + jump_table_4114ec ]
push 0x0
push [ esi ]
push r--data
push [ esi ]
push r--data
push r--data
jmp r-xdata
push 0x0
call sub_40d09d
jmp r-xdata
push [ esi + 0x4 ]
push 0x7b
push [ esi + 0x4 ]
push 0x7a
jmp r-xdata
push [ esi + 0x4 ]
push 0x7c
jmp r-xdata
push 0xc9
jmp r-xdata
push 0x70
push [ esi + 0x4 ]
push 0x72
jmp r-xdata
push [ esi + 0x4 ]
push 0x78
jmp r-xdata
push [ esi ]
push 0x85
push [ esi ]
push 0x204
jmp r-xdata
push [ esi + 0x4 ]
push 0x84
jmp r-xdata
push [ esi + 0x4 ]
push 0x83
jmp r-xdata
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push 0xd2
call sub_40c0b2
push eax
push [ esi ]
call sub_40df74
add esp 0x10
pop esi
retn
push [ esi + 0x4 ]
push 0x79
jmp r-xdata
push [ esi + 0x4 ]
push 0xdc
jmp r-xdata
push [ esi + 0x4 ]
push 0x406
jmp r-xdata
sub eax 0x9
je r-xdata
push 0xe1
jmp r-xdata
push 0xb4
jmp r-xdata
push 0x69
jmp r-xdata
push 0x6a
jmp r-xdata
push [ esi + 0x4 ]
push 0x68
jmp r-xdata
push 0x46f
jmp r-xdata
push 0x470
jmp r-xdata
push [ esi + 0x4 ]
push 0x471
jmp r-xdata
push [ esi + 0x4 ]
push 0x71
jmp r-xdata
push [ esi + 0x4 ]
push 0xc8
jmp r-xdata
call sub_40df74
add esp 0xc
pop esi
retn
pop ecx
call sub_40c0b2
push eax
push [ esi ]
jmp r-xdata
call sub_40df74
pop ecx
push 0x343
jmp r-xdata
dec eax
jne r-xdata
call sub_40c0b2
push eax
push 0x0
jmp r-xdata
push 0x86
jmp r-xdata
sub_41153e
push ebp
mov ebp esp
mov eax 0x1000
call sub_41a670
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x512c ]
push edi
cmp eax 0x2
jne r-xdata
cmp [ ebx + 0x517c ] 0x0
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
xor eax eax
cmp eax 0x1
je r-xdata
pop edi
pop ebx
leave
retn 0x1c
mov edi [ ebp + 0xc ]
push esi
mov esi 0x800
push esi
push edi
lea eax [ ebp - 0x1000 ]
push eax
call sub_410792
push [ ebp + 0x20 ]
lea eax [ ebp - 0x1000 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push eax
call sub_41125d
push 0x2
pop ecx
pop esi
cmp eax ecx
jne r-xdata
cmp eax 0x3
jne r-xdata
mov [ ebx + 0x512c ] 0x1
cmp eax 0x4
jne r-xdata
mov [ ebx + 0x512c ] ecx
jmp r-xdata
lea eax [ ebp - 0x1000 ]
push eax
call sub_40a108
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x1000 ]
cmp eax ecx
mov eax ecx
push eax
push edi
jne r-xdata
call sub_410792
call sub_40a272
jmp r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push ebx
call sub_41153e
jmp r-xdata
push edi
call sub_40902d
test al al
je r-xdata
sub_411615
push ebp
mov ebp esp
mov eax 0x1200
call sub_41a670
push ebx
push esi
push [ ebp + 0x8 ]
push 0x83
call sub_40c0b2
push eax
lea eax [ ebp - 0x1200 ]
push 0x900
push eax
call sub_401b7b
add esp 0x10
call [ GetLastError@IAT ]
push 0x35
push 0x96
mov esi eax
call sub_40c0b2
push eax
lea eax [ ebp - 0x1200 ]
push eax
push [ rw-data ]
call [ MessageBoxW@IAT ]
cmp eax 0x4
push esi
sete bl
call [ SetLastError@IAT ]
pop esi
mov al bl
pop ebx
leave
retn 0x8
sub_411683
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
push ebx
push ebx
push edi
push esi
push 0xffffffff
push [ ebp + 0x8 ]
mov [ ebp - 0x1 ] 0x1
push ebx
push ebx
mov [ esi ] bl
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
cmp edi ebx
jbe r-xdata
mov [ ebp - 0x1 ] bl
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
leave
retn 0xc
mov [ esi + edi - 0x1 ] bl
sub_4116c2
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x18 ]
push edi
push esi
push 0xffffffff
push [ esp + 0x1c ]
xor eax eax
push eax
push eax
mov bl 0x1
mov [ esi ] ax
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
test edi edi
jbe r-xdata
xor bl bl
pop edi
pop esi
mov al bl
pop ebx
retn 0xc
xor eax eax
mov [ esi + edi * 2 - 0x2 ] ax
sub_4116fd
mov eax [ esp + 0x8 ]
push esi
xor esi esi
cmp [ esp + 0x10 ] esi
jbe r-xdata
pop esi
retn 0xc
mov ecx [ esp + 0x8 ]
inc esi
inc ecx
inc ecx
cmp esi [ esp + 0x10 ]
jb r-xdata
mov dl [ ecx ]
mov [ eax + esi * 2 ] dl
mov dl [ ecx + 0x1 ]
mov [ eax + esi * 2 + 0x1 ] dl
cmp [ ecx ] 0x0
je r-xdata
sub_41172d
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax [ ebp + 0xc ]
pop esi
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
sub edx ecx
push edi
pop edi
inc esi
inc ecx
inc ecx
cmp esi [ ebp + 0x10 ]
jb r-xdata
movzx ax [ ecx + 0x1 ]
mov edi 0x100
imul ax di
movzx di [ ecx ]
add ax di
mov [ edx + ecx ] ax
je r-xdata
sub_41176d
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
dec eax
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp + 0x10 ] eax
movzx eax [ esi ]
push edi
test ax ax
je r-xdata
pop edi
pop esi
mov [ ecx ] 0x0
pop ebx
pop ebp
retn 0xc
mov bl 0x80
movzx eax ax
inc esi
inc esi
cmp eax 0x80
jb r-xdata
mov [ ecx ] al
inc ecx
cmp eax 0x800
jae r-xdata
dec [ ebp + 0x10 ]
js r-xdata
lea edx [ eax - 0xd800 ]
cmp edx 0x3ff
ja r-xdata
dec [ ebp + 0x10 ]
js r-xdata
cmp eax 0x10000
jae r-xdata
movzx edx [ esi ]
mov edi 0xdc00
cmp dx di
jb r-xdata
mov edx eax
shr edx 0x6
or dl 0xc0
jmp r-xdata
cmp eax 0x200000
jae r-xdata
sub [ ebp + 0x10 ] 0x2
js r-xdata
mov edi 0xdfff
cmp dx di
ja r-xdata
mov [ ecx ] dl
and al 0x3f
inc ecx
or al bl
movzx eax [ esi ]
test ax ax
jne r-xdata
sub [ ebp + 0x10 ] 0x3
js r-xdata
mov edx eax
shr edx 0xc
or dl 0xe0
jmp r-xdata
add eax 0xffff2809
shl eax 0xa
movzx edx dx
add eax edx
inc esi
inc esi
mov edx eax
shr edx 0x12
or dl 0xf0
mov [ ecx ] dl
mov edx eax
shr edx 0xc
and dl 0x3f
inc ecx
or dl bl
mov [ ecx ] dl
mov edx eax
shr edx 0x6
and dl 0x3f
inc ecx
or dl bl
sub_411857
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov cl [ esi ]
dec eax
mov [ ebp - 0x1 ] 0x1
mov [ ebp + 0x10 ] eax
test cl cl
je r-xdata
mov eax [ ebp + 0xc ]
pop esi
test eax eax
je r-xdata
push edi
push 0x3f
pop edi
push ebx
mov al [ ebp - 0x1 ]
leave
retn 0xc
xor ecx ecx
mov [ eax ] cx
mov eax edx
and eax 0xffffffe0
cmp eax 0xc0
jne r-xdata
mov ecx edx
jmp r-xdata
mov eax edx
and eax 0xfffffff0
cmp eax 0xe0
jne r-xdata
mov cl [ esi ]
mov al cl
and al 0xc0
cmp al 0x80
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax edx
and eax 0xfffffff8
cmp eax 0xf0
jne r-xdata
mov al [ esi ]
mov cl al
and cl 0xc0
cmp cl 0x80
jne r-xdata
mov [ ebp - 0x1 ] 0x0
movsx ecx cl
and edx 0x1f
and ecx edi
shl edx 0x6
or ecx edx
inc esi
jmp r-xdata
cmp ecx 0xffff
jbe r-xdata
dec [ ebp + 0x10 ]
js r-xdata
mov al [ esi ]
and al 0xc0
cmp al 0x80
jne r-xdata
mov bl [ esi + 0x1 ]
mov cl bl
and cl 0xc0
cmp cl 0x80
jne r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
pop ebx
pop edi
mov al [ esi + 0x1 ]
mov cl al
and cl 0xc0
cmp cl 0x80
jne r-xdata
movsx ecx al
and ecx edi
and edx 0xf
shl edx 0x6
or ecx edx
movsx eax bl
shl ecx 0x6
and eax edi
or ecx eax
inc esi
inc esi
jmp r-xdata
mov cl [ esi ]
test cl cl
jne r-xdata
mov [ eax ] cx
inc eax
inc eax
mov [ ebp + 0xc ] eax
cmp ecx 0x10ffff
jbe r-xdata
dec [ ebp + 0x10 ]
js r-xdata
mov bl [ esi + 0x2 ]
mov cl bl
and cl 0xc0
cmp cl 0x80
jne r-xdata
movzx edx cl
inc esi
cmp edx 0x80
jae r-xdata
jmp r-xdata
test eax eax
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
movsx ecx [ esi ]
and ecx edi
and edx 0x7
movsx eax al
shl edx 0x6
or ecx edx
shl ecx 0x6
and eax edi
or ecx eax
movsx eax bl
shl ecx 0x6
and eax edi
or ecx eax
add esi 0x3
lea edx [ ecx - 0x10000 ]
shr edx 0xa
sub edx 0x2800
mov [ eax ] dx
inc eax
and ecx 0x3ff
inc eax
sub ecx 0x2400
jmp r-xdata
sub_411a07
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
call sub_41a32f
mov edi [ ebp + 0x10 ]
inc eax
pop ecx
cmp eax edi
jae r-xdata
mov esi edi
push [ ebp + 0x8 ]
call sub_41a32f
mov esi eax
pop ecx
inc esi
jmp r-xdata
mov eax edi
push [ ebp + 0xc ]
call sub_41a32f
pop ecx
inc eax
jmp r-xdata
push [ ebp + 0xc ]
call sub_41a32f
inc eax
pop ecx
cmp eax edi
jae r-xdata
push eax
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
push 0x1001
push 0x400
call [ CompareStringW@IAT ]
dec eax
pop edi
dec eax
pop esi
pop ebp
retn 0xc
sub_411a6f
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
inc ebx
cmp [ esi ] 0x2d
push edi
jne r-xdata
movzx eax [ esi ]
xor ecx ecx
xor edi edi
cmp ax 0x30
jb r-xdata
inc esi
inc esi
or ebx 0xffffffff
push edi
mov eax ebx
cdq
push ecx
push edx
push eax
call sub_41a750
pop edi
pop esi
pop ebx
retn 0x4
push ebp
pop ebp
movzx eax ax
sub eax 0x30
push 0x0
cdq
push 0xa
mov ebp eax
push edi
mov eax edx
push ecx
mov [ esp + 0x24 ] eax
call sub_41a750
add ebp eax
mov eax [ esp + 0x14 ]
adc eax edx
inc esi
inc esi
mov edi eax
movzx eax [ esi ]
mov ecx ebp
cmp ax 0x30
jae r-xdata
cmp ax 0x39
ja r-xdata
sub_411adc
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
lea eax [ ebp - 0x14 ]
push eax
xor esi esi
push esi
mov edi ecx
call [ GetCPInfo@IAT ]
cmp [ ebp - 0x14 ] 0x1
seta al
mov [ edi + 0x100 ] al
push esi
call [ IsDBCSLeadByte@IAT ]
test eax eax
setne al
mov [ esi + edi ] al
inc esi
cmp esi 0x100
jb r-xdata
pop edi
pop esi
leave
retn
sub_411b21
mov eax [ esp + 0xc ]
movzx edx [ eax + ecx + 0x4 ]
mov eax [ esp + 0x8 ]
movzx eax [ eax + ecx + 0x4 ]
sub eax edx
imul edx edx 0xc
add edx [ esp + 0x4 ]
push esi
movzx esi [ eax + ecx + 0x29 ]
push edi
movzx edi [ esi + ecx + 0x4 ]
cmp edi eax
je r-xdata
movzx eax [ eax + ecx + 0x29 ]
lea eax [ ecx + eax * 4 + 0xb8 ]
mov ecx [ eax ]
pop edi
mov [ edx ] ecx
mov [ eax ] edx
pop esi
retn 0xc
dec esi
lea edi [ ecx + esi * 4 + 0xb8 ]
push ebx
mov ebx [ edi ]
mov [ edx ] ebx
mov [ edi ] edx
movzx esi [ esi + ecx + 0x4 ]
mov edi esi
imul edi edi 0xc
add edx edi
sub eax esi
pop ebx
sub_411b96
push ebx
mov ebx [ esp + 0x8 ]
push edi
mov edi ecx
shl ebx 0x14
cmp [ edi ] ebx
jne r-xdata
push esi
call sub_411b81
push 0xc
xor edx edx
pop ecx
mov eax ebx
div ecx
mov esi eax
inc esi
inc esi
imul esi esi 0xc
push esi
call sub_41cafe
pop ecx
mov [ edi + 0xac ] eax
test eax eax
jne r-xdata
mov al 0x1
jmp r-xdata
lea eax [ eax + esi - 0xc ]
mov [ edi + 0x158 ] eax
mov [ edi ] ebx
mov al 0x1
mov ecx rw-data
call sub_40632c
xor al al
jmp r-xdata
pop edi
pop ebx
retn 0x4
pop esi
sub_411bf2
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi ecx
push 0x98
lea eax [ esi + 0xb8 ]
push 0x0
push eax
call sub_41a3a0
mov edi [ esi ]
add esp 0xc
mov eax edi
cdq
and edx 0x7
add eax edx
sar eax 0x3
push 0xc
pop ebx
xor edx edx
div ebx
push 0xc
xor edx edx
mov ecx [ esi + 0xac ]
mov [ esi + 0x150 ] ecx
mov ebx eax
imul ebx ebx 0x54
sub edi ebx
mov eax edi
mov [ ebp - 0x8 ] eax
pop edi
div edi
push 0xc
xor edx edx
inc eax
imul eax eax 0xc
lea edi [ eax + ecx ]
mov eax [ ebp - 0x8 ]
add ecx eax
mov [ esi + 0x15c ] ecx
pop ecx
mov eax ebx
div ecx
push 0x4
pop edx
push edx
mov [ esi + 0x154 ] edi
mov [ esi + 0xb0 ] edi
pop ecx
imul eax eax 0xc
add eax edi
mov [ esi + 0xb4 ] eax
xor eax eax
inc eax
mov [ esi + eax + 0x3 ] al
inc eax
dec edx
jne r-xdata
inc eax
mov [ esi + ecx + 0x4 ] al
inc ecx
inc eax
inc eax
cmp ecx 0x8
jl r-xdata
inc eax
jmp r-xdata
cmp ecx 0xc
jl r-xdata
mov [ esi + ecx + 0x4 ] al
inc ecx
add eax 0x3
inc eax
jmp r-xdata
cmp ecx 0x26
jl r-xdata
mov [ esi + ecx + 0x4 ] al
inc ecx
add eax 0x4
xor ecx ecx
mov [ ebp - 0x4 ] 0xffffffd7
sub [ ebp - 0x4 ] esi
mov [ esi + 0xaa ] cl
lea eax [ esi + 0x2a ]
mov [ ebp - 0x8 ] 0x80
movzx edx [ esi + ecx + 0x4 ]
mov edi [ ebp - 0x4 ]
xor ebx ebx
add edi eax
cmp edx edi
setl bl
add ecx ebx
mov [ eax ] cl
inc eax
dec [ ebp - 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_411d36
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi ecx
movzx ebx [ eax + esi + 0x29 ]
mov eax [ ebp + 0x10 ]
movzx edx [ eax + esi + 0x29 ]
mov [ ebp + 0xc ] ebx
cmp ebx edx
jne r-xdata
lea ecx [ esi + edx * 4 + 0xb8 ]
push edi
mov edi [ ecx ]
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
push edx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
call sub_411b21
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
imul eax eax 0xc
mov edx [ edi ]
push eax
push ebx
push edi
mov [ ecx ] edx
call sub_41be10
mov eax [ ebp + 0xc ]
lea eax [ esi + eax * 4 + 0xb8 ]
mov ecx [ eax ]
mov [ ebx ] ecx
mov [ eax ] ebx
add esp 0xc
mov eax edi
jmp r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
pop edi
sub_411da6
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi + 0x650 ]
movzx eax [ eax ]
mov al [ eax + esi + 0x96c ]
mov [ esi + 0xa6e ] al
push edi
lea edi [ ecx + 0x2 ]
mov ecx [ ecx + 0x8 ]
movzx ecx [ ecx ]
movzx edx [ edi ]
movzx edx [ edx + esi + 0x96c ]
movzx ebx [ edi + 0x1 ]
movzx ecx [ ecx + esi + 0x86b ]
shl ebx 0x5
add edx ebx
lea ecx [ ecx + edx * 2 + 0x4f8 ]
mov edx [ esi + 0x664 ]
sar edx 0x1a
and edx 0x20
add ecx edx
movzx edx [ esi + 0xa6d ]
add ecx edx
movzx eax al
lea edx [ esi + 0x4a70 ]
shr [ edx + 0x8 ] 0xe
mov ebp [ edx + 0x8 ]
add ecx eax
mov eax [ edx + 0x4 ]
sub eax [ edx ]
xor edx edx
div ebp
lea ecx [ esi + ecx * 2 ]
movzx ebx [ ecx ]
cmp eax ebx
jae r-xdata
mov [ esi + 0x4a7c ] ebx
movzx eax [ ecx ]
movzx edx ax
add edx 0x20
sar edx 0x7
sub eax edx
mov [ ecx ] ax
mov [ esi + 0x4a80 ] 0x4000
movzx eax [ ecx ]
mov cl [ esi + 0xa6c ]
shr eax 0xa
movzx eax [ eax + r--data ]
mov [ esi + 0x658 ] eax
mov [ esi + 0x654 ] 0x1
movzx eax [ edi ]
mov [ eax + esi + 0x66c ] cl
and [ esi + 0x650 ] 0x0
mov [ esi + 0xa6d ] 0x0
mov [ esi + 0x650 ] edi
mov al [ edi + 0x1 ]
cmp al 0x80
setb dl
add dl al
mov [ edi + 0x1 ] dl
and [ esi + 0x4a7c ] 0x0
movzx eax [ ecx ]
mov [ esi + 0x4a80 ] eax
movzx eax [ ecx ]
movzx edx ax
add edx 0x20
sar edx 0x7
sub eax edx
sub eax 0xffffff80
mov [ ecx ] ax
inc [ esi + 0x664 ]
mov [ esi + 0xa6d ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
sub_411ef3
push esi
mov esi ecx
mov ecx [ esi + 0x78 ]
mov eax [ esi + 0x4 ]
push edi
mov edi ecx
sub edi eax
jns r-xdata
cmp eax 0x4000
jle r-xdata
xor al al
jmp r-xdata
mov edi ecx
test edi edi
jle r-xdata
pop edi
pop esi
retn
cmp [ esi + 0x4c39 ] 0x0
mov ecx [ esi + 0x78 ]
lea edx [ ecx - 0x1e ]
mov [ esi + 0x7c ] edx
je r-xdata
add [ esi + 0x78 ] eax
and [ esi + 0x4 ] 0x0
mov [ esi + 0x78 ] edi
jmp r-xdata
mov ecx [ esi + 0x10 ]
push edi
add eax ecx
push eax
push ecx
call sub_41c710
add esp 0xc
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov al cl
add ecx 0xfffffe0c
mov [ esi + 0x7c ] ecx
mov ecx [ esi ]
mov eax 0x8000
sub eax edi
push eax
mov eax [ esi + 0x10 ]
add eax edi
push eax
call sub_40b65d
test eax eax
jle r-xdata
sub_411f71
push esi
mov esi ecx
mov ecx [ esi + 0x78 ]
mov eax [ esi + 0x4 ]
push edi
mov edi ecx
sub edi eax
jns r-xdata
mov edx [ esi + 0x88 ]
sub edx eax
add [ esi + 0x80 ] edx
cmp eax 0x4000
jle r-xdata
xor al al
jmp r-xdata
mov edi ecx
test edi edi
jle r-xdata
pop edi
pop esi
retn
cmp [ esi + 0x4c39 ] 0x0
mov ecx [ esi + 0x78 ]
lea edx [ ecx - 0x1e ]
mov [ esi + 0x7c ] edx
je r-xdata
mov eax [ esi + 0x10 ]
sub ecx edi
push ecx
mov ecx [ esi ]
add eax edi
push eax
call sub_40b65d
test eax eax
jle r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x78 ] edi
jmp r-xdata
mov ecx [ esi + 0x10 ]
push edi
add eax ecx
push eax
push ecx
call sub_41c710
add esp 0xc
mov edx [ esi + 0x80 ]
mov ecx [ esi + 0x4 ]
mov [ esi + 0x88 ] ecx
cmp edx 0xffffffff
je r-xdata
add ecx 0xfffffe0c
mov [ esi + 0x7c ] ecx
add [ esi + 0x78 ] eax
mov ecx 0x8000
xor eax eax
cmp edi ecx
je r-xdata
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov al cl
lea ecx [ edx + ecx - 0x1 ]
mov edx [ esi + 0x7c ]
cmp edx ecx
jge r-xdata
mov [ esi + 0x7c ] ecx
mov ecx edx
sub_41202a
push esi
mov esi ecx
mov edx [ esi + 0x4c54 ]
mov eax [ esi + 0x4c44 ]
cmp edx eax
mov ecx [ esi + 0x4c40 ]
push edi
mov edi [ esi + 0x4c50 ]
jg r-xdata
pop edi
pop esi
retn 0x8
jl r-xdata
sub ecx edi
sbb eax edx
xor edi edi
cmp edi eax
push ebx
mov ebx [ esp + 0x14 ]
jl r-xdata
cmp edi ecx
jae r-xdata
mov ecx [ esi ]
push ebx
push [ esp + 0x14 ]
call sub_40b80d
mov eax [ esp + 0x14 ]
add [ esi + 0x4c50 ] eax
pop ebx
adc [ esi + 0x4c54 ] edi
jg r-xdata
mov ebx ecx
cmp ebx ecx
jbe r-xdata
sub_412089
push esi
push edi
mov edi 0x80
push edi
mov esi ecx
push 0x0
push esi
call sub_41a3a0
push edi
lea eax [ esi + 0x80 ]
push 0x0
push eax
call sub_41a3a0
add esp 0x18
pop edi
mov eax esi
pop esi
retn
sub_4120b2
push esi
push edi
mov edi ecx
xor esi esi
inc esi
cmp esi 0x20
jb r-xdata
push eax
call sub_41a086
and [ edi + esi * 4 ] 0x0
pop ecx
mov eax [ edi + esi * 4 ]
test eax eax
je r-xdata
pop edi
pop esi
retn
sub_4120d3
push ebp
mov ebp esp
sub esp 0x18
push edi
mov [ ebp - 0xc ] ecx
call sub_4120b2
xor edi edi
mov [ ebp - 0x4 ] edi
cmp [ ebp + 0x8 ] edi
jbe r-xdata
pop edi
leave
retn 0x4
push ebx
push esi
cmp edi [ ebp + 0x8 ]
jb r-xdata
mov esi [ ebp + 0x8 ]
push 0x20
sub esi edi
pop ecx
sub ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
div ecx
mov ecx __pe_WINRAR_export_address_table
mov [ ebp - 0x8 ] eax
cmp eax ecx
ja r-xdata
lea ecx [ ebp - 0x18 ]
call sub_411cf0
push r--data
lea eax [ ebp - 0x18 ]
push eax
call sub_41c33f
pop esi
pop ebx
cmp esi [ ebp - 0x8 ]
jae r-xdata
mov [ ebp - 0x8 ] ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x20
jae r-xdata
jmp r-xdata
push esi
call sub_41cafe
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push esi
push 0x0
push ebx
call sub_41a3a0
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
shl ecx 0x2
add edi esi
add esp 0xc
inc [ ebp - 0x4 ]
mov [ ecx + eax ] ebx
mov [ ecx + eax + 0x80 ] edi
cmp edi [ ebp + 0x8 ]
jb r-xdata
mov eax esi
shr eax 0x5
sub esi eax
sub_412198
push esi
mov esi [ esp + 0x8 ]
cmp esi [ ecx + 0x80 ]
jae r-xdata
xor edx edx
inc edx
lea eax [ ecx + 0x84 ]
mov eax [ ecx ]
mov eax [ ecx + edx * 4 ]
sub eax [ ecx + edx * 4 + 0x7c ]
jmp r-xdata
inc edx
add eax 0x4
cmp edx 0x20
jb r-xdata
pop esi
retn 0x4
add eax esi
jmp r-xdata
cmp esi [ eax ]
jb r-xdata
mov eax [ ecx ]
sub_4121d0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ esi ]
sub edi [ ebp + 0xc ]
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
pop edi
pop esi
pop ebp
retn 0x10
push ebx
dec [ ebp + 0x8 ]
mov eax edi
and eax [ ebp + 0x14 ]
push eax
call sub_412198
push [ esi ]
mov ebx eax
call sub_412198
mov dl [ ebx ]
mov [ eax ] dl
mov eax [ esi ]
inc edi
inc eax
and eax [ ebp + 0x14 ]
cmp [ ebp + 0x8 ] 0x0
mov [ esi ] eax
ja r-xdata
pop ebx
sub_412215
push ebx
mov ebx [ esp + 0x10 ]
test ebx ebx
jbe r-xdata
pop ebx
retn 0xc
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
sub edi esi
lea eax [ edi + esi ]
push eax
call sub_412198
mov al [ eax ]
mov [ esi ] al
inc esi
dec ebx
jne r-xdata
pop edi
pop esi
sub_412241
push esi
mov esi [ esp + 0x8 ]
xor eax eax
lea edx [ ecx + 0x80 ]
mov eax [ ecx + eax * 4 + 0x80 ]
sub eax esi
cmp eax [ esp + 0xc ]
jb r-xdata
inc eax
add edx 0x4
cmp eax 0x20
jb r-xdata
pop esi
retn 0x8
mov eax [ esp + 0xc ]
jmp r-xdata
cmp esi [ edx ]
jb r-xdata
xor eax eax
sub_412276
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
mov eax 0x40000
cmp ebx eax
jae r-xdata
mov ecx rw-data
call sub_40632c
cmp ebx [ esi + 0xe6d8 ]
jbe r-xdata
mov ebx eax
mov [ ebp + 0x8 ] ebx
pop esi
pop ebx
leave
retn 0x8
mov eax ebx
shr eax 0x10
cmp eax 0x10000
ja r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ebp + 0xf ] 0x0
cmp [ esi + 0x4b34 ] 0x0
jne r-xdata
push ebx
call sub_41cafe
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ esi + 0x4c38 ] 0x0
mov [ ebp + 0xf ] 0x1
je r-xdata
cmp [ esi + 0x4c38 ] 0x0
je r-xdata
cmp [ esi + 0x4c38 ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ esi + 0x4c38 ] 0x0
push edi
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_411cf0
push r--data
lea eax [ ebp - 0x10 ]
push eax
call sub_41c33f
mov [ esi + 0xe6d8 ] ebx
dec ebx
mov [ esi + 0xe6dc ] ebx
pop edi
push ebx
push 0x0
push [ ebp - 0x4 ]
call sub_41a3a0
add esp 0xc
cmp [ ebp + 0xf ] 0x0
je r-xdata
cmp ebx 0x1000000
jb r-xdata
lea edi [ esi + 0x4b34 ]
mov eax [ edi ]
test eax eax
je r-xdata
xor ecx ecx
inc ecx
cmp [ esi + 0xe6d8 ] ecx
jbe r-xdata
lea edi [ esi + 0x4b34 ]
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
push eax
call sub_41a086
pop ecx
mov eax [ esi + 0x70 ]
mov edi [ esi + 0xe6d8 ]
sub eax ecx
dec edi
and edi eax
lea edx [ ebx - 0x1 ]
mov ebx [ ebp + 0x8 ]
and edx eax
mov eax [ esi + 0x4b34 ]
mov al [ edi + eax ]
mov edi [ ebp - 0x4 ]
inc ecx
mov [ edx + edi ] al
cmp ecx [ esi + 0xe6d8 ]
jb r-xdata
push ebx
lea ecx [ esi + 0x4b38 ]
call sub_4120d3
mov [ esi + 0x4c38 ] 0x1
push eax
call sub_41a086
and [ edi ] 0x0
pop ecx
sub_4123d1
push ebp
mov ebp esp
sub esp 0x80
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x40
xor edi edi
lea eax [ ebp - 0x40 ]
push edi
push eax
mov [ esi ] ebx
call sub_41a3a0
add esp 0xc
xor ecx ecx
cmp ebx edi
jbe r-xdata
lea eax [ ebx + ebx ]
push eax
lea eax [ esi + 0xc88 ]
push edi
push eax
mov [ ebp - 0x40 ] edi
call sub_41a3a0
lea ebx [ esi + 0x44 ]
add esp 0xc
mov [ ebx ] edi
mov [ esi + 0x4 ] edi
xor eax eax
mov [ ebp + 0xc ] 0x1
mov edx ebx
mov eax [ ebp + 0x8 ]
movzx eax [ ecx + eax ]
and eax 0xf
lea eax [ ebp + eax * 4 - 0x40 ]
inc [ eax ]
inc ecx
cmp ecx ebx
jb r-xdata
mov edi [ ebp + 0xc ]
add eax [ ebp + edi * 4 - 0x40 ]
push 0x10
pop ecx
sub ecx edi
mov edi eax
shl edi cl
mov ecx [ ebp + 0xc ]
mov ecx [ ebp + ecx * 4 - 0x44 ]
add ecx [ edx ]
add eax eax
inc [ ebp + 0xc ]
mov [ edx - 0x3c ] edi
mov [ edx + 0x4 ] ecx
add edx 0x4
cmp [ ebp + 0xc ] 0x10
jb r-xdata
push 0x40
lea eax [ ebp - 0x80 ]
push ebx
push eax
call sub_41be10
mov edi [ ebp + 0x10 ]
add esp 0xc
xor edx edx
test edi edi
jbe r-xdata
cmp edi 0x12a
jb r-xdata
mov eax [ ebp + 0x8 ]
mov al [ edx + eax ]
and al 0xf
je r-xdata
mov [ esi + 0x84 ] 0x7
cmp edi 0x12b
jbe r-xdata
inc edx
cmp edx edi
jb r-xdata
movzx eax al
lea eax [ ebp + eax * 4 - 0x80 ]
mov ecx [ eax ]
mov [ esi + ecx * 2 + 0xc88 ] dx
inc ecx
mov [ eax ] ecx
pop edi
pop esi
pop ebx
leave
retn 0xc
lea eax [ esi + 0x488 ]
mov [ ebp + 0x8 ] eax
mov [ esi + 0x84 ] 0xa
jmp r-xdata
cmp edi 0x132
jne r-xdata
cmp eax [ ecx ]
jae r-xdata
mov ecx [ esi + 0x84 ]
xor edx edx
inc edx
mov ebx edx
shl ebx cl
xor edi edi
test ebx ebx
jbe r-xdata
cmp edx 0x10
jae r-xdata
push 0x10
mov [ esi + edi + 0x88 ] dl
sub eax [ esi + edx * 4 ]
pop ecx
sub ecx edx
shr eax cl
mov ecx [ ebp + 0x8 ]
add eax [ esi + edx * 4 + 0x44 ]
cmp eax [ ebp + 0x10 ]
jae r-xdata
inc edx
add ecx 0x4
xor eax eax
mov ax [ esi + eax * 2 + 0xc88 ]
jmp r-xdata
push 0x10
pop ecx
sub ecx [ esi + 0x84 ]
mov eax edi
shl eax cl
lea ecx [ esi + edx * 4 + 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] 0x2
inc edi
mov [ ecx ] ax
cmp edi ebx
jb r-xdata
sub_412549
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edi [ ebp + 0xc ]
lea esi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x8
sub_412571
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jbe r-xdata
pop esi
retn 0x4
mov eax [ esi + 0xc ]
push ebx
push ebp
push edi
mov ebp rw-data
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi + 0x4 ]
mov ecx eax
shr ecx 0x2
lea eax [ ecx + eax + 0x20 ]
cmp edi eax
ja r-xdata
cmp ecx eax
jbe r-xdata
mov eax edi
shl eax 0x2
push eax
push [ esi ]
call sub_41a114
mov ebx eax
pop ecx
pop ecx
test ebx ebx
jne r-xdata
mov edi eax
push eax
push r--data
push ebp
call sub_406381
add esp 0xc
mov ecx ebp
call sub_40632c
mov [ esi + 0x8 ] edi
pop edi
pop ebp
mov [ esi ] ebx
pop ebx
mov ecx ebp
call sub_40632c
sub_4125f7
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
pop esi
retn
push eax
call sub_41a086
and [ esi ] 0x0
pop ecx
sub_412614
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jbe r-xdata
pop esi
retn 0x4
mov eax [ esi + 0xc ]
push ebx
push ebp
push edi
mov ebp rw-data
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx eax
shr ecx 0x2
lea eax [ ecx + eax + 0x20 ]
mov ecx [ esi + 0x4 ]
mov ebx ecx
cmp ecx eax
ja r-xdata
cmp ecx eax
jbe r-xdata
mov eax ebx
shl eax 0x4
push eax
push [ esi ]
call sub_41a114
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov ebx eax
push eax
push r--data
push ebp
call sub_406381
add esp 0xc
mov ecx ebp
call sub_40632c
mov [ esi ] edi
pop edi
pop ebp
mov [ esi + 0x8 ] ebx
pop ebx
mov ecx ebp
call sub_40632c
sub_41268e
mov eax [ ecx + 0xc ]
push ebx
mov ebx [ ecx + 0x4 ]
mov ecx [ ecx ]
lea edx [ eax + ecx ]
movzx eax [ edx ]
movzx ecx [ edx + 0x1 ]
shl eax 0x8
or eax ecx
movzx ecx [ edx + 0x2 ]
shl eax 0x8
or eax ecx
movzx ecx [ edx + 0x3 ]
movzx edx [ edx + 0x4 ]
shl eax 0x8
or eax ecx
mov ecx ebx
shl eax cl
push 0x8
pop ecx
sub cl bl
shr edx cl
pop ebx
or eax edx
retn
sub_4126cb
push esi
mov esi ecx
movzx eax [ esi ]
mov cl [ esi + 0x2 ]
movzx edx ax
shr edx cl
sub eax edx
mov [ esi ] ax
xor eax eax
test edx edx
sete al
pop esi
add eax edx
retn
sub_4126e9
mov eax ecx
mov cl [ eax + 0x2 ]
cmp cl 0x7
jae r-xdata
retn
dec [ eax + 0x3 ]
jne r-xdata
shl [ eax ] 0x1
mov dl 0x3
shl dl cl
inc cl
mov [ eax + 0x2 ] cl
mov [ eax + 0x3 ] dl
sub_41275e
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
and [ esi ] 0x0
or [ esi + 0x8 ] 0xffffffff
push edi
push 0x4
mov [ esi + 0x18 ] eax
pop edi
mov ecx [ esi + 0x18 ]
call sub_41273d
mov ecx [ esi + 0x4 ]
shl ecx 0x8
or ecx eax
dec edi
mov [ esi + 0x4 ] ecx
jne r-xdata
pop edi
pop esi
retn 0x4
sub_412792
push ebp
mov ebp esp
mov eax [ ecx + 0xb0 ]
sub esp 0x10
cmp eax [ ecx + 0xb4 ]
je r-xdata
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea edi [ ecx + 0x4 ]
lea edx [ ecx + 0xb8 ]
mov [ ebp - 0x4 ] 0x26
mov esi 0xffff
jmp r-xdata
mov [ eax ] 0x0
cmp [ edx ] 0x0
jne r-xdata
mov eax [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
lea ebx [ ebp - 0x10 ]
mov [ eax + 0x8 ] ebx
mov ebx [ ebp - 0xc ]
mov [ eax + 0x4 ] ebx
mov ebx [ ebp - 0xc ]
mov [ ebx + 0x8 ] eax
mov ebx esi
mov [ ebp - 0xc ] eax
mov [ eax ] bx
movzx bx [ edi ]
mov [ eax + 0x2 ] bx
add edx 0x4
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x10 ]
cmp edx eax
je r-xdata
lea eax [ ebp - 0x10 ]
mov esi edx
cmp edx eax
jne r-xdata
jmp r-xdata
lea eax [ edx + 0x4 ]
mov ebx [ eax ]
add edx 0x8
mov edi [ edx ]
mov [ edi + 0x4 ] ebx
mov eax [ eax ]
mov edx [ edx ]
mov [ eax + 0x8 ] edx
movzx eax [ esi + 0x2 ]
cmp eax 0x80
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
movzx eax [ edx + 0x2 ]
imul eax eax 0xc
mov edi esi
add eax edx
cmp [ eax ] di
je r-xdata
movzx edi [ ecx + eax + 0x29 ]
movzx edx [ ecx + edi + 0x4 ]
cmp edx eax
je r-xdata
lea edx [ eax - 0x81 ]
shr edx 0x7
inc edx
mov edi edx
imul edi edi 0xffffff80
add eax edi
movzx edi [ eax + 0x2 ]
movzx ebx [ edx + 0x2 ]
add edi ebx
cmp edi 0x10000
jge r-xdata
mov edx [ edx + 0x4 ]
lea eax [ ebp - 0x10 ]
cmp edx eax
jne r-xdata
lea eax [ ecx + edi * 4 + 0xb8 ]
mov edx [ eax ]
mov [ esi ] edx
mov [ eax ] esi
movzx ebx [ ecx + edi + 0x3 ]
dec edi
mov edx eax
sub edx ebx
sub eax edx
imul eax eax 0xc
lea edx [ ecx + edx * 4 + 0xb4 ]
mov ebx [ edx ]
add eax esi
mov [ eax ] ebx
mov [ edx ] eax
mov edi [ ecx + 0x14c ]
mov [ esi ] edi
mov [ ecx + 0x14c ] esi
add esi 0x600
dec edx
jne r-xdata
mov edi [ eax + 0x8 ]
mov ebx [ eax + 0x4 ]
mov [ edi + 0x4 ] ebx
mov edi [ eax + 0x4 ]
mov ebx [ eax + 0x8 ]
mov [ edi + 0x8 ] ebx
mov ax [ eax + 0x2 ]
add [ edx + 0x2 ] ax
jmp r-xdata
mov edx [ ebp - 0xc ]
sub_4128f2
push esi
mov esi ecx
cmp [ esi + 0xaa ] 0x0
push edi
mov edi [ esp + 0xc ]
jne r-xdata
mov ecx edi
lea eax [ esi + edi * 4 + 0xb8 ]
mov [ esi + 0xaa ] 0xff
call sub_412792
lea ecx [ esi + edi * 4 + 0xb8 ]
mov eax [ ecx ]
test eax eax
je r-xdata
dec [ esi + 0xaa ]
movzx eax [ edi + esi + 0x4 ]
imul eax eax 0xc
lea edx [ esi + 0x15c ]
mov ecx [ edx ]
mov edi ecx
sub edi [ esi + 0x150 ]
cmp edi eax
jle r-xdata
cmp [ eax ] 0x0
je r-xdata
mov edx [ eax ]
mov [ ecx ] edx
jmp r-xdata
xor eax eax
jmp r-xdata
sub ecx eax
mov [ edx ] ecx
lea ecx [ esi + 0x154 ]
sub [ ecx ] eax
mov eax [ ecx ]
jmp r-xdata
inc ecx
add eax 0x4
cmp ecx 0x26
je r-xdata
push ebx
lea eax [ esi + ecx * 4 + 0xb8 ]
mov ebx [ eax ]
mov edx [ ebx ]
push edi
push ecx
push ebx
mov ecx esi
mov [ eax ] edx
call sub_411b21
mov eax ebx
pop ebx
pop edi
pop esi
retn 0x4
sub_41298f
mov eax [ esp + 0x4 ]
push esi
movzx esi [ eax + ecx + 0x29 ]
lea edx [ ecx + esi * 4 + 0xb8 ]
mov eax [ edx ]
test eax eax
je r-xdata
movzx edx [ esi + ecx + 0x4 ]
mov eax [ ecx + 0xb0 ]
imul edx edx 0xc
add edx eax
mov [ ecx + 0xb0 ] edx
cmp edx [ ecx + 0xb4 ]
jbe r-xdata
mov ecx [ eax ]
mov [ edx ] ecx
jmp r-xdata
pop esi
retn 0x4
movzx eax [ esi + ecx + 0x4 ]
imul eax eax 0xc
sub edx eax
push esi
mov [ ecx + 0xb0 ] edx
call sub_4128f2
sub_4129e4
lea edx [ ecx + 0xb4 ]
mov eax [ edx ]
cmp eax [ ecx + 0xb0 ]
je r-xdata
lea edx [ ecx + 0xb8 ]
cmp [ edx ] 0x0
je r-xdata
add eax 0xfffffff4
mov [ edx ] eax
retn
push 0x0
call sub_4128f2
retn
mov eax [ edx ]
mov ecx [ eax ]
mov [ edx ] ecx
retn
sub_412a14
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
movzx ebx [ esi + edi + 0x29 ]
movzx eax [ esi + edi + 0x2a ]
cmp ebx eax
jne r-xdata
lea eax [ esi + 0x1 ]
push eax
call sub_41298f
mov [ ebp + 0xc ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
imul esi esi 0xc
push esi
mov esi [ ebp + 0x8 ]
push esi
push eax
call sub_41be10
lea eax [ edi + ebx * 4 + 0xb8 ]
mov ecx [ eax ]
mov [ esi ] ecx
add esp 0xc
mov [ eax ] esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412a6a
push ebx
mov ebx ecx
mov ecx [ esp + 0x8 ]
add ecx 0x4a8c
call sub_4129e4
test eax eax
je r-xdata
pop ebx
retn 0xc
push esi
mov esi [ esp + 0x14 ]
push edi
xor ecx ecx
inc ecx
mov [ eax ] cx
mov ecx [ esp + 0x14 ]
lea edi [ eax + 0x2 ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop edi
mov [ eax + 0x8 ] ebx
mov [ ecx + 0x2 ] eax
pop esi
sub_412abf
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi 0x100
mov esi ecx
push edi
lea eax [ esi + 0x66c ]
push 0x0
push eax
call sub_41a3a0
lea ebx [ esi + 0x4a8c ]
add esp 0xc
mov ecx ebx
call sub_411bf2
mov eax [ esi + 0x660 ]
cmp eax 0xc
jl r-xdata
or ecx 0xffffffff
sub ecx eax
mov [ esi + 0x668 ] ecx
mov ecx ebx
call sub_4129e4
mov [ esi + 0x64c ] eax
mov [ esi + 0x644 ] eax
and [ eax + 0x8 ] 0x0
mov eax [ esi + 0x660 ]
mov [ esi + 0x65c ] eax
mov eax [ esi + 0x644 ]
mov [ eax ] di
mov eax [ esi + 0x644 ]
mov ecx 0x101
mov [ eax + 0x2 ] cx
mov edi 0x80
push edi
mov ecx ebx
call sub_41298f
mov ecx [ esi + 0x644 ]
mov [ ecx + 0x4 ] eax
mov eax [ esi + 0x644 ]
mov eax [ eax + 0x4 ]
mov [ esi + 0x650 ] eax
mov eax [ esi + 0x668 ]
xor ecx ecx
mov [ esi + 0x664 ] eax
mov [ esi + 0xa6d ] cl
xor eax eax
push 0xc
pop eax
mov edx [ esi + 0x644 ]
mov edx [ edx + 0x4 ]
mov [ eax + edx ] cl
mov edx [ esi + 0x644 ]
mov edx [ edx + 0x4 ]
mov [ edx + eax + 0x1 ] 0x1
mov edx [ esi + 0x644 ]
mov edx [ edx + 0x4 ]
and [ edx + eax + 0x2 ] 0x0
add eax 0x6
inc ecx
cmp eax 0x600
jl r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0xa70 ]
mov [ ebp - 0x10 ] eax
movzx eax [ ecx ]
cdq
idiv ebx
mov edx 0x4000
sub edx eax
mov eax [ ebp - 0x8 ]
add [ ebp - 0x8 ] 0x10
dec [ ebp - 0x14 ]
mov [ eax ] dx
jne r-xdata
add [ ebp - 0xc ] 0x2
inc ecx
inc ecx
cmp ecx r--data
jl r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] 0x8
inc [ ebp - 0x4 ]
add [ ebp - 0x10 ] edi
cmp [ ebp - 0x4 ] edi
jl r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
add ebx 0x2
mov ecx r--data
mov [ ebp - 0xc ] eax
xor edx edx
lea ecx [ esi + 0x3 ]
mov [ ecx - 0x1 ] 0x3
mov [ ecx - 0x3 ] ax
mov [ ecx ] 0x4
add ecx 0x4
dec esi
jne r-xdata
inc edx
cmp edx 0x19
jl r-xdata
lea eax [ edx + 0x2 ]
push 0x10
imul eax eax 0x28
pop esi
pop edi
pop esi
pop ebx
leave
retn
sub_412c3a
mov eax [ esp + 0x4 ]
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
push edi
mov [ esi + 0xa6c ] bl
mov [ esi + 0x660 ] eax
call sub_412abf
push 0x9
lea eax [ esi + 0x86e ]
push 0x4
push eax
mov [ esi + 0x86c ] 0x0
mov [ esi + 0x86d ] 0x2
call sub_41a3a0
push 0xf5
lea eax [ esi + 0x877 ]
push 0x6
push eax
call sub_41a3a0
add esp 0x18
xor eax eax
mov [ esi + eax + 0x76c ] al
inc eax
cmp eax 0x3
jl r-xdata
mov edx eax
mov edi ebx
mov ecx 0x100
jmp r-xdata
cmp eax ecx
jl r-xdata
dec edi
mov [ esi + eax + 0x76c ] dl
jne r-xdata
push 0x40
lea eax [ esi + 0x96c ]
push 0x0
push eax
call sub_41a3a0
push 0xc0
lea eax [ esi + 0x9ac ]
push 0x8
push eax
call sub_41a3a0
add esp 0x18
pop edi
mov [ esi + 0x642 ] 0x7
pop esi
pop ebx
retn 0x4
inc eax
inc ebx
mov edi ebx
inc edx
sub_412ceb
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx ecx
movzx eax [ ebx ]
mov [ ebp - 0x18 ] eax
dec eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x650 ]
push esi
push edi
jmp r-xdata
cmp eax [ ebx + 0x4 ]
jne r-xdata
lea esi [ eax - 0x6 ]
push esi
push eax
call sub_412549
mov eax esi
mov ecx [ ebx + 0x4 ]
add [ ecx + 0x1 ] 0x4
lea ecx [ ebx + 0x2 ]
add [ ecx ] 0x4
movzx edx [ ecx ]
movzx esi [ eax + 0x1 ]
movzx edx dx
sub edx esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
cmp [ esi + 0x65c ] edx
setne dl
mov [ ebp - 0x14 ] edx
movzx edx [ eax + 0x1 ]
add edx [ ebp - 0x14 ]
sar edx 0x1
mov [ eax + 0x1 ] dl
movzx dx dl
mov [ ecx ] dx
dec [ ebp - 0x4 ]
jne r-xdata
mov esi eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
mov edx eax
movsw [ edi ] [ esi ]
movzx edx [ eax + 0x7 ]
sub [ ebp - 0x8 ] edx
mov esi [ ebp - 0x14 ]
add eax 0x6
mov [ ebp - 0x10 ] edx
add edx esi
sar edx 0x1
mov [ eax + 0x1 ] dl
movzx dx dl
add [ ecx ] dx
mov dl [ eax + 0x1 ]
cmp dl [ eax - 0x5 ]
jbe r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
lea esi [ ebp - 0x20 ]
mov edi edx
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x20 ]
mov esi [ ebp - 0x10 ]
shr edx 0x8
cmp dl [ esi - 0x5 ]
mov edx esi
ja r-xdata
mov eax [ ebp - 0x8 ]
inc [ ebp - 0x4 ]
sub eax 0x6
cmp [ eax ] 0x0
je r-xdata
lea esi [ edx - 0x6 ]
mov edi edx
movsd [ edi ] [ esi ]
sub edx 0x6
movsw [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
cmp edx [ ebx + 0x4 ]
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x650 ] eax
push eax
push ecx
mov ecx [ ebp + 0x8 ]
push [ ebx + 0x4 ]
add ecx 0x4a8c
call sub_411d36
mov [ ebx + 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
sub [ ebx ] dx
add eax edx
movzx edx [ ebx ]
cmp dx 0x1
jne r-xdata
mov edx eax
sar edx 0x1
sub eax edx
add [ ecx ] ax
mov ecx [ ebp - 0x18 ]
movzx eax [ ebx ]
inc ecx
sar ecx 0x1
inc eax
sar eax 0x1
cmp ecx eax
je r-xdata
mov esi [ ebx + 0x4 ]
mov [ ebp - 0x14 ] esi
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x10 ]
shr edx 0x8
mov bl dl
shr bl 0x1
sub dl bl
sar eax 0x1
cmp eax 0x1
mov [ ebp - 0xf ] dl
jg r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov esi [ ebp - 0x14 ]
inc eax
sar eax 0x1
movzx eax [ eax + edx + 0x4ab5 ]
lea eax [ edx + eax * 4 + 0x4b44 ]
mov edi [ eax ]
mov [ esi ] edi
mov [ eax ] esi
mov [ edx + 0x650 ] ecx
lea esi [ ebp - 0x10 ]
mov edi ecx
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_412e7a
push ebp
mov ebp esp
sub esp 0x108
cmp [ ebp + 0x8 ] 0x0
push ebx
mov ebx ecx
mov eax [ ebx + 0x650 ]
mov ecx [ ebx + 0x644 ]
push esi
mov esi [ eax + 0x2 ]
push edi
lea edi [ ebp - 0x108 ]
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ecx + 0x8 ] 0x0
mov [ ebp - 0x108 ] eax
lea edi [ ebp - 0x104 ]
je r-xdata
mov ecx [ ecx + 0x8 ]
cmp [ ecx ] 0x1
je r-xdata
mov ecx [ ecx + 0x8 ]
jmp r-xdata
mov dl [ esi ]
inc esi
mov [ ebp - 0x6 ] esi
movzx esi [ ecx ]
mov [ ebp - 0x8 ] dl
cmp si 0x1
je r-xdata
lea eax [ ecx + 0x2 ]
mov edx [ ebx + 0x650 ]
mov eax [ ecx + 0x4 ]
mov dl [ edx ]
jmp r-xdata
cmp [ eax + 0x2 ] esi
jne r-xdata
mov al [ ecx + 0x3 ]
cmp ecx [ ebx + 0x4bdc ]
ja r-xdata
mov ecx [ eax + 0x2 ]
mov [ edi ] eax
add edi 0x4
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
cmp [ eax ] dl
jne r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x108 ]
cmp edi eax
jne r-xdata
mov eax [ ecx + 0x4 ]
jmp r-xdata
mov eax ecx
jmp r-xdata
add eax 0x6
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
lea eax [ ebp - 0x8 ]
push eax
sub edi 0x4
push [ edi ]
push ebx
call sub_412a6a
mov ecx eax
test ecx ecx
je r-xdata
cmp [ eax ] dl
jne r-xdata
lea eax [ ebp - 0x108 ]
cmp edi eax
je r-xdata
add eax 0x6
movzx eax [ eax + 0x1 ]
movzx edx [ ecx + 0x2 ]
movzx esi si
dec eax
sub edx esi
sub edx eax
lea esi [ eax + eax ]
cmp esi edx
ja r-xdata
mov eax edx
imul eax eax 0x3
lea eax [ eax + esi - 0x1 ]
lea esi [ edx + edx ]
xor edx edx
div esi
imul eax eax 0x5
cmp edx eax
sbb eax eax
neg eax
jmp r-xdata
mov [ ebp - 0x7 ] al
inc al
jmp r-xdata
sub_412f94
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov ebx ecx
mov esi [ ebx + 0x650 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx [ ebp - 0x20 ]
mov eax ecx
shr eax 0x8
xor esi esi
cmp al 0x1f
jae r-xdata
xor edx edx
cmp [ ebx + 0x65c ] edx
jne r-xdata
mov eax [ ebx + 0x644 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x4bdc ]
mov [ eax ] cl
inc [ ebx + 0x4bdc ]
mov eax [ ebx + 0x4bdc ]
mov [ ebp - 0x14 ] eax
cmp eax [ ebx + 0x4be8 ]
jae r-xdata
push esi
push 0x1
mov ecx ebx
call sub_412e7a
mov ecx [ ebx + 0x650 ]
mov [ ecx + 0x2 ] eax
mov eax [ ebx + 0x650 ]
mov eax [ eax + 0x2 ]
mov [ ebx + 0x64c ] eax
mov [ ebx + 0x644 ] eax
test eax eax
jne r-xdata
cmp [ edi ] 0x1
je r-xdata
mov ecx ebx
call sub_412abf
mov [ ebx + 0xa6c ] 0x0
jmp r-xdata
cmp [ ebp - 0x1e ] edx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea esi [ edi + 0x2 ]
mov al [ esi + 0x1 ]
cmp al 0x20
setb dl
add dl al
mov [ esi + 0x1 ] dl
mov esi [ edi + 0x4 ]
cmp [ esi ] cl
je r-xdata
mov ecx [ ebx + 0x650 ]
mov [ ecx + 0x2 ] eax
mov eax [ ebx + 0x644 ]
mov [ ebp - 0x1e ] eax
cmp [ ebp - 0x1e ] eax
ja r-xdata
mov al [ esi + 0x1 ]
mov ecx [ ebp - 0x20 ]
cmp al 0x73
jae r-xdata
add esi 0x6
cmp [ esi ] cl
jne r-xdata
movzx eax [ esi ]
mov [ ebp - 0x4 ] eax
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x1e ]
mov [ ebx + 0x644 ] eax
mov [ ebx + 0x64c ] eax
dec [ ebx + 0x65c ]
jne r-xdata
push esi
push edx
mov ecx ebx
call sub_412e7a
mov [ ebp - 0x1e ] eax
test eax eax
je r-xdata
add al 0x2
mov [ esi + 0x1 ] al
add [ edi + 0x2 ] 0x2
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al [ esi - 0x5 ]
jb r-xdata
push 0x1
lea ecx [ ebx + 0x4a8c ]
call sub_41298f
test eax eax
je r-xdata
test al 0x1
jne r-xdata
mov eax [ ebx + 0x644 ]
movzx ecx [ ebp - 0x1f ]
movzx esi [ eax ]
movzx edi [ eax + 0x2 ]
sub edi ecx
sub edi esi
mov [ ebp - 0xc ] esi
mov esi [ ebx + 0x64c ]
inc edi
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x8 ] esi
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x1e ]
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x64c ]
xor ecx ecx
cmp eax [ ebx + 0x644 ]
setne cl
sub [ ebx + 0x4bdc ] ecx
jmp r-xdata
lea eax [ esi - 0x6 ]
push eax
push esi
mov [ ebp - 0x14 ] eax
call sub_412549
mov esi [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
lea ecx [ esi + 0x2 ]
mov esi ecx
mov edi eax
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov [ edx + 0x4 ] eax
mov dl [ eax + 0x1 ]
cmp dl 0x1e
jae r-xdata
shl eax 0x3
lea ecx [ esi + 0x2 ]
movzx edx [ ecx ]
movzx edx dx
cmp eax edx
mov eax [ ebp - 0x4 ]
sbb edx edx
shl eax 0x2
inc edx
cmp [ ebp - 0xc ] eax
sbb eax eax
inc eax
and dx ax
mov eax [ ebp - 0x4 ]
add eax eax
add dx dx
cmp eax [ ebp - 0xc ]
sbb eax eax
neg eax
add dx ax
movzx eax [ ecx ]
jmp r-xdata
shr eax 0x1
push eax
push [ esi + 0x4 ]
lea ecx [ ebx + 0x4a8c ]
call sub_412a14
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov [ eax + 0x1 ] 0x78
add dl dl
mov [ eax + 0x1 ] dl
jmp r-xdata
add dx ax
movzx eax dx
mov [ ecx ] dx
movzx edx ax
lea eax [ edx + 0x6 ]
imul eax [ ebp - 0x18 ]
add edx edi
mov edi edx
imul edi edi 0x6
add eax eax
cmp eax edi
mov [ ebp - 0x8 ] edx
mov edi edx
jae r-xdata
mov eax [ ebp - 0x4 ]
imul edi edi 0xf
cmp eax edi
sbb edi edi
imul edx edx 0xc
inc edi
cmp eax edx
sbb edx edx
inc edx
add edi edx
mov edx [ ebp - 0x8 ]
imul edx edx 0x9
cmp eax edx
sbb eax eax
inc eax
lea edx [ edi + eax + 0x4 ]
movzx eax [ ecx ]
add eax edx
shl edi 0x2
cmp eax edi
sbb edi edi
inc edi
cmp edx eax
sbb eax eax
neg eax
lea edx [ edi + eax + 0x1 ]
movzx eax [ ecx ]
add eax 0x3
jmp r-xdata
movzx ax [ eax + 0x1 ]
mov edi [ ebp - 0x10 ]
mov esi [ ebp - 0x8 ]
push 0x3
pop edx
cmp edx [ ebp - 0xc ]
sbb edx edx
neg edx
add dx [ ebx + 0x658 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x10 ]
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov [ ecx ] ax
mov ecx [ ebp - 0x14 ]
mov eax edi
imul eax eax 0x6
add eax [ esi + 0x4 ]
inc edi
mov [ eax + 0x2 ] ecx
mov cl [ ebp - 0x20 ]
mov [ eax ] cl
mov [ eax + 0x1 ] dl
mov [ esi ] di
mov esi [ esi + 0x8 ]
mov [ ebp - 0x8 ] esi
cmp esi [ ebx + 0x644 ]
jne r-xdata
sub_413272
mov eax [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x8 ]
mov [ ebx + 0x650 ] eax
add [ eax + 0x1 ] 0x4
push edi
mov edi ecx
add [ edi + 0x2 ] 0x4
mov cl [ eax + 0x1 ]
cmp cl [ eax - 0x5 ]
jbe r-xdata
pop edi
pop ebx
retn 0x8
push esi
lea esi [ eax - 0x6 ]
push esi
push eax
call sub_412549
mov [ ebx + 0x650 ] esi
cmp [ esi + 0x1 ] 0x7c
pop esi
jbe r-xdata
push ebx
mov ecx edi
call sub_412ceb
sub_4132ba
push ebp
mov ebp esp
movzx eax [ ecx + 0x2 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x4a84 ] eax
lea ebx [ esi + 0x4a70 ]
mov eax [ ebx + 0x8 ]
xor edx edx
div [ ebx + 0x14 ]
push edi
mov edi [ ecx + 0x4 ]
xor edx edx
mov [ ebp + 0x8 ] eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x4 ]
sub eax [ ebx ]
div [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ esi + 0x4a84 ]
cmp [ ebp + 0x8 ] eax
jl r-xdata
movzx edx [ edi + 0x1 ]
cmp [ ebp + 0x8 ] edx
jge r-xdata
xor al al
jmp r-xdata
cmp [ esi + 0x650 ] 0x0
je r-xdata
lea ebx [ edx + edx ]
cmp ebx eax
seta al
mov [ esi + 0xa6d ] al
mov [ esi + 0x4a80 ] edx
movzx eax al
add [ esi + 0x664 ] eax
add edx 0x4
mov [ esi + 0x650 ] edi
mov [ edi + 0x1 ] dl
add [ ecx + 0x2 ] 0x4
cmp edx 0x7c
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ esi + 0xa6d ] 0x0
movzx ebx [ ecx ]
dec ebx
jmp r-xdata
and [ esi + 0x4a7c ] 0x0
jmp r-xdata
push esi
call sub_412ceb
movzx eax [ edi + 0x7 ]
add edi 0x6
add edx eax
cmp edx [ ebp + 0x8 ]
jle r-xdata
mov al 0x1
dec ebx
je r-xdata
mov [ esi + 0x4a80 ] edx
movzx eax [ edi + 0x1 ]
push edi
sub edx eax
push esi
mov [ esi + 0x4a7c ] edx
call sub_413272
mov eax [ esi + 0x650 ]
movzx eax [ eax ]
mov al [ eax + esi + 0x96c ]
mov [ esi + 0xa6e ] al
mov [ esi + 0x4a7c ] edx
movzx eax [ edi ]
mov dl [ esi + 0xa6c ]
mov [ eax + esi + 0x66c ] dl
movzx eax [ ecx ]
mov [ esi + 0x654 ] eax
dec eax
and [ esi + 0x650 ] 0x0
mov dl [ esi + 0xa6c ]
sub edi 0x6
dec eax
movzx ecx [ edi ]
mov [ ecx + esi + 0x66c ] dl
jne r-xdata
mov eax [ esi + 0x4a84 ]
mov [ esi + 0x4a80 ] eax
jmp r-xdata
sub_4133f8
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov [ esi + 0x650 ] eax
add [ eax + 0x1 ] 0x4
add [ ecx + 0x2 ] 0x4
cmp [ eax + 0x1 ] 0x7c
jbe r-xdata
mov eax [ esi + 0x668 ]
inc [ esi + 0xa6c ]
mov [ esi + 0x664 ] eax
pop esi
retn 0x8
push esi
call sub_412ceb
sub_413432
push ebp
mov ebp esp
push ecx
movzx eax [ ecx ]
mov edx 0x100
push edi
cmp ax dx
je r-xdata
mov eax [ ebp + 0x8 ]
lea edi [ eax + 0x640 ]
mov [ eax + 0x4a84 ] 0x1
push ebx
movzx edi ax
mov eax [ ebp + 0xc ]
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x654 ] eax
movzx edx [ esi + eax + 0x76b ]
setg bl
mov [ ebp - 0x4 ] edi
imul edi edi 0xb
lea eax [ ebx + edx * 4 ]
movzx edx [ ecx + 0x2 ]
mov ecx [ ecx + 0x8 ]
movzx ecx [ ecx ]
xor ebx ebx
cmp edx edi
setl bl
sub ecx [ ebp - 0x4 ]
xor edx edx
cmp [ ebp + 0xc ] ecx
movzx ecx [ esi + 0xa6e ]
setl dl
lea eax [ ebx + eax * 2 ]
lea eax [ edx + eax * 2 ]
add eax ecx
lea edi [ esi + eax * 4 ]
mov ecx edi
call sub_4126cb
mov [ esi + 0x4a84 ] eax
pop esi
pop ebx
jmp r-xdata
mov eax edi
pop edi
leave
retn 0x8
sub_4134c4
push ebp
mov ebp esp
sub esp 0x408
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ebx ecx
movzx edi [ ebx ]
sub edi [ esi + 0x654 ]
push edi
push esi
call sub_413432
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x408 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0x4 ]
sub eax 0x6
and [ ebp - 0x8 ] 0x0
mov cl [ esi + 0xa6c ]
add eax 0x6
movzx edx [ eax ]
cmp [ edx + esi + 0x66c ] cl
je r-xdata
movzx edx [ eax + 0x1 ]
mov ecx [ ebp - 0x8 ]
add ecx edx
mov edx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
dec edi
mov [ ebp - 0x8 ] ecx
mov [ edx ] eax
jne r-xdata
add [ esi + 0x4a84 ] ecx
lea edi [ esi + 0x4a70 ]
mov eax [ edi + 0x8 ]
xor edx edx
div [ edi + 0x14 ]
xor edx edx
mov [ ebp + 0x8 ] eax
mov [ edi + 0x8 ] eax
mov eax [ edi + 0x4 ]
sub eax [ edi ]
div [ ebp + 0x8 ]
mov edx [ esi + 0x4a84 ]
cmp eax edx
mov [ ebp + 0x8 ] eax
jl r-xdata
cmp [ ebp + 0x8 ] ecx
mov edi [ ebp - 0x408 ]
lea eax [ ebp - 0x408 ]
jge r-xdata
xor al al
jmp r-xdata
mov [ esi + 0x4a7c ] ecx
mov [ esi + 0x4a80 ] edx
movzx edi [ ebx ]
sub edi [ esi + 0x654 ]
lea eax [ ebp - 0x408 ]
sub eax 0x4
mov ecx edi
movzx edx [ ecx + 0x1 ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov dl [ esi + 0xa6c ]
add eax 0x4
dec edi
mov ecx [ eax ]
movzx ecx [ ecx ]
mov [ ecx + esi + 0x66c ] dl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov cx [ esi + 0x4a84 ]
add [ eax ] cx
movzx eax [ ebx ]
mov [ esi + 0x654 ] eax
cmp edx [ ebp + 0x8 ]
jle r-xdata
add eax 0x4
mov edi [ eax ]
movzx ecx [ edi + 0x1 ]
add edx ecx
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4a80 ] edx
movzx eax [ edi + 0x1 ]
sub edx eax
mov [ esi + 0x4a7c ] edx
call sub_4126e9
push edi
push esi
mov ecx ebx
call sub_4133f8
jmp r-xdata
mov al 0x1
sub_413603
push esi
mov esi ecx
push edi
lea edi [ esi + 0x4a8c ]
mov ecx edi
call sub_411b81
push 0x1
mov ecx edi
call sub_411b96
push 0x2
mov ecx esi
call sub_412c3a
pop edi
pop esi
retn
sub_413629
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx edi
call sub_41273d
mov ebx eax
mov [ ebp + 0x8 ] ebx
shr ebx 0x5
and bl 0x1
je r-xdata
cmp [ esi + 0x4a8c ] 0x0
jne r-xdata
mov ecx edi
call sub_41273d
mov [ ebp - 0x4 ] eax
test [ ebp + 0x8 ] 0x40
je r-xdata
xor al al
jmp r-xdata
push edi
lea ecx [ esi + 0x4a70 ]
call sub_41275e
test bl bl
je r-xdata
mov ecx edi
call sub_41273d
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
pop edi
pop esi
pop ebx
leave
retn 0x8
xor eax eax
cmp [ esi + 0x644 ] eax
setne al
mov eax [ ebp + 0x8 ]
and eax 0x1f
inc eax
mov ebx eax
cmp ebx 0x10
jle r-xdata
lea ecx [ esi + 0x4a8c ]
cmp ebx 0x1
jne r-xdata
imul ebx ebx 0x3
sub ebx 0x20
mov eax [ ebp - 0x4 ]
inc eax
push eax
call sub_411b96
push ebx
mov ecx esi
call sub_412c3a
call sub_411b81
jmp r-xdata
sub_4136cc
push esi
mov esi ecx
mov ecx [ esi + 0x644 ]
mov edx [ esi + 0x4bdc ]
push edi
cmp ecx edx
jbe r-xdata
or eax 0xffffffff
mov edi [ esi + 0x4be4 ]
cmp ecx edi
ja r-xdata
cmp [ ecx ] 0x1
je r-xdata
push esi
call sub_411da6
mov eax [ ecx + 0x4 ]
cmp eax edx
jbe r-xdata
mov eax [ esi + 0x4a70 ]
mov ecx [ esi + 0x4a78 ]
lea edx [ eax + ecx ]
xor edx eax
cmp edx 0x1000000
jb r-xdata
cmp [ esi + 0x65c ] 0x0
mov eax [ esi + 0x650 ]
push ebx
movzx ebx [ eax ]
jne r-xdata
cmp eax edi
ja r-xdata
mov ecx [ esi + 0x4a88 ]
lea edi [ esi + 0x4a74 ]
call sub_41273d
mov ecx [ edi ]
shl [ esi + 0x4a78 ] 0x8
shl ecx 0x8
or eax ecx
shl [ esi + 0x4a70 ] 0x8
mov [ edi ] eax
jmp r-xdata
cmp ecx 0x8000
jae r-xdata
mov ecx esi
call sub_412f94
cmp [ esi + 0xa6c ] 0x0
jne r-xdata
mov eax [ eax + 0x2 ]
cmp eax [ esi + 0x4bdc ]
jbe r-xdata
push esi
call sub_4132ba
mov eax [ esi + 0x4bdc ]
neg eax
and eax 0x7fff
mov [ esi + 0x4a78 ] eax
mov eax [ esi + 0x4a70 ]
mov ecx [ esi + 0x4a78 ]
lea edx [ eax + ecx ]
xor edx eax
cmp edx 0x1000000
jb r-xdata
mov ecx esi
call sub_411ed5
mov [ esi + 0x64c ] eax
mov [ esi + 0x644 ] eax
jmp r-xdata
mov ecx [ esi + 0x4a7c ]
lea eax [ esi + 0x4a78 ]
mov edx [ eax ]
mov edi edx
imul edi ecx
add [ esi + 0x4a70 ] edi
mov edi [ esi + 0x4a80 ]
sub edi ecx
imul edi edx
mov [ eax ] edi
cmp [ esi + 0x650 ] 0x0
je r-xdata
cmp ecx [ esi + 0x4be4 ]
ja r-xdata
mov ecx [ esi + 0x4a88 ]
lea edi [ esi + 0x4a74 ]
call sub_41273d
mov ecx [ edi ]
shl [ esi + 0x4a78 ] 0x8
shl ecx 0x8
or eax ecx
shl [ esi + 0x4a70 ] 0x8
mov [ edi ] eax
jmp r-xdata
cmp ecx 0x8000
jae r-xdata
movzx edx [ ecx ]
cmp edx [ esi + 0x654 ]
je r-xdata
mov eax ebx
pop ebx
jmp r-xdata
neg eax
and eax 0x7fff
mov [ esi + 0x4a78 ] eax
mov ecx [ esi + 0x644 ]
inc [ esi + 0x65c ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x644 ] ecx
cmp ecx eax
jbe r-xdata
push esi
call sub_4134c4
jmp r-xdata
pop edi
pop esi
retn
test al al
jne r-xdata
sub_41388b
mov eax sub_4293c3
call sub_41a05c
push ecx
push ecx
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x20 ] ebx
jne r-xdata
cmp [ edi + 0x18 ] ebx
jne r-xdata
mov esi 0x400400
push esi
call sub_419c68
push esi
push ebx
push eax
mov [ edi + 0x20 ] eax
call sub_41a3a0
add esp 0x10
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov esi [ edi + 0x1c ]
add esi esi
xor ecx ecx
mov ebx 0x4ae4
mov eax esi
mov edx ebx
mul edx
seto cl
neg ecx
or ecx eax
xor eax eax
add ecx 0x4
setb al
neg eax
or eax ecx
push eax
call sub_419c68
pop ecx
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
push sub_412720
push sub_412708
push esi
mov [ eax ] esi
add eax 0x4
push ebx
push eax
mov [ ebp - 0x14 ] eax
call sub_41c236
mov eax [ ebp - 0x14 ]
jmp r-xdata
and [ ebp - 0x10 ] 0x0
mov [ ebp - 0x14 ] esi
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
imul ecx ecx 0x4ae4
push ecx
push 0x0
push eax
mov [ edi + 0x18 ] eax
call sub_41a3a0
add esp 0xc
test esi esi
jbe r-xdata
add [ ebp - 0x10 ] ebx
dec [ ebp - 0x14 ]
jne r-xdata
push 0x30c00
mov [ eax + 0x4adc ] 0x4100
call sub_41cafe
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax [ edi + 0x18 ]
add eax [ ebp - 0x10 ]
lea esi [ eax + 0x4ad4 ]
cmp [ esi ] 0x0
jne r-xdata
mov ecx rw-data
call sub_40632c
sub_413990
push ebx
mov bl [ esp + 0x8 ]
push esi
mov esi ecx
test bl 0x2
je r-xdata
call sub_412720
test bl 0x1
je r-xdata
push edi
push sub_412720
lea edi [ esi - 0x4 ]
push [ edi ]
push 0x4ae4
push esi
call sub_41c1d3
test bl 0x1
je r-xdata
mov eax esi
push esi
call sub_41a07b
pop ecx
mov eax edi
pop edi
jmp r-xdata
push edi
call sub_41c45d
pop ecx
pop esi
pop ebx
retn 0x4
sub_4139dc
push ebx
push esi
mov esi ecx
push edi
lea edi [ esi + 0x98d0 ]
mov ecx edi
call sub_4136cc
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
retn
mov ecx edi
call sub_413603
and [ esi + 0xe654 ] 0x0
sub_413a24
push esi
push edi
mov edi [ esp + 0xc ]
cmp [ edi + 0x1c ] 0x0
mov esi ecx
jbe r-xdata
pop edi
pop esi
retn 0x4
mov eax [ esi + 0x4c50 ]
push ebx
mov [ edi + 0x50 ] eax
mov eax [ edi + 0x18 ]
push [ esi + 0x4c50 ]
add eax 0x24
lea ebx [ esi + 0xe65c ]
push eax
mov ecx ebx
call sub_40a85a
mov eax [ esi + 0x4c50 ]
mov edx [ esi + 0x4c54 ]
mov cl 0x20
call sub_41d390
push eax
mov eax [ edi + 0x18 ]
add eax 0x28
push eax
mov ecx ebx
call sub_40a85a
push edi
mov ecx ebx
call sub_40b0bb
pop ebx
sub_413a86
push ebp
mov ebp esp
sub esp 0x1b0
push ebx
mov ebx ecx
mov eax [ ebx + 0x78 ]
push esi
lea esi [ ebx + 0x4 ]
sub eax 0x19
cmp [ esi ] eax
jle r-xdata
mov eax [ ebx + 0x8 ]
neg eax
and eax 0x7
push eax
mov ecx esi
call sub_409542
mov ecx esi
call j_sub_409514
test eax 0x8000
je r-xdata
call sub_411ef3
test al al
je r-xdata
push edi
xor edi edi
mov [ ebx + 0xe654 ] edi
mov [ ebx + 0x98c8 ] edi
mov [ ebx + 0x98cc ] edi
test eax 0x4000
jne r-xdata
lea eax [ ebx + 0xe4bc ]
push eax
push ebx
lea ecx [ ebx + 0x98d0 ]
mov [ ebx + 0xe654 ] 0x1
call sub_413629
jmp r-xdata
pop esi
pop ebx
leave
retn
push 0x2
mov ecx esi
call sub_409542
mov [ ebp - 0x4 ] edi
push 0x194
lea eax [ ebx + 0xe4c0 ]
push edi
push eax
call sub_41a3a0
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov [ ebp + ecx - 0x1c ] al
mov ecx esi
call j_sub_409514
shr eax 0xc
push 0x4
mov ecx esi
movzx edi al
call sub_409542
test edi edi
jne r-xdata
mov ecx esi
call j_sub_409514
shr eax 0xc
movzx eax al
push 0x4
mov ecx esi
mov [ ebp - 0x8 ] eax
call sub_409542
mov eax [ ebp - 0x8 ]
cmp eax 0xf
jne r-xdata
push 0x14
lea edi [ ebx + 0x3c44 ]
push edi
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
call sub_4123d1
and [ ebp - 0x4 ] 0x0
inc edi
inc edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp + eax - 0x1c ] 0xf
jmp r-xdata
mov ecx esi
call sub_409514
mov edx [ edi + 0x84 ]
and eax 0xfffe
cmp eax [ edi + edx * 4 + 0x4 ]
jae r-xdata
mov ecx ebx
call sub_411ef3
test al al
je r-xdata
test edi edi
jg r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x14
jb r-xdata
inc edx
mov [ ebp - 0x8 ] 0xf
cmp edx 0xf
jae r-xdata
push 0x10
pop ecx
sub ecx edx
shr eax cl
movzx ecx [ eax + edi + 0x88 ]
add ecx [ esi + 0x4 ]
mov edx ecx
shr edx 0x3
add [ esi ] edx
and ecx 0x7
mov [ esi + 0x4 ] ecx
movzx eax [ edi + eax * 2 + 0x488 ]
jmp r-xdata
xor al al
jmp r-xdata
dec edi
cmp [ ebp - 0x4 ] 0x14
jae r-xdata
dec [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ ebp - 0x8 ]
push 0x10
mov edx ecx
shr edx 0x3
add [ esi ] edx
mov edx [ ebp - 0x8 ]
and ecx 0x7
mov [ esi + 0x4 ] ecx
sub eax [ edi + edx * 4 ]
pop ecx
sub ecx edx
shr eax cl
add eax [ edi + edx * 4 + 0x44 ]
cmp eax [ edi ]
jb r-xdata
lea ecx [ edi + edx * 4 + 0x4 ]
cmp eax 0x10
jge r-xdata
pop edi
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov [ ebp + eax - 0x1c ] 0x0
movzx eax [ edi + eax * 2 + 0xc88 ]
xor eax eax
mov [ ebp - 0x8 ] edx
inc edx
add ecx 0x4
cmp edx 0xf
jb r-xdata
cmp eax 0x12
mov ecx esi
jge r-xdata
mov ecx [ ebp - 0x4 ]
mov dl [ ecx + ebx + 0xe4c0 ]
add dl al
and dl 0xf
mov [ ebp + ecx - 0x1b0 ] dl
inc ecx
mov [ ebp - 0x4 ] ecx
jmp r-xdata
cmp eax [ ecx ]
jb r-xdata
jmp r-xdata
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp [ ebp - 0x4 ] 0x194
jl r-xdata
call j_sub_409514
shr eax 0x9
add eax 0xb
push 0x7
call j_sub_409514
shr eax 0xd
add eax 0x3
push 0x3
jmp r-xdata
call j_sub_409514
shr eax 0x9
add eax 0xb
push 0x7
call j_sub_409514
shr eax 0xd
add eax 0x3
push 0x3
jmp r-xdata
mov eax [ ebx + 0x78 ]
sub eax 0x5
cmp [ esi ] eax
jle r-xdata
mov eax [ esi ]
cmp eax [ ebx + 0x78 ]
mov [ ebx + 0xe658 ] 0x1
jle r-xdata
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
mov ecx esi
mov [ ebp - 0x8 ] eax
call sub_409542
jmp r-xdata
jmp r-xdata
mov ecx esi
mov [ ebp - 0x8 ] eax
call sub_409542
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
push 0x12b
lea eax [ ebx + 0x94 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
mov ecx ebx
call sub_4123d1
push 0x3c
lea eax [ ebx + 0xf80 ]
push eax
lea eax [ ebp - 0x85 ]
push eax
mov ecx ebx
call sub_4123d1
push 0x11
lea eax [ ebx + 0x1e6c ]
push eax
lea eax [ ebp - 0x49 ]
push eax
mov ecx ebx
call sub_4123d1
push 0x1c
lea eax [ ebx + 0x2d58 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov ecx ebx
call sub_4123d1
push 0x194
lea eax [ ebp - 0x1b0 ]
push eax
add ebx 0xe4c0
push ebx
call sub_41be10
add esp 0xc
mov al 0x1
dec [ ebp - 0x8 ]
cmp [ ebp - 0x4 ] 0x194
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov [ ebp + eax - 0x1b0 ] 0x0
mov eax [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
cmp eax 0x194
jge r-xdata
jmp r-xdata
mov cl [ ebp + eax - 0x1b1 ]
mov [ ebp + eax - 0x1b0 ] cl
inc eax
mov [ ebp - 0x4 ] eax
sub_413dce
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
call j_sub_409514
mov ecx [ esi + 0x4 ]
shr eax 0xe
inc eax
inc ecx
inc ecx
mov edx ecx
shr edx 0x3
add [ esi ] edx
xor edi edi
and ecx 0x7
mov [ esi + 0x4 ] ecx
mov [ ebp + 0x8 ] edi
cmp eax edi
jbe r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
push ebx
mov ebx eax
mov ecx esi
call j_sub_409514
shr eax 0x8
mov ecx edi
shl eax cl
add edi 0x8
add [ ebp + 0x8 ] eax
mov eax [ esi + 0x4 ]
add eax 0x8
mov ecx eax
shr ecx 0x3
add [ esi ] ecx
and eax 0x7
dec ebx
mov [ esi + 0x4 ] eax
jne r-xdata
pop ebx
sub_413e33
push ebx
push edi
mov edi [ esp + 0xc ]
cmp [ edi + 0x8 ] 0x0
mov ebx ecx
jne r-xdata
push esi
push edi
mov ecx ebx
call sub_413dce
mov esi [ esp + 0x14 ]
push edi
mov ecx ebx
mov [ esi + 0x4 ] eax
call sub_413dce
mov ecx edi
mov [ esi + 0x8 ] eax
call j_sub_409514
shr eax 0xd
push 0x3
mov ecx edi
mov [ esi ] al
call sub_409542
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x78 ]
sub eax 0x10
cmp [ edi ] eax
jle r-xdata
mov al 0x1
pop esi
mov ecx edi
call j_sub_409514
shr eax 0xb
inc al
push 0x5
mov ecx edi
mov [ esi + 0xc ] al
call sub_409542
call sub_411f71
test al al
je r-xdata
pop edi
pop ebx
retn 0x8
sub_413ea9
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push ebx
mov bl [ edx ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
test bl bl
je r-xdata
push [ ebp + 0xc ]
movzx ebx [ edx + 0xc ]
and [ ebp + 0x10 ] 0x0
lea esi [ ecx + 0x34 ]
mov ecx esi
call sub_401c21
and [ ebp + 0x8 ] 0x0
mov eax [ esi ]
test ebx ebx
jbe r-xdata
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor cl cl
cmp edx esi
jae r-xdata
xor eax eax
jmp r-xdata
cmp bl 0x2
jbe r-xdata
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] ebx
jb r-xdata
mov esi [ ebp + 0x10 ]
sub cl [ esi + edi ]
inc [ ebp + 0x10 ]
mov [ edx + eax ] cl
add edx ebx
cmp edx [ ebp + 0xc ]
jb r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ecx + 0x4c50 ]
cmp bl 0x2
sete bl
and [ ebp + 0x8 ] 0x0
add eax 0xfffffffc
add bl 0xe8
mov [ ebp + 0x10 ] eax
test eax eax
jle r-xdata
cmp bl 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov edx ecx
mov esi 0x80000000
mov edx [ ebp + 0xc ]
mov ecx [ ecx + 0x4c50 ]
add edx 0xfffffffd
test edx edx
jle r-xdata
mov ecx [ edi ]
and edx 0xffffff
test esi ecx
je r-xdata
cmp cl bl
jne r-xdata
mov eax edi
jmp r-xdata
lea esi [ edx - 0x1 ]
shr esi 0x2
mov ebx ecx
lea eax [ edi + 0x1 ]
inc esi
lea eax [ ecx - 0x1000000 ]
test esi eax
je r-xdata
lea eax [ ecx + edx ]
test esi eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0x10 ]
jl r-xdata
add eax 0x4
add ebx 0x4
dec esi
jne r-xdata
movzx ecx [ eax + 0x1 ]
movzx edx [ eax ]
shl ecx 0x8
add ecx edx
shl ecx 0x8
mov edx ebx
shr edx 0x2
sub ecx edx
movzx edx [ eax - 0x1 ]
add ecx edx
mov edx ecx
shr edx 0x8
mov [ eax - 0x1 ] cl
shr ecx 0x10
mov [ eax ] dl
mov [ eax + 0x1 ] cl
mov edx [ ebp + 0xc ]
add [ ebp + 0x8 ] 0x4
add edi 0x4
add edx 0x4
sub ecx edx
add ecx 0x1000000
jmp r-xdata
mov cl [ edi ]
inc edi
inc [ ebp + 0x8 ]
inc edx
mov [ ebp + 0xc ] edx
cmp cl 0xe8
je r-xdata
cmp [ eax + 0x2 ] 0xeb
jne r-xdata
mov [ edi ] ecx
sub_414003
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
cmp edi ebx
je r-xdata
cmp [ esi + 0x4c38 ] 0x0
je r-xdata
mov [ esi + 0x4c4a ] 0x1
jae r-xdata
cmp edi ebx
jae r-xdata
sub edi ebx
and edi [ esi + 0xe6dc ]
mov [ ebp + 0xc ] edi
jbe r-xdata
mov [ esi + 0x4c49 ] 0x1
mov eax [ esi + 0x4b34 ]
sub edi ebx
push edi
add eax ebx
push eax
mov eax [ esi + 0xe6d8 ]
sub eax ebx
push eax
mov eax [ esi + 0x4b34 ]
add eax ebx
push eax
call sub_41202a
push edi
push [ esi + 0x4b34 ]
mov ecx esi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
lea ecx [ esi + 0x4b38 ]
push ebx
call sub_412241
mov edi eax
push edi
push ebx
lea ecx [ esi + 0x4b38 ]
call sub_412198
push eax
mov ecx esi
call sub_41202a
sub [ ebp + 0xc ] edi
add ebx edi
and ebx [ esi + 0xe6dc ]
cmp [ ebp + 0xc ] 0x0
ja r-xdata
call sub_41202a
jmp r-xdata
sub_4140b2
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
and [ edi + 0xc ] 0x0
cmp [ esi + 0x8 ] 0x0
mov [ ebp - 0xc ] ecx
jne r-xdata
mov eax [ esi + 0x4 ]
neg eax
push ebx
and eax 0x7
push eax
mov ecx esi
call sub_409542
mov ecx esi
call j_sub_409514
mov ebx eax
shr ebx 0x8
push 0x8
mov ecx esi
mov [ ebp + 0xf ] bl
call sub_409542
movzx eax bl
mov ebx eax
shr ebx 0x3
and ebx 0x3
inc ebx
cmp ebx 0x4
je r-xdata
mov eax [ ecx + 0x78 ]
sub eax 0x7
cmp [ esi ] eax
jle r-xdata
xor al al
jmp r-xdata
lea ecx [ ebx + 0x2 ]
and eax 0x7
mov [ edi + 0xc ] ecx
inc eax
mov ecx esi
mov [ edi + 0x4 ] eax
call j_sub_409514
shr eax 0x8
push 0x8
mov ecx esi
mov [ ebp + 0xb ] al
call sub_409542
xor eax eax
mov [ ebp - 0x8 ] eax
cmp ebx eax
jbe r-xdata
call sub_411f71
test al al
je r-xdata
pop ebx
mov edx eax
sar edx 0x10
mov ecx eax
sar ecx 0x8
xor dl cl
mov cl [ ebp + 0xf ]
xor dl al
xor dl cl
xor dl 0x5a
mov [ edi ] eax
cmp dl [ ebp + 0xb ]
je r-xdata
mov [ ebp - 0x4 ] eax
pop edi
pop esi
leave
retn 0x8
mov esi [ esi ]
lea edx [ esi + eax - 0x1 ]
mov eax [ ebp - 0xc ]
mov [ edi + 0x8 ] esi
mov esi [ eax + 0x7c ]
cmp esi edx
jge r-xdata
mov ecx esi
call j_sub_409514
mov ecx [ ebp - 0x4 ]
add [ ebp - 0x4 ] 0x8
shr eax 0x8
shl eax cl
add [ ebp - 0x8 ] eax
mov eax [ esi + 0x4 ]
add eax 0x8
mov ecx eax
shr ecx 0x3
add [ esi ] ecx
and eax 0x7
dec ebx
mov [ esi + 0x4 ] eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x7c ] edx
mov dl cl
shr dl 0x6
mov al 0x1
and dl al
shr cl 0x7
mov [ edi + 0x10 ] dl
mov [ edi + 0x11 ] cl
mov edx esi
sub_4141ce
push ebp
mov ebp esp
sub esp 0x1c8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x11 ] 0x0
mov [ ebp - 0x4 ] ecx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
and [ ebp + 0xc ] 0x0
push ebx
push edi
mov eax [ ecx + 0x78 ]
sub eax 0x19
cmp [ esi ] eax
jle r-xdata
leave
retn 0xc
mov eax [ ebp + 0xc ]
mov [ ebp + eax - 0x18 ] bl
mov ecx esi
call j_sub_409514
shr eax 0xc
push 0x4
mov ecx esi
movzx edi al
call sub_409542
test edi edi
jne r-xdata
call sub_411f71
test al al
je r-xdata
mov ecx esi
call j_sub_409514
shr eax 0xc
push 0x4
mov ecx esi
movzx ebx al
call sub_409542
cmp ebx 0xf
jne r-xdata
mov edi [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
push 0x14
add edi 0x3bb0
push edi
lea eax [ ebp - 0x18 ]
push eax
call sub_4123d1
and [ ebp + 0xc ] 0x0
inc edi
inc edi
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp + eax - 0x18 ] bl
jmp r-xdata
pop esi
mov ecx esi
call sub_409514
mov ebx [ edi + 0x84 ]
and eax 0xfffe
cmp eax [ edi + ebx * 4 + 0x4 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x78 ]
sub eax 0x5
cmp [ esi ] eax
jle r-xdata
test edi edi
jg r-xdata
inc [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x14
jb r-xdata
push 0xf
pop edx
inc ebx
cmp ebx edx
jae r-xdata
push 0x10
pop ecx
sub ecx ebx
shr eax cl
movzx ecx [ eax + edi + 0x88 ]
add ecx [ esi + 0x4 ]
mov edx ecx
shr edx 0x3
add [ esi ] edx
and ecx 0x7
mov [ esi + 0x4 ] ecx
movzx eax [ edi + eax * 2 + 0x488 ]
jmp r-xdata
call sub_411f71
test al al
je r-xdata
dec edi
cmp [ ebp + 0xc ] 0x14
jae r-xdata
dec [ ebp + 0xc ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
add ecx edx
mov ebx ecx
and ecx 0x7
mov [ esi + 0x4 ] ecx
shr ebx 0x3
add [ esi ] ebx
sub eax [ edi + edx * 4 ]
push 0x10
pop ecx
sub ecx edx
shr eax cl
add eax [ edi + edx * 4 + 0x44 ]
cmp eax [ edi ]
jb r-xdata
lea ecx [ edi + ebx * 4 + 0x4 ]
cmp eax 0x10
jge r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ebp + eax - 0x18 ] 0x0
movzx eax [ edi + eax * 2 + 0xc88 ]
xor eax eax
mov edx ebx
inc ebx
add ecx 0x4
cmp ebx 0xf
jb r-xdata
cmp eax 0x12
mov ecx esi
jge r-xdata
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ebp + ecx - 0x1c8 ] al
jmp r-xdata
pop edi
pop ebx
cmp eax [ ecx ]
jb r-xdata
jmp r-xdata
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp [ ebp + 0xc ] 0x1ae
jl r-xdata
call j_sub_409514
mov ebx eax
shr ebx 0x9
add ebx 0xb
push 0x7
call j_sub_409514
mov ebx eax
shr ebx 0xd
add ebx 0x3
push 0x3
jmp r-xdata
call j_sub_409514
mov ebx eax
shr ebx 0x9
add ebx 0xb
push 0x7
call j_sub_409514
mov ebx eax
shr ebx 0xd
add ebx 0x3
push 0x3
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
cmp [ esi + 0x8 ] 0x0
mov edi [ ebp - 0x4 ]
jne r-xdata
test ebx ebx
jg r-xdata
mov ecx esi
call sub_409542
jmp r-xdata
jmp r-xdata
mov ecx esi
call sub_409542
mov eax [ ebp + 0xc ]
test eax eax
jle r-xdata
mov esi [ ebp + 0x10 ]
push 0x132
push esi
lea eax [ ebp - 0x1c8 ]
push eax
mov ecx edi
call sub_4123d1
push 0x40
lea eax [ esi + 0xeec ]
push eax
lea eax [ ebp - 0x96 ]
push eax
mov ecx edi
call sub_4123d1
push 0x10
lea eax [ esi + 0x1dd8 ]
push eax
lea eax [ ebp - 0x56 ]
push eax
mov ecx edi
call sub_4123d1
push 0x2c
add esi 0x2cc4
push esi
lea eax [ ebp - 0x46 ]
push eax
mov ecx edi
call sub_4123d1
mov al 0x1
mov eax [ esi ]
cmp eax [ edi + 0x78 ]
jle r-xdata
dec ebx
cmp [ ebp + 0xc ] 0x1ae
jge r-xdata
test ebx ebx
jg r-xdata
mov eax [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ebp + eax - 0x1c8 ] 0x0
dec ebx
cmp eax 0x1ae
jge r-xdata
jmp r-xdata
mov cl [ ebp + eax - 0x1c9 ]
mov [ ebp + eax - 0x1c8 ] cl
inc eax
mov [ ebp + 0xc ] eax
sub_4144c5
push esi
push edi
push 0x1
mov esi ecx
call sub_412614
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
shl eax 0x4
lea edi [ eax + ecx - 0x10 ]
lea esi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
retn 0x10
sub_4144e9
push ebp
mov ebp esp
sub esp 0x2c
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x2c ] 0x0
mov [ ebp - 0x1c ] ecx
jne r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0x24 ]
push esi
lea esi [ edi + 0x4 ]
add ecx eax
cmp [ esi ] ecx
jle r-xdata
lea eax [ edi + 0x30 ]
push eax
lea eax [ edi + 0x18 ]
push eax
lea eax [ edi + 0x4 ]
push eax
mov [ edi + 0x2c ] 0x1
call sub_4141ce
test al al
jne r-xdata
mov ecx [ edi + 0x20 ]
and [ edi + 0x4ad8 ] 0x0
lea eax [ ecx + eax - 0x1 ]
mov ecx [ edi + 0x4acc ]
sub ecx 0x10
cmp eax ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] eax
jl r-xdata
mov [ edi + 0x4ad0 ] 0x1
jmp r-xdata
mov [ edi + 0x4ad0 ] 0x1
jmp r-xdata
push ebx
mov [ ebp - 0x8 ] ecx
pop esi
pop edi
leave
retn 0x4
lea ecx [ edi + 0x4adc ]
mov eax [ ecx ]
lea edx [ eax - 0x8 ]
cmp [ edi + 0x4ad8 ] edx
jbe r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
mov eax [ edi + 0x4ad8 ]
mov ebx eax
imul ebx ebx 0xc
add ebx [ edi + 0x4ad4 ]
inc eax
mov ecx esi
mov [ ebp - 0x18 ] ebx
mov [ edi + 0x4ad8 ] eax
call sub_409514
mov edx [ edi + 0xb4 ]
and eax 0xfffe
cmp eax [ edi + edx * 4 + 0x34 ]
jae r-xdata
add eax eax
mov [ ecx ] eax
imul eax eax 0xc
push eax
lea ebx [ edi + 0x4ad4 ]
push [ ebx ]
call sub_41a114
pop ecx
pop ecx
mov [ ebx ] eax
test eax eax
jne r-xdata
pop ebx
jne r-xdata
inc edx
mov [ ebp + 0x8 ] 0xf
cmp edx 0xf
jae r-xdata
push 0x10
pop ecx
sub ecx edx
shr eax cl
movzx ecx [ eax + edi + 0xb8 ]
add ecx [ esi + 0x4 ]
mov edx ecx
shr edx 0x3
add [ esi ] edx
and ecx 0x7
mov [ esi + 0x4 ] ecx
movzx eax [ edi + eax * 2 + 0x4b8 ]
jmp r-xdata
mov ecx rw-data
call sub_40632c
cmp eax [ ebp - 0x10 ]
jl r-xdata
mov ecx [ edi + 0x8 ]
cmp ecx [ edi + 0x1c ]
jge r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ ebp + 0x8 ]
push 0x10
mov edx ecx
shr edx 0x3
add [ esi ] edx
mov edx [ ebp + 0x8 ]
and ecx 0x7
mov [ esi + 0x4 ] ecx
sub eax [ edi + edx * 4 + 0x30 ]
pop ecx
sub ecx edx
shr eax cl
add eax [ edi + edx * 4 + 0x74 ]
cmp eax [ edi + 0x30 ]
jb r-xdata
lea ecx [ edi + edx * 4 + 0x34 ]
mov ecx 0x100
cmp eax ecx
jae r-xdata
cmp eax [ edi + 0x4acc ]
jge r-xdata
cmp [ edi + 0x4ad2 ] 0x0
je r-xdata
movzx eax [ edi + eax * 2 + 0xcb8 ]
xor eax eax
mov [ ebp + 0x8 ] edx
inc edx
add ecx 0x4
cmp edx 0xf
jb r-xdata
cmp eax 0x106
jb r-xdata
cmp [ edi + 0x4ad8 ] 0x1
jbe r-xdata
mov [ edi + 0x4ad3 ] 0x1
cmp eax [ ecx ]
jb r-xdata
jmp r-xdata
cmp eax ecx
jne r-xdata
add eax 0xfffffefa
cmp eax 0x8
jae r-xdata
and [ ebx ] 0x0
mov [ ebx + 0x8 ] al
xor eax eax
jmp r-xdata
cmp [ ebx - 0xc ] 0x0
jne r-xdata
cmp eax 0x101
jne r-xdata
mov ecx [ ebp - 0x1c ]
lea eax [ ebp - 0x2c ]
push eax
push esi
call sub_413e33
movzx ax [ ebp - 0x2c ]
mov [ ebx + 0x4 ] ax
mov eax [ ebp - 0x28 ]
mov [ ebx + 0x8 ] eax
push 0x4
pop ecx
mov [ ebx ] ecx
mov edx [ edi + 0x4ad8 ]
mov eax edx
imul eax eax 0xc
add eax [ edi + 0x4ad4 ]
inc edx
mov [ edi + 0x4ad8 ] edx
mov [ eax ] ecx
movzx cx [ ebp - 0x20 ]
mov [ eax + 0x4 ] cx
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov ebx eax
shr ebx 0x2
and eax 0x3
dec ebx
or eax 0x4
mov ecx ebx
shl eax cl
inc eax
inc eax
mov [ ebp - 0x4 ] eax
test ebx ebx
jbe r-xdata
add eax 0x2
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebx + 0x4 ] ax
jmp r-xdata
movzx ecx [ ebx - 0x8 ]
cmp cx 0x3
jae r-xdata
add eax 0xfffffefe
mov ecx esi
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] eax
call sub_409514
mov edx [ edi + 0x2d78 ]
and eax 0xfffe
cmp eax [ edi + edx * 4 + 0x2cf8 ]
jae r-xdata
mov [ ebx ] 0x2
jmp r-xdata
mov eax [ esi ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx esi
mov [ ebp - 0x14 ] eax
call sub_409514
mov edx [ edi + 0xfa0 ]
and eax 0xfffe
cmp eax [ edi + edx * 4 + 0xf20 ]
jae r-xdata
mov ecx esi
call sub_409514
push 0x10
pop ecx
sub ecx ebx
shr eax cl
add [ ebp - 0x4 ] eax
mov eax [ esi + 0x4 ]
add eax ebx
mov ecx eax
shr ecx 0x3
add [ esi ] ecx
and eax 0x7
mov [ esi + 0x4 ] eax
inc ecx
mov [ ebx - 0x8 ] cx
movzx ecx cx
mov [ ecx + ebx - 0x4 ] al
dec [ edi + 0x4ad8 ]
jmp r-xdata
inc edx
mov [ ebp + 0x8 ] 0xf
cmp edx 0xf
jae r-xdata
push 0x10
pop ecx
sub ecx edx
shr eax cl
movzx ecx [ eax + edi + 0x2d7c ]
add ecx [ esi + 0x4 ]
mov edx ecx
shr edx 0x3
add [ esi ] edx
and ecx 0x7
mov [ esi + 0x4 ] ecx
movzx eax [ edi + eax * 2 + 0x317c ]
jmp r-xdata
push 0xf
pop ebx
lea ecx [ edx + 0x1 ]
cmp ecx ebx
jae r-xdata
push 0x10
pop ecx
sub ecx edx
shr eax cl
movzx ecx [ eax + edi + 0xfa4 ]
add ecx [ esi + 0x4 ]
mov edx ecx
shr edx 0x3
add [ esi ] edx
and ecx 0x7
mov [ esi + 0x4 ] ecx
movzx eax [ edi + eax * 2 + 0x13a4 ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ ebp + 0x8 ]
push 0x10
mov edx ecx
shr edx 0x3
add [ esi ] edx
mov edx [ ebp + 0x8 ]
and ecx 0x7
mov [ esi + 0x4 ] ecx
sub eax [ edi + edx * 4 + 0x2cf4 ]
pop ecx
sub ecx edx
shr eax cl
add eax [ edi + edx * 4 + 0x2d38 ]
cmp eax [ edi + 0x2cf4 ]
jb r-xdata
lea ecx [ edi + edx * 4 + 0x2cf8 ]
cmp eax 0x8
jae r-xdata
mov ecx [ esi + 0x4 ]
add ecx ebx
mov edx ecx
and ecx 0x7
mov [ esi + 0x4 ] ecx
shr edx 0x3
add [ esi ] edx
sub eax [ edi + ebx * 4 + 0xf1c ]
push 0x10
pop ecx
sub ecx ebx
shr eax cl
add eax [ edi + ebx * 4 + 0xf60 ]
cmp eax [ edi + 0xf1c ]
jb r-xdata
lea edx [ edi + ecx * 4 + 0xf20 ]
cmp eax 0x4
jae r-xdata
movzx eax [ edi + eax * 2 + 0x397c ]
xor eax eax
mov [ ebp + 0x8 ] edx
inc edx
add ecx 0x4
cmp edx 0xf
jb r-xdata
mov ecx eax
and eax 0x3
shr ecx 0x2
dec ecx
or eax 0x4
shl eax cl
mov [ ebp - 0x4 ] ecx
inc eax
inc eax
mov [ ebp + 0x8 ] eax
test ecx ecx
jbe r-xdata
add eax 0x2
jmp r-xdata
movzx eax [ edi + eax * 2 + 0x1ba4 ]
xor eax eax
mov ebx ecx
inc ecx
add edx 0x4
cmp ecx 0xf
jb r-xdata
mov ebx eax
shr ebx 0x1
and eax 0x1
dec ebx
or eax 0x2
mov ecx ebx
shl eax cl
inc eax
mov [ ebp + 0x8 ] eax
test ebx ebx
jbe r-xdata
inc eax
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp eax [ ecx ]
jb r-xdata
jmp r-xdata
mov ecx esi
call sub_409514
push 0x10
pop ecx
sub ecx [ ebp - 0x4 ]
shr eax cl
add [ ebp + 0x8 ] eax
mov eax [ esi + 0x4 ]
add eax [ ebp - 0x4 ]
mov ecx eax
shr ecx 0x3
add [ esi ] ecx
and eax 0x7
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp eax [ edx ]
jb r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp edx 0x100
jbe r-xdata
cmp ebx 0x4
jb r-xdata
mov ecx [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
inc ecx
cmp edx 0x2000
jbe r-xdata
mov ecx esi
call sub_41268e
push 0x20
pop ecx
sub ecx ebx
shr eax cl
add [ ebp + 0x8 ] eax
mov eax [ esi + 0x4 ]
add eax ebx
mov ecx eax
shr ecx 0x3
add [ esi ] ecx
and eax 0x7
mov [ esi + 0x4 ] eax
jbe r-xdata
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x1
mov [ eax + 0x4 ] cx
mov [ eax + 0x8 ] edx
jmp r-xdata
inc ecx
cmp edx 0x40000
jbe r-xdata
mov ecx esi
call sub_409514
mov ebx [ edi + 0x1e8c ]
and eax 0xfffe
cmp eax [ edi + ebx * 4 + 0x1e0c ]
jae r-xdata
mov ecx esi
call sub_41268e
push 0x24
pop ecx
sub ecx ebx
shr eax cl
shl eax 0x4
add [ ebp + 0x8 ] eax
mov eax [ esi + 0x4 ]
lea ebx [ eax + ebx - 0x4 ]
mov eax ebx
shr eax 0x3
add [ esi ] eax
and ebx 0x7
mov [ esi + 0x4 ] ebx
inc ecx
jmp r-xdata
push 0xf
pop edx
lea ecx [ ebx + 0x1 ]
cmp ecx edx
jae r-xdata
push 0x10
pop ecx
sub ecx ebx
shr eax cl
movzx ecx [ eax + edi + 0x1e90 ]
add ecx [ esi + 0x4 ]
mov edx ecx
shr edx 0x3
add [ esi ] edx
and ecx 0x7
mov [ esi + 0x4 ] ecx
movzx eax [ edi + eax * 2 + 0x2290 ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
add ecx edx
mov ebx ecx
and ecx 0x7
mov [ esi + 0x4 ] ecx
shr ebx 0x3
add [ esi ] ebx
sub eax [ edi + edx * 4 + 0x1e08 ]
push 0x10
pop ecx
sub ecx edx
shr eax cl
add eax [ edi + edx * 4 + 0x1e4c ]
cmp eax [ edi + 0x1e08 ]
jb r-xdata
lea ebx [ edi + ecx * 4 + 0x1e0c ]
add [ ebp + 0x8 ] eax
jmp r-xdata
movzx eax [ edi + eax * 2 + 0x2a90 ]
xor eax eax
mov edx ecx
inc ecx
add ebx 0x4
cmp ecx 0xf
jb r-xdata
cmp eax [ ebx ]
jb r-xdata
jmp r-xdata
sub_414aad
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x4 ]
mov ecx esi
call sub_409514
xor dl dl
test eax 0x8000
je r-xdata
mov ecx eax
mov eax [ esi + 0x4 ]
shr ecx 0xe
mov dl 0x1
and cl dl
inc eax
inc eax
mov eax [ esi + 0x4 ]
mov cl 0x1
inc eax
jmp r-xdata
mov ecx edi
pop edi
pop esi
pop ebx
jmp sub_413a86
pop edi
pop esi
xor al al
pop ebx
retn
mov ebx eax
shr ebx 0x3
add [ esi ] ebx
and eax 0x7
test cl cl
mov [ esi + 0x4 ] eax
sete al
mov [ edi + 0xe658 ] al
test dl dl
je r-xdata
sub_414b26
push ebp
mov ebp esp
sub esp 0x18
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0x74 ]
mov eax [ esi + 0x70 ]
sub eax ecx
and eax [ esi + 0xe6dc ]
cmp [ esi + 0xe6b8 ] 0x0
push edi
mov [ ebp - 0x8 ] ecx
jbe r-xdata
push [ esi + 0x70 ]
mov ecx esi
push [ ebp - 0x8 ]
call sub_414003
mov eax [ esi + 0x70 ]
mov [ esi + 0x74 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ esi + 0xe6b4 ]
shl ecx 0x2
mov ebx [ ecx + edx ]
mov [ ebp - 0x10 ] ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ esi + 0xe6b8 ]
jb r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edi [ ebx ]
mov ecx [ ebx + 0x4 ]
mov edx edi
sub edx [ ebp - 0x8 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ esi + 0xe6dc ]
and edx ecx
mov [ ebp - 0xc ] edi
cmp edx eax
jae r-xdata
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx edi
je r-xdata
cmp [ ebp - 0x14 ] eax
ja r-xdata
push edi
push edx
mov ecx esi
call sub_414003
mov eax [ esi + 0x70 ]
mov ecx [ esi + 0xe6dc ]
sub eax edi
mov edx edi
and eax ecx
mov ecx [ ebp - 0x4 ]
jmp r-xdata
mov edx [ ebp - 0x14 ]
lea eax [ edx + edi ]
and eax ecx
mov [ ebp - 0x18 ] eax
cmp edi eax
jb r-xdata
cmp ecx [ esi + 0xe6b8 ]
jb r-xdata
mov eax [ esi + 0x4b34 ]
push edx
add eax edi
push eax
push 0x0
test eax eax
je r-xdata
mov eax [ esi + 0xe6b4 ]
mov eax [ eax + ecx * 4 ]
test eax eax
je r-xdata
mov [ esi + 0x74 ] edx
jmp r-xdata
push ebx
mov ecx esi
call sub_413a24
mov eax [ ebx + 0x1c ]
cmp eax 0x40
jbe r-xdata
lea ecx [ ebx + 0x18 ]
push eax
call sub_401c21
mov eax [ edi + 0x1c ]
sub eax 0x40
push eax
mov eax [ edi + 0x18 ]
add eax 0x40
push eax
mov eax [ ebx + 0x18 ]
add eax 0x40
push eax
call sub_41be10
add esp 0xc
mov edi [ esi + 0xe6d8 ]
sub edi [ ebp - 0xc ]
mov eax [ esi + 0x4b34 ]
add eax [ ebp - 0xc ]
push edi
push eax
lea ecx [ esi + 0xe65c ]
push 0x0
call sub_40a905
push [ ebp - 0x18 ]
push [ esi + 0x4b34 ]
push edi
jmp r-xdata
inc ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ edi + 0x18 ]
call sub_4125f7
cmp [ edi + 0x1c ] eax
jae r-xdata
lea ecx [ esi + 0xe65c ]
call sub_40a905
mov eax [ ebx + 0x10 ]
mov ecx [ esi + 0xe6a4 ]
mov edi [ ecx + eax * 4 ]
mov eax [ edi + 0x30 ]
add edi 0x14
add ebx 0x14
cmp eax 0x40
jbe r-xdata
mov [ eax + 0xc ] 0x0
mov eax [ esi + 0xe6b4 ]
and [ ebx + eax ] 0x0
mov eax [ ebp - 0x4 ]
inc eax
cmp eax [ esi + 0xe6b8 ]
jae r-xdata
push 0x1
call sub_414b07
mov eax [ ebx + 0x1c ]
sub eax 0x40
push eax
mov eax [ ebx + 0x18 ]
add eax 0x40
push eax
mov eax [ edi + 0x18 ]
add eax 0x40
push eax
call sub_41be10
add esp 0xc
jmp r-xdata
push eax
lea ecx [ edi + 0x18 ]
call sub_401c21
mov ecx [ esi ]
push edi
push [ ebp - 0x14 ]
call sub_40b80d
mov ecx [ ebp - 0x18 ]
lea eax [ esi + 0x4c50 ]
add [ eax ] edi
mov [ esi + 0x4c4a ] 0x1
mov [ ebp - 0x8 ] ecx
adc [ eax + 0x4 ] 0x0
mov eax [ esi + 0x70 ]
sub eax ecx
and eax [ esi + 0xe6dc ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx + 0x54 ]
mov edi [ ebx + 0x58 ]
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0xe6b4 ]
mov ecx [ ebx + eax ]
test ecx ecx
je r-xdata
mov eax [ esi + 0xe6b4 ]
mov ebx [ eax + ebx + 0x4 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebx ] eax
jne r-xdata
cmp [ ebx + 0x4 ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
push edi
push [ ebp - 0x14 ]
lea ecx [ esi + 0xe65c ]
push 0x0
call sub_40a905
mov eax [ ebx + 0x10 ]
mov ecx [ esi + 0xe6a4 ]
mov edi [ ecx + eax * 4 ]
mov eax [ edi + 0x30 ]
add edi 0x14
add ebx 0x14
cmp eax 0x40
jbe r-xdata
push ebx
mov ecx esi
call sub_413a24
mov eax [ ebx + 0x1c ]
cmp eax 0x40
jbe r-xdata
lea ecx [ ebx + 0x18 ]
push eax
call sub_401c21
mov eax [ edi + 0x1c ]
sub eax 0x40
push eax
mov eax [ edi + 0x18 ]
add eax 0x40
push eax
mov eax [ ebx + 0x18 ]
add eax 0x40
push eax
call sub_41be10
add esp 0xc
lea ecx [ edi + 0x18 ]
call sub_4125f7
cmp [ edi + 0x1c ] eax
jae r-xdata
mov eax [ esi + 0xe6b4 ]
and [ ebx + eax ] 0x0
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0xe6b8 ]
jb r-xdata
push 0x1
call sub_414b07
mov eax [ ebx + 0x1c ]
sub eax 0x40
push eax
mov eax [ ebx + 0x18 ]
add eax 0x40
push eax
mov eax [ edi + 0x18 ]
add eax 0x40
push eax
call sub_41be10
add esp 0xc
jmp r-xdata
push eax
lea ecx [ edi + 0x18 ]
call sub_401c21
mov ebx [ ebp - 0x10 ]
mov eax [ ebx + 0x54 ]
inc [ ebp - 0x4 ]
mov edi [ ebx + 0x58 ]
mov ebx [ ebp - 0x4 ]
inc [ ebp - 0x8 ]
shl ebx 0x2
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0xe6b4 ]
mov ecx [ ebx + eax ]
mov [ ebp - 0x10 ] ebx
test ecx ecx
je r-xdata
sub_414e70
push esi
mov esi ecx
push edi
lea ecx [ esi + 0xe6c4 ]
call sub_4125f7
and [ esi + 0xe6d4 ] 0x0
xor edi edi
cmp [ esi + 0xe6a8 ] edi
jbe r-xdata
lea ecx [ esi + 0xe6a4 ]
call sub_4125f7
xor edi edi
cmp [ esi + 0xe6b8 ] edi
jbe r-xdata
mov eax [ esi + 0xe6a4 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
pop edi
lea ecx [ esi + 0xe6b4 ]
pop esi
jmp sub_4125f7
mov eax [ esi + 0xe6b4 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
inc edi
cmp edi [ esi + 0xe6a8 ]
jb r-xdata
push 0x1
call sub_414b07
inc edi
cmp edi [ esi + 0xe6b8 ]
jb r-xdata
push 0x1
call sub_414b07
sub_414eec
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx ecx
mov eax [ ebx + 0x74 ]
mov edx [ ebx + 0x70 ]
sub edx eax
and edx [ ebx + 0xe6dc ]
xor ecx ecx
push esi
mov [ ebp - 0x8 ] eax
push edi
mov [ ebp - 0x1c ] edx
mov eax edx
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0x14 ] ecx
cmp [ ebx + 0x48 ] ecx
jbe r-xdata
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x14 ] edx
cmp [ ebx + 0x48 ] edx
jbe r-xdata
mov [ ebp - 0x10 ] ecx
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
lea ecx [ ebx + 0x44 ]
mov ecx [ ebx + 0x44 ]
add ecx [ ebp - 0x10 ]
cmp [ ecx ] 0x8
mov [ ebp - 0x20 ] ecx
je r-xdata
mov ecx [ ebx + 0xe6d8 ]
mov eax __pe_WINRAR_export_address_table
cmp ecx eax
jae r-xdata
push [ ebx + 0x70 ]
mov ecx ebx
push [ ebp - 0x8 ]
call sub_414003
mov eax [ ebx + 0x70 ]
mov [ ebx + 0x74 ] eax
mov eax [ ecx ]
cmp [ edx + eax ] 0x8
jne r-xdata
mov eax [ ecx ]
mov edi [ ebp - 0x14 ]
sub edi [ ebp - 0xc ]
lea esi [ edx + eax ]
shl edi 0x4
add edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
inc [ ebp - 0x14 ]
mov ecx [ ebp - 0x14 ]
add [ ebp - 0x10 ] 0x10
cmp ecx [ ebx + 0x48 ]
jb r-xdata
cmp [ ecx + 0xd ] 0x0
mov esi [ ecx + 0x4 ]
je r-xdata
mov ecx [ ebx + 0x70 ]
mov esi [ ebx + 0xe6dc ]
add eax ecx
and eax esi
mov [ ebx + 0x4b30 ] eax
cmp eax ecx
je r-xdata
mov eax ecx
inc [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
add edx 0x10
cmp eax [ ebx + 0x48 ]
jb r-xdata
inc [ ebp - 0xc ]
mov edx [ ebp - 0x1c ]
jmp r-xdata
mov edi [ ecx + 0x8 ]
mov ecx [ ebx + 0xe6dc ]
mov edx esi
sub edx [ ebp - 0x8 ]
mov [ ebp - 0x18 ] edi
and edx ecx
cmp edx eax
jae r-xdata
sub esi [ ebx + 0x74 ]
and esi [ ebx + 0xe6dc ]
cmp esi edx
ja r-xdata
mov eax [ ebx + 0x74 ]
mov [ ebx + 0x4b30 ] eax
mov edx [ ebx + 0x74 ]
cmp edx ecx
je r-xdata
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
cmp [ ebp - 0x8 ] esi
je r-xdata
mov [ ecx + 0xd ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax ecx
sub edx ecx
and eax esi
and edx esi
cmp edx eax
jae r-xdata
mov eax [ ebx + 0x48 ]
sub eax [ ebp - 0xc ]
push eax
call sub_4144ab
cmp edi eax
ja r-xdata
push esi
push [ ebp - 0x8 ]
mov ecx ebx
call sub_414003
mov eax [ ebx + 0x70 ]
mov ecx [ ebx + 0xe6dc ]
sub eax esi
mov [ ebp - 0x8 ] esi
and eax ecx
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp - 0x14 ]
mov ecx eax
cmp eax [ ebx + 0x48 ]
jae r-xdata
test edi edi
jbe r-xdata
mov [ ebp - 0x1 ] 0x1
shl eax 0x4
mov edx eax
lea eax [ edi + esi ]
and eax ecx
lea ecx [ ebx + 0x24 ]
push edi
mov [ ebp - 0xc ] eax
call sub_401c21
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x8 ] eax
cmp esi [ ebp - 0xc ]
jb r-xdata
inc ecx
add edx 0x10
cmp ecx [ ebx + 0x48 ]
jb r-xdata
mov [ eax + 0xd ] 0x0
cmp [ ebx + 0x4c38 ] 0x0
push edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x44 ]
add eax edx
cmp [ eax ] 0x8
je r-xdata
mov ecx [ ebx + 0x4b34 ]
add ecx esi
push ecx
push eax
call sub_41be10
add esp 0xc
push esi
push eax
lea ecx [ ebx + 0x4b38 ]
call sub_412215
jmp r-xdata
mov edi [ ebx + 0xe6d8 ]
sub edi esi
cmp [ ebx + 0x4c38 ] 0x0
push edi
je r-xdata
mov ecx [ ebp - 0xc ]
lea eax [ ebx + 0x4c50 ]
add [ eax ] edi
mov [ ebx + 0x4c4a ] 0x1
mov [ ebp - 0x8 ] ecx
adc [ eax + 0x4 ] 0x0
mov eax [ ebx + 0x70 ]
sub eax ecx
and eax [ ebx + 0xe6dc ]
mov ecx [ ebx ]
push edi
push eax
call sub_40b80d
push [ ebp - 0x20 ]
mov ecx ebx
push edi
push [ ebp - 0x8 ]
call sub_413ea9
mov ecx [ ebx + 0x44 ]
mov edx [ ebp - 0x10 ]
mov [ edx + ecx ] 0x8
test eax eax
je r-xdata
mov ecx [ ebx + 0x4b34 ]
add ecx esi
push ecx
push eax
call sub_41be10
push [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
push [ ebx + 0x4b34 ]
add edi eax
push edi
call sub_41be10
add esp 0x18
push esi
lea ecx [ ebx + 0x4b38 ]
push eax
call sub_412215
push [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
push 0x0
add edi eax
push edi
call sub_412215
jmp r-xdata
mov edi [ ebp - 0x18 ]
jmp r-xdata
sub_415195
mov eax sub_42946d
call sub_41a05c
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xa
call sub_414e70
mov eax [ esi + 0x4b34 ]
test eax eax
je r-xdata
push [ esi + 0x14 ]
call sub_410db6
push [ esi + 0x20 ]
call sub_41c45d
pop ecx
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
push eax
call sub_41a086
pop ecx
lea ecx [ esi + 0xe6c4 ]
call sub_4125e9
lea ecx [ esi + 0xe6b4 ]
call sub_4125e9
lea ecx [ esi + 0xe6a4 ]
call sub_4125e9
lea ecx [ esi + 0xe694 ]
mov [ ebp - 0x4 ] 0x6
call sub_4094de
lea ecx [ esi + 0xe65c ]
mov [ ebp - 0x4 ] 0x5
call sub_40a82d
lea ecx [ esi + 0xe35c ]
call sub_411b81
lea ecx [ esi + 0x4b38 ]
call sub_4120b2
lea ecx [ esi + 0x44 ]
call sub_4125e9
lea ecx [ esi + 0x34 ]
call sub_4125e9
lea ecx [ esi + 0x24 ]
call sub_4125e9
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x4 ]
call sub_4094de
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push 0x3
call sub_413990
sub_415268
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x34 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x58 ] ecx
mov [ eax + 0x14 ] ecx
retn
sub_415299
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
xor ebx ebx
xor edi edi
cmp [ esi + 0x4 ] ebx
jbe r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi ]
lea ecx [ ebx + eax ]
push ecx
mov ecx [ eax ]
call sub_4144e9
inc edi
add ebx 0x4ae4
cmp edi [ esi + 0x4 ]
jb r-xdata
sub_4152c8
push ebx
xor ebx ebx
push esi
mov esi ecx
cmp [ esp + 0xc ] bl
jne r-xdata
mov [ esi + 0x4c39 ] bl
pop esi
pop ebx
retn 0x4
push 0x194
lea eax [ esi + 0xe4c0 ]
push ebx
push eax
mov [ esi + 0xe658 ] bl
call sub_41a3a0
add esp 0xc
mov ecx esi
mov [ esi + 0xe4bc ] 0x2
mov [ esi + 0xe654 ] ebx
call sub_414e70
sub_415311
push ebx
mov ebx ecx
cmp [ ebx + 0x48 ] 0x1fff
push esi
push edi
jb r-xdata
mov eax [ ebx + 0x74 ]
mov ecx [ ebx + 0x70 ]
mov esi [ esp + 0x10 ]
cmp eax ecx
je r-xdata
call sub_414eec
xor eax eax
sub eax ecx
and eax [ ebx + 0xe6dc ]
cmp eax [ esi + 0x4 ]
ja r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ esi + 0xd ] al
mov eax [ ebx + 0x70 ]
add eax [ esi + 0x4 ]
sub esp 0x10
and eax [ ebx + 0xe6dc ]
mov edi esp
mov [ esi + 0x4 ] eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea ecx [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
call sub_4144c5
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x4
sub_415371
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ esp + 0x10 ] bl
jne r-xdata
push 0x14
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] ebx
lea edi [ esi + 0x80 ]
push ebx
push edi
mov [ esi + 0x4c50 ] ebx
mov [ esi + 0x4c54 ] ebx
mov [ esi + 0x78 ] ebx
mov [ esi + 0x7c ] ebx
call sub_41a3a0
or [ edi ] 0xffffffff
add esp 0xc
push [ esp + 0x10 ]
mov ecx esi
mov [ esi + 0x4c39 ] bl
call sub_4152c8
pop edi
pop esi
pop ebx
retn 0x4
push 0x10
lea eax [ esi + 0x54 ]
push ebx
push eax
call sub_41a3a0
push 0x4a9c
lea eax [ esi + 0x94 ]
push ebx
push eax
mov [ esi + 0x64 ] ebx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x6c ] ebx
call sub_41a3a0
mov eax [ esi + 0xe6d8 ]
mov ecx __pe_WINRAR_export_address_table
add esp 0x18
mov [ esi + 0x74 ] ebx
mov [ esi + 0x70 ] ebx
cmp eax ecx
jb r-xdata
mov ecx [ esi + 0xe6dc ]
and ecx eax
mov [ esi + 0x4b30 ] ecx
lea ecx [ esi + 0x44 ]
call sub_4125f7
mov eax ecx
sub_415419
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ eax + 0x4ad4 ]
mov eax [ eax + 0x4ad8 ]
imul eax eax 0xc
add eax edi
mov esi ecx
mov [ ebp - 0xc ] eax
cmp edi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
jb r-xdata
mov eax [ esi + 0xe6dc ]
and [ esi + 0x70 ] eax
mov edx [ esi + 0x4b30 ]
mov ecx [ esi + 0x70 ]
mov ebx edx
sub ebx ecx
and ebx eax
cmp ebx 0x1004
jae r-xdata
mov al 0x1
mov eax [ edi ]
test eax eax
jne r-xdata
cmp edx ecx
je r-xdata
cmp eax 0x1
jne r-xdata
cmp [ edi + 0x4 ] 0x3
jne r-xdata
mov ecx esi
call sub_414eec
mov eax [ esi + 0x4c54 ]
cmp eax [ esi + 0x4c44 ]
jg r-xdata
cmp eax 0x3
jne r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ esi + 0x5c ]
mov [ esi + 0x60 ] ecx
mov ecx [ esi + 0x58 ]
mov [ esi + 0x5c ] ecx
mov ecx [ esi + 0x54 ]
mov [ esi + 0x54 ] eax
mov [ esi + 0x58 ] ecx
movzx eax [ edi + 0x4 ]
mov ecx [ esi + 0x70 ]
mov [ esi + 0x68 ] eax
mov edx [ edi + 0x8 ]
movzx ebx [ edi + 0x4 ]
mov edi [ esi + 0xe6d8 ]
mov eax ecx
sub eax edx
add edi 0xffffefff
mov [ ebp + 0x8 ] ebx
cmp eax edi
jae r-xdata
xor eax eax
mov ecx [ esi + 0xe6d8 ]
mov eax [ esi + 0x70 ]
sub ecx 0x4
cmp eax ecx
jae r-xdata
xor al al
jmp r-xdata
jl r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx [ esi + eax * 4 + 0x54 ]
test eax eax
jbe r-xdata
test ebx ebx
jbe r-xdata
cmp ecx edi
jae r-xdata
mov ecx [ esi + 0x70 ]
and ecx [ esi + 0xe6dc ]
mov bl [ edi + eax + 0x8 ]
mov edx [ esi + 0x4b34 ]
mov [ ecx + edx ] bl
inc [ esi + 0x70 ]
movzx ecx [ edi + 0x4 ]
inc eax
cmp eax ecx
jbe r-xdata
jmp r-xdata
mov edx [ edi + 0x8 ]
mov ecx [ esi + 0x4b34 ]
mov [ eax + ecx ] edx
add [ esi + 0x70 ] 0x4
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax [ esi + 0x4c50 ]
cmp eax [ esi + 0x4c40 ]
ja r-xdata
cmp eax 0x4
jne r-xdata
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x70 ]
mov [ esi + 0x54 ] edx
movzx eax [ edi + 0x4 ]
mov [ esi + 0x68 ] eax
movzx ebx [ edi + 0x4 ]
mov edi [ esi + 0xe6d8 ]
mov eax ecx
sub eax edx
add edi 0xffffefff
mov [ ebp + 0x8 ] ebx
cmp eax edi
jae r-xdata
lea ecx [ esi + eax * 4 + 0x54 ]
mov edi [ ebp - 0x4 ]
add edi 0xc
cmp edi [ ebp - 0xc ]
mov edx [ esi + 0xe6dc ]
mov ebx [ esi + 0x4b34 ]
lea edi [ ebx + eax ]
mov eax [ ebp + 0x8 ]
add ebx ecx
add ecx eax
mov [ esi + 0x70 ] ecx
cmp edx eax
jae r-xdata
mov al [ edi + 0x4 ]
mov [ ebp - 0x1c ] al
mov eax [ edi + 0x8 ]
add edi 0xc
mov [ ebp - 0x18 ] eax
mov al [ edi + 0x4 ]
mov [ ebp - 0x10 ] al
mov eax [ edi + 0x8 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] edi
call sub_415311
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x54 ]
mov edi [ esi + 0xe6d8 ]
mov ebx eax
mov eax ecx
sub eax edx
add edi 0xffffefff
mov [ ebp + 0x8 ] ebx
cmp eax edi
jae r-xdata
test ebx ebx
jbe r-xdata
cmp ecx edi
jae r-xdata
mov ebx [ ecx - 0x4 ]
mov [ ecx ] ebx
dec eax
sub ecx 0x4
test eax eax
ja r-xdata
mov ecx [ esi + 0x4b34 ]
mov edi [ esi + 0x70 ]
and edx eax
mov dl [ edx + ecx ]
mov [ ecx + edi ] dl
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0xe6dc ]
dec ebx
inc eax
inc ecx
and ecx edx
mov [ esi + 0x70 ] ecx
test ebx ebx
ja r-xdata
jmp r-xdata
cmp eax 0x8
jb r-xdata
cmp eax 0x8
jb r-xdata
test ebx ebx
jbe r-xdata
cmp ecx edi
jae r-xdata
mov edx [ esi + 0xe6dc ]
mov ebx [ esi + 0x4b34 ]
lea edi [ ebx + eax ]
mov eax [ ebp + 0x8 ]
add ebx ecx
add ecx eax
mov [ esi + 0x70 ] ecx
cmp edx eax
jae r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jbe r-xdata
mov eax [ ebp + 0x8 ]
shr eax 0x3
mov [ ebp - 0x8 ] eax
shr eax 0x3
mov edx [ esi + 0xe6dc ]
mov ebx [ esi + 0x4b34 ]
lea edi [ ebx + eax ]
mov eax [ ebp + 0x8 ]
add ebx ecx
add ecx eax
mov [ esi + 0x70 ] ecx
cmp edx eax
jae r-xdata
mov ecx [ esi + 0x4b34 ]
mov edi [ esi + 0x70 ]
and edx eax
mov dl [ edx + ecx ]
mov [ ecx + edi ] dl
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0xe6dc ]
dec ebx
inc eax
inc ecx
and ecx edx
mov [ esi + 0x70 ] ecx
test ebx ebx
ja r-xdata
jmp r-xdata
cmp eax 0x8
jb r-xdata
cmp eax 0x8
jb r-xdata
mov cl [ edi ]
mov [ ebx ] cl
cmp eax 0x1
jbe r-xdata
push 0x8
push edi
push ebx
call sub_41be10
sub [ ebp + 0x8 ] 0x8
add esp 0xc
add edi 0x8
add ebx 0x8
dec [ ebp - 0x8 ]
jne r-xdata
mov cl [ edi ]
sub [ ebp + 0x8 ] 0x8
mov [ ebx ] cl
mov cl [ edi + 0x1 ]
mov [ ebx + 0x1 ] cl
mov cl [ edi + 0x2 ]
mov [ ebx + 0x2 ] cl
mov cl [ edi + 0x3 ]
mov [ ebx + 0x3 ] cl
mov cl [ edi + 0x4 ]
mov [ ebx + 0x4 ] cl
mov cl [ edi + 0x5 ]
mov [ ebx + 0x5 ] cl
mov cl [ edi + 0x6 ]
mov [ ebx + 0x6 ] cl
mov cl [ edi + 0x7 ]
mov [ ebx + 0x7 ] cl
add edi 0x8
add ebx 0x8
dec eax
jne r-xdata
jmp r-xdata
mov ecx [ esi + 0x4b34 ]
mov edi [ esi + 0x70 ]
and edx eax
mov dl [ edx + ecx ]
mov [ ecx + edi ] dl
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0xe6dc ]
dec ebx
inc eax
inc ecx
and ecx edx
mov [ esi + 0x70 ] ecx
test ebx ebx
ja r-xdata
jmp r-xdata
cmp eax 0x8
jb r-xdata
cmp eax 0x8
jb r-xdata
mov eax [ ebp + 0x8 ]
shr eax 0x3
mov [ ebp - 0x8 ] eax
shr eax 0x3
mov cl [ edi + 0x1 ]
mov [ ebx + 0x1 ] cl
cmp eax 0x2
jbe r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
shr eax 0x3
mov [ ebp - 0x8 ] eax
shr eax 0x3
push 0x8
push edi
push ebx
call sub_41be10
sub [ ebp + 0x8 ] 0x8
add esp 0xc
add edi 0x8
add ebx 0x8
dec [ ebp - 0x8 ]
jne r-xdata
jmp r-xdata
mov cl [ edi ]
sub [ ebp + 0x8 ] 0x8
mov [ ebx ] cl
mov cl [ edi + 0x1 ]
mov [ ebx + 0x1 ] cl
mov cl [ edi + 0x2 ]
mov [ ebx + 0x2 ] cl
mov cl [ edi + 0x3 ]
mov [ ebx + 0x3 ] cl
mov cl [ edi + 0x4 ]
mov [ ebx + 0x4 ] cl
mov cl [ edi + 0x5 ]
mov [ ebx + 0x5 ] cl
mov cl [ edi + 0x6 ]
mov [ ebx + 0x6 ] cl
mov cl [ edi + 0x7 ]
mov [ ebx + 0x7 ] cl
add edi 0x8
add ebx 0x8
dec eax
jne r-xdata
jmp r-xdata
mov cl [ edi + 0x2 ]
mov [ ebx + 0x2 ] cl
cmp eax 0x3
jbe r-xdata
cmp [ ebp + 0x8 ] 0x1
mov al [ edi ]
mov [ ebx ] al
jbe r-xdata
push 0x8
push edi
push ebx
call sub_41be10
sub [ ebp + 0x8 ] 0x8
add esp 0xc
add edi 0x8
add ebx 0x8
dec [ ebp - 0x8 ]
jne r-xdata
mov cl [ edi ]
sub [ ebp + 0x8 ] 0x8
mov [ ebx ] cl
mov cl [ edi + 0x1 ]
mov [ ebx + 0x1 ] cl
mov cl [ edi + 0x2 ]
mov [ ebx + 0x2 ] cl
mov cl [ edi + 0x3 ]
mov [ ebx + 0x3 ] cl
mov cl [ edi + 0x4 ]
mov [ ebx + 0x4 ] cl
mov cl [ edi + 0x5 ]
mov [ ebx + 0x5 ] cl
mov cl [ edi + 0x6 ]
mov [ ebx + 0x6 ] cl
mov cl [ edi + 0x7 ]
mov [ ebx + 0x7 ] cl
add edi 0x8
add ebx 0x8
dec eax
jne r-xdata
jmp r-xdata
mov cl [ edi + 0x3 ]
mov [ ebx + 0x3 ] cl
cmp eax 0x4
jbe r-xdata
cmp [ ebp + 0x8 ] 0x2
mov al [ edi + 0x1 ]
mov [ ebx + 0x1 ] al
jbe r-xdata
mov cl [ edi + 0x4 ]
mov [ ebx + 0x4 ] cl
cmp eax 0x5
jbe r-xdata
cmp [ ebp + 0x8 ] 0x3
mov al [ edi + 0x2 ]
mov [ ebx + 0x2 ] al
jbe r-xdata
mov cl [ edi + 0x5 ]
mov [ ebx + 0x5 ] cl
cmp eax 0x6
cmp [ ebp + 0x8 ] 0x4
mov al [ edi + 0x3 ]
mov [ ebx + 0x3 ] al
jbe r-xdata
mov al [ edi + 0x6 ]
mov [ ebx + 0x6 ] al
jmp r-xdata
cmp [ ebp + 0x8 ] 0x5
mov al [ edi + 0x4 ]
mov [ ebx + 0x4 ] al
jbe r-xdata
mov al [ edi + 0x5 ]
cmp [ ebp + 0x8 ] 0x6
mov [ ebx + 0x5 ] al
jmp r-xdata
jbe r-xdata
sub_415935
push ebp
mov ebp esp
sub esp 0x30
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x2c ] 0x0
push edi
mov edi ecx
jne r-xdata
mov eax [ ebx + 0x18 ]
mov ecx [ ebx + 0x24 ]
push esi
lea esi [ ebx + 0x4 ]
add ecx eax
cmp [ esi ] ecx
jle r-xdata
lea eax [ ebx + 0x30 ]
push eax
lea eax [ ebx + 0x18 ]
push eax
lea eax [ ebx + 0x4 ]
push eax
mov [ ebx + 0x2c ] 0x1
call sub_4141ce
test al al
jne r-xdata
mov ecx [ ebx + 0x20 ]
lea ecx [ ecx + eax - 0x1 ]
mov eax [ ebx + 0x4acc ]
sub eax 0x10
cmp ecx eax
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x18 ] ecx
jl r-xdata
mov [ ebx + 0x4ad0 ] 0x1
mov [ ebx + 0x4ad0 ] 0x1
jmp r-xdata
mov ecx [ edi + 0xe6dc ]
and [ edi + 0x70 ] ecx
mov eax [ esi ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
mov [ ebp - 0x18 ] eax
pop esi
pop edi
pop ebx
leave
retn 0x4
mov edx [ edi + 0x4b30 ]
mov eax [ edi + 0x70 ]
sub edx eax
and edx ecx
cmp edx 0x1004
jae r-xdata
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov ecx esi
call sub_409514
mov edx [ ebx + 0xb4 ]
and eax 0xfffe
cmp eax [ ebx + edx * 4 + 0x34 ]
jae r-xdata
cmp [ edi + 0x4b30 ] eax
je r-xdata
mov al 0x1
jne r-xdata
inc edx
mov [ ebp + 0x8 ] 0xf
cmp edx 0xf
jae r-xdata
push 0x10
pop ecx
sub ecx edx
shr eax cl
movzx ecx [ eax + ebx + 0xb8 ]
add ecx [ esi + 0x4 ]
mov edx ecx
shr edx 0x3
add [ esi ] edx
and ecx 0x7
mov [ esi + 0x4 ] ecx
movzx eax [ ebx + eax * 2 + 0x4b8 ]
jmp r-xdata
mov ecx edi
call sub_414eec
mov eax [ edi + 0x4c54 ]
cmp eax [ edi + 0x4c44 ]
jg r-xdata
cmp eax [ ebp - 0x20 ]
jl r-xdata
mov edx [ ebx + 0x8 ]
cmp edx [ ebx + 0x1c ]
jge r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ ebp + 0x8 ]
push 0x10
mov edx ecx
shr edx 0x3
add [ esi ] edx
mov edx [ ebp + 0x8 ]
and ecx 0x7
mov [ esi + 0x4 ] ecx
sub eax [ ebx + edx * 4 + 0x30 ]
pop ecx
sub ecx edx
shr eax cl
add eax [ ebx + edx * 4 + 0x74 ]
cmp eax [ ebx + 0x30 ]
jb r-xdata
lea ecx [ ebx + edx * 4 + 0x34 ]
mov ecx 0x100
cmp eax ecx
jae r-xdata
xor al al
jmp r-xdata
jl r-xdata
cmp eax [ ebx + 0x4acc ]
jge r-xdata
cmp [ ebx + 0x4ad2 ] 0x0
je r-xdata
movzx eax [ ebx + eax * 2 + 0xcb8 ]
xor eax eax
mov [ ebp + 0x8 ] edx
inc edx
add ecx 0x4
cmp edx 0xf
jb r-xdata
cmp eax 0x106
jb r-xdata
mov edx [ edi + 0x70 ]
mov ecx [ edi + 0x4b34 ]
mov [ ecx + edx ] al
inc [ edi + 0x70 ]
jmp r-xdata
mov eax [ edi + 0x4c50 ]
cmp eax [ edi + 0x4c40 ]
ja r-xdata
mov [ ebx + 0x4ad3 ] 0x1
jmp r-xdata
cmp eax [ ecx ]
jb r-xdata
jmp r-xdata
cmp eax ecx
jne r-xdata
add eax 0xfffffefa
cmp eax 0x8
jae r-xdata
cmp eax 0x101
jne r-xdata
lea eax [ ebp - 0x30 ]
push eax
push esi
mov ecx edi
call sub_413e33
test al al
je r-xdata
mov ecx eax
and eax 0x3
shr ecx 0x2
dec ecx
or eax 0x4
shl eax cl
mov [ ebp + 0x8 ] ecx
inc eax
inc eax
mov [ ebp - 0x8 ] eax
test ecx ecx
jbe r-xdata
add eax 0x2
mov [ ebp - 0x8 ] eax
jmp r-xdata
add eax 0xfffffefe
lea ecx [ edi + eax * 4 + 0x54 ]
mov edx [ ecx ]
mov [ ebp - 0x14 ] edx
je r-xdata
mov eax [ edi + 0x68 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
call sub_415311
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx esi
mov [ ebp - 0xc ] eax
call sub_409514
mov edx [ ebx + 0xfa0 ]
and eax 0xfffe
cmp eax [ ebx + edx * 4 + 0xf20 ]
jae r-xdata
mov ecx esi
call sub_409514
push 0x10
pop ecx
sub ecx [ ebp + 0x8 ]
shr eax cl
add [ ebp - 0x8 ] eax
mov eax [ esi + 0x4 ]
add eax [ ebp + 0x8 ]
mov ecx eax
shr ecx 0x3
add [ esi ] ecx
and eax 0x7
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x14 ]
mov ecx esi
mov [ edi + 0x54 ] eax
call sub_409514
mov edx [ ebx + 0x2d78 ]
and eax 0xfffe
cmp eax [ ebx + edx * 4 + 0x2cf8 ]
jae r-xdata
mov edx [ ecx - 0x4 ]
mov [ ecx ] edx
dec eax
sub ecx 0x4
test eax eax
ja r-xdata
mov ecx [ edi + 0x70 ]
mov edx [ edi + 0x54 ]
mov [ ebp + 0x8 ] eax
mov eax ecx
sub eax edx
mov edx [ edi + 0xe6d8 ]
add edx 0xffffefff
mov [ ebp - 0x14 ] eax
cmp eax edx
jae r-xdata
inc edx
mov [ ebp + 0x8 ] 0xf
cmp edx 0xf
jae r-xdata
push 0x10
pop ecx
sub ecx edx
shr eax cl
movzx ecx [ eax + ebx + 0xfa4 ]
add ecx [ esi + 0x4 ]
mov edx ecx
shr edx 0x3
add [ esi ] edx
and ecx 0x7
mov [ esi + 0x4 ] ecx
movzx eax [ ebx + eax * 2 + 0x13a4 ]
jmp r-xdata
inc edx
mov [ ebp + 0x8 ] 0xf
cmp edx 0xf
jae r-xdata
push 0x10
pop ecx
sub ecx edx
shr eax cl
movzx ecx [ eax + ebx + 0x2d7c ]
add ecx [ esi + 0x4 ]
mov edx ecx
shr edx 0x3
add [ esi ] edx
and ecx 0x7
mov [ esi + 0x4 ] ecx
movzx eax [ ebx + eax * 2 + 0x317c ]
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
cmp ecx edx
jae r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ ebp + 0x8 ]
push 0x10
mov edx ecx
shr edx 0x3
add [ esi ] edx
mov edx [ ebp + 0x8 ]
and ecx 0x7
mov [ esi + 0x4 ] ecx
sub eax [ ebx + edx * 4 + 0xf1c ]
pop ecx
sub ecx edx
shr eax cl
add eax [ ebx + edx * 4 + 0xf60 ]
cmp eax [ ebx + 0xf1c ]
jb r-xdata
lea ecx [ ebx + edx * 4 + 0xf20 ]
cmp eax 0x4
jae r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ ebp + 0x8 ]
push 0x10
mov edx ecx
shr edx 0x3
add [ esi ] edx
mov edx [ ebp + 0x8 ]
and ecx 0x7
mov [ esi + 0x4 ] ecx
sub eax [ ebx + edx * 4 + 0x2cf4 ]
pop ecx
sub ecx edx
shr eax cl
add eax [ ebx + edx * 4 + 0x2d38 ]
cmp eax [ ebx + 0x2cf4 ]
jb r-xdata
lea ecx [ ebx + edx * 4 + 0x2cf8 ]
cmp eax 0x8
jae r-xdata
mov edx [ edi + 0xe6dc ]
mov edx [ edi + 0x4b34 ]
add eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
add edx ecx
add ecx eax
mov [ ebp - 0x4 ] edx
mov [ edi + 0x70 ] ecx
cmp [ edi + 0x54 ] eax
jae r-xdata
movzx eax [ ebx + eax * 2 + 0x1ba4 ]
xor eax eax
mov [ ebp + 0x8 ] edx
inc edx
add ecx 0x4
cmp edx 0xf
jb r-xdata
mov ecx eax
and eax 0x1
shr ecx 0x1
dec ecx
or eax 0x2
shl eax cl
mov [ ebp + 0x8 ] ecx
inc eax
mov [ ebp - 0x10 ] eax
test ecx ecx
jbe r-xdata
inc eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
movzx eax [ ebx + eax * 2 + 0x397c ]
xor eax eax
mov [ ebp + 0x8 ] edx
inc edx
add ecx 0x4
cmp edx 0xf
jb r-xdata
mov ecx eax
and eax 0x3
shr ecx 0x2
dec ecx
or eax 0x4
shl eax cl
mov [ ebp + 0x8 ] ecx
inc eax
inc eax
mov [ ebp - 0x10 ] eax
test ecx ecx
jbe r-xdata
add eax 0x2
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ edi + 0x4b34 ]
dec [ ebp + 0x8 ]
and eax edx
mov al [ eax + ecx ]
mov edx [ edi + 0x70 ]
mov [ ecx + edx ] al
mov eax [ ebp - 0x14 ]
mov ecx [ edi + 0x70 ]
mov edx [ edi + 0xe6dc ]
inc eax
inc ecx
and ecx edx
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x14 ] eax
mov [ edi + 0x70 ] ecx
ja r-xdata
jmp r-xdata
cmp eax 0x8
jb r-xdata
cmp eax 0x8
jb r-xdata
cmp eax [ ecx ]
jb r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
cmp edx 0x100
jbe r-xdata
cmp ecx 0x4
jb r-xdata
cmp eax [ ecx ]
jb r-xdata
jmp r-xdata
mov edx [ edi + 0x70 ]
sub edx [ ebp - 0x14 ]
mov ecx [ edi + 0xe6d8 ]
add ecx 0xffffefff
mov [ edi + 0x68 ] eax
mov [ ebp + 0x8 ] eax
mov [ ebp - 0xc ] edx
cmp edx ecx
jae r-xdata
mov ecx esi
call sub_409514
push 0x10
pop ecx
sub ecx [ ebp + 0x8 ]
shr eax cl
add [ ebp - 0x10 ] eax
mov eax [ esi + 0x4 ]
add eax [ ebp + 0x8 ]
mov ecx eax
shr ecx 0x3
add [ esi ] ecx
and eax 0x7
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
shr eax 0x3
mov [ ebp - 0x14 ] eax
shr eax 0x3
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov ecx edx
mov eax [ edi + 0x5c ]
mov [ edi + 0x60 ] eax
mov eax [ edi + 0x58 ]
mov [ edi + 0x5c ] eax
mov eax [ edi + 0x54 ]
mov [ edi + 0x58 ] eax
mov eax [ ebp - 0xc ]
mov [ edi + 0x68 ] eax
mov [ ebp + 0x8 ] eax
mov eax [ edi + 0x70 ]
mov ecx eax
sub ecx edx
mov [ edi + 0x54 ] edx
mov edx [ edi + 0xe6d8 ]
add edx 0xffffefff
mov [ ebp - 0x14 ] ecx
cmp ecx edx
jae r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0xc ] eax
cmp edx 0x2000
jbe r-xdata
mov ecx esi
call sub_41268e
push 0x20
pop ecx
sub ecx [ ebp + 0x8 ]
shr eax cl
add [ ebp - 0x10 ] eax
mov eax [ esi + 0x4 ]
add eax [ ebp + 0x8 ]
mov ecx eax
shr ecx 0x3
add [ esi ] ecx
and eax 0x7
mov [ esi + 0x4 ] eax
jbe r-xdata
test eax eax
jbe r-xdata
cmp [ edi + 0x70 ] ecx
jae r-xdata
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x8 ]
mov al [ eax ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] al
jbe r-xdata
push 0x8
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_41be10
add [ ebp - 0x8 ] 0x8
add [ ebp - 0x4 ] 0x8
sub [ ebp + 0x8 ] 0x8
add esp 0xc
dec [ ebp - 0x14 ]
jne r-xdata
mov dl [ eax ]
sub [ ebp + 0x8 ] 0x8
mov [ ecx ] dl
mov dl [ eax + 0x1 ]
mov [ ecx + 0x1 ] dl
mov dl [ eax + 0x2 ]
mov [ ecx + 0x2 ] dl
mov dl [ eax + 0x3 ]
mov [ ecx + 0x3 ] dl
mov dl [ eax + 0x4 ]
mov [ ecx + 0x4 ] dl
mov dl [ eax + 0x5 ]
mov [ ecx + 0x5 ] dl
mov dl [ eax + 0x6 ]
mov [ ecx + 0x6 ] dl
mov dl [ eax + 0x7 ]
mov [ ecx + 0x7 ] dl
add eax 0x8
add ecx 0x8
dec [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
cmp eax edx
jae r-xdata
inc [ ebp - 0xc ]
cmp edx 0x40000
jbe r-xdata
mov ecx esi
call sub_409514
mov edx [ ebx + 0x1e8c ]
and eax 0xfffe
cmp eax [ ebx + edx * 4 + 0x1e0c ]
jae r-xdata
mov ecx esi
call sub_41268e
mov edx eax
mov eax [ ebp + 0x8 ]
push 0x24
pop ecx
sub ecx eax
shr edx cl
mov ecx [ esi + 0x4 ]
lea eax [ eax + ecx - 0x4 ]
mov ecx eax
shl edx 0x4
add [ ebp - 0x10 ] edx
shr ecx 0x3
add [ esi ] ecx
and eax 0x7
mov [ esi + 0x4 ] eax
mov ecx [ edi + 0xe6dc ]
mov ecx [ edi + 0x4b34 ]
add edx ecx
mov [ ebp - 0x8 ] edx
mov edx [ edi + 0x70 ]
add ecx edx
mov [ ebp - 0x4 ] ecx
lea ecx [ eax + edx ]
mov [ edi + 0x70 ] ecx
cmp [ ebp - 0x14 ] eax
jae r-xdata
cmp [ ebp + 0x8 ] 0x2
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x1 ]
mov [ ecx + 0x1 ] al
jbe r-xdata
mov edx [ edi + 0xe6dc ]
mov edx [ edi + 0x4b34 ]
add ecx edx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0xc ]
add edx eax
add eax ecx
mov [ ebp - 0x8 ] edx
mov [ edi + 0x70 ] eax
cmp [ ebp - 0x10 ] ecx
jae r-xdata
inc [ ebp - 0xc ]
inc edx
mov [ ebp + 0x8 ] 0xf
cmp edx 0xf
jae r-xdata
push 0x10
pop ecx
sub ecx edx
shr eax cl
movzx ecx [ eax + ebx + 0x1e90 ]
add ecx [ esi + 0x4 ]
mov edx ecx
shr edx 0x3
add [ esi ] edx
and ecx 0x7
mov [ esi + 0x4 ] ecx
movzx eax [ ebx + eax * 2 + 0x2290 ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edi + 0x4b34 ]
dec [ ebp + 0x8 ]
and edx ecx
mov dl [ edx + eax ]
mov ecx [ edi + 0x70 ]
inc [ ebp - 0xc ]
mov [ eax + ecx ] dl
mov eax [ edi + 0x70 ]
mov ecx [ edi + 0xe6dc ]
inc eax
and eax ecx
cmp [ ebp + 0x8 ] 0x0
mov [ edi + 0x70 ] eax
ja r-xdata
jmp r-xdata
cmp eax 0x8
jb r-xdata
cmp eax 0x8
jb r-xdata
cmp [ ebp + 0x8 ] 0x3
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x2 ]
mov [ ecx + 0x2 ] al
jbe r-xdata
mov eax [ edi + 0x4b34 ]
dec [ ebp + 0x8 ]
and ecx edx
mov cl [ ecx + eax ]
mov edx [ edi + 0x70 ]
mov [ eax + edx ] cl
mov ecx [ ebp - 0x14 ]
mov eax [ edi + 0x70 ]
mov edx [ edi + 0xe6dc ]
inc ecx
inc eax
and eax edx
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x14 ] ecx
mov [ edi + 0x70 ] eax
ja r-xdata
jmp r-xdata
cmp ecx 0x8
jb r-xdata
cmp ecx 0x8
jb r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ ebp + 0x8 ]
push 0x10
mov edx ecx
shr edx 0x3
add [ esi ] edx
mov edx [ ebp + 0x8 ]
and ecx 0x7
mov [ esi + 0x4 ] ecx
sub eax [ ebx + edx * 4 + 0x1e08 ]
pop ecx
sub ecx edx
shr eax cl
add eax [ ebx + edx * 4 + 0x1e4c ]
cmp eax [ ebx + 0x1e08 ]
jb r-xdata
lea ecx [ ebx + edx * 4 + 0x1e0c ]
add [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
shr eax 0x3
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shr eax 0x3
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x4
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x3 ]
mov [ ecx + 0x3 ] al
jbe r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0xc ]
shr eax 0x3
mov [ ebp - 0x14 ] eax
mov eax ecx
shr eax 0x3
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ecx edx
movzx eax [ ebx + eax * 2 + 0x2a90 ]
xor eax eax
mov [ ebp + 0x8 ] edx
inc edx
add ecx 0x4
cmp edx 0xf
jb r-xdata
push 0x8
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_41be10
add [ ebp - 0x8 ] 0x8
add [ ebp - 0x4 ] 0x8
sub [ ebp + 0x8 ] 0x8
add esp 0xc
dec [ ebp - 0x14 ]
jne r-xdata
jmp r-xdata
mov dl [ eax ]
sub [ ebp + 0x8 ] 0x8
mov [ ecx ] dl
mov dl [ eax + 0x1 ]
mov [ ecx + 0x1 ] dl
mov dl [ eax + 0x2 ]
mov [ ecx + 0x2 ] dl
mov dl [ eax + 0x3 ]
mov [ ecx + 0x3 ] dl
mov dl [ eax + 0x4 ]
mov [ ecx + 0x4 ] dl
mov dl [ eax + 0x5 ]
mov [ ecx + 0x5 ] dl
mov dl [ eax + 0x6 ]
mov [ ecx + 0x6 ] dl
mov dl [ eax + 0x7 ]
mov [ ecx + 0x7 ] dl
add eax 0x8
add ecx 0x8
dec [ ebp - 0x14 ]
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x8 ] 0x5
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x4 ]
mov [ ecx + 0x4 ] al
jbe r-xdata
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov ecx [ ebp - 0x8 ]
mov [ ecx ] al
jbe r-xdata
push 0x8
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_41be10
add [ ebp - 0x4 ] 0x8
add [ ebp - 0x8 ] 0x8
sub [ ebp + 0x8 ] 0x8
add esp 0xc
dec [ ebp - 0x14 ]
jne r-xdata
mov dl [ eax ]
sub [ ebp + 0x8 ] 0x8
mov [ ecx ] dl
mov dl [ eax + 0x1 ]
mov [ ecx + 0x1 ] dl
mov dl [ eax + 0x2 ]
mov [ ecx + 0x2 ] dl
mov dl [ eax + 0x3 ]
mov [ ecx + 0x3 ] dl
mov dl [ eax + 0x4 ]
mov [ ecx + 0x4 ] dl
mov dl [ eax + 0x5 ]
mov [ ecx + 0x5 ] dl
mov dl [ eax + 0x6 ]
mov [ ecx + 0x6 ] dl
mov dl [ eax + 0x7 ]
mov [ ecx + 0x7 ] dl
add eax 0x8
add ecx 0x8
dec [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp eax [ ecx ]
jb r-xdata
jmp r-xdata
cmp [ ebp + 0x8 ] 0x6
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x5 ]
mov [ ecx + 0x5 ] al
jbe r-xdata
cmp [ ebp + 0x8 ] 0x2
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1 ]
mov [ ecx + 0x1 ] al
jbe r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp + 0x8 ] 0x3
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2 ]
mov [ ecx + 0x2 ] al
jbe r-xdata
mov al [ eax + 0x6 ]
mov [ ecx + 0x6 ] al
jmp r-xdata
cmp [ ebp + 0x8 ] 0x4
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3 ]
mov [ ecx + 0x3 ] al
jbe r-xdata
cmp [ ebp + 0x8 ] 0x5
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4 ]
mov [ ecx + 0x4 ] al
jbe r-xdata
cmp [ ebp + 0x8 ] 0x6
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5 ]
mov [ ecx + 0x5 ] al
jbe r-xdata
mov eax [ ebp - 0x4 ]
sub_41632b
mov eax sub_4293d5
call sub_41a05c
sub esp 0x24
push ebx
push esi
mov esi ecx
push edi
lea edi [ esi + 0xe694 ]
and [ edi + 0x4 ] 0x0
and [ edi ] 0x0
mov eax 0x8000
cmp [ ebp + 0x10 ] eax
mov [ ebp - 0x10 ] edi
jg r-xdata
push eax
push [ ebp + 0xc ]
push [ esi + 0xe6a0 ]
call sub_41be10
lea ecx [ esi + 0xe65c ]
add esp 0xc
mov [ ebp - 0x14 ] ecx
call sub_40a841
test [ ebp + 0x8 ] 0x80
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ esi + 0xe6d4 ]
mov [ ebp + 0xc ] eax
mov ebx eax
push edi
call sub_40a867
mov ebx eax
mov [ ebp + 0xc ] ebx
test ebx ebx
jne r-xdata
xor al al
cmp ebx [ esi + 0xe6c8 ]
ja r-xdata
dec ebx
mov [ ebp + 0xc ] ebx
jmp r-xdata
mov ecx esi
call sub_414e70
jmp r-xdata
cmp ebx eax
push 0x70
mov [ esi + 0xe6d4 ] ebx
sete [ ebp + 0x13 ]
call sub_41a41a
mov edi eax
pop ecx
test edi edi
je r-xdata
mov eax [ esi + 0xe6a8 ]
cmp ebx eax
ja r-xdata
xor edi edi
lea ecx [ edi + 0x14 ]
call sub_415268
jmp r-xdata
mov eax [ esi + 0xe6a4 ]
mov eax [ eax + ebx * 4 ]
mov [ edi + 0x10 ] ebx
lea ebx [ eax + 0x8 ]
inc [ ebx ]
mov [ ebp - 0x1c ] eax
cmp ebx 0x400
jbe r-xdata
cmp [ ebp + 0x13 ] 0x0
je r-xdata
lea ecx [ esi + 0xe6b4 ]
push 0x1
call sub_412571
xor edx edx
inc edx
mov ecx [ esi + 0xe6b4 ]
mov ecx [ ecx + eax * 4 ]
mov edx eax
sub edx [ ebp - 0x18 ]
mov eax [ esi + 0xe6b4 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ esi + 0xe6b4 ]
mov eax [ ebp - 0x20 ]
lea ecx [ ecx + eax * 4 ]
cmp [ ecx ] 0x0
jne r-xdata
lea ecx [ esi + 0xe6a4 ]
push 0x1
call sub_412571
push 0x70
call sub_41a41a
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x70 ]
add eax ebx
and eax [ esi + 0xe6dc ]
test [ ebp + 0x8 ] 0x20
mov [ edi ] eax
je r-xdata
add ebx 0x102
mov edx [ ebp - 0x18 ]
test edx edx
jle r-xdata
inc [ ebp - 0x18 ]
xor ebx ebx
lea ecx [ ebx + 0x14 ]
call sub_415268
jmp r-xdata
push 0x1
mov ecx edi
call sub_414b07
mov eax [ ebp + 0xc ]
cmp eax [ esi + 0xe6c8 ]
jae r-xdata
push [ ebp - 0x10 ]
call sub_40a867
mov edx [ ebp + 0xc ]
mov [ edi + 0x4 ] eax
mov ecx [ esi + 0xe6c4 ]
mov [ ecx + edx * 4 ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x20 ] eax
cmp eax [ esi + 0xe6b8 ]
jb r-xdata
and [ ecx ] 0x0
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
cmp [ esi + 0xe6b8 ] eax
jbe r-xdata
mov eax [ esi + 0xe6a8 ]
mov ecx [ esi + 0xe6a4 ]
mov [ ecx + eax * 4 - 0x4 ] ebx
mov eax [ esi + 0xe6a8 ]
dec eax
push 0x0
lea ecx [ esi + 0xe6c4 ]
mov [ ebp - 0x1c ] ebx
mov [ edi + 0x10 ] eax
call sub_414490
add ebx 0x8
and [ ebx ] 0x0
jmp r-xdata
xor eax eax
mov ecx [ esi + 0xe6c4 ]
mov eax [ ecx + eax * 4 ]
jmp r-xdata
mov eax [ esi + 0x74 ]
mov ecx [ esi + 0x70 ]
cmp eax ecx
je r-xdata
test edx edx
jne r-xdata
xor eax eax
sub eax ecx
and eax [ esi + 0xe6dc ]
cmp eax ebx
ja r-xdata
mov [ edi + 0x4 ] eax
mov eax [ esi + 0xe6b8 ]
mov ecx [ esi + 0xe6b4 ]
push [ ebp - 0x10 ]
sub eax edx
mov [ ecx + eax * 4 ] edi
mov eax [ ebx ]
mov [ edi + 0x8 ] eax
call sub_40a867
test [ ebp + 0x8 ] 0x40
mov ebx eax
je r-xdata
cmp [ ebp + 0x13 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
call j_sub_409514
mov ecx [ ebp - 0x10 ]
mov esi eax
push 0x7
shr esi 0x9
call sub_409542
and [ ebp + 0xc ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov esi [ ebp - 0x1c ]
push [ ebp - 0x10 ]
call sub_40a867
mov ebx eax
mov [ ebp + 0x10 ] ebx
cmp ebx 0x10000
jae r-xdata
inc [ ebp + 0xc ]
add ebx 0x4
cmp [ ebp + 0xc ] 0x7
jl r-xdata
push [ ebp - 0x10 ]
call sub_40a867
mov [ ebx ] eax
push 0x1c
lea ebx [ edi + 0x4c ]
push 0x0
push ebx
mov [ edi + 0xc ] al
call sub_41a3a0
mov eax [ edi + 0x4 ]
mov [ edi + 0x5c ] eax
mov eax [ edi + 0x8 ]
add esp 0xc
test [ ebp + 0x8 ] 0x10
mov [ edi + 0x58 ] 0x3c000
mov [ edi + 0x60 ] eax
je r-xdata
cmp [ edi + 0x30 ] 0x40
jae r-xdata
lea ebx [ edi + 0x3c ]
push eax
mov ecx ebx
call sub_401106
push [ ebp + 0x10 ]
push [ esi + 0x3c ]
push [ ebx ]
call sub_41be10
add esp 0xc
xor esi esi
cmp ebx esi
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
inc eax
shl eax cl
test esi eax
je r-xdata
lea ebx [ edi + 0x2c ]
mov esi [ ebx ]
lea eax [ edi + 0x4c ]
mov [ ebp + 0xc ] esi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x20 ] 0x7
lea esi [ edi + 0x2c ]
mov ecx esi
call sub_4125f7
push 0x40
mov ecx esi
call sub_401106
push ebx
lea ecx [ ebp - 0x30 ]
call sub_4012f9
cmp ebx esi
mov ebx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp + 0x10 ]
push [ eax ]
mov ecx [ ebp - 0x14 ]
push [ ebp + 0xc ]
call sub_40a85a
add [ ebp + 0x10 ] 0x4
add [ ebp + 0xc ] 0x4
dec [ ebp - 0x20 ]
jne r-xdata
push [ edi + 0x4 ]
mov ecx [ ebp - 0x14 ]
lea eax [ esi + 0x1c ]
push eax
call sub_40a85a
mov ecx [ ebp - 0x14 ]
push 0x0
lea eax [ esi + 0x20 ]
push eax
call sub_40a85a
push [ edi + 0x8 ]
mov ecx [ ebp - 0x14 ]
lea eax [ esi + 0x2c ]
push eax
call sub_40a85a
push 0x10
push 0x0
add esi 0x30
push esi
call sub_41a3a0
add esp 0xc
test [ ebp + 0x8 ] 0x8
je r-xdata
mov esi [ ebp - 0x1c ]
mov ecx [ ebp - 0x14 ]
lea eax [ esi + 0x14 ]
push eax
push [ ebp + 0x10 ]
push ebx
call sub_40aa9d
or [ ebp - 0x4 ] 0xffffffff
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
add eax 0x3
cmp eax 0x8000
jae r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
add ecx 0x3
cmp ecx 0x8000
jae r-xdata
mov eax [ esi + 0x14 ]
mov [ edi + 0x24 ] eax
mov eax [ esi + 0x28 ]
mov [ edi + 0x28 ] eax
mov eax [ esi + 0x40 ]
lea ecx [ eax - 0x1 ]
mov [ ebp + 0x10 ] eax
cmp ecx 0x1ffe
ja r-xdata
push ebx
call sub_41a086
pop ecx
jmp r-xdata
test ebx ebx
je r-xdata
call j_sub_409514
mov ecx [ ebp - 0x10 ]
shr eax 0x8
push 0x8
mov [ ebx + esi ] al
call sub_409542
inc esi
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push eax
call sub_40a867
mov [ ebp + 0x8 ] eax
cmp eax 0x1fc0
ja r-xdata
push ebx
call sub_41a086
pop ecx
jmp r-xdata
mov edi [ edi + 0x30 ]
lea ecx [ eax + 0x40 ]
cmp edi ecx
jae r-xdata
mov esi [ ebx ]
xor edi edi
add esi 0x40
cmp [ ebp + 0x8 ] edi
jbe r-xdata
sub eax edi
add eax 0x40
push eax
mov ecx ebx
call sub_401106
mov ebx [ ebp - 0x10 ]
mov eax [ ebx ]
add eax 0x3
cmp eax 0x8000
jae r-xdata
mov ecx ebx
call j_sub_409514
shr eax 0x8
push 0x8
mov ecx ebx
mov [ edi + esi ] al
call sub_409542
inc edi
cmp edi [ ebp + 0x8 ]
jb r-xdata
sub_4167c9
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi ecx
cmp [ esi + 0x4c48 ] 0x0
push edi
mov [ esi + 0x4c58 ] 0x1
jne r-xdata
lea edi [ esi + 0x4 ]
push [ ebp + 0x8 ]
call sub_415371
mov ecx esi
call sub_411f71
test al al
je r-xdata
mov eax [ esi + 0x4b30 ]
mov ecx [ esi + 0x70 ]
mov edx eax
sub edx ecx
and edx [ esi + 0xe6dc ]
cmp edx 0x1004
jae r-xdata
lea ebx [ esi + 0x80 ]
pop edi
pop esi
pop ebx
leave
retn 0x4
lea edi [ esi + 0x80 ]
push edi
lea ebx [ esi + 0x4 ]
push ebx
mov ecx esi
call sub_4140b2
test al al
je r-xdata
mov ecx edi
call sub_409514
mov ebx [ esi + 0x118 ]
and eax 0xfffe
cmp eax [ esi + ebx * 4 + 0x98 ]
jae r-xdata
cmp eax ecx
je r-xdata
cmp [ esi + 0x90 ] 0x0
jne r-xdata
jne r-xdata
lea eax [ esi + 0x94 ]
push eax
push edi
push ebx
mov ecx esi
call sub_4141ce
test al al
je r-xdata
push 0xf
pop edx
lea ecx [ ebx + 0x1 ]
cmp ecx edx
jae r-xdata
push 0x10
pop ecx
sub ecx ebx
shr eax cl
movzx ecx [ eax + esi + 0x11c ]
add ecx [ edi + 0x4 ]
mov edx ecx
shr edx 0x3
add [ edi ] edx
and ecx 0x7
mov [ edi + 0x4 ] ecx
movzx ebx [ esi + eax * 2 + 0x51c ]
jmp r-xdata
mov ecx esi
call sub_414eec
mov eax [ esi + 0x4c54 ]
cmp eax [ esi + 0x4c44 ]
jg r-xdata
mov ecx esi
call sub_414eec
push ebx
push edi
mov ecx esi
call sub_4140b2
test al al
je r-xdata
mov ecx esi
call sub_411f71
test al al
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x84 ]
jl r-xdata
mov ecx [ edi + 0x4 ]
add ecx edx
mov ebx ecx
and ecx 0x7
mov [ edi + 0x4 ] ecx
shr ebx 0x3
add [ edi ] ebx
sub eax [ esi + edx * 4 + 0x94 ]
push 0x10
pop ecx
sub ecx edx
shr eax cl
add eax [ esi + edx * 4 + 0xd8 ]
cmp eax [ esi + 0x94 ]
jb r-xdata
lea ebx [ esi + ecx * 4 + 0x98 ]
mov eax 0x100
cmp ebx eax
jae r-xdata
jl r-xdata
lea eax [ esi + 0x94 ]
push eax
push ebx
push edi
mov ecx esi
call sub_4141ce
test al al
jne r-xdata
movzx ebx [ esi + eax * 2 + 0xd1c ]
xor eax eax
mov edx ecx
inc ecx
add ebx 0x4
cmp ecx 0xf
jb r-xdata
cmp ebx 0x106
jb r-xdata
cmp [ esi + 0x4c38 ] 0x0
je r-xdata
cmp [ esi + 0x4c48 ] 0x0
jne r-xdata
mov eax [ esi + 0x4c50 ]
cmp eax [ esi + 0x4c40 ]
ja r-xdata
mov ecx [ esi + 0x88 ]
mov eax [ ebx ]
lea eax [ eax + ecx - 0x1 ]
mov ecx [ edi ]
cmp ecx eax
jg r-xdata
jmp r-xdata
cmp eax [ ebx ]
jb r-xdata
jmp r-xdata
cmp ebx eax
jne r-xdata
lea eax [ ebx - 0x106 ]
cmp eax 0x8
jae r-xdata
mov ecx [ esi + 0x70 ]
mov eax [ esi + 0x4b34 ]
mov [ eax + ecx ] bl
inc [ esi + 0x70 ]
jmp r-xdata
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
push eax
lea ecx [ esi + 0x4b38 ]
call sub_412198
mov [ eax ] bl
jmp r-xdata
mov [ esi + 0x4c58 ] 0x0
jmp r-xdata
cmp ebx 0x101
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push edi
mov ecx esi
call sub_413e33
test al al
je r-xdata
mov ebx eax
shr ebx 0x2
and eax 0x3
dec ebx
or eax 0x4
mov ecx ebx
shl eax cl
inc eax
inc eax
mov [ ebp - 0xc ] eax
test ebx ebx
jbe r-xdata
add eax 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ esi + 0xe6dc ]
and [ esi + 0x70 ] eax
mov eax [ edi ]
cmp eax [ esi + 0x7c ]
jl r-xdata
add ebx 0xfffffefe
lea eax [ esi + ebx * 4 + 0x54 ]
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov ecx ebx
je r-xdata
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx esi
call sub_415311
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov ecx edi
mov [ ebp + 0x8 ] eax
call sub_409514
mov edx [ esi + 0x1004 ]
and eax 0xfffe
cmp eax [ esi + edx * 4 + 0xf84 ]
jae r-xdata
mov ecx edi
call sub_409514
push 0x10
pop ecx
sub ecx ebx
shr eax cl
add [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
add eax ebx
mov ecx eax
shr ecx 0x3
add [ edi ] ecx
and eax 0x7
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0xc ]
mov ecx edi
mov [ esi + 0x54 ] eax
call sub_409514
mov ebx [ esi + 0x2ddc ]
and eax 0xfffe
cmp eax [ esi + ebx * 4 + 0x2d5c ]
jae r-xdata
mov edx [ eax - 0x4 ]
mov [ eax ] edx
dec ecx
sub eax 0x4
test ecx ecx
ja r-xdata
cmp [ esi + 0x4c38 ] 0x0
je r-xdata
push 0xf
pop ebx
lea ecx [ edx + 0x1 ]
cmp ecx ebx
jae r-xdata
push 0x10
pop ecx
sub ecx edx
shr eax cl
movzx ecx [ eax + esi + 0x1008 ]
add ecx [ edi + 0x4 ]
mov edx ecx
shr edx 0x3
add [ edi ] edx
and ecx 0x7
mov [ edi + 0x4 ] ecx
movzx eax [ esi + eax * 2 + 0x1408 ]
jmp r-xdata
push 0xf
pop edx
lea ecx [ ebx + 0x1 ]
cmp ecx edx
jae r-xdata
push 0x10
pop ecx
sub ecx ebx
shr eax cl
movzx ecx [ eax + esi + 0x2de0 ]
add ecx [ edi + 0x4 ]
mov edx ecx
shr edx 0x3
add [ edi ] edx
and ecx 0x7
mov [ edi + 0x4 ] ecx
movzx eax [ esi + eax * 2 + 0x31e0 ]
jmp r-xdata
mov ebx [ esi + 0x54 ]
mov [ ebp + 0x8 ] eax
lea eax [ esi + 0x70 ]
mov edx [ eax ]
mov ecx edx
sub ecx ebx
mov ebx [ esi + 0xe6d8 ]
add ebx 0xffffefff
mov [ ebp - 0xc ] ecx
cmp ecx ebx
jae r-xdata
push [ esi + 0xe6dc ]
lea ecx [ esi + 0x70 ]
push ecx
push [ esi + 0x54 ]
push eax
jmp r-xdata
mov ecx [ edi + 0x4 ]
add ecx ebx
mov edx ecx
and ecx 0x7
mov [ edi + 0x4 ] ecx
shr edx 0x3
add [ edi ] edx
sub eax [ esi + ebx * 4 + 0xf80 ]
push 0x10
pop ecx
sub ecx ebx
shr eax cl
add eax [ esi + ebx * 4 + 0xfc4 ]
cmp eax [ esi + 0xf80 ]
jb r-xdata
lea edx [ esi + ecx * 4 + 0xf84 ]
cmp eax 0x4
jae r-xdata
mov ecx [ edi + 0x4 ]
add ecx edx
mov ebx ecx
and ecx 0x7
mov [ edi + 0x4 ] ecx
shr ebx 0x3
add [ edi ] ebx
sub eax [ esi + edx * 4 + 0x2d58 ]
push 0x10
pop ecx
sub ecx edx
shr eax cl
add eax [ esi + edx * 4 + 0x2d9c ]
cmp eax [ esi + 0x2d58 ]
jb r-xdata
lea ebx [ esi + ecx * 4 + 0x2d5c ]
cmp eax 0x8
jae r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
cmp edx ebx
jae r-xdata
lea ecx [ esi + 0x4b38 ]
call sub_4121d0
jmp r-xdata
movzx eax [ esi + eax * 2 + 0x1c08 ]
xor eax eax
mov ebx ecx
inc ecx
add edx 0x4
cmp ecx 0xf
jb r-xdata
mov ebx eax
shr ebx 0x1
and eax 0x1
dec ebx
or eax 0x2
mov ecx ebx
shl eax cl
inc eax
mov [ ebp - 0x8 ] eax
test ebx ebx
jbe r-xdata
inc eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
movzx eax [ esi + eax * 2 + 0x39e0 ]
xor eax eax
mov edx ecx
inc ecx
add ebx 0x4
cmp ecx 0xf
jb r-xdata
mov ebx eax
shr ebx 0x2
and eax 0x3
dec ebx
or eax 0x4
mov ecx ebx
shl eax cl
inc eax
inc eax
mov [ ebp - 0x8 ] eax
test ebx ebx
jbe r-xdata
add eax 0x2
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ebx [ esi + 0xe6dc ]
mov ebx [ esi + 0x4b34 ]
add ebx ecx
mov ecx [ esi + 0x4b34 ]
add ecx edx
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x8 ]
add edx ecx
mov [ eax ] edx
cmp [ esi + 0x54 ] ecx
jae r-xdata
cmp eax [ edx ]
jb r-xdata
jmp r-xdata
mov ebx [ ebp - 0x8 ]
cmp ebx 0x100
jbe r-xdata
cmp ebx 0x4
jb r-xdata
cmp eax [ ebx ]
jb r-xdata
jmp r-xdata
cmp [ esi + 0x4c38 ] 0x0
mov eax [ ebp - 0x8 ]
mov [ esi + 0x68 ] eax
je r-xdata
mov ecx edi
call sub_409514
push 0x10
pop ecx
sub ecx ebx
shr eax cl
add [ ebp - 0x8 ] eax
mov eax [ edi + 0x4 ]
add eax ebx
mov ecx eax
shr ecx 0x3
add [ edi ] ecx
and eax 0x7
mov [ edi + 0x4 ] eax
mov edx [ esi + 0x4b34 ]
dec [ ebp + 0x8 ]
and ecx ebx
mov cl [ ecx + edx ]
mov ebx [ eax ]
mov [ edx + ebx ] cl
mov ecx [ ebp - 0xc ]
mov edx [ eax ]
mov ebx [ esi + 0xe6dc ]
inc ecx
inc edx
and edx ebx
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0xc ] ecx
mov [ eax ] edx
ja r-xdata
jmp r-xdata
cmp ecx 0x8
jb r-xdata
cmp ecx 0x8
jb r-xdata
cmp [ esi + 0x4c38 ] 0x0
mov eax [ esi + 0x5c ]
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x60 ] eax
mov eax [ esi + 0x58 ]
mov [ esi + 0x5c ] eax
mov eax [ esi + 0x54 ]
mov [ esi + 0x58 ] eax
mov [ esi + 0x54 ] ebx
mov [ esi + 0x68 ] ecx
lea eax [ esi + 0x70 ]
je r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp + 0x8 ] eax
cmp ebx 0x2000
jbe r-xdata
mov ecx edi
call sub_41268e
push 0x20
pop ecx
sub ecx ebx
shr eax cl
add [ ebp - 0x8 ] eax
mov eax [ edi + 0x4 ]
add eax ebx
mov ecx eax
shr ecx 0x3
add [ edi ] ecx
and eax 0x7
mov [ edi + 0x4 ] eax
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov ebx [ esi + 0xe6d8 ]
mov [ ebp + 0x8 ] eax
lea eax [ esi + 0x70 ]
mov edx [ eax ]
mov ecx edx
sub ecx [ ebp - 0xc ]
add ebx 0xffffefff
mov [ ebp - 0x4 ] ecx
cmp ecx ebx
jae r-xdata
push [ esi + 0xe6dc ]
lea eax [ esi + 0x70 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
jmp r-xdata
mov eax ecx
shr eax 0x3
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
shr ecx 0x3
mov edx [ eax ]
mov [ ebp - 0x4 ] ecx
mov ecx edx
sub ecx ebx
mov ebx [ esi + 0xe6d8 ]
add ebx 0xffffefff
mov [ ebp - 0xc ] ecx
cmp ecx ebx
jae r-xdata
push [ esi + 0xe6dc ]
push eax
push ebx
push ecx
inc [ ebp + 0x8 ]
cmp ebx 0x40000
jbe r-xdata
mov ecx edi
call sub_409514
mov ebx [ esi + 0x1ef0 ]
and eax 0xfffe
cmp eax [ esi + ebx * 4 + 0x1e70 ]
jae r-xdata
mov ecx edi
call sub_41268e
push 0x24
pop ecx
sub ecx ebx
shr eax cl
shl eax 0x4
add [ ebp - 0x8 ] eax
mov eax [ edi + 0x4 ]
lea ebx [ eax + ebx - 0x4 ]
mov eax ebx
shr eax 0x3
add [ edi ] eax
and ebx 0x7
mov [ edi + 0x4 ] ebx
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
cmp edx ebx
jae r-xdata
test ecx ecx
jbe r-xdata
push 0x8
push ebx
push [ ebp - 0xc ]
call sub_41be10
add [ ebp - 0xc ] 0x8
sub [ ebp + 0x8 ] 0x8
add esp 0xc
add ebx 0x8
dec [ ebp - 0x8 ]
jne r-xdata
mov dl [ ebx ]
sub [ ebp + 0x8 ] 0x8
mov [ eax ] dl
mov dl [ ebx + 0x1 ]
mov [ eax + 0x1 ] dl
mov dl [ ebx + 0x2 ]
mov [ eax + 0x2 ] dl
mov dl [ ebx + 0x3 ]
mov [ eax + 0x3 ] dl
mov dl [ ebx + 0x4 ]
mov [ eax + 0x4 ] dl
mov dl [ ebx + 0x5 ]
mov [ eax + 0x5 ] dl
mov dl [ ebx + 0x6 ]
mov [ eax + 0x6 ] dl
mov dl [ ebx + 0x7 ]
mov [ eax + 0x7 ] dl
add ebx 0x8
add eax 0x8
dec ecx
jne r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
cmp edx ebx
jae r-xdata
inc [ ebp + 0x8 ]
push 0xf
pop edx
lea ecx [ ebx + 0x1 ]
cmp ecx edx
jae r-xdata
push 0x10
pop ecx
sub ecx ebx
shr eax cl
movzx ecx [ eax + esi + 0x1ef4 ]
add ecx [ edi + 0x4 ]
mov edx ecx
shr edx 0x3
add [ edi ] edx
and ecx 0x7
mov [ edi + 0x4 ] ecx
movzx eax [ esi + eax * 2 + 0x22f4 ]
jmp r-xdata
mov ebx [ esi + 0xe6dc ]
mov eax [ esi + 0x4b34 ]
lea ebx [ eax + ecx ]
add eax edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
lea ecx [ eax + edx ]
mov [ esi + 0x70 ] ecx
cmp [ ebp - 0xc ] eax
jae r-xdata
mov dl [ ebx ]
mov eax [ ebp - 0xc ]
mov [ eax ] dl
cmp ecx 0x1
jbe r-xdata
mov ebx [ esi + 0xe6dc ]
mov ebx [ esi + 0x4b34 ]
add ebx ecx
mov ecx [ esi + 0x4b34 ]
add ecx edx
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x8 ]
add edx ecx
mov [ eax ] edx
cmp [ ebp - 0x8 ] ecx
jae r-xdata
mov ecx [ edi + 0x4 ]
add ecx edx
mov ebx ecx
and ecx 0x7
mov [ edi + 0x4 ] ecx
shr ebx 0x3
add [ edi ] ebx
sub eax [ esi + edx * 4 + 0x1e6c ]
push 0x10
pop ecx
sub ecx edx
shr eax cl
add eax [ esi + edx * 4 + 0x1eb0 ]
cmp eax [ esi + 0x1e6c ]
jb r-xdata
lea ebx [ esi + ecx * 4 + 0x1e70 ]
add [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x4b34 ]
dec [ ebp + 0x8 ]
and ecx ebx
mov cl [ ecx + edx ]
mov ebx [ eax ]
mov [ edx + ebx ] cl
mov ecx [ ebp - 0x4 ]
mov edx [ eax ]
mov ebx [ esi + 0xe6dc ]
inc ecx
inc edx
and edx ebx
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] ecx
mov [ eax ] edx
ja r-xdata
jmp r-xdata
cmp eax 0x8
jb r-xdata
cmp eax 0x8
jb r-xdata
mov dl [ ebx + 0x1 ]
mov [ eax + 0x1 ] dl
cmp ecx 0x2
jbe r-xdata
mov edx [ esi + 0x4b34 ]
dec [ ebp - 0x4 ]
and ecx ebx
mov cl [ ecx + edx ]
mov ebx [ eax ]
mov [ edx + ebx ] cl
mov ecx [ ebp - 0xc ]
mov edx [ eax ]
mov ebx [ esi + 0xe6dc ]
inc ecx
inc edx
and edx ebx
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] ecx
mov [ eax ] edx
ja r-xdata
jmp r-xdata
cmp ecx 0x8
jb r-xdata
cmp ecx 0x8
jb r-xdata
movzx eax [ esi + eax * 2 + 0x2af4 ]
xor eax eax
mov edx ecx
inc ecx
add ebx 0x4
cmp ecx 0xf
jb r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x8 ]
shr eax 0x3
mov [ ebp - 0xc ] eax
shr eax 0x3
mov ecx eax
mov eax [ ebp - 0x4 ]
mov dl [ ebx + 0x2 ]
mov [ eax + 0x2 ] dl
cmp ecx 0x3
jbe r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shr eax 0x3
mov [ ebp + 0x8 ] eax
mov eax ecx
shr eax 0x3
mov ecx eax
mov eax [ ebp - 0xc ]
cmp eax [ ebx ]
jb r-xdata
jmp r-xdata
cmp [ ebp + 0x8 ] 0x1
mov al [ ebx ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] al
jbe r-xdata
push 0x8
push ebx
push [ ebp - 0x4 ]
call sub_41be10
add [ ebp - 0x4 ] 0x8
sub [ ebp + 0x8 ] 0x8
add esp 0xc
add ebx 0x8
dec [ ebp - 0xc ]
jne r-xdata
mov dl [ ebx ]
sub [ ebp + 0x8 ] 0x8
mov [ eax ] dl
mov dl [ ebx + 0x1 ]
mov [ eax + 0x1 ] dl
mov dl [ ebx + 0x2 ]
mov [ eax + 0x2 ] dl
mov dl [ ebx + 0x3 ]
mov [ eax + 0x3 ] dl
mov dl [ ebx + 0x4 ]
mov [ eax + 0x4 ] dl
mov dl [ ebx + 0x5 ]
mov [ eax + 0x5 ] dl
mov dl [ ebx + 0x6 ]
mov [ eax + 0x6 ] dl
mov dl [ ebx + 0x7 ]
mov [ eax + 0x7 ] dl
add ebx 0x8
add eax 0x8
dec ecx
jne r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov dl [ ebx + 0x3 ]
mov [ eax + 0x3 ] dl
cmp ecx 0x4
jbe r-xdata
push 0x8
push ebx
push [ ebp - 0xc ]
call sub_41be10
add [ ebp - 0xc ] 0x8
sub [ ebp - 0x4 ] 0x8
add esp 0xc
add ebx 0x8
dec [ ebp + 0x8 ]
jne r-xdata
mov dl [ ebx ]
sub [ ebp - 0x4 ] 0x8
mov [ eax ] dl
mov dl [ ebx + 0x1 ]
mov [ eax + 0x1 ] dl
mov dl [ ebx + 0x2 ]
mov [ eax + 0x2 ] dl
mov dl [ ebx + 0x3 ]
mov [ eax + 0x3 ] dl
mov dl [ ebx + 0x4 ]
mov [ eax + 0x4 ] dl
mov dl [ ebx + 0x5 ]
mov [ eax + 0x5 ] dl
mov dl [ ebx + 0x6 ]
mov [ eax + 0x6 ] dl
mov dl [ ebx + 0x7 ]
mov [ eax + 0x7 ] dl
add ebx 0x8
add eax 0x8
dec ecx
jne r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x2
mov al [ ebx + 0x1 ]
mov [ ecx + 0x1 ] al
jbe r-xdata
mov dl [ ebx + 0x4 ]
mov [ eax + 0x4 ] dl
cmp ecx 0x5
jbe r-xdata
cmp [ ebp + 0x8 ] 0x3
mov al [ ebx + 0x2 ]
mov [ ecx + 0x2 ] al
jbe r-xdata
mov dl [ ebx + 0x5 ]
mov [ eax + 0x5 ] dl
cmp ecx 0x6
jbe r-xdata
cmp [ ebp + 0x8 ] 0x4
mov al [ ebx + 0x3 ]
mov [ ecx + 0x3 ] al
jbe r-xdata
mov cl [ ebx + 0x6 ]
mov [ eax + 0x6 ] cl
jmp r-xdata
cmp [ ebp + 0x8 ] 0x5
mov al [ ebx + 0x4 ]
mov [ ecx + 0x4 ] al
jbe r-xdata
cmp [ ebp + 0x8 ] 0x6
mov al [ ebx + 0x5 ]
mov [ ecx + 0x5 ] al
jbe r-xdata
mov al [ ebx + 0x6 ]
mov [ ecx + 0x6 ] al
jmp r-xdata
sub_417214
mov eax sub_42946d
call sub_41a05c
push ecx
push ebx
push esi
mov esi ecx
push 0x1
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x10 ] esi
call sub_4094a8
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] ebx
mov [ esi + 0x48 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
lea ecx [ esi + 0x4b38 ]
call sub_412089
lea ecx [ esi + 0x98d0 ]
call sub_412aa2
lea ecx [ esi + 0xe65c ]
mov [ ebp - 0x4 ] 0x5
call sub_40a81b
push 0x1
lea ecx [ esi + 0xe694 ]
mov [ ebp - 0x4 ] 0x6
call sub_4094a8
lea eax [ esi + 0xe6a4 ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
lea eax [ esi + 0xe6b4 ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
lea eax [ esi + 0xe6c4 ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xa
mov [ esi ] eax
mov [ esi + 0x4b34 ] ebx
mov [ esi + 0x4c38 ] bl
mov [ esi + 0x4c48 ] bl
mov [ esi + 0x4c49 ] bl
mov [ esi + 0x4c4a ] bl
mov [ esi + 0x1c ] 0x1
call sub_410c7f
push ebx
mov ecx esi
mov [ esi + 0x14 ] eax
mov [ esi + 0x20 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0xe6d8 ] ebx
mov [ esi + 0xe6dc ] ebx
call sub_415371
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_417324
push ebp
mov ebp esp
sub esp 0x134
push ebx
push esi
push edi
mov ebx ecx
call sub_41388b
push [ ebp + 0x8 ]
mov ecx ebx
call sub_415371
mov eax [ ebx + 0x1c ]
xor ecx ecx
add eax eax
je r-xdata
mov edi [ ebx + 0x18 ]
push 0x5
pop ecx
lea esi [ ebx + 0x80 ]
lea eax [ ebx + 0x94 ]
push 0x4a9c
push eax
add edi 0x18
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] esi
[ edi ] [ esi ]
mov eax [ ebx + 0x18 ]
add eax 0x30
push eax
call sub_41be10
add esp 0xc
xor eax eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x9 ] al
mov [ ebp + 0xb ] al
xor edx edx
mov ecx ebx
call sub_414eec
mov eax [ ebp - 0x2c ]
mov ecx [ ebx + 0x18 ]
imul eax eax 0x4ae4
mov edi [ ebp - 0x30 ]
add eax ecx
push 0x5
pop ecx
lea esi [ eax + 0x18 ]
push 0x4a9c
add eax 0x30
push eax
push [ ebp - 0x34 ]
[ edi ] [ esi ]
call sub_41be10
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn 0x4
add [ ebp - 0x4 ] eax
je r-xdata
mov eax [ ebx + 0x18 ]
add eax edx
mov [ eax + 0x4ad1 ] 0x0
mov [ eax + 0x4ad3 ] 0x0
mov eax [ ebx + 0x1c ]
inc ecx
add eax eax
add edx 0x4ae4
cmp ecx eax
jb r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x10 ] eax
jge r-xdata
mov ecx [ ebx ]
mov eax __pe_WINRAR_export_address_table
sub eax [ ebp - 0x4 ]
and eax 0xfffffff0
push eax
mov eax [ ebx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
call sub_40b65d
mov [ ebp - 0x24 ] eax
test eax eax
jl r-xdata
mov ecx [ ebx + 0x1c ]
xor eax eax
add ecx ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] eax
je r-xdata
mov ecx [ ebx + 0x1c ]
mov eax [ ebp - 0x1c ]
xor edx edx
div ecx
xor esi esi
mov [ ebp - 0x20 ] eax
cmp edx esi
je r-xdata
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
cmp [ ebp - 0x1c ] esi
jbe r-xdata
inc [ ebp - 0x20 ]
mov eax [ ebx + 0x20 ]
add eax [ ebp - 0x10 ]
lea edi [ esi + 0x4 ]
push eax
mov ecx edi
call sub_4094ee
and [ edi + 0x4 ] 0x0
and [ edi ] 0x0
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ esi + 0x4acc ] eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4acc ] eax
jmp r-xdata
xor esi esi
cmp [ ebp - 0x14 ] esi
je r-xdata
mov eax [ ebp - 0x20 ]
imul eax eax 0x4ae4
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x134 ]
mov [ ebp - 0x18 ] eax
mov [ esi + 0x4ad0 ] 0x0
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x2c ] 0x0
cmp [ ebp - 0x24 ] 0x0
mov [ esi + 0x4ad3 ] 0x0
sete al
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x4ad2 ] al
mov eax [ ebp - 0x14 ]
mov [ esi + 0x4ae0 ] eax
jne r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov ecx [ ebx + 0x14 ]
call sub_410c38
mov [ ebp - 0x8 ] esi
cmp [ ebp - 0x14 ] esi
jbe r-xdata
cmp [ ebp - 0x14 ] 0x1
mov [ ecx + 0x4 ] edx
jne r-xdata
mov edx edi
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
lea eax [ esi + 0x4 ]
push eax
mov ecx ebx
mov [ esi + 0x14 ] 0x1
call sub_4140b2
test al al
je r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov [ ebp - 0x18 ] esi
push ecx
mov ecx [ ebx + 0x14 ]
push sub_415299
call sub_410e85
push eax
mov ecx ebx
call sub_4144e9
jmp r-xdata
mov [ esi + 0x4ad1 ] 0x1
mov [ ebp - 0x9 ] 0x1
cmp [ esi + 0x18 ] 0x20000
jg r-xdata
mov [ ebp + 0xb ] 0x1
mov esi [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
sub esi ecx
cmp esi 0x400
jl r-xdata
push esi
mov ecx ebx
call sub_415935
test al al
je r-xdata
push esi
mov ecx ebx
call sub_415419
test al al
je r-xdata
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebx + 0x18 ]
sub edx [ ebp - 0x8 ]
mov edi [ ebp - 0x20 ]
add [ ebp - 0x18 ] 0x8
add eax esi
mov [ ecx ] eax
cmp edi edx
jae r-xdata
add [ ebp - 0x8 ] edi
mov eax [ ebp - 0x8 ]
add esi [ ebp - 0x28 ]
cmp eax [ ebp - 0x1c ]
jb r-xdata
cmp eax 0x400
jl r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
test esi esi
jl r-xdata
cmp ecx [ ebp - 0x4 ]
jl r-xdata
cmp [ esi + 0x4ad0 ] 0x0
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax [ ebx + 0x1c ]
add eax eax
cmp [ ebp - 0x14 ] eax
jb r-xdata
mov eax [ esi + 0x24 ]
add eax [ esi + 0x18 ]
add [ ebp - 0x8 ] 0x4ae4
add [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x14 ]
sub eax [ ebp - 0x10 ]
js r-xdata
jle r-xdata
jmp r-xdata
cmp [ esi + 0x4ad3 ] 0x0
jne r-xdata
mov esi [ ebx + 0x18 ]
add esi [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
cmp [ esi + 0x4ad3 ] 0x0
mov [ ebp - 0x2c ] eax
mov [ esi ] ebx
je r-xdata
jmp r-xdata
and [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x20 ]
push esi
add ecx eax
push ecx
push eax
call sub_41c710
add esp 0xc
mov ecx [ ebx + 0x20 ]
mov eax [ esi + 0x10 ]
sub eax ecx
add eax [ esi + 0x4 ]
cmp [ ebp - 0x4 ] eax
jle r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
sub edx eax
push edx
add eax ecx
push eax
push ecx
mov [ ebp - 0x24 ] edx
call sub_41c710
mov eax [ esi + 0x20 ]
sub eax [ esi + 0x4 ]
add esp 0xc
add [ esi + 0x18 ] eax
xor eax eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x20 ] eax
mov ecx [ ebx + 0x20 ]
mov [ esi + 0x10 ] ecx
mov [ esi + 0x4 ] eax
cmp [ ebp - 0x8 ] eax
je r-xdata
mov [ ebp + 0xb ] 0x1
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
add [ ebp - 0x18 ] 0x4ae4
cmp eax [ ebp - 0x14 ]
jb r-xdata
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebx + 0x18 ]
mov ecx [ eax + 0x4adc ]
mov edi [ eax + 0x4ad4 ]
push 0x4ae4
push esi
push eax
mov [ ebp - 0x28 ] ecx
call sub_41be10
mov eax [ ebx + 0x18 ]
mov ecx [ ebp - 0x28 ]
mov [ eax + 0x4ad4 ] edi
mov eax [ ebx + 0x18 ]
mov [ eax + 0x4adc ] ecx
add esp 0xc
mov [ esi + 0x4ad3 ] 0x0
xor eax eax
mov esi [ ebx + 0x18 ]
add esi [ ebp - 0x18 ]
lea edi [ esi + 0x4ad1 ]
cmp [ edi ] 0x0
jne r-xdata
jmp r-xdata
sub_417715
mov eax sub_42947f
call sub_41a05c
sub esp 0x18
push ebx
push esi
lea esi [ ecx + 0x4 ]
mov [ ebp - 0x10 ] ecx
push edi
mov ecx esi
call sub_409514
mov edi eax
mov eax [ esi + 0x4 ]
add eax 0x8
shr edi 0x8
mov ecx eax
push 0x7
pop ebx
shr ecx 0x3
add [ esi ] ecx
mov [ ebp - 0x14 ] edi
and eax ebx
and edi ebx
inc edi
mov [ esi + 0x4 ] eax
cmp edi ebx
jne r-xdata
cmp edi 0x8
jne r-xdata
mov ecx esi
call sub_409514
mov edi eax
mov eax [ esi + 0x4 ]
shr edi 0x8
add edi ebx
add eax 0x8
jmp r-xdata
push edi
lea ecx [ ebp - 0x24 ]
call sub_4012f9
xor ebx ebx
cmp edi ebx
mov [ ebp - 0x4 ] ebx
jle r-xdata
mov ecx esi
call sub_409514
mov edi eax
mov eax [ esi + 0x4 ]
add eax 0x10
mov ecx eax
shr ecx 0x3
add [ esi ] ecx
and eax ebx
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0x10 ]
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x14 ]
call sub_41632b
cmp [ ebp - 0x24 ] 0x0
mov bl al
je r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x78 ]
dec eax
cmp [ esi ] eax
jl r-xdata
mov al bl
push [ ebp - 0x24 ]
call sub_41a086
pop ecx
mov ecx esi
call sub_409514
mov ecx [ ebp - 0x24 ]
shr eax 0x8
mov [ ecx + ebx ] al
mov eax [ esi + 0x4 ]
add eax 0x8
mov ecx eax
shr ecx 0x3
add [ esi ] ecx
and eax 0x7
inc ebx
cmp ebx edi
mov [ esi + 0x4 ] eax
jl r-xdata
call sub_411ef3
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
cmp ebx eax
jl r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
xor al al
jmp r-xdata
push [ ebp - 0x24 ]
call sub_41a086
pop ecx
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
sub_417825
mov eax sub_42947f
call sub_41a05c
sub esp 0x18
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x10 ] edi
call sub_4139dc
mov esi eax
or ebx 0xffffffff
mov [ ebp - 0x14 ] esi
cmp esi ebx
jne r-xdata
and esi 0x7
inc esi
cmp esi 0x7
jne r-xdata
xor al al
jmp r-xdata
cmp esi 0x8
jne r-xdata
mov ecx edi
call sub_4139dc
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
push esi
lea ecx [ ebp - 0x24 ]
call sub_4012f9
mov edi [ ebp - 0x24 ]
xor ebx ebx
cmp esi ebx
mov [ ebp - 0x4 ] ebx
jle r-xdata
mov ecx edi
call sub_4139dc
mov esi eax
cmp esi ebx
je r-xdata
lea esi [ eax + 0x7 ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
push esi
push edi
push [ ebp - 0x14 ]
call sub_41632b
mov bl al
test edi edi
je r-xdata
mov ecx [ ebp - 0x10 ]
call sub_4139dc
cmp eax 0xffffffff
je r-xdata
mov ecx edi
call sub_4139dc
cmp eax ebx
je r-xdata
mov al bl
push edi
call sub_41a086
pop ecx
test edi edi
je r-xdata
mov [ edi + ebx ] al
inc ebx
cmp ebx esi
jl r-xdata
shl esi 0x8
add esi eax
push edi
call sub_41a086
pop ecx
jmp r-xdata
sub_4178f6
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ esi + 0x4c48 ] 0x0
mov [ esi + 0x4c58 ] 0x1
jne r-xdata
mov [ ebp - 0x8 ] ebx
xor edi edi
lea edi [ esi + 0x4 ]
push [ ebp + 0x8 ]
mov ecx esi
call sub_415371
mov ecx esi
call sub_411ef3
test al al
je r-xdata
inc ebx
cmp ebx 0x13
jb r-xdata
push edx
lea eax [ edi + rw-data ]
mov ecx ebx
push ebx
mov [ ebp - 0xc ] 0x1
shl [ ebp - 0xc ] cl
push eax
mov [ ebp - 0x4 ] edx
call sub_41a3a0
add esp 0xc
mov eax [ esi + 0x74 ]
mov ecx [ esi + 0x70 ]
mov edx eax
sub edx ecx
and edx [ esi + 0xe6dc ]
cmp edx 0x104
jae r-xdata
mov ecx esi
call sub_411ef3
test al al
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebx * 4 + rw-data ]
test edx edx
jle r-xdata
mov eax [ ebp - 0x8 ]
mov [ edi * 4 + rw-data ] eax
add eax [ ebp - 0xc ]
inc edi
dec [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
jne r-xdata
cmp [ esi + 0xe654 ] 0x1
jne r-xdata
cmp eax ecx
je r-xdata
mov ecx esi
call sub_414b26
mov ecx esi
call sub_413a86
test al al
je r-xdata
cmp [ esi + 0xe658 ] 0x0
jne r-xdata
mov ecx edi
call sub_409514
mov ebx [ esi + 0x118 ]
and eax 0xfffe
cmp eax [ esi + ebx * 4 + 0x98 ]
jae r-xdata
lea ecx [ esi + 0x98d0 ]
call sub_4136cc
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov ecx esi
call sub_414b26
mov eax [ esi + 0x4c54 ]
cmp eax [ esi + 0x4c44 ]
jg r-xdata
push 0xf
pop edx
lea ecx [ ebx + 0x1 ]
cmp ecx edx
jae r-xdata
push 0x10
pop ecx
sub ecx ebx
shr eax cl
movzx ecx [ eax + esi + 0x11c ]
add ecx [ edi + 0x4 ]
mov edx ecx
shr edx 0x3
add [ edi ] edx
and ecx 0x7
mov [ edi + 0x4 ] ecx
movzx eax [ esi + eax * 2 + 0x51c ]
jmp r-xdata
lea ecx [ esi + 0x98d0 ]
call sub_413603
and [ esi + 0xe654 ] 0x0
cmp ebx [ esi + 0xe4bc ]
jne r-xdata
jl r-xdata
mov ecx [ edi + 0x4 ]
add ecx edx
mov ebx ecx
and ecx 0x7
mov [ edi + 0x4 ] ecx
shr ebx 0x3
add [ edi ] ebx
sub eax [ esi + edx * 4 + 0x94 ]
push 0x10
pop ecx
sub ecx edx
shr eax cl
add eax [ esi + edx * 4 + 0xd8 ]
cmp eax [ esi + 0x94 ]
jb r-xdata
lea ebx [ esi + ecx * 4 + 0x98 ]
mov ecx 0x100
cmp eax ecx
jge r-xdata
mov eax [ esi + 0x4b34 ]
mov ecx [ esi + 0x70 ]
mov [ eax + ecx ] bl
jmp r-xdata
mov ecx esi
call sub_4139dc
test eax eax
jne r-xdata
cmp [ esi + 0x4c48 ] 0x0
jne r-xdata
mov eax [ esi + 0x4c50 ]
cmp eax [ esi + 0x4c40 ]
ja r-xdata
movzx eax [ esi + eax * 2 + 0xd1c ]
xor eax eax
mov edx ecx
inc ecx
add ebx 0x4
cmp ecx 0xf
jb r-xdata
cmp eax 0x10f
jl r-xdata
mov ecx [ esi + 0x4b34 ]
mov edx [ esi + 0x70 ]
mov [ ecx + edx ] al
inc [ esi + 0x70 ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx esi
call sub_413a86
mov [ esi + 0x4c58 ] 0x0
jmp r-xdata
cmp eax [ ebx ]
jb r-xdata
jmp r-xdata
cmp eax ecx
jne r-xdata
movzx ebx [ eax + rw-data ]
add eax 0xfffffef1
movzx eax [ eax + rw-data ]
add ebx 0x3
mov [ ebp - 0x4 ] ebx
mov [ ebp + 0x8 ] eax
test eax eax
jbe r-xdata
mov eax [ esi + 0xe6dc ]
and [ esi + 0x70 ] eax
mov eax [ edi ]
cmp eax [ esi + 0x7c ]
jle r-xdata
cmp eax 0x2
je r-xdata
jmp r-xdata
cmp eax 0x101
jne r-xdata
mov ecx esi
call sub_414aad
jmp r-xdata
mov ecx edi
call sub_409514
mov ebx [ esi + 0x1004 ]
and eax 0xfffe
cmp eax [ esi + ebx * 4 + 0xf84 ]
jae r-xdata
mov ecx edi
call sub_409514
push 0x10
pop ecx
sub ecx [ ebp + 0x8 ]
shr eax cl
add ebx eax
mov eax [ edi + 0x4 ]
add eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
mov ecx eax
shr ecx 0x3
add [ edi ] ecx
and eax 0x7
mov [ edi + 0x4 ] eax
cmp eax 0x3
jne r-xdata
cmp eax 0x102
jne r-xdata
mov ecx esi
call sub_417715
jmp r-xdata
test al al
jne r-xdata
push 0xf
pop edx
lea ecx [ ebx + 0x1 ]
cmp ecx edx
jae r-xdata
push 0x10
pop ecx
sub ecx ebx
shr eax cl
movzx ecx [ eax + esi + 0x1008 ]
add ecx [ edi + 0x4 ]
mov edx ecx
shr edx 0x3
add [ edi ] edx
and ecx 0x7
mov [ edi + 0x4 ] ecx
movzx eax [ esi + eax * 2 + 0x1408 ]
jmp r-xdata
cmp eax 0x4
jne r-xdata
mov ecx esi
call sub_417825
jmp r-xdata
cmp eax 0x107
jge r-xdata
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
mov ecx [ edi + 0x4 ]
add ecx edx
mov ebx ecx
and ecx 0x7
mov [ edi + 0x4 ] ecx
shr ebx 0x3
add [ edi ] ebx
sub eax [ esi + edx * 4 + 0xf80 ]
push 0x10
pop ecx
sub ecx edx
shr eax cl
add eax [ esi + edx * 4 + 0xfc4 ]
cmp eax [ esi + 0xf80 ]
jb r-xdata
lea ebx [ esi + ecx * 4 + 0xf84 ]
movzx ecx [ eax + rw-data ]
mov ebx [ eax * 4 + rw-data ]
inc ebx
mov [ ebp - 0xc ] ebx
mov [ ebp + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp eax 0x5
jne r-xdata
xor ebx ebx
mov [ ebp + 0xb ] bl
mov [ ebp - 0xc ] ebx
cmp eax 0x110
jge r-xdata
add eax 0xfffffefd
lea ecx [ esi + eax * 4 + 0x54 ]
mov edx [ ecx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x54 ]
mov [ ebp + 0x8 ] eax
mov eax ecx
sub eax edx
mov edx [ esi + 0xe6d8 ]
add edx 0xffffefff
cmp eax edx
jae r-xdata
movzx eax [ esi + eax * 2 + 0x1c08 ]
xor eax eax
mov edx ecx
inc ecx
add ebx 0x4
cmp ecx 0xf
jb r-xdata
cmp ebx 0x2000
jb r-xdata
cmp eax 0x9
jle r-xdata
mov ecx esi
call sub_4139dc
cmp eax 0xffffffff
je r-xdata
mov ecx esi
call sub_4139dc
cmp eax 0xffffffff
jne r-xdata
movzx ebx [ eax + rw-data ]
add eax 0xfffffef9
movzx eax [ eax + rw-data ]
inc ebx
mov [ ebp + 0x8 ] eax
test eax eax
jbe r-xdata
test eax eax
jg r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
cmp ecx edx
jae r-xdata
cmp eax [ ebx ]
jb r-xdata
jmp r-xdata
mov eax [ esi + 0x5c ]
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0xe6d8 ]
mov [ esi + 0x60 ] eax
mov eax [ esi + 0x58 ]
mov [ esi + 0x5c ] eax
mov eax [ esi + 0x54 ]
mov [ esi + 0x58 ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x68 ] eax
mov [ ebp + 0x8 ] eax
mov eax ecx
sub eax ebx
add edx 0xffffefff
mov [ esi + 0x54 ] ebx
cmp eax edx
jae r-xdata
inc [ ebp - 0x4 ]
cmp ebx 0x40000
jb r-xdata
mov ecx edi
call sub_409514
push 0x10
pop ecx
sub ecx [ ebp + 0x8 ]
shr eax cl
add ebx eax
mov eax [ edi + 0x4 ]
add eax [ ebp + 0x8 ]
mov ecx eax
shr ecx 0x3
add [ edi ] ecx
and eax 0x7
mov [ edi + 0x4 ] eax
cmp ecx 0x4
jbe r-xdata
mov ecx [ esi + 0xe6d8 ]
add eax 0x4
mov [ ebp + 0x8 ] eax
mov eax [ esi + 0x70 ]
lea edx [ eax - 0x1 ]
add ecx 0xffffefff
cmp edx ecx
jae r-xdata
cmp [ ebp - 0xc ] 0x3
movzx eax al
jne r-xdata
mov [ ebp + 0xb ] 0x1
jmp r-xdata
mov eax [ esi + 0x5c ]
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0xe6d8 ]
mov [ esi + 0x60 ] eax
mov eax [ esi + 0x58 ]
mov [ esi + 0x5c ] eax
mov eax [ esi + 0x54 ]
mov [ esi + 0x58 ] eax
push 0x2
pop eax
mov [ esi + 0x68 ] eax
mov [ ebp + 0x8 ] eax
mov eax ecx
sub eax ebx
add edx 0xffffefff
mov [ esi + 0x54 ] ebx
cmp eax edx
jae r-xdata
mov ecx edi
call sub_409514
push 0x10
pop ecx
sub ecx [ ebp + 0x8 ]
shr eax cl
add ebx eax
mov eax [ edi + 0x4 ]
add eax [ ebp + 0x8 ]
mov ecx eax
shr ecx 0x3
add [ edi ] ecx
and eax 0x7
mov [ edi + 0x4 ] eax
mov ebx [ ecx - 0x4 ]
mov [ ecx ] ebx
dec eax
sub ecx 0x4
mov ecx edi
mov [ esi + 0x54 ] edx
call sub_409514
mov ebx [ esi + 0x2ddc ]
and eax 0xfffe
cmp eax [ esi + ebx * 4 + 0x2d5c ]
jae r-xdata
mov edx [ esi + 0xe6dc ]
mov edx [ esi + 0x4b34 ]
lea ebx [ edx + eax ]
mov eax [ ebp + 0x8 ]
add edx ecx
add ecx eax
mov [ ebp - 0x8 ] edx
mov [ esi + 0x70 ] ecx
cmp [ esi + 0x54 ] eax
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
cmp ecx edx
jae r-xdata
inc [ ebp - 0x4 ]
mov eax [ esi + 0x98cc ]
test eax eax
jle r-xdata
mov ecx edi
call sub_409514
mov edx eax
mov eax [ ebp + 0x8 ]
push 0x14
pop ecx
sub ecx eax
shr edx cl
mov ecx [ edi + 0x4 ]
lea eax [ ecx + eax - 0x4 ]
mov ecx eax
shl edx 0x4
shr ecx 0x3
add [ edi ] ecx
add ebx edx
and eax 0x7
mov [ edi + 0x4 ] eax
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
cmp eax ecx
jae r-xdata
shl ebx 0x8
add ebx eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
inc [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0x4
jl r-xdata
mov edx [ esi + 0xe6dc ]
cmp ecx edx
jae r-xdata
push 0xf
pop edx
inc ebx
cmp ebx edx
jae r-xdata
push 0x10
pop ecx
sub ecx ebx
shr eax cl
movzx ecx [ eax + esi + 0x2de0 ]
add ecx [ edi + 0x4 ]
mov edx ecx
shr edx 0x3
add [ edi ] edx
and ecx 0x7
mov [ edi + 0x4 ] ecx
movzx eax [ esi + eax * 2 + 0x31e0 ]
jmp r-xdata
mov ecx [ esi + 0x4b34 ]
mov ebx [ esi + 0x70 ]
dec [ ebp + 0x8 ]
and edx eax
mov dl [ edx + ecx ]
mov [ ecx + ebx ] dl
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0xe6dc ]
inc eax
inc ecx
and ecx edx
cmp [ ebp + 0x8 ] 0x0
mov [ esi + 0x70 ] ecx
ja r-xdata
jmp r-xdata
cmp eax 0x8
jb r-xdata
cmp eax 0x8
jb r-xdata
mov edx [ esi + 0xe6dc ]
mov edx [ esi + 0x4b34 ]
lea ebx [ edx + eax ]
mov eax [ ebp - 0x4 ]
add edx ecx
add ecx eax
mov [ ebp - 0x8 ] edx
mov [ esi + 0x70 ] ecx
cmp [ ebp - 0xc ] eax
jae r-xdata
mov ecx edi
call sub_409514
mov edx [ esi + 0x1ef0 ]
and eax 0xfffe
cmp eax [ esi + edx * 4 + 0x1e70 ]
jae r-xdata
dec eax
mov [ esi + 0x98cc ] eax
mov ecx [ esi + 0xe6dc ]
mov ecx [ esi + 0x4b34 ]
lea ebx [ ecx + edx ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
add eax ecx
mov [ esi + 0x70 ] eax
cmp ecx 0x1
jbe r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ esi + 0x4b34 ]
mov ebx [ esi + 0x70 ]
dec [ ebp + 0x8 ]
and edx eax
mov dl [ edx + ecx ]
mov [ ecx + ebx ] dl
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0xe6dc ]
inc eax
inc ecx
and ecx edx
cmp [ ebp + 0x8 ] 0x0
mov [ esi + 0x70 ] ecx
ja r-xdata
jmp r-xdata
mov edx [ esi + 0x4b34 ]
add eax edx
add edx ecx
add ecx 0x2
mov [ esi + 0x70 ] ecx
mov cl [ eax ]
mov [ edx ] cl
mov al [ eax + 0x1 ]
mov [ edx + 0x1 ] al
jmp r-xdata
mov ecx [ edi + 0x4 ]
add ecx edx
mov ebx ecx
and ecx 0x7
mov [ edi + 0x4 ] ecx
shr ebx 0x3
add [ edi ] ebx
sub eax [ esi + edx * 4 + 0x2d58 ]
push 0x10
pop ecx
sub ecx edx
shr eax cl
add eax [ esi + edx * 4 + 0x2d9c ]
cmp eax [ esi + 0x2d58 ]
jb r-xdata
lea ecx [ esi + ebx * 4 + 0x2d5c ]
movzx ebx [ eax + rw-data ]
movzx eax [ eax + rw-data ]
inc ebx
inc ebx
mov [ ebp - 0xc ] ebx
mov [ ebp + 0x8 ] eax
test eax eax
jbe r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
jbe r-xdata
shr eax 0x3
mov [ ebp - 0xc ] eax
mov ecx eax
shr ecx 0x3
mov eax edx
mov ecx [ esi + 0x4b34 ]
mov ebx [ esi + 0x70 ]
dec [ ebp + 0x8 ]
and edx eax
mov dl [ edx + ecx ]
mov [ ecx + ebx ] dl
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0xe6dc ]
inc eax
inc ecx
and ecx edx
cmp [ ebp + 0x8 ] 0x0
mov [ esi + 0x70 ] ecx
ja r-xdata
jmp r-xdata
cmp eax 0x8
jb r-xdata
push 0x8
pop ecx
cmp eax ecx
jb r-xdata
inc edx
mov [ ebp + 0x8 ] 0xf
cmp edx 0xf
jae r-xdata
push 0x10
pop ecx
sub ecx edx
shr eax cl
movzx ecx [ eax + esi + 0x1ef4 ]
add ecx [ edi + 0x4 ]
mov edx ecx
shr edx 0x3
add [ edi ] edx
and ecx 0x7
mov [ edi + 0x4 ] ecx
movzx eax [ esi + eax * 2 + 0x22f4 ]
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov eax [ esi + 0x4b34 ]
mov ebx [ esi + 0x70 ]
dec [ ebp + 0x8 ]
and ecx edx
mov cl [ ecx + eax ]
mov [ eax + ebx ] cl
mov eax [ esi + 0x70 ]
mov ecx [ esi + 0xe6dc ]
inc edx
inc eax
and eax ecx
cmp [ ebp + 0x8 ] 0x0
mov [ esi + 0x70 ] eax
ja r-xdata
jmp r-xdata
cmp ecx 0x8
jb r-xdata
cmp ecx 0x8
jb r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ esi + 0x70 ]
add eax 0x20
lea edx [ ebx + 0x2 ]
mov [ ebp + 0x8 ] eax
mov eax ecx
sub eax edx
mov [ ebp - 0xc ] edx
mov edx [ esi + 0xe6d8 ]
add edx 0xffffefff
cmp eax edx
jae r-xdata
movzx eax [ esi + eax * 2 + 0x39e0 ]
xor eax eax
mov edx ebx
inc ebx
add ecx 0x4
cmp ebx 0xf
jb r-xdata
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0xe6d8 ]
mov eax ecx
sub eax [ ebp - 0x8 ]
add edx 0xffffefff
mov [ esi + 0x68 ] ebx
mov [ ebp + 0x8 ] ebx
cmp eax edx
jae r-xdata
mov ecx edi
call sub_409514
push 0x10
pop ecx
sub ecx [ ebp + 0x8 ]
shr eax cl
add ebx eax
mov eax [ edi + 0x4 ]
add eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] ebx
mov ecx eax
shr ecx 0x3
add [ edi ] ecx
and eax 0x7
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x8 ]
jmp r-xdata
push 0x8
push ebx
push [ ebp - 0x8 ]
call sub_41be10
add [ ebp - 0x8 ] 0x8
sub [ ebp + 0x8 ] 0x8
add esp 0xc
add ebx 0x8
dec [ ebp - 0xc ]
jne r-xdata
jmp r-xdata
mov dl [ ebx ]
sub [ ebp + 0x8 ] 0x8
mov [ eax ] dl
mov dl [ ebx + 0x1 ]
mov [ eax + 0x1 ] dl
mov dl [ ebx + 0x2 ]
mov [ eax + 0x2 ] dl
mov dl [ ebx + 0x3 ]
mov [ eax + 0x3 ] dl
mov dl [ ebx + 0x4 ]
mov [ eax + 0x4 ] dl
mov dl [ ebx + 0x5 ]
mov [ eax + 0x5 ] dl
mov dl [ ebx + 0x6 ]
mov [ eax + 0x6 ] dl
mov dl [ ebx + 0x7 ]
mov [ eax + 0x7 ] dl
add ebx 0x8
add eax 0x8
dec ecx
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
shr eax 0x3
mov [ ebp - 0xc ] eax
shr eax 0x3
mov [ ebp - 0xc ] eax
mov eax edx
mov ecx [ edi + 0x4 ]
add ecx [ ebp + 0x8 ]
push 0x10
mov edx ecx
shr edx 0x3
add [ edi ] edx
mov edx [ ebp + 0x8 ]
and ecx 0x7
mov [ edi + 0x4 ] ecx
sub eax [ esi + edx * 4 + 0x1e6c ]
pop ecx
sub ecx edx
shr eax cl
add eax [ esi + edx * 4 + 0x1eb0 ]
cmp eax [ esi + 0x1e6c ]
jb r-xdata
lea ecx [ esi + edx * 4 + 0x1e70 ]
cmp eax 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
jbe r-xdata
mov eax [ ebp + 0x8 ]
shr eax 0x3
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
shr ecx 0x3
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
cmp ecx edx
jae r-xdata
cmp eax [ ecx ]
jb r-xdata
jmp r-xdata
test ebx ebx
jbe r-xdata
cmp ecx edx
jae r-xdata
mov dl [ ebx ]
mov [ eax ] dl
cmp ecx 0x1
jbe r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x8
push ebx
push [ ebp - 0x8 ]
call sub_41be10
add [ ebp - 0x8 ] 0x8
sub [ ebp + 0x8 ] 0x8
add esp 0xc
add ebx 0x8
dec [ ebp - 0xc ]
jne r-xdata
mov dl [ ebx ]
sub [ ebp + 0x8 ] ecx
mov [ eax ] dl
mov dl [ ebx + 0x1 ]
mov [ eax + 0x1 ] dl
mov dl [ ebx + 0x2 ]
mov [ eax + 0x2 ] dl
mov dl [ ebx + 0x3 ]
mov [ eax + 0x3 ] dl
mov dl [ ebx + 0x4 ]
mov [ eax + 0x4 ] dl
mov dl [ ebx + 0x5 ]
mov [ eax + 0x5 ] dl
mov dl [ ebx + 0x6 ]
mov [ eax + 0x6 ] dl
mov dl [ ebx + 0x7 ]
mov [ eax + 0x7 ] dl
add ebx ecx
add eax ecx
dec [ ebp - 0xc ]
jne r-xdata
movzx eax [ esi + eax * 2 + 0x2af4 ]
xor eax eax
mov [ ebp + 0x8 ] edx
inc edx
add ecx 0x4
cmp edx 0xf
jb r-xdata
add ebx eax
mov [ esi + 0x98c8 ] eax
jmp r-xdata
mov [ esi + 0x98cc ] 0xf
jmp r-xdata
mov eax [ ebp - 0x4 ]
push 0x8
push ebx
push [ ebp - 0x4 ]
call sub_41be10
add [ ebp - 0x4 ] 0x8
sub [ ebp + 0x8 ] 0x8
add esp 0xc
add ebx 0x8
dec [ ebp - 0xc ]
jne r-xdata
jmp r-xdata
mov dl [ ebx ]
sub [ ebp + 0x8 ] 0x8
mov [ eax ] dl
mov dl [ ebx + 0x1 ]
mov [ eax + 0x1 ] dl
mov dl [ ebx + 0x2 ]
mov [ eax + 0x2 ] dl
mov dl [ ebx + 0x3 ]
mov [ eax + 0x3 ] dl
mov dl [ ebx + 0x4 ]
mov [ eax + 0x4 ] dl
mov dl [ ebx + 0x5 ]
mov [ eax + 0x5 ] dl
mov dl [ ebx + 0x6 ]
mov [ eax + 0x6 ] dl
mov dl [ ebx + 0x7 ]
mov [ eax + 0x7 ] dl
add ebx 0x8
add eax 0x8
dec ecx
jne r-xdata
jmp r-xdata
mov edx [ esi + 0xe6dc ]
mov edx [ esi + 0x4b34 ]
lea ebx [ edx + eax ]
mov eax [ ebp + 0x8 ]
add edx ecx
add ecx eax
mov [ ebp - 0x4 ] edx
mov [ esi + 0x70 ] ecx
cmp [ ebp - 0xc ] eax
jae r-xdata
mov edx [ esi + 0xe6dc ]
mov edx [ esi + 0x4b34 ]
lea ebx [ edx + eax ]
mov eax [ ebp - 0xc ]
add edx ecx
add ecx eax
mov [ ebp - 0x4 ] edx
mov [ esi + 0x70 ] ecx
cmp [ ebp - 0x8 ] eax
jae r-xdata
mov dl [ ebx + 0x1 ]
mov [ eax + 0x1 ] dl
cmp ecx 0x2
jbe r-xdata
cmp eax [ ecx ]
jb r-xdata
jmp r-xdata
add ebx [ esi + 0x98c8 ]
jmp r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ esi + 0x4b34 ]
mov ebx [ esi + 0x70 ]
dec [ ebp + 0x8 ]
and edx eax
mov dl [ edx + ecx ]
mov [ ecx + ebx ] dl
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0xe6dc ]
inc eax
inc ecx
and ecx edx
cmp [ ebp + 0x8 ] 0x0
mov [ esi + 0x70 ] ecx
ja r-xdata
jmp r-xdata
cmp eax 0x8
jb r-xdata
cmp eax 0x8
jb r-xdata
mov ecx [ esi + 0x4b34 ]
mov ebx [ esi + 0x70 ]
dec [ ebp + 0x8 ]
and edx eax
mov dl [ edx + ecx ]
mov [ ecx + ebx ] dl
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0xe6dc ]
inc eax
inc ecx
and ecx edx
cmp [ ebp + 0x8 ] 0x0
mov [ esi + 0x70 ] ecx
ja r-xdata
jmp r-xdata
cmp eax 0x8
jb r-xdata
cmp eax 0x8
jb r-xdata
mov dl [ ebx + 0x2 ]
mov [ eax + 0x2 ] dl
cmp ecx 0x3
jbe r-xdata
mov eax [ ebp + 0x8 ]
shr eax 0x3
mov [ ebp - 0xc ] eax
mov ecx eax
shr ecx 0x3
mov eax edx
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0xc ]
shr eax 0x3
mov [ ebp - 0xc ] eax
shr eax 0x3
mov ecx eax
mov eax edx
mov dl [ ebx + 0x3 ]
mov [ eax + 0x3 ] dl
cmp ecx 0x4
jbe r-xdata
push 0x8
push ebx
push [ ebp - 0x4 ]
call sub_41be10
add [ ebp - 0x4 ] 0x8
sub [ ebp + 0x8 ] 0x8
add esp 0xc
add ebx 0x8
dec [ ebp - 0xc ]
jne r-xdata
mov dl [ ebx ]
sub [ ebp + 0x8 ] 0x8
mov [ eax ] dl
mov dl [ ebx + 0x1 ]
mov [ eax + 0x1 ] dl
mov dl [ ebx + 0x2 ]
mov [ eax + 0x2 ] dl
mov dl [ ebx + 0x3 ]
mov [ eax + 0x3 ] dl
mov dl [ ebx + 0x4 ]
mov [ eax + 0x4 ] dl
mov dl [ ebx + 0x5 ]
mov [ eax + 0x5 ] dl
mov dl [ ebx + 0x6 ]
mov [ eax + 0x6 ] dl
mov dl [ ebx + 0x7 ]
mov [ eax + 0x7 ] dl
add ebx 0x8
add eax 0x8
dec ecx
jne r-xdata
cmp [ ebp + 0x8 ] 0x1
mov al [ ebx ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] al
jbe r-xdata
push 0x8
push ebx
push [ ebp - 0x4 ]
call sub_41be10
add [ ebp - 0x4 ] 0x8
sub [ ebp + 0x8 ] 0x8
add esp 0xc
add ebx 0x8
dec [ ebp - 0xc ]
jne r-xdata
mov dl [ ebx ]
sub [ ebp + 0x8 ] 0x8
mov [ eax ] dl
mov dl [ ebx + 0x1 ]
mov [ eax + 0x1 ] dl
mov dl [ ebx + 0x2 ]
mov [ eax + 0x2 ] dl
mov dl [ ebx + 0x3 ]
mov [ eax + 0x3 ] dl
mov dl [ ebx + 0x4 ]
mov [ eax + 0x4 ] dl
mov dl [ ebx + 0x5 ]
mov [ eax + 0x5 ] dl
mov dl [ ebx + 0x6 ]
mov [ eax + 0x6 ] dl
mov dl [ ebx + 0x7 ]
mov [ eax + 0x7 ] dl
add ebx 0x8
add eax 0x8
dec ecx
jne r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov dl [ ebx + 0x4 ]
mov [ eax + 0x4 ] dl
cmp ecx 0x5
jbe r-xdata
cmp [ ebp + 0x8 ] 0x2
mov al [ ebx + 0x1 ]
mov [ ecx + 0x1 ] al
jbe r-xdata
mov dl [ ebx + 0x5 ]
mov [ eax + 0x5 ] dl
cmp ecx 0x6
jbe r-xdata
cmp [ ebp + 0x8 ] 0x3
mov al [ ebx + 0x2 ]
mov [ ecx + 0x2 ] al
jbe r-xdata
mov cl [ ebx + 0x6 ]
mov [ eax + 0x6 ] cl
jmp r-xdata
cmp [ ebp + 0x8 ] 0x4
mov al [ ebx + 0x3 ]
mov [ ecx + 0x3 ] al
jbe r-xdata
cmp [ ebp + 0x8 ] 0x5
mov al [ ebx + 0x4 ]
mov [ ecx + 0x4 ] al
jbe r-xdata
cmp [ ebp + 0x8 ] 0x6
mov al [ ebx + 0x5 ]
mov [ ecx + 0x5 ] al
jbe r-xdata
mov al [ ebx + 0x6 ]
mov [ ecx + 0x6 ] al
jmp r-xdata
sub_41867d
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ecx + 0x1c ] 0x1
jbe r-xdata
cmp [ ebp + 0x8 ] 0x1d
jne r-xdata
push [ ebp + 0xc ]
call sub_4167c9
cmp [ ecx + 0x4c38 ] 0x0
jne r-xdata
pop ebp
retn 0x8
push [ ebp + 0xc ]
call sub_4178f6
jmp r-xdata
push [ ebp + 0xc ]
call sub_417324
jmp r-xdata
sub_4186bb
push ebp
mov ebp esp
mov eax 0x2014
call sub_41a670
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x6524 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x6544 ]
push edi
mov [ ebp - 0xc ] eax
cmp eax 0x3
jne r-xdata
lea ecx [ esi + 0x65e8 ]
mov [ ebp - 0x4 ] ecx
mov edi ecx
cmp eax 0x2
jne r-xdata
lea edi [ esi + 0x8928 ]
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov [ ebp + 0xb ] 0x0
cmp [ edi + 0x1089 ] 0x0
mov [ ebp + 0xb ] 0x1
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
test ebx ebx
je r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov ecx esi
call sub_4087ca
lea eax [ esi + 0x1e ]
push eax
lea eax [ ebp - 0x1014 ]
push eax
call sub_41a377
cmp [ esi + 0xb05a ] 0x0
pop ecx
sete al
movzx eax al
pop ecx
push eax
push 0x800
lea eax [ ebp - 0x1014 ]
push eax
call sub_40a3ce
mov eax [ ebp - 0x8 ]
movzx edi [ eax + 0x5195 ]
neg edi
sbb edi edi
mov [ ebp + 0xf ] 0x0
and edi 0x4
jmp r-xdata
mov ecx esi
lea edi [ ebx + 0x21f8 ]
call sub_408b8b
add [ edi ] eax
adc [ edi + 0x4 ] edx
cmp [ esi + 0xb050 ] 0x3
je r-xdata
mov eax [ esi ]
push edi
lea ecx [ ebp - 0x1014 ]
push ecx
mov ecx esi
call [ eax + 0x4 ]
test al al
je r-xdata
movzx ecx [ edi + 0x10ba ]
neg ecx
sbb ecx ecx
lea eax [ edi + 0x10bb ]
and ecx eax
push ecx
lea eax [ edi + 0x1060 ]
push eax
lea ecx [ ebx + 0x2208 ]
call sub_409871
test al al
jne r-xdata
cmp [ edi + 0x19 ] 0x14
jb r-xdata
test ebx ebx
je r-xdata
cmp [ ebp + 0x14 ] 0x54
lea eax [ esi + 0x1e ]
push eax
setne al
movzx eax al
push eax
call sub_41127b
push 0x1
mov ecx esi
call sub_401a16
cmp [ ebp + 0xb ] 0x0
mov ecx esi
je r-xdata
add edi 0x20
push edi
lea eax [ esi + 0x1e ]
push eax
push 0x5
call sub_4062fd
cmp [ edi + 0x1064 ] 0xffffffff
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
and [ ebx + 0x2200 ] 0x0
and [ ebx + 0x2204 ] 0x0
call sub_40365b
push [ ebp - 0xc ]
call sub_4036ca
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x517c ] 0x0
jne r-xdata
lea eax [ esi + 0x1e ]
push eax
lea eax [ ebp - 0x2014 ]
push eax
call sub_41a377
pop ecx
pop ecx
push 0x1
push 0x800
lea eax [ ebp - 0x2014 ]
push eax
call sub_40a3ce
mov eax [ esi ]
push edi
lea ecx [ ebp - 0x2014 ]
push ecx
mov ecx esi
mov [ ebp + 0xf ] 0x1
call [ eax + 0x4 ]
test al al
jne r-xdata
test ebx ebx
je r-xdata
mov ecx esi
call sub_401a8b
mov ecx [ esi + 0xb048 ]
sub ecx [ esi + 0x7630 ]
mov edx [ esi + 0xb04c ]
sbb edx [ esi + 0x7634 ]
mov eax [ esi ]
push 0x0
push edx
push ecx
mov ecx esi
call [ eax + 0xc ]
cmp [ esi + 0x6544 ] 0x2
jne r-xdata
lea eax [ ebp - 0x1014 ]
push eax
push 0x44
call sub_4012d0
mov edx [ esi ]
push edi
lea eax [ esi + 0x1e ]
push eax
mov ecx esi
call [ edx + 0x4 ]
mov eax [ esi ]
push 0x0
push [ ebp - 0x10 ]
mov ecx esi
push [ ebp - 0x14 ]
call [ eax + 0xc ]
xor al al
jmp r-xdata
push 0x800
lea eax [ ebp - 0x1014 ]
push eax
call j_sub_40e0c0
test al al
je r-xdata
lea eax [ ebp - 0x2014 ]
push eax
lea eax [ ebp - 0x1014 ]
push eax
call sub_41a377
pop ecx
pop ecx
jmp r-xdata
mov al 0x1
cmp [ ebp - 0xc ] 0x5
mov edi [ ebp - 0x4 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
mov al [ edi + 0x1089 ]
mov [ ebx + 0x21c7 ] al
mov eax [ edi + 0x1048 ]
mov [ ebx + 0x20 ] eax
mov eax [ edi + 0x104c ]
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x21c7 ] 0x0
jmp r-xdata
mov ecx esi
call sub_408b8b
and [ ebx + 0x21e8 ] 0x0
and [ ebx + 0x21ec ] 0x0
mov [ ebx + 0x21d0 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x21d4 ] edx
push [ eax + 0x7298 ]
lea ecx [ ebx + 0x2208 ]
push [ edi + 0x1060 ]
call sub_40960d
sub_418994
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
test eax eax
je r-xdata
pop esi
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x18 ] 0x0
sub_4189df
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x10 ]
call [ IsWindow@IAT ]
test eax eax
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
retn 0x8
sub_418a08
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi - 0x4 ]
xor ebx ebx
push edi
test eax eax
je r-xdata
xor eax eax
lea eax [ esi + 0x4 ]
jmp r-xdata
mov edi [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x10 ]
call [ GetClientRect@IAT ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0xc ] ecx
call [ CopyRect@IAT ]
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x14
mov [ eax + 0x4 ] ebx
mov ecx [ esi + 0x10 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
mov eax [ edi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x18
sub_418ad8
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
mov edi ecx
call [ CLSIDFromString@IAT ]
lea esi [ edi + 0x18 ]
push esi
push r--data
push 0x5
push 0x0
lea eax [ ebp - 0x14 ]
push eax
call [ CoCreateInstance@IAT ]
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
leave
retn 0x4
mov eax [ esi ]
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov esi [ esi ]
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
push r--data
push esi
call [ eax ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x20 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_418b5e
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
pop esi
leave
retn
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x18 ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_418bde
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x18 ] edi
je r-xdata
pop edi
pop esi
leave
retn 0x4
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp [ ebp + 0x8 ] edi
je r-xdata
push edi
push [ esi + 0x14 ]
push edi
push esi
push edi
push 0xfffffffd
push eax
call [ ecx + 0x2c ]
push ebx
lea ebx [ esi + 0x1c ]
push ebx
push [ esi + 0x14 ]
push edi
push esi
push edi
push 0xfffffffb
push eax
call [ ecx + 0x2c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ebx
push [ esi + 0x14 ]
push edi
push esi
push edi
push 0xffffffff
push eax
call [ ecx + 0x2c ]
pop ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_418c4e
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x0
je r-xdata
pop esi
pop ebp
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
lea edx [ esi + 0x1c ]
push edx
push [ esi + 0x14 ]
push 0x0
push esi
push 0x0
push 0xfffffffc
push eax
call [ ecx + 0x2c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_418c9a
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
mov eax [ esi + 0x18 ]
pop esi
retn
xor eax eax
pop esi
retn
sub_418cb5
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] cl
mov [ eax + 0x24 ] cl
mov [ eax + 0x25 ] cl
mov [ eax + 0x28 ] ecx
retn
sub_418cda
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x10 ] 0x0
pop esi
retn
call sub_418b5e
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0xc ] 0x0
sub_418d20
mov eax [ esp + 0x4 ]
jmp r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx 0x3c
jne r-xdata
xor al al
inc eax
inc eax
cmp [ eax + 0x2 ] 0x2f
jne r-xdata
push 0x2
pop ecx
mov al 0x1
jmp r-xdata
inc ecx
cmp ecx 0x14
jb r-xdata
retn 0x4
cmp [ eax + ecx * 2 ] 0x3e
je r-xdata
sub_418d56
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_41a32f
imul eax eax 0xc
add eax 0x200
push eax
call sub_41cafe
mov edi eax
pop ecx
pop ecx
mov [ ebp - 0x8 ] edi
test edi edi
jne r-xdata
push ebx
push r--data
push edi
call sub_41a377
push edi
call sub_41a32f
mov ebx eax
mov eax esi
add esp 0xc
cmp [ eax ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
push [ ebp + 0x8 ]
xor eax eax
mov [ edi + ebx * 2 ] ax
call sub_41a086
pop ecx
mov eax edi
pop ebx
push 0x4
push r--data
push esi
call sub_411a07
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn 0x4
cmp esi [ ebp + 0x8 ]
jbe r-xdata
lea edi [ esi + 0x4 ]
cmp [ edi ] 0xd
jne r-xdata
mov ax [ esi ]
mov [ edi + ebx * 2 ] ax
inc ebx
cmp [ esi ] 0x20
jne r-xdata
mov edi [ ebp - 0x8 ]
inc esi
inc esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
lea eax [ eax + ebx * 2 ]
mov [ ebp - 0x4 ] eax
cmp [ esi - 0x2 ] 0x20
jne r-xdata
inc esi
inc esi
cmp [ esi ] 0x0
jne r-xdata
push r--data
push [ ebp - 0x4 ]
call sub_41a377
add [ ebp - 0x4 ] 0x8
mov esi edi
lea edi [ esi + 0x4 ]
pop ecx
add ebx 0x4
cmp [ edi ] 0xd
pop ecx
je r-xdata
lea eax [ edi + ebx * 2 ]
push r--data
push eax
call sub_41a377
pop ecx
pop ecx
add ebx 0x6
jmp r-xdata
cmp [ esi + 0x6 ] 0xa
jne r-xdata
sub_418e4e
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
mov esi [ GetTickCount@IAT ]
push edi
mov [ ebp - 0x8 ] ecx
call esi
mov [ ebp - 0x4 ] eax
call esi
sub eax [ ebp - 0x4 ]
xor ebx ebx
mov edi 0x2710
jmp r-xdata
cmp eax edi
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
lea edx [ ebp - 0xc ]
push edx
push eax
call [ ecx + 0xe0 ]
cmp [ ebp - 0xc ] 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ VariantInit@IAT ]
push 0x3
pop eax
push ebx
lea edx [ ebp - 0x1c ]
push edx
mov [ ebp - 0x1c ] ax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
push 0x2
push 0x3f
mov [ ebp - 0x14 ] 0x96
mov ecx [ eax ]
push eax
call [ ecx + 0xd8 ]
pop edi
pop esi
pop ebx
leave
retn
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x38 ]
push eax
call [ PeekMessageW@IAT ]
test eax eax
je r-xdata
call esi
sub eax [ ebp - 0x4 ]
lea eax [ ebp - 0x38 ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x38 ]
push eax
call [ DispatchMessageW@IAT ]
push ebx
push ebx
push ebx
lea eax [ ebp - 0x38 ]
push eax
call [ GetMessageW@IAT ]
sub_418f2f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
push r--data
push edi
call sub_418aa2
test eax eax
jne r-xdata
mov eax 0x80004003
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
push r--data
push edi
call sub_418aa2
test eax eax
je r-xdata
pop esi
pop ebp
retn 0xc
pop edi
push r--data
push edi
call sub_418aa2
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push r--data
push edi
call sub_418aa2
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor ecx ecx
lea ecx [ eax + 0x4 ]
jmp r-xdata
push r--data
push edi
call sub_418aa2
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea ecx [ eax + 0x8 ]
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
mov [ esi ] ecx
jmp r-xdata
and [ esi ] 0x0
mov eax 0x80004002
lea ecx [ eax + 0xc ]
jmp r-xdata
sub_418fda
push esi
mov esi [ esp + 0x8 ]
dec [ esi + 0x10 ]
mov eax [ esi + 0x10 ]
jne r-xdata
pop esi
retn 0x4
mov ecx esi
call sub_418994
push esi
call sub_41a07b
pop ecx
xor eax eax
sub_418ffb
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov edi ecx
call sub_41a32f
lea eax [ eax + eax + 0x2 ]
push eax
call sub_41cafe
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
pop edi
pop esi
leave
retn 0x4
push esi
mov ecx edi
call sub_418d20
mov edi [ ebp - 0x4 ]
mov [ ebp + 0xb ] al
movzx eax [ esi ]
test ax ax
je r-xdata
mov eax [ ebp - 0x4 ]
push ebx
jmp r-xdata
test ax ax
jne r-xdata
cmp ax 0x3c
je r-xdata
push 0x4
push r--data
push esi
call sub_411a07
mov ebx eax
neg ebx
sbb bl bl
inc bl
jne r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
push 0xd
pop eax
mov [ edi ] ax
push 0x2
pop eax
add edi eax
push 0xa
pop ecx
mov [ edi ] cx
add edi eax
test bl bl
je r-xdata
push 0x4
push r--data
push esi
call sub_411a07
test eax eax
jne r-xdata
xor bl bl
cmp [ ebp + 0xb ] bl
je r-xdata
cmp ax 0xd
je r-xdata
push 0x7
push r--data
xor eax eax
push esi
mov [ edi ] ax
call sub_411a07
test eax eax
jne r-xdata
push 0xd
pop ecx
mov [ edi ] cx
push 0xa
add edi eax
pop ecx
mov [ edi ] cx
add edi eax
movzx eax [ esi ]
test ax ax
je r-xdata
cmp ax 0x26
jne r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
cmp ax 0xa
jne r-xdata
movzx eax [ esi ]
test ax ax
jne r-xdata
cmp [ esi ] ax
je r-xdata
cmp ax 0x20
jne r-xdata
xor edx edx
push 0x20
pop eax
jmp r-xdata
cmp [ edi - 0x2 ] 0x20
je r-xdata
cmp ax 0x3e
je r-xdata
cmp [ esi ] 0x3e
jne r-xdata
pop ebx
push 0x8
push r--data
push esi
call sub_411a07
inc esi
inc esi
test eax eax
je r-xdata
mov [ edi ] ax
inc edi
inc edi
cmp edi [ ebp - 0x4 ]
je r-xdata
test bl bl
jne r-xdata
cmp cx 0x3b
jne r-xdata
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
movzx eax [ esi ]
test ax ax
jne r-xdata
add esi 0xe
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
cmp [ edi - 0x2 ] ax
je r-xdata
movzx eax [ esi ]
inc edx
inc edx
cmp edx 0x28
jb r-xdata
lea esi [ eax + 0x2 ]
mov bl 0x1
jmp r-xdata
lea eax [ edx + esi ]
movzx ecx [ eax ]
test cx cx
je r-xdata
sub_4191b9
push ebp
mov ebp esp
sub esp 0x28
push ebx
mov ebx [ GetTickCount@IAT ]
push esi
xor esi esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] esi
call ebx
mov [ ebp - 0xc ] eax
call ebx
sub eax [ ebp - 0xc ]
cmp eax 0x7d0
ja r-xdata
cmp [ ebp - 0x4 ] esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push eax
call [ ecx + 0x48 ]
cmp eax esi
mov [ ebp + 0x8 ] eax
jl r-xdata
push esi
push esi
push esi
push esi
lea eax [ ebp - 0x28 ]
push eax
call [ PeekMessageW@IAT ]
test eax eax
je r-xdata
cmp [ edi + 0x8 ] esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push eax
call [ ecx + 0x48 ]
test eax eax
jl r-xdata
push esi
push esi
push esi
lea eax [ ebp - 0x28 ]
push eax
call [ GetMessageW@IAT ]
lea eax [ ebp - 0x28 ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x28 ]
push eax
call [ DispatchMessageW@IAT ]
jmp r-xdata
xor eax eax
cmp [ ebp + 0x8 ] esi
pop edi
pop esi
setge al
pop ebx
leave
retn 0x8
cmp [ edi + 0x18 ] esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
jl r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
cmp eax esi
mov [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ edi + 0x14 ]
cmp eax esi
je r-xdata
cmp [ ebp - 0x4 ] esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x20 ]
cmp eax esi
mov [ ebp + 0x8 ] eax
jl r-xdata
push eax
mov ecx edi
call sub_418ffb
mov ebx eax
cmp ebx esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov [ ebp + 0x8 ] eax
push 0x204
push esi
push esi
push esi
push esi
push 0x1
push [ edi + 0x4 ]
call [ SetWindowPos@IAT ]
push 0x5
push [ edi + 0x8 ]
call [ ShowWindow@IAT ]
push ebx
push [ edi + 0x8 ]
call [ SetWindowTextW@IAT ]
push ebx
call sub_41a086
pop ecx
sub_4192f7
push ebp
mov ebp esp
sub esp 0xc
cmp [ ecx + 0x10 ] 0x0
mov [ ebp - 0xc ] ecx
je r-xdata
leave
retn 0x4
and [ ebp - 0x8 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_418d20
push esi
mov [ ebp + 0xb ] al
call sub_41a32f
lea eax [ eax + eax + 0x200 ]
push eax
call sub_41cafe
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
pop edi
pop esi
push ebx
mov ebx r--data
push ebx
push edi
call sub_41a377
push r--data
push edi
call sub_41a349
push r--data
push edi
call sub_41a349
add esp 0x18
cmp [ esi ] 0x20
mov [ ebp - 0x4 ] esi
jne r-xdata
push 0x6
push ebx
push [ ebp - 0x4 ]
call sub_411a07
mov ebx eax
neg ebx
sbb bl bl
inc bl
je r-xdata
add [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x20
je r-xdata
push esi
push edi
call sub_41a349
pop ecx
pop ecx
test bl bl
jne r-xdata
mov esi [ ebp - 0x4 ]
add esi 0xc
cmp [ ebp + 0xb ] 0x0
jne r-xdata
push r--data
push edi
call sub_41a349
pop ecx
pop ecx
push edi
call sub_41a32f
mov esi eax
imul esi esi 0x6
pop ecx
add esi 0x9
push esi
push 0x40
call [ GlobalAlloc@IAT ]
mov ebx eax
xor eax eax
cmp ebx eax
je r-xdata
mov ecx [ ebp - 0xc ]
push edi
call sub_418d56
mov edi eax
push edi
call sub_41a086
pop ecx
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push ebx
call [ CreateStreamOnHGlobal@IAT ]
pop ebx
test eax eax
jl r-xdata
push eax
push eax
add esi 0xfffffffd
push esi
lea ecx [ ebx + 0x3 ]
push ecx
push 0xffffffff
push edi
push eax
push 0xfde9
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
push [ ecx + 0x10 ]
call sub_4191b9
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ ebx ] 0x0
mov [ ebx ] 0xef
mov [ ebx + 0x1 ] 0xbb
mov [ ebx + 0x2 ] 0xbf
jmp r-xdata
sub_419440
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x0
jne r-xdata
cmp [ esi + 0x25 ] 0x0
mov [ esi + 0x24 ] 0x1
je r-xdata
cmp [ esi + 0x24 ] 0x0
jne r-xdata
pop esi
retn
mov ecx [ esi + 0xc ]
push 0x1
call sub_418c4e
push [ esi + 0x14 ]
call sub_4192f7
sub_41946d
push esi
mov esi ecx
xor eax eax
push 0x10
push eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x1c ]
push eax
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0x10 ] 0x1
call sub_41a3a0
add esp 0xc
mov eax esi
pop esi
retn
sub_4194ad
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
push 0x2c
mov [ esi + 0x4 ] edi
call sub_41a41a
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_41946d
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
push ebp
mov [ eax + 0x14 ] edi
mov ecx [ esi + 0xc ]
push r--data
call sub_418ad8
mov ecx [ esi + 0xc ]
push 0x1
call sub_418bde
mov ecx [ esi + 0xc ]
push 0x1
call sub_418c4e
mov ecx [ esi + 0xc ]
call sub_418c9a
mov edi eax
cmp edi ebx
je r-xdata
mov [ esi + 0xc ] eax
cmp eax ebx
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax ebx
je r-xdata
mov eax [ edi ]
lea ebp [ esi + 0x10 ]
push ebp
push r--data
push edi
call [ eax ]
mov [ esp + 0x14 ] eax
mov eax [ edi ]
push edi
call [ eax + 0x8 ]
cmp [ esp + 0x14 ] ebx
jge r-xdata
pop ebp
mov ecx [ esi + 0x18 ]
push ebx
push ebx
push ebx
mov [ esi + 0x24 ] bl
push ebx
cmp ecx ebx
je r-xdata
mov [ ebp ] ebx
jmp r-xdata
mov ecx [ eax ]
push r--data
push eax
call [ ecx + 0x2c ]
mov ecx esi
call sub_419440
mov edx [ eax ]
push ecx
push eax
call [ edx + 0x2c ]
jmp r-xdata
sub_41956a
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
dec eax
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
je r-xdata
push 0xffffffeb
push esi
call [ GetWindowLongW@IAT ]
push esi
mov ecx eax
call sub_4194ad
sub eax 0x80
jne r-xdata
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ DefWindowProcW@IAT ]
pop edi
pop esi
pop ebp
retn 0x10
push [ edi ]
push 0xffffffeb
push esi
call [ SetWindowLongW@IAT ]
jmp r-xdata
sub_4195b4
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
push 0x7f00
push edi
mov ebx ecx
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x828
mov [ ebp - 0x28 ] sub_41956a
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] edi
call [ LoadCursorW@IAT ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] r--data
mov [ ebp - 0x4 ] edi
call [ RegisterClassExW@IAT ]
pop edi
mov [ ebx ] esi
pop esi
pop ebx
leave
retn 0x4
sub_41961b
push ebp
mov ebp esp
mov al [ ebp + 0x18 ]
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
push 0x0
push edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x25 ] al
call [ ShowWindow@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call sub_4195b4
mov eax [ ebp + 0x10 ]
mov [ esi + 0x14 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x18 ] eax
lea eax [ ebp - 0x10 ]
push eax
push edi
call [ GetWindowRect@IAT ]
mov ebx [ GetParent@IAT ]
push 0x2
lea eax [ ebp - 0x10 ]
push eax
push edi
call ebx
push eax
push 0x0
call [ MapWindowPoints@IAT ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov edi [ ebp - 0x8 ]
push esi
push [ esi ]
sub edi eax
push 0x0
push [ ebp + 0xc ]
lea ecx [ eax + 0x1 ]
dec edi
mov [ ebp + 0x18 ] ecx
dec edi
call ebx
push eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
push eax
push edi
push [ ebp - 0xc ]
xor edi edi
push [ ebp + 0x18 ]
push 0x40000000
push edi
push r--data
push edi
call [ CreateWindowExW@IAT ]
mov [ esi + 0x4 ] eax
cmp [ esi + 0x10 ] edi
jne r-xdata
push eax
call [ DestroyWindow@IAT ]
cmp eax edi
je r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
cmp [ esi + 0x20 ] 0x64
jbe r-xdata
push 0x5
push eax
call [ ShowWindow@IAT ]
push [ esi + 0x4 ]
call [ UpdateWindow@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x14
cmp [ esi + 0x18 ] edi
jne r-xdata
mov ecx esi
call sub_418e4e
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
push eax
mov ecx esi
call sub_418ffb
mov esi eax
cmp esi edi
je r-xdata
push 0x5
push [ ebp + 0xc ]
call [ ShowWindow@IAT ]
push esi
push [ ebp + 0xc ]
call [ SetWindowTextW@IAT ]
push esi
call sub_41a086
pop ecx
jmp r-xdata
sub_41972e
push ebp
mov ebp esp
push ecx
push ecx
push ebx
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x1
xor ebx ebx
push ebx
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
mov al bl
pop ebx
leave
retn 0x1c
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
cmp [ ebp + 0x8 ] bl
je r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x50 ]
cmp [ ebp + 0x18 ] ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push 0x2
push [ ebp + 0x10 ]
push eax
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
push [ ebp + 0x1c ]
push r--data
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
je r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0x20 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x2c ]
push eax
call [ ecx + 0x44 ]
cmp [ ebp + 0x20 ] ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push 0x1
push [ ebp + 0x10 ]
push eax
call [ ecx + 0x18 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0x14 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov bl 0x1
sub_419830
push ebp
mov ebp esp
sub esp 0xa0
push edi
mov edi [ ebp + 0x8 ]
push 0x50
lea eax [ ebp - 0xa0 ]
push eax
push edi
call [ GetClassNameW@IAT ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push esi
mov esi r--data
push esi
lea eax [ ebp - 0xa0 ]
push eax
call sub_4119e6
test eax eax
je r-xdata
pop edi
leave
retn 0x4
push 0x10
push edi
call [ SHAutoComplete@IAT ]
pop esi
push 0x0
push esi
push 0x0
push edi
call [ FindWindowExW@IAT ]
mov edi eax
sub_419889
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
xor edi edi
push edi
call [ GetDC@IAT ]
mov esi [ CreateCompatibleDC@IAT ]
push eax
mov [ ebp - 0x8 ] eax
call esi
push [ ebp - 0x8 ]
mov ebx eax
call esi
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push 0x18
push [ ebp + 0x8 ]
call [ GetObjectW@IAT ]
mov eax [ ebp - 0x20 ]
imul eax [ ebp + 0xc ]
cdq
idiv [ ebp - 0x24 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
call [ CreateCompatibleBitmap@IAT ]
push [ ebp + 0x8 ]
mov esi [ SelectObject@IAT ]
push ebx
mov [ ebp - 0xc ] eax
call esi
push [ ebp - 0xc ]
mov [ ebp + 0x8 ] eax
push [ ebp - 0x4 ]
call esi
push 0xcc0020
push [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
push [ ebp - 0x24 ]
push edi
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push edi
push [ ebp - 0x4 ]
call [ StretchBlt@IAT ]
push [ ebp + 0x8 ]
push ebx
call esi
push [ ebp - 0x10 ]
push [ ebp - 0x4 ]
call esi
mov esi [ DeleteDC@IAT ]
push ebx
call esi
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x8 ]
push edi
call [ ReleaseDC@IAT ]
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
leave
retn 0xc
mov [ ebp + 0x10 ] eax
sub_41994e
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
imul eax [ esp + 0x4 ]
push 0x60
cdq
pop ecx
idiv ecx
retn 0x4
push esi
push 0x0
call [ GetDC@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
push 0x58
push esi
call [ GetDeviceCaps@IAT ]
push esi
push 0x0
mov [ rw-data ] eax
call [ ReleaseDC@IAT ]
sub_419991
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
imul eax [ esp + 0x4 ]
push 0x60
cdq
pop ecx
idiv ecx
retn 0x4
push esi
push 0x0
call [ GetDC@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push esi
push 0x0
mov [ rw-data ] eax
call [ ReleaseDC@IAT ]
sub_4199d4
push 0x64
call sub_41994e
cmp eax 0x7d
jge r-xdata
xor eax eax
inc eax
retn
push 0x64
call sub_419991
cmp eax 0x7d
jge r-xdata
xor eax eax
retn
sub_4199f3
push esi
push edi
push 0x0
call [ GetDC@IAT ]
mov esi eax
push 0xc
push esi
call [ GetDeviceCaps@IAT ]
push esi
push 0x0
mov edi eax
call [ ReleaseDC@IAT ]
xor eax eax
cmp edi 0x20
pop edi
setge al
pop esi
retn
sub_419a1e
push ebp
mov ebp esp
sub esp 0x68
call sub_4199f3
test al al
jne r-xdata
push ebx
push esi
lea eax [ ebp - 0x3c ]
push eax
push 0x18
push [ ebp + 0x8 ]
call [ GetObjectW@IAT ]
mov eax [ ebp - 0x34 ]
mov esi [ ebp + 0xc ]
imul eax esi
cdq
idiv [ ebp - 0x38 ]
mov ebx [ ebp + 0x10 ]
cmp eax ebx
jge r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419889
jmp r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x1
xor edi edi
push edi
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
mov ebx eax
leave
retn 0xc
mov eax [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
push 0x2
push edi
push [ ebp + 0x8 ]
push eax
call [ ecx + 0x54 ]
test eax eax
mov eax [ ebp - 0x4 ]
jl r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] edi
mov ecx [ eax ]
push eax
call [ ecx + 0x28 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
fldz
mov ecx [ eax ]
push edi
push ecx
push ecx
fstp [ esp ]
push edi
push edi
push r--data
push [ ebp - 0x8 ]
push eax
call [ ecx + 0x20 ]
test eax eax
jge r-xdata
push 0x2c
lea eax [ ebp - 0x68 ]
push edi
push eax
call sub_41a3a0
add esp 0xc
mov eax ebx
neg eax
mov [ ebp - 0x60 ] eax
xor eax eax
push 0x20
inc eax
mov [ ebp - 0x5c ] ax
pop eax
push edi
push edi
mov [ ebp - 0x5a ] ax
lea eax [ ebp - 0x14 ]
push eax
push edi
lea eax [ ebp - 0x68 ]
push eax
push edi
mov [ ebp - 0x68 ] 0x28
mov [ ebp - 0x64 ] esi
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x10 ] edi
call [ CreateDIBSection@IAT ]
mov [ ebp + 0x10 ] eax
neg eax
sbb eax eax
and eax 0x7ff8fff2
add eax 0x8007000e
js r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
cmp eax edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
lea edx [ ebp + 0xc ]
push edx
push eax
call [ ecx + 0x2c ]
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push 0x3
push ebx
push esi
push [ ebp - 0x8 ]
push eax
call [ ecx + 0x20 ]
push [ ebp - 0x14 ]
mov eax [ ebp + 0xc ]
mov edx esi
imul edx ebx
shl edx 0x2
push edx
mov edx esi
shl edx 0x2
push edx
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
push [ ebp + 0x10 ]
call [ DeleteObject@IAT ]
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_419bde
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi [ LoadLibraryW@IAT ]
mov esi ecx
and [ esi + 0x4 ] 0x0
and [ esi ] 0x0
push r--data
call edi
push r--data
mov [ esi ] eax
call edi
push 0x0
mov [ esi + 0x4 ] eax
call [ OleInitialize@IAT ]
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] 0x8
mov [ ebp - 0x4 ] 0x7ff
call [ InitCommonControlsEx@IAT ]
push rw-data
call [ SHGetMalloc@IAT ]
pop edi
mov eax esi
pop esi
leave
retn
sub_419c38
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ FreeLibrary@IAT ]
test eax eax
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
push eax
call edi
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
pop edi
pop esi
jmp [ OleUninitialize@IAT ]
push esi
call edi
sub_419c73
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_419cac
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_419d00
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e1b8
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_419d36
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_41e29e
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_41e1b8
add esp 0x20
pop esi
pop ebp
retn
sub_419d69
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_419e40
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_41e574
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_419e40
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_41e29e
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_41e1b8
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_419d69
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_419cac
pop ebx
leave
retn
sub_419edf
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax ecx
mov ecx [ ebp + 0x10 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_41e896
call sub_41e896
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_419f54
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_41e574
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_41e574
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_419f80
mov edi edi
push ebp
mov ebp esp
call sub_41e574
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_419fa7
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41e574
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_41e574
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_41e574
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_41e896
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_419ff9
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_419d36
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_41e8e0
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_41a086
push 0xc
push r--data
call sub_41f65c
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_41f6a1
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_41eb63
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_41eb96
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_41e96e
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41e92c
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a0dc
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_41ebc6
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_41a114
push 0x10
push r--data
call sub_41f65c
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_41cafe
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_41a086
pop ecx
jmp r-xdata
call sub_41f6a1
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_41f85b
pop ecx
call sub_41e96e
push 0x4
call sub_41eb63
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_41eb96
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a258
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_41f094
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_41f85b
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_41f375
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_41e96e
call sub_41e96e
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_41f85b
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41e92c
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_41e96e
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_41e96e
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_41be10
push ebx
call sub_41eb96
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_41ebc6
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41e92c
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_41be10
push ebx
push [ ebp - 0x20 ]
call sub_41ebc6
add esp 0x14
mov eax esi
sub_41a32f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_41a349
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
mov edx eax
je r-xdata
push esi
mov esi [ ebp + 0xc ]
inc edx
inc edx
cmp [ edx ] 0x0
jne r-xdata
movzx ecx [ esi ]
mov [ edx ] cx
inc edx
inc edx
inc esi
inc esi
test cx cx
jne r-xdata
pop esi
pop ebp
retn
sub_41a377
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
movzx eax [ edx ]
mov [ ecx ] ax
inc ecx
inc ecx
inc edx
inc edx
test ax ax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_41a3a0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_41f8da
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_41a41a
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
jmp r-xdata
push [ ebp + 0x8 ]
call sub_41cafe
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_41f85b
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
push esi
lea ecx [ ebp - 0xc ]
call sub_412180
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_41c33f
int3
or [ rw-data ] 0x1
mov ecx esi
call sub_411cf0
push sub_429586
call sub_41c58f
pop ecx
sub_41a47f
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
cmp edi ebx
je r-xdata
call sub_41e96e
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41fcc3
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_41e96e
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41fcc3
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
cmp eax ebx
jl r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi * 2 - 0x2 ] ax
setge al
dec eax
dec eax
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_41fa28
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_41fa28
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_41a577
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_41fd91
call sub_41a47f
add esp 0x18
test eax eax
jge r-xdata
pop ebp
retn
or eax 0xffffffff
sub_41a5a1
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
jmp r-xdata
movzx ecx [ esi ]
movzx eax [ edx ]
movzx edi cx
sub eax edi
je r-xdata
test cx cx
je r-xdata
pop edi
pop esi
test eax eax
jge r-xdata
inc edx
inc edx
inc esi
inc esi
jle r-xdata
or eax 0xffffffff
pop ebp
retn
pop ebp
retn
xor eax eax
inc eax
sub_41a5e0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_41a670
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_41a6a0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_41a750
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_41a784
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_41bd84 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
sub_41be10
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_41be98 ]
jmp [ ecx * 4 + jump_table_41bf18 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41bf84 ]
pop esi
pop edi
pop ebp
jmp sub_4209b0
jmp [ ecx * 4 + jump_table_41c120 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_41c024 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41c120 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41bf84 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41c120 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41bf84 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41bf84 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41bf84 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41c120 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41c120 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41c120 ]
sub_41c175
push 0x14
push r--data
call sub_41f65c
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f6a1
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_41c1d3
push 0xc
push r--data
call sub_41f65c
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c21e
call sub_41f6a1
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_41c236
push 0x10
push r--data
call sub_41f65c
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c283
call sub_41f6a1
retn 0x14
mov esi [ ebp + 0x8 ]
mov ecx esi
call [ ebp + 0x14 ]
add esi [ ebp + 0xc ]
mov [ ebp + 0x8 ] esi
inc [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
sub_41c29b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push edi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
push 0x1
push 0x0
push 0x0
push [ ebp - 0x4 ]
call sub_41a750
sub eax [ rw-data ]
mov ecx [ ebp - 0x8 ]
sbb edx [ rw-data ]
xor edi edi
push edi
add eax ecx
push 0x2710
adc edx edi
push edx
push eax
call sub_41d210
pop edi
leave
retn
sub_41c2e0
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
push 0x1
push 0x0
push 0x0
push [ ebp - 0x4 ]
call sub_41a750
mov ecx [ ebp - 0x8 ]
xor esi esi
add eax ecx
adc edx esi
mov [ rw-data ] eax
mov [ rw-data ] edx
xor eax eax
pop esi
leave
retn
sub_41c320
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_41c33f
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_41c39b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41c38b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a07b
pop ecx
sub_41c3bc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_420b10
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_41c3dc
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
movzx eax [ ecx ]
test ax ax
je r-xdata
cmp ax [ edx ]
jne r-xdata
inc ecx
inc ecx
inc edx
inc edx
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_41c413
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi edi
test ecx ecx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
mov edx [ ebp + 0xc ]
test ecx ecx
je r-xdata
dec ecx
jne r-xdata
dec ecx
je r-xdata
movzx eax [ edx ]
mov [ edi ] ax
inc edi
inc edi
inc edx
inc edx
test ax ax
je r-xdata
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
sub_41c468
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ rw-data ]
call sub_41e328
push [ rw-data ]
mov edi eax
mov [ ebp - 0x4 ] edi
call sub_41e328
mov esi eax
pop ecx
pop ecx
cmp esi edi
jb r-xdata
xor eax eax
mov ebx esi
sub ebx edi
lea eax [ ebx + 0x4 ]
cmp eax 0x4
jb r-xdata
push edi
call sub_420f82
mov edi eax
lea eax [ ebx + 0x4 ]
pop ecx
cmp edi eax
jae r-xdata
push [ ebp + 0x8 ]
call sub_41e2ad
mov [ esi ] eax
add esi 0x4
push esi
call sub_41e2ad
pop ecx
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp edi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax edi
cmp eax edi
jb r-xdata
mov eax edi
lea eax [ edi + 0x10 ]
cmp eax edi
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_420f34
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_420f34
pop ecx
pop ecx
test eax eax
je r-xdata
sar ebx 0x2
push eax
lea esi [ eax + ebx * 4 ]
call sub_41e2ad
pop ecx
mov [ rw-data ] eax
sub_41c524
push esi
push 0x4
push 0x20
call sub_420ee8
mov esi eax
push esi
call sub_41e2ad
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_41c553
push 0xc
push r--data
call sub_41f65c
call sub_4210c1
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_41c468
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c589
mov eax [ ebp - 0x1c ]
call sub_41f6a1
retn
sub_41c5a6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx edx [ eax ]
push ebx
push esi
push edi
test dx dx
je r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
movzx edi [ ebx ]
inc eax
inc eax
movzx edx [ eax ]
test dx dx
jne r-xdata
movzx ecx di
mov esi ebx
test di di
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
inc esi
movzx ecx [ esi ]
test cx cx
jne r-xdata
cmp cx dx
je r-xdata
sub_41c5e9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0xc ]
jmp r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx dx
je r-xdata
cmp [ eax ] dx
je r-xdata
pop ebp
retn
inc eax
inc eax
xor eax eax
sub_41c60f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx eax
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
mov cx [ ebp + 0xc ]
cmp [ eax ] cx
je r-xdata
cmp [ eax ] cx
jne r-xdata
pop ebp
retn
xor eax eax
dec eax
dec eax
cmp eax edx
je r-xdata
sub_41c650
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je sub_41c640
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_41c710
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_41c798 ]
jmp [ ecx * 4 + jump_table_41c818 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41c884 ]
pop esi
pop edi
pop ebp
jmp sub_4209b0
jmp [ ecx * 4 + jump_table_41ca20 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_41c924 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41ca20 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41c884 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41ca20 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41c884 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41c884 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41c884 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41ca20 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41ca20 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41ca20 ]
sub_41ca90
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_41caaf
push 0xc
push r--data
call sub_41f65c
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_41f6a1
retn
push 0x4
call sub_41eb63
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_41f375
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41caf5
sub_41cafe
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_41f85b
pop ecx
call sub_41e96e
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
mov edi [ HeapAlloc@IAT ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_421508
push 0x1e
call sub_42135d
push 0xff
call sub_4210a9
cmp eax 0x3
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_41caaf
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
mov eax esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
inc esi
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push [ rw-data ]
call edi
push eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
pop esi
pop ebp
retn
call sub_41e96e
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_41f85b
pop ecx
test eax eax
je r-xdata
call sub_41e96e
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub_41cbc8
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push edi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea edi [ ebx - 0x4 ]
test edi edi
jbe r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop edi
inc eax
inc ecx
inc [ ebp - 0x4 ]
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] edi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
sub_41cc88
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_41e574
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_421ed3
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_421767
mov [ esi + 0x4 ] eax
sub_41cd0f
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_41cc88
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_41e96e
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_422353
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x2
lea eax [ ebp - 0x18 ]
push eax
push 0x2
push ebx
call sub_42239e
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xd0 ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push 0x200
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_42230e
add esp 0x24
test eax eax
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41ce25
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41cd0f
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0xffffffe0
pop ebp
retn
sub_41ce51
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
mov eax ecx
mov edx 0xff00
and eax edx
mov esi ecx
shl esi 0x10
add eax esi
mov esi ecx
shr esi 0x8
and esi edx
shl eax 0x8
add eax esi
shr ecx 0x18
add eax ecx
pop esi
pop ebp
retn
sub_41ce80
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
sub ecx 0x1
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
sub ebx 0x1
jne r-xdata
sub ebx 0x1
jne r-xdata
xor eax eax
mov [ edi ] al
add edi 0x1
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
sub ecx 0x1
jne r-xdata
add edi 0x4
xor eax eax
sub ecx 0x1
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_41cfb0
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov edi [ esp + 0x8 ]
push esi
test edi 0x3
push ebx
je r-xdata
mov eax [ edi ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add edi 0x4
test eax 0x81010100
je r-xdata
mov al [ edi ]
add edi 0x1
test al al
je r-xdata
mov eax [ edi - 0x4 ]
test al al
je r-xdata
sub edi 0x1
jmp r-xdata
test edi 0x3
jne r-xdata
sub edi 0x4
test ah ah
je r-xdata
mov esi [ esp + 0x14 ]
test esi 0x3
jne r-xdata
mov dl [ esi ]
add esi 0x1
test dl dl
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
sub edi 0x3
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
mov [ edi ] dl
add edi 0x1
sub ecx 0x1
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
sub edi 0x2
jmp r-xdata
test eax 0xff000000
jne r-xdata
mov [ edi ] cl
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
sub ecx 0x1
je r-xdata
test dl dl
je r-xdata
mov ecx ebx
and ecx 0x3
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
test dh dh
je r-xdata
mov dl [ esi ]
add esi 0x1
mov [ edi ] dl
add edi 0x1
test dl dl
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edx 0xff0000
je r-xdata
pop ebx
pop esi
sub ecx 0x1
jne r-xdata
mov [ edi ] dx
xor edx edx
mov eax [ esp + 0x10 ]
mov [ edi + 0x2 ] dl
pop ebx
pop esi
pop edi
retn
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
sub_41d0e5
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax edx
mov cx [ edx ]
inc edx
inc edx
test cx cx
jne r-xdata
dec edx
dec edx
cmp [ ebp + 0x10 ] 0x0
push esi
je r-xdata
xor ecx ecx
mov [ edx ] cx
mov esi [ ebp + 0xc ]
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
movzx ecx [ esi ]
dec [ ebp + 0x10 ]
mov [ edx ] cx
inc edx
inc edx
inc esi
inc esi
test cx cx
je r-xdata
sub_41d130
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_41d210
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_41d278
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ edi ] r--data
mov eax [ ebx ]
test eax eax
je r-xdata
and [ edi + 0x4 ] 0x0
push eax
call sub_41a5e0
mov esi eax
inc esi
push esi
call sub_41cafe
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
mov [ edi + 0x8 ] 0x1
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx ]
push esi
push eax
call sub_422456
add esp 0xc
jmp r-xdata
sub_41d2e8
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
push edi
je r-xdata
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_41a5e0
mov edi eax
inc edi
push edi
call sub_41cafe
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx + 0x4 ]
push edi
push eax
call sub_422456
add esp 0xc
jmp r-xdata
sub_41d368
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41d345
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a07b
pop ecx
sub_41d390
cmp cl 0x40
jae r-xdata
sar edx 0x1f
mov eax edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
sar edx 0x1f
and cl 0x1f
sar eax cl
retn
shrd eax edx cl
sar edx cl
retn
sub_41d45d
push 0x58
push r--data
call sub_41f65c
xor esi esi
mov [ ebp - 0x4 ] esi
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoA@IAT ]
push 0xfffffffe
pop edi
mov [ ebp - 0x4 ] edi
mov eax 0x5a4d
cmp [ __pe_WINRAR_export_address_table ] ax
jne r-xdata
mov [ ebp - 0x1c ] esi
mov eax [ r--data ]
cmp [ eax + __pe_WINRAR_export_address_table ] 0x4550
jne r-xdata
call sub_41e6bd
test eax eax
jne r-xdata
push 0x1c
call sub_41d434
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_423919
mov [ ebp - 0x4 ] ebx
call sub_4236c5
test eax eax
jge r-xdata
push 0x10
call sub_41d434
cmp [ eax + r--data ] 0xe
jbe r-xdata
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_42358e
mov [ rw-data ] eax
call sub_4234d3
test eax eax
jge r-xdata
push 0x1b
call sub_421055
pop ecx
xor ecx ecx
cmp [ eax + __coff_header ] esi
setne cl
mov [ ebp - 0x1c ] ecx
jmp r-xdata
call sub_42325b
test eax eax
jge r-xdata
push 0x8
call sub_421055
pop ecx
xor ebx ebx
inc ebx
push ebx
call sub_41e9b7
pop ecx
test eax eax
jne r-xdata
push ebx
call sub_421114
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_421055
pop ecx
call sub_4231fc
test [ ebp - 0x3c ] bl
je r-xdata
push eax
call sub_421055
pop ecx
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_4212f1
mov [ ebp - 0x4 ] edi
jmp sub_41d5bd
push eax
call sub_4212c5
push ecx
push eax
push esi
push __pe_WINRAR_export_address_table
call sub_40fb3c
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
sub_41d5e5
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_41d278
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41d60e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_41d345
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a07b
pop ecx
sub_41d635
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_420b10
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_41d694
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434f4d
je r-xdata
call sub_41e574
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
call sub_41e574
add eax 0x90
dec [ eax ]
call sub_41e574
and [ eax + 0x90 ] 0x0
jmp sub_41e84a
sub_41d6dd
push 0x10
push r--data
call sub_41f65c
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d7a3
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_41e574
add eax 0x90
inc [ eax ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_41f6a1
retn
call sub_41e896
call sub_41e896
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
shl eax 0x3
mov ecx [ edi + 0x8 ]
add ecx eax
mov esi [ ecx ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax + 0x4 ]
call sub_41e8e0
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_41d7be
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_41e574
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_41d803
push 0x8
push r--data
call sub_41f65c
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_41f6a1
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_419ca5
mov [ ebp - 0x4 ] 0xfffffffe
sub_41d858
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_41d881
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_41e896
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
test ebx ebx
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_41d635
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_41d945
push 0x2c
push r--data
call sub_41f65c
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_419f54
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_41e574
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_41e574
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_41e574
mov [ eax + 0x88 ] esi
call sub_41e574
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_419ff9
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_41da6b
mov eax [ ebp - 0x1c ]
call sub_41f6a1
retn
sub_41d9de
mov esp [ ebp - 0x18 ]
call sub_41e574
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_41d6dd
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_41da6b
mov eax [ ebp - 0x1c ]
call sub_41f6a1
retn
imul eax eax 0x14
add eax ebx
mov edx [ eax + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_41da6b
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_419fa7
pop ecx
call sub_41e574
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_41e574
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_419f80
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_41d803
pop ecx
pop ecx
sub_41dae1
push 0xc
push r--data
call sub_41f65c
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_423a31
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_423a31
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41e896
push ebx
push esi
call sub_423a31
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_423a31
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_423a31
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_423a31
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_423a31
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_423a31
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_41c710
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_423a31
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_41d858
pop ecx
pop ecx
push eax
push esi
call sub_41c710
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_41f6a1
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_41d858
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_41dc60
push 0x8
push r--data
call sub_41f65c
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_41d858
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_419ca5
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_41dae1
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f6a1
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_41d858
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_419ca5
jmp r-xdata
sub_41dcf2
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_41dc60
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_419c73
call sub_419cac
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_41d6dd
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_41d945
add esp 0x28
test eax eax
je r-xdata
sub_41dd60
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_41e574
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_41e574
lea edi [ eax + 0x80 ]
call sub_41e31f
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_419edf
mov edi eax
mov eax [ ebp - 0x4 ]
add esp 0x14
cmp eax [ ebp - 0x8 ]
jae r-xdata
call sub_41e896
cmp [ esi ] 0xe0434f4d
je r-xdata
pop edi
push ebx
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_419d69
add esp 0x1c
test eax eax
jne r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x14
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp esi [ edi + 0x4 ]
jg r-xdata
cmp esi [ edi ]
jl r-xdata
pop ebx
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
lea ebx [ eax - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_41dcf2
mov esi [ ebp + 0x1c ]
add esp 0x1c
sub_41de54
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
cmp eax 0x80
push esi
push edi
mov [ ebp - 0x1 ] 0x0
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_41e896
cmp ecx eax
jl r-xdata
cmp ecx 0xffffffff
mov [ ebp - 0x8 ] ecx
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_41e574
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_41e896
call sub_41e84a
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41dd60
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_41e574
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_41e574
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_41e574
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_423a31
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_419edf
add esp 0x14
mov edi eax
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_41e896
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_41d803
pop ecx
pop ecx
mov edi [ ebp + 0x18 ]
mov eax [ ebp - 0x8 ]
cmp [ edi ] eax
jg r-xdata
call sub_41e574
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
add edi 0x14
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
call sub_41e574
mov edi [ eax + 0x94 ]
call sub_41e574
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_41d881
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov eax [ edi + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_41d881
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_41c3bc
test al al
jne r-xdata
call sub_41e896
cmp eax 0x19930522
jne r-xdata
call sub_41e574
call sub_41e574
call sub_41e574
mov [ eax + 0x88 ] esi
call sub_41e574
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
call sub_41d635
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_41d803
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x2c ]
call sub_41d5e5
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_41c33f
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov ebx [ ebp - 0xc ]
push [ ebp + 0x20 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_41dcf2
mov esi [ ebp + 0x8 ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_419cac
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_41d6dd
add esp 0x10
push [ esi + 0x1c ]
call sub_41d8fc
sub_41e1b8
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_41e574
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_41de54
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_41d6dd
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41e2ad
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_421025
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_41e328
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_421025
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_41e3a3
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_41e328
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_41e3d7
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_41e328
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp sub_41ea32
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_41e414
push 0xc
push r--data
call sub_41f65c
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
push esi
call sub_421025
pop ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_41eb63
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e4e9
push 0xc
call sub_41eb63
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_421d6d
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e4f2
call sub_41f6a1
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_41e4fb
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_41e3a3
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_420ee8
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_41e328
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_41a086
pop ecx
xor esi esi
push 0x0
push esi
call sub_41e414
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_41e58e
push 0x8
push r--data
call sub_41f65c
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_41f6a1
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_41a086
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_41a086
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_41a086
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_41a086
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_41a086
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_41a086
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_41a086
pop ecx
push 0xd
call sub_41eb63
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_41a086
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e6a8
push 0xc
call sub_41eb63
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e6b4
push esi
call sub_41a086
pop ecx
push edi
call sub_421dfc
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_41a086
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_421c24
pop ecx
sub_41e6bd
mov edi edi
push esi
push edi
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push esi
call sub_421025
pop ecx
call sub_41e3d7
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_41e39a
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_42130f
push [ rw-data ]
call sub_41e2ad
push [ rw-data ]
mov [ rw-data ] eax
call sub_41e2ad
push [ rw-data ]
mov [ rw-data ] eax
call sub_41e2ad
push [ rw-data ]
mov [ rw-data ] eax
call sub_41e2ad
add esp 0x10
mov [ rw-data ] eax
call sub_41e9e7
test eax eax
je r-xdata
test eax eax
jne r-xdata
push sub_41e58e
push [ rw-data ]
call sub_41e328
pop ecx
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_420ee8
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_41e328
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_41e414
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_41e896
push 0x8
push r--data
call sub_41f65c
push [ rw-data ]
call sub_41e328
pop ecx
test eax eax
je r-xdata
call sub_41e84a
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_41e8e0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_423d6c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_423d6c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_41e92c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_41e994
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41e981
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_41e92c
pop ecx
mov esi eax
call sub_41e96e
mov [ eax ] esi
pop esi
pop ebp
retn
sub_41e9b7
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ rw-data ] eax
pop ebp
retn
pop ebp
retn
sub_41e9e7
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_423da6
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_41ea32
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_41a086
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_41eaa0
push 0xc
push r--data
call sub_41f65c
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_421508
push 0x1e
call sub_42135d
push 0xff
call sub_4210a9
push 0x18
call sub_420ea3
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_41eb63
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_41e96e
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_41f6a1
retn
push edi
call sub_41a086
pop ecx
push 0xfa0
push edi
call sub_423da6
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_41a086
pop ecx
call sub_41e96e
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41eb5a
mov eax [ ebp - 0x1c ]
sub_41eb63
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_41eaa0
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_421055
pop ecx
sub_41eb96
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0x14
sub_41ebc6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x4 ] ecx
test cl 0x1
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0xc ] ebx
test dl 0x1
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
mov [ ebp - 0x4 ] ecx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
cmp edx 0x20
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov esi 0x80000000
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_41c710
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_41eedc
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
mov [ esi + 0xc ] eax
cmp eax edi
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_41ef8c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
mov [ ebp - 0x4 ] edx
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_41f094
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
cmp esi 0x20
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov ebx 0x80000000
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx 0x80000000
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
cmp edi 0x20
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_41f375
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_41ef8c
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
test ecx ecx
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_41eedc
mov ebx eax
mov [ ebp + 0x8 ] ebx
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_41f65c
push sub_41f6c0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_41f6c0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_41e29e
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_41e29e
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_420e8c
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_420e42
mov [ ebp - 0x1 ] 0x1
test eax eax
jl r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_41e29e
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_41e29e
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_420e72
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_420e8c
mov eax [ ebp + 0xc ]
push r--data
call sub_423ea0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_41e29e
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_420e59
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_41e29e
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_41f85b
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_41e328
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_41f883
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41f8da
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_41f8da
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_41f883
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_41f9b9
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_41f969
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_41fa28
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_4249b7
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_41e96e
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_41e96e
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_420b98
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_42482e
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_424953
pop ecx
test eax eax
jne r-xdata
call sub_420b98
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_42482e
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_42490a
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_423fe2
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_41fb9b
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x328 ] 0x0
push ebx
push 0x4c
lea eax [ ebp - 0x324 ]
push 0x0
push eax
call sub_41a3a0
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20c ] ecx
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x328 ] 0xc0000417
mov [ ebp - 0x324 ] 0x1
mov [ ebp - 0x31c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov ebx eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc0000417
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_41e29e
leave
retn
test ebx ebx
jne r-xdata
push 0x2
call sub_4249e9
pop ecx
sub_41fcc3
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_41e328
pop ecx
test eax eax
je r-xdata
push 0x2
call sub_4249e9
pop ecx
pop ebp
jmp sub_41fb9b
pop ebp
jmp eax
sub_41fce9
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_4249f1
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_41fd18
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
push [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
dec [ ebp + 0xc ]
call sub_41fce9
cmp [ esi ] 0xffffffff
pop ecx
je r-xdata
pop esi
pop ebp
retn
sub_41fd3f
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
movzx eax [ ebx ]
dec [ ebp + 0x8 ]
push eax
mov eax edi
call sub_41fce9
inc ebx
inc ebx
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_41e96e
cmp [ eax ] 0x2a
jne r-xdata
push 0x3f
mov eax edi
call sub_41fce9
pop ecx
sub_41fd91
mov edi edi
push ebp
mov ebp esp
sub esp 0x474
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
xor edi edi
lea ecx [ ebp - 0x458 ]
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x448 ] edi
mov [ ebp - 0x408 ] edi
mov [ ebp - 0x42c ] edi
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x424 ] edi
mov [ ebp - 0x43c ] edi
mov [ ebp - 0x428 ] edi
call sub_41cc88
cmp [ ebp - 0x430 ] edi
jne r-xdata
cmp esi edi
je r-xdata
call sub_41e96e
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
push edi
movzx edx [ esi ]
xor ecx ecx
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x414 ] edi
mov [ ebp - 0x444 ] edi
mov [ ebp - 0x418 ] edx
cmp dx di
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x44c ] 0x0
je r-xdata
push 0x2
pop edi
add esi edi
cmp [ ebp - 0x420 ] 0x0
mov [ ebp - 0x440 ] esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41e29e
leave
retn
mov eax [ ebp - 0x420 ]
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp ax 0x58
ja r-xdata
xor eax eax
movzx eax dx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov esi [ ebp - 0x440 ]
movzx eax [ esi ]
mov [ ebp - 0x418 ] eax
test ax ax
je r-xdata
jmp [ eax * 4 + jump_table_420909 ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x45c ] eax
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x45c ]
mov ebx [ ebp - 0x41c ]
mov edx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x43c ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x428 ] eax
jmp r-xdata
movzx eax dx
sub eax 0x20
je r-xdata
cmp dx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp dx 0x2a
jne r-xdata
movzx eax dx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x430 ]
push edx
lea esi [ ebp - 0x420 ]
mov [ ebp - 0x428 ] 0x1
call sub_41fce9
jmp r-xdata
movzx eax dx
cmp eax 0x64
jg r-xdata
or [ ebp - 0x408 ] edi
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x42c ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x42c ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x42c ] ebx
test ebx ebx
jge r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x40c ] ebx
test ebx ebx
jge r-xdata
movzx eax [ esi ]
cmp ax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
pop ecx
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x42c ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp ax 0x33
jne r-xdata
cmp [ esi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax edi
je r-xdata
cmp ax 0x64
je r-xdata
cmp [ esi + 0x2 ] 0x32
jne r-xdata
add esi 0x4
or [ ebp - 0x408 ] 0x8000
mov [ ebp - 0x440 ] esi
jmp r-xdata
cmp [ esi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov edi [ ebp - 0x40c ]
cmp edi 0xffffffff
jne r-xdata
sub eax edi
je r-xdata
mov [ ebp - 0x40c ] 0x8
cmp eax 0x65
jl r-xdata
test [ ebp - 0x408 ] 0x1000
jne r-xdata
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
add ebx 0x8
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp ax 0x69
je r-xdata
add esi 0x4
and [ ebp - 0x408 ] 0xffff7fff
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add esi edi
or [ ebp - 0x408 ] 0x1000
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x410 ] ebx
je r-xdata
mov edi 0x7fffffff
mov [ ebp - 0x418 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x418 ] 0x10
je r-xdata
cmp [ ebp - 0x43c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
je r-xdata
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x448 ] ecx
jmp r-xdata
sub eax edi
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] 0x8
jmp r-xdata
cmp ax 0x6f
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x448 ] 0x27
test [ ebp - 0x408 ] 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x438 ] ax
mov eax [ ebp - 0x448 ]
add eax 0x51
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x424 ] edi
jmp r-xdata
cmp [ ebp - 0x444 ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea esi [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] esi
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
test [ ebp - 0x408 ] 0x40
mov eax [ ebx - 0x4 ]
je r-xdata
test [ ebp - 0x408 ] 0x40
mov [ ebp - 0x41c ] ebx
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x41c ] ebx
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x408 ] 0x20
add edx 0x20
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x418 ] edx
sub eax edi
je r-xdata
cmp ax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test edi edi
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x444 ]
call sub_41a086
and [ ebp - 0x444 ] 0x0
mov ebx [ ebp - 0x42c ]
mov esi [ ebp - 0x414 ]
sub ebx esi
sub ebx [ ebp - 0x424 ]
test [ ebp - 0x408 ] 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ ebx - 0x4 ]
movsx eax [ ebx - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax edi
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax edi
je r-xdata
cmp ax 0x78
je r-xdata
test edi edi
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x424 ]
mov edi [ ebp - 0x430 ]
lea eax [ ebp - 0x420 ]
lea ecx [ ebp - 0x438 ]
call sub_41fd3f
test [ ebp - 0x408 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x430 ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_41fd18
add esp 0xc
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp dx 0x67
jne r-xdata
mov eax [ ebx ]
add ebx 0x8
mov [ ebp - 0x46c ] eax
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x468 ] eax
lea eax [ ebp - 0x458 ]
push eax
push [ ebp - 0x460 ]
movsx eax dl
push [ ebp - 0x40c ]
mov [ ebp - 0x41c ] ebx
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x46c ]
push esi
push eax
push [ rw-data ]
call sub_41e328
pop ecx
call eax
mov ebx [ ebp - 0x408 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ ebx ]
add ebx 0x4
mov [ ebp - 0x41c ] ebx
call sub_424b78
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test [ ebp - 0x408 ] 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ ebx ]
add ebx 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x428 ] esi
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x464 ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax edi
jne r-xdata
cmp ax 0x58
je r-xdata
dec edi
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x458 ]
movzx eax al
push ecx
push eax
call sub_422353
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x428 ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x424 ] 0x1
cmp [ ebp - 0x40c ] 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x418 ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
call sub_41e96e
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x418 ] 0x8
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x428 ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x434 ] al
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
mov [ ebp - 0x433 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_424b8e
add esp 0x10
test eax eax
jge r-xdata
and [ ebp - 0x45c ] 0x0
inc eax
inc eax
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] edi
jl r-xdata
inc esi
mov ecx [ ebp - 0x410 ]
push esi
lea eax [ ebp - 0x420 ]
call sub_41fd3f
pop ecx
test esi esi
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x420 ]
call sub_41fd18
add esp 0xc
push 0x20
mov edi [ ebp - 0x40c ]
add edi 0x15d
push edi
call sub_420ea3
mov edx [ ebp - 0x418 ]
pop ecx
mov [ ebp - 0x444 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x458 ]
push eax
push esi
push [ rw-data ]
call sub_41e328
pop ecx
call eax
pop ecx
pop ecx
call sub_41fcc3
add esp 0x14
cmp [ ebp - 0x44c ] 0x0
je r-xdata
mov eax [ ebp - 0x420 ]
mov [ esi ] eax
mov ax [ ebp - 0x420 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x424 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x43c ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
mov [ ebp - 0x418 ] esi
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] edi
mov esi eax
jmp r-xdata
push esi
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc esi
mov [ ebp - 0x410 ] esi
lea eax [ ebp - 0x458 ]
push eax
push esi
push [ rw-data ]
call sub_41e328
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x43c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x418 ]
cdq
push edx
push eax
push ebx
push edi
call sub_424cc0
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x470 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push [ ebp - 0x430 ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_41fd18
add esp 0xc
or [ ebp - 0x420 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x464 ]
mov eax [ ebp - 0x430 ]
lea esi [ ebp - 0x420 ]
call sub_41fce9
add edi [ ebp - 0x470 ]
cmp [ ebp - 0x418 ] 0x0
pop ecx
jg r-xdata
call sub_41a5e0
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x448 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
cmp [ ebp - 0x420 ] 0x0
jl r-xdata
dec [ ebp - 0x418 ]
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x464 ]
push edi
push eax
call sub_424b8e
add esp 0x10
mov [ ebp - 0x470 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
dec [ ebp - 0x410 ]
mov ecx [ ebp - 0x410 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_420929
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4209b0
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_4209b0
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_420929
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_420a93
push 0xc
push r--data
call sub_41f65c
push 0xe
call sub_41eb63
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420afa
call sub_41f6a1
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_41a086
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_41a086
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_420b10
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_420b9e
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_420ee8
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_420ee8
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_420c6f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_41eb63
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_420cb0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_41eb63
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_420ce2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_41ea89
pop ecx
pop ebp
retn
sub_420d1e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x14
mov eax [ ebp + 0xc ]
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_41ea89
pop ecx
pop ebp
retn
sub_420d50
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_420de0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_423d75
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_423d94
jmp r-xdata
sub_420de0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_41e29e
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_420d50
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_420e42
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_420e72
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_420ea3
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_41cafe
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_420ee8
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424f87
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_420f34
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a114
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_420f82
push 0x10
push r--data
call sub_41f65c
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_41e96e
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_41fcc3
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_41eb63
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_41eb96
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_41f6a1
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42101c
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_421025
mov edi edi
push ebp
mov ebp esp
push edi
mov edi 0x3e8
pop edi
pop ebp
retn
test eax eax
je r-xdata
push edi
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
add edi 0x3e8
cmp edi 0xea60
ja r-xdata
sub_421055
mov edi edi
push ebp
mov ebp esp
call sub_421508
push [ ebp + 0x8 ]
call sub_42135d
push [ rw-data ]
call sub_41e328
push 0xff
call eax
add esp 0xc
pop ebp
retn
sub_42107e
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_4210d3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_4210f0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_421114
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_422f99
push r--data
push r--data
call sub_4210f0
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_423ea0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_42393f
call sub_41c58f
mov eax r--data
mov [ esp ] r--data
call sub_4210d3
cmp [ rw-data ] 0x0
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
xor eax eax
push rw-data
call sub_423ea0
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_421199
push 0x18
push r--data
call sub_41f65c
push 0x8
call sub_41eb63
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4212b0
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_41f6a1
retn
mov [ rw-data ] ebx
push 0x8
call sub_41ea89
pop ecx
push [ ebp + 0x8 ]
call sub_4210a9
push r--data
mov eax r--data
call sub_4210d3
pop ecx
push [ rw-data ]
call sub_41e328
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_4210d3
pop ecx
push [ rw-data ]
call sub_41e328
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] esi
call sub_41e31f
cmp [ esi ] eax
je r-xdata
sub esi 0x4
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
cmp esi edi
jb r-xdata
push [ esi ]
call sub_41e328
mov edi eax
call sub_41e31f
mov [ esi ] eax
call edi
push [ rw-data ]
call sub_41e328
mov edi eax
push [ rw-data ]
call sub_41e328
add esp 0xc
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] eax
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
sub_42130f
mov edi edi
push esi
call sub_41e31f
mov esi eax
push esi
call sub_41f84c
push esi
call sub_423d97
push esi
call sub_41fb8c
push esi
call sub_4252c6
push esi
call sub_4252b7
push esi
call sub_4250a5
push esi
call sub_401000
push esi
call sub_41e8ce
push sub_4212db
call sub_41e2ad
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_42135d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jae r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
call sub_425567
pop ecx
cmp eax 0x1
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push 0x3
call sub_425567
pop ecx
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_41a5e0
pop ecx
push eax
push [ esi ]
push ebx
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov edi rw-data
push edi
call sub_422456
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_41fb9b
add esp 0x14
push esi
call sub_41a5e0
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_422456
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_41a5e0
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_4254b2
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41fb9b
add esp 0x14
mov eax [ ebp - 0x4 ]
push [ eax * 8 + rw-data ]
push ebx
push edi
call sub_42543e
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_41fb9b
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_41fb9b
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push edi
call sub_4252d5
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_41fb9b
add esp 0x14
push r--data
push ebx
push edi
call sub_42543e
add esp 0xc
test eax eax
je r-xdata
sub_421508
push 0x3
call sub_425567
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_42135d
push 0xff
call sub_42135d
pop ecx
pop ecx
push 0x3
call sub_425567
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_421541
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_421570
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_41a3a0
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_4215d4
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_42576c
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_42230e
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_42230e
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_41e29e
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_41a3a0
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_421767
push 0xc
push r--data
call sub_41f65c
call sub_41e574
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_41eb63
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_421802
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_41f6a1
retn
push 0x20
call sub_421055
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_41a086
pop ecx
sub_42180b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_41cc88
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_421887
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_42180b
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_421570
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_41a3a0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41e29e
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_421541
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_4215d4
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_41a3a0
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_421541
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_421a6c
push 0x14
push r--data
call sub_41f65c
or [ ebp - 0x20 ] 0xffffffff
call sub_41e574
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_421767
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_42180b
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_420ea3
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_41f6a1
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_421887
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_41e96e
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_41a086
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_41a086
pop ecx
push 0xd
call sub_41eb63
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_421bcd
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_41a086
pop ecx
sub_421c24
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_41a086
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_41a086
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_41a086
push [ esi + 0xc0 ]
call sub_41a086
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_4257ae
push [ edi ]
call sub_41a086
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_41a086
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_41a086
pop ecx
push [ esi + 0xb0 ]
call sub_41a086
push [ esi + 0xbc ]
call sub_41a086
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_41a086
push [ esi + 0xbc ]
call sub_425988
pop ecx
pop ecx
push eax
call sub_41a086
pop ecx
push eax
call sub_41a086
push [ esi + 0xbc ]
call sub_425943
pop ecx
pop ecx
sub_421d6d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_421dfc
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_421e95
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_421d6d
pop ecx
test esi esi
je r-xdata
push esi
call sub_421dfc
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_421c24
pop ecx
sub_421ed3
push 0xc
push r--data
call sub_41f65c
call sub_41e574
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_41eb63
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_421e95
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_421f3d
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_41e574
mov esi [ eax + 0x6c ]
mov eax esi
call sub_41f6a1
retn
push 0x20
call sub_421055
pop ecx
sub_421f49
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_41a086
pop ecx
sub_421f69
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_425ab0
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41e29e
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_425af9
add esp 0x18
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_41a086
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_41a086
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_421f49
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx ebx
je r-xdata
push eax
call sub_41cafe
pop ecx
cmp eax ebx
je r-xdata
call sub_425cb0
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_41a3a0
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_425af9
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_41cafe
pop ecx
cmp eax ebx
je r-xdata
call sub_425cb0
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_421f49
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_421f49
pop ecx
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
push eax
call sub_41cafe
pop ecx
cmp eax ebx
je r-xdata
call sub_425cb0
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_42230e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_41cc88
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_421f69
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_422353
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cc88
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_42239e
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_41cc88
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_422353
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_42576c
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_422456
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
je r-xdata
call sub_41e96e
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_41e96e
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41fcc3
add esp 0x14
mov eax esi
jmp r-xdata
sub_4224be
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cc88
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_425ea1
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_425d5e
test eax eax
movsx eax [ esi ]
push eax
call sub_425ea1
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
inc esi
inc esi
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_422531
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cc88
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_4225b3
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_4225cf
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_425f75
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_425ecd
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_42262b
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_41a5e0
inc eax
push eax
push esi
add esi edi
push esi
call sub_41c710
add esp 0x10
sub_422670
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_41cc88
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
jbe r-xdata
call sub_41e96e
push 0x16
cmp [ ebp + 0xc ] esi
jle r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] 0x0
je r-xdata
call sub_41e96e
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] esi
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_42262b
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_41fcc3
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
lea eax [ esi + 0x1 ]
mov cl [ eax ]
mov [ esi ] cl
mov esi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41fb9b
add esp 0x14
push r--data
push ebx
push esi
call sub_422456
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
inc esi
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
inc esi
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi ] 0x2d
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_41c710
add esp 0xc
inc esi
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi ] al
mov eax edx
add [ esi + 0x1 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi ] al
mov eax edx
sub_4227df
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_426199
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_41e96e
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_41fcc3
add esp 0x14
mov eax esi
jmp r-xdata
mov esi [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41e29e
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
cmp esi ebx
setg cl
sub eax ecx
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push ebx
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_422670
add esp 0x18
mov [ edi ] bl
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
cmp esi ebx
setg cl
add eax edi
add ecx eax
push ecx
call sub_42601d
add esp 0x10
cmp eax ebx
je r-xdata
sub_4228af
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4227df
add esp 0x18
pop ebp
retn
sub_4228cf
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_41cc88
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_41e96e
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_41e96e
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_41fcc3
add esp 0x14
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
mov [ esi ] 0x30
inc esi
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
mov ecx [ edi + 0x4 ]
inc esi
neg ebx
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x31
inc esi
mov [ esi ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
inc esi
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_4228af
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
mov [ esi ] 0x30
inc esi
cmp [ ebp + 0x18 ] 0x0
push 0x65
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
inc esi
push esi
call sub_425ce0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_41c320
add ax 0x30
movzx eax ax
cmp ax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_41c320
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_41a3a0
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
inc esi
call sub_41c320
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi ] 0x2d
inc esi
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi ] 0x2b
inc esi
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_41d130
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
cmp edx ebx
mov edi esi
mov [ esi ] 0x30
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_41d130
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_41d130
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_422c42
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov ebx eax
mov esi [ ebx + 0x4 ]
mov edi ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_41cc88
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_41e96e
push 0x16
pop esi
mov [ eax ] esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41fcc3
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebx ] 0x2d
mov esi edi
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
xor eax eax
cmp [ ebx ] 0x2d
sete al
add eax esi
add eax edi
mov [ eax ] 0x30
mov [ eax + 0x1 ] 0x0
add esi eax
mov eax esi
call sub_42262b
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
call sub_42262b
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov ebx [ ebx + 0x4 ]
inc esi
test ebx ebx
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] ebx
cmp [ ebp + 0xc ] ebx
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax esi
call sub_42262b
push edi
push 0x30
push esi
call sub_41a3a0
add esp 0xc
sub_422d39
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_426199
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_41e96e
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_41fcc3
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41e29e
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push ebx
push esi
push [ ebp + 0x10 ]
mov ecx edi
call sub_422c42
add esp 0x10
mov [ edi ] bl
jmp r-xdata
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_42601d
add esp 0x10
cmp eax ebx
je r-xdata
sub_422df4
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_426199
xor ebx ebx
add esp 0x14
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
call sub_41e96e
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] edi
call sub_41fcc3
add esp 0x14
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x30 ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41e29e
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_42601d
add esp 0x10
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_422670
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
cmp cl bl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_422c42
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] bl
sub_422eee
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4227df
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422d39
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4228cf
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422df4
jmp r-xdata
sub_422f76
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422eee
add esp 0x1c
pop ebp
retn
sub_422f99
mov edi edi
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_41e2ad
add edi 0x4
pop ecx
mov [ esi ] eax
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_422fba
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_426232
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_41fb9b
add esp 0x14
sub_422fe5
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ r--data ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fdiv [ ebp - 0x10 ]
fmul [ ebp - 0x10 ]
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fld1
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x5
jpe r-xdata
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_423023
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_422fe5
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_42304c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_41e84a
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_42309c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_41e4fb
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_4231fc
mov edi edi
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_421c06
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_4262f1
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_42325b
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_421c06
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_420ee8
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_41a5e0
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_41a5e0
mov ebx eax
inc ebx
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_41a086
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_420ee8
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_41a086
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_422456
add esp 0xc
test eax eax
je r-xdata
pop ecx
pop ebx
add edi 0x4
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41fb9b
add esp 0x14
sub_423339
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_4262f1
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_4262f1
pop ecx
test eax eax
je r-xdata
call sub_4262f1
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_4234d3
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_421c06
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_423339
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_420ea3
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_423339
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_42358e
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xc
push ebx
push esi
mov esi [ GetEnvironmentStringsW@IAT ]
push edi
xor ebx ebx
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call esi
mov edi eax
cmp edi ebx
je r-xdata
cmp eax 0x2
je r-xdata
cmp edi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov eax edi
cmp [ edi ] bx
je r-xdata
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov esi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax edi
push ebx
sar eax 0x1
inc eax
push eax
push edi
push ebx
push ebx
mov [ ebp - 0xc ] eax
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax esi
inc eax
push eax
mov [ ebp - 0x8 ] eax
call sub_420ea3
mov edi eax
pop ecx
cmp edi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push eax
call sub_420ea3
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push [ ebp - 0x8 ]
push esi
push edi
call sub_41be10
add esp 0xc
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
push esi
call [ FreeEnvironmentStringsA@IAT ]
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push edi
push ebx
push ebx
call esi
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_41a086
pop ecx
mov [ ebp - 0x4 ] ebx
sub_4236c5
push 0x54
push r--data
call sub_41f65c
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_420ee8
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_420ee8
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_41f6a1
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_423da6
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_423da6
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_423919
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_42393f
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_423965
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_4239fb
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_423a43
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_4249e9
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_4249e9
pop ecx
sub_423b49
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_4250fa
test eax eax
je r-xdata
push 0xa
call sub_42135d
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_425107
pop ecx
push 0x3
call sub_4212db
int3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov esi [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call sub_41a3a0
lea eax [ ebp - 0x328 ]
add esp 0xc
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
push 0x0
mov [ ebp - 0x328 ] 0x40000015
mov [ ebp - 0x31c ] esi
mov [ ebp - 0x2d4 ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_423c60
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423c80
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_41e29e
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_423cc5
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_423cc5
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_423c80
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_423d75
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_423d94
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_423d6c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_423d75
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_423da6
push 0x10
push r--data
call sub_41f65c
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_41f6a1
retn
sub_423e10
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_423e50
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_423ea0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_41f6c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __pe_WINRAR_export_address_table
call sub_423e10
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __pe_WINRAR_export_address_table
push eax
push __pe_WINRAR_export_address_table
call sub_423e50
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423f5d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_42638f
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_41e96e
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_41e994
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_423fe2
push 0x14
push r--data
call sub_41f65c
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_41e981
and [ eax ] 0x0
call sub_41e96e
mov [ eax ] 0x9
call sub_41e981
mov [ eax ] edi
call sub_41e96e
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_41fcc3
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_41f6a1
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_426406
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_41e981
mov [ eax ] edi
call sub_41e96e
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_41fcc3
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_41e96e
mov [ eax ] 0x9
call sub_41e981
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_423f5d
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4240f1
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_4240fb
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_41a670
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] esi
mov [ ebp - 0x1ad0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
mov eax [ esi ]
and edi 0x1f
shl edi 0x6
add eax edi
mov bl [ eax + 0x24 ]
add bl bl
sar bl 0x1
mov [ ebp - 0x1ad8 ] esi
mov [ ebp - 0x1ad9 ] bl
cmp bl 0x2
je r-xdata
call sub_41e981
mov [ eax ] esi
call sub_41e96e
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41fcc3
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_41e29e
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_41e981
xor esi esi
mov [ eax ] esi
call sub_41e96e
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41fcc3
add esp 0x14
jmp r-xdata
push [ ebp + 0x8 ]
call sub_424953
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_423f5d
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
test bl bl
jne r-xdata
call sub_41e574
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae4 ]
sete cl
push eax
mov eax [ esi ]
push [ edi + eax ]
mov [ ebp - 0x1ae0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
mov [ ebp - 0x1abc ] eax
cmp bl 0x2
jne r-xdata
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
xor ecx ecx
cmp [ ebp - 0x1ae0 ] ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
jmp r-xdata
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae4 ] eax
xor eax eax
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
test bl bl
je r-xdata
mov esi [ ebp - 0x1ad8 ]
push 0x5
pop esi
cmp [ ebp - 0x1ac0 ] esi
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
jmp r-xdata
call sub_41e96e
mov [ eax ] 0x1c
call sub_41e981
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1ac4 ]
and [ ebp - 0x1abc ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
mov [ ebp - 0x1abc ] eax
mov eax [ esi ]
add eax edi
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_41e994
pop ecx
jmp r-xdata
call sub_41e96e
mov [ eax ] 0x9
call sub_41e981
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1abc ]
movzx edx [ edx ]
add [ ebp - 0x1abc ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
xor eax eax
jmp r-xdata
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ac4 ]
inc [ ebp - 0x1ac4 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1ad8 ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae0 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac4 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac4 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac4 ] esi
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
add [ ebp - 0x1abc ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x1abc ]
cmp [ ebp - 0x1abc ] 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x1abc ]
movzx esi [ ebx ]
xor ecx ecx
cmp si 0xa
sete cl
inc ebx
inc ebx
add [ ebp - 0x1abc ] 0x2
mov [ ebp - 0x1ac0 ] esi
mov [ ebp - 0x1ae0 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_42238b
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
add esi [ ebp - 0x1ad4 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
add [ ebp - 0x1ac4 ] 0x2
mov [ eax ] dx
inc eax
inc eax
cmp [ ebp - 0x1ac4 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] 0x2
push 0xd
pop ebx
mov [ eax ] bx
inc eax
inc eax
add [ ebp - 0x1ac4 ] 0x2
mov eax [ ebp - 0x1ac4 ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x1ac0 ]
call sub_4264cd
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1ac0 ]
push eax
call sub_424ca5
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1abc ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1ac0 ]
push ecx
push eax
push [ ebp - 0x1ae4 ]
inc ebx
inc [ ebp - 0x1abc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1ac0 ]
push ebx
push eax
call sub_424ca5
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac0 ] eax
call sub_4264cd
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
mov al [ ebp - 0x1ad9 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1abc ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1abc ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
cmp [ ebp - 0x1ac4 ] esi
mov [ ebp - 0x1ac8 ] eax
jl r-xdata
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_42482e
push 0x10
push r--data
call sub_41f65c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_41e981
and [ eax ] 0x0
call sub_41e96e
mov [ eax ] 0x9
call sub_41e981
mov [ eax ] edi
call sub_41e96e
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_41fcc3
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_41f6a1
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_426406
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_41e96e
mov [ eax ] 0x9
call sub_41e981
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4240fb
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424900
mov eax [ ebp - 0x1c ]
sub_42490a
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_420ea3
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_424953
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_41e96e
mov [ eax ] 0x9
xor eax eax
pop ebp
retn
call sub_41e96e
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_41fcc3
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
sub_4249b7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
call sub_41e96e
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41fcc3
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_4249f1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_4249b7
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_426592
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax ebx
push esi
call sub_4249b7
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41e29e
leave
retn
push esi
call sub_4249b7
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_4249b7
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_4249b7
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_4249b7
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push esi
call sub_4249b7
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_4249b7
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_4249b7
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_4249b7
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_426872
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_4249b7
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_4249b7
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
jle r-xdata
mov eax 0xffff
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_41fa28
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
cmp eax 0xffffffff
je r-xdata
sub_424b8e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_41cc88
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_422353
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_41e96e
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_424cc0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_424d55
push 0x10
push r--data
call sub_41f65c
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_41eb63
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424deb
mov eax [ ebp - 0x1c ]
call sub_41f6a1
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_426b76
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_41a086
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_424df4
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_4249b7
pop ecx
push eax
call sub_42482e
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_424e5c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_424df4
pop ecx
test eax eax
je r-xdata
push esi
call sub_424ea4
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_4249b7
push eax
call sub_426bf2
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_424ea4
push 0x14
push r--data
call sub_41f65c
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_41eb63
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424f75
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_41f6a1
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_420cb0
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_424f46
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_424e5c
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_424e5c
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_424f87
push 0xc
push r--data
call sub_41f65c
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_41e96e
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_41fcc3
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_41f6a1
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_41f85b
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_41eb63
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_41f375
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_425083
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_41a3a0
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_4250c3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_425107
push 0x20
push r--data
call sub_41f65c
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_41e4fb
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_41f6a1
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_4250c3
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_4212db
mov [ ebp - 0x1c ] 0x1
push eax
call sub_41e328
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_41e96e
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41fcc3
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_41eb63
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_41e31f
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42527b
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_4252d5
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
call sub_41e31f
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
je r-xdata
push [ rw-data ]
call sub_41e328
pop ecx
test eax eax
je r-xdata
push eax
call sub_41e328
pop ecx
test eax eax
je r-xdata
push eax
call sub_41e328
push [ rw-data ]
mov esi eax
call sub_41e328
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
push eax
call sub_41e2ad
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_41e2ad
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_41e2ad
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_41e2ad
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push r--data
push edi
call esi
push eax
call sub_41e2ad
pop ecx
mov [ rw-data ] eax
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
call esi
test eax eax
je r-xdata
push eax
call sub_41e328
pop ecx
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0xc ] 0x1
jne r-xdata
sub_42543e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
call sub_41e96e
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_41e96e
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41fcc3
add esp 0x14
mov eax esi
jmp r-xdata
sub_4254b2
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_41e96e
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_41e96e
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41fcc3
add esp 0x14
mov eax esi
jmp r-xdata
sub_425567
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_41e96e
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41fcc3
add esp 0x14
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
pop esi
pop ebp
retn
mov eax [ rw-data ]
jmp r-xdata
sub_4255b2
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp eax ebx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_425ab0
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41e29e
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
mov edi eax
cmp esi ebx
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_425af9
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_41a086
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_41a3a0
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_421f49
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_41cafe
pop ecx
cmp eax ebx
je r-xdata
call sub_425cb0
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_42576c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_41cc88
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4255b2
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4257ae
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_41a086
push [ esi + 0x8 ]
call sub_41a086
push [ esi + 0xc ]
call sub_41a086
push [ esi + 0x10 ]
call sub_41a086
push [ esi + 0x14 ]
call sub_41a086
push [ esi + 0x18 ]
call sub_41a086
push [ esi ]
call sub_41a086
push [ esi + 0x20 ]
call sub_41a086
push [ esi + 0x24 ]
call sub_41a086
push [ esi + 0x28 ]
call sub_41a086
push [ esi + 0x2c ]
call sub_41a086
push [ esi + 0x30 ]
call sub_41a086
push [ esi + 0x34 ]
call sub_41a086
push [ esi + 0x1c ]
call sub_41a086
push [ esi + 0x38 ]
call sub_41a086
push [ esi + 0x3c ]
call sub_41a086
add esp 0x40
push [ esi + 0x40 ]
call sub_41a086
push [ esi + 0x44 ]
call sub_41a086
push [ esi + 0x48 ]
call sub_41a086
push [ esi + 0x4c ]
call sub_41a086
push [ esi + 0x50 ]
call sub_41a086
push [ esi + 0x54 ]
call sub_41a086
push [ esi + 0x58 ]
call sub_41a086
push [ esi + 0x5c ]
call sub_41a086
push [ esi + 0x60 ]
call sub_41a086
push [ esi + 0x64 ]
call sub_41a086
push [ esi + 0x68 ]
call sub_41a086
push [ esi + 0x6c ]
call sub_41a086
push [ esi + 0x70 ]
call sub_41a086
push [ esi + 0x74 ]
call sub_41a086
push [ esi + 0x78 ]
call sub_41a086
push [ esi + 0x7c ]
call sub_41a086
add esp 0x40
push [ esi + 0x80 ]
call sub_41a086
push [ esi + 0x84 ]
call sub_41a086
push [ esi + 0x88 ]
call sub_41a086
push [ esi + 0x8c ]
call sub_41a086
push [ esi + 0x90 ]
call sub_41a086
push [ esi + 0x94 ]
call sub_41a086
push [ esi + 0x98 ]
call sub_41a086
push [ esi + 0x9c ]
call sub_41a086
push [ esi + 0xa0 ]
call sub_41a086
push [ esi + 0xa4 ]
call sub_41a086
push [ esi + 0xa8 ]
call sub_41a086
add esp 0x2c
sub_425943
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a086
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_41a086
pop ecx
push esi
call sub_41a086
pop ecx
sub_425988
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a086
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a086
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a086
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a086
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a086
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_41a086
pop ecx
push esi
call sub_41a086
pop ecx
sub_425a20
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_425a70
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_425ab0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_426ae9
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41e29e
leave
retn
sub_425af9
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41e29e
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_41a3a0
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_421f49
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_41cafe
pop ecx
cmp eax edi
je r-xdata
call sub_425cb0
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_41a5e0
mov esi eax
pop ecx
inc esi
mov ebx [ WideCharToMultiByte@IAT ]
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_420ee8
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_41a086
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_425ce0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_425d0d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cc88
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_42239e
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_425d5e
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_425d0d
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_425d8c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_41cc88
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_41e96e
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_422353
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_42239e
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_42230e
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_425ea1
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_425d8c
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_425ecd
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_41cc88
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4278c4
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_426e3c
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41e29e
leave
retn
sub_425f75
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_41cc88
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4278c4
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_427380
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41e29e
leave
retn
sub_42601d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ecx + 0xc ]
cmp esi ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
jbe r-xdata
call sub_41e96e
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
cmp edx ebx
mov [ esi ] bl
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov eax edx
jmp r-xdata
cmp edx ebx
mov [ esi ] 0x30
lea eax [ esi + 0x1 ]
jle r-xdata
call sub_41e96e
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
cmp edx ebx
mov [ eax ] bl
jl r-xdata
mov cl [ edi ]
cmp cl bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41fcc3
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc edi
jmp r-xdata
lea edi [ esi + 0x1 ]
push edi
call sub_41a5e0
inc eax
push eax
push edi
push esi
call sub_41c710
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
cmp edx ebx
jg r-xdata
xor eax eax
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_4260dc
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x6 ]
push ebx
mov ecx eax
push esi
push edi
shr ecx 0x4
and eax 0x8000
mov edi 0x7ff
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test ebx ebx
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
add ecx 0x3c01
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ecx 0x3c00
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
add edx edx
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
or ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
movzx edi cx
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_426199
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x30 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4260dc
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_427fbc
mov esi [ ebp - 0x30 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x2a ]
mov [ ebx ] eax
movsx eax [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_422456
add esp 0x24
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_41e29e
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41fb9b
add esp 0x14
sub_426232
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
test ecx 0xfcf0fce0
je r-xdata
mov esi [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
je r-xdata
call sub_428a0e
call sub_428a0e
mov [ esi ] eax
jmp r-xdata
call sub_41e96e
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_41fcc3
add esp 0x14
mov eax edi
pop edi
jmp r-xdata
push esi
push esi
call sub_428a0e
pop ecx
pop ecx
mov [ edi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_42629e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_41cc88
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_426309
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_41e96e
mov [ eax ] 0x9
call sub_41e981
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_42638f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_41e981
and [ eax ] 0x0
call sub_41e96e
mov [ eax ] 0x9
or eax 0xffffffff
pop ebp
retn
call sub_41e981
mov [ eax ] esi
call sub_41e96e
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_41fcc3
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax [ rw-data ]
jae r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
sub_426406
push 0xc
push r--data
call sub_41f65c
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_41eb63
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_41f6a1
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42649d
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_423da6
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_4264a6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4264cd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_428d1d
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_41e29e
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_426592
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_4249b7
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_41e96e
mov [ eax ] 0x9
test al 0x1
je r-xdata
call sub_41e96e
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push 0x2
and eax 0xffffffef
pop ebx
or eax ebx
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_420b98
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov edi ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] bx
call sub_42482e
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
sub ecx ebx
mov [ esi + 0x4 ] ecx
test edi edi
jle r-xdata
push [ ebp + 0xc ]
call sub_424953
pop ecx
test eax eax
jne r-xdata
call sub_420b98
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov eax ebx
and eax 0xffff
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_42482e
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_42490a
pop ecx
pop edi
pop ebx
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push ebx
push 0x0
push 0x0
push ecx
call sub_423fe2
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_426706
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_41cc88
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_41e96e
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_41fcc3
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_41e96e
mov [ eax ] 0x2a
call sub_41e96e
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_41e96e
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_41fcc3
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_41a3a0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_41a3a0
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_42688f
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_41cc88
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_41e96e
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_41fcc3
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_42239e
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
mov eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_41e96e
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_426abe
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_42688f
add esp 0x14
pop ebp
retn
sub_426aff
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_41e96e
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_41fcc3
add esp 0x14
or eax ebx
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_424df4
push esi
mov ebx eax
call sub_428d69
push esi
call sub_4249b7
push eax
call sub_426d6f
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_41a086
pop ecx
mov [ esi + 0x1c ] edi
sub_426b76
push 0xc
push r--data
call sub_41f65c
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_41e96e
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_41fcc3
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_420c6f
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_426aff
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_426bea
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_41f6a1
retn
mov eax [ ebp - 0x1c ]
sub_426bf2
push 0x10
push r--data
call sub_41f65c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_41e96e
mov [ eax ] 0x9
call sub_41e96e
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41fcc3
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_41f6a1
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_426406
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_41e96e
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_42638f
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_426cc9
mov eax [ ebp - 0x1c ]
call sub_41e981
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_426cd3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_42638f
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_41e994
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_42638f
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_42638f
push 0x1
mov edi eax
call sub_42638f
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_426309
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_426d6f
push 0x10
push r--data
call sub_41f65c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_41e981
and [ eax ] 0x0
call sub_41e96e
mov [ eax ] 0x9
call sub_41e981
mov [ eax ] edi
call sub_41e96e
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_41fcc3
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_41f6a1
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_426406
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_41e96e
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_426cd3
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_426e32
mov eax [ ebp - 0x1c ]
sub_426e3c
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_427380
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_4278c4
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
xor ecx ecx
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x6c ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_41e96e
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41fcc3
add esp 0x14
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41e29e
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_427f8c ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov cl al
sub cl 0x31
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_428e01
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp al 0x63
jle r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp al 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
add eax ecx
mov ebx eax
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
movzx ecx [ ebx + 0xa ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x32 ]
mov esi ecx
mov edx 0x7fff
xor esi eax
and eax edx
and ecx edx
and esi 0x8000
mov edi 0x7fff
lea edx [ ecx + eax ]
mov [ ebp - 0x70 ] esi
movzx edx dx
cmp ax di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp cx di
jae r-xdata
mov edi 0xbffd
cmp dx di
ja r-xdata
mov esi 0x3fbf
cmp dx si
ja r-xdata
xor esi esi
cmp ax si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp cx si
jne r-xdata
inc edx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc edx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
inc edi
inc edi
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] ecx
test ecx ecx
jle r-xdata
add edx 0xc002
test dx dx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add edx 0xffff
test dx dx
jge r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x2c ] cx
ja r-xdata
mov eax edx
neg eax
movzx esi ax
add edx esi
test dx dx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov ecx esi
add esi esi
or esi eax
shr ecx 0x1f
lea eax [ edi + edi ]
or eax ecx
add edx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test dx dx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x5c ]
movzx ecx [ ecx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax ecx
mov ecx [ edi - 0x4 ]
lea esi [ ecx + eax ]
cmp esi ecx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x2c ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov ecx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp dx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or edx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] dx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x22 ] cx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc edx
jmp r-xdata
sub_427fbc
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x8 ]
mov ecx edx
mov eax 0x8000
and ecx eax
and edx 0x7fff
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x30 ] 0xcc
mov [ ebp - 0x2f ] 0xcc
mov [ ebp - 0x2e ] 0xcc
mov [ ebp - 0x2d ] 0xcc
mov [ ebp - 0x2c ] 0xcc
mov [ ebp - 0x2b ] 0xcc
mov [ ebp - 0x2a ] 0xcc
mov [ ebp - 0x29 ] 0xcc
mov [ ebp - 0x28 ] 0xcc
mov [ ebp - 0x27 ] 0xcc
mov [ ebp - 0x26 ] 0xfb
mov [ ebp - 0x25 ] 0x3f
mov [ ebp - 0x74 ] 0x1
mov [ ebp - 0x70 ] ecx
test cx cx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
mov eax 0x7fff
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
shr ebx 0x8
mov eax esi
shr eax 0x18
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
movsx ebx ax
mov [ ebp - 0x20 ] cx
mov ecx rw-data
neg ebx
sub ecx 0x60
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x64 ] ecx
test ebx ebx
je r-xdata
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp esi eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
jge r-xdata
test esi 0x40000000
jne r-xdata
test edi edi
je r-xdata
xor edx edx
cmp cx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx ] dx
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
mov [ ebx + 0x5 ] dl
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
movzx ecx cx
mov ebx edx
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
mov edi eax
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx di
jae r-xdata
test ebx ebx
je r-xdata
mov eax rw-data
neg ebx
sub eax 0x60
mov [ ebp - 0x64 ] eax
test cx cx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41e29e
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x64 ] 0x54
mov ecx ebx
and ecx 0x7
sar ebx 0x3
test ecx ecx
je r-xdata
cmp esi eax
jne r-xdata
cmp esi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_422456
add esp 0xc
xor esi esi
test eax eax
je r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x70 ] ax
mov [ edx + 0x3 ] 0x1
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x4 ] 0x30
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x64 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebx + 0x3 ] 0x6
push esi
push esi
push esi
push esi
push esi
call sub_41fb9b
add esp 0x14
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jge r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
movzx edx [ eax + 0xa ]
xor ecx ecx
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x16 ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x48 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea esi [ edx + ecx ]
movzx edi si
mov esi 0x7fff
cmp cx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x48 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp dx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_41fb9b
add esp 0x14
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_422456
add esp 0xc
xor esi esi
test eax eax
je r-xdata
dec ebx
mov al [ ebx ]
dec ebx
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x58 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
inc edi
inc edi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x48 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp cx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x54 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp dx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x70 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jge r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x48 ] 0x2
inc eax
inc eax
dec [ ebp - 0x54 ]
cmp [ ebp - 0x54 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x58 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x48 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
inc esi
inc esi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x68 ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x6c ] 0x2
sub [ ebp - 0x68 ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x6c ]
movzx ecx [ eax ]
mov eax [ ebp - 0x68 ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x54 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x54 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x48 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x48 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_4288e0
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_42896e
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_428a0e
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_4288e0
movzx eax ax
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_42896e
push eax
mov [ ebp - 0xc ] eax
call sub_428fcf
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_428d3c
mov eax [ rw-data ]
push esi
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
sub_428d69
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_41a086
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_428da0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_428e01
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] 0x404e
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
cmp [ ebp + 0xc ] esi
jbe r-xdata
cmp [ eax + 0x8 ] esi
je r-xdata
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx edx
shr ecx 0x1f
lea edi [ edx + edx ]
lea edx [ ebx + ebx ]
or edx ecx
mov ecx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
add ecx ecx
or ecx esi
mov [ ebp - 0x14 ] edi
mov esi edi
and [ ebp - 0x14 ] 0x0
mov ebx edx
shr ebx 0x1f
add ecx ecx
shr edi 0x1f
or ecx ebx
mov ebx [ ebp - 0x10 ]
add esi esi
add edx edx
or edx edi
lea edi [ esi + ebx ]
mov [ eax ] esi
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
cmp edi esi
jb r-xdata
mov ecx [ eax + 0x4 ]
mov edx ecx
shr edx 0x10
mov [ eax + 0x8 ] edx
mov edx [ eax ]
mov edi edx
shl ecx 0x10
shr edi 0x10
or ecx edi
shl edx 0x10
add [ ebp - 0x18 ] 0xfff0
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov ebx 0x8000
test [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi ebx
jae r-xdata
mov cx [ ebp - 0x18 ]
mov [ eax + 0xa ] cx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41e29e
leave
retn
mov esi [ eax ]
mov edi [ eax + 0x4 ]
add [ ebp - 0x18 ] 0xffff
mov ecx esi
add esi esi
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
test ebx ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea ebx [ ecx + edx ]
xor esi esi
cmp ebx ecx
jb r-xdata
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
xor ebx ebx
mov [ eax ] edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
xor esi esi
inc esi
cmp ebx edx
jae r-xdata
xor ebx ebx
inc ebx
cmp esi 0x1
jae r-xdata
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
and [ ebp - 0x14 ] 0x0
lea ecx [ edi + edi ]
mov edx edi
shr edx 0x1f
lea edi [ ebx + ebx ]
or edi edx
mov edx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
lea ebx [ edx + edx ]
mov edx [ ebp + 0x8 ]
or ebx esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
movsx edx [ edx ]
lea esi [ ecx + edx ]
mov [ ebp - 0x10 ] edx
cmp esi ecx
jb r-xdata
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
test esi esi
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] esi
test ebx ebx
je r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi edx
jae r-xdata
dec [ ebp + 0xc ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
ja r-xdata
lea ecx [ edi + 0x1 ]
xor edx edx
cmp ecx edi
jb r-xdata
cmp [ ebp - 0x14 ] 0x0
mov [ eax ] esi
je r-xdata
xor esi esi
jmp r-xdata
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_428fcf
push 0x8
push r--data
call sub_41f65c
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_41f6a1
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_401000
retn
sub_40117b
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
mov [ esi ] ecx
mov eax [ ecx ]
call [ eax + 0x10 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax esi
pop esi
retn 0x4
sub_401195
mov eax ecx
mov ecx [ eax ]
mov edx [ ecx ]
push 0x0
push [ eax + 0xc ]
push [ eax + 0x8 ]
call [ edx + 0xc ]
retn
sub_40121d
add ecx 0x1020
jmp sub_4125e9
sub_4012b5
push esi
push 0x1
mov esi ecx
call sub_401106
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov dl [ esp + 0x8 ]
mov [ eax + ecx - 0x1 ] dl
pop esi
retn 0x4
sub_4012f9
push esi
push [ esp + 0x8 ]
mov esi ecx
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
call sub_401106
mov eax esi
pop esi
retn 0x4
sub_401409
push esi
mov esi ecx
call sub_401228
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41a07b
pop ecx
sub_401a8b
cmp [ ecx + 0x76d4 ] 0x0
je r-xdata
retn
xor eax eax
cmp [ ecx + 0x76c9 ] al
sete al
dec eax
and eax 0xfffffff0
add eax 0x20
mov [ ecx + 0x6604 ] eax
sub_401b97
push [ esp + 0x4 ]
add ecx 0x20
push ecx
call sub_41a5a1
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
retn 0x4
sub_401bae
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ ebp + 0x8 ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] eax
call sub_4112c0
leave
retn 0x4
sub_4048bb
push esi
push 0xf0
mov esi ecx
push 0x0
push esi
call sub_41a3a0
and [ esi + 0x100 ] 0x0
add esp 0xc
mov [ esi + 0x104 ] 0x0
pop esi
retn
sub_404ea1
mov ecx [ esp + 0x4 ]
call sub_404e4f
retn 0x4
sub_40533d
add ecx 0x93e8
jmp sub_410901
j_sub_4125e9
jmp sub_4125e9
sub_405e38
mov eax [ ecx + 0xa98 ]
add eax 0xfffffffc
cmp eax 0x1
ja r-xdata
retn 0x8
push [ esp + 0x4 ]
add ecx 0xa9c
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_40c816
sub_406048
movzx eax [ esp + 0xc ]
push eax
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
retn 0xc
sub_406066
movzx eax [ esp + 0xc ]
neg eax
sbb eax eax
and eax 0x9
push eax
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ GetDlgItem@IAT ]
push eax
call [ ShowWindow@IAT ]
retn 0xc
sub_4060cb
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] cl
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn
sub_40623a
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] 0x1
mov [ ecx + 0x9 ] al
mov [ ecx + 0xa ] al
mov [ ecx + 0xb ] al
mov [ ecx + 0xc ] al
retn
sub_406252
xor al al
retn 0x4
sub_4062cb
call sub_40623a
mov eax ecx
retn
sub_4062d3
cmp [ ecx + 0x9 ] 0x0
jne r-xdata
xor al al
retn 0x8
jmp sub_411615
sub_4062e3
push esi
push 0x7
mov esi ecx
call sub_401bae
push 0x8
mov ecx esi
call sub_406257
pop esi
retn
sub_40633f
push esi
mov esi ecx
cmp [ esi + 0xb ] 0x0
jne r-xdata
push 0x2
mov ecx esi
call sub_40629a
pop esi
retn 0x4
push [ esp + 0x8 ]
push 0xa
call sub_4012d0
sub_4063b7
push esi
push [ esp + 0xc ]
mov esi ecx
push [ esp + 0xc ]
push 0x8
call sub_4062fd
push 0x6
mov ecx esi
call sub_406257
pop esi
retn 0x8
sub_4063f5
push esi
push [ esp + 0xc ]
mov esi ecx
push [ esp + 0xc ]
push 0xc
call sub_4062fd
push 0x2
mov ecx esi
call sub_406257
pop esi
retn 0x8
sub_406414
push esi
push [ esp + 0xc ]
mov esi ecx
push [ esp + 0xc ]
push 0xd
call sub_4062fd
push 0x5
mov ecx esi
call sub_406257
pop esi
retn 0x8
sub_406433
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push 0x1f
call sub_4062fd
push 0x2
mov ecx rw-data
call sub_406257
retn 0x8
sub_406451
push esi
push [ esp + 0xc ]
mov esi ecx
push [ esp + 0xc ]
call sub_406414
push 0x5
mov ecx esi
call sub_40629a
pop esi
retn 0x8
sub_40646e
push [ esp + 0x4 ]
push 0x0
call sub_4063b7
retn 0x4
sub_40647c
push [ esp + 0x4 ]
push 0x0
call sub_4063d6
retn 0x4
sub_40648a
push [ esp + 0x4 ]
push 0x0
call sub_4063f5
retn 0x4
sub_406498
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_40648a
push 0x2
mov ecx esi
call sub_40629a
pop esi
retn 0x4
sub_40660a
mov eax ecx
xor ecx ecx
mov [ eax + 0x1010 ] ecx
mov [ eax + 0x1014 ] ecx
mov [ eax + 0x1018 ] ecx
mov [ eax + 0x101c ] ecx
mov [ eax + 0x1020 ] ecx
mov [ eax + 0x1024 ] ecx
retn
sub_406ae2
mov eax [ esp + 0xc ]
cmp [ eax + 0xb050 ] 0x3
jne r-xdata
xor al al
add eax 0x65e8
push eax
push [ esp + 0x14 ]
push [ esp + 0xc ]
call sub_406733
jmp r-xdata
retn 0x10
sub_4087a2
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_4086bb
test al al
je r-xdata
push [ esp + 0x4 ]
mov ecx rw-data
call sub_40647c
xor al al
mov al 0x1
jmp r-xdata
retn 0x8
sub_4089b7
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
push 0x1
lea edx [ ebp - 0x1 ]
push edx
mov [ ebp - 0x1 ] 0x0
call [ eax + 0x8 ]
mov al [ ebp - 0x1 ]
leave
retn
sub_4089cf
push [ ecx + 0x4 ]
call [ SetEndOfFile@IAT ]
dec eax
neg eax
sbb eax eax
inc eax
retn
sub_4089df
retn 0x8
sub_408be7
push esi
mov esi ecx
call sub_408a05
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41a07b
pop ecx
sub_408da4
cmp [ esp + 0x4 ] 0xffffffff
je r-xdata
xor eax eax
test [ esp + 0x4 ] 0x10
je r-xdata
xor eax eax
inc eax
jmp r-xdata
retn 0x4
sub_408dbc
mov eax [ esp + 0x4 ]
shr eax 0xa
and eax 0x1
retn 0x4
sub_40902d
push [ esp + 0x4 ]
call sub_408dc9
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov al cl
retn 0x4
sub_409043
push 0x0
push [ esp + 0x8 ]
call sub_408e15
retn 0x4
sub_4091bb
mov eax ecx
or [ eax + 0x1004 ] 0xffffffff
xor ecx ecx
mov [ eax ] cx
mov [ eax + 0x1000 ] 0x1
retn
sub_4091d1
mov eax [ ecx + 0x1004 ]
cmp eax 0xffffffff
je r-xdata
retn
push eax
call [ FindClose@IAT ]
sub_4091e4
push esi
push [ esp + 0x8 ]
mov esi ecx
push esi
call sub_41a377
pop ecx
pop ecx
mov [ esi + 0x1000 ] 0x1
pop esi
retn 0x4
sub_409d84
push esi
push 0x72a8
mov esi ecx
push 0x0
push esi
call sub_41a3a0
add esp 0xc
lea ecx [ esi + 0x5168 ]
call sub_4125e9
lea ecx [ esi + 0x4020 ]
pop esi
jmp j_sub_40cdf1#2
sub_409e12
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_41a32f
test eax eax
pop ecx
lea eax [ esi + eax * 2 - 0x2 ]
ja r-xdata
pop esi
retn 0x4
mov eax esi
sub_409e2c
xor eax eax
cmp [ esp + 0x4 ] eax
je r-xdata
retn 0x4
push r--data
push [ esp + 0x8 ]
call sub_41c5a6
neg eax
pop ecx
sbb eax eax
pop ecx
neg eax
sub_409e65
xor eax eax
cmp [ esp + 0x4 ] 0x3a
sete al
retn 0x4
sub_40a272
push [ esp + 0x4 ]
call sub_40a108
mov edx [ esp + 0xc ]
mov ecx eax
sub ecx [ esp + 0x4 ]
sar ecx 0x1
sub edx ecx
push edx
push [ esp + 0xc ]
push eax
call sub_410792
retn 0xc
sub_40a81b
push esi
push 0x1
mov esi ecx
call sub_4094a8
and [ esi + 0x10 ] 0x0
mov eax esi
pop esi
retn
sub_40a82d
push esi
mov esi ecx
push [ esi + 0x10 ]
call sub_41c45d
pop ecx
mov ecx esi
pop esi
jmp sub_4094de
sub_40a841
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
pop esi
retn
push 0x40004
call sub_419c68
pop ecx
mov [ esi + 0x10 ] eax
sub_40b271
mov eax [ ecx + 0x18 ]
cmp eax [ ecx + 0x14 ]
jae r-xdata
xor eax eax
retn
lea edx [ eax + 0x1 ]
mov [ ecx + 0x18 ] edx
mov ecx [ ecx ]
movzx eax [ ecx + eax ]
retn
sub_40b445
mov edx [ esp + 0x4 ]
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] edx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x1c ] ecx
retn 0x4
sub_40b572
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
mov [ ecx + 0x2c ] eax
or [ ecx + 0x21c0 ] 0xffffffff
retn 0x8
mov [ ecx + 0x30 ] eax
sub_40b5dd
mov eax [ esp + 0x4 ]
mov [ ecx + 0x14 ] eax
mov eax [ esp + 0x8 ]
mov [ ecx + 0xc ] 0x1
mov [ ecx + 0x10 ] eax
retn 0x8
sub_40b87a
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] cl
retn
sub_40b887
push [ ecx ]
call sub_41a086
pop ecx
retn
sub_40b890
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_40b8fe
cmp [ ecx + 0x10 ] 0x0
je r-xdata
retn 0x4
push 0xffffffec
push [ esp + 0x8 ]
call [ GetWindowLongW@IAT ]
or eax __pe_WINRAR_export_address_table
push eax
push 0xffffffec
push [ esp + 0xc ]
call [ SetWindowLongW@IAT ]
sub_40c09b
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_40b925
mov ecx esi
call sub_40bde9
pop esi
retn 0x4
sub_40c72c
cmp [ rw-data ] 0x0
push esi
mov esi ecx
jne r-xdata
mov [ esi + 0x1 ] 0x1
mov eax esi
pop esi
retn
call sub_40c449
sub_40cb8c
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
pop esi
retn
push eax
call [ FreeLibrary@IAT ]
sub_40cdd9
push esi
mov esi ecx
push r--data
mov [ esi + 0x101 ] 0x0
call sub_40cd26
mov eax esi
pop esi
retn
sub_40cdf1
push 0x100
push ecx
mov [ ecx + 0x100 ] 0x0
call sub_40cc96
retn
j_sub_40cdf1#2
jmp sub_40cdf1
sub_40d204
push 0x0
push [ esp + 0x20 ]
push [ esp + 0x1c ]
call sub_40cecf
push eax
push 0x402
push 0x6a
push [ rw-data ]
call [ SendDlgItemMessageW@IAT ]
call sub_40ce09
retn 0x20
sub_40e08d
mov esi rw-data
mov ecx esi
call sub_4062e3
push 0x8
mov ecx esi
call sub_406257
mov esi [ ebp + 0x8 ]
call sub_40d6ee
mov eax r-xdata
retn
sub_40e0b2
mov esi [ ebp + 0x8 ]
call sub_40d6ee
mov eax r-xdata
retn
sub_40e50e
mov esi rw-data
mov ecx esi
call sub_4062e3
push 0x8
mov ecx esi
call sub_406257
mov esi [ ebp + 0x8 ]
call sub_40d6ee
mov eax r-xdata
retn
sub_40e533
mov esi [ ebp + 0x8 ]
call sub_40d6ee
mov eax r-xdata
retn
sub_4100ce
mov eax [ esp + 0x4 ]
and [ eax + 0x18 ] 0x0
and [ eax + 0x14 ] 0x0
mov [ eax ] 0x67452301
mov [ eax + 0x4 ] 0xefcdab89
mov [ eax + 0x8 ] 0x98badcfe
mov [ eax + 0xc ] 0x10325476
mov [ eax + 0x10 ] 0xc3d2e1f0
retn 0x4
sub_4102a4
mov eax [ esp + 0x4 ]
and [ eax + 0x20 ] 0x0
and [ eax + 0x24 ] 0x0
mov [ eax ] 0x6a09e667
mov [ eax + 0x4 ] 0xbb67ae85
mov [ eax + 0x8 ] 0x3c6ef372
mov [ eax + 0xc ] 0xa54ff53a
mov [ eax + 0x10 ] 0x510e527f
mov [ eax + 0x14 ] 0x9b05688c
mov [ eax + 0x18 ] 0x1f83d9ab
mov [ eax + 0x1c ] 0x5be0cd19
retn 0x4
sub_410728
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x10 ]
push esi
push edi
push [ esp + 0x14 ]
call [ OemToCharBuffA@IAT ]
mov [ edi + esi - 0x1 ] 0x0
pop edi
pop esi
retn 0xc
sub_410748
cmp [ esp + 0x4 ] 0x69
jne r-xdata
movzx eax [ esp + 0x4 ]
push eax
call CharUpperW
push 0x49
pop eax
jmp r-xdata
retn 0x4
sub_410763
mov eax [ esp + 0x4 ]
add eax 0xffffffd0
push 0x9
pop ecx
cmp ecx eax
sbb eax eax
inc eax
retn 0x4
j_sub_4119e6
jmp sub_4119e6
sub_4108e6
and [ ecx + 0x10 ] 0x0
retn
sub_4108eb
push esi
mov esi ecx
and [ esi + 0x10 ] 0x0
call sub_4125f7
and [ esi + 0x14 ] 0x0
and [ esi + 0x58 ] 0x0
pop esi
retn
sub_410979
xor eax eax
push esi
mov esi ecx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
call sub_4108eb
mov eax esi
pop esi
retn
sub_4109b7
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
call sub_41093d
mov eax [ ebp - 0x4 ]
leave
retn
sub_410b1f
call sub_410ae8
cmp eax 0x1
jae r-xdata
cmp eax 0x20
jbe r-xdata
xor eax eax
inc eax
retn
retn
push 0x20
pop eax
sub_410da8
mov ecx [ esp + 0x4 ]
call sub_410d51
xor eax eax
retn 0x4
sub_410ee5
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov ecx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
retn 0x4
sub_410ef8
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
mov edx [ esp + 0x4 ]
mov [ edx ] eax
mov [ edx + 0x4 ] ecx
retn 0x4
sub_410f35
mov eax [ esp + 0x4 ]
mov [ ecx ] eax
mov eax [ esp + 0x8 ]
mov [ ecx + 0x4 ] eax
retn 0x8
sub_41125d
push ebp
mov ebp esp
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e3b9
pop ebp
retn 0x18
sub_41127b
cmp [ esp + 0x4 ] 0x0
push [ esp + 0x8 ]
setne al
lea eax [ eax * 4 + 0x54 ]
push eax
call sub_40e0fb
retn 0x8
j_sub_40daf0
jmp sub_40daf0
sub_411518
push [ esp + 0xc ]
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
call sub_40dea3
retn 0xc
sub_41152e
mov al [ rw-data ]
retn
j_sub_40ce09
jmp sub_40ce09
j_sub_40e0c0
jmp sub_40e0c0
sub_4119e6
push 0xffffffff
push [ esp + 0xc ]
push 0xffffffff
push [ esp + 0x10 ]
push 0x1001
push 0x400
call [ CompareStringW@IAT ]
dec eax
dec eax
retn 0x8
CharUpperW
jmp [ CharUpperW@IAT ]
j_sub_411a6f
jmp sub_411a6f
sub_411b81
cmp [ ecx ] 0x0
je r-xdata
retn
push [ ecx + 0xac ]
and [ ecx ] 0x0
call sub_41a086
pop ecx
sub_411cf0
push esi
push 0x1
push rw-data
mov esi ecx
call sub_41d2cb
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_411d09
mov [ ecx ] r--data
jmp sub_41d345
sub_411d14
push esi
mov esi ecx
mov [ esi ] r--data
call sub_41d345
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41a07b
pop ecx
sub_411ed5
push 0x100
mov [ ecx + 0xa6c ] 0x1
add ecx 0x66c
push 0x0
push ecx
call sub_41a3a0
add esp 0xc
retn
sub_412180
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_41d2e8
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_412708
push esi
mov esi ecx
push 0x0
lea ecx [ esi + 0x4 ]
call sub_4094a8
and [ esi + 0x4ad4 ] 0x0
mov eax esi
pop esi
retn
sub_412aa2
mov eax ecx
xor ecx ecx
mov [ eax + 0x4a8c ] ecx
mov [ eax + 0x644 ] ecx
mov [ eax + 0x64c ] ecx
mov [ eax + 0x648 ] ecx
retn
sub_413a09
push esi
mov esi ecx
lea ecx [ esi + 0x28 ]
call sub_4125e9
lea ecx [ esi + 0x18 ]
call sub_4125e9
mov ecx esi
pop esi
jmp sub_4125e9
j_sub_4120b2
jmp sub_4120b2
sub_414485
add ecx 0x4a8c
jmp sub_411b81
sub_414490
push esi
push 0x1
mov esi ecx
call sub_412571
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov edx [ esp + 0x8 ]
mov [ ecx + eax * 4 - 0x4 ] edx
pop esi
retn 0x4
sub_4144ab
mov eax [ esp + 0x4 ]
cmp eax [ ecx + 0x8 ]
jbe r-xdata
mov [ ecx + 0x4 ] eax
sub eax [ ecx + 0x4 ]
push eax
call sub_412614
jmp r-xdata
retn 0x4
sub_4189c5
mov eax [ esp + 0x4 ]
inc [ eax + 0x10 ]
mov eax [ eax + 0x10 ]
retn 0x4
sub_4189d2
mov eax 0x80004002
retn 0x8
sub_4189da
xor eax eax
retn 0x8
sub_418a03
xor eax eax
retn 0x4
sub_418a82
mov eax 0x80004001
retn 0x8
sub_418a8a
mov eax 0x80004001
retn 0x4
sub_418a92
mov eax 0x80004001
retn 0xc
sub_418a9a
mov eax 0x80004001
retn 0x10
sub_418abc
xor eax eax
retn 0xc
sub_418ac1
mov eax [ esp + 0x18 ]
or [ eax ] 0xffffffff
mov eax 0x80020006
retn 0x18
sub_418ad0
mov eax 0x80020003
retn 0x24
sub_418d09
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
pop esi
retn
push eax
call [ DestroyWindow@IAT ]
and [ esi + 0x4 ] 0x0
sub_418efd
sub [ esp + 0x4 ] 0x4
jmp sub_418a82
sub_418f07
sub [ esp + 0x4 ] 0x4
jmp sub_4189df
sub_418f11
sub [ esp + 0x4 ] 0x4
jmp sub_4189c5
sub_418f1b
sub [ esp + 0x4 ] 0x8
jmp sub_4189c5
sub_418f25
sub [ esp + 0x4 ] 0xc
jmp sub_4189c5
sub_41917d
sub [ esp + 0x4 ] 0xc
jmp sub_418f2f
sub_419187
sub [ esp + 0x4 ] 0x4
jmp sub_418fda
sub_419191
sub [ esp + 0x4 ] 0x8
jmp sub_418fda
sub_41919b
sub [ esp + 0x4 ] 0xc
jmp sub_418fda
sub_4191a5
sub [ esp + 0x4 ] 0x4
jmp sub_418f2f
sub_4191af
sub [ esp + 0x4 ] 0x8
jmp sub_418f2f
sub_419806
push [ esp + 0x4 ]
call [ SetCurrentDirectoryW@IAT ]
neg eax
sbb eax eax
neg eax
retn 0x4
sub_419819
push [ esp + 0x4 ]
push [ esp + 0xc ]
call [ GetCurrentDirectoryW@IAT ]
neg eax
sbb eax eax
neg eax
retn 0x8
sub_419c68
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41a41a
sub_41a05c
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_41a07b
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41a086
sub_41a0dc
push 0x4
call sub_41ea89
pop ecx
retn
sub_41a258
push 0x4
call sub_41ea89
pop ecx
retn
sub_41c198
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax ] 0xe06d7363
je r-xdata
call sub_41e84a
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x24 ]
retn
sub_41c21e
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c175
sub_41c283
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
retn
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c175
sub_41c38b
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_420a93
pop ecx
retn
sub_41c45d
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41a07b
sub_41c589
call sub_4210ca
retn
sub_41c58f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_41c553
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_41c640
lea eax [ edx - 0x1 ]
pop ebx
retn
sub_41ca75
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jge r-xdata
pop ebp
retn
neg eax
sub_41caf5
push 0x4
call sub_41ea89
pop ecx
retn
sub_41d2cb
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
and [ eax + 0x8 ] 0x0
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_41d345
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_41a086
pop ecx
sub_41d35b
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_41d3b1
mov eax sub_422f76
mov [ rw-data ] eax
mov [ rw-data ] sub_42265d
mov [ rw-data ] sub_422611
mov [ rw-data ] sub_42264a
mov [ rw-data ] sub_4225b3
mov [ rw-data ] eax
mov [ rw-data ] sub_422eee
mov [ rw-data ] sub_4225cf
mov [ rw-data ] sub_422531
mov [ rw-data ] sub_4224be
retn
sub_41d411
mov edi edi
push ebp
mov ebp esp
call sub_41d3b1
call sub_423023
cmp [ ebp + 0x8 ] 0x0
mov [ rw-data ] eax
je r-xdata
fnclex
pop ebp
retn
call sub_422fba
sub_41d588
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_42309c
pop ecx
pop ecx
retn
sub_41d59c
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_421300
mov [ ebp - 0x4 ] 0xfffffffe
push eax
call sub_4212db
sub_41d5bd
mov eax [ ebp - 0x20 ]
jmp sub_41d5d5
sub_41d5c2
xor eax eax
inc eax
retn
sub_41d5d5
call sub_41f6a1
retn
_start
call sub_423965
jmp sub_41d45d
sub_41d603
mov [ ecx ] r--data
jmp sub_41d345
sub_41d75f
push [ ebp - 0x14 ]
call sub_41d694
pop ecx
retn
sub_41d7a3
call sub_41e574
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_41e574
add eax 0x90
dec [ eax ]
sub_41d846
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_41d84f
mov esp [ ebp - 0x18 ]
call sub_41e84a
sub_41d8fc
push 0x4
mov eax sub_429489
call sub_4239fb
call sub_41e574
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_41e883
call sub_41e896
sub_41d9d5
mov eax [ ebp - 0x14 ]
call sub_41d7be
retn
sub_41dc4c
xor eax eax
inc eax
retn
sub_41dc50
mov esp [ ebp - 0x18 ]
call sub_41e84a
sub_41dce5
xor eax eax
inc eax
retn
sub_41dce9
mov esp [ ebp - 0x18 ]
call sub_41e84a
sub_41e19b
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_41d2e8
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41e39a
call [ TlsAlloc@IAT ]
retn 0x4
sub_41e4e9
push 0xd
call sub_41ea89
pop ecx
retn
sub_41e4f2
push 0xc
call sub_41ea89
pop ecx
retn
sub_41e6a8
push 0xd
call sub_41ea89
pop ecx
retn
sub_41e6b4
push 0xc
call sub_41ea89
pop ecx
retn
sub_41e84a
push 0x8
push r--data
call sub_41f65c
call sub_41e574
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_423b49
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_41e86a
xor eax eax
inc eax
retn
sub_41e883
call sub_41e574
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_41e84a
call eax
sub_41e8ba
xor eax eax
inc eax
retn
sub_41e8ce
push sub_41e84a
call sub_41e2ad
pop ecx
mov [ rw-data ] eax
retn
sub_41ea89
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_41eb5a
push 0xa
call sub_41ea89
pop ecx
retn
sub_41f6a1
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_41f84c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41f969
push 0xc
push r--data
call sub_41f65c
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_41f6a1
retn
sub_41f986
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_41fa1b
call sub_41f9b9
mov [ rw-data ] eax
xor eax eax
retn
sub_41fb8c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_420afa
push 0xe
call sub_41ea89
pop ecx
retn
sub_420c4f
call sub_424f7e
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_41a086
pop ecx
retn
call sub_424d55
sub_420e26
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_420d50
add esp 0xc
pop ebp
retn 0x4
sub_420e59
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_423d75
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_420e8c
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_420d50
add esp 0xc
pop ebp
retn 0x8
sub_42101c
push 0x4
call sub_41ea89
pop ecx
retn
sub_4210a9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42107e
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_4210c1
push 0x8
call sub_41eb63
pop ecx
retn
sub_4210ca
push 0x8
call sub_41ea89
pop ecx
retn
sub_4212b0
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_41ea89
pop ecx
sub_4212c5
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_421199
add esp 0xc
pop ebp
retn
sub_4212db
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_421199
add esp 0xc
pop ebp
retn
sub_4212f1
push 0x1
push 0x0
push 0x0
call sub_421199
add esp 0xc
retn
sub_421300
push 0x1
push 0x1
push 0x0
call sub_421199
add esp 0xc
retn
sub_421802
push 0xd
call sub_41ea89
pop ecx
retn
sub_421bcd
push 0xd
call sub_41ea89
pop ecx
retn
sub_421c06
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_421a6c
pop ecx
mov [ rw-data ] 0x1
sub_421f3d
push 0xc
call sub_41ea89
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_42238b
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_422353
pop ecx
pop ecx
pop ebp
retn
sub_422611
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4225cf
add esp 0x10
pop ebp
retn
sub_42264a
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_4224be
pop ecx
pop ecx
pop ebp
retn
sub_42265d
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_422531
pop ecx
pop ecx
pop ebp
retn
sub_42308e
push sub_42304c
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_423902
xor eax eax
inc eax
retn
sub_423a31
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_423d49
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_423c80
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_423d94
call eax
retn
sub_423d97
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_423dc7
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_423dde
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_41f6a1
retn
push 0x8
call [ SetLastError@IAT ]
sub_423f2b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_4240f1
push [ ebp + 0x8 ]
call sub_4264a6
pop ecx
retn
sub_424900
push [ ebp + 0x8 ]
call sub_4264a6
pop ecx
retn
sub_4249e9
and [ rw-data ] 0x0
retn
sub_424b78
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_424ca5
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424b8e
add esp 0x10
pop ebp
retn
sub_424deb
push 0x1
call sub_41ea89
pop ecx
retn
sub_424f46
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_420d1e
pop ecx
pop ecx
retn
sub_424f75
push 0x1
call sub_41ea89
pop ecx
retn
sub_424f7e
push 0x1
call sub_424ea4
pop ecx
retn
sub_425083
push 0x4
call sub_41ea89
pop ecx
retn
sub_4250a5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_4250fa
push [ rw-data ]
call sub_41e328
pop ecx
retn
sub_42527b
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_41ea89
pop ecx
sub_4252b7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4252c6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_425cb0
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_41a670
sub_425cc6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_41a670
sub_426229
push 0x2
call sub_421055
pop ecx
retn
sub_4262f1
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_42629e
add esp 0x10
pop ebp
retn
sub_42649d
push 0xa
call sub_41ea89
pop ecx
retn
sub_426872
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_426706
add esp 0x14
pop ebp
retn
sub_426ae9
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_426abe
add esp 0xc
pop ebp
retn
sub_426bea
push esi
call sub_420ce2
pop ecx
retn
sub_426cc9
push [ ebp + 0x8 ]
call sub_4264a6
pop ecx
retn
sub_426e32
push [ ebp + 0x8 ]
call sub_4264a6
pop ecx
retn
sub_428d1d
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
sub_428ffc
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_429048
mov ecx [ ebp - 0x10 ]
jmp sub_408a05
sub_429050
mov ecx [ ebp - 0x10 ]
add ecx 0x1024
jmp sub_405dc9
sub_42905e
mov ecx [ ebp - 0x10 ]
add ecx 0x20e8
jmp sub_401001
sub_42906c
mov ecx [ ebp - 0x10 ]
add ecx 0x65e8
jmp sub_40121d
sub_42907a
mov ecx [ ebp - 0x10 ]
add ecx 0x8928
jmp sub_40121d
sub_429088
mov eax r--data
jmp sub_419d00
sub_429092
lea ecx [ ebp - 0x1c ]
jmp sub_4125e9
sub_42909a
mov eax r--data
jmp sub_419d00
sub_4290a4
lea ecx [ ebp - 0x24 ]
jmp sub_4125e9
sub_4290ac
lea ecx [ ebp - 0x34 ]
jmp sub_401195
sub_4290b4
mov eax r--data
jmp sub_419d00
sub_4290be
mov ecx [ ebp - 0x10 ]
jmp sub_408a05
sub_4290c6
mov ecx [ ebp - 0x10 ]
add ecx 0x1024
jmp sub_405dc9
sub_4290d4
mov ecx [ ebp - 0x10 ]
add ecx 0x20e8
jmp sub_401001
sub_4290e2
mov ecx [ ebp - 0x10 ]
add ecx 0x65e8
jmp sub_40121d
sub_4290f0
mov ecx [ ebp - 0x10 ]
add ecx 0x8928
jmp sub_40121d
sub_4290fe
push [ ebp + 0x8 ]
call sub_41a07b
pop ecx
retn
sub_429108
mov eax r--data
jmp sub_419d00
sub_429112
lea ecx [ ebp - 0x48 ]
jmp j_sub_4125e9
sub_42911a
lea ecx [ ebp - 0x58 ]
jmp sub_401195
sub_429122
mov eax r--data
jmp sub_419d00
sub_42912c
lea ecx [ ebp - 0xe6ec ]
jmp sub_415195
sub_429137
mov eax r--data
jmp sub_419d00
sub_429141
lea ecx [ ebp + 0x28 ]
jmp j_sub_4125e9
sub_429149
mov eax r--data
jmp sub_419d00
sub_429153
mov ecx [ ebp - 0x10 ]
jmp sub_409d84
sub_42915b
mov ecx [ ebp - 0x10 ]
add ecx 0x92d4
jmp j_sub_4125e9
sub_429169
mov ecx [ ebp - 0x10 ]
add ecx 0x9330
jmp j_sub_4125e9
sub_429177
mov ecx [ ebp - 0x10 ]
add ecx 0x938c
jmp j_sub_4125e9
sub_429185
mov ecx [ ebp - 0x10 ]
add ecx 0x93e8
jmp j_sub_4125e9
sub_429193
mov ecx [ ebp - 0x10 ]
add ecx 0x9444
jmp j_sub_4125e9
sub_4291a1
mov eax r--data
jmp sub_419d00
sub_4291ab
push j_sub_40cdf1
push 0x4
push 0x12c
push [ ebp - 0x10 ]
call sub_41c1d3
retn
sub_4291c0
push j_sub_40cdf1
push 0x4
push 0x178
mov eax [ ebp - 0x10 ]
add eax 0x4b4
push eax
call sub_41c1d3
retn
sub_4291db
mov eax r--data
jmp sub_419d00
sub_4291e5
lea ecx [ ebp - 0x20 ]
jmp sub_4125e9
sub_4291ed
lea ecx [ ebp - 0x3048 ]
jmp sub_408a05
sub_4291f8
mov eax r--data
jmp sub_419d00
sub_429202
lea ecx [ ebp - 0x1030 ]
jmp sub_408a05
sub_42920d
lea ecx [ ebp - 0x50a0 ]
jmp sub_408a05
sub_429218
mov eax r--data
jmp sub_419d00
sub_429222
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_401001
sub_42922d
mov eax r--data
jmp sub_419d00
sub_429237
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_401001
sub_429242
push [ ebp + 0x8 ]
call sub_41a07b
pop ecx
retn
sub_42924c
mov eax r--data
jmp sub_419d00
sub_429256
lea ecx [ ebp - 0x1040 ]
jmp sub_408a05
sub_429261
lea ecx [ ebp - 0x1c ]
jmp sub_4125e9
sub_429269
mov eax r--data
jmp sub_419d00
sub_429273
lea ecx [ ebp - 0x115c ]
jmp sub_408a05
sub_42927e
lea ecx [ ebp - 0x138 ]
jmp j_sub_40cdf1#2
sub_429289
mov eax r--data
jmp sub_419d00
sub_429293
lea ecx [ ebp - 0xe100 ]
jmp sub_401228
sub_42929e
mov eax r--data
jmp sub_419d00
sub_4292a8
lea ecx [ ebp - 0x2034 ]
jmp sub_408a05
sub_4292b3
mov eax r--data
jmp sub_419d00
sub_4292bd
lea ecx [ ebp - 0x1c ]
jmp sub_401195
sub_4292c5
mov eax r--data
jmp sub_419d00
sub_4292cf
mov ecx [ ebp - 0x10 ]
add ecx 0x4020
jmp j_sub_40cdf1#2
sub_4292dd
mov ecx [ ebp - 0x10 ]
add ecx 0x5168
jmp sub_4125e9
sub_4292eb
mov eax r--data
jmp sub_419d00
sub_4292f5
mov ecx [ ebp - 0x10 ]
add ecx 0x40
jmp sub_405dc9
sub_429300
mov ecx [ ebp - 0x10 ]
add ecx 0x1100
jmp sub_405dc9
sub_42930e
mov ecx [ ebp - 0x10 ]
add ecx 0x2208
jmp sub_4095e4
sub_42931c
mov ecx [ ebp - 0x10 ]
add ecx 0x2d6c
jmp sub_4095e4
sub_42932a
mov eax r--data
jmp sub_419d00
sub_429334
lea ecx [ ebp - 0x1040 ]
jmp sub_408a05
sub_42933f
mov eax r--data
jmp sub_419d00
sub_429349
lea ecx [ ebp - 0x6470 ]
jmp sub_406e41
sub_429354
mov eax r--data
jmp sub_419d00
sub_42935e
lea ecx [ ebp - 0xc0c0 ]
jmp sub_401228
sub_429369
lea ecx [ ebp - 0x20 ]
jmp sub_4125e9
sub_429371
mov eax r--data
jmp sub_419d00
sub_42937b
lea ecx [ ebp - 0x7c90 ]
jmp sub_4091d1
sub_429386
mov eax r--data
jmp sub_419d00
sub_429390
lea ecx [ ebp - 0x566c ]
jmp sub_408a05
sub_42939b
mov eax r--data
jmp sub_419d00
sub_4293a5
push [ ebp - 0x10 ]
call sub_41a07b
pop ecx
retn
sub_4293af
mov eax r--data
jmp sub_419d00
sub_4293b9
push [ ebp - 0x10 ]
call sub_41c45d
pop ecx
retn
sub_4293c3
mov eax r--data
jmp sub_419d00
sub_4293cd
lea ecx [ ebp - 0x30 ]
jmp sub_4125e9
sub_4293d5
mov eax r--data
jmp sub_419d00
sub_4293df
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_4094de
sub_4293ea
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_4125e9
sub_4293f5
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_4125e9
sub_429400
mov ecx [ ebp - 0x10 ]
add ecx 0x44
jmp sub_4125e9
sub_42940b
mov ecx [ ebp - 0x10 ]
add ecx 0x4b38
jmp j_sub_4120b2
sub_429419
mov ecx [ ebp - 0x10 ]
add ecx 0x98d0
jmp sub_414485
sub_429427
mov ecx [ ebp - 0x10 ]
add ecx 0xe65c
jmp sub_40a82d
sub_429435
mov ecx [ ebp - 0x10 ]
add ecx 0xe694
jmp sub_4094de
sub_429443
mov ecx [ ebp - 0x10 ]
add ecx 0xe6a4
jmp sub_4125e9
sub_429451
mov ecx [ ebp - 0x10 ]
add ecx 0xe6b4
jmp sub_4125e9
sub_42945f
mov ecx [ ebp - 0x10 ]
add ecx 0xe6c4
jmp sub_4125e9
sub_42946d
mov eax r--data
jmp sub_419d00
sub_429477
lea ecx [ ebp - 0x24 ]
jmp sub_4125e9
sub_42947f
mov eax r--data
jmp sub_419d00
sub_429489
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_41e29e
mov eax r--data
jmp sub_419d00
sub_4294a4
mov ecx rw-data
jmp sub_40555e
sub_4294ae
mov ecx rw-data
jmp sub_4062cb
sub_4294b8
mov ecx rw-data
call sub_40b87a
push sub_429548
call sub_41c58f
pop ecx
retn
sub_4294ce
push sub_429552
call sub_41c58f
pop ecx
retn
sub_4294da
mov ecx rw-data
call sub_40cdd9
push sub_429566
call sub_41c58f
pop ecx
retn
sub_4294f0
mov ecx rw-data
call sub_4054af
push sub_429570
call sub_41c58f
pop ecx
retn
sub_429506
mov ecx rw-data
call sub_40cdd9
push sub_42955c
call sub_41c58f
pop ecx
retn
sub_42951c
call sub_410a5d
mov [ rw-data ] eax
retn
sub_429527
push rw-data
call [ InitializeCriticalSection@IAT ]
push sub_42957a
call sub_41c58f
pop ecx
retn
sub_42953e
mov ecx rw-data
jmp sub_411adc
sub_429548
mov ecx rw-data
jmp sub_40b887
sub_429552
mov ecx rw-data
jmp sub_40cb8c
sub_42955c
mov ecx rw-data
jmp j_sub_40cdf1#2
sub_429566
mov ecx rw-data
jmp j_sub_40cdf1#2
sub_429570
mov ecx rw-data
jmp sub_40e377
sub_42957a
push rw-data
call [ DeleteCriticalSection@IAT ]
retn
sub_429586
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_41d345
