sub_40154a
loop rwxdata
pushad
adc [ ecx + 0x60608bd2 ] ch
pushad
pop ecx
int1
adc [ edi + edx * 8 + 0x64 ] esp
outsb
frstor [ ecx + 0x38c0b562 ]
pop esi
pushad
pushad
cmp [ edi + 0x5f ] ch
pushad
pushad
fnclex
rcr [ edi + 0x60 ] 0x1
pushad
adc bl bl
loop rwxdata
mov [ 0x569df2a9 ] al
pushad
pushad
adc [ ecx + 0x60608bd2 ] ch
pushad
fcmovnu st3
stosb [ edi ]
test eax 0x5f380fa9
pop edi
pushad
pushad
pop esi
pushad
pushad
adc [ ecx + 0x6060f7d2 ] ch
pushad
mov eax [ 0x605fdce2 ]
pushad
test eax 0xa1a9a9a9
jecxz rwxdata
test eax 0x6060f7d2
pushad
pushad
mov eax [ 0xffffffffa9ac74e3 ]
test eax 0x60608150
loopne rwxdata
loopne rwxdata
stosb [ edi ]
test eax 0x59a0e390
jecxz rwxdata
mov ah 0x56
pushad
pushad
pop edi
xor ebp [ eax - 0x23 ]
0x60605e9f 0x33a9
mov ah 0x56
pushad
pushad
pop edi
pop ecx
jecxz rwxdata
mov bl 0x56
pushad
pushad
pop edi
xor edi [ eax - 0x23 ]
0x60605fdc 0x33a9
test eax 0x606060a9
pushad
mov [ 0x6058e8e2 ] al
pushad
pop edi
loopne rwxdata
test eax 0xe3a1a9a9
and al 0xaa
pushad
pushad
pushad
pushad
pushad
fucomp st3
and al 0xaa
test eax 0x6f335ea9
sub_4016f0
and [ ebx - 0x259a5657 ] ch
lahf
pop esi
pushad
pushad
xor bl [ ecx - 0x1d ]
and [ ebx + 0x6060a9a9 ] ch
pushad
pushad
insd
xchg edi eax
fucomi st3
pop ds
lodsb [ esi ]
test eax 0xdb0f11a9
0x60605ea3 0xa911
sub_401727
pushad
pushad
pushad
loopne rwxdata
sbb eax 0x2d838014
xor [ edi ] 0xff80
sbb [ esp + edx ] dl
adc [ ecx + 0x6f ] bh
jpe rwxdata
pop edi
push es
pop ecx
in al 0xf4
pushad
pushad
pushad
loopne rwxdata
in al 0xca
stosb [ edi ]
test eax 0x5729dfa9
outsb
jo rwxdata
pop ebx
push esi
pop ebx
push esi
pushad
push es
fucomi st3
je rwxdata
pushad
mov ah 0x56
pushad
pushad
pushad
pop ecx
in al 0xee
pop edi
pushad
pushad
mov bh 0x6d
test eax 0xcbb7a9a9
pushad
pushad
pushad
mov eax 0x60606045
sbb eax 0x231a1a19
lodsb [ esi ]
out 0x20 eax
pushad
pushad
sbb [ ecx - 0x1d ] 0x55
pop edi
pushad
pushad
jecxz rwxdata
adc [ ecx + 0x6036ac33 ] ebp
adc ch [ ecx + 0x6060c3d2 ]
test eax 0x1fcbdba9
lodsb [ esi ]
test eax 0x70f238a9
push esi
[ ecx + 0x6056e9f2 ]
test eax 0x6461a2a9
mov [ 0x425f5f21 ] al
xlat
and [ esi - 0x25 ] ebx
jecxz rwxdata
pop ecx
in al 0x97
pop edi
pushad
pushad
pop eax
fbld [ edi + 0x60605f60 ]
test eax 0x74ebdba9
cmpsb [ esi ] [ edi ]
test eax 0x3401ada9
pop ebx
or ah [ ecx - 0x56538b1d ]
test eax 0x60603370
mov ch 0x29
or dh [ esi ]
push cs
adc [ ecx - 0x56eeef70 ] ebp
xor ebp [ esi + esi - 0x2d56eda1 ]
retn
xor eax ecx
cmp [ eax + 0x5f ] ah
pushad
pushad
adc [ ecx + 0x5f36ac33 ] ebp
adc ch [ ecx + 0x6060c3d2 ]
pushad
insd
xchg edi eax
adc bl bl
loop rwxdata
test eax 0x12976da9
test eax 0x605f4bd2
pushad
xlat
xlat
adc al 0x67
fstp [ fs : edi + 0x60a7df58 ]
pop edi
pushad
pushad
aad 0x60
xlat
and [ edx + 0x21 ] esp
pop eax
pushad
push edi
adc [ ecx + 0x5f36ac33 ] ebp
adc ch [ ecx + 0x6060c3d2 ]
pushad
jecxz rwxdata
lodsb [ esi ]
test eax 0x12a910a9
inc edi
pushad
push edi
pushad
pushad
adc [ ecx ] dl
adc [ ecx + 0x605f5fd2 ] ebp
pushad
frstor [ ecx + 0x5f9fdd50 ]
frstor [ edi + 0x38c33350 ]
pushad
pop edi
pushad
pushad
fninit
je rwxdata
pushad
pushad
loopne rwxdata
pop ecx
in al 0xc0
pop edi
pushad
pushad
pop eax
pushad
fucomi st3
je rwxdata
fcomi st3
je rwxdata
test eax 0x33a910a9
lodsb [ esi ]
pushad
adc ch [ ecx + 0x6060c3d2 ]
pushad
adc ch [ edi + 0x60606020 ]
jmp rwxdata
mov ecx 0x5f606056
pop ecx
jecxz rwxdata
pop gs
adc dl [ ebx - 0x25 ]
jmp rwxdata
test eax 0x606060a9
pushad
insd
xchg edi eax
fucomi st3
pop ds
lodsb [ esi ]
test eax 0xdb0f11a9
0x60605ea3 0xa911
sub_40214f
pop eax
pushad
pushad
aad 0xda
xchg ebx eax
pop eax
pushad
pushad
aad 0xd4
insd
xchg [ eax + 0x60 ] ebx
pushad
aad 0xe4
insd
mov ebx [ eax + 0x60 ]
pushad
lahf
sahf
dec ebp
lahf
mov al [ 0x6fd45d45 ]
xchg [ eax + 0x60 ] ebx
pushad
pop ebp
in al 0x6f
mov ebx [ eax + 0x60 ]
pushad
xlat
in al 0x6d
xchg [ eax + 0x60 ] ebx
pushad
xlat
aam 0x6d
mov ebx [ eax + 0x60 ]
pushad
fnsave [ ebp - 0x1a9cd2a8 ]
loopne rwxdata
dec edx
pushad
pushad
pushad
mov eax 0xa9a9a90e
fnstsw [ ecx + 0x9b2335f ]
pushad
pushad
fnsave [ edi - 0x189cd2a8 ]
loopne rwxdata
inc esp
push [ eax + 0x60 ]
pushad
pushad
aad 0x24
test [ ebp + ebx * 8 - 0x48 ] cl
sub [ ecx - 0x2f2f2f70 ] 0xffffffd0
rcl al 0x1
sar [ eax ] 0x1
sti
mov ecx 0x9b2335f
pushad
pushad
xlat
0x588f
sub_40221a
test eax 0xa9a569f3
test eax 0x1ab86036
test al 0xa9
test eax 0xaf7fe3d7
test eax 0x6057b8a9
pushad
pushad
aas
inc esp
xor bh [ edi ]
xor [ edi ] dh
insd
outsb
pushad
test eax 0xa9af7fd3
test eax 0xa511e3d7
test eax 0x6062b8a9
pushad
pushad
cmp dh [ esp + eax * 2 ]
cmp al 0x3c
pushad
test eax 0xa9af7fd3
test eax 0xa509e3d7
test eax 0x6061b8a9
pushad
pushad
xor ebp [ 0x6e6d2e43 ]
pushad
test eax 0xa9af7fd3
test eax 0xa51de3d7
test eax 0xadce38a9
mov [ ecx + ebp * 4 - 0xd ] fs
imul esp [ ebp + 0x6036a9a9 ] 0xa9b1bbb8
test eax 0x6060a938
pushad
fcmovne st3
jb rwxdata
adc [ ebp + 0x62b8a9a9 ] esp
pushad
test eax 0x60360da9
test eax 0xac23d790
mov eax 0x60605f0c
rcr [ 0x56e580e7 ] 0xe3
pushad

sub_4022b3
push esi
in eax 0x56
add esp [ eax + 0x7e ]
lodsb [ esi ]
xlat
xchg ch ah
push esi
out dx eax
pushad
xchg ebx eax
out 0xc5 al
pop edx
in eax 0x56
pushad
insb
cwde
add esi [ 0x60e756e5 ]
inc ebp
movsb [ edi ] [ esi ]
enter 0xe534 0x56
jmp rwxdata
push ds

sub_4024ac
imul esp [ ebp + 0x6036a9a9 ] 0xa9b3eab8
test eax 0xa91090a9
shl [ 0xffffffffb8dda9a9 ] cl
pop ebp
loope rwxdata
mov al 0xa9
test eax 0x20e3db10
mov al 0xa9
test eax 0x36603610
pushad
pushad
pushad
pushad
pushad
fninit
int 0xb4
test eax 0xa90d10a9
shr edi cl
mov al 0xa9
test eax 0x605f76b7
pushad
mov eax 0x60606058
aas
inc esp
xor dh [ eax ]
aas
cmp eax 0xd3a96035
jg rwxdata
imul esp [ ebp + 0x6036a9a9 ] 0xa9b376b8
test eax 0xaf5be3d7
test eax 0x29e3dba9
mov ah 0xa9
test eax 0x36603610
pushad
test eax 0xa9af57d3
test eax 0xa9ac23d7
rcr [ ebx - 0x51 ] cl
test eax 0x60f16ba9
pushad
pushad
pop ecx
in al 0xf5
pushad
pushad
pushad
test eax 0xd3a9ac33
sub [ edi - 0x141f5657 ] 0xffffffdc
stosd [ edi ]
test eax 0x2b345fa9
fcomi st3
in al 0xb0
test eax 0x6060b8a9
pushad
pushad
or edi ebx
mov ecx 0x60604f11
mov eax 0x60606074
xchg [ eax + 0xf ] esp
arpl [ edi - 0x3c9feaa0 ] si
pushad

aad 0x1b
lodsb [ esi ]
cwde
xor edi [ ebx - 0x25 ]
jecxz rwxdata
test eax 0xd3a91090
xor al 0xa5
test eax 0x5db8dda9
test eax 0x713538a9
sub dl [ fs : eax ]
pushad
mov eax 0xa9a9b30a
pushad
pushad
test eax 0x6de3d890
cmpsd [ esi ] [ edi ]
test eax 0x5d5a38a9
retn
sub_4025b2
pop edi
pop edi
pop edi
mov esp 0xb95f6360
pushad
push edi
pop edi
inc edx
pushad
pop ebx
pop edi
xor eax 0x605f4f60
pop edi
push ebx
pop edi
dec edx
pushad
inc edi
pop edi
dec edx
pushad
dec ebx
pop edi
pushad
pushad
pop es
pop ecx
int1
dec edi
xlat
insb
outsb
inc edx
frstor [ edi ]
pop esi
pushad
xor al 0x55
pop ecx
int1
divps xmm3 [ ebp - 0x5a ]
fstp [ edi - 0x22474a9c ]
jmp rwxdata
test eax 0xa9af07d3
test eax 0xbd3a912
scasd [ edi ]
test eax 0xb84cb5a9
pushad
pushad
pushad
pushad
or [ ebx - 0x66 ] bh
dec edi
pushad
pushad
test eax 0xdb10a833
jecxz rwxdata
mov al 0xa9
test eax 0xd8d3a910
stosd [ edi ]
test eax 0x9d973fa9
pop ecx
pop eax
pushad
or eax 0x103e3334
aas
xor al 0x38
dec eax
js rwxdata
or al 0xa6
push esi
dec eax
or eax 0x11142219
pop ds
push cs
and ecx [ ebx + 0x2d2d3f3c ]
inc ebx
sub eax 0x3434380c
xor [ ebp + 0x3c3c4338 ] cl
or al 0x39
xor [ ebx + 0x3a ] al
or al 0x3d
cmp [ ebx ] edi
cmp edi [ edi ]
cmp al [ edx + edx + 0x64 ]
jae rwxdata
aas
cmp eax 0x43340d35
inc edx
adc [ eax ] 0x37
cmp eax 0x3c3f430e
cmp al 0x27
aas
xor [ eax ] dh
cmp al 0x43
jpe rwxdata
cmp ch [ 0x2e3f3143 ]
jpe rwxdata
pushad
outsd
outsd
jpe rwxdata
or eax 0x31344239
aas
inc ebx
or al 0x1b
aaa
cmp eax 0x392d392e
inc edx
xor al 0xc
pop ds
cmp eax 0x43323734
or [ 0x30333443 ] 0xc
pop ss
cmp ch [ 0x3c3c3f34 ]
inc ebx
inc esp
sbb [ 0x39303b39 ] 0x3a
inc ebx
cmp dh [ ebp + 0x4856a60c ]
pushad
inc ebx
inc edx
inc ebx
cmp ch [ 0x2e3f3143 ]
jpe rwxdata
pushad
pop edi
dec esi
pop edx
dec ebp
pushad
and [ esi ] esi
push edi
pop ebx
pop edi
inc ecx
pushad
in eax 0x5f
push esp
aas
xor [ eax ] dh
cmp al 0x43
jpe rwxdata
inc ecx
rcr [ edi + 0x70 ] 0x1
pushad
push esp
aas
xor [ eax ] dh
cmp al 0x43
jpe rwxdata
movsd [ edi ] [ esi ]
pop ebp
push edi
pushad
outsb
outsb
inc ebx
inc ebx
push 0x60603d3f
push esi
pop ebx
jmp [ eax + 0x13 ]
aas
cmp al 0x3c
daa
inc ebx
inc edx
inc ebx
cmp ch [ 0x2e3f3143 ]
jpe rwxdata
inc ebx
inc edx
inc ebx
pop edi
pushad
pushad
pushad
lahf
pop esi
pushad
test eax 0x23a9a9a9
pop edi
pop eax
pushad
cmp eax [ ebx + 0x3a ]
xor edx [ eax ]
aas
sub eax 0x5f5b572d
inc ecx
pushad
adc [ eax - 0x24 ] ah
pop edi
pushad
sub_402914
add [ eax ] al
add [ eax ] al
mov al [ 0xffffffffe0004013 ]
add [ eax ] eax
add bh bh
inc [ eax ]
add [ eax ] ah
das
inc eax
add [ eax + 0x402f ] al
add [ eax ] al
add [ eax + 0x3800402f ] ah
sub [ eax ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] eax
add [ eax ] al
mov al 0x30
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2000402f ] dl
xor [ eax ] al
shl [ ecx ] 0x40
add [ eax - 0x3fffbfcf ] dh
xor [ eax ] eax
0xe400403f 0x403f
sub_402f0b
dec [ ebp - 0x5effbfbc ]
inc esp
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x1 ] ch
push sub_40455a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x1e0
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_402fc0
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_402fc0
push 0xffffffff
push sub_404586
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
call Ordinal_MFC42_366
lea ecx [ esi + 0xc0 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_529
lea ecx [ esi + 0x140 ]
mov [ esp + 0x10 ] 0x1
call Ordinal_MFC42_554
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_403040
push 0xffffffff
push sub_4045a6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
lea ecx [ esi + 0x140 ]
mov [ esp + 0x10 ] 0x1
call Ordinal_MFC42_807
lea ecx [ esi + 0xc0 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_796
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call Ordinal_MFC42_674
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4030b0
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
call Ordinal_MFC42_4457
cmp eax 0xffffffff
je rwxdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0x4
push 0xe800
xor eax eax
sub esp 0x10
xor ecx ecx
mov ebp esp
xor edx edx
lea edi [ esi + 0x140 ]
push 0x50402834
mov [ ebp ] eax
xor ebx ebx
push 0x800
push esi
mov [ ebp + 0x4 ] ecx
mov ecx edi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] ebx
call Ordinal_MFC42_6625
test eax eax
je rwxdata
push 0x80
mov ecx edi
call Ordinal_MFC42_4163
test eax eax
je rwxdata
lea ebx [ esi + 0xc0 ]
push 0xe801
push 0x50008200
push esi
mov ecx ebx
call Ordinal_MFC42_2117
test eax eax
je rwxdata
push 0x4
push rwxdata
mov ecx ebx
call Ordinal_MFC42_6000
test eax eax
je rwxdata
push 0xf000
mov ecx edi
call Ordinal_MFC42_2626
push 0xf000
mov ecx esi
call Ordinal_MFC42_2627
push 0x0
push 0x0
push edi
mov ecx esi
call Ordinal_MFC42_2494
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
sub_403280
push 0xffffffff
push sub_4045c2
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_1134
add esp 0x4
mov ecx esi
call Ordinal_MFC42_2621
push rwxdata
mov ecx esi
call Ordinal_MFC42_6117
push 0x4
mov ecx esi
call Ordinal_MFC42_4159
push 0x6c
call Ordinal_MFC42_823
add esp 0x4
mov [ esp + 0x4 ] eax
test eax eax
mov [ esp + 0x34 ] 0x0
je rwxdata
xor eax eax
push rwxdata
push rwxdata
push rwxdata
push 0x80
mov ecx eax
call Ordinal_MFC42_520
jmp rwxdata
mov ecx [ esi + 0x20 ]
push 0x0
call Ordinal_MFC42_6215
mov esi [ esi + 0x20 ]
mov edx [ esi + 0x20 ]
push edx
call [ UpdateWindow@IAT ]
lea ecx [ esp + 0x8 ]
mov [ esp + 0x34 ] 0xffffffff
call Ordinal_MFC42_617
mov ecx [ esp + 0x2c ]
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
lea ecx [ esp + 0x8 ]
mov [ esp + 0x34 ] 0xffffffff
call Ordinal_MFC42_617
xor eax eax
pop esi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
push eax
mov ecx esi
mov [ esp + 0x38 ] 0xffffffff
call Ordinal_MFC42_986
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_296
lea eax [ esp + 0x8 ]
mov ecx esi
push eax
mov [ esp + 0x38 ] 0x1
call Ordinal_MFC42_5214
lea ecx [ esp + 0x8 ]
push ecx
mov ecx esi
call Ordinal_MFC42_5301
test eax eax
jne rwxdata
sub_403410
push 0xffffffff
push sub_4045d8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x60
lea ecx [ esp ]
call sub_4033a0
lea ecx [ esp ]
mov [ esp + 0x68 ] 0x0
call Ordinal_MFC42_2514
lea ecx [ esp ]
mov [ esp + 0x68 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn
sub_403490
push 0xffffffff
push sub_4045fa
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x54
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_403530
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4035c0
push 0xffffffff
push sub_40461a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x44
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_403660
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4036f0
mov eax 0x237c
call sub_404320
push esi
mov [ esp + 0x14 ] ecx
push edi
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x21 ]
mov [ esp + 0x20 ] 0x0
push rwxdata
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0x24 ]
push eax
call [ sprintf@IAT ]
add esp 0x8
or ecx 0xffffffff
xor esi esi
test eax eax
mov [ esp + ecx + 0x125 ] dl
jle rwxdata
mov [ esp + ecx + 0xf34 ] 0x2b
inc eax
add ecx 0x2
cmp eax 0x9
jl rwxdata
mov [ esp + ecx + 0x124 ] 0x20
mov dl al
add dl 0x31
test eax eax
mov [ esp + ecx + 0xf35 ] dl
jle rwxdata
mov [ esp + esi + 0xf45 ] 0x0
mov [ esp + esi + 0x135 ] 0x0
add esi 0x12
cmp ecx 0xe0f
jl rwxdata
xor eax eax
push ebx
xor ebx ebx
xor edi edi
push ebp
mov [ esp + 0x14 ] edi
inc edi
cmp edi 0x8
mov [ esp + 0x14 ] edi
jl rwxdata
lea esi [ edi + 0x1 ]
cmp esi 0x8
mov [ esp + 0x1c ] esi
jge rwxdata
lea ecx [ edi + ebx * 8 ]
mov eax ebx
add eax ecx
shl eax 0x1
inc ebx
cmp edi 0x7
mov [ esp + eax + 0xf3d ] 0x20
mov [ esp + eax + 0x12d ] 0x2b
jge rwxdata
xor ebx ebx
xor ebp ebp
lea ecx [ ebx + ebx * 8 ]
lea eax [ ecx + esi ]
add ecx edi
shl eax 0x1
shl ecx 0x1
inc ebx
mov [ esp + eax + 0xf3d ] 0x20
mov [ esp + eax + 0x12d ] 0x2b
cmp esi 0x7
mov [ esp + ecx + 0xf3d ] 0x20
mov [ esp + ecx + 0x12d ] 0x2b
jge rwxdata
add edi eax
movsx eax [ esi + ecx ]
sub eax 0x30
inc ecx
cmp dl 0x20
je rwxdata
inc esi
cmp esi 0x8
mov [ esp + 0x1c ] esi
jl rwxdata
lea edx [ esi + 0x1 ]
lea ebp [ esi + 0x2 ]
mov [ esp + 0x10 ] edx
mov [ esp + 0x18 ] ebp
mov dl [ esi + ecx - 0x1 ]
cmp dl 0x2b
je rwxdata
add eax edi
mov ecx 0x1
mov [ esp + ebp + 0x1d4c ] eax
xor esi esi
mov eax ecx
lea edi [ esp + ebx + 0x12c ]
inc ecx
cmp ecx 0x11
jl rwxdata
movsx edx dl
lea eax [ eax + eax * 4 ]
lea eax [ edx + eax * 2 - 0x30 ]
jmp rwxdata
mov edx [ esp + 0x10 ]
inc edx
inc ebp
cmp ebp 0x9
mov [ esp + 0x10 ] edx
mov [ esp + 0x18 ] ebp
jl rwxdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
lea edi [ ebx + ebx * 8 ]
add ecx edi
lea edx [ edi + esi ]
lea esi [ edi + eax ]
mov eax 0x8
sub eax ebp
shl ecx 0x1
shl edx 0x1
shl esi 0x1
add ebx eax
add esi ecx
lea ecx [ ebx + eax ]
movsx ecx [ esp + ecx + 0x12d ]
sub ecx 0x30
inc eax
cmp dl 0x20
je rwxdata
mov eax [ esp + 0x10 ]
lea edx [ ebx + ebx * 8 ]
add eax edx
lea ecx [ edx + esi ]
add edx edi
shl eax 0x1
shl ecx 0x1
shl edx 0x1
mov [ esp + eax + 0xf3d ] 0x20
mov [ esp + eax + 0x12d ] 0x2b
inc ebx
mov [ esp + ecx + 0xf3d ] 0x20
mov [ esp + ecx + 0x12d ] 0x2b
cmp ebp 0x8
mov [ esp + edx + 0xf3d ] 0x20
mov [ esp + edx + 0x12d ] 0x2b
mov [ esp + 0x24 ] ebx
jge rwxdata
lea eax [ edi + ebp ]
add edi 0x9
shl eax 0x1
add ecx 0x12
add edx 0x12
mov [ esp + eax + 0xf3d ] 0x20
mov [ esp + eax + 0x12d ] 0x2b
mov [ esp + ecx + 0xf2b ] 0x20
mov [ esp + ecx + 0x11b ] 0x2b
mov [ esp + edx + 0xf2b ] 0x20
mov [ esp + edx + 0x11b ] 0x2b
mov [ esp + esi + 0xf3d ] 0x20
mov [ esp + esi + 0x12d ] 0x2b
add esi 0x12
inc ebp
cmp ebp 0x8
jl rwxdata
mov esi [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
mov edi [ esp + 0x14 ]
mov dl [ edi + eax ]
cmp dl 0x2b
je rwxdata
add ecx esi
add ebx 0x12
mov [ esp + ebp + 0x206c ] ecx
add ebp 0x4
cmp ebx 0xe10
jl rwxdata
inc eax
cmp eax 0x11
jl rwxdata
movsx edx dl
lea ecx [ ecx + ecx * 4 ]
lea ecx [ edx + ecx * 2 - 0x30 ]
jmp rwxdata
mov eax 0x1
xor edi edi
mov ecx eax
lea esi [ esp + ebx + 0xf3d ]
mov edi [ esp + 0x20 ]
push 0x98967f
push 0x186a0
mov ecx edi
call sub_403e70
mov esi eax
pop ebp
cmp esi 0x54c563
pop ebx
jge rwxdata
xor eax eax
mov ecx 0x54db15
mov eax 0x79866dc7
sub ecx esi
mul ecx
sub ecx edx
shr ecx 0x1
add ecx edx
shr ecx 0xc
lea edx [ ecx + ecx * 8 ]
lea eax [ ecx + edx * 4 ]
lea eax [ eax + eax * 2 ]
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 ]
lea ecx [ eax + esi ]
lea esi [ ecx + eax * 4 ]
mov ecx edi
call sub_403a30
cmp esi [ esp + eax + 0x2064 ]
je rwxdata
add eax 0x4
cmp eax 0x320
jl rwxdata
cmp esi [ esp + eax + 0x1d44 ]
je rwxdata
sub_403a30
sub esp 0x74
push ebx
mov ebx [ malloc@IAT ]
push ebp
push esi
push edi
mov ebp ecx
push 0x14
mov [ esp + 0x48 ] ebp
call ebx
mov edi eax
push 0x14
mov [ esp + 0x40 ] edi
call ebx
push 0x14
mov [ esp + 0x24 ] eax
call ebx
push 0x14
mov [ esp + 0x24 ] eax
call ebx
add esp 0x10
mov esi eax
mov ecx ebp
mov [ esp + 0x34 ] esi
push 0x63
push 0x1
call sub_403e70
cmp eax 0x7d
je rwxdata
push 0x0
call [ exit@IAT ]
cmp eax 0x3e7
je rwxdata
push 0x0
push 0x0
push rwxdata
mov ecx ebp
call Ordinal_MFC42_4224
jmp rwxdata
cmp eax 0x613
jne rwxdata
mov eax [ esp + 0x14 ]
mov ebp edi
mov edi [ esp + 0x18 ]
sub eax esi
sub ebp esi
sub edi esi
mov [ esp + 0x24 ] esi
mov [ esp + 0x40 ] eax
mov [ esp + 0x30 ] ebp
mov [ esp + 0x3c ] edi
mov [ esp + 0x2c ] 0x5
jmp rwxdata
push 0x0
push 0x0
push rwxdata
mov ecx ebp
call Ordinal_MFC42_4224
push 0x0
call [ exit@IAT ]
add ebp esi
push 0xc8
mov [ esi ] 0x32
mov [ esp + 0x2c ] ebp
call ebx
mov [ ebp ] eax
mov eax [ esi ]
shl eax 0x2
add edi esi
push eax
mov [ esp + 0x24 ] edi
call ebx
mov ecx [ esp + 0x48 ]
mov [ edi ] eax
mov edx [ esi ]
shl edx 0x2
lea edi [ ecx + esi ]
push edx
mov [ esp + 0x2c ] edi
call ebx
mov [ edi ] eax
mov eax [ esi ]
add esp 0xc
mov [ esp + 0x10 ] 0x0
test eax eax
jle rwxdata
mov eax [ esp + 0x2c ]
add esi 0x4
dec eax
mov [ esp + 0x24 ] esi
mov [ esp + 0x2c ] eax
jne rwxdata
mov ebx ebp
mov ebp [ esp + 0x1c ]
xor esi esi
jmp rwxdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x3c ]
mov ebx [ esp + 0x14 ]
mov eax [ esp + 0x34 ]
mov edx [ esp + 0x18 ]
sub eax ebx
mov ecx ebx
sub edx ebx
mov [ esp + 0x28 ] ecx
mov [ esp + 0x24 ] eax
mov [ esp + 0x30 ] edx
mov [ esp + 0x20 ] 0x5
mov eax [ edi ]
mov [ esi + eax ] 0x32
mov ecx [ edi ]
mov edx [ esi + ecx ]
shl edx 0x2
push edx
call [ malloc@IAT ]
mov ecx [ ebx ]
mov [ esi + ecx ] eax
mov edx [ edi ]
mov eax [ esi + edx ]
shl eax 0x2
push eax
call [ malloc@IAT ]
mov ecx [ ebp ]
add esp 0x8
xor edi edi
mov [ esi + ecx ] eax
mov eax [ esp + 0x20 ]
mov edx [ eax ]
cmp [ esi + edx ] 0x0
jle rwxdata
mov esi [ esp + 0x20 ]
add ecx 0x4
dec esi
mov [ esp + 0x28 ] ecx
mov [ esp + 0x20 ] esi
jne rwxdata
xor ebx ebx
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x10 ]
inc eax
add esi 0x4
mov edx [ ecx ]
mov [ esp + 0x10 ] eax
cmp eax edx
jl rwxdata
mov ebx [ esp + 0x28 ]
mov ebp [ esp + 0x1c ]
mov esi [ eax + ecx ]
mov [ esp + 0x10 ] 0x0
test esi esi
jle rwxdata
mov edi [ esp + 0x38 ]
mov ebp [ free@IAT ]
sub edi ebx
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x20 ] edi
mov esi [ esp + 0x10 ]
mov edi [ eax + ecx ]
inc esi
add ebx 0x4
cmp esi edi
mov [ esp + 0x10 ] esi
jl rwxdata
add edx ecx
mov [ esp + 0x2c ] edx
mov edi [ esp + 0x20 ]
mov ebx [ malloc@IAT ]
mov esi ecx
mov eax [ esp + 0x20 ]
inc edi
mov eax [ eax ]
cmp edi [ esi + eax ]
jl rwxdata
mov ebx [ esp + 0x28 ]
mov ebp [ esp + 0x1c ]
mov eax [ ebx ]
push eax
call ebp
mov ecx [ esp + 0x34 ]
mov edx [ ebx + ecx ]
push edx
call ebp
mov eax [ edi + ebx ]
push eax
call ebp
mov eax [ esp + 0x28 ]
add esp 0xc
add eax 0x4
add ebx 0x4
cmp eax 0x14
mov [ esp + 0x1c ] eax
jl rwxdata
mov ecx [ ebx ]
xor edi edi
cmp [ ecx + esi * 4 ] 0x0
jle rwxdata
mov esi [ ecx ]
xor ebp ebp
cmp [ ebx + esi ] 0x0
jle rwxdata
mov ebx [ esp + 0x14 ]
mov edx [ ecx ]
inc ebp
cmp ebp [ ebx + edx ]
jl rwxdata
mov ecx 0xe
xor eax eax
lea edi [ esp + 0x49 ]
mov [ esp + 0x48 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi rwxdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x4c ]
push rwxdata
push ecx
call [ sprintf@IAT ]
mov eax [ esp + 0x38 ]
add esp 0xc
inc esi
mov edx [ eax ]
mov eax [ ebx + edx ]
cmp esi [ eax + ebp * 4 ]
jl rwxdata
mov eax [ ebp ]
mov ecx [ esi + eax ]
mov [ ecx + edi * 4 ] 0x32
mov edx [ ebp ]
mov eax [ esi + edx ]
mov ecx [ eax + edi * 4 ]
shl ecx 0x2
push ecx
call [ malloc@IAT ]
mov edx [ ebx ]
add esp 0x4
mov ecx [ esi + edx ]
mov [ ecx + edi * 4 ] eax
mov edx [ ebp ]
xor eax eax
mov ecx [ esi + edx ]
cmp [ ecx + edi * 4 ] 0x0
jle rwxdata
mov edx [ ebx ]
inc eax
mov ecx [ esi + edx ]
mov edx [ ecx + edi * 4 ]
mov [ edx + eax * 4 - 0x4 ] 0x32
mov ecx [ ebp ]
mov edx [ esi + ecx ]
cmp eax [ edx + edi * 4 ]
jl rwxdata
mov eax [ esp + 0x24 ]
xor esi esi
cmp [ ebx + eax ] 0x0
jle rwxdata
mov ecx [ esp + 0x34 ]
push ecx
call ebp
mov edx [ esp + 0x18 ]
push edx
call ebp
mov eax [ esp + 0x20 ]
push eax
call ebp
mov ecx [ esp + 0x44 ]
push ecx
call ebp
mov ecx [ esp + 0x54 ]
add esp 0x10
call sub_403e00
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
mov eax [ ecx + edx ]
mov ecx [ eax + esi * 4 ]
push ecx
call ebp
mov edx [ esp + 0x24 ]
lea eax [ edx + ebx ]
mov eax [ edx + ebx ]
mov ecx [ eax + esi * 4 ]
push ecx
call ebp
mov edx [ esp + 0x2c ]
add esp 0x8
inc esi
cmp esi [ ebx + edx ]
jl rwxdata
mov edx [ esp + 0x20 ]
lea eax [ edx + ebx ]
mov eax [ edx + ebx ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx + edi * 4 ]
push edx
call ebp
mov eax [ ebx ]
add esp 0x4
inc edi
cmp edi [ eax + esi * 4 ]
jl rwxdata
mov eax [ esp + 0x2c ]
xor esi esi
mov edx [ eax ]
mov eax [ ebx + edx ]
cmp [ eax + ebp * 4 ] 0x0
jle rwxdata
mov eax [ esp + 0x24 ]
mov edx [ esp + 0x30 ]
mov ecx [ esp + 0x28 ]
mov edi [ esp + 0x20 ]
sub_403e00
mov cl [ rwxdata ]
push esi
push edi
xor eax eax
mov dl [ eax + rwxdata ]
sub dl 0x5
xor dl cl
mov [ eax + rwxdata ] dl
inc eax
cmp eax 0x14bc
jbe rwxdata
mov cl [ rwxdata ]
xor eax eax
mov dl [ eax + rwxdata ]
xor dl cl
mov [ eax + rwxdata ] dl
inc eax
cmp eax 0x14bc
jbe rwxdata
mov ecx 0x52f
mov esi rwxdata
mov edi rwxdata
[ edi ] [ esi ]
lea eax [ rwxdata ]
add eax 0x25
call eax
push 0x0
call [ ExitProcess@IAT ]
sub_403e70
push esi
push 0x0
call [ time@IAT ]
push eax
call [ srand@IAT ]
add esp 0x8
call [ rand@IAT ]
mov esi [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
sub esi ecx
cdq
inc esi
idiv esi
pop esi
mov eax edx
add eax ecx
retn 0x8
sub_404320
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb rwxdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae rwxdata
_start
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rwxdata ] 0xffffffff
or [ rwxdata ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rwxdata ] eax
call sub_4044d5
cmp [ rwxdata ] ebx
jne rwxdata
call sub_4044c0
push rwxdata
push rwxdata
call _initterm
mov eax [ rwxdata ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rwxdata ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rwxdata
push rwxdata
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne rwxdata
push sub_4044d2
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je rwxdata
mov al [ esi ]
cmp al bl
je rwxdata
inc esi
mov [ ebp - 0x74 ] esi
jmp rwxdata
cmp [ esi ] 0x22
jne rwxdata
cmp al 0x22
jne rwxdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je rwxdata
cmp al 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp rwxdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_4044e2
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_4044fa
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne rwxdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_401634
and al 0xaa
test eax 0x23ebdba9
stosd [ edi ]
test eax 0xdb0f11a9
0x60605fd0 0xa911
sub_401718
shl [ edi - 0x1f9f9fa0 ] cl
0x606056b9 0x595f
sub_4017f0
pushad
test eax 0x6060bff2
pushad
test eax 0x60608bd2
pushad
prefetchw [ esi ]
adc [ ecx - 0x56eeef70 ] ebp
xor ebp [ esi + esi - 0x2d56eda1 ]
retn
sub_401a85
into
0x6060606c 0x335d
sub_401bbe
cmp [ eax + edx * 2 - 0x3d ] ecx
and [ esi + 0x4b7b388a ] 0x9ed812f0
in eax dx
retn 0xab9f
sub_4022a9
push ss
cmp ch ah
push esi
jmp [ eax - 0x1a ]
sub_402359
shr ebp 0x1
int3
sub_4023a5
push esi
sbb esp [ eax + 0x65 ]
push edi
int1
fmul [ ebp - 0x5d9f98aa ]
xchg edi eax
0x8d05
sub_402527
retn 0xf3a9
sub_402f80
mov eax [ Ordinal_MFC42_1842@IAT ]
retn
sub_402f90
mov eax rwxdata
retn
sub_402fa0
mov eax [ Ordinal_MFC42_4242@IAT ]
retn
sub_402fb0
mov eax rwxdata
retn
sub_403020
push esi
mov esi ecx
call sub_403040
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403180
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_5252
neg eax
sbb eax eax
neg eax
retn 0x4
sub_4031a0
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_825
pop ecx
retn 0x4
sub_4031b0
retn
sub_4031c0
retn 0x4
sub_4031d0
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_4031e0
mov eax rwxdata
retn
sub_4031f0
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_403210
push esi
mov esi ecx
call sub_403230
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403230
jmp Ordinal_MFC42_815
sub_403240
call sub_403250
jmp sub_403260
sub_403250
mov ecx rwxdata
jmp sub_4031f0
sub_403260
push sub_403270
call sub_40430c
pop ecx
retn
sub_403270
mov ecx rwxdata
jmp sub_403230
sub_4033a0
push esi
push 0x0
mov esi ecx
push 0x64
call Ordinal_MFC42_324
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_4033c0
push esi
mov esi ecx
call sub_4033e0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4033e0
jmp Ordinal_MFC42_641
sub_4033f0
mov eax [ Ordinal_MFC42_4234@IAT ]
retn
sub_403400
mov eax rwxdata
retn
sub_403470
mov eax [ ecx + 0x20 ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_403480
mov eax [ ecx + 0x20 ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
sub_4034f0
mov eax [ Ordinal_MFC42_1825@IAT ]
retn
sub_403500
mov eax rwxdata
retn
sub_403510
mov eax [ Ordinal_MFC42_4238@IAT ]
retn
sub_403520
mov eax rwxdata
retn
sub_403530
push esi
mov esi ecx
call Ordinal_MFC42_338
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_403550
push esi
mov esi ecx
call sub_403570
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403570
mov [ ecx ] rwxdata
jmp Ordinal_MFC42_652
sub_403580
call Ordinal_MFC42_4823
neg eax
sbb eax eax
neg eax
retn
sub_403590
retn 0x4
sub_4035a0
mov eax [ ecx + 0x48 ]
retn
sub_4035b0
mov eax [ esp + 0x4 ]
mov [ ecx + 0x48 ] eax
retn 0x4
sub_403620
mov eax [ Ordinal_MFC42_1945@IAT ]
retn
sub_403630
mov eax rwxdata
retn
sub_403640
mov eax [ Ordinal_MFC42_4273@IAT ]
retn
sub_403650
mov eax rwxdata
retn
sub_403660
push esi
mov esi ecx
call Ordinal_MFC42_560
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_403680
push esi
mov esi ecx
call sub_4036a0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4036a0
mov [ ecx ] rwxdata
jmp Ordinal_MFC42_813
sub_4036b0
push esi
mov esi ecx
call sub_4036f0
sub_4036d0
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_2535
retn 0x4
sub_4036e0
retn 0x8
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
Ordinal_MFC42_2723
jmp [ Ordinal_MFC42_2723@IAT ]
Ordinal_MFC42_2390
jmp [ Ordinal_MFC42_2390@IAT ]
Ordinal_MFC42_3059
jmp [ Ordinal_MFC42_3059@IAT ]
Ordinal_MFC42_5100
jmp [ Ordinal_MFC42_5100@IAT ]
Ordinal_MFC42_5103
jmp [ Ordinal_MFC42_5103@IAT ]
Ordinal_MFC42_4467
jmp [ Ordinal_MFC42_4467@IAT ]
Ordinal_MFC42_4303
jmp [ Ordinal_MFC42_4303@IAT ]
Ordinal_MFC42_3350
jmp [ Ordinal_MFC42_3350@IAT ]
Ordinal_MFC42_5012
jmp [ Ordinal_MFC42_5012@IAT ]
Ordinal_MFC42_975
jmp [ Ordinal_MFC42_975@IAT ]
Ordinal_MFC42_5472
jmp [ Ordinal_MFC42_5472@IAT ]
Ordinal_MFC42_3403
jmp [ Ordinal_MFC42_3403@IAT ]
Ordinal_MFC42_2879
jmp [ Ordinal_MFC42_2879@IAT ]
Ordinal_MFC42_2878
jmp [ Ordinal_MFC42_2878@IAT ]
Ordinal_MFC42_4151
jmp [ Ordinal_MFC42_4151@IAT ]
Ordinal_MFC42_6055
jmp [ Ordinal_MFC42_6055@IAT ]
Ordinal_MFC42_4077
jmp [ Ordinal_MFC42_4077@IAT ]
Ordinal_MFC42_1776
jmp [ Ordinal_MFC42_1776@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5237
jmp [ Ordinal_MFC42_5237@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5282
jmp [ Ordinal_MFC42_5282@IAT ]
Ordinal_MFC42_2649
jmp [ Ordinal_MFC42_2649@IAT ]
Ordinal_MFC42_1665
jmp [ Ordinal_MFC42_1665@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4436
jmp [ Ordinal_MFC42_4436@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4427
jmp [ Ordinal_MFC42_4427@IAT ]
Ordinal_MFC42_796
jmp [ Ordinal_MFC42_796@IAT ]
Ordinal_MFC42_674
jmp [ Ordinal_MFC42_674@IAT ]
Ordinal_MFC42_554
jmp [ Ordinal_MFC42_554@IAT ]
Ordinal_MFC42_529
jmp [ Ordinal_MFC42_529@IAT ]
Ordinal_MFC42_366
jmp [ Ordinal_MFC42_366@IAT ]
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_807
jmp [ Ordinal_MFC42_807@IAT ]
Ordinal_MFC42_2494
jmp [ Ordinal_MFC42_2494@IAT ]
Ordinal_MFC42_2627
jmp [ Ordinal_MFC42_2627@IAT ]
Ordinal_MFC42_2626
jmp [ Ordinal_MFC42_2626@IAT ]
Ordinal_MFC42_6000
jmp [ Ordinal_MFC42_6000@IAT ]
Ordinal_MFC42_2117
jmp [ Ordinal_MFC42_2117@IAT ]
Ordinal_MFC42_4163
jmp [ Ordinal_MFC42_4163@IAT ]
Ordinal_MFC42_6625
jmp [ Ordinal_MFC42_6625@IAT ]
Ordinal_MFC42_4457
jmp [ Ordinal_MFC42_4457@IAT ]
Ordinal_MFC42_5252
jmp [ Ordinal_MFC42_5252@IAT ]
Ordinal_MFC42_4615
jmp [ Ordinal_MFC42_4615@IAT ]
Ordinal_MFC42_4612
jmp [ Ordinal_MFC42_4612@IAT ]
Ordinal_MFC42_4610
jmp [ Ordinal_MFC42_4610@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_6215
jmp [ Ordinal_MFC42_6215@IAT ]
Ordinal_MFC42_617
jmp [ Ordinal_MFC42_617@IAT ]
Ordinal_MFC42_5301
jmp [ Ordinal_MFC42_5301@IAT ]
Ordinal_MFC42_5214
jmp [ Ordinal_MFC42_5214@IAT ]
Ordinal_MFC42_296
jmp [ Ordinal_MFC42_296@IAT ]
Ordinal_MFC42_986
jmp [ Ordinal_MFC42_986@IAT ]
Ordinal_MFC42_520
jmp [ Ordinal_MFC42_520@IAT ]
Ordinal_MFC42_4159
jmp [ Ordinal_MFC42_4159@IAT ]
Ordinal_MFC42_6117
jmp [ Ordinal_MFC42_6117@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_4853
jmp [ Ordinal_MFC42_4853@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_4696
jmp [ Ordinal_MFC42_4696@IAT ]
Ordinal_MFC42_3058
jmp [ Ordinal_MFC42_3058@IAT ]
Ordinal_MFC42_3065
jmp [ Ordinal_MFC42_3065@IAT ]
Ordinal_MFC42_6336
jmp [ Ordinal_MFC42_6336@IAT ]
Ordinal_MFC42_2510
jmp [ Ordinal_MFC42_2510@IAT ]
Ordinal_MFC42_2542
jmp [ Ordinal_MFC42_2542@IAT ]
Ordinal_MFC42_5243
jmp [ Ordinal_MFC42_5243@IAT ]
Ordinal_MFC42_5740
jmp [ Ordinal_MFC42_5740@IAT ]
Ordinal_MFC42_1746
jmp [ Ordinal_MFC42_1746@IAT ]
Ordinal_MFC42_5577
jmp [ Ordinal_MFC42_5577@IAT ]
Ordinal_MFC42_3172
jmp [ Ordinal_MFC42_3172@IAT ]
Ordinal_MFC42_5653
jmp [ Ordinal_MFC42_5653@IAT ]
Ordinal_MFC42_4420
jmp [ Ordinal_MFC42_4420@IAT ]
Ordinal_MFC42_4953
jmp [ Ordinal_MFC42_4953@IAT ]
Ordinal_MFC42_4858
jmp [ Ordinal_MFC42_4858@IAT ]
Ordinal_MFC42_2399
jmp [ Ordinal_MFC42_2399@IAT ]
Ordinal_MFC42_4387
jmp [ Ordinal_MFC42_4387@IAT ]
Ordinal_MFC42_3454
jmp [ Ordinal_MFC42_3454@IAT ]
Ordinal_MFC42_3198
jmp [ Ordinal_MFC42_3198@IAT ]
Ordinal_MFC42_6080
jmp [ Ordinal_MFC42_6080@IAT ]
Ordinal_MFC42_6175
jmp [ Ordinal_MFC42_6175@IAT ]
Ordinal_MFC42_4623
jmp [ Ordinal_MFC42_4623@IAT ]
Ordinal_MFC42_4426
jmp [ Ordinal_MFC42_4426@IAT ]
Ordinal_MFC42_338
jmp [ Ordinal_MFC42_338@IAT ]
Ordinal_MFC42_652
jmp [ Ordinal_MFC42_652@IAT ]
Ordinal_MFC42_4823
jmp [ Ordinal_MFC42_4823@IAT ]
Ordinal_MFC42_4614
jmp [ Ordinal_MFC42_4614@IAT ]
Ordinal_MFC42_4613
jmp [ Ordinal_MFC42_4613@IAT ]
Ordinal_MFC42_4589
jmp [ Ordinal_MFC42_4589@IAT ]
Ordinal_MFC42_4899
jmp [ Ordinal_MFC42_4899@IAT ]
Ordinal_MFC42_5076
jmp [ Ordinal_MFC42_5076@IAT ]
Ordinal_MFC42_4341
jmp [ Ordinal_MFC42_4341@IAT ]
Ordinal_MFC42_4349
jmp [ Ordinal_MFC42_4349@IAT ]
Ordinal_MFC42_4723
jmp [ Ordinal_MFC42_4723@IAT ]
Ordinal_MFC42_4890
jmp [ Ordinal_MFC42_4890@IAT ]
Ordinal_MFC42_4531
jmp [ Ordinal_MFC42_4531@IAT ]
Ordinal_MFC42_4545
jmp [ Ordinal_MFC42_4545@IAT ]
Ordinal_MFC42_4543
jmp [ Ordinal_MFC42_4543@IAT ]
Ordinal_MFC42_4526
jmp [ Ordinal_MFC42_4526@IAT ]
Ordinal_MFC42_4529
jmp [ Ordinal_MFC42_4529@IAT ]
Ordinal_MFC42_4524
jmp [ Ordinal_MFC42_4524@IAT ]
Ordinal_MFC42_4964
jmp [ Ordinal_MFC42_4964@IAT ]
Ordinal_MFC42_4961
jmp [ Ordinal_MFC42_4961@IAT ]
Ordinal_MFC42_4108
jmp [ Ordinal_MFC42_4108@IAT ]
Ordinal_MFC42_5240
jmp [ Ordinal_MFC42_5240@IAT ]
Ordinal_MFC42_5290
jmp [ Ordinal_MFC42_5290@IAT ]
Ordinal_MFC42_3748
jmp [ Ordinal_MFC42_3748@IAT ]
Ordinal_MFC42_1726
jmp [ Ordinal_MFC42_1726@IAT ]
Ordinal_MFC42_4432
jmp [ Ordinal_MFC42_4432@IAT ]
Ordinal_MFC42_560
jmp [ Ordinal_MFC42_560@IAT ]
Ordinal_MFC42_813
jmp [ Ordinal_MFC42_813@IAT ]
Ordinal_MFC42_5260
jmp [ Ordinal_MFC42_5260@IAT ]
Ordinal_MFC42_2535
jmp [ Ordinal_MFC42_2535@IAT ]
Ordinal_MFC42_4224
jmp [ Ordinal_MFC42_4224@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
sub_4042e0
cmp [ rwxdata ] 0xffffffff
jne rwxdata
push rwxdata
push rwxdata
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_40430c
push [ esp + 0x4 ]
call sub_4042e0
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_4044a1
mov esp [ ebp - 0x18 ]
push [ ebp - 0x78 ]
call [ _exit@IAT ]
int3
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_4044c0
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_4044d2
xor eax eax
retn
sub_4044d5
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_4044e2
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_404528
jmp sub_404528
sub_404528
push 0x600
push 0x0
call sub_4044fa
mov [ rwxdata ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
sub_404550
mov eax [ ebp - 0x10 ]
push eax
call sub_4031a0
retn
sub_40455a
mov eax rwxdata
jmp __CxxFrameHandler
sub_404570
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_404578
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
jmp Ordinal_MFC42_796
sub_404586
mov eax rwxdata
jmp __CxxFrameHandler
sub_404590
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_404598
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
jmp Ordinal_MFC42_796
sub_4045a6
mov eax rwxdata
jmp __CxxFrameHandler
sub_4045b0
mov eax [ ebp - 0x34 ]
push eax
call sub_4031a0
retn
sub_4045ba
lea ecx [ ebp - 0x30 ]
jmp Ordinal_MFC42_617
sub_4045c2
mov eax rwxdata
jmp __CxxFrameHandler
sub_4045d0
lea ecx [ ebp - 0x6c ]
jmp sub_4033e0
sub_4045d8
mov eax rwxdata
jmp __CxxFrameHandler
sub_4045f0
mov eax [ ebp - 0x10 ]
push eax
call sub_4031a0
retn
sub_4045fa
mov eax rwxdata
jmp __CxxFrameHandler
sub_404610
mov eax [ ebp - 0x10 ]
push eax
call sub_4031a0
retn
sub_40461a
mov eax rwxdata
jmp __CxxFrameHandler
