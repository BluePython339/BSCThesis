sub_401000
push esi
mov esi [ esp + 0x8 ]
or eax 0xffffffff
xor ecx ecx
test esi esi
jbe r-xdata
not eax
pop esi
retn
mov edx [ esp + 0xc ]
push edi
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
movzx edi [ ecx + edx ]
xor eax edi
test al 0x1
je r-xdata
pop edi
add ecx 0x1
cmp ecx esi
jb r-xdata
sub_4010b0
mov edx [ esp + 0xc ]
push ebx
mov bl [ esp + 0xc ]
push ebp
mov ebp edx
push esi
mov esi [ esp + 0x10 ]
sar edx 0x2
and ebp 0x3
test edx edx
push edi
mov edi esi
jle r-xdata
sub ebp 0x1
js r-xdata
movzx ecx bl
mov eax ecx
shl eax 0x8
or eax ecx
shl eax 0x8
or eax ecx
shl eax 0x8
or eax ecx
sub edx 0x1
js r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn
mov bh bl
mov al bl
lea ecx [ ebp + 0x1 ]
mov edx ecx
shr ecx 0x2
mov eax ebx
shl eax 0x10
mov ax bx
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
add edx 0x1
mov ecx edx
[ edi ]
lea edi [ esi + edx * 4 ]
sub_401120
push esi
mov esi [ GetSystemMetrics@IAT ]
push edi
push 0x2d
call esi
push 0x5
mov edi eax
call esi
add edi eax
mov eax [ esp + 0xc ]
lea eax [ eax + edi * 2 ]
pop edi
pop esi
retn
sub_401140
push ebx
push esi
mov esi [ GetSystemMetrics@IAT ]
push edi
push 0x2e
call esi
push 0x6
mov edi eax
call esi
push 0x6
add edi eax
call esi
push 0x37
add edi eax
call esi
mov ebx eax
add ebx [ esp + 0x10 ]
push 0x1f
call esi
lea ecx [ ebx + edi * 2 ]
pop edi
pop esi
add eax ecx
pop ebx
retn
sub_401180
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ InterlockedExchange@IAT ]
push 0x1
push esi
call edi
cmp eax 0x1
jne r-xdata
pop edi
pop esi
retn
push ebx
mov ebx [ Sleep@IAT ]
lea ecx [ ecx ]
push 0x1
call ebx
push 0x1
push esi
call edi
cmp eax 0x1
je r-xdata
pop ebx
sub_4011c0
sub esp 0x400
call [ GetCommandLineA@IAT ]
push eax
lea eax [ esp + 0x4 ]
push eax
call [ lstrcpyA@IAT ]
xor ecx ecx
lea ebx [ ebx ]
mov al 0x5c
cmp [ esp + ecx ] al
je r-xdata
cmp [ esp + ecx + 0x1 ] 0x0
je r-xdata
test ecx ecx
jle r-xdata
lea esp [ esp ]
add ecx 0x1
jmp r-xdata
cmp [ esp + ecx + 0x2 ] 0x0
je r-xdata
mov [ esp + ecx ] 0x0
cmp [ esp ] 0x22
push esi
jne r-xdata
cmp [ esp + ecx - 0x1 ] 0x3a
jne r-xdata
sub ecx 0x1
cmp [ esp + ecx ] al
jne r-xdata
add ecx 0x2
jmp r-xdata
cmp [ esp + ecx + 0x3 ] 0x0
je r-xdata
lea ecx [ esp + 0x4 ]
push ecx
call [ SetCurrentDirectoryA@IAT ]
push r--data
call [ LoadLibraryA@IAT ]
mov esi [ GetProcAddress@IAT ]
push r--data
push eax
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov [ rw-data ] eax
mov ecx [ rw-data ]
push r--data
push ecx
call esi
mov [ rw-data ] eax
pop esi
add esp 0x400
retn
test ecx ecx
jle r-xdata
mov [ esp + ecx ] al
add ecx 0x1
test ecx ecx
jle r-xdata
add ecx 0x3
add ecx 0x4
cmp ecx 0x400
jl r-xdata
push edi
lea esi [ esp + 0x9 ]
lea edi [ esp + 0x8 ]
[ edi ] [ esi ]
pop edi
cmp [ esp + ecx ] 0x0
je r-xdata
jmp r-xdata
sub_4013b0
mov eax [ esp + 0x4 ]
push eax
call sub_4053f0
add esp 0x4
push 0x1
push rw-data
call [ InterlockedExchange@IAT ]
cmp eax 0x1
je r-xdata
xor eax eax
retn
mov ecx [ rw-data ]
push 0x1
push 0x9c41
push 0x111
push ecx
call [ PostMessageA@IAT ]
sub_401400
mov eax [ esp + 0x4 ]
push eax
call sub_405400
add esp 0x4
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
mov [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] eax
mov [ rw-data ] 0x1
je r-xdata
xor eax eax
retn
mov eax [ rw-data ]
push eax
call [ GetMenu@IAT ]
push 0x403
push 0x1
push eax
call [ EnableMenuItem@IAT ]
mov ecx [ rw-data ]
push ecx
call [ DrawMenuBar@IAT ]
mov ecx [ rw-data ]
push ecx
call [ GetMenu@IAT ]
push 0x400
push 0x1
push eax
call [ EnableMenuItem@IAT ]
mov edx [ rw-data ]
push edx
call [ DrawMenuBar@IAT ]
xor eax eax
retn
sub_401490
mov eax [ esp + 0x4 ]
push eax
call sub_405400
add esp 0x4
test eax eax
jne r-xdata
mov ecx 0x1
cmp eax ecx
jne r-xdata
cmp [ rw-data ] 0x1
sete al
mov [ esp + 0x4 ] eax
jmp sub_405430
xor eax eax
cmp [ rw-data ] ecx
mov [ rw-data ] eax
sete al
mov [ esp + 0x4 ] eax
jmp sub_405430
xor eax eax
cmp [ rw-data ] ecx
sete al
mov [ esp + 0x4 ] eax
jmp sub_405430
sub_4014f0
mov eax [ esp + 0x4 ]
push esi
push eax
call sub_405400
mov ecx [ rw-data ]
xor edx edx
add esp 0x4
cmp ecx 0x9c5e
sete dl
test eax eax
mov esi edx
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp ecx 0x9c5f
je r-xdata
push esi
call sub_405430
add esp 0x4
pop esi
retn
cmp ecx 0x9c5e
jne r-xdata
mov eax [ rw-data ]
push 0x0
push 0x9c5f
push 0x111
push eax
call [ PostMessageA@IAT ]
push esi
call sub_405430
add esp 0x4
pop esi
retn
sub_401560
mov eax [ esp + 0x4 ]
push eax
call sub_405400
add esp 0x4
cmp eax 0x10
je r-xdata
cmp [ rw-data ] eax
je r-xdata
cmp eax 0x20
jne r-xdata
xor eax eax
retn
mov ecx [ rw-data ]
push 0x0
push 0x9c60
push 0x111
push ecx
call [ PostMessageA@IAT ]
sub_4015a0
mov eax [ esp + 0x4 ]
push eax
call sub_405400
add esp 0x4
test eax eax
jl r-xdata
cmp eax 0x3e8
jl r-xdata
cmp eax 0x32
jge r-xdata
xor eax eax
retn
cmp eax 0x3e9
jge r-xdata
mov ecx eax
shl ecx 0x4
add ecx eax
shl ecx 0x4
lea eax [ ecx + rw-data ]
jmp r-xdata
add eax 0xfffffc18
mov edx eax
shl edx 0x4
add edx eax
shl edx 0x4
lea eax [ edx + rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov [ esp + 0x4 ] eax
jmp sub_405460
sub_401600
mov eax [ esp + 0x4 ]
push eax
call sub_405400
add esp 0x4
test eax eax
jl r-xdata
cmp eax 0x3e8
jl r-xdata
cmp eax 0x32
jge r-xdata
mov edx [ rw-data ]
push 0x1
push 0x9d6c
push 0x111
push edx
call [ PostMessageA@IAT ]
mov [ esp + 0x4 ] 0x0
jmp sub_405430
cmp eax 0x3e9
jge r-xdata
mov ecx [ rw-data ]
push 0x0
add eax 0x9ca4
push eax
push 0x111
push ecx
call [ PostMessageA@IAT ]
mov [ esp + 0x4 ] 0x0
jmp sub_405430
mov ecx [ rw-data ]
add eax 0xfffffc18
mov edx eax
shl edx 0x4
add edx eax
shl edx 0x4
mov eax [ edx + rw-data ]
push 0x0
add eax 0x9a4c
push eax
push 0x111
push ecx
call [ PostMessageA@IAT ]
mov [ esp + 0x4 ] 0x0
jmp sub_405430
sub_4016b0
push ecx
mov eax [ esp + 0x8 ]
push eax
call sub_405400
add esp 0x4
sub eax 0x0
je r-xdata
mov eax [ rw-data ]
add esp 0x4
mov [ esp + 0x4 ] eax
jmp sub_405430
sub eax 0x1
jne r-xdata
mov eax [ esp ]
add esp 0x4
mov [ esp + 0x4 ] eax
jmp sub_405430
mov eax [ rw-data ]
add esp 0x4
mov [ esp + 0x4 ] eax
jmp sub_405430
sub_401740
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
push ebx
call [ lstrlenA@IAT ]
mov edi eax
lea eax [ edi + 0x3 ]
push eax
push 0x2
call [ LocalAlloc@IAT ]
mov esi eax
push esi
call [ LocalLock@IAT ]
mov [ eax ] 0x2
mov [ eax + 0x1 ] di
push ebx
add eax 0x3
push eax
call [ lstrcpyA@IAT ]
push esi
call [ LocalUnlock@IAT ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x10 ]
push ecx
push esi
push 0x1
push edx
call [ rw-data ]
push esi
call [ LocalFree@IAT ]
pop edi
pop esi
pop ebx
retn
sub_4017a0
push ecx
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push ebx
push eax
lea ecx [ esp + 0x8 ]
push ecx
push 0x1
push edx
call [ rw-data ]
mov ebx eax
push ebx
call [ LocalLock@IAT ]
cmp [ eax ] 0x2
je r-xdata
movzx edx [ eax + 0x1 ]
push esi
push edi
mov ecx edx
lea esi [ eax + 0x3 ]
mov eax ecx
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push ebx
mov [ edx + rw-data ] 0x0
call [ LocalUnlock@IAT ]
push ebx
call [ LocalFree@IAT ]
pop edi
pop esi
mov eax rw-data
pop ebx
pop ecx
retn
xor eax eax
pop ebx
pop ecx
retn
sub_401810
sub esp 0x8
push edi
xor eax eax
mov ecx 0x25
mov edi rw-data
[ edi ]
push rw-data
mov [ rw-data ] 0x0
mov [ rw-data ] 0x94
call [ GetVersionExA@IAT ]
cmp [ rw-data ] 0x2
jne r-xdata
pop edi
add esp 0x8
retn
cmp [ rw-data ] 0x6
jb r-xdata
lea eax [ esp + 0x8 ]
push eax
call [ SHGetMalloc@IAT ]
mov edx [ rw-data ]
lea ecx [ esp + 0x4 ]
push ecx
push 0x5
push edx
call [ SHGetSpecialFolderLocation@IAT ]
test eax eax
jl r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
push ebp
push esi
push eax
call [ ecx + 0x8 ]
mov esi [ lstrlenA@IAT ]
push rw-data
call esi
mov edi [ lstrcpyA@IAT ]
mov [ eax + rw-data ] 0x5c
add eax 0x1
lea eax [ eax + rw-data ]
push r--data
push eax
mov [ eax ] 0x0
call edi
mov ebp [ CreateDirectoryA@IAT ]
push 0x0
push rw-data
call ebp
push rw-data
call esi
mov [ eax + rw-data ] 0x5c
add eax 0x1
lea eax [ eax + rw-data ]
push r--data
push eax
mov [ eax ] 0x0
call edi
push 0x0
push rw-data
call ebp
push rw-data
call esi
pop esi
mov [ eax + rw-data ] 0x5c
mov [ eax + rw-data ] 0x0
pop ebp
mov eax [ esp + 0x4 ]
push rw-data
push eax
call [ SHGetPathFromIDListA@IAT ]
mov edx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0x14 ]
sub_401930
push esi
mov esi [ lstrcpyA@IAT ]
push rw-data
push rw-data
call esi
push rw-data
call [ lstrlenA@IAT ]
mov ecx [ esp + 0x8 ]
push ecx
lea edx [ eax + rw-data ]
push edx
call esi
mov eax rw-data
pop esi
retn
sub_401970
sub esp 0x114
push esi
mov esi [ InterlockedExchange@IAT ]
push edi
push 0x1
push rw-data
mov [ esp + 0x14 ] 0x0
call esi
cmp eax 0x1
jne r-xdata
push 0x0
lea eax [ esp + 0xc ]
push eax
push 0x100
push 0x0
call [ rw-data ]
test eax eax
mov [ esp + 0x14 ] eax
je r-xdata
mov edi [ Sleep@IAT ]
lea ebx [ ebx ]
push 0x0
push rw-data
call esi
pop edi
pop esi
add esp 0x114
retn
push ebp
push eax
call [ LocalLock@IAT ]
mov ebp eax
cmp [ ebp ] 0x1
jne r-xdata
push 0x1
call edi
push 0x1
push rw-data
call esi
cmp eax 0x1
je r-xdata
pop ebp
mov ecx [ esp + 0xc ]
push ebx
push ecx
push ebp
call sub_404b70
mov esi [ lstrcpyA@IAT ]
add esp 0x8
push r--data
lea edx [ esp + 0x24 ]
push edx
mov [ esp + 0x1c ] eax
call esi
push rw-data
push rw-data
call esi
push rw-data
call [ lstrlenA@IAT ]
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ eax + rw-data ]
push edx
call esi
push 0x0
push rw-data
call [ _lcreat@IAT ]
mov ebx [ _lwrite@IAT ]
mov edi eax
push 0x4
lea eax [ esp + 0x18 ]
push eax
push edi
call ebx
mov ecx [ esp + 0x10 ]
push ecx
push ebp
push edi
call ebx
mov edx [ esp + 0x10 ]
push ebp
push edx
call sub_401000
mov ecx [ rw-data ]
sub ecx [ rw-data ]
add esp 0x8
push 0x4
lea edx [ esp + 0x1c ]
push edx
add eax ecx
push edi
mov [ esp + 0x24 ] eax
call ebx
push edi
call [ _lclose@IAT ]
mov edi [ esp + 0x1c ]
push edi
call [ LocalUnlock@IAT ]
push edi
call [ LocalFree@IAT ]
push r--data
call sub_404bc0
add esp 0x4
push 0x0
lea eax [ esp + 0x14 ]
push eax
push 0x1000
push 0x100
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
mov esi [ InterlockedExchange@IAT ]
pop ebx
push edi
call [ LocalLock@IAT ]
mov ebp eax
cmp [ ebp ] 0x1
jne r-xdata
mov ecx [ esp + 0x10 ]
push ecx
push ebp
call sub_404b70
add esp 0x8
push r--data
lea edx [ esp + 0x24 ]
push edx
mov [ esp + 0x1c ] eax
call esi
push rw-data
push rw-data
call esi
push rw-data
call [ lstrlenA@IAT ]
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ eax + rw-data ]
push edx
call esi
push 0x0
push rw-data
call [ _lcreat@IAT ]
mov esi eax
push 0x4
lea eax [ esp + 0x18 ]
push eax
push esi
call ebx
mov ecx [ esp + 0x10 ]
push ecx
push ebp
push esi
call ebx
push esi
call [ _lclose@IAT ]
push edi
call [ LocalUnlock@IAT ]
push edi
call [ LocalFree@IAT ]
push r--data
call sub_404bc0
add esp 0x4
sub_401b80
sub esp 0x10
push eax
lea ecx [ esp + 0x10 ]
push ecx
push r--data
call [ rw-data ]
test eax eax
mov [ esp + 0x8 ] eax
jne r-xdata
push ebx
push esi
push edi
push eax
call [ LocalLock@IAT ]
push 0xe160
mov ebx eax
call sub_405616
add esp 0x4
mov [ esp + 0x10 ] eax
mov edi eax
lea esi [ ebx + 0x25b6 ]
mov [ esp + 0xc ] 0x78
push ebp
or eax 0xffffffff
add esp 0x10
retn
mov ebp [ ecx ]
mov [ eax ] ebp
add eax 0x3
add ecx 0xf
sub edx 0x1
jne r-xdata
add esi 0x2ee0
add edi 0x1e0
sub [ esp + 0x10 ] 0x1
jne r-xdata
mov ecx esi
mov eax edi
mov edx 0xa1
lea ebx [ ebx ]
mov esi [ lstrcpyA@IAT ]
push rw-data
push rw-data
call esi
push rw-data
call [ lstrlenA@IAT ]
mov edx [ esp + 0x24 ]
push edx
lea eax [ eax + rw-data ]
push eax
call esi
push 0x0
push rw-data
call [ _lcreat@IAT ]
mov esi eax
test esi esi
pop ebp
jge r-xdata
mov edi [ _lwrite@IAT ]
push 0x36
push ebx
push esi
mov [ ebx + 0x12 ] 0xa0
mov [ ebx + 0x16 ] 0x78
call edi
mov ebx [ esp + 0x10 ]
push 0xe100
push ebx
push esi
call edi
push ebx
call sub_4054fe
add esp 0x4
push esi
call [ _lclose@IAT ]
mov esi [ esp + 0x14 ]
push esi
call [ LocalUnlock@IAT ]
push esi
call [ LocalFree@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x10
retn
pop edi
pop esi
or eax 0xffffffff
pop ebx
add esp 0x10
retn
sub_401ca0
sub esp 0x50
cmp [ rw-data ] 0x0
push edi
mov edi eax
je r-xdata
pop edi
add esp 0x50
retn
cmp edi 0xffffffff
je r-xdata
push ebx
push esi
mov [ rw-data ] 0x0
call sub_401970
call [ rw-data ]
mov ebx [ wsprintfA@IAT ]
mov esi 0x9
lea esp [ esp ]
test edi edi
jl r-xdata
push esi
lea edx [ esp + 0x10 ]
push r--data
push edx
call ebx
add esp 0xc
lea eax [ esp + 0xc ]
push eax
call [ rw-data ]
sub esi 0x1
jns r-xdata
xor esi esi
cmp edi 0x3e8
jl r-xdata
cmp edi 0x32
jg r-xdata
push esi
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call ebx
add esp 0xc
lea edx [ esp + 0xc ]
push edx
call [ rw-data ]
add esi 0x1
cmp esi 0x9
jle r-xdata
push rw-data
call [ rw-data ]
cmp edi 0xffffffff
pop esi
pop ebx
jne r-xdata
cmp edi 0x3e9
jge r-xdata
shl eax 0x4
add eax edi
shl eax 0x4
cmp [ eax + rw-data ] 0x1
je r-xdata
test edi edi
jl r-xdata
or edi 0xffffffff
jmp r-xdata
lea eax [ edi - 0x3e8 ]
mov ecx eax
shl ecx 0x4
add ecx eax
shl ecx 0x4
cmp [ ecx + rw-data ] 0x1
jne r-xdata
cmp edi 0x3e8
jl r-xdata
cmp edi 0x32
jle r-xdata
mov [ rw-data ] edi
mov [ rw-data ] 0x1
xor edi edi
cmp edi 0x3e9
jge r-xdata
cmp [ esp + 0x58 ] 0x0
je r-xdata
mov edi [ edi * 4 + r--data ]
add edi 0x3e8
jmp r-xdata
sub_401de0
push esi
push edi
push 0x0
call [ GetDC@IAT ]
mov edi eax
push 0xc
push edi
call [ GetDeviceCaps@IAT ]
push edi
push 0x0
mov esi eax
call [ ReleaseDC@IAT ]
cmp esi 0xf
je r-xdata
pop edi
xor eax eax
pop esi
retn
cmp esi 0x10
je r-xdata
cmp esi 0x18
je r-xdata
cmp esi 0x20
je r-xdata
push 0x10
push r--data
push r--data
push 0x0
call [ MessageBoxA@IAT ]
pop edi
or eax 0xffffffff
pop esi
retn
sub_401e40
mov edx [ esp + 0x4 ]
sub esp 0x130
xor ecx ecx
cmp edx ecx
push ebp
push esi
jne r-xdata
mov [ esp + 0x8 ] rw-data
mov esi [ esp + 0x8 ]
mov eax 0x1
mov esi rw-data
mov [ esp + 0x8 ] esi
mov eax 0x32
jmp r-xdata
cmp edx ecx
jne r-xdata
add esi 0x4
neg edx
sbb edx edx
and edx 0x3e8
push ebx
add edx 0xffff635c
push edi
mov ebx 0x9ca4
mov [ esp + 0x2c ] edx
mov [ esp + 0x18 ] eax
lea esp [ esp ]
or ebp 0xffffffff
cmp eax ecx
mov [ esp + 0xc ] ebp
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] ecx
jbe r-xdata
mov [ esi + 0x10c ] 0x3e8
cmp [ esi + 0x104 ] ebp
mov [ rw-data ] ecx
mov [ rw-data ] ecx
jne r-xdata
mov ecx [ esp + 0xc ]
pop esi
mov [ rw-data ] ecx
mov eax 0x1
pop ebp
add esp 0x130
retn
push ebp
call [ _lclose@IAT ]
add ebx 0x1
add esi 0x110
or ebp 0xffffffff
xor ecx ecx
sub [ esp + 0x18 ] 0x1
jne r-xdata
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x20 ]
push eax
call [ CompareFileTime@IAT ]
test eax eax
jle r-xdata
cmp [ esi ] ecx
je r-xdata
mov [ esi + 0x108 ] ebp
mov eax [ esp + 0x2c ]
add eax ebx
push eax
mov [ esi - 0x4 ] ecx
lea ecx [ esp + 0x44 ]
lea edi [ esi + 0x100 ]
push r--data
push ecx
mov [ esi ] 0x0
mov [ edi ] ebp
mov [ edi + 0x4 ] ebp
call [ wsprintfA@IAT ]
mov ebp [ lstrcpyA@IAT ]
add esp 0xc
push rw-data
push rw-data
call ebp
push rw-data
call [ lstrlenA@IAT ]
lea edx [ esp + 0x40 ]
push edx
lea eax [ eax + rw-data ]
push eax
call ebp
push 0x0
push rw-data
call [ _lopen@IAT ]
lea ecx [ esp + 0x1c ]
push ecx
push 0x0
mov ebp eax
push 0x0
push ebp
call [ GetFileTime@IAT ]
cmp eax 0x1
jne r-xdata
mov esi [ esp + 0x10 ]
mov edx [ esp + 0x144 ]
pop edi
pop ebx
push edi
lea ecx [ esp + 0x20 ]
push ecx
call [ FileTimeToLocalFileTime@IAT ]
lea edx [ esp + 0x30 ]
push edx
push edi
call [ FileTimeToSystemTime@IAT ]
push 0x10
lea eax [ esp + 0x44 ]
push eax
push ebp
call [ _lread@IAT ]
cmp eax 0x10
jb r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
lea eax [ ebx - 0x9ca4 ]
mov [ esp + 0x24 ] ecx
mov [ esp + 0x28 ] edx
mov [ esp + 0x14 ] eax
pop esi
mov eax 0x1
pop ebp
add esp 0x130
retn
mov edx [ rw-data ]
add esi 0x4
push esi
push 0x9e66
push ecx
push 0x9e66
push edx
call [ ModifyMenuA@IAT ]
mov eax [ rw-data ]
push eax
call [ DrawMenuBar@IAT ]
mov eax [ esp + 0x40 ]
push eax
mov edi eax
call sub_404a50
add esp 0x4
test edi edi
je r-xdata
mov ecx [ esp + 0x48 ]
cmp ecx 0x64
jle r-xdata
mov edi 0x4
xor eax eax
add ecx 0xffffff9c
mov eax 0x1
jmp r-xdata
call sub_404ab0
and eax 0xff
xor [ esp + edi + 0x40 ] al
add edi 0x1
cmp edi 0x10
jl r-xdata
mov ecx [ rw-data ]
mov edi [ ModifyMenuA@IAT ]
push esi
push ebx
push 0x0
push ebx
push ecx
call edi
mov edx [ rw-data ]
push esi
lea eax [ ebx + 0x64 ]
push eax
push 0x0
push eax
push edx
call edi
mov eax [ rw-data ]
push eax
call [ DrawMenuBar@IAT ]
movzx edx [ esp + 0x3a ]
push edx
movzx edx [ esp + 0x3c ]
push edx
movzx edx [ esp + 0x3e ]
push edx
movzx edx [ esp + 0x3e ]
push edx
movzx edx [ esp + 0x40 ]
sub eax 0x1
neg eax
push edx
mov edx [ esp + 0x60 ]
sbb al al
and al 0xf6
push edx
add al 0x2a
push ecx
movsx eax al
push eax
push r--data
push esi
call [ wsprintfA@IAT ]
add esp 0x28
cmp [ esp + 0x144 ] 0x0
mov [ esi - 0x4 ] 0x1
jne r-xdata
sub_402100
push esi
mov esi eax
cmp [ esi ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push edi
mov edi [ CheckMenuItem@IAT ]
nop
pop esi
retn
mov edx [ rw-data ]
mov eax [ rw-data ]
push edx
push eax
call [ SetMenu@IAT ]
cmp [ rw-data ] 0x0
mov esi [ EnableMenuItem@IAT ]
je r-xdata
mov ecx [ rw-data ]
push 0x0
push eax
push ecx
push 0x8
push eax
mov eax [ rw-data ]
push eax
jmp r-xdata
mov edx [ rw-data ]
push 0x403
push 0x2
push edx
mov ecx [ rw-data ]
push 0x400
push 0x2
push ecx
jmp r-xdata
mov eax [ esi ]
cmp eax ebx
jne r-xdata
pop edi
call edi
add esi 0x4
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ rw-data ]
push 0x403
push 0x1
push ecx
call esi
mov eax [ rw-data ]
push 0x400
push 0x1
push eax
call esi
pop esi
retn
call esi
cmp [ rw-data ] 0x0
je r-xdata
sub_4021b0
sub esp 0x108
push ebp
mov ebp [ esp + 0x110 ]
push esi
push edi
or eax 0xffffffff
xor edi edi
cmp [ rw-data ] edi
mov [ esp + 0xc ] eax
mov esi rw-data
je r-xdata
pop edi
pop esi
pop ebp
add esp 0x108
retn
push ebx
mov ebx [ lstrcmpA@IAT ]
cmp [ esi ] 0x0
je r-xdata
add esi 0x8
add edi 0x1
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
mov esi [ lstrcpyA@IAT ]
push r--data
lea ecx [ esp + 0x18 ]
push ecx
call esi
push rw-data
push rw-data
call esi
push rw-data
call [ lstrlenA@IAT ]
lea edx [ esp + 0x14 ]
push edx
lea eax [ eax + rw-data ]
push eax
call esi
push 0x0
push rw-data
call [ _lopen@IAT ]
push 0x0
lea ecx [ edi * 4 ]
mov esi eax
push ecx
push esi
call [ _llseek@IAT ]
push 0x4
lea edx [ esp + 0x14 ]
push edx
push esi
call [ _lread@IAT ]
push esi
call [ _lclose@IAT ]
mov eax [ esi ]
push eax
push ebp
call ebx
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop edi
pop esi
pop ebp
add esp 0x108
retn
sub_402290
sub esp 0x104
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
mov ebx eax
mov esi rw-data
je r-xdata
cmp [ esp + 0x118 ] 0x0
je r-xdata
mov edi [ lstrcmpA@IAT ]
nop
pop edi
pop esi
pop ebx
add esp 0x104
retn
mov esi [ lstrcpyA@IAT ]
push r--data
lea edx [ esp + 0x10 ]
push edx
call esi
push rw-data
push rw-data
call esi
push rw-data
call [ lstrlenA@IAT ]
lea ecx [ esp + 0xc ]
push ecx
lea edx [ eax + rw-data ]
push edx
call esi
push 0x0
push rw-data
call [ _lcreat@IAT ]
cmp [ rw-data ] 0x0
mov edi eax
mov esi rw-data
je r-xdata
mov ecx [ esp + 0x114 ]
mov [ esi + 0x4 ] ecx
add esi 0x8
cmp [ esi ] 0x0
jne r-xdata
push edi
call [ _lclose@IAT ]
mov ebx [ _lwrite@IAT ]
mov eax [ esi ]
push ebx
push eax
call edi
test eax eax
je r-xdata
jmp r-xdata
push 0x4
lea eax [ esi + 0x4 ]
push eax
push edi
call ebx
add esi 0x8
cmp [ esi ] 0x0
jne r-xdata
sub_402360
sub esp 0xa0
cmp [ esp + 0xa4 ] 0x0
push ebx
mov ebx [ ChangeDisplaySettingsA@IAT ]
je r-xdata
push 0x2
push 0x0
call ebx
test eax eax
jne r-xdata
cmp [ esp + 0xac ] 0x0
jne r-xdata
push ebp
push esi
push edi
push 0x0
call [ GetDC@IAT ]
mov edi [ GetDeviceCaps@IAT ]
mov esi eax
push 0xc
push esi
call edi
push 0x74
push esi
mov ebp eax
call edi
push esi
push 0x0
mov [ esp + 0x18 ] eax
call [ ReleaseDC@IAT ]
mov edi [ EnumDisplaySettingsA@IAT ]
lea ecx [ esp + 0x14 ]
push ecx
xor esi esi
push esi
push esi
call edi
test eax eax
je r-xdata
mov eax [ esp + 0xb0 ]
push eax
push 0x0
call ebx
neg eax
sbb eax eax
add eax 0x1
pop ebx
add esp 0xa0
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xa0
retn
cmp [ esp + 0x7c ] ebp
jne r-xdata
lea eax [ esp + 0x14 ]
push eax
add esi 0x1
push esi
push 0x0
call edi
test eax eax
jne r-xdata
mov edx [ esp + 0xb4 ]
cmp [ esp + 0x80 ] edx
jne r-xdata
mov eax [ esp + 0xb8 ]
cmp [ esp + 0x84 ] eax
jne r-xdata
mov ecx [ esp + 0x10 ]
cmp [ esp + 0x8c ] ecx
jne r-xdata
push 0x2
lea edx [ esp + 0x18 ]
push edx
mov [ esp + 0x44 ] 0x180000
call ebx
test eax eax
je r-xdata
mov ecx [ esp + 0xbc ]
push ecx
lea edx [ esp + 0x18 ]
push edx
call ebx
pop edi
neg eax
pop esi
sbb eax eax
pop ebp
add eax 0x1
pop ebx
add esp 0xa0
retn
sub_402470
sub esp 0xa4
sub eax 0x9c5e
push ebp
mov ebp [ esp + 0xac ]
je r-xdata
call sub_404e60
test eax eax
jne r-xdata
sub eax 0x1
jne r-xdata
xor eax eax
pop ebp
add esp 0xa4
retn
push ebx
mov ebx [ ChangeDisplaySettingsA@IAT ]
push esi
push edi
push 0x2
push eax
call ebx
test eax eax
push 0x0
jne r-xdata
call sub_404e60
test eax eax
jne r-xdata
call [ GetDC@IAT ]
mov edi [ GetDeviceCaps@IAT ]
mov esi eax
push 0xc
push esi
call edi
push 0x74
push esi
mov [ esp + 0x1c ] eax
call edi
push esi
push 0x0
mov [ esp + 0x18 ] eax
call [ ReleaseDC@IAT ]
mov edi [ EnumDisplaySettingsA@IAT ]
lea edx [ esp + 0x18 ]
push edx
xor esi esi
push esi
push esi
call edi
test eax eax
je r-xdata
push eax
jmp r-xdata
push 0x80000000
push 0xfffffff0
push ebp
call [ SetWindowLongA@IAT ]
push 0x40
push 0x258
push 0x320
push 0x0
push 0x0
push 0xffffffff
push ebp
call [ SetWindowPos@IAT ]
push 0x4
push 0x258
push 0x320
call sub_402360
add esp 0xc
test eax eax
jne r-xdata
mov esi [ GetSystemMetrics@IAT ]
push 0x2d
call esi
push 0x5
mov edi eax
call esi
add edi eax
push 0x10
lea edi [ edi + edi + 0x320 ]
call esi
sub eax edi
cdq
sub eax edx
mov edi eax
push 0x258
sar edi 0x1
call sub_401140
add esp 0x4
push 0x11
mov ebx eax
call esi
sub eax ebx
cdq
push 0xca0000
sub eax edx
push 0xfffffff0
mov ebx eax
push ebp
sar ebx 0x1
call [ SetWindowLongA@IAT ]
push 0x2d
call esi
push 0x5
mov [ esp + 0x14 ] eax
call esi
mov ecx [ esp + 0x10 ]
add ecx eax
push 0x60
push 0x258
lea esi [ ecx + ecx + 0x320 ]
call sub_401140
add esp 0x4
push eax
push esi
push ebx
push edi
push 0x0
push ebp
call [ SetWindowPos@IAT ]
pop edi
pop esi
pop ebx
mov eax [ esp + 0x14 ]
cmp [ esp + 0x80 ] eax
jne r-xdata
call ebx
push 0x3e8
call [ Sleep@IAT ]
push 0x2000
call [ rw-data ]
push 0x0
push ebp
call [ SetMenu@IAT ]
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0xf
push ecx
call [ SendMessageA@IAT ]
xor eax eax
pop ebp
add esp 0xa4
retn
push eax
mov eax [ rw-data ]
push 0x9c5e
push 0x111
push eax
call [ PostMessageA@IAT ]
xor eax eax
pop ebp
add esp 0xa4
retn
lea eax [ esp + 0x18 ]
push eax
add esi 0x1
push esi
push 0x0
call edi
test eax eax
jne r-xdata
cmp [ esp + 0x84 ] 0x0
jne r-xdata
jmp r-xdata
cmp [ esp + 0x88 ] 0x0
jne r-xdata
mov ecx [ esp + 0x10 ]
cmp [ esp + 0x90 ] ecx
jne r-xdata
push 0x2
lea edx [ esp + 0x1c ]
push edx
mov [ esp + 0x48 ] 0x180000
call ebx
test eax eax
je r-xdata
push 0x0
lea ecx [ esp + 0x1c ]
push ecx
sub_4026a0
sub esp 0x10c
push ebx
mov ebx [ lstrcatA@IAT ]
push ebp
mov ebp [ lstrcpyA@IAT ]
push esi
mov [ esp + 0x10 ] 0x5c3a41
mov [ esp + 0xf ] 0x41
mov al [ esp + 0xf ]
add al 0x1
cmp al 0x5a
mov [ esp + 0xf ] al
jle r-xdata
test edi edi
je r-xdata
mov al [ esp + 0xf ]
lea ecx [ esp + 0x10 ]
push ecx
mov [ esp + 0x14 ] al
call [ GetDriveTypeA@IAT ]
cmp eax 0x5
jne r-xdata
pop esi
pop ebp
or al 0xff
pop ebx
add esp 0x10c
retn
mov al [ esp + 0xf ]
pop esi
pop ebp
pop ebx
add esp 0x10c
retn
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x18 ]
push eax
call ebp
push edi
lea ecx [ esp + 0x18 ]
push ecx
call ebx
push 0x0
lea edx [ esp + 0x18 ]
push edx
call [ _lopen@IAT ]
mov esi eax
push esi
call [ _lclose@IAT ]
cmp esi 0xffffffff
jne r-xdata
sub_402760
cmp [ rw-data ] 0x9c5f
jne r-xdata
retn
push esi
mov esi 0x1
cmp eax esi
jne r-xdata
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
pop esi
cmp [ rw-data ] esi
jne r-xdata
mov eax [ rw-data ]
push eax
push edi
call [ SetMenu@IAT ]
call sub_404e60
test eax eax
jne r-xdata
push eax
push edi
call [ SetMenu@IAT ]
mov edx [ rw-data ]
push edx
mov [ rw-data ] 0x0
call [ DrawMenuBar@IAT ]
push 0x40
push 0x258
push 0x320
push 0x0
push 0x0
push 0xffffffff
push edi
call [ SetWindowPos@IAT ]
mov eax [ rw-data ]
push 0x0
push 0x0
push 0xf
push eax
call [ SendMessageA@IAT ]
mov edx [ rw-data ]
push 0x403
push esi
push edx
mov ecx [ rw-data ]
push 0x400
push esi
push ecx
jmp r-xdata
call [ EnableMenuItem@IAT ]
mov eax [ rw-data ]
push ebx
push eax
mov [ rw-data ] esi
call [ DrawMenuBar@IAT ]
mov esi [ GetSystemMetrics@IAT ]
push 0x40
push 0x258
push 0x320
push 0xf
call esi
push 0x4
mov ebx eax
call esi
sub ebx eax
push ebx
push 0x0
push 0xffffffff
push edi
call [ SetWindowPos@IAT ]
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0xf
push ecx
call [ SendMessageA@IAT ]
pop ebx
pop esi
retn
sub_402870
push esi
mov esi [ esp + 0x10 ]
cmp esi 0xc
push edi
ja r-xdata
xor eax eax
xor edx edx
mov edi [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
jmp [ esi * 4 + jump_table_402970 ]
mov eax [ esp + 0x10 ]
pop edi
shr eax 0x1c
xor edx edx
pop esi
retn
mov eax ecx
shr eax 0x17
and eax 0x1f
xor edx edx
cmp esi 0xb
je r-xdata
mov eax ecx
shr eax 0x12
and eax 0x1f
xor edx edx
cmp esi 0xa
je r-xdata
mov eax ecx
shr eax 0xd
and eax 0x1f
xor edx edx
cmp esi 0x9
je r-xdata
mov eax ecx
shr eax 0x8
and eax 0x1f
xor edx edx
cmp esi 0x8
je r-xdata
mov eax ecx
shr eax 0x3
and eax 0x1f
xor edx edx
cmp esi 0x7
je r-xdata
mov eax edi
mov edx ecx
shrd eax edx 0x1e
and eax 0x1f
xor edx edx
cmp esi 0x6
je r-xdata
mov eax edi
mov edx ecx
shrd eax edx 0x19
and eax 0x1f
xor edx edx
cmp esi 0x5
je r-xdata
mov eax edi
mov edx ecx
shrd eax edx 0x14
and eax 0x1f
xor edx edx
cmp esi 0x4
je r-xdata
mov eax edi
mov edx ecx
shrd eax edx 0xf
and eax 0x1f
xor edx edx
cmp esi 0x3
je r-xdata
mov eax edi
mov edx ecx
shrd eax edx 0xa
and eax 0x1f
xor edx edx
cmp esi 0x2
je r-xdata
mov eax edi
shrd eax ecx 0x5
and eax 0x1f
xor edx edx
cmp esi 0x1
je r-xdata
and edi 0x1f
mov eax edi
pop edi
xor edx edx
pop esi
retn
pop edi
pop esi
retn
sub_4029b0
sub esp 0x8
mov eax [ esp + 0x10 ]
push ebx
mov bl al
mov [ esp + 0x7 ] bl
mov ebx [ esp + 0x10 ]
push esi
mov esi eax
shrd ebx esi 0x18
mov ecx eax
mov [ esp + 0xc ] bl
mov ebx [ esp + 0x14 ]
mov edx eax
shr esi 0x18
mov esi eax
shrd ebx esi 0x10
mov [ esp + 0xd ] bl
mov ebx [ esp + 0x14 ]
shrd ebx eax 0x8
shr ecx 0x18
mov [ esp + 0x8 ] cl
mov ecx eax
shr eax 0x8
mov al [ esp + 0x14 ]
shr al 0x1
mov [ esp + 0xe ] bl
shl bl 0x7
or al bl
movzx ebx [ esp + 0xd ]
mov [ esp + 0xf ] al
mov al [ esp + 0xe ]
shr al 0x1
shl bl 0x7
or al bl
movzx ebx [ esp + 0xc ]
mov [ esp + 0xe ] al
mov al [ esp + 0xd ]
shr al 0x1
shl bl 0x7
or al bl
movzx ebx [ esp + 0xb ]
mov [ esp + 0xd ] al
mov al [ esp + 0xc ]
shr al 0x1
shl bl 0x7
or al bl
mov [ esp + 0xc ] al
mov al [ esp + 0xb ]
shr edx 0x8
mov bl dl
shr al 0x1
shr ecx 0x10
shl bl 0x7
or al bl
mov bl al
mov al cl
shl al 0x7
shr dl 0x1
or dl al
mov al [ esp + 0x8 ]
mov [ esp + 0xa ] dl
mov dl al
shr cl 0x1
shl dl 0x7
or cl dl
mov [ esp + 0x9 ] cl
mov cl [ esp + 0x14 ]
shr al 0x1
shl cl 0x7
or cl al
movzx eax cl
push 0x0
cdq
push 0x100
push edx
push eax
shr esi 0x10
call sub_405630
mov ecx eax
movzx eax [ esp + 0x9 ]
mov esi edx
cdq
push 0x0
add ecx eax
push 0x100
adc esi edx
push esi
push ecx
call sub_405630
mov ecx eax
movzx eax [ esp + 0xa ]
mov esi edx
cdq
push 0x0
add ecx eax
push 0x100
adc esi edx
push esi
push ecx
call sub_405630
mov ecx eax
movzx eax bl
mov esi edx
cdq
push 0x0
add ecx eax
push 0x100
adc esi edx
push esi
push ecx
call sub_405630
mov ecx eax
movzx eax [ esp + 0xc ]
mov esi edx
cdq
push 0x0
add ecx eax
push 0x100
adc esi edx
push esi
push ecx
call sub_405630
mov ecx eax
movzx eax [ esp + 0xd ]
mov esi edx
cdq
push 0x0
add ecx eax
push 0x100
adc esi edx
push esi
push ecx
call sub_405630
mov ecx eax
movzx eax [ esp + 0xe ]
mov esi edx
cdq
push 0x0
add ecx eax
push 0x100
adc esi edx
push esi
push ecx
call sub_405630
mov ecx eax
movzx eax [ esp + 0xf ]
mov esi edx
cdq
add ecx eax
adc esi edx
mov edx esi
pop esi
mov eax ecx
pop ebx
add esp 0x8
retn
sub_402b60
sub esp 0x84
cmp [ eax ] 0x0
je r-xdata
xor eax eax
add esp 0x84
retn
push eax
lea eax [ esp + 0x4 ]
push eax
call [ lstrcpyA@IAT ]
xor ecx ecx
lea ecx [ ecx ]
cmp ecx 0xf
je r-xdata
cmp al 0x39
jle r-xdata
xor ecx ecx
mov eax 0x1
push esi
lea esp [ esp ]
cmp al 0x42
je r-xdata
cmp al 0x41
jl r-xdata
movsx esi [ esp + eax + 0x4 ]
movsx edx [ esp + eax + 0x5 ]
add esi ecx
add eax 0x2
cmp eax 0xf
lea ecx [ esi + edx ]
jl r-xdata
and ecx 0x8000001f
jns r-xdata
cmp al 0x49
je r-xdata
mov eax 0x20
sub eax ecx
cmp eax 0x20
jne r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
cmp al 0x4f
je r-xdata
movsx ecx [ esp + 0x4 ]
cmp ecx eax
je r-xdata
xor eax eax
cmp al 0x53
je r-xdata
movzx edx [ esp + 0x5 ]
movzx eax [ esp + 0x6 ]
movzx ecx [ esp + 0x7 ]
xor dl 0x1
mov [ esp + 0x49 ] dl
movzx edx [ esp + 0x8 ]
xor al 0x1
xor cl 0x5
xor dl 0x5
mov [ esp + 0x52 ] al
movzx eax [ esp + 0x9 ]
mov [ esp + 0x48 ] cl
movzx ecx [ esp + 0xa ]
mov [ esp + 0x4a ] dl
movzx edx [ esp + 0xb ]
xor al 0x5
xor cl 0x5
xor dl 0xd
mov [ esp + 0x4e ] al
movzx eax [ esp + 0xc ]
mov [ esp + 0x51 ] cl
movzx ecx [ esp + 0xd ]
mov [ esp + 0x4c ] dl
movzx edx [ esp + 0xe ]
xor al 0xf
xor cl 0x10
xor dl 0x15
push ebx
mov [ esp + 0x57 ] al
movzx eax [ esp + 0x13 ]
mov [ esp + 0x58 ] cl
movzx ecx [ esp + 0x14 ]
mov [ esp + 0x53 ] dl
movzx edx [ esp + 0x15 ]
push ebp
xor al 0x18
xor cl 0x19
xor dl 0x19
push edi
xor esi esi
xor edi edi
mov [ esp + 0x59 ] al
mov [ esp + 0x57 ] cl
mov [ esp + 0x5c ] dl
xor ebx ebx
xor eax eax
pop esi
add esp 0x84
retn
cmp al 0x5a
jg r-xdata
movsx eax [ esp + ebx + 0x54 ]
push 0x0
cdq
push 0x20
mov ebp eax
push edi
mov eax edx
push esi
mov [ esp + 0x60 ] eax
call sub_405630
add ebp eax
mov eax [ esp + 0x50 ]
adc eax edx
add ebx 0x1
cmp ebx 0xd
mov esi ebp
mov edi eax
jl r-xdata
movsx ebp [ esp + 0x1e ]
test ebp ebp
jle r-xdata
cmp al 0x39
jg r-xdata
mov ebx 0xc
mov ebx ebp
mov edi edi
cmp al 0x41
jne r-xdata
sub al 0x30
jmp r-xdata
push ebx
push edi
push esi
call sub_402870
add esp 0xc
sub ebx 0x1
mov [ esp + ebx + 0x55 ] al
jns r-xdata
movsx ecx [ esp + 0x56 ]
movsx eax [ esp + 0x54 ]
movsx edx [ esp + 0x58 ]
add eax ecx
movsx ecx [ esp + 0x5a ]
add eax edx
movsx edx [ esp + 0x5c ]
add eax ecx
movsx ecx [ esp + 0x5e ]
add eax edx
movsx edx [ esp + 0x60 ]
add eax ecx
movsx ecx [ esp + 0x55 ]
add eax edx
movsx edx [ esp + 0x57 ]
lea eax [ eax + eax * 2 ]
add eax ecx
movsx ecx [ esp + 0x59 ]
add eax edx
movsx edx [ esp + 0x5b ]
add eax ecx
movsx ecx [ esp + 0x5d ]
add eax edx
movsx edx [ esp + 0x5f ]
add eax ecx
add eax edx
mov ecx eax
and ecx 0x8000001f
jns r-xdata
push edi
push esi
call sub_4029b0
add esp 0x8
sub ebx 0x1
mov esi eax
mov edi edx
jne r-xdata
cmp al 0x49
jge r-xdata
mov [ esp + ecx ] 0xa
jmp r-xdata
mov [ esp + ecx ] al
mov eax 0x20
sub eax ecx
cmp eax 0x20
jne r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
cmp al 0x4f
jge r-xdata
sub al 0x38
jmp r-xdata
mov al [ esp + ecx + 0x1 ]
cmp al 0x30
jl r-xdata
add ecx 0x1
jmp r-xdata
cmp al 0x39
jle r-xdata
cmp ebp eax
je r-xdata
xor eax eax
cmp al 0x53
jge r-xdata
sub al 0x39
jmp r-xdata
cmp al 0x42
je r-xdata
cmp al 0x41
jl r-xdata
push 0x0
push 0x989680
push edi
push esi
call sub_405670
cmp eax 0x4ec075d5
jne r-xdata
pop edi
pop ebp
pop ebx
xor eax eax
pop esi
add esp 0x84
retn
sub al 0x3b
sub al 0x3a
jmp r-xdata
cmp al 0x49
je r-xdata
cmp edx 0x69
jne r-xdata
cmp al 0x4f
je r-xdata
add esi 0xe4424780
adc edi 0xc13b54ed
cmp esi 0x98967f
jne r-xdata
cmp al 0x53
je r-xdata
test edi edi
test edi edi
jne r-xdata
cmp al 0x5a
jg r-xdata
cmp esi 0xc350
jae r-xdata
ja r-xdata
pop edi
pop ebp
pop ebx
mov eax 0x1
pop esi
add esp 0x84
retn
cmp al 0x39
jg r-xdata
pop edi
pop ebp
pop ebx
mov eax 0x1
pop esi
add esp 0x84
retn
cmp al 0x41
jne r-xdata
sub al 0x30
jmp r-xdata
cmp al 0x49
jge r-xdata
mov [ esp + ecx + 0x1 ] 0xa
jmp r-xdata
mov [ esp + ecx + 0x1 ] al
cmp al 0x4f
jge r-xdata
sub al 0x38
jmp r-xdata
mov al [ esp + ecx + 0x2 ]
cmp al 0x30
jl r-xdata
add ecx 0x2
jmp r-xdata
cmp al 0x39
jle r-xdata
cmp al 0x53
jge r-xdata
sub al 0x39
jmp r-xdata
cmp al 0x42
je r-xdata
cmp al 0x41
jl r-xdata
sub al 0x3b
sub al 0x3a
jmp r-xdata
cmp al 0x49
je r-xdata
cmp al 0x4f
je r-xdata
cmp al 0x53
je r-xdata
cmp al 0x5a
jg r-xdata
cmp al 0x39
jg r-xdata
cmp al 0x41
jne r-xdata
sub al 0x30
jmp r-xdata
cmp al 0x49
jge r-xdata
mov [ esp + ecx + 0x2 ] 0xa
jmp r-xdata
mov [ esp + ecx + 0x2 ] al
cmp al 0x4f
jge r-xdata
sub al 0x38
jmp r-xdata
mov al [ esp + ecx + 0x3 ]
cmp al 0x30
jl r-xdata
add ecx 0x3
jmp r-xdata
cmp al 0x39
jle r-xdata
cmp al 0x53
jge r-xdata
sub al 0x39
jmp r-xdata
cmp al 0x42
je r-xdata
cmp al 0x41
jl r-xdata
sub al 0x3b
sub al 0x3a
jmp r-xdata
cmp al 0x49
je r-xdata
cmp al 0x4f
je r-xdata
cmp al 0x53
je r-xdata
cmp al 0x5a
jg r-xdata
cmp al 0x39
jg r-xdata
cmp al 0x41
jne r-xdata
sub al 0x30
jmp r-xdata
cmp al 0x49
jge r-xdata
mov [ esp + ecx + 0x3 ] 0xa
jmp r-xdata
mov [ esp + ecx + 0x3 ] al
cmp al 0x4f
jge r-xdata
sub al 0x38
jmp r-xdata
mov al [ esp + ecx + 0x4 ]
cmp al 0x30
jl r-xdata
add ecx 0x4
cmp al 0x39
jle r-xdata
cmp al 0x53
jge r-xdata
sub al 0x39
jmp r-xdata
cmp al 0x42
je r-xdata
cmp al 0x41
jl r-xdata
sub al 0x3b
sub al 0x3a
jmp r-xdata
cmp al 0x49
je r-xdata
cmp al 0x4f
je r-xdata
cmp al 0x53
je r-xdata
cmp al 0x5a
jg r-xdata
cmp al 0x39
jg r-xdata
cmp al 0x41
jne r-xdata
sub al 0x30
jmp r-xdata
cmp al 0x49
jge r-xdata
mov [ esp + ecx + 0x4 ] 0xa
jmp r-xdata
mov [ esp + ecx + 0x4 ] al
cmp al 0x4f
jge r-xdata
sub al 0x38
jmp r-xdata
add ecx 0x5
cmp ecx 0xf
jl r-xdata
mov al [ esp + ecx ]
cmp al 0x30
jl r-xdata
jmp r-xdata
cmp al 0x53
jge r-xdata
sub al 0x39
jmp r-xdata
sub al 0x3b
sub al 0x3a
jmp r-xdata
sub_403010
mov eax [ esp + 0x8 ]
sub esp 0x20
sub eax 0x110
push esi
je r-xdata
mov edx [ rw-data ]
push ebx
push edi
mov edi [ GetWindowRect@IAT ]
lea ecx [ esp + 0x1c ]
push ecx
push edx
call edi
mov esi [ esp + 0x30 ]
lea eax [ esp + 0xc ]
push eax
push esi
call edi
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0xc ]
push 0x1
mov edx ecx
sub edx eax
sub eax ecx
push edx
add eax 0x258
mov edx edi
sub edx ebx
push edx
cdq
sub eax edx
sar eax 0x1
add eax [ esp + 0x2c ]
push eax
mov eax ebx
sub eax edi
add eax 0x320
cdq
sub eax edx
sar eax 0x1
add eax [ esp + 0x2c ]
push eax
push esi
call [ MoveWindow@IAT ]
push rw-data
push 0xc3b5
push esi
call [ SetDlgItemTextA@IAT ]
pop edi
pop ebx
sub eax 0x1
je r-xdata
mov eax [ esp + 0x30 ]
sub eax 0xc418
je r-xdata
xor eax eax
pop esi
add esp 0x20
retn 0x10
mov esi [ esp + 0x28 ]
push 0x20
push rw-data
push 0xc3b5
push esi
call [ GetDlgItemTextA@IAT ]
cmp eax 0xf
jne r-xdata
sub eax 0x1
jne r-xdata
mov eax 0x1
pop esi
add esp 0x20
retn 0x10
mov eax rw-data
call sub_402b60
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x28 ]
push 0x1
push eax
mov [ rw-data ] 0x0
call [ EndDialog@IAT ]
mov eax 0x1
pop esi
add esp 0x20
retn 0x10
mov [ rw-data ] 0x0
mov eax 0x1
pop esi
add esp 0x20
retn 0x10
push eax
push esi
call [ EndDialog@IAT ]
mov eax 0x1
pop esi
add esp 0x20
retn 0x10
sub_403150
sub esp 0x1c
push esi
mov esi [ GetMessageA@IAT ]
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x10 ]
push eax
call esi
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
pop esi
add esp 0x1c
retn
push ebx
mov ebx [ DispatchMessageA@IAT ]
push edi
mov edi [ TranslateMessage@IAT ]
lea esp [ esp ]
lea ecx [ esp + 0xc ]
push ecx
call edi
lea edx [ esp + 0xc ]
push edx
call ebx
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x18 ]
push eax
call esi
test eax eax
jne r-xdata
pop edi
pop ebx
sub_4031b0
sub esp 0x10c
mov eax [ esp + 0x110 ]
push ebx
push ebp
push esi
push edi
push eax
call sub_4053f0
mov edi [ InterlockedExchange@IAT ]
add esp 0x4
push 0x1
xor ebp ebp
push rw-data
mov [ esp + 0x18 ] 0x3
mov [ rw-data ] ebp
mov [ rw-data ] ebp
call edi
cmp eax 0x1
jne r-xdata
mov ebx [ lstrcpyA@IAT ]
push r--data
lea ecx [ esp + 0x1c ]
push ecx
call ebx
push rw-data
push rw-data
call ebx
push rw-data
call [ lstrlenA@IAT ]
lea edx [ esp + 0x18 ]
push edx
lea eax [ eax + rw-data ]
push eax
call ebx
push ebp
push rw-data
call [ _lopen@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov esi [ Sleep@IAT ]
lea ebx [ ebx ]
push 0x0
push rw-data
call [ InterlockedExchange@IAT ]
mov ecx [ esp + 0x10 ]
push ecx
call sub_405430
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10c
retn
push ebp
push esi
call [ GetFileSize@IAT ]
mov ebp eax
cmp ebp 0x500
jb r-xdata
push 0x1
call esi
push 0x1
push rw-data
call edi
cmp eax 0x1
je r-xdata
push esi
call [ _lclose@IAT ]
push ebp
push 0x2
call [ LocalAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
push edi
call [ LocalLock@IAT ]
push ebp
push eax
push esi
mov [ esp + 0x20 ] eax
call [ _lread@IAT ]
mov eax [ esp + 0x14 ]
mov ecx [ eax + ebp - 0x4 ]
add eax 0x4
push eax
lea edx [ ebp - 0x8 ]
push edx
mov [ rw-data ] ecx
call sub_401000
push r--data
mov [ rw-data ] eax
mov eax [ esp + 0x20 ]
add ebp 0xfffffffc
push ebp
push eax
call sub_404b30
add esp 0x14
push esi
mov ebp eax
call [ _lclose@IAT ]
cmp [ ebp ] 0x1
push edi
jne r-xdata
call [ LocalUnlock@IAT ]
jmp r-xdata
call [ LocalUnlock@IAT ]
push 0x0
push edi
push 0x100
push 0x0
mov [ esp + 0x20 ] 0x2
call [ rw-data ]
push edi
call [ LocalFree@IAT ]
push esi
call [ _lclose@IAT ]
push r--data
lea ecx [ esp + 0x1c ]
push ecx
call ebx
push rw-data
push rw-data
call ebx
push rw-data
call [ lstrlenA@IAT ]
lea edx [ esp + 0x18 ]
push edx
lea eax [ eax + rw-data ]
push eax
call ebx
push 0x0
push rw-data
call [ _lopen@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
push 0x0
push esi
call [ GetFileSize@IAT ]
mov ebx eax
cmp ebx 0x5000
jb r-xdata
push ebx
push 0x2
call [ LocalAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
push edi
call [ LocalLock@IAT ]
push ebx
mov ebp eax
push ebp
push esi
call [ _lread@IAT ]
push r--data
push ebx
push ebp
call sub_404b30
add esp 0xc
push esi
mov ebx eax
call [ _lclose@IAT ]
cmp [ ebx ] 0x1
push edi
je r-xdata
call [ LocalUnlock@IAT ]
push 0x0
push edi
push 0x1000
push 0x100
call [ rw-data ]
push edi
call [ LocalFree@IAT ]
mov [ esp + 0x10 ] 0x0
sub_403410
mov eax [ esp + 0x4 ]
sub esp 0x18
push eax
call sub_4053f0
mov eax [ rw-data ]
add esp 0x4
cmp eax 0xffffffff
jne r-xdata
push ebx
push ebp
push esi
push edi
push eax
lea ecx [ esp + 0x1c ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov esi [ lstrcpyA@IAT ]
add esp 0xc
push rw-data
push rw-data
call esi
push rw-data
call [ lstrlenA@IAT ]
lea edx [ esp + 0x18 ]
push edx
lea eax [ eax + rw-data ]
push eax
call esi
push 0x0
push rw-data
call [ _lopen@IAT ]
mov ebx eax
push 0x0
push ebx
call [ GetFileSize@IAT ]
mov esi eax
sub esi 0x10
push esi
push 0x2
call [ LocalAlloc@IAT ]
mov edi eax
push edi
mov [ esp + 0x14 ] edi
call [ LocalLock@IAT ]
push 0x10
lea ecx [ esp + 0x1c ]
push ecx
push ebx
mov ebp eax
call [ _lread@IAT ]
mov eax [ esp + 0x18 ]
push eax
mov [ esp + 0x18 ] eax
call sub_404a50
add esp 0x4
cmp [ esp + 0x14 ] 0x0
je r-xdata
push eax
call sub_405430
add esp 0x4
add esp 0x18
retn
push esi
push ebp
push ebx
call [ _lread@IAT ]
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov edi 0x4
lea ebx [ ebx ]
push ebx
call [ _lclose@IAT ]
push edi
call [ LocalUnlock@IAT ]
push 0x0
push edi
push 0x1400
push 0x1100
call [ rw-data ]
push edi
call [ LocalFree@IAT ]
mov edx [ rw-data ]
push 0x0
mov [ rw-data ] edx
mov [ rw-data ] 0xffffffff
call sub_405430
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
xor edi edi
test esi esi
jbe r-xdata
call sub_404ab0
and eax 0xff
xor [ esp + edi + 0x18 ] al
add edi 0x1
cmp edi 0x10
jl r-xdata
mov edi [ esp + 0x10 ]
mov edi [ esp + 0x10 ]
call sub_404ab0
and eax 0xff
xor [ edi + ebp ] al
add edi 0x1
cmp edi esi
jb r-xdata
sub_4035b0
mov eax [ esp + 0x4 ]
sub esp 0x104
push eax
call sub_405400
add esp 0x4
test eax eax
jl r-xdata
cmp eax 0x3e8
jl r-xdata
cmp eax 0x32
jge r-xdata
push esi
push edi
push eax
lea eax [ esp + 0xc ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov esi [ lstrcpyA@IAT ]
add esp 0xc
push rw-data
push rw-data
mov [ esp + 0x1f ] 0x0
call esi
mov edi [ lstrlenA@IAT ]
push rw-data
call edi
lea ecx [ esp + 0x8 ]
push ecx
lea edx [ eax + rw-data ]
push edx
call esi
push 0x0
push rw-data
call [ _lopen@IAT ]
test eax eax
jge r-xdata
cmp eax 0x3e9
jge r-xdata
mov ecx eax
shl ecx 0x4
add ecx eax
shl ecx 0x4
cmp [ ecx + rw-data ] 0x0
jne r-xdata
push eax
call [ _lclose@IAT ]
push rw-data
push rw-data
call esi
push rw-data
call edi
lea ecx [ esp + 0x8 ]
push ecx
lea edx [ eax + rw-data ]
push edx
call esi
push rw-data
call sub_405460
add esp 0x4
pop edi
pop esi
add esp 0x104
retn
pop edi
xor eax eax
pop esi
add esp 0x104
retn
add eax 0xfffffc18
mov edx eax
shl edx 0x4
add edx eax
shl edx 0x4
mov eax [ edx + rw-data ]
cmp eax 0x3e8
jge r-xdata
xor eax eax
add esp 0x104
retn
cmp eax 0x3e9
jge r-xdata
sub_4036c0
sub esp 0x1c
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
pop ebx
add esp 0x1c
retn
push esi
push rw-data
call sub_401180
add esp 0x4
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ esp + 0x28 ]
cmp esi ebx
mov [ rw-data ] ebx
jl r-xdata
mov eax [ esp + 0x28 ]
add eax 0x9d08
mov [ rw-data ] eax
cmp esi 0x3e8
jl r-xdata
cmp esi 0x32
jge r-xdata
mov esi [ InterlockedExchange@IAT ]
cmp esi 0x3e9
jge r-xdata
mov eax esi
shl eax 0x4
add eax esi
shl eax 0x4
add eax rw-data
jmp r-xdata
lea ecx [ esi - 0x3e8 ]
mov eax ecx
shl eax 0x4
add eax ecx
shl eax 0x4
add eax rw-data
cmp eax ebx
je r-xdata
push ebp
push edi
mov [ rw-data ] ebx
call [ rw-data ]
mov ecx [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
push 0x1400
push 0x1100
call [ rw-data ]
mov ebp eax
push ebp
call [ LocalLock@IAT ]
push esi
mov edi eax
lea eax [ esp + 0x20 ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov esi [ edi + 0x1 ]
mov ecx [ edi + 0x6 ]
add esp 0xc
cmp esi 0x64
mov [ esp + 0x18 ] ecx
jbe r-xdata
mov [ esp + 0x10 ] ebx
sub esi 0x64
mov [ esp + 0x10 ] 0x1
jmp r-xdata
mov ecx [ esp + 0x18 ]
push eax
mov [ esp + 0x28 ] esi
mov [ esp + 0x2c ] ecx
call sub_404a50
add esp 0x4
mov esi 0x4
mov edi edi
add esi 0x64
lea edx [ esp + 0x1c ]
push ebx
push edx
call sub_401930
add esp 0x4
push eax
call [ _lcreat@IAT ]
push 0x10
mov ebx eax
lea eax [ esp + 0x20 ]
push 0x0
push eax
call sub_4010b0
add esp 0xc
call [ timeGetTime@IAT ]
push eax
call sub_404a50
add esp 0x4
call sub_404ab0
cmp [ esp + 0x10 ] 0x1
mov [ esp + 0x1c ] eax
jne r-xdata
call sub_404ab0
and eax 0xff
xor [ esp + esi + 0x1c ] al
add esi 0x1
cmp esi 0x10
jl r-xdata
push 0x10
lea edx [ esp + 0x20 ]
push edx
push ebx
call [ _lwrite@IAT ]
mov eax [ esp + 0x14 ]
xor esi esi
test eax eax
jbe r-xdata
push eax
push edi
push ebx
call [ _lwrite@IAT ]
push ebx
call [ _lclose@IAT ]
push ebp
call [ LocalUnlock@IAT ]
push ebp
call [ LocalFree@IAT ]
mov eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x20 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov eax [ esp + 0x40 ]
lea edx [ esp + 0x28 ]
push edx
call sub_401b80
mov esi [ InterlockedExchange@IAT ]
add esp 0x10
push 0x1
push rw-data
call esi
cmp eax 0x1
jne r-xdata
mov edi edi
push 0x0
call sub_401e40
push 0x1
call sub_401e40
add esp 0x8
push 0x0
push rw-data
call esi
pop edi
xor ebx ebx
pop ebp
jmp r-xdata
mov edi [ Sleep@IAT ]
call sub_404ab0
and eax 0xff
xor [ esi + edi ] al
mov eax [ esp + 0x14 ]
add esi 0x1
cmp esi eax
jb r-xdata
push ebx
push rw-data
call esi
call [ rw-data ]
mov [ rw-data ] 0x1
pop esi
push 0x1
call edi
push 0x1
push rw-data
call esi
cmp eax 0x1
je r-xdata
sub_403910
push r--data
call sub_4021b0
add esp 0x4
cmp eax 0x9c5f
mov [ rw-data ] eax
je r-xdata
cmp [ rw-data ] 0x0
push ebx
mov ebx [ lstrcmpA@IAT ]
push esi
push edi
mov edi eax
mov esi rw-data
je r-xdata
mov eax 0x9c5e
mov [ rw-data ] eax
push r--data
mov [ rw-data ] 0x2
call sub_4021b0
xor ecx ecx
add esp 0x4
cmp eax 0x9c4b
sete cl
mov esi rw-data
add ecx 0x9c4a
cmp [ rw-data ] 0x0
mov edi ecx
mov [ rw-data ] edi
je r-xdata
lea esp [ esp ]
cmp [ rw-data ] 0x9c4a
jne r-xdata
mov edx [ esi ]
push r--data
push edx
call ebx
test eax eax
je r-xdata
mov [ esi + 0x4 ] edi
add esi 0x8
cmp [ esi ] 0x0
jne r-xdata
push r--data
call sub_4021b0
add esp 0x4
cmp eax 0x9c56
mov [ rw-data ] eax
je r-xdata
or [ rw-data ] 0x10000001
mov [ esi + 0x4 ] edi
add esi 0x8
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
push r--data
push eax
call ebx
test eax eax
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
mov edi eax
mov esi rw-data
je r-xdata
cmp eax 0x9c55
je r-xdata
jmp r-xdata
xor ecx ecx
cmp eax 0x9c54
setne cl
push r--data
sub ecx 0x1
and ecx 0x4
or [ rw-data ] ecx
call sub_4021b0
add esp 0x4
cmp eax 0x10
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
je r-xdata
mov eax [ esi ]
push r--data
push eax
call ebx
test eax eax
je r-xdata
mov eax 0x9c54
mov [ rw-data ] eax
push 0x1
push eax
mov eax r--data
call sub_402290
add esp 0x8
retn
cmp eax 0x20
je r-xdata
mov [ esi + 0x4 ] edi
add esi 0x8
cmp [ esi ] 0x0
jne r-xdata
mov eax 0x10
mov [ rw-data ] eax
jmp r-xdata
mov eax [ rw-data ]
sub_403a90
sub esp 0x480
push ebx
push esi
mov ebx ecx
cmp ebx 0x9c60
push edi
mov esi eax
mov edi edx
ja r-xdata
cmp ebx 0x9e99
ja r-xdata
je r-xdata
cmp ebx 0x9efc
je r-xdata
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x480
retn
lea eax [ ebx - 0x9c41 ]
cmp eax 0x1e
ja r-xdata
push 0x0
push esi
call sub_4017a0
add esp 0x8
push eax
push rw-data
call [ lstrcpyA@IAT ]
mov eax rw-data
call sub_402b60
test eax eax
jne r-xdata
cmp ebx 0x9d08
jb r-xdata
cmp ebx 0x9dd0
je r-xdata
movzx eax [ eax + lookup_table_403f38 ]
jmp [ eax * 4 + jump_table_403f24 ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
push eax
mov eax [ rw-data ]
push ecx
push edx
push r--data
push eax
call [ DialogBoxParamA@IAT ]
push 0x0
push rw-data
push esi
call sub_401740
add esp 0xc
cmp ebx 0x9ca4
jb r-xdata
cmp ebx 0x9d3a
jae r-xdata
lea edx [ esp + 0xc ]
push edx
call [ rw-data ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
lea eax [ esp + 0x1c ]
push eax
mov eax [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
push eax
push ecx
push 0x2ec
push 0x0
push 0x1
push 0x1
push r--data
lea edx [ esp + 0xb4 ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0x30
push 0x40
push r--data
lea eax [ esp + 0x94 ]
push eax
push edi
call [ MessageBoxA@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x480
retn
cmp ebx 0x9e98
jne r-xdata
push esi
push ebx
push 0x10
push edi
call [ SendMessageA@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x480
retn
cmp [ rw-data ] 0x9c5f
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp ebx 0x9e34
jb r-xdata
cmp ebx 0x9cd6
jae r-xdata
push 0x1
add ebx 0xffff62f8
push ebx
call sub_4036c0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x480
retn
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x480
retn
mov eax r--data
mov [ rw-data ] ebx
call sub_402100
mov ecx [ rw-data ]
push 0x1
push ecx
mov eax r--data
call sub_402290
push edi
mov eax ebx
call sub_402470
add esp 0xc
pop edi
pop esi
pop ebx
add esp 0x480
retn
mov ebx 0x9c5e
mov eax r--data
mov [ rw-data ] ebx
call sub_402100
mov edx [ rw-data ]
push 0x1
push edx
mov eax r--data
call sub_402290
add esp 0x8
cmp ebx 0x9c4a
jne r-xdata
mov eax r--data
mov [ rw-data ] ebx
call sub_402100
mov ecx [ rw-data ]
push 0x1
push ecx
mov eax r--data
call sub_402290
add esp 0x8
cmp ebx 0x9c54
jne r-xdata
cmp ebx 0x9e66
jb r-xdata
cmp ebx 0x9e35
jae r-xdata
push 0x0
lea eax [ ebx - 0x9ca4 ]
call sub_401ca0
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x480
retn
and [ rw-data ] 0xfffffffe
mov eax [ rw-data ]
push eax
call [ rw-data ]
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x480
retn
or [ rw-data ] 0x10000001
mov eax [ rw-data ]
push eax
call [ rw-data ]
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x480
retn
and [ rw-data ] 0xfffffffb
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x480
retn
or [ rw-data ] 0x4
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x480
retn
cmp ebx 0x9d6c
jne r-xdata
cmp ebx 0x9e67
jae r-xdata
push 0x0
lea eax [ ebx - 0x9a4c ]
call sub_401ca0
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x480
retn
mov eax [ esp + 0x490 ]
push esi
push ebx
push eax
push edi
call sub_4051c0
add esp 0x10
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x480
retn
test esi esi
jne r-xdata
push 0x1
lea eax [ ebx - 0x9a7e ]
call sub_401ca0
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x480
retn
cmp [ rw-data ] 0x0
je r-xdata
push 0x21
push r--data
push r--data
push edi
call [ MessageBoxA@IAT ]
cmp eax 0x1
jne r-xdata
mov [ rw-data ] 0x0
call sub_401970
call [ rw-data ]
mov edi [ wsprintfA@IAT ]
mov esi 0x9
cmp [ rw-data ] esi
je r-xdata
push esi
lea edx [ esp + 0x40 ]
push r--data
push edx
call edi
add esp 0xc
lea eax [ esp + 0x3c ]
push eax
call [ rw-data ]
sub esi 0x1
jns r-xdata
xor esi esi
mov [ rw-data ] esi
call sub_401970
call [ rw-data ]
mov edi [ wsprintfA@IAT ]
mov esi 0x9
mov edi edi
push esi
lea ecx [ esp + 0x40 ]
push r--data
push ecx
call edi
add esp 0xc
lea edx [ esp + 0x3c ]
push edx
call [ rw-data ]
add esi 0x1
cmp esi 0x9
jle r-xdata
push rw-data
call [ rw-data ]
pop edi
pop esi
mov [ rw-data ] 0xffffffff
mov [ rw-data ] 0x1
xor eax eax
pop ebx
add esp 0x480
retn
push esi
lea ecx [ esp + 0x40 ]
push r--data
push ecx
call edi
add esp 0xc
lea edx [ esp + 0x3c ]
push edx
call [ rw-data ]
sub esi 0x1
jns r-xdata
xor esi esi
push esi
lea eax [ esp + 0x40 ]
push r--data
push eax
call edi
add esp 0xc
lea ecx [ esp + 0x3c ]
push ecx
call [ rw-data ]
add esi 0x1
cmp esi 0x9
jle r-xdata
jmp r-xdata
sub_403f3d
add al 0x4
add al 0x4
add [ ecx ] eax
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ edx ]
add al [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_403f60
mov eax [ esp + 0x4 ]
push eax
call sub_405400
add esp 0x4
test eax eax
jl r-xdata
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x32
jge r-xdata
mov [ esp + 0x4 ] 0xffffffff
jmp sub_405430
mov eax [ rw-data ]
mov ecx eax
shl ecx 0x4
add ecx eax
shl ecx 0x4
mov edx [ ecx + rw-data ]
push 0x0
push edx
call sub_4036c0
add esp 0x8
mov [ esp + 0x4 ] 0x0
jmp sub_405430
push 0x0
push eax
call sub_4036c0
add esp 0x8
mov [ esp + 0x4 ] 0x0
jmp sub_405430
sub_403fd0
sub esp 0x1b0
push ebx
mov ebx [ esp + 0x1bc ]
cmp ebx 0x14
push ebp
push esi
push edi
mov edi [ esp + 0x1c4 ]
ja r-xdata
cmp ebx 0x200
ja r-xdata
je r-xdata
mov eax ebx
sub eax 0x20a
je r-xdata
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x1b0
retn 0x10
lea eax [ ebx - 0x1 ]
cmp eax 0xf
ja r-xdata
mov edx [ esp + 0x1d0 ]
mov eax [ esp + 0x1cc ]
push edx
push eax
push 0x20a
sub eax 0x7
je r-xdata
cmp [ rw-data ] 0x9c5f
jne r-xdata
mov eax ebx
sub eax 0x7e
je r-xdata
cmp ebx [ rw-data ]
jne r-xdata
movzx eax [ eax + lookup_table_404894 ]
jmp [ eax * 4 + jump_table_404874 ]
push 0x0
push 0x0
push 0x8
jmp r-xdata
sub eax 0x1
je r-xdata
mov edx [ esp + 0x1d0 ]
mov eax [ esp + 0x1cc ]
push edx
push eax
push ebx
push edi
call [ DefWindowProcA@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1b0
retn 0x10
lea edx [ esp + 0x14 ]
push edx
call [ GetCursorPos@IAT ]
mov eax [ esp + 0x18 ]
cmp [ rw-data ] eax
mov esi eax
je r-xdata
cmp [ rw-data ] 0x9c5e
jne r-xdata
sub eax 0x86
je r-xdata
mov eax [ esp + 0x1cc ]
mov ecx [ esp + 0x1d0 ]
mov edx [ rw-data ]
push ecx
shl eax 0x10
push eax
push 0x20a
mov [ esp + 0x1d8 ] eax
push edx
jmp r-xdata
mov ecx [ esp + 0x1d0 ]
mov ebp [ ecx + 0x4 ]
mov esi 0x1
push esi
call [ SetErrorMode@IAT ]
push edi
mov [ rw-data ] eax
mov [ rw-data ] sub_403010
call [ GetMenu@IAT ]
push 0x320
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] 0x0
call sub_401120
mov ebx [ GetSystemMetrics@IAT ]
add esp 0x4
push 0x10
mov esi eax
call ebx
sub eax esi
cdq
sub eax edx
mov esi eax
push 0x258
sar esi 0x1
call sub_401140
add esp 0x4
push 0x11
mov [ esp + 0x14 ] eax
call ebx
mov ecx [ esp + 0x10 ]
sub eax ecx
cdq
push 0xca0000
sub eax edx
push 0xfffffff0
mov ebx eax
push edi
sar ebx 0x1
call [ SetWindowLongA@IAT ]
push 0x60
push 0x258
call sub_401140
add esp 0x4
push eax
push 0x320
call sub_401120
add esp 0x4
push eax
push ebx
push esi
push 0x0
push edi
call [ SetWindowPos@IAT ]
call sub_403910
mov ebx [ rw-data ]
mov eax r--data
call sub_402100
mov ebx [ rw-data ]
mov eax r--data
call sub_402100
mov ebx [ rw-data ]
mov eax r--data
call sub_402100
call sub_404bc0
push rw-data
call sub_401180
push 0x0
call sub_401e40
push 0x1
call sub_401e40
add esp 0xc
push 0x0
push rw-data
call [ InterlockedExchange@IAT ]
push 0x5000
push 0x30
push ebp
push edi
call [ rw-data ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
push edi
call ImmGetDefaultIMEWnd
test eax eax
mov esi [ SendMessageA@IAT ]
je r-xdata
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x8
push edx
jmp r-xdata
mov eax [ esp + 0x1cc ]
sub eax 0x1
je r-xdata
cmp [ esp + 0x1d0 ] 0x0
jne r-xdata
call sub_401970
call sub_404d60
call [ rw-data ]
call [ rw-data ]
cmp [ rw-data ] 0x9c5f
jne r-xdata
mov ecx [ rw-data ]
push ecx
mov eax [ rw-data ]
push 0x0
push 0x0
push 0x7
push eax
jmp r-xdata
test eax eax
jne r-xdata
push 0x320
call sub_401120
mov ebx [ GetSystemMetrics@IAT ]
add esp 0x4
push 0x10
mov esi eax
call ebx
sub eax esi
cdq
sub eax edx
mov esi eax
push 0x258
sar esi 0x1
call sub_401140
add esp 0x4
push 0x11
mov ebp eax
call ebx
sub eax ebp
cdq
push 0xca0000
sub eax edx
push 0xfffffff0
mov ebx eax
push edi
sar ebx 0x1
call [ SetWindowLongA@IAT ]
push 0x60
push 0x258
call sub_401140
add esp 0x4
push eax
push 0x320
call sub_401120
add esp 0x4
push eax
push ebx
push esi
push 0xfffffffe
push edi
call [ SetWindowPos@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ esp + 0x1cc ] 0x12
jne r-xdata
sub eax 0xd
jne r-xdata
call [ SendMessageA@IAT ]
mov eax r--data
call sub_402740
mov [ rw-data ] eax
mov eax r--data
call sub_402740
cmp [ rw-data ] 0x0
mov [ rw-data ] eax
mov [ rw-data ] 0x1
jne r-xdata
push eax
push r--data
push r--data
push edi
call [ MessageBoxA@IAT ]
push edi
call [ DestroyWindow@IAT ]
mov ebx [ esp + 0x1c8 ]
jmp r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x7
push ecx
call esi
jmp r-xdata
push 0x0
push 0x21
push 0x283
push eax
call esi
mov ecx [ esp + 0x1c4 ]
push 0x0
push 0x9c5e
push 0x111
push ecx
call [ SendMessageA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1b0
retn 0x10
sub eax 0x1
jne r-xdata
mov edx [ esp + 0x1c4 ]
push edx
mov esi [ esp + 0x1c4 ]
push 0x21
push r--data
push r--data
push esi
call [ MessageBoxA@IAT ]
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push eax
call [ SetErrorMode@IAT ]
push 0x0
call [ PostQuitMessage@IAT ]
jmp r-xdata
mov ebp [ ChangeDisplaySettingsA@IAT ]
push 0x2
push 0x0
call ebp
test eax eax
push 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] eax
jne r-xdata
push 0x1000
call [ rw-data ]
push 0x1
push 0x0
push 0x0
call [ InvalidateRect@IAT ]
push 0x0
call [ UpdateWindow@IAT ]
mov ebx [ esp + 0x1c8 ]
jmp r-xdata
mov eax [ rw-data ]
push eax
push edi
call [ SetMenu@IAT ]
cmp [ rw-data ] 0x0
mov esi [ EnableMenuItem@IAT ]
je r-xdata
cmp [ rw-data ] 0x9c5f
jne r-xdata
mov eax [ esp + 0x1d0 ]
mov ecx [ esp + 0x1cc ]
mov edx [ esp + 0x1c4 ]
push 0x111
call sub_403a90
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1b0
retn 0x10
mov al [ rw-data ]
cmp al 0xff
je r-xdata
mov al [ rw-data ]
cmp al 0xff
je r-xdata
mov eax [ esp + 0x1c4 ]
push 0x0
push 0x9c5f
push 0x111
push eax
call [ SendMessageA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1b0
retn 0x10
pop edi
pop esi
pop ebp
mov [ rw-data ] 0x0
xor eax eax
pop ebx
add esp 0x1b0
retn 0x10
push esi
jmp r-xdata
call [ GetDC@IAT ]
mov ebx [ GetDeviceCaps@IAT ]
mov esi eax
push 0xc
push esi
call ebx
push 0x74
push esi
mov [ esp + 0x18 ] eax
call ebx
push esi
push 0x0
mov [ esp + 0x24 ] eax
call [ ReleaseDC@IAT ]
mov ebx [ EnumDisplaySettingsA@IAT ]
lea eax [ esp + 0x20 ]
push eax
xor esi esi
push esi
push esi
call ebx
test eax eax
je r-xdata
push eax
call ebp
jmp r-xdata
mov [ rw-data ] esi
jmp r-xdata
xor eax eax
call sub_402760
mov eax 0x1
call sub_402760
mov [ rw-data ] esi
jmp r-xdata
mov edx [ rw-data ]
push 0x403
push 0x2
push edx
mov ecx [ rw-data ]
push 0x400
push 0x2
push ecx
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ wsprintfA@IAT ]
mov esi 0x9
push eax
call [ rw-data ]
push r--data
lea edx [ esp + 0xc1 ]
push edx
mov [ esp + 0xc4 ] al
call [ lstrcpyA@IAT ]
lea eax [ esp + 0xbc ]
push eax
call [ rw-data ]
call [ DestroyWindow@IAT ]
mov ebx [ esp + 0x1c8 ]
jmp r-xdata
mov ecx [ rw-data ]
push 0x403
push 0x1
push ecx
mov eax [ rw-data ]
push 0x400
push 0x1
push eax
jmp r-xdata
call esi
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
call sub_402760
jmp r-xdata
mov eax 0x1
call sub_402760
lea ecx [ esp + 0x14 ]
push ecx
call [ GetCursorPos@IAT ]
mov edx [ esp + 0x18 ]
mov [ rw-data ] edx
jmp r-xdata
push esi
lea ecx [ esp + 0x24 ]
push r--data
push ecx
call ebx
add esp 0xc
lea edx [ esp + 0x20 ]
push edx
call [ rw-data ]
sub esi 0x1
jns r-xdata
xor esi esi
jmp r-xdata
mov ecx [ esp + 0x10 ]
cmp [ esp + 0x88 ] ecx
jne r-xdata
call esi
mov [ rw-data ] 0x1
push esi
lea eax [ esp + 0x24 ]
push r--data
push eax
call ebx
add esp 0xc
lea ecx [ esp + 0x20 ]
push ecx
call [ rw-data ]
add esi 0x1
cmp esi 0x9
jle r-xdata
lea ecx [ esp + 0x20 ]
push ecx
add esi 0x1
push esi
push 0x0
call ebx
test eax eax
jne r-xdata
cmp [ esp + 0x8c ] 0x0
jne r-xdata
push 0x0
push sub_4031b0
call [ rw-data ]
mov esi 0x1
push esi
push sub_403410
call [ rw-data ]
push 0x2
push sub_4013b0
call [ rw-data ]
push 0x4
push sub_4013f0
call [ rw-data ]
push 0x3
push sub_403580
call [ rw-data ]
push 0x5
push sub_4013f0
call [ rw-data ]
push 0x7
push sub_401490
call [ rw-data ]
push 0x6
push sub_401400
call [ rw-data ]
push 0x8
push sub_4014f0
call [ rw-data ]
push 0x9
push sub_401560
call [ rw-data ]
push 0xa
push sub_403f60
call [ rw-data ]
push 0xb
push sub_4035b0
call [ rw-data ]
push 0xc
push sub_4015a0
call [ rw-data ]
push 0xd
push sub_401600
call [ rw-data ]
push 0xe
push sub_4016b0
call [ rw-data ]
push 0xf
push sub_401700
call [ rw-data ]
mov edx [ rw-data ]
push 0x82
push 0x81
push 0x80
push edx
push ebp
push edi
call sub_405380
mov eax [ rw-data ]
add esp 0x18
push eax
call [ rw-data ]
mov eax 0x9c5f
cmp [ rw-data ] eax
jne r-xdata
jmp r-xdata
cmp [ esp + 0x90 ] 0x0
jne r-xdata
push rw-data
mov [ rw-data ] esi
call [ rw-data ]
mov ebx [ esp + 0x1c8 ]
mov [ rw-data ] esi
jmp r-xdata
push edi
call sub_402470
add esp 0x4
mov edx [ esp + 0x1c ]
cmp [ esp + 0x98 ] edx
jne r-xdata
push 0x2
lea eax [ esp + 0x24 ]
push eax
mov [ esp + 0x50 ] 0x180000
call ebp
test eax eax
je r-xdata
push 0x0
lea edx [ esp + 0x24 ]
push edx
call ebp
sub_4048b0
sub esp 0x38
mov eax [ r--data ]
mov ecx [ r--data ]
push esi
mov [ esp + 0x4 ] eax
mov [ esp + 0xc ] eax
lea eax [ esp + 0xc ]
push eax
push 0x1
push 0x0
mov [ esp + 0x14 ] ecx
mov [ esp + 0x1c ] ecx
call [ CreateMutexA@IAT ]
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
call sub_4011c0
mov esi [ esp + 0x40 ]
push r--data
push rw-data
mov [ rw-data ] esi
call [ lstrcpyA@IAT ]
mov [ rw-data ] 0x0
call sub_401de0
test eax eax
jne r-xdata
push r--data
lea ecx [ esp + 0x8 ]
push ecx
call [ FindWindowA@IAT ]
mov esi eax
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
add esp 0x38
retn 0x10
call sub_401810
push r--data
call [ RegisterWindowMessageA@IAT ]
cmp [ esp + 0x44 ] 0x0
mov [ rw-data ] eax
jne r-xdata
xor eax eax
pop esi
add esp 0x38
retn 0x10
push 0x9
push esi
call [ ShowWindow@IAT ]
push esi
call [ SetForegroundWindow@IAT ]
mov eax [ rw-data ]
push 0x0
push eax
push 0x0
push 0x0
push 0x80000000
push 0x80000000
push 0x80000000
push 0x80000000
push 0xca0000
push r--data
lea ecx [ esp + 0x2c ]
push ecx
push 0x0
call [ CreateWindowExA@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
push 0x28
lea edx [ esp + 0x18 ]
push 0x0
push edx
call sub_4010b0
add esp 0xc
push 0x7f00
push 0x0
mov [ esp + 0x1c ] 0x20
mov [ esp + 0x38 ] 0x0
call [ LoadCursorA@IAT ]
push r--data
push esi
mov [ esp + 0x34 ] eax
call [ LoadIconA@IAT ]
mov ecx [ rw-data ]
mov [ esp + 0x28 ] eax
lea edx [ esp + 0x14 ]
lea eax [ esp + 0x4 ]
push edx
mov [ esp + 0x1c ] sub_403fd0
mov [ esp + 0x3c ] eax
mov [ esp + 0x38 ] 0x65
mov [ esp + 0x28 ] ecx
call [ RegisterClassA@IAT ]
mov edx [ esp + 0x4c ]
push edx
push eax
call [ ShowWindow@IAT ]
mov eax [ rw-data ]
push eax
call [ UpdateWindow@IAT ]
call sub_403150
pop esi
add esp 0x38
retn 0x10
sub_404a50
mov eax [ esp + 0x4 ]
lea ecx [ eax + 0x11111111 ]
lea edx [ eax + 0x22222222 ]
mov [ rw-data ] ecx
mov [ rw-data ] edx
lea ecx [ eax + 0x33333333 ]
lea edx [ eax + 0x44444444 ]
mov [ rw-data ] ecx
mov [ rw-data ] edx
lea ecx [ eax + 0x55555555 ]
lea edx [ eax + 0x66666666 ]
mov [ rw-data ] eax
add eax 0x77777777
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] eax
retn
sub_404ab0
mov edx [ rw-data ]
push ebx
mov ebx [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
mov edi [ rw-data ]
mov ecx edx
mov eax esi
shr eax 0x19
shl ecx 0x7
add ecx eax
mov eax edi
mov [ rw-data ] edi
mov edi [ rw-data ]
mov [ rw-data ] edi
mov edi [ rw-data ]
shl eax 0x1a
shr ebx 0x6
mov [ rw-data ] edx
mov edx [ rw-data ]
add eax ebx
mov [ rw-data ] edi
pop edi
mov [ rw-data ] esi
mov [ rw-data ] edx
mov edx [ rw-data ]
xor eax ecx
pop esi
mov [ rw-data ] edx
mov [ rw-data ] eax
pop ebx
retn
sub_404b30
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax [ edi ]
push eax
call sub_404a50
mov ebx [ esp + 0x18 ]
add ebx 0xfffffffc
add esp 0x4
xor esi esi
test ebx ebx
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
nop
call sub_404ab0
xor al [ esi + edi + 0x4 ]
add esi 0x1
cmp esi ebx
mov [ esi + edi - 0x1 ] al
jl r-xdata
sub_404b70
push ebx
push ebp
push esi
call [ timeGetTime@IAT ]
push eax
call sub_404a50
call sub_404ab0
mov ebp eax
push ebp
call sub_404a50
mov ebx [ esp + 0x1c ]
add esp 0x8
xor esi esi
test ebx ebx
jle r-xdata
pop esi
mov eax ebp
pop ebp
pop ebx
retn
push edi
mov edi [ esp + 0x14 ]
mov edi edi
call sub_404ab0
xor [ esi + edi ] al
add esi 0x1
cmp esi ebx
jl r-xdata
pop edi
sub_404bd0
mov eax [ esp + 0x4 ]
push eax
call sub_4054c0
movsx ecx [ eax ]
movsx edx [ eax + 0x1 ]
lea ecx [ ecx + ecx * 4 ]
lea ecx [ edx + ecx * 2 ]
movsx edx [ eax + 0x2 ]
lea ecx [ ecx + ecx * 4 ]
lea ecx [ edx + ecx * 2 ]
movsx edx [ eax + 0x3 ]
lea ecx [ ecx + ecx * 4 ]
lea ecx [ edx + ecx * 2 - 0xd050 ]
mov [ rw-data ] ecx
movsx ecx [ eax + 0x5 ]
lea edx [ ecx + ecx * 4 ]
movsx ecx [ eax + 0x6 ]
lea ecx [ ecx + edx * 2 ]
lea edx [ ecx + ecx * 4 ]
movsx ecx [ eax + 0x7 ]
lea ecx [ ecx + edx * 2 ]
lea edx [ ecx + ecx * 4 ]
movsx ecx [ eax + 0x8 ]
lea edx [ ecx + edx * 2 - 0xd050 ]
movsx ecx [ eax + 0xa ]
lea ecx [ ecx + ecx * 4 ]
mov [ rw-data ] edx
movsx edx [ eax + 0xb ]
lea ecx [ edx + ecx * 2 ]
movsx edx [ eax + 0xc ]
lea ecx [ ecx + ecx * 4 ]
lea ecx [ edx + ecx * 2 ]
movsx edx [ eax + 0xd ]
lea ecx [ ecx + ecx * 4 ]
lea ecx [ edx + ecx * 2 - 0xd050 ]
mov [ rw-data ] ecx
movsx ecx [ eax + 0xf ]
lea edx [ ecx + ecx * 4 ]
movsx ecx [ eax + 0x10 ]
lea ecx [ ecx + edx * 2 ]
lea edx [ ecx + ecx * 4 ]
movsx ecx [ eax + 0x11 ]
lea ecx [ ecx + edx * 2 ]
lea edx [ ecx + ecx * 4 ]
movsx ecx [ eax + 0x12 ]
lea edx [ ecx + edx * 2 - 0xd050 ]
movsx ecx [ eax + 0x14 ]
mov [ rw-data ] edx
movsx edx [ eax + 0x15 ]
lea ecx [ ecx + ecx * 4 ]
lea ecx [ edx + ecx * 2 ]
movsx edx [ eax + 0x16 ]
lea ecx [ ecx + ecx * 4 ]
lea ecx [ edx + ecx * 2 ]
movsx edx [ eax + 0x17 ]
push 0x104
add eax 0x19
lea ecx [ ecx + ecx * 4 ]
push eax
lea ecx [ edx + ecx * 2 - 0xd050 ]
push rw-data
mov [ rw-data ] ecx
call sub_4056e0
mov edx [ rw-data ]
add esp 0x10
push edx
call [ GetMenu@IAT ]
push 0x403
push 0x1
push eax
call [ EnableMenuItem@IAT ]
mov eax [ rw-data ]
push eax
call [ DrawMenuBar@IAT ]
mov ecx [ rw-data ]
push 0x0
push 0xe678
push 0x111
push ecx
call [ SendMessageA@IAT ]
xor eax eax
retn
sub_404d10
mov eax [ esp + 0x4 ]
push eax
call sub_4053f0
mov ecx [ rw-data ]
add esp 0x4
push 0x0
push 0xe679
push 0x111
push ecx
call [ SendMessageA@IAT ]
mov edx [ rw-data ]
push edx
call [ GetMenu@IAT ]
push 0x400
push 0x1
push eax
call [ EnableMenuItem@IAT ]
mov eax [ rw-data ]
push eax
call [ DrawMenuBar@IAT ]
xor eax eax
retn
sub_404d80
mov eax [ rw-data ]
sub esp 0x14
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ eax ]
push esi
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea edx [ esp + 0x18 ]
push edx
push eax
call [ ecx + 0x20 ]
test eax eax
jne r-xdata
xor eax eax
pop esi
add esp 0x14
retn
mov eax [ rw-data ]
pop esi
add esp 0x14
retn
push edi
mov edi [ Sleep@IAT ]
jmp r-xdata
cmp [ esp + 0x10 ] 0x1
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax ]
push esi
lea edx [ esp + 0xc ]
push edx
lea edx [ esp + 0x14 ]
push edx
lea edx [ esp + 0x1c ]
push edx
push eax
call [ ecx + 0x20 ]
test eax eax
je r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
push edx
mov edx [ esp + 0x10 ]
push edx
push 0x1
push eax
call [ ecx + 0x30 ]
cmp [ rw-data ] esi
jne r-xdata
pop edi
mov eax [ rw-data ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] esi
mov ecx [ eax ]
push eax
call [ ecx + 0x24 ]
push esi
call edi
mov eax [ rw-data ]
mov edx [ eax ]
push esi
push esi
push 0x1
lea ecx [ esp + 0x20 ]
push ecx
push eax
call [ edx + 0x38 ]
mov eax [ rw-data ]
mov edx [ eax ]
push eax
call [ edx + 0x1c ]
mov [ rw-data ] esi
jmp r-xdata
sub_404e70
push rw-data
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx [ eax ]
push rw-data
push r--data
push eax
call [ ecx ]
mov eax [ rw-data ]
mov edx [ eax ]
push rw-data
push r--data
push eax
call [ edx ]
mov eax [ rw-data ]
mov ecx [ eax ]
push rw-data
push r--data
push eax
call [ ecx ]
mov eax [ rw-data ]
mov edx [ eax ]
push rw-data
push r--data
push eax
call [ edx ]
xor eax eax
retn
or eax 0xffffffff
retn
sub_404ef0
mov eax [ rw-data ]
mov ecx [ eax ]
push esi
xor esi esi
push esi
push eax
call [ ecx + 0x4c ]
mov eax [ rw-data ]
mov edx [ eax ]
push esi
push eax
call [ edx + 0x74 ]
mov eax [ rw-data ]
mov ecx [ eax ]
push esi
push esi
push esi
push eax
call [ ecx + 0x34 ]
mov eax [ rw-data ]
mov edx [ eax ]
push eax
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov edx [ eax ]
push eax
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov edx [ eax ]
push eax
call [ edx + 0x8 ]
mov [ rw-data ] esi
pop esi
retn
sub_404fa0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x24 ]
mov edx [ rw-data ]
push 0x0
push edx
call [ ShowWindow@IAT ]
mov eax [ rw-data ]
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call [ SetWindowPos@IAT ]
call sub_404ef0
mov [ rw-data ] 0x0
xor eax eax
retn
or eax 0xffffffff
retn
sub_405000
sub esp 0x218
cmp [ rw-data ] 0x1
jne r-xdata
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
call sub_404fa0
mov ecx [ esp + 0x220 ]
push 0x104
lea eax [ esp + 0x18 ]
push eax
push 0xffffffff
push ecx
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
mov eax [ rw-data ]
mov edx [ eax ]
push ebx
lea ecx [ esp + 0x18 ]
push ecx
push eax
call [ edx + 0x34 ]
test eax eax
je r-xdata
call sub_404e70
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov eax [ esp + 0x224 ]
lea edx [ esp + 0x4 ]
push edx
push eax
call [ GetClientRect@IAT ]
cmp [ rw-data ] ebx
jle r-xdata
call sub_404ef0
mov [ rw-data ] ebx
mov [ rw-data ] ebx
or eax 0xffffffff
pop ebx
add esp 0x218
retn
mov ecx [ esp + 0xc ]
sub ecx [ esp + 0x4 ]
mov edx [ esp + 0x10 ]
sub edx [ esp + 0x8 ]
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ecx
mov [ rw-data ] edx
cmp [ rw-data ] ebx
jg r-xdata
mov eax [ rw-data ]
push esi
push 0x5
push eax
call [ ShowWindow@IAT ]
mov ecx [ rw-data ]
mov esi [ SetWindowPos@IAT ]
push 0x3
push ebx
push ebx
push ebx
push ebx
push 0xfffffffe
push ecx
call esi
mov eax [ esp + 0xc ]
mov edx [ rw-data ]
mov ecx [ rw-data ]
push ebx
push 0x261
push 0x32c
add edx eax
mov eax [ rw-data ]
push edx
mov edx [ esp + 0x18 ]
add ecx edx
push ecx
push ebx
push eax
call esi
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0x74 ]
mov eax [ rw-data ]
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x4c ]
mov eax [ rw-data ]
mov edx [ eax ]
push 0x46000000
push eax
call [ edx + 0x24 ]
mov eax [ rw-data ]
mov ecx [ eax ]
push 0x261
push 0x32c
push ebx
push ebx
push eax
call [ ecx + 0x9c ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx [ eax ]
push ecx
push eax
call [ edx + 0x7c ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx [ eax ]
push 0xe67a
push 0x111
push ecx
push eax
call [ edx + 0x34 ]
mov eax [ rw-data ]
mov edx [ eax ]
push eax
call [ edx + 0x1c ]
pop esi
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
xor eax eax
pop ebx
add esp 0x218
retn
sub_4051c0
movzx eax [ esp + 0xc ]
sub eax 0xe678
je r-xdata
mov eax [ esp + 0x4 ]
push eax
push rw-data
call sub_405000
add esp 0x8
sub eax 0x1
jne r-xdata
xor eax eax
retn
call sub_404fa0
xor eax eax
retn
sub_4051f0
sub esp 0x10
push ebx
mov ebx [ esp + 0x20 ]
push esi
mov esi [ esp + 0x20 ]
mov eax esi
sub eax 0x1
push edi
mov edi [ esp + 0x20 ]
je r-xdata
mov ecx [ rw-data ]
lea eax [ esp + 0xc ]
push eax
push ecx
call [ GetWindowRect@IAT ]
mov edx [ esp + 0x18 ]
sub edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
sub eax [ esp + 0xc ]
push 0x82
push edx
push eax
push 0x0
push 0x0
push 0xffffffff
push edi
call [ SetWindowPos@IAT ]
sub eax 0x1
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
jmp r-xdata
sub eax 0x10f
jne r-xdata
mov ecx [ esp + 0x2c ]
push ecx
push ebx
push esi
push edi
call [ DefWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x10
movzx eax bx
sub eax 0xe678
je r-xdata
push edi
push rw-data
call sub_405000
add esp 0x8
jmp r-xdata
sub eax 0x1
jne r-xdata
call sub_404fa0
jmp r-xdata
sub_4052a0
sub esp 0x30
mov eax [ r--data ]
mov ecx [ r--data ]
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] edx
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] edx
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] edx
mov [ esp + 0x28 ] edx
push 0x7f00
push edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] ecx
mov [ esp + 0x34 ] edx
mov [ esp + 0x10 ] 0x20
mov [ esp + 0x2c ] edx
call [ LoadCursorA@IAT ]
push 0x7f00
push 0x0
mov [ esp + 0x28 ] eax
call [ LoadIconA@IAT ]
mov [ esp + 0x1c ] eax
lea ecx [ esp + 0x8 ]
lea eax [ esp ]
push ecx
mov [ esp + 0x10 ] sub_4051f0
mov [ esp + 0x30 ] eax
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x1c ] esi
call [ RegisterClassA@IAT ]
mov edx [ esp + 0x34 ]
push 0x0
push esi
push 0x0
push edx
push 0x80000000
push 0x80000000
push 0x80000000
push 0x80000000
push 0x46000000
push r--data
lea eax [ esp + 0x28 ]
push eax
push 0x0
call [ CreateWindowExA@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
add esp 0x30
retn
push 0x0
push eax
call [ ShowWindow@IAT ]
sub_405380
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ rw-data ] eax
movzx eax [ esp + 0x10 ]
push esi
push eax
push sub_404bd0
mov [ rw-data ] ecx
mov [ rw-data ] edx
call ISM_RegisterFunction
movzx ecx [ esp + 0x18 ]
push ecx
push sub_404d10
call ISM_RegisterFunction
movzx edx [ esp + 0x1c ]
push edx
push sub_404f70
call ISM_RegisterFunction
mov eax [ rw-data ]
mov esi [ rw-data ]
push eax
call sub_4052a0
add esp 0x4
push 0x0
call [ CoInitialize@IAT ]
xor eax eax
pop esi
retn
sub_405400
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push edi
push esi
call [ LocalLock@IAT ]
mov edi [ eax + 0x4 ]
push esi
call [ LocalUnlock@IAT ]
push esi
call [ LocalFree@IAT ]
mov eax edi
pop edi
pop esi
retn
xor eax eax
pop esi
retn
sub_405430
push esi
push 0x8
push 0x2
call [ LocalAlloc@IAT ]
mov esi eax
push esi
call [ LocalLock@IAT ]
mov ecx [ esp + 0x8 ]
push esi
mov [ eax ] 0x1
mov [ eax + 0x4 ] ecx
call [ LocalUnlock@IAT ]
mov eax esi
pop esi
retn
sub_405460
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
push esi
call [ lstrlenA@IAT ]
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
push 0x2
call [ LocalAlloc@IAT ]
mov ebp eax
push ebp
call [ LocalLock@IAT ]
lea ecx [ ebx + 0x1 ]
mov edx ecx
shr ecx 0x2
mov [ eax ] 0x2
lea edi [ eax + 0x4 ]
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
push ebp
mov [ eax + ebx + 0x4 ] 0x0
call [ LocalUnlock@IAT ]
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn
sub_4054c0
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push esi
call [ LocalLock@IAT ]
add eax 0x4
push eax
push rw-data
call [ lstrcpyA@IAT ]
push esi
call [ LocalUnlock@IAT ]
push esi
call [ LocalFree@IAT ]
mov eax rw-data
pop esi
retn
xor eax eax
pop esi
retn
sub_4054fe
push 0xc
push r--data
call sub_406734
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40676f
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_405be0
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_405c59
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_405551
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_405c84
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
sub_40556f
push 0xc
push r--data
call sub_406734
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x3
jne r-xdata
test esi esi
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
cmp [ rw-data ] 0x1
je r-xdata
inc esi
push 0x4
call sub_405be0
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_406438
pop ecx
mov [ ebp - 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_4055e1
mov eax [ ebp - 0x1c ]
test eax eax
jne r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
add esi 0xf
and esi 0xfffffff0
call sub_40676f
retn
sub_4055ea
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_40556f
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_406889
test eax eax
pop ecx
jne r-xdata
sub_405630
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_405670
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_4056e0
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
sub ecx 0x1
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
sub ebx 0x1
jne r-xdata
sub ebx 0x1
jne r-xdata
xor eax eax
mov [ edi ] al
add edi 0x1
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
sub ecx 0x1
jne r-xdata
add edi 0x4
xor eax eax
sub ecx 0x1
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_40584d
push 0x60
push r--data
call sub_406734
mov edi 0x94
mov eax edi
call sub_407730
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ esi ] edi
push esi
call [ GetVersionExA@IAT ]
mov ecx [ esi + 0x10 ]
mov [ rw-data ] ecx
mov eax [ esi + 0x4 ]
mov [ rw-data ] eax
mov edx [ esi + 0x8 ]
mov [ rw-data ] edx
mov esi [ esi + 0xc ]
and esi 0x7fff
mov [ rw-data ] esi
cmp ecx 0x2
je r-xdata
shl eax 0x8
add eax edx
mov [ rw-data ] eax
xor esi esi
push esi
mov edi [ GetModuleHandleA@IAT ]
call edi
cmp [ eax ] 0x5a4d
jne r-xdata
or esi 0x8000
mov [ rw-data ] esi
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
cmp [ ecx ] 0x4550
jne r-xdata
push 0x1
call sub_405a3c
pop ecx
test eax eax
jne r-xdata
movzx eax [ ecx + 0x18 ]
cmp eax 0x10b
je r-xdata
call sub_407638
test eax eax
jne r-xdata
push 0x1c
call sub_405829
cmp [ ecx + 0x74 ] 0xe
jbe r-xdata
cmp eax 0x20b
je r-xdata
call sub_4073d2
mov [ ebp - 0x4 ] esi
call sub_4071d4
test eax eax
jge r-xdata
push 0x10
call sub_405829
xor eax eax
cmp [ ecx + 0xe8 ] esi
cmp [ ecx + 0x84 ] 0xe
jbe r-xdata
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_4070b2
mov [ rw-data ] eax
call sub_407010
test eax eax
jge r-xdata
push 0x1b
call sub_405804
pop ecx
xor eax eax
cmp [ ecx + 0xf8 ] esi
jmp r-xdata
call sub_406ddd
test eax eax
jge r-xdata
push 0x8
call sub_405804
pop ecx
setne al
mov [ ebp - 0x1c ] eax
push 0x1
call sub_4068fe
pop ecx
mov [ ebp - 0x28 ] eax
cmp eax esi
je r-xdata
push 0x9
call sub_405804
pop ecx
mov [ ebp - 0x44 ] esi
lea eax [ ebp - 0x70 ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_406d80
mov [ ebp - 0x20 ] eax
test [ ebp - 0x44 ] 0x1
je r-xdata
push eax
call sub_405804
pop ecx
push 0xa
pop eax
movzx eax [ ebp - 0x40 ]
jmp r-xdata
call sub_406a4d
jmp r-xdata
push edi
call sub_406a2b
push eax
push [ ebp - 0x20 ]
push esi
push esi
call edi
push eax
call sub_4048b0
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x1c ] esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax edi
lea esp [ ebp - 0x7c ]
call sub_40676f
retn
sub_405a3c
xor eax eax
cmp [ esp + 0x4 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_405a22
cmp eax 0x3
mov [ rw-data ] eax
jne r-xdata
xor eax eax
inc eax
retn
push 0x3f8
call sub_405c11
test eax eax
pop ecx
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_405a8d
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_40777d
test eax eax
pop ecx
pop ecx
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_405ad6
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_4054fe
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_405b40
push 0x8
push r--data
call sub_406734
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
xor ebx ebx
cmp [ esi ] ebx
jne r-xdata
xor eax eax
inc eax
push 0x18
call sub_405616
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
push 0xa
call sub_405be0
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_407808
mov [ eax ] 0xc
jmp r-xdata
push edi
call sub_4054fe
pop ecx
push 0xfa0
push edi
call sub_40777d
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_4054fe
call sub_407808
mov [ eax ] 0xc
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call sub_407856
add esp 0xc
call sub_40676f
retn
or [ ebp - 0x4 ] 0xffffffff
call sub_405bd7
sub_405be0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_405b40
test eax eax
pop ecx
jne r-xdata
push 0x11
call sub_405804
pop ecx
sub_405c11
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov ecx [ esp + 0x4 ]
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x10
inc eax
retn
retn
sub_405c59
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
retn
add eax 0x14
sub_405c84
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
test cl 0x1
mov [ ebp - 0x4 ] ecx
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
test dl 0x1
mov [ ebp + 0xc ] ebx
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
cmp edx 0x20
mov ebx 0x80000000
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
cmp edx esi
mov [ ebp - 0x4 ] ecx
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
cmp edx 0x20
mov [ edx + eax + 0x4 ] cl
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
cmp ebx 0x20
mov esi 0x80000000
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_407910
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_405f9c
mov eax [ rw-data ]
mov ecx [ rw-data ]
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push esi
push 0x41c4
push 0x8
push [ rw-data ]
lea eax [ eax + eax * 4 ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
jne r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
xor eax eax
pop edi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
pop esi
pop edi
retn
sub_406053
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
shl eax 0x1
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
mov [ ebp - 0x4 ] edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_406159
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
mov ebx 0x80000000
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
mov ebx 0x80000000
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
cmp edi 0x3f
lea ecx [ ecx + esi - 0x4 ]
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
cmp edi 0x20
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_406438
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov edx [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
push ebx
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push esi
lea eax [ eax + eax * 4 ]
push edi
dec ecx
cmp ecx 0x20
lea edi [ edx + eax * 4 ]
mov [ ebp - 0x4 ] edi
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov eax [ rw-data ]
mov ebx eax
mov [ ebp - 0xc ] esi
cmp ebx edi
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
jmp r-xdata
mov edx [ eax + 0xc4 ]
and edx [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
mov esi [ ecx ]
and esi [ ebp - 0xc ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
and edx [ ebp - 0x8 ]
inc [ ebp - 0x4 ]
add ecx 0x4
mov edi [ ecx ]
and edi esi
or edx edi
je r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
cmp ebx eax
je r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
jb r-xdata
shl ecx 0x1
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_406053
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
jmp r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
add ebx 0x14
call sub_405f9c
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_406734
push sub_406788
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] esp
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_406788
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_407856
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
push ebx
call sub_407c4d
add esp 0x4
or eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x8
cmp esi 0xffffffff
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
mov eax [ edi + ecx * 4 + 0x4 ]
or eax eax
je r-xdata
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
xor ebx ebx
xor ecx ecx
xor edx edx
xor esi esi
xor edi edi
call eax
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_407814
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_407856
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_4078ea
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
mov eax [ edi + ecx * 4 + 0x8 ]
xor ebx ebx
xor ecx ecx
xor edx edx
xor esi esi
xor edi edi
call eax
sub_406889
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
xor eax eax
inc eax
retn
sub_4068a4
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
push [ esp + 0x4 ]
call [ ExitProcess@IAT ]
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ esp + 0x4 ]
call eax
sub_4068fe
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
push edi
mov ecx rw-data
mov edi rw-data
xor eax eax
cmp ecx edi
mov esi ecx
jae r-xdata
push [ esp + 0x4 ]
call eax
pop ecx
push sub_407416
call sub_407f56
mov esi rw-data
mov eax esi
mov edi rw-data
cmp eax edi
pop ecx
jae r-xdata
test eax eax
jne r-xdata
xor eax eax
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
add esi 0x4
cmp esi edi
jb r-xdata
call ecx
test eax eax
jne r-xdata
sub_406968
push 0x8
push r--data
call sub_406734
push 0x8
call sub_405be0
pop ecx
xor edi edi
mov [ ebp - 0x4 ] edi
xor esi esi
inc esi
cmp [ rw-data ] esi
jne r-xdata
mov [ rw-data ] esi
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] edi
jne r-xdata
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rw-data
mov eax rw-data
call sub_4068e6
pop ecx
or [ ebp - 0x4 ] 0xffffffff
call sub_406a17
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
call sub_40676f
retn
mov [ rw-data ] esi
push [ ebp + 0x8 ]
call sub_4068a4
push rw-data
mov eax rw-data
call sub_4068e6
pop ecx
mov eax [ rw-data ]
sub eax 0x4
mov [ rw-data ] eax
cmp eax [ rw-data ]
jb r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
call eax
jmp r-xdata
sub_406a6b
push ebp
lea ebp [ esp - 0x90 ]
sub esp 0x110
mov eax [ rw-data ]
mov ecx [ ebp + 0x98 ]
push ebx
xor eax ebp
push esi
mov [ ebp + 0x8c ] eax
xor edx edx
push edi
xor eax eax
mov esi eax
shl esi 0x3
cmp ecx [ esi + rw-data ]
jne r-xdata
inc eax
cmp eax 0x13
jb r-xdata
lea esp [ ebp - 0x8c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x8c ]
xor ecx ebp
call sub_40822c
add ebp 0x90
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp ecx [ eax * 8 + rw-data ]
je r-xdata
push edx
lea eax [ ebp - 0x80 ]
push eax
lea esi [ esi + rw-data ]
push [ esi ]
call sub_408170
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
cmp eax edx
jne r-xdata
cmp ecx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x104
lea eax [ ebp - 0x7c ]
push eax
push edx
mov [ ebp + 0x88 ] dl
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea edi [ ebp - 0x7c ]
mov eax edi
push eax
call sub_408170
inc eax
cmp eax 0x3c
pop ecx
jbe r-xdata
lea eax [ ebp - 0x7c ]
push r--data
push eax
call sub_408070
pop ecx
pop ecx
push edi
call sub_408170
push [ esi + rw-data ]
mov ebx eax
call sub_408170
lea eax [ ebx + eax + 0x1c ]
pop ecx
add eax 0x3
pop ecx
and eax 0xfffffffc
call sub_407730
mov ebx esp
push r--data
push ebx
call sub_408070
push edi
push ebx
call sub_408080
push r--data
push ebx
call sub_408080
push [ esi + rw-data ]
push ebx
call sub_408080
push 0x12010
push r--data
push ebx
call sub_407f68
add esp 0x2c
jmp r-xdata
mov eax edi
push eax
call sub_408170
mov edi eax
lea eax [ ebp - 0x7c ]
sub eax 0x3b
push 0x3
add edi eax
push r--data
push edi
call sub_4056e0
add esp 0x10
sub_406be3
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_406a6b
mov eax [ rw-data ]
test eax eax
pop ecx
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_406a6b
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_406c1c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
call sub_407480
mov edi [ ebp + 0x8 ]
mov esi eax
mov edx [ esi + 0x54 ]
mov eax [ rw-data ]
mov ecx edx
lea eax [ eax + eax * 2 ]
lea eax [ edx + eax * 4 ]
cmp ecx eax
jae r-xdata
lea ebx [ eax + eax * 2 ]
add ecx 0xc
lea ebx [ edx + ebx * 4 ]
cmp ecx ebx
jb r-xdata
xor ecx ecx
cmp [ ecx ] edi
je r-xdata
cmp [ ecx ] edi
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ ecx + 0x8 ]
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
test ecx ecx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ ecx + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0x58 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x58 ] eax
mov eax [ ecx + 0x4 ]
cmp eax 0x8
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
and [ ecx + 0x8 ] 0x0
push eax
call ebx
mov edx [ rw-data ]
mov eax [ rw-data ]
add eax edx
cmp edx eax
jge r-xdata
mov ecx [ ecx ]
cmp ecx 0xc000008e
mov edi [ esi + 0x5c ]
jne r-xdata
lea eax [ edx + edx * 2 ]
shl eax 0x2
cmp ecx 0xc0000090
jne r-xdata
mov [ esi + 0x5c ] 0x83
jmp r-xdata
mov edi [ esi + 0x54 ]
and [ eax + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add eax 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp + 0x8 ]
cmp ecx 0xc0000091
jne r-xdata
mov [ esi + 0x5c ] 0x81
jmp r-xdata
push [ esi + 0x5c ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x5c ] edi
jmp r-xdata
cmp ecx 0xc0000093
jne r-xdata
mov [ esi + 0x5c ] 0x84
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
mov [ esi + 0x58 ] eax
cmp ecx 0xc000008d
jne r-xdata
mov [ esi + 0x5c ] 0x85
jmp r-xdata
cmp ecx 0xc000008f
jne r-xdata
mov [ esi + 0x5c ] 0x82
jmp r-xdata
cmp ecx 0xc0000092
jne r-xdata
mov [ esi + 0x5c ] 0x86
jmp r-xdata
mov [ esi + 0x5c ] 0x8a
sub_406d80
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_408755
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_40826d
test eax eax
pop ecx
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_406ddd
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
cmp esi ebx
jne r-xdata
call sub_408755
mov al [ esi ]
cmp al bl
jne r-xdata
jmp r-xdata
cmp al 0x3d
je r-xdata
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_405616
mov edi eax
cmp edi ebx
pop ecx
mov [ rw-data ] edi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push esi
call sub_408170
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebp
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi ] bl
jne r-xdata
push esi
call sub_408170
mov ebp eax
inc ebp
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_4054fe
mov [ rw-data ] ebx
mov [ edi ] ebx
mov [ rw-data ] 0x1
xor eax eax
add esi ebp
push ebp
call sub_405616
cmp eax ebx
pop ecx
mov [ edi ] eax
je r-xdata
push [ rw-data ]
call sub_4054fe
mov [ rw-data ] ebx
or eax 0xffffffff
jmp r-xdata
push esi
push eax
call sub_408070
pop ecx
pop ecx
add edi 0x4
pop ecx
pop ebp
sub_406ea4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x8 ] edx
push edi
mov [ esi ] edx
mov edi ecx
mov [ ebx ] 0x1
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] edi
inc [ esi ]
test edi edi
je r-xdata
xor ecx ecx
test edx edx
sete cl
inc eax
mov edx ecx
mov cl 0x22
jmp r-xdata
mov cl [ eax ]
movzx ebx cl
inc eax
test [ ebx + rw-data ] 0x4
je r-xdata
mov cl [ eax ]
mov [ edi ] cl
inc edi
test edx edx
jne r-xdata
test cl cl
mov ebx [ ebp + 0xc ]
je r-xdata
inc [ esi ]
test edi edi
je r-xdata
cmp cl 0x20
je r-xdata
dec eax
jmp r-xdata
inc eax
mov bl [ eax ]
mov [ edi ] bl
inc edi
test edi edi
je r-xdata
cmp cl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edi - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov cl [ eax ]
cmp cl 0x20
je r-xdata
inc [ ebx ]
pop edi
pop ebx
leave
retn
and [ eax ] 0x0
inc eax
jmp r-xdata
cmp cl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ebx ]
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] edi
cmp [ eax ] 0x5c
je r-xdata
inc eax
inc edx
cmp [ eax ] 0x22
jne r-xdata
test edx edx
je r-xdata
test dl 0x1
jne r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
test edi edi
je r-xdata
shr edx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ esi ]
dec edx
jne r-xdata
mov [ edi ] 0x5c
inc edi
xor ebx ebx
lea ecx [ eax + 0x1 ]
cmp [ ecx ] 0x22
jne r-xdata
inc [ esi ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
mov [ edi ] 0x0
inc edi
test ebx ebx
je r-xdata
cmp cl 0x20
je r-xdata
mov eax ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test edi edi
je r-xdata
cmp cl 0x9
je r-xdata
xor ecx ecx
cmp [ ebp - 0x4 ] ecx
sete cl
mov [ ebp - 0x4 ] ecx
xor ebx ebx
inc ebx
xor edx edx
jmp r-xdata
movzx ecx cl
test [ ecx + rw-data ] 0x4
je r-xdata
movzx edx cl
test [ edx + rw-data ] 0x4
je r-xdata
inc [ esi ]
inc eax
inc [ esi ]
mov cl [ eax ]
mov [ edi ] cl
inc edi
jmp r-xdata
mov [ edi ] cl
inc edi
inc eax
inc [ esi ]
sub_407010
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
push 0x104
mov esi rw-data
push esi
push edi
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
cmp eax edi
mov [ rw-data ] esi
je r-xdata
call sub_408755
mov ebx esi
cmp [ eax ] 0x0
mov ebx eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ esi + edi ]
push edi
lea esi [ ebp - 0x8 ]
mov eax ebx
call sub_406ea4
mov eax [ ebp - 0x4 ]
dec eax
pop ecx
mov [ rw-data ] eax
pop ecx
mov [ rw-data ] edi
xor eax eax
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push edi
lea esi [ ebp - 0x8 ]
xor ecx ecx
mov eax ebx
call sub_406ea4
mov esi [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
shl esi 0x2
add eax esi
push eax
call sub_405616
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_4070b2
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
push esi
push edi
mov edi [ GetEnvironmentStringsW@IAT ]
xor ebx ebx
xor esi esi
cmp eax ebx
push 0x2
pop ebp
jne r-xdata
cmp eax 0x1
jne r-xdata
call edi
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebp
je r-xdata
cmp esi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
je r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call edi
mov esi eax
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
mov eax ebp
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov edi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax esi
push ebx
sar eax 0x1
inc eax
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
add eax ebp
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
sub eax esi
inc eax
mov ebp eax
push ebp
call sub_405616
mov edi eax
cmp edi ebx
pop ecx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_405616
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
add eax ebp
cmp [ eax ] bx
jne r-xdata
push ebp
push esi
push edi
call sub_408780
add esp 0xc
xor edi edi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_4054fe
pop ecx
mov [ esp + 0x10 ] ebx
sub_4071d4
sub esp 0x48
push ebx
mov ebx 0x480
push ebx
call sub_405616
test eax eax
pop ecx
jne r-xdata
mov [ rw-data ] eax
mov [ rw-data ] 0x20
lea ecx [ eax + 0x480 ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax ecx
jb r-xdata
pop ebx
add esp 0x48
retn
or [ eax ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x5 ] 0xa
mov ecx [ rw-data ]
add eax 0x24
add ecx 0x480
push ebp
push esi
push edi
lea eax [ esp + 0x14 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ esp + 0x46 ] 0x0
je r-xdata
xor ebx ebx
mov eax [ esp + 0x48 ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov edi [ eax ]
lea ebp [ eax + 0x4 ]
lea eax [ edi + ebp ]
mov [ esp + 0x10 ] eax
mov eax 0x800
cmp edi eax
jl r-xdata
mov ecx [ rw-data ]
lea eax [ ebx + ebx * 8 ]
lea esi [ ecx + eax * 4 ]
cmp [ esi ] 0xffffffff
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] edi
jge r-xdata
mov edi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor ebx ebx
test edi edi
jle r-xdata
mov esi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
cmp eax 0x2
mov [ esi ] edi
jne r-xdata
mov eax [ esp + 0x10 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov edi [ rw-data ]
add [ rw-data ] 0x20
mov [ esi ] eax
lea ecx [ eax + 0x480 ]
jmp r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
add [ esp + 0x10 ] 0x4
inc ebx
inc ebp
cmp ebx edi
jl r-xdata
mov cl [ ebp ]
test cl 0x1
je r-xdata
cmp eax ecx
jb r-xdata
lea eax [ esi + 0xc ]
push 0xfa0
push eax
call sub_40777d
test eax eax
pop ecx
pop ecx
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or [ eax ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x5 ] 0xa
mov ecx [ esi ]
add eax 0x24
add ecx ebx
add esi 0x4
cmp [ rw-data ] edi
jl r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov ecx ebx
mov eax ebx
and eax 0x1f
lea eax [ eax + eax * 8 ]
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
lea esi [ ecx + eax * 4 ]
mov eax [ esp + 0x10 ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebp ]
mov [ esi + 0x4 ] al
lea eax [ esi + 0xc ]
push 0xfa0
push eax
call sub_40777d
test eax eax
pop ecx
pop ecx
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push ebx
call sub_405616
test eax eax
pop ecx
je r-xdata
jmp r-xdata
pop edi
pop esi
pop ebp
inc [ esi + 0x8 ]
sub_4073d2
push 0xc
push r--data
call sub_406734
mov [ ebp - 0x1c ] r--data
call sub_40676f
retn
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
jmp r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
sub_407416
push 0xc
push r--data
call sub_406734
mov [ ebp - 0x1c ] r--data
call sub_40676f
retn
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
jmp r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
sub_407447
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x1c ] r--data
jae r-xdata
call sub_40676f
retn
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
jmp r-xdata
sub_407480
push ebx
push esi
call [ GetLastError@IAT ]
push [ rw-data ]
mov ebx eax
call [ rw-data ]
mov esi eax
test esi esi
jne r-xdata
push ebx
call [ SetLastError@IAT ]
mov eax esi
pop esi
pop ebx
retn
push 0x8c
push 0x1
call sub_408abd
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
push 0x10
call sub_405804
pop ecx
push esi
push [ rw-data ]
call [ rw-data ]
test eax eax
je r-xdata
mov [ esi + 0x54 ] rw-data
mov [ esi + 0x14 ] 0x1
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_4074f1
push 0x10
push r--data
call sub_406734
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
je r-xdata
call sub_40676f
retn 0x4
mov eax [ esi + 0x24 ]
cmp eax edi
je r-xdata
mov eax [ esi + 0x2c ]
cmp eax edi
je r-xdata
push eax
call sub_4054fe
pop ecx
mov eax [ esi + 0x34 ]
cmp eax edi
je r-xdata
push eax
call sub_4054fe
pop ecx
mov eax [ esi + 0x3c ]
cmp eax edi
je r-xdata
push eax
call sub_4054fe
pop ecx
mov eax [ esi + 0x44 ]
cmp eax edi
je r-xdata
push eax
call sub_4054fe
pop ecx
mov eax [ esi + 0x48 ]
cmp eax edi
je r-xdata
push eax
call sub_4054fe
pop ecx
mov eax [ esi + 0x54 ]
cmp eax rw-data
je r-xdata
push eax
call sub_4054fe
pop ecx
push 0xd
call sub_405be0
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x60 ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
push eax
call sub_4054fe
pop ecx
or [ ebp - 0x4 ] 0xffffffff
call sub_407623
push 0xc
call sub_405be0
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x64 ]
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
dec [ eax ]
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_40762f
push esi
call sub_4054fe
pop ecx
dec [ eax ]
cmp [ eax + 0x2c ] edi
je r-xdata
cmp eax [ rw-data ]
je r-xdata
cmp [ eax + 0x34 ] edi
je r-xdata
mov ecx [ eax + 0x2c ]
dec [ ecx ]
push eax
call sub_4054fe
pop ecx
cmp [ eax + 0x30 ] edi
je r-xdata
mov ecx [ eax + 0x34 ]
dec [ ecx ]
cmp [ eax + 0x40 ] edi
je r-xdata
mov ecx [ eax + 0x30 ]
dec [ ecx ]
mov ecx [ eax + 0x4c ]
dec [ ecx + 0xb4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ eax + 0x40 ]
dec [ ecx ]
cmp eax rw-data
je r-xdata
cmp [ eax ] edi
jne r-xdata
push eax
call sub_408b94
pop ecx
sub_407638
call sub_405a8d
test eax eax
jne r-xdata
push esi
push edi
push r--data
call [ GetModuleHandleA@IAT ]
mov edi eax
test edi edi
je r-xdata
call sub_407463
xor eax eax
retn
push sub_4074f1
call [ rw-data ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov [ rw-data ] eax
jne r-xdata
call sub_407463
xor eax eax
xor edi edi
push 0x8c
inc edi
push edi
call sub_408abd
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsSetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_40745a
mov [ rw-data ] eax
push esi
push [ rw-data ]
call [ rw-data ]
test eax eax
je r-xdata
mov [ esi + 0x54 ] rw-data
mov [ esi + 0x14 ] edi
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
mov eax edi
jmp r-xdata
pop edi
pop esi
retn
sub_407730
cmp eax 0x1000
jae r-xdata
push ecx
lea ecx [ esp + 0x8 ]
neg eax
add eax esp
add eax 0x4
test [ eax ] eax
xchg esp eax
mov eax [ eax ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub_40777d
push 0x10
push r--data
call sub_406734
mov eax [ rw-data ]
test eax eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
cmp [ rw-data ] 0x1
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_40676f
retn
mov eax sub_40776d
mov [ rw-data ] eax
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
sub_407814
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_407856
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_407834
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4078ea
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_407910
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_407970 ]
jmp [ ecx * 4 + jump_table_4079f0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_407a5c ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_407a5c ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_407bf8 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_407afc ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_407bf8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_407a5c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_407a5c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_407a5c ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_407bf8 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_407bf8 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_407bf8 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_407bf8 ]
sub_407c4d
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx [ esi + 0x8 ]
test bl 0x3
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ fs : 0x18 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp ebx ecx
mov [ ebp - 0x4 ] ecx
jb r-xdata
pop esi
pop ebx
leave
retn
push edi
mov edi [ esi + 0xc ]
cmp edi 0xffffffff
jne r-xdata
cmp ebx [ eax + 0x4 ]
jae r-xdata
xor edx edx
mov [ ebp + 0x8 ] edx
mov eax ebx
xor eax eax
inc eax
jmp r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp ecx edx
jae r-xdata
pop edi
inc edx
add eax 0xc
cmp edx edi
jbe r-xdata
inc [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edi ebx
and edi 0xfffff000
xor esi esi
test eax eax
jle r-xdata
mov eax [ esi - 0x8 ]
cmp eax [ ebp - 0x4 ]
jb r-xdata
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
push ebx
call [ VirtualQuery@IAT ]
test eax eax
je r-xdata
cmp [ esi * 4 + rw-data ] edi
je r-xdata
cmp eax esi
jae r-xdata
or eax 0xffffffff
cmp [ ebp - 0x8 ] 0x1000000
jne r-xdata
test esi esi
jle r-xdata
inc esi
cmp esi eax
jl r-xdata
test [ ebp - 0xc ] 0xcc
je r-xdata
mov ebx [ InterlockedExchange@IAT ]
push 0x1
push rw-data
call ebx
test eax eax
jne r-xdata
push 0x1
push rw-data
call [ InterlockedExchange@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x1c ]
cmp [ ecx ] 0x5a4d
jne r-xdata
cmp [ esi * 4 + rw-data ] edi
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
mov edx ecx
jle r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor ecx ecx
test esi esi
jl r-xdata
mov eax [ rw-data ]
lea esi [ eax - 0x1 ]
test esi esi
jl r-xdata
test edx edx
jne r-xdata
lea eax [ ecx * 4 + rw-data ]
cmp [ eax + 0x18 ] 0x10b
jne r-xdata
push 0x0
push rw-data
call ebx
jmp r-xdata
lea eax [ ecx * 4 + rw-data ]
mov edx [ eax ]
inc ecx
cmp ecx esi
mov [ eax ] edi
mov edi edx
jle r-xdata
cmp eax 0x10
jge r-xdata
cmp [ esi * 4 + rw-data ] edi
je r-xdata
push 0x0
push rw-data
call [ InterlockedExchange@IAT ]
jmp r-xdata
push 0xf
pop ebx
cmp ecx ebx
jg r-xdata
dec edx
sub eax 0x4
test edx edx
jg r-xdata
sub ebx ecx
cmp [ eax + 0x6 ] 0x0
movzx ecx [ eax + 0x14 ]
lea ecx [ ecx + eax + 0x18 ]
jbe r-xdata
lea esi [ eax - 0x1 ]
jmp r-xdata
inc eax
mov [ rw-data ] eax
test esi esi
jge r-xdata
dec esi
jns r-xdata
xor edx edx
test ebx ebx
jl r-xdata
mov ebx ecx
cmp [ eax ] edi
je r-xdata
mov eax [ ecx + 0xc ]
cmp ebx eax
jb r-xdata
je r-xdata
cmp ecx 0x10
jge r-xdata
lea eax [ edx * 4 + rw-data ]
mov esi [ eax ]
inc edx
cmp edx ebx
mov [ eax ] edi
mov edi esi
jle r-xdata
mov edx [ ecx + 0x8 ]
add edx eax
cmp ebx edx
jae r-xdata
inc ecx
mov [ rw-data ] ecx
test [ ecx + 0x27 ] 0x80
jne r-xdata
sub_407e76
push esi
push [ rw-data ]
call sub_408f12
pop ecx
mov ecx [ rw-data ]
mov esi eax
mov eax [ rw-data ]
mov edx ecx
sub edx eax
add edx 0x4
cmp esi edx
jae r-xdata
mov [ ecx ] edi
add [ rw-data ] 0x4
mov eax edi
pop esi
retn
mov ecx 0x800
cmp esi ecx
jae r-xdata
add ecx esi
push ecx
push eax
call sub_408d60
test eax eax
pop ecx
pop ecx
jne r-xdata
mov ecx esi
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov [ rw-data ] eax
sar ecx 0x2
lea ecx [ eax + ecx * 4 ]
mov [ rw-data ] ecx
add esi 0x10
push esi
push [ rw-data ]
call sub_408d60
test eax eax
pop ecx
pop ecx
jne r-xdata
pop esi
retn
sub_407ef6
push 0x80
call sub_405616
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
retn
push 0x18
pop eax
retn
sub_407f1e
push 0xc
push r--data
call sub_406734
call sub_4068d4
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
call sub_407e76
mov [ ebp - 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_407f50
mov eax [ ebp - 0x1c ]
call sub_40676f
retn
sub_407f68
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
call eax
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x4
jb r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x2
mov [ rw-data ] eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp + 0x12 ] 0x4
jmp r-xdata
or [ ebp + 0x12 ] 0x20
jmp r-xdata
test [ ebp - 0x8 ] 0x1
jne r-xdata
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
push ebx
call eax
mov ebx eax
push r--data
push edi
call esi
mov [ rw-data ] eax
sub_408070
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_408080
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edi edi
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_408170
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_40823a
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rw-data ] cl
jne r-xdata
xor eax eax
inc eax
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax [ esp + 0x8 ]
jmp r-xdata
retn
test eax eax
jne r-xdata
sub_40827e
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_4082ad
push edi
push 0x40
xor eax eax
pop ecx
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_4082d6
push ebp
lea ebp [ esp - 0x498 ]
sub esp 0x518
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x494 ] eax
push esi
lea eax [ ebp - 0x80 ]
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
mov esi 0x100
jne r-xdata
xor eax eax
xor eax eax
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax + 0x394 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0x7a ]
test al al
mov [ ebp + 0x394 ] 0x20
je r-xdata
mov [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
push [ rw-data ]
lea eax [ ebp - 0x6c ]
push [ rw-data ]
push eax
push esi
lea eax [ ebp + 0x394 ]
push eax
push 0x1
call sub_40950f
push 0x0
push [ rw-data ]
lea eax [ ebp + 0x294 ]
push esi
push eax
push esi
lea eax [ ebp + 0x394 ]
push eax
push esi
push [ rw-data ]
call sub_409139
push 0x0
push [ rw-data ]
lea eax [ ebp + 0x194 ]
push esi
push eax
push esi
lea eax [ ebp + 0x394 ]
push eax
push 0x200
push [ rw-data ]
call sub_409139
add esp 0x5c
xor eax eax
push ebx
lea edx [ ebp - 0x79 ]
push edi
cmp eax 0x41
jb r-xdata
mov ecx [ ebp + 0x494 ]
xor ecx ebp
pop esi
call sub_40822c
add ebp 0x498
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test cl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov cl [ ebp + eax + 0x294 ]
inc edx
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub ecx eax
inc ecx
mov ebx ecx
shr ecx 0x2
lea edi [ ebp + eax + 0x394 ]
mov eax 0x20202020
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
mov [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov cl [ ebp + eax + 0x194 ]
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov cx [ ebp + eax * 2 - 0x6c ]
test cl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] cl
jmp r-xdata
sub_408471
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor eax ebp
xor ebx ebx
cmp esi ebx
mov [ ebp - 0x4 ] eax
push edi
je r-xdata
call sub_4082ad
xor edx edx
xor eax eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40822c
leave
retn
push 0x40
xor eax eax
pop ecx
mov edi rw-data
[ edi ]
lea ecx [ edx + edx * 2 ]
shl ecx 0x4
mov [ ebp - 0x1c ] ebx
stosb [ edi ]
lea ebx [ ecx + rw-data ]
add eax 0x30
inc edx
cmp eax 0xf0
jb r-xdata
test al al
jne r-xdata
cmp [ eax + rw-data ] esi
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push esi
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
mov dl [ esi + 0x1 ]
test dl dl
je r-xdata
inc [ ebp - 0x1c ]
add ebx 0x8
cmp [ ebp - 0x1c ] 0x4
jb r-xdata
cmp [ rw-data ] ebx
je r-xdata
push 0x40
xor eax eax
cmp [ ebp - 0x18 ] 0x1
pop ecx
mov edi rw-data
[ edi ]
stosb [ edi ]
mov [ rw-data ] esi
mov [ rw-data ] ebx
jbe r-xdata
movzx eax al
movzx edi dl
cmp eax edi
ja r-xdata
mov al [ ebx ]
mov esi ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] 0x1
call sub_40827e
lea ecx [ ecx + rw-data ]
mov esi ecx
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
or eax 0xffffffff
mov [ rw-data ] ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
inc esi
inc esi
mov al [ esi ]
mov edx [ ebp - 0x1c ]
mov dl [ edx + rw-data ]
call sub_4082d6
xor eax eax
jmp r-xdata
xor ecx ecx
inc ecx
mov eax ecx
lea ecx [ ebp - 0x11 ]
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
mov eax esi
call sub_40827e
mov [ rw-data ] eax
mov [ rw-data ] ecx
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
jmp r-xdata
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax edx
jbe r-xdata
or [ eax + rw-data ] 0x4
inc eax
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
sub_408605
push 0x14
push r--data
call sub_406734
or [ ebp - 0x20 ] 0xffffffff
push 0xd
call sub_405be0
pop ecx
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ rw-data ] edi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
mov [ ebp + 0x8 ] eax
cmp eax [ rw-data ]
je r-xdata
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x20 ] edi
mov esi [ rw-data ]
mov [ ebp - 0x24 ] esi
cmp esi edi
je r-xdata
push 0x220
call sub_405616
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ esi ] edi
je r-xdata
cmp [ ebp - 0x20 ] 0xffffffff
jne r-xdata
push [ ebp + 0x8 ]
call sub_408471
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
jne r-xdata
cmp esi edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_40874c
mov eax [ ebp - 0x20 ]
call sub_40676f
retn
cmp esi [ rw-data ]
je r-xdata
mov [ esi ] edi
mov eax [ rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
mov [ esi + 0x8 ] eax
mov eax [ rw-data ]
mov [ esi + 0xc ] eax
xor eax eax
push esi
call sub_4054fe
pop ecx
jmp r-xdata
xor eax eax
mov cx [ eax * 2 + rw-data ]
mov [ esi + eax * 2 + 0x10 ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + rw-data ]
mov [ eax + esi + 0x1c ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
mov [ rw-data ] esi
mov cl [ eax + rw-data ]
mov [ eax + esi + 0x11d ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
sub_408780
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4087e0 ]
jmp [ ecx * 4 + jump_table_408860 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4088cc ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4088cc ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_408a68 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40896c ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_408a68 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4088cc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4088cc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4088cc ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_408a68 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_408a68 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_408a68 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_408a68 ]
sub_408abd
push 0x10
push r--data
call sub_406734
mov ecx [ ebp + 0x8 ]
test ecx ecx
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp - 0x20 ] esi
test esi esi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
inc esi
xor eax eax
jmp r-xdata
test edi edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_40676f
retn
mov eax edi
cmp [ rw-data ] edi
je r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov ebx [ ebp - 0x20 ]
cmp ebx [ rw-data ]
ja r-xdata
push esi
call sub_406889
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
push 0x4
call sub_405be0
pop ecx
and [ ebp - 0x4 ] edi
push ebx
call sub_406438
pop ecx
mov [ ebp - 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_408b83
mov edi [ ebp - 0x1c ]
test edi edi
je r-xdata
jmp r-xdata
push [ ebp - 0x20 ]
push 0x0
push edi
call sub_4096d0
add esp 0xc
sub_408b94
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x3c ]
push edi
xor edi edi
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
cmp eax edi
je r-xdata
mov eax [ esi + 0x50 ]
cmp eax [ rw-data ]
je r-xdata
cmp eax edi
je r-xdata
mov eax [ esi + 0x2c ]
cmp [ eax ] edi
jne r-xdata
push esi
call sub_4054fe
pop ecx
pop edi
pop esi
retn
cmp eax edi
je r-xdata
cmp [ eax ] edi
jne r-xdata
mov eax [ esi + 0x34 ]
cmp eax edi
je r-xdata
cmp [ eax + 0xb4 ] edi
jne r-xdata
push eax
call sub_4054fe
mov eax [ esi + 0x44 ]
sub eax 0xfe
push eax
call sub_4054fe
pop ecx
pop ecx
mov eax [ esi + 0x30 ]
cmp eax edi
je r-xdata
cmp [ eax ] edi
jne r-xdata
push eax
call sub_409730
push [ esi + 0x50 ]
call sub_4054fe
pop ecx
pop ecx
push [ esi + 0x2c ]
call sub_4054fe
push [ esi + 0x3c ]
call sub_4054fe
pop ecx
pop ecx
cmp [ eax ] edi
jne r-xdata
cmp eax [ rw-data ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4054fe
push [ esi + 0x3c ]
call sub_40991f
pop ecx
pop ecx
push eax
call sub_4054fe
push [ esi + 0x3c ]
call sub_4098c0
pop ecx
pop ecx
sub_408c64
push esi
call sub_407480
mov esi eax
mov ecx [ esi + 0x64 ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x64 ]
pop esi
retn
xor edx edx
cmp ecx edx
je r-xdata
mov eax [ rw-data ]
mov [ esi + 0x64 ] eax
mov eax [ rw-data ]
inc [ eax ]
mov eax [ rw-data ]
cmp [ eax + 0x2c ] edx
je r-xdata
mov eax [ ecx + 0x2c ]
dec [ ecx ]
cmp eax edx
je r-xdata
cmp [ eax + 0x34 ] edx
je r-xdata
mov eax [ eax + 0x2c ]
inc [ eax ]
mov eax [ rw-data ]
mov eax [ ecx + 0x34 ]
cmp eax edx
je r-xdata
dec [ eax ]
cmp [ eax + 0x30 ] edx
je r-xdata
mov eax [ eax + 0x34 ]
inc [ eax ]
mov eax [ rw-data ]
mov eax [ ecx + 0x30 ]
cmp eax edx
je r-xdata
dec [ eax ]
cmp [ eax + 0x40 ] edx
je r-xdata
mov eax [ eax + 0x30 ]
inc [ eax ]
mov eax [ rw-data ]
mov eax [ ecx + 0x40 ]
cmp eax edx
je r-xdata
dec [ eax ]
mov eax [ eax + 0x4c ]
inc [ eax + 0xb4 ]
cmp ecx edx
je r-xdata
mov eax [ eax + 0x40 ]
inc [ eax ]
mov eax [ rw-data ]
mov eax [ ecx + 0x4c ]
dec [ eax + 0xb4 ]
dec [ eax ]
cmp [ ecx ] edx
jne r-xdata
cmp ecx rw-data
je r-xdata
push ecx
call sub_408b94
pop ecx
sub_408d25
push 0xc
push r--data
call sub_406734
push 0xc
call sub_405be0
pop ecx
and [ ebp - 0x4 ] 0x0
call sub_408c64
mov [ ebp - 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_408d57
mov eax [ ebp - 0x1c ]
call sub_40676f
retn
sub_408d60
push 0x14
push r--data
call sub_406734
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
mov esi [ ebp + 0xc ]
cmp esi ebx
jne r-xdata
push [ ebp + 0xc ]
call sub_405616
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push edi
call sub_4054fe
jmp r-xdata
pop ecx
cmp esi 0xffffffe0
jbe r-xdata
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
cmp esi ebx
jne r-xdata
push esi
call sub_406889
push 0x4
call sub_405be0
pop ecx
mov [ ebp - 0x4 ] ebx
push edi
call sub_405c59
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
push esi
push edi
push ebx
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax ebx
jne r-xdata
xor esi esi
inc esi
or [ ebp - 0x4 ] 0xffffffff
call sub_408ec8
cmp [ ebp - 0x20 ] ebx
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
call sub_40676f
retn
cmp [ rw-data ] ebx
je r-xdata
mov eax [ ebp - 0x1c ]
cmp eax ebx
jne r-xdata
cmp esi ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
push esi
push edi
push eax
call sub_406159
add esp 0xc
test eax eax
je r-xdata
push esi
call sub_406889
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push ebx
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x1c ] eax
xor esi esi
inc esi
cmp esi ebx
jne r-xdata
push esi
call sub_406438
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x1c ] edi
jmp r-xdata
xor eax eax
jmp r-xdata
push esi
call sub_406889
pop ecx
test eax eax
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ edi - 0x4 ]
dec eax
mov [ ebp - 0x24 ] eax
cmp eax esi
jb r-xdata
mov eax [ edi - 0x4 ]
dec eax
mov [ ebp - 0x24 ] eax
cmp eax esi
jb r-xdata
push eax
push edi
push [ ebp - 0x1c ]
call sub_408780
push edi
call sub_405c59
mov [ ebp - 0x20 ] eax
push edi
push eax
call sub_405c84
add esp 0x18
mov eax esi
push eax
push edi
push [ ebp - 0x1c ]
call sub_408780
push edi
push [ ebp - 0x20 ]
call sub_405c84
add esp 0x14
mov eax esi
sub_408f12
push 0x10
push r--data
call sub_406734
cmp [ rw-data ] 0x3
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_405be0
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
push esi
call sub_405c59
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov esi [ ebp - 0x1c ]
mov esi [ esi - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
call sub_40676f
retn
or [ ebp - 0x4 ] 0xffffffff
call sub_408f7f
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
sub_408f88
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
mov [ rw-data ] esi
jne r-xdata
cmp eax 0xbb40e64e
jne r-xdata
pop esi
mov [ rw-data ] 0xbb40e64e
leave
retn
sub_408fee
push 0x118
push r--data
call sub_406734
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x1c ] eax
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
xor edx edx
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
dec eax
je r-xdata
mov [ ebp - 0x4 ] edx
push ecx
push [ ebp + 0x8 ]
call eax
pop ecx
pop ecx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov edi r--data
mov [ ebp - 0x128 ] r--data
mov esi 0xb9
mov edi r--data
mov [ ebp - 0x128 ] r--data
mov esi 0xd4
jmp r-xdata
push 0x3
call sub_406a3c
int3
lea ebx [ ebp - 0x124 ]
mov eax ebx
push eax
call sub_408170
pop ecx
add eax 0xb
cmp eax 0x3c
jbe r-xdata
push r--data
lea eax [ ebp - 0x124 ]
push eax
call sub_408070
pop ecx
pop ecx
mov [ ebp - 0x20 ] dl
push 0x104
lea eax [ ebp - 0x124 ]
push eax
push edx
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_408170
pop ecx
lea eax [ eax + esi + 0xc ]
add eax 0x3
and eax 0xfffffffc
call sub_407730
mov [ ebp - 0x18 ] esp
mov esi esp
push edi
push esi
call sub_408070
mov edi r--data
push edi
push esi
call sub_408080
push r--data
push esi
call sub_408080
push ebx
push esi
call sub_408080
push edi
push esi
call sub_408080
push [ ebp - 0x128 ]
push esi
call sub_408080
push 0x12010
push r--data
push esi
call sub_407f68
add esp 0x3c
mov eax ebx
push eax
call sub_408170
mov ebx eax
lea eax [ ebp - 0x124 ]
sub eax 0x31
add ebx eax
push 0x3
push r--data
push ebx
call sub_4056e0
add esp 0x10
sub_409139
push 0x3c
push r--data
call sub_406734
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor esi esi
inc esi
push esi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
mov [ ebp - 0x28 ] ebx
xor edi edi
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x40 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
or eax 0xffffffff
sub eax ecx
add [ ebp + 0x14 ] eax
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_409c20
pop ecx
mov [ ebp - 0x44 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
xor edi edi
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x58 ]
call sub_40676f
retn
push ebx
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
setne al
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov esi eax
mov [ ebp - 0x34 ] esi
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_409c67
add esp 0x18
mov [ ebp - 0x28 ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and eax 0xfffffffc
call sub_407730
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x30 ]
cmp eax ebx
je r-xdata
push [ ebp - 0x28 ]
call sub_4054fe
pop ecx
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
mov [ ebp - 0x24 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
mov esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] ebx
add eax 0x3
and eax 0xfffffffc
call sub_407730
mov [ ebp - 0x18 ] esp
mov edi esp
mov [ ebp - 0x48 ] edi
push esi
push ebx
push edi
call sub_4096d0
add esp 0xc
jmp r-xdata
push esi
push [ ebp - 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea eax [ esi + esi ]
push eax
call sub_405616
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
push eax
call sub_4054fe
pop ecx
cmp [ ebp - 0x28 ] ebx
je r-xdata
push edi
call sub_4054fe
pop ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp edi ebx
jne r-xdata
cmp [ ebp - 0x38 ] ebx
je r-xdata
push ebx
push ebx
push esi
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov edi eax
mov [ ebp - 0x2c ] edi
cmp edi ebx
je r-xdata
mov [ ebp - 0x3c ] 0x1
push [ ebp - 0x24 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0x28 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x24 ]
call sub_405616
pop ecx
mov edi eax
cmp edi ebx
je r-xdata
cmp [ ebp - 0x3c ] ebx
je r-xdata
push [ ebp - 0x20 ]
call sub_4054fe
pop ecx
test [ ebp + 0xd ] 0x4
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
lea eax [ ebp - 0x24 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x44 ]
call sub_409c67
add esp 0x18
mov esi eax
mov [ ebp - 0x30 ] esi
neg esi
sbb esi esi
and esi [ ebp - 0x24 ]
jmp r-xdata
xor esi esi
jmp r-xdata
push [ ebp - 0x24 ]
push ebx
push edi
call sub_4096d0
add esp 0xc
mov [ ebp - 0x40 ] 0x1
mov eax edi
jmp r-xdata
push [ ebp - 0x1c ]
call sub_4054fe
pop ecx
mov [ ebp - 0x4 ] 0x2
lea eax [ edi + edi ]
add eax 0x3
and eax 0xfffffffc
call sub_407730
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x20 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0x40 ] ebx
je r-xdata
cmp [ ebp - 0x20 ] ebx
jne r-xdata
cmp edi [ ebp + 0x1c ]
jg r-xdata
push edi
push [ ebp - 0x20 ]
push esi
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ edi + edi ]
push eax
call sub_405616
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
jmp r-xdata
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov [ ebp - 0x38 ] 0x1
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
push edi
push [ ebp - 0x20 ]
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
sub_40950f
push 0x1c
push r--data
call sub_406734
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
xor edi edi
inc edi
push edi
push r--data
push edi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
mov ebx [ ebp + 0x1c ]
cmp ebx esi
jne r-xdata
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov edi [ ebp + 0x18 ]
test edi edi
jne r-xdata
mov ebx [ rw-data ]
cmp eax 0x1
jne r-xdata
mov [ rw-data ] 0x2
push ebx
call sub_409c20
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi [ rw-data ]
xor eax eax
jmp r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
cmp eax edi
je r-xdata
lea esp [ ebp - 0x38 ]
call sub_40676f
retn
push esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
xor eax eax
cmp [ ebp + 0x20 ] esi
setne al
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
call [ GetStringTypeA@IAT ]
mov edi eax
test esi esi
je r-xdata
push 0x0
push 0x0
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push edi
call sub_409c67
add esp 0x18
mov esi eax
test esi esi
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ebx [ edi + edi ]
mov eax ebx
add eax 0x3
and eax 0xfffffffc
call sub_407730
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x2c ] esi
push ebx
push 0x0
push esi
call sub_4096d0
add esp 0xc
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax edi
push esi
call sub_4054fe
pop ecx
mov [ ebp + 0xc ] esi
test esi esi
jne r-xdata
push edi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push 0x2
call sub_408abd
pop ecx
pop ecx
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0x1
mov eax [ ebp - 0x24 ]
jmp r-xdata
push esi
call sub_4054fe
pop ecx
sub_4096d0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_409730
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push [ esi + 0x4 ]
call sub_4054fe
push [ esi + 0x8 ]
call sub_4054fe
push [ esi + 0xc ]
call sub_4054fe
push [ esi + 0x10 ]
call sub_4054fe
push [ esi + 0x14 ]
call sub_4054fe
push [ esi + 0x18 ]
call sub_4054fe
push [ esi ]
call sub_4054fe
push [ esi + 0x20 ]
call sub_4054fe
push [ esi + 0x24 ]
call sub_4054fe
push [ esi + 0x28 ]
call sub_4054fe
push [ esi + 0x2c ]
call sub_4054fe
push [ esi + 0x30 ]
call sub_4054fe
push [ esi + 0x34 ]
call sub_4054fe
push [ esi + 0x1c ]
call sub_4054fe
push [ esi + 0x38 ]
call sub_4054fe
push [ esi + 0x3c ]
call sub_4054fe
add esp 0x40
push [ esi + 0x40 ]
call sub_4054fe
push [ esi + 0x44 ]
call sub_4054fe
push [ esi + 0x48 ]
call sub_4054fe
push [ esi + 0x4c ]
call sub_4054fe
push [ esi + 0x50 ]
call sub_4054fe
push [ esi + 0x54 ]
call sub_4054fe
push [ esi + 0x58 ]
call sub_4054fe
push [ esi + 0x5c ]
call sub_4054fe
push [ esi + 0x60 ]
call sub_4054fe
push [ esi + 0x64 ]
call sub_4054fe
push [ esi + 0x68 ]
call sub_4054fe
push [ esi + 0x6c ]
call sub_4054fe
push [ esi + 0x70 ]
call sub_4054fe
push [ esi + 0x74 ]
call sub_4054fe
push [ esi + 0x78 ]
call sub_4054fe
push [ esi + 0x7c ]
call sub_4054fe
add esp 0x40
push [ esi + 0x80 ]
call sub_4054fe
push [ esi + 0x84 ]
call sub_4054fe
push [ esi + 0x88 ]
call sub_4054fe
push [ esi + 0x8c ]
call sub_4054fe
push [ esi + 0x90 ]
call sub_4054fe
push [ esi + 0x94 ]
call sub_4054fe
push [ esi + 0x98 ]
call sub_4054fe
push [ esi + 0x9c ]
call sub_4054fe
push [ esi + 0xa0 ]
call sub_4054fe
push [ esi + 0xa4 ]
call sub_4054fe
push [ esi + 0xa8 ]
call sub_4054fe
add esp 0x2c
sub_4098c0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
mov ecx [ rw-data ]
cmp eax [ ecx ]
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ rw-data ]
cmp eax [ ecx + 0x4 ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
mov esi [ esi + 0x8 ]
mov eax [ rw-data ]
cmp esi [ eax + 0x8 ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4054fe
pop ecx
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_4054fe
pop ecx
push esi
call sub_4054fe
pop ecx
sub_40991f
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0xc ]
mov ecx [ rw-data ]
cmp eax [ ecx + 0xc ]
je r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ rw-data ]
cmp eax [ ecx + 0x10 ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ rw-data ]
cmp eax [ ecx + 0x14 ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4054fe
pop ecx
mov eax [ esi + 0x18 ]
mov ecx [ rw-data ]
cmp eax [ ecx + 0x18 ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4054fe
pop ecx
mov eax [ esi + 0x1c ]
mov ecx [ rw-data ]
cmp eax [ ecx + 0x1c ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4054fe
pop ecx
mov eax [ esi + 0x20 ]
mov ecx [ rw-data ]
cmp eax [ ecx + 0x20 ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4054fe
pop ecx
mov esi [ esi + 0x24 ]
mov eax [ rw-data ]
cmp esi [ eax + 0x24 ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4054fe
pop ecx
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_4054fe
pop ecx
push esi
call sub_4054fe
pop ecx
sub_409a00
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_409a50
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_409ae0
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
retn
mov edx [ esp + 0x4 ]
push esi
push edi
mov esi edx
mov edi [ esp + 0x10 ]
or edx edi
and edx 0x3
je r-xdata
mov ecx eax
and eax 0x3
shr ecx 0x2
je r-xdata
test eax 0x1
je r-xdata
test eax eax
je r-xdata
[ esi ] [ edi ]
je r-xdata
mov cl [ esi ]
mov dl [ edi ]
cmp cl dl
jne r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edi
pop esi
mov edx [ esi ]
mov ecx [ edi ]
cmp dl cl
jne r-xdata
mov ecx [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
cmp cl dl
jne r-xdata
sbb eax eax
pop edi
sbb eax 0xffffffff
pop esi
retn
mov cl [ esi + 0x1 ]
mov dl [ edi + 0x1 ]
cmp cl dl
jne r-xdata
add esi 0x1
add edi 0x1
sub eax 0x1
je r-xdata
mov eax 0x0
sub eax 0x1
je r-xdata
cmp ch dh
jne r-xdata
add edi 0x2
add esi 0x2
sub eax 0x2
jne r-xdata
pop edi
pop esi
retn
cmp dh ch
jne r-xdata
shr ecx 0x10
shr edx 0x10
cmp cl dl
jne r-xdata
sub eax 0x1
je r-xdata
cmp ch dh
and ecx 0xff0000
and edx 0xff0000
cmp edx ecx
jne r-xdata
sub eax 0x1
sub_409ba0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja r-xdata
not ecx
je r-xdata
sub ecx 0x2
sub_409be0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_409c20
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
push 0x6
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_409f7e
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40822c
leave
retn
sub_409c67
push 0x44
push r--data
call sub_406734
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x44 ] esi
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x50 ] eax
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x40 ] ecx
xor edi edi
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x4c ] edi
mov ebx [ eax ]
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x38 ] edi
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
je r-xdata
mov ebx [ ebp - 0x54 ]
lea ecx [ ebp - 0x30 ]
push ecx
push eax
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x34 ]
push ebx
call sub_4054fe
pop ecx
cmp [ ebp - 0x38 ] edi
je r-xdata
cmp [ ebp - 0x30 ] 0x1
jne r-xdata
mov esi [ ebp - 0x3c ]
cmp ebx 0xffffffff
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0xc ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ esi + esi ]
add eax 0x3
and eax 0xfffffffc
call sub_407730
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x54 ] ebx
lea eax [ esi + esi ]
push eax
push edi
push ebx
call sub_4096d0
add esp 0xc
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push edi
push edi
push ebx
push [ ebp - 0x44 ]
push 0x1
push [ ebp + 0x8 ]
call [ MultiByteToWideChar@IAT ]
mov esi eax
mov [ ebp - 0x3c ] esi
cmp esi edi
je r-xdata
push esi
call sub_408170
pop ecx
mov esi eax
inc esi
mov esi ebx
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp - 0x30 ] eax
jne r-xdata
cmp ebx edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x38 ] edi
jne r-xdata
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov [ ebp - 0x38 ] eax
push esi
push ebx
push [ ebp - 0x48 ]
push [ ebp - 0x44 ]
push 0x1
push [ ebp + 0x8 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push esi
push 0x2
call sub_408abd
pop ecx
pop ecx
mov ebx eax
cmp ebx edi
jne r-xdata
lea esp [ ebp - 0x60 ]
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_40822c
call sub_40676f
retn
cmp [ ebp - 0x4c ] edi
je r-xdata
cmp [ ebp - 0x40 ] edi
je r-xdata
mov [ ebp - 0x4c ] 0x1
cmp [ ebp - 0x38 ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push [ ebp - 0x40 ]
push esi
push ebx
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
push esi
push 0x1
call sub_408abd
pop ecx
pop ecx
mov [ ebp - 0x34 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push ebx
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
jmp r-xdata
push edi
push edi
push esi
push eax
push esi
push ebx
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
cmp eax edi
jne r-xdata
cmp [ ebp - 0x48 ] 0xffffffff
je r-xdata
push [ ebp - 0x34 ]
call sub_4054fe
pop ecx
mov [ ebp - 0x34 ] edi
jmp r-xdata
mov ecx [ ebp - 0x50 ]
mov [ ecx ] eax
jmp r-xdata
sub_409e41
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
push 0x4
pop eax
call sub_407730
mov esi esp
push 0x1c
lea eax [ ebp - 0x28 ]
push eax
push esi
call [ VirtualQuery@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp - 0x24 ]
lea eax [ ebp - 0x4c ]
push eax
call [ GetSystemInfo@IAT ]
mov ecx [ ebp - 0x48 ]
mov eax [ rw-data ]
lea edi [ ecx - 0x1 ]
not edi
and edi esi
sub edi ecx
mov esi eax
dec esi
neg esi
sbb esi esi
and esi 0xfffffff1
add esi 0x11
imul esi ecx
add esi ebx
cmp edi esi
mov [ ebp - 0x8 ] ecx
jb r-xdata
lea esp [ ebp - 0x58 ]
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x1
je r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x4 ] ebx
mov ebx 0x1000
mov eax [ ebp - 0x1c ]
add [ ebp - 0x4 ] eax
test [ ebp - 0x18 ] ebx
je r-xdata
push 0x1c
lea eax [ ebp - 0x28 ]
push eax
push [ ebp - 0x4 ]
call [ VirtualQuery@IAT ]
test eax eax
je r-xdata
test [ ebp - 0x13 ] 0x1
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x4 ] eax
je r-xdata
cmp edi eax
jae r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp eax esi
jae r-xdata
push 0x4
push ebx
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call [ VirtualAlloc@IAT ]
mov eax [ rw-data ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
dec eax
neg eax
sbb eax eax
and eax 0x103
lea ecx [ ebp - 0xc ]
push ecx
inc eax
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call [ VirtualProtect@IAT ]
sub_409f30
push ebp
mov ebp esp
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov al 0xff
mov edi edi
movsx eax al
pop ebx
pop esi
pop edi
leave
retn
mov al [ esi ]
add esi 0x1
mov ah [ edi ]
add edi 0x1
cmp ah al
je r-xdata
or al al
je r-xdata
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
xchg al ah
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
cmp al ah
je r-xdata
sbb al al
sbb al 0xff
sub_409f7e
push esi
push edi
call sub_407480
mov edi [ eax + 0x64 ]
cmp edi [ rw-data ]
je r-xdata
mov esi [ esp + 0xc ]
call sub_408d25
mov edi eax
mov ecx [ edi + 0x48 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
push 0x8
push eax
push edi
call sub_40a006
add esp 0xc
jmp r-xdata
movzx ecx [ esi ]
inc esi
cmp ecx 0x2d
mov edx ecx
je r-xdata
inc esi
jmp r-xdata
test eax eax
je r-xdata
movzx ecx [ esi ]
inc esi
cmp ecx 0x2b
jne r-xdata
cmp [ edi + 0x28 ] 0x1
movzx eax [ esi ]
jle r-xdata
or ecx 0xffffffff
cmp ecx 0x39
jg r-xdata
xor eax eax
cmp edx 0x2d
pop edi
pop esi
jne r-xdata
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 ]
movzx ecx [ esi ]
inc esi
jmp r-xdata
sub ecx 0x30
jmp r-xdata
retn
neg eax
cmp ecx 0x30
jl r-xdata
cmp ecx 0xffffffff
je r-xdata
sub_40a006
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
mov ecx [ ebp + 0x8 ]
ja r-xdata
push esi
mov edx eax
sar edx 0x8
push edi
mov edi [ ecx + 0x48 ]
movzx esi dl
test [ edi + esi * 2 + 0x1 ] 0x80
pop edi
pop esi
je r-xdata
mov ecx [ ecx + 0x48 ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
mov [ ebp - 0x4 ] al
xor eax eax
mov [ ebp - 0x3 ] 0x0
inc eax
push 0x2
mov [ ebp - 0x3 ] al
mov [ ebp - 0x4 ] dl
mov [ ebp - 0x2 ] 0x0
pop eax
jmp r-xdata
and eax [ ebp + 0x10 ]
leave
retn
movzx eax [ ebp + 0xe ]
leave
retn
push 0x1
push [ ecx + 0x14 ]
push [ ecx + 0x4 ]
lea ecx [ ebp + 0xe ]
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_40950f
add esp 0x1c
test eax eax
jne r-xdata
sub_40a080
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_40a0f0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_40a1a0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je sub_40a190
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
_start
push ebp
mov ebp esp
sub esp 0x574
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x284 ] 0x0
call sub_42f27d
nop
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_42fe90
add esp 0x4
call sub_430050
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_430080
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_430080
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_42fe90
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_42fe90
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_42fe90
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_42fe90
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
push 0x37b18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_42ffc0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0x37b18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_42f27d
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_42fe90
add esp 0x4
call sub_430050
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_430080
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_430080
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_42fe90
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_42fe90
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_42fe90
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_42fe90
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
push 0x37b18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_42ffc0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0x37b18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_42fe90
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x13 ] 0x1
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x4
mov [ ebp - 0xe ] 0x8
mov [ ebp - 0xd ] 0x8
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xb ] 0x2
mov [ ebp - 0xa ] 0x20
mov [ ebp - 0x9 ] 0x40
mov [ ebp - 0x8 ] 0x40
mov [ ebp - 0x7 ] 0x20
mov [ ebp - 0x6 ] 0x80
mov [ ebp - 0x5 ] 0x80
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov [ ebp - 0x1c ] 0x0
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x4 ]
jge rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp rwxdata
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x20
jne rwxdata
cmp [ ebp - 0x20 ] 0x8
jge rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] 0x0
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov al [ ebp - 0x15 ]
mov [ edx ] al
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
movsx ecx [ eax ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x14 ]
and ecx eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
not eax
and ecx eax
mov [ ebp - 0x24 ] ecx
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
or ecx eax
mov [ ebp - 0x24 ] ecx
jmp rwxdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov cl [ ebp - 0x24 ]
mov [ ebp - 0x15 ] cl
jmp rwxdata
sub_42ffc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jge rwxdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
cmp eax 0x64
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
xor eax 0x80be78ab
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ecx ] al
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x1 ]
cmp edx 0x7d
jne rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x2 ]
cmp ecx 0x77
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx + 0x6 ]
cmp eax 0x61
jne rwxdata
mov ecx [ ebp - 0x4 ]
add ecx 0x3e4
mov [ ebp - 0x4 ] ecx
sub_430050
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_430080
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x78 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jae rwxdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x25 ] 0x0
je rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
add ecx [ ebp - 0x10 ]
movzx edx [ ebp - 0x1c ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
jmp rwxdata
mov [ ebp - 0x2c ] 0x0
jmp rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x26 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx + 0x1 ]
jne rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne rwxdata
add [ ebp - 0x24 ] 0x2
add [ ebp - 0x20 ] 0x2
cmp [ ebp - 0x26 ] 0x0
jne rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax ]
mov [ ebp - 0x25 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx ]
jne rwxdata
sub_401700
mov eax [ esp + 0x4 ]
push eax
call sub_405400
mov ecx [ rw-data ]
add esp 0x4
push eax
push 0x9efc
push 0x111
push ecx
call [ SendMessageA@IAT ]
mov [ esp + 0x4 ] 0x0
jmp sub_405430
sub_403580
mov eax [ esp + 0x4 ]
push edi
push eax
call sub_4053f0
add esp 0x4
mov edi r--data
call sub_4026a0
movsx eax al
pop edi
mov [ esp + 0x4 ] eax
jmp sub_405430
sub_40489c
pop es
pop es
pop es
pop es
pop es
pop es
add eax 0xcccccc06
int3
sub_404bc0
retn
sub_404d60
mov eax [ rw-data ]
test eax eax
je r-xdata
jmp [ CoUninitialize@IAT ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_404e60
mov eax [ rw-data ]
retn
sub_404f70
mov eax [ esp + 0x4 ]
push eax
call sub_4053f0
add esp 0x4
call sub_404d80
sub eax 0x1
neg eax
sbb eax eax
add eax 0x1
mov [ esp + 0x4 ] eax
jmp sub_405430
sub_4053f0
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
retn
push eax
call [ LocalFree@IAT ]
ImmGetDefaultIMEWnd
jmp [ ImmGetDefaultIMEWnd@IAT ]
sub_405551
push 0x4
call sub_405b2b
pop ecx
retn
sub_4055e1
push 0x4
call sub_405b2b
pop ecx
retn
sub_4059e8
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_406c1c
pop ecx
pop ecx
retn
sub_4059fc
mov esp [ ebp - 0x18 ]
mov edi [ ebp - 0x24 ]
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_406a5c
or [ ebp - 0x4 ] 0xffffffff
mov eax edi
lea esp [ ebp - 0x7c ]
call sub_40676f
retn
push edi
call sub_406a3c
sub_405a22
cmp [ rw-data ] 0x2
jne r-xdata
push 0x3
pop eax
retn
cmp [ rw-data ] 0x5
jb r-xdata
xor eax eax
inc eax
retn
sub_405b2b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_405bd7
push 0xa
call sub_405b2b
pop ecx
retn
sub_40676f
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
leave
push ecx
retn
sub_40686e
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_407856
add esp 0x8
pop ebp
retn 0x4
sub_4068d4
push 0x8
call sub_405be0
pop ecx
retn
sub_4068dd
push 0x8
call sub_405b2b
pop ecx
retn
sub_406a17
cmp [ ebp + 0x10 ] edi
je r-xdata
retn
push 0x8
call sub_405b2b
pop ecx
sub_406a2b
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_406968
add esp 0xc
retn
sub_406a3c
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_406968
add esp 0xc
retn
sub_406a4d
push 0x1
push 0x0
push 0x0
call sub_406968
add esp 0xc
retn
sub_406a5c
push 0x1
push 0x1
push 0x0
call sub_406968
add esp 0xc
retn
sub_4073ff
xor eax eax
inc eax
retn
sub_407443
xor eax eax
inc eax
retn
sub_40745a
call [ TlsAlloc@IAT ]
retn 0x4
sub_407623
push 0xd
call sub_405b2b
pop ecx
retn
sub_40762f
push 0xc
call sub_405b2b
pop ecx
retn
sub_40776d
push [ esp + 0x4 ]
call [ InitializeCriticalSection@IAT ]
xor eax eax
inc eax
retn 0x8
sub_4077da
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x1c ] eax
xor eax eax
inc eax
retn
sub_4077e8
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x1c ] 0xc0000017
jne r-xdata
xor eax eax
or [ ebp - 0x4 ] 0xffffffff
call sub_40676f
retn
push 0x8
call [ SetLastError@IAT ]
sub_407808
call sub_407480
add eax 0x8
retn
sub_407834
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4078be
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_407834
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_4078ea
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_407f50
call sub_4068dd
retn
sub_407f56
push [ esp + 0x4 ]
call sub_407f1e
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
retn
sub_4081fb
push 0x8
push r--data
call sub_406734
and [ ebp - 0x4 ] 0x0
push 0x0
push 0x1
call sub_408fee
sub_40821c
mov esp [ ebp - 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push 0x3
call [ ExitProcess@IAT ]
int3
sub_40822c
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_4081fb
retn
sub_40826d
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_40823a
add esp 0xc
retn
sub_40874c
push 0xd
call sub_405b2b
pop ecx
retn
sub_408755
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_408605
pop ecx
mov [ rw-data ] 0x1
sub_408b83
push 0x4
call sub_405b2b
pop ecx
retn
sub_408d57
push 0xc
call sub_405b2b
pop ecx
retn
sub_408ec8
push 0x4
call sub_405b2b
pop ecx
retn
sub_408f7f
push 0x4
call sub_405b2b
pop ecx
retn
sub_409029
xor eax eax
inc eax
retn
sub_40922f
xor eax eax
inc eax
retn
sub_4092fd
xor eax eax
inc eax
retn
sub_409435
xor eax eax
inc eax
retn
sub_4095e8
xor eax eax
inc eax
retn
sub_409d48
xor eax eax
inc eax
retn
sub_40a190
lea eax [ edx - 0x1 ]
pop ebx
retn
ISM_RegisterFunction
jmp [ ISM_RegisterFunction@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
