sub_4010a0
push ebp
mov ebp esp
sub esp 0xf0
push ebx
push esi
push edi
lea edi [ ebp - 0xf0 ]
mov ecx 0x3c
mov eax 0xcccccccc
[ edi ]
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x28 ] r--data
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0xb0 ] 0xb
mov [ ebp - 0xac ] 0x6
mov [ ebp - 0xa8 ] 0x7
mov [ ebp - 0xa4 ] 0x1
mov [ ebp - 0xa0 ] 0x8
mov [ ebp - 0x9c ] 0xa
mov [ ebp - 0x98 ] 0xe
mov [ ebp - 0x94 ] 0x0
mov [ ebp - 0x90 ] 0x3
mov [ ebp - 0x8c ] 0x5
mov [ ebp - 0x88 ] 0x2
mov [ ebp - 0x84 ] 0xf
mov [ ebp - 0x80 ] 0xd
mov [ ebp - 0x7c ] 0x9
mov [ ebp - 0x78 ] 0xc
mov [ ebp - 0x74 ] 0x4
push r--data
call sub_404ae0
add esp 0x4
cmp [ ebp + 0x8 ] 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call j_sub_401910
add esp 0x4
lea ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
push eax
call j_sub_401950
add esp 0x8
test eax eax
je r-xdata
push r--data
call sub_404ae0
add esp 0x4
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
call j_sub_401bf0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
push edx
push r--data
call sub_404ae0
add esp 0x8
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0xf0
cmp ebp esp
call sub_404b60
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x48 ]
push edx
push r--data
call sub_404ae0
add esp 0x8
mov eax [ ebp - 0x48 ]
push eax
call sub_404a60
add esp 0x4
add eax 0xa
push eax
call sub_4026b0
add esp 0x4
mov [ ebp - 0x4c ] eax
mov ecx [ ebp - 0x48 ]
push ecx
call sub_404a60
add esp 0x4
add eax 0x21
push eax
call sub_4026b0
add esp 0x4
mov [ ebp - 0x50 ] eax
mov edx [ ebp - 0x48 ]
push edx
push r--data
mov eax [ ebp - 0x4c ]
push eax
call sub_404960
add esp 0xc
push 0x50
call sub_4026b0
add esp 0x4
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x4c ]
push edx
lea eax [ ebp - 0x8 ]
push eax
call j_sub_401cf0
add esp 0xc
test eax eax
jne r-xdata
push r--data
call sub_404ae0
add esp 0x4
or eax 0xffffffff
jmp r-xdata
push r--data
call sub_404ae0
add esp 0x4
or eax 0xffffffff
jmp r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x40 ]
push edx
mov eax [ ebp - 0xc ]
push eax
push r--data
lea ecx [ ebp - 0x8 ]
push ecx
call j_sub_401ec0
add esp 0x14
test eax eax
jne r-xdata
push r--data
call sub_404ae0
add esp 0x4
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] 0x4
jne r-xdata
mov [ ebp - 0x20 ] 0x1
mov edx [ ebp - 0x40 ]
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x48 ]
push edx
push r--data
mov eax [ ebp - 0x50 ]
push eax
call sub_404960
add esp 0x10
mov ecx [ ebp - 0x20 ]
push ecx
push r--data
call sub_404ae0
add esp 0x8
push rw-data
call sub_404600
add esp 0x4
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
cmp [ ebp - 0x14 ] 0x4
jge r-xdata
lea edx [ ebp - 0x8 ]
push edx
call j_sub_4018c0
add esp 0x4
push r--data
call sub_404ae0
add esp 0x4
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x50 ]
push eax
call sub_404a60
add esp 0x4
mov esi eax
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + ecx * 4 - 0x30 ]
push edx
call sub_404a60
add esp 0x4
lea eax [ esi + eax + 0x1 ]
push eax
call sub_4026b0
add esp 0x4
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + ecx * 4 - 0x30 ]
push edx
mov eax [ ebp - 0x50 ]
push eax
push r--data
mov ecx [ ebp - 0x44 ]
push ecx
call sub_404960
add esp 0x10
lea edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
call j_sub_401cf0
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] 0x10
jge r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x30 ]
add eax 0x1000
push eax
lea ecx [ ebp - 0x8 ]
push ecx
call j_sub_401880
add esp 0x8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
lea edx [ ebp - 0x8 ]
push edx
call j_sub_4018c0
add esp 0x4
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + eax * 4 - 0x30 ]
push ecx
push r--data
call sub_404ae0
add esp 0x8
or eax 0xffffffff
jmp r-xdata
push r--data
call sub_404ae0
add esp 0x4
push r--data
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
push edx
call sub_402690
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + ecx * 4 - 0xb0 ]
mov eax [ ebp - 0x14 ]
mov cl [ ebp + edx - 0x60 ]
mov [ ebp + eax - 0x70 ] cl
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ ebp + edx - 0x70 ]
push eax
push r--data
call sub_404ae0
add esp 0x8
jmp r-xdata
mov eax [ ebp - 0xc ]
movsx ecx [ eax + 0x4a ]
cmp [ ebp - 0x18 ] ecx
jge r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
push ecx
push r--data
call sub_404ae0
add esp 0x8
mov eax [ ebp - 0x4 ]
push eax
push 0x10
push 0x1
lea ecx [ ebp - 0x70 ]
push ecx
call sub_402380
add esp 0x10
mov edx [ ebp - 0x4 ]
push edx
call sub_4022a0
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x34 ] 0x0
mov ecx [ ebp - 0x14 ]
lea edx [ ebp + ecx * 4 - 0x60 ]
push edx
push r--data
lea eax [ ebp - 0x3c ]
push eax
call sub_404540
add esp 0xc
mov ecx [ ebp - 0x44 ]
push ecx
call sub_4030f0
add esp 0x4
jmp r-xdata
cmp [ ebp - 0x18 ] 0x9
jge r-xdata
mov edx [ ebp - 0xc ]
push edx
call sub_4030f0
add esp 0x4
xor eax eax
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
mov al [ ecx + eax * 2 ]
mov [ ebp + edx - 0x3c ] al
jmp r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
sub_401660
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
lea edi [ ebp - 0x40 ]
mov ecx 0x10
mov eax 0xcccccccc
[ edi ]
push 0x50
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x10 ]
lea eax [ ecx + edx + 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404ba0
add esp 0xc
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov ecx [ ebp + 0x10 ]
lea edx [ eax + ecx + 0x50 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4c ] edx
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
add esp 0x40
cmp ebp esp
call sub_404b60
mov esp ebp
pop ebp
retn
sub_4016d0
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
lea edi [ ebp - 0x40 ]
mov ecx 0x10
mov eax 0xcccccccc
[ edi ]
push 0x8
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x10 ]
lea eax [ ecx + edx + 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404ba0
add esp 0xc
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov ecx [ ebp + 0x10 ]
lea edx [ eax + ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
add esp 0x40
cmp ebp esp
call sub_404b60
mov esp ebp
pop ebp
retn
sub_401740
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
lea edi [ ebp - 0x40 ]
mov ecx 0x10
mov eax 0xcccccccc
[ edi ]
push 0x18
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x10 ]
lea eax [ ecx + edx + 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404ba0
add esp 0xc
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov ecx [ ebp + 0x10 ]
lea edx [ eax + ecx + 0x18 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
add esp 0x40
cmp ebp esp
call sub_404b60
mov esp ebp
pop ebp
retn
sub_4017b0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x14 ]
shl eax 0x2
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov eax [ ebp + 0x10 ]
lea ecx [ edx + eax + 0x4 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_404ba0
add esp 0xc
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call sub_404b60
mov esp ebp
pop ebp
retn
sub_401820
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
lea edi [ ebp - 0x40 ]
mov ecx 0x10
mov eax 0xcccccccc
[ edi ]
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
lea edx [ ecx + eax * 8 ]
mov [ ebp + 0xc ] edx
push 0x8
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404ba0
add esp 0xc
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
add esp 0x40
cmp ebp esp
call sub_404b60
mov esp ebp
pop ebp
retn
sub_401880
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
lea edi [ ebp - 0x40 ]
mov ecx 0x10
mov eax 0xcccccccc
[ edi ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
lea eax [ ecx + edx + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4018c0
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
lea edi [ ebp - 0x40 ]
mov ecx 0x10
mov eax 0xcccccccc
[ edi ]
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x40
cmp ebp esp
call sub_404b60
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_4030f0
add esp 0x4
sub_401910
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
lea edi [ ebp - 0x40 ]
mov ecx 0x10
mov eax 0xcccccccc
[ edi ]
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_401950
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
push r--data
mov eax [ ebp + 0x8 ]
push eax
call sub_402690
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
push 0x2
push 0x0
mov ecx [ ebp - 0x4 ]
push ecx
call sub_405340
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_4022a0
add esp 0x4
mov edx [ ebp - 0x4 ]
push edx
call sub_4050b0
add esp 0x4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4026b0
add esp 0x4
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
push 0x0
push 0x0
mov edx [ ebp - 0x4 ]
push edx
call sub_405340
add esp 0xc
mov eax [ ebp - 0x4 ]
push eax
push 0x1
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx ]
push eax
call sub_404ee0
add esp 0x10
cmp eax 0x1
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
cmp [ edx ] 0x66676572
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4022a0
add esp 0x4
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x48
cmp ebp esp
call sub_404b60
mov esp ebp
pop ebp
retn
sub_401a60
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
lea edi [ ebp - 0x54 ]
mov ecx 0x15
mov eax 0xcccccccc
[ edi ]
push 0x8
call sub_4026b0
add esp 0x4
mov [ ebp - 0xc ] eax
push 0x50
call sub_4026b0
add esp 0x4
mov [ ebp - 0x4 ] eax
push 0x8
call sub_4026b0
add esp 0x4
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
call j_sub_4016d0
add esp 0xc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
movsx edx [ ecx + 0x2 ]
cmp [ ebp - 0x14 ] edx
jge r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4030f0
add esp 0x4
mov ecx [ ebp - 0x8 ]
push ecx
call sub_4030f0
add esp 0x4
or eax 0xffffffff
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call j_sub_401820
add esp 0xc
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx ]
add edx 0x1000
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_401660
add esp 0xc
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
movsx eax [ edx + 0x48 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4c ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_405470
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
push ecx
call sub_404a60
add esp 0x4
mov edx [ ebp - 0x4 ]
movsx ecx [ edx + 0x48 ]
cmp eax ecx
jne r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0xc ]
mov eax [ edx ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_4030f0
add esp 0x4
mov edx [ ebp - 0x8 ]
push edx
call sub_4030f0
add esp 0x4
mov eax [ ebp - 0x10 ]
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x54
cmp ebp esp
call sub_404b60
mov esp ebp
pop ebp
retn
sub_401bf0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
push 0x50
call sub_4026b0
add esp 0x4
mov [ ebp - 0x4 ] eax
push 0x1020
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_401660
add esp 0xc
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
movsx eax [ edx ]
cmp eax 0x6b6e
jne r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_4030f0
add esp 0x4
or eax 0xffffffff
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x2c
jne r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax + 0x48 ]
add ecx 0x1
push ecx
call sub_4026b0
add esp 0x4
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
movsx ecx [ eax + 0x48 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4c ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
push edx
call sub_405520
add esp 0xc
mov eax [ ebp - 0x4 ]
movsx ecx [ eax + 0x48 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov [ eax + ecx ] 0x0
mov ecx [ ebp - 0x4 ]
push ecx
call sub_4030f0
add esp 0x4
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call sub_404b60
mov esp ebp
pop ebp
retn
sub_401cf0
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
lea edi [ ebp - 0x50 ]
mov ecx 0x14
mov eax 0xcccccccc
[ edi ]
push 0x50
call sub_4026b0
add esp 0x4
mov [ ebp - 0x4 ] eax
push 0x1020
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_401660
add esp 0xc
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
movsx eax [ edx ]
cmp eax 0x6b6e
jne r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_4030f0
add esp 0x4
or eax 0xffffffff
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x2c
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_410430
add esp 0x4
mov [ ebp - 0xc ] eax
push r--data
mov ecx [ ebp - 0xc ]
push ecx
call sub_405620
add esp 0x8
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
movsx eax [ edx + 0x48 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4c ]
push edx
mov eax [ ebp - 0x8 ]
push eax
call sub_405470
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
push ecx
call sub_4030f0
add esp 0x4
push r--data
push 0x0
call sub_405620
add esp 0x8
mov [ ebp - 0x8 ] eax
push 0x50
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
push edx
call sub_404ba0
add esp 0xc
mov eax [ ebp - 0x4 ]
push eax
call sub_4030f0
add esp 0x4
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
add edx 0x1000
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call j_sub_401a60
add esp 0xc
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x50
cmp ebp esp
call sub_404b60
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
add eax 0x1000
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call j_sub_401660
add esp 0xc
mov [ ebp - 0x4 ] eax
push r--data
push 0x0
call sub_405620
add esp 0x8
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_4030f0
add esp 0x4
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_401ec0
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
lea edi [ ebp - 0x50 ]
mov ecx 0x14
mov eax 0xcccccccc
[ edi ]
push 0x18
call sub_4026b0
add esp 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x24 ]
shl ecx 0x2
push ecx
call sub_4026b0
add esp 0x4
mov [ ebp - 0x10 ] eax
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x24 ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + 0x28 ]
add edx 0x1000
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call j_sub_4017b0
add esp 0x10
mov [ ebp - 0x10 ] eax
mov edx [ ebp + 0x18 ]
mov [ edx ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x24 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_4030f0
add esp 0x4
or eax 0xffffffff
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + eax * 4 ]
add edx 0x1000
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_401740
add esp 0xc
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0xc ]
push edx
call sub_404a60
add esp 0x4
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_405470
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
and eax 0xffff
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
mov edx [ ebp + 0x14 ]
cmp [ edx ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ edx ]
push eax
call sub_4026b0
add esp 0x4
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov edx [ ebp + 0x18 ]
cmp [ edx ] 0x5
jge r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
push ecx
call sub_4030f0
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax + 0x10 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ edx ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
add edx 0x1000
push edx
mov eax [ ebp + 0x8 ]
push eax
call j_sub_401880
add esp 0x8
push eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
push edx
call sub_404ba0
add esp 0xc
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
push ecx
mov edx [ ebp - 0x4 ]
add edx 0x8
push edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
push ecx
call sub_404ba0
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
add esp 0x50
cmp ebp esp
call sub_404b60
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
call sub_4030f0
add esp 0x4
xor eax eax
jmp r-xdata
sub_4020e0
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
lea edi [ ebp - 0x58 ]
mov ecx 0x16
mov eax 0xcccccccc
[ edi ]
push 0x8
call sub_4026b0
add esp 0x4
mov [ ebp - 0x4 ] eax
push 0x50
call sub_4026b0
add esp 0x4
mov [ ebp - 0x8 ] eax
push 0x8
call sub_4026b0
add esp 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0x14 ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_4030f0
add esp 0x4
or eax 0xffffffff
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x1c ]
add eax 0x1000
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call j_sub_4016d0
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call j_sub_401820
add esp 0xc
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx ]
add edx 0x1000
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call j_sub_401660
add esp 0xc
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
movsx eax [ edx + 0x48 ]
mov ecx [ ebp + 0x18 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx [ ebp - 0x8 ]
movsx edx [ ecx + 0x48 ]
mov [ ebp - 0x10 ] edx
mov edx [ ebp + 0x18 ]
mov eax [ edx ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
movsx ecx [ eax + 0x48 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x18 ]
mov edx [ ecx ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4c ]
push edx
mov eax [ ebp + 0x14 ]
push eax
call sub_404ba0
add esp 0xc
mov ecx [ ebp - 0x8 ]
movsx edx [ ecx + 0x48 ]
mov eax [ ebp + 0x18 ]
cmp [ eax ] edx
jge r-xdata
mov [ ebp - 0x18 ] 0xffffffff
mov eax [ ebp + 0x10 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov edx [ ebp + 0x14 ]
add edx [ ebp - 0x14 ]
mov [ edx ] 0x0
mov eax [ ebp - 0x8 ]
movsx ecx [ eax + 0x48 ]
mov edx [ ebp + 0x18 ]
mov [ edx ] ecx
mov eax [ ebp - 0x4 ]
push eax
call sub_4030f0
add esp 0x4
mov ecx [ ebp + 0x10 ]
add ecx 0x1
mov edx [ ebp + 0xc ]
cmp ecx [ edx + 0x14 ]
jge r-xdata
pop edi
pop esi
pop ebx
add esp 0x58
cmp ebp esp
call sub_404b60
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
jmp r-xdata
sub_4022a0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0x40
test edx edx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x0
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x77
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0xc ]
and eax 0x83
test eax eax
je r-xdata
int3
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
push ecx
call sub_404660
add esp 0x4
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
push edx
call sub_4059e0
add esp 0x4
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
call sub_4058f0
add esp 0x4
test eax eax
jge r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x1c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x2
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x1c ]
push ecx
call sub_403110
add esp 0x8
mov edx [ ebp - 0x8 ]
mov [ edx + 0x1c ] 0x0
sub_402380
push ebp
mov ebp esp
sub esp 0x28
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
imul ecx [ ebp + 0x10 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0xc ]
and ecx 0x10c
test ecx ecx
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x1c ] 0x1000
mov edx [ ebp + 0x14 ]
mov eax [ edx + 0x18 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + 0xc ]
and edx 0x108
test edx edx
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x1c ]
jb r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
movsx edx [ ecx ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_406230
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ edx + 0xc ]
and eax 0x108
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0xc ]
cmp edx [ ecx + 0x4 ]
jae r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
sub eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x14 ]
cmp [ ecx + 0x18 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
call sub_404660
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
mov edx [ ebp + 0x14 ]
mov eax [ edx + 0x18 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0xc ]
xor edx edx
div [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
sub eax edx
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
push ecx
call sub_404ba0
add esp 0xc
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x18 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
sub ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x14 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
add ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x14 ]
mov [ edx ] ecx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + 0xc ]
or edx 0x20
mov eax [ ebp + 0x14 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx + 0x10 ]
push eax
call sub_4064b0
add esp 0xc
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + 0xc ]
or edx 0x20
mov eax [ ebp + 0x14 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
sub_4025a0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x35
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
movsx edx [ ecx ]
test edx edx
jne r-xdata
int3
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x36
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
int3
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x37
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov edx [ ebp + 0xc ]
movsx eax [ edx ]
test eax eax
jne r-xdata
int3
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x38
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
call sub_406af0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
int3
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_406760
add esp 0x10
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4026b0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_402720
add esp 0x14
pop ebp
retn
sub_4026d0
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ rw-data ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_402720
add esp 0x14
pop ebp
retn
sub_402700
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x1
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_402720
add esp 0x14
pop ebp
retn
sub_402720
push ebp
mov ebp esp
push ecx
mov eax [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ecx
call sub_406c10
add esp 0x4
test eax eax
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_402790
add esp 0x10
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_402790
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov [ ebp - 0xc ] 0x0
mov eax [ rw-data ]
and eax 0x4
test eax eax
je r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
cmp eax [ rw-data ]
jne r-xdata
call sub_4037d0
test eax eax
jne r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push 0x0
push 0x1
call [ rw-data ]
add esp 0x1c
test eax eax
jne r-xdata
int3
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x141
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov ecx [ ebp + 0xc ]
and ecx 0xffff
cmp ecx 0x2
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
int3
cmp [ ebp + 0x8 ] 0xffffffe0
ja r-xdata
mov edx [ rw-data ]
and edx 0x1
test edx edx
jne r-xdata
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x1c
cmp eax 0x1
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
push r--data
push 0x0
push 0x0
push 0x0
push 0x1
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x24
cmp eax 0xffffffe0
jbe r-xdata
mov [ ebp - 0xc ] 0x1
xor eax eax
test eax eax
jne r-xdata
int3
xor edx edx
test edx edx
jne r-xdata
int3
xor edx edx
test edx edx
jne r-xdata
int3
mov eax [ ebp + 0xc ]
and eax 0xffff
cmp eax 0x4
je r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x24
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_406d20
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ rw-data ]
add edx 0x1
mov [ rw-data ] edx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
and ecx 0xffff
cmp ecx 0x2
je r-xdata
mov edx [ rw-data ]
add edx [ ebp + 0x8 ]
mov [ rw-data ] edx
mov eax [ rw-data ]
add eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov ecx [ rw-data ]
cmp ecx [ rw-data ]
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0xfedcbabc
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x3
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] 0x0
jmp r-xdata
cmp [ ebp + 0xc ] 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov [ rw-data ] edx
push 0x4
xor edx edx
mov dl [ rw-data ]
push edx
mov eax [ ebp - 0x4 ]
add eax 0x1c
push eax
call sub_406c40
add esp 0xc
push 0x4
xor ecx ecx
mov cl [ rw-data ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx + 0x20 ]
push ecx
call sub_406c40
add esp 0xc
mov edx [ ebp + 0x8 ]
push edx
xor eax eax
mov al [ rw-data ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x20
push ecx
call sub_406c40
add esp 0xc
mov eax [ ebp - 0x4 ]
add eax 0x20
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x1
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ rw-data ] edx
mov eax [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
xor edx edx
test edx edx
jne r-xdata
int3
mov eax [ ebp - 0x4 ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
mov [ edx + 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x14 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp - 0x4 ]
mov [ rw-data ] ecx
sub_402ab0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x1
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_402ad0
add esp 0x14
pop ebp
retn
sub_402ad0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
imul eax [ ebp + 0x8 ]
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_4026d0
add esp 0x10
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
add eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
mov [ edx ] 0x0
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x4 ]
jae r-xdata
sub_402b30
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x1
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_402b50
add esp 0x14
pop ebp
retn
sub_402b50
push ebp
mov ebp esp
push ecx
push 0x1
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_402b80
add esp 0x18
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_402b80
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov [ ebp - 0x14 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_4026d0
add esp 0x10
jmp r-xdata
mov eax [ rw-data ]
and eax 0x4
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ rw-data ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
call sub_4037d0
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_403110
add esp 0x8
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
push 0x2
call [ rw-data ]
add esp 0x1c
test eax eax
jne r-xdata
int3
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x239
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0xc ] 0xffffffdb
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
int3
cmp [ ebp + 0x10 ] 0x1
je r-xdata
mov edx [ ebp + 0xc ]
push edx
push r--data
push 0x0
push 0x0
push 0x0
push 0x1
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x1c
cmp eax 0x1
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403c10
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
and ecx 0xffff
cmp ecx 0x4
je r-xdata
xor eax eax
test eax eax
jne r-xdata
int3
xor ecx ecx
test ecx ecx
jne r-xdata
int3
xor eax eax
test eax eax
jne r-xdata
int3
xor edx edx
test edx edx
jne r-xdata
push r--data
push 0x0
push 0x261
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov edx [ ebp + 0x10 ]
and edx 0xffff
cmp edx 0x2
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
sub eax 0x20
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x14 ] 0x3
jne r-xdata
int3
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x1
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x1
xor eax eax
test eax eax
jne r-xdata
int3
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x14 ]
and eax 0xffff
cmp eax 0x2
jne r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx + 0xc ] 0xfedcbabc
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x14 ]
and eax 0xffff
mov ecx [ ebp + 0x10 ]
and ecx 0xffff
cmp eax ecx
je r-xdata
mov ecx [ ebp + 0x10 ]
and ecx 0xffff
cmp ecx 0x1
jne r-xdata
push r--data
push 0x0
push 0x26b
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
xor edx edx
test edx edx
jne r-xdata
push r--data
push 0x0
push 0x272
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x10 ] 0x2
xor ecx ecx
test ecx ecx
jne r-xdata
int3
cmp [ ebp + 0x1c ] 0x0
je r-xdata
int3
jmp r-xdata
mov edx [ ebp + 0xc ]
add edx 0x24
push edx
mov eax [ ebp - 0x8 ]
push eax
call sub_406d90
add esp 0x8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
add eax 0x24
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call sub_406e20
add esp 0x8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ rw-data ]
add ecx 0x1
mov [ rw-data ] ecx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x20
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0xc ]
cmp eax [ edx + 0x10 ]
jbe r-xdata
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
sub eax [ edx + 0x10 ]
mov [ rw-data ] eax
mov ecx [ rw-data ]
add ecx [ ebp + 0xc ]
mov [ rw-data ] ecx
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
sub eax [ edx + 0x10 ]
mov [ rw-data ] eax
mov ecx [ rw-data ]
add ecx [ ebp + 0xc ]
mov [ rw-data ] ecx
mov edx [ rw-data ]
cmp edx [ rw-data ]
jbe r-xdata
push 0x4
xor eax eax
mov al [ rw-data ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx [ ebp + 0xc ]
push ecx
call sub_406c40
add esp 0xc
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
sub edx [ ecx + 0x10 ]
push edx
xor eax eax
mov al [ rw-data ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
add edx [ ecx + 0x10 ]
push edx
call sub_406c40
add esp 0xc
mov eax [ rw-data ]
mov [ rw-data ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x10 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x14 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x18 ]
mov [ ecx + 0xc ] edx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x18 ] ecx
xor edx edx
test edx edx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x8 ]
je r-xdata
push r--data
push 0x0
push 0x2a8
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
int3
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx ]
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
jmp r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x2b7
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
int3
mov eax [ rw-data ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp - 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
jmp r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x2c2
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx ]
mov [ rw-data ] eax
int3
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ rw-data ]
mov [ ecx ] edx
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ rw-data ] ecx
mov eax [ ebp - 0x4 ]
sub_4030a0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x1
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4030c0
add esp 0x14
pop ebp
retn
sub_4030c0
push ebp
mov ebp esp
push ecx
push 0x0
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_402b80
add esp 0x18
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_403110
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
and eax 0x4
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
call sub_4037d0
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x0
mov edx [ ebp + 0xc ]
push edx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0x3
call [ rw-data ]
add esp 0x1c
test eax eax
jne r-xdata
jmp r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x3e1
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_403c10
add esp 0x4
test eax eax
jne r-xdata
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
int3
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x3f3
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
int3
mov ecx [ ebp + 0x8 ]
sub ecx 0x20
mov [ ebp - 0x4 ] ecx
int3
jmp r-xdata
xor edx edx
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x1
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
and eax 0xffff
cmp eax 0x4
je r-xdata
mov eax [ rw-data ]
and eax 0x4
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
and eax 0xffff
cmp eax 0x2
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x3
jne r-xdata
push 0x4
mov cl [ rw-data ]
push ecx
mov edx [ ebp - 0x4 ]
add edx 0x1c
push edx
call sub_403740
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x3
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xc ] 0xfedcbabc
jne r-xdata
push 0x4
mov cl [ rw-data ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + eax + 0x20 ]
push edx
call sub_403740
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x20
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x18 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
and ecx 0xffff
mov edx [ ecx * 4 + rw-data ]
push edx
push r--data
push 0x0
push 0x0
push 0x0
push 0x1
call sub_405b90
add esp 0x20
cmp eax 0x1
jne r-xdata
push r--data
push 0x0
push 0x3f9
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push r--data
push 0x0
push 0x40e
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x20
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x18 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
and ecx 0xffff
mov edx [ ecx * 4 + rw-data ]
push edx
push r--data
push 0x0
push 0x0
push 0x0
push 0x1
call sub_405b90
add esp 0x20
cmp eax 0x1
jne r-xdata
xor eax eax
test eax eax
jne r-xdata
int3
int3
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x41b
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov [ ebp + 0xc ] 0x2
xor ecx ecx
test ecx ecx
jne r-xdata
int3
xor eax eax
test eax eax
jne r-xdata
int3
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
sub eax [ edx + 0x10 ]
mov [ rw-data ] eax
mov ecx [ rw-data ]
and ecx 0x2
test ecx ecx
jne r-xdata
int3
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
add eax 0x24
push eax
xor ecx ecx
mov cl [ rw-data ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_406c40
add esp 0xc
mov eax [ ebp - 0x4 ]
push eax
call sub_406ff0
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
xor ecx ecx
mov cl [ rw-data ]
push ecx
mov edx [ ebp - 0x4 ]
add edx 0x20
push edx
call sub_406c40
add esp 0xc
mov edx [ ebp - 0x4 ]
cmp [ edx ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
xor edx edx
test edx edx
jne r-xdata
push r--data
push 0x0
push 0x42a
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov [ rw-data ] ecx
int3
mov ecx [ rw-data ]
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov [ ecx ] eax
jmp r-xdata
xor edx edx
test edx edx
jne r-xdata
push r--data
push 0x0
push 0x434
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
add eax 0x24
push eax
xor ecx ecx
mov cl [ rw-data ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_406c40
add esp 0xc
mov eax [ ebp - 0x4 ]
push eax
call sub_406ff0
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov [ rw-data ] ecx
int3
sub_403520
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
and eax 0x4
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_403c10
add esp 0x4
test eax eax
jne r-xdata
call sub_4037d0
test eax eax
jne r-xdata
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x485
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x47c
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx 0x20
mov [ ebp - 0x8 ] ecx
int3
int3
xor edx edx
test edx edx
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x14 ] 0x1
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x14 ]
and eax 0xffff
cmp eax 0x4
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x14 ] 0x2
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x14 ]
and eax 0xffff
cmp eax 0x2
je r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x14 ] 0x3
je r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x14 ] 0x3
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x14 ]
cmp eax [ ebp + 0xc ]
je r-xdata
mov [ ebp + 0xc ] 0x2
push r--data
push 0x0
push 0x48b
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x492
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
int3
int3
sub_403690
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
push eax
call sub_403c10
add esp 0x4
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
sub ecx 0x20
mov [ ebp - 0x4 ] ecx
xor edx edx
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x1
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
and eax 0xffff
cmp eax 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x14 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
and eax 0xffff
cmp eax 0x2
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x3
je r-xdata
push r--data
push 0x0
push 0x4d3
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
int3
sub_403740
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp + 0xc ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
add edx 0x1
mov [ ebp + 0x8 ] edx
cmp eax ecx
je r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
and eax 0xff
push eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx - 0x1 ]
push edx
mov eax [ ebp + 0x8 ]
sub eax 0x1
push eax
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x20
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
sub ecx 0x1
mov [ ebp + 0x10 ] ecx
test eax eax
je r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
int3
mov [ ebp - 0x4 ] 0x0
sub_4037d0
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x1
mov eax [ rw-data ]
and eax 0x1
test eax eax
jne r-xdata
call sub_407040
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
add edx 0x6
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x18 ] 0x3
ja r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x14 ]
and ecx 0xffff
cmp ecx 0x4
je r-xdata
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x18 ]
jmp [ eax * 4 + jump_table_403b11 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x14 ]
and ecx 0xffff
mov edx [ ecx * 4 + rw-data ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x14 ] 0x1
je r-xdata
xor edx edx
test edx edx
jne r-xdata
int3
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
push 0x4
mov al [ rw-data ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1c
push ecx
call sub_403740
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x14 ]
and ecx 0xffff
cmp ecx 0x2
je r-xdata
xor eax eax
jmp r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
int3
xor edx edx
test edx edx
jne r-xdata
int3
xor eax eax
test eax eax
jne r-xdata
int3
xor ecx ecx
test ecx ecx
jne r-xdata
int3
push 0x4
mov cl [ rw-data ]
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x10 ]
mov ecx [ ebp - 0x8 ]
lea edx [ ecx + eax + 0x20 ]
push edx
call sub_403740
add esp 0xc
test eax eax
jne r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x20
push edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x18 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x20
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x14 ] 0x3
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x20
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x18 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x20
cmp eax 0x1
jne r-xdata
xor eax eax
test eax eax
jne r-xdata
int3
mov [ ebp - 0x14 ] r--data
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
mov dl [ rw-data ]
push edx
mov eax [ ebp - 0x8 ]
add eax 0x20
push eax
call sub_403740
add esp 0xc
test eax eax
jne r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
int3
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x20
push ecx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x10 ] 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x10 ]
push edx
mov eax [ ebp - 0x8 ]
add eax 0x20
push eax
mov ecx [ ebp - 0x14 ]
push ecx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x20
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
push edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x8 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x20
cmp eax 0x1
jne r-xdata
xor edx edx
test edx edx
jne r-xdata
int3
xor edx edx
test edx edx
jne r-xdata
int3
xor eax eax
test eax eax
jne r-xdata
int3
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
sub_403b30
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov [ rw-data ] ecx
sub_403b60
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
and eax 0x1
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x14 ]
and edx 0xffff
cmp edx 0x4
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x20
push ecx
call [ ebp + 0x8 ]
add esp 0x8
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov [ ebp - 0x4 ] eax
sub_403bc0
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ IsBadReadPtr@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ IsBadWritePtr@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_403c10
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x1
push 0x20
mov eax [ ebp + 0x8 ]
sub eax 0x20
push eax
call sub_403bc0
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx 0x20
push ecx
call sub_407400
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ rw-data ]
and ecx 0x8000
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
sub edx 0x20
push edx
mov eax [ ebp - 0x4 ]
push eax
call sub_407460
add esp 0x8
jmp r-xdata
mov edx [ ebp + 0x8 ]
sub edx 0x20
push edx
push 0x0
mov eax [ rw-data ]
push eax
call [ HeapValidate@IAT ]
mov eax 0x1
jmp r-xdata
sub_403ca0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_403c10
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx 0x20
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
and eax 0xffff
cmp eax 0x4
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_403bc0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x1
je r-xdata
mov esp ebp
pop ebp
retn
xor eax eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
and eax 0xffff
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
cmp ecx [ rw-data ]
jg r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x3
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
mov [ edx ] ecx
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov [ edx ] ecx
mov eax 0x1
jmp r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
mov [ edx ] ecx
sub_403d90
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ ecx ] edx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x5
jge r-xdata
xor eax eax
test eax eax
jne r-xdata
int3
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x18 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x4 ] 0x0
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ ecx + 0x2c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ eax + 0x30 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x14 ]
and eax 0xffff
test eax eax
jl r-xdata
mov edx [ ebp - 0x8 ]
push edx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x14 ]
and edx 0xffff
cmp edx 0x5
jge r-xdata
xor eax eax
test eax eax
jne r-xdata
int3
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x14 ]
and ecx 0xffff
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0x4 ]
add eax 0x1
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x14 ]
and edx 0xffff
mov ecx [ ebp + 0x8 ]
mov [ ecx + edx * 4 + 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x14 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x18 ]
mov eax [ ebp - 0x8 ]
add edx [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x14 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x18 ] edx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
sub_403ef0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
test eax eax
jne r-xdata
int3
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x5
jge r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax [ ecx + 0x2c ]
sub eax [ edx + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x2c ] eax
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov ecx [ edx + 0x30 ]
sub ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x30 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
mov esi [ ebp + 0xc ]
mov edx [ eax + edx * 4 + 0x18 ]
sub edx [ esi + ecx * 4 + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
mov esi [ ebp + 0xc ]
mov edx [ eax + edx * 4 + 0x4 ]
sub edx [ esi + ecx * 4 + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x4 ] edx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + edx * 4 + 0x18 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 + 0x4 ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] 0x1
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
mov eax [ rw-data ]
and eax 0x10
test eax eax
je r-xdata
sub_404020
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] 0x0
xor eax eax
test eax eax
jne r-xdata
int3
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
int3
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x14 ]
and edx 0xffff
cmp edx 0x3
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
and ecx 0xffff
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
and eax 0xffff
cmp eax 0x2
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov ecx [ rw-data ]
and ecx 0x10
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x18 ]
push edx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
push ecx
call sub_403bc0
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
test eax eax
jne r-xdata
int3
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x1c
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
push eax
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x14 ]
and edx 0xffff
cmp edx 0x4
jne r-xdata
xor eax eax
test eax eax
jne r-xdata
int3
xor ecx ecx
test ecx ecx
jne r-xdata
int3
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
sar eax 0x10
and eax 0xffff
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x20
push ecx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x20
cmp eax 0x1
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x14 ]
and edx 0xffff
cmp edx 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x20
push ecx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x1c
cmp eax 0x1
jne r-xdata
xor edx edx
test edx edx
jne r-xdata
int3
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
sar eax 0x10
and eax 0xffff
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x20
push ecx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x20
cmp eax 0x1
jne r-xdata
xor edx edx
test edx edx
jne r-xdata
int3
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
test edx edx
jne r-xdata
int3
mov eax [ ebp - 0x4 ]
push eax
call sub_4042d0
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4042d0
add esp 0x4
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp - 0x4 ]
add edx 0x20
push edx
call [ rw-data ]
add esp 0x8
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4042d0
add esp 0x4
jmp r-xdata
sub_4042d0
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
mov [ ebp - 0x4c ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x10 ] 0x10
jge r-xdata
mov [ ebp - 0x54 ] 0x10
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x54 ] eax
jmp r-xdata
mov edx [ ebp - 0x4c ]
mov [ ebp + edx - 0x48 ] 0x0
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4c ]
mov al [ edx + 0x20 ]
mov [ ebp - 0x50 ] al
cmp [ rw-data ] 0x1
jle r-xdata
mov ecx [ ebp - 0x4c ]
cmp ecx [ ebp - 0x54 ]
jge r-xdata
xor edx edx
test edx edx
jne r-xdata
int3
mov edx [ ebp - 0x50 ]
and edx 0xff
mov eax [ rw-data ]
xor ecx ecx
mov cx [ eax + edx * 2 ]
and ecx 0x157
mov [ ebp - 0x58 ] ecx
push 0x157
mov ecx [ ebp - 0x50 ]
and ecx 0xff
push ecx
call sub_409010
add esp 0x8
mov [ ebp - 0x58 ] eax
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x48 ]
push ecx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x1c
cmp eax 0x1
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x5c ] 0x20
mov edx [ ebp - 0x50 ]
and edx 0xff
mov [ ebp - 0x5c ] edx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
mov eax [ ebp - 0x4c ]
add eax 0x1
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x4c ]
mov cl [ ebp - 0x5c ]
mov [ ebp + eax - 0x48 ] cl
mov edx [ ebp - 0x50 ]
and edx 0xff
push edx
push r--data
mov eax [ ebp - 0x4c ]
imul eax eax 0x3
lea ecx [ ebp + eax - 0x34 ]
push ecx
call sub_404960
add esp 0xc
jmp r-xdata
sub_4043f0
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
lea eax [ ebp - 0x34 ]
push eax
call sub_403d90
add esp 0x4
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
xor edx edx
test edx edx
jne r-xdata
int3
mov ecx [ rw-data ]
and ecx 0x10
test ecx ecx
je r-xdata
push 0x0
call sub_404020
add esp 0x4
mov eax 0x1
jmp r-xdata
xor eax eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_404470
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x5
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x2c ]
push edx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx * 4 + rw-data ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x4 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x18 ]
push edx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x20
cmp eax 0x1
jne r-xdata
xor eax eax
test eax eax
jne r-xdata
int3
xor eax eax
test eax eax
jne r-xdata
int3
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
push edx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405b90
add esp 0x18
cmp eax 0x1
jne r-xdata
jmp r-xdata
xor eax eax
test eax eax
jne r-xdata
int3
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_404540
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x24 ] eax
lea ecx [ ebp + 0x10 ]
mov [ ebp - 0x2c ] ecx
xor edx edx
test edx edx
jne r-xdata
push r--data
push 0x0
push 0x42
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
int3
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x43
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0xc ] 0x49
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_404a60
add esp 0x4
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x2c ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
call sub_4090d0
add esp 0xc
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
int3
sub_404600
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_404660
add esp 0x4
test eax eax
je r-xdata
push 0x0
call sub_404730
add esp 0x4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0x4000
test edx edx
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop ebp
retn
xor eax eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
call sub_40a5d0
add esp 0x4
neg eax
sbb eax eax
jmp r-xdata
sub_404660
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0x3
cmp edx 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
and ecx 0x108
test ecx ecx
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ edx ]
sub ecx [ eax + 0x8 ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x8 ]
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x10 ]
push eax
call sub_4064b0
add esp 0xc
cmp eax [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
or ecx 0x20
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0x80
test edx edx
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
and ecx 0xfffffffd
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] ecx
sub_404730
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ rw-data ]
jge r-xdata
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
cmp [ eax + edx * 4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
mov ecx [ eax + 0xc ]
and ecx 0x83
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
mov ecx [ eax + edx * 4 ]
push ecx
call sub_404600
add esp 0x4
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx + 0xc ]
and eax 0x2
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0xc ]
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
push eax
call sub_404600
add esp 0x4
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x8 ] 0xffffffff
sub_404810
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x14
jge r-xdata
mov [ rw-data ] 0x200
jmp r-xdata
push 0x83
push r--data
push 0x2
push 0x4
mov eax [ rw-data ]
push eax
call sub_402ad0
add esp 0x14
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] 0x14
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ rw-data ] 0x14
push 0x86
push r--data
push 0x2
push 0x4
mov ecx [ rw-data ]
push ecx
call sub_402ad0
add esp 0x14
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x14
jge r-xdata
push 0x1a
call sub_405890
add esp 0x4
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x5
add eax rw-data
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
mov [ edx + ecx * 4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jge r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x5
mov edx [ ebp - 0x4 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
cmp [ eax + edx * 8 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x5
mov [ ecx + rw-data ] 0xffffffff
mov ecx [ ebp - 0x4 ]
sar ecx 0x5
mov edx [ ebp - 0x4 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
cmp [ eax + edx * 8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_404960
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x24 ] eax
lea ecx [ ebp + 0x10 ]
mov [ ebp - 0x2c ] ecx
xor edx edx
test edx edx
jne r-xdata
push r--data
push 0x0
push 0x5d
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
int3
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x5e
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0xc ] 0x42
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp - 0x24 ]
mov [ eax + 0x4 ] 0x7fffffff
mov ecx [ ebp - 0x2c ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x24 ]
push eax
call sub_40aaa0
add esp 0xc
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp - 0x24 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0x24 ]
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
int3
mov edx [ ebp - 0x24 ]
push edx
push 0x0
call sub_406230
add esp 0x8
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x24 ]
mov eax [ edx ]
mov [ eax ] 0x0
xor ecx ecx
and ecx 0xff
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp - 0x24 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_404a60
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_404ae0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
lea eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x36
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push rw-data
call sub_40b940
add esp 0x4
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
push rw-data
call sub_40aaa0
add esp 0xc
mov [ ebp - 0x8 ] eax
push rw-data
mov ecx [ ebp - 0x4 ]
push ecx
call sub_40baa0
add esp 0x8
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
int3
sub_404b60
jne r-xdata
push ebp
mov ebp esp
sub esp 0x0
push eax
push edx
push ebx
push esi
push edi
push r--data
push r--data
push 0x2a
push r--data
push 0x1
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
retn
pop edi
pop esi
pop ebx
pop edx
pop eax
mov esp ebp
pop ebp
retn
int3
sub_404ba0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_404c00 ]
jmp [ ecx * 4 + jump_table_404c7c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_404ce8 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_404ce8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_404e80 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_404d88 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_404e80 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_404ce8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_404ce8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_404ce8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_404e80 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_404e80 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_404e80 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_404e80 ]
sub_404ee0
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
imul ecx [ ebp + 0x10 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0xc ]
and ecx 0x10c
test ecx ecx
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x1c ] 0x1000
mov edx [ ebp + 0x14 ]
mov eax [ edx + 0x18 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + 0xc ]
and edx 0x10c
test edx edx
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x1c ]
jb r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
call sub_40bb60
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0xc ]
cmp edx [ ecx + 0x4 ]
jae r-xdata
mov ecx [ ebp - 0x8 ]
mov dl [ ebp - 0x4 ]
mov [ ecx ] dl
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
sub ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0xc ]
xor edx edx
div [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
sub eax edx
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + 0xc ]
or edx 0x10
mov eax [ ebp + 0x14 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx + 0x10 ]
push eax
call sub_40bd40
add esp 0xc
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call sub_404ba0
add esp 0xc
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x18 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
sub ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x14 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
add ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x14 ]
mov [ edx ] ecx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + 0xc ]
or edx 0x20
mov eax [ ebp + 0x14 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
sub_4050b0
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x63
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x4 ] 0x0
jge r-xdata
int3
push 0x1
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call sub_40c1a0
add esp 0xc
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
jge r-xdata
mov edx [ ebp - 0xc ]
mov [ edx + 0x4 ] 0x0
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0xc ]
and edx 0x108
test edx edx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
mov ecx [ edx ]
sub ecx [ eax + 0x8 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0xc ]
and eax 0x3
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x1c ]
sub ecx [ eax + 0x4 ]
mov eax ecx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0xc ]
and edx 0x80
test edx edx
jne r-xdata
mov ecx [ ebp - 0x8 ]
sar ecx 0x5
mov edx [ ebp - 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx ecx [ eax + edx * 8 + 0x4 ]
and ecx 0x80
test ecx ecx
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov [ rw-data ] 0x16
or eax 0xffffffff
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0xc ]
and ecx 0x1
test ecx ecx
je r-xdata
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx ]
jae r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
cmp edx 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
mov edx [ eax ]
sub edx [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
add ecx edx
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x8 ]
sar edx 0x5
mov eax [ ebp - 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
movsx edx [ ecx + eax * 8 + 0x4 ]
and edx 0x80
test edx edx
je r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x1c ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0x1c ] edx
push 0x2
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call sub_40c1a0
add esp 0xc
cmp eax [ ebp - 0x1c ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
call sub_40c1a0
add esp 0xc
cmp [ ebp - 0x10 ] 0x200
ja r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x8 ]
add edx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x18 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0xc ]
and ecx 0x8
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jae r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0xc ]
and eax 0x400
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0xc ]
and edx 0x2000
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
cmp edx 0xa
jne r-xdata
mov [ ebp - 0x10 ] 0x200
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
sar eax 0x5
mov ecx [ ebp - 0x8 ]
and ecx 0x1f
mov edx [ eax * 4 + rw-data ]
movsx eax [ edx + ecx * 8 + 0x4 ]
and eax 0x4
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
sub_405340
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x92
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and eax 0x83
test eax eax
je r-xdata
int3
mov [ rw-data ] 0x16
or eax 0xffffffff
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
and edx 0xffffffef
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_404660
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
and edx 0x80
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_4050b0
add esp 0x4
mov edx [ ebp + 0xc ]
add edx eax
mov [ ebp + 0xc ] edx
mov [ ebp + 0x10 ] 0x0
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
and ecx 0x1
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
and ecx 0xfffffffc
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] ecx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
call sub_40c1a0
add esp 0xc
sub eax 0xffffffff
neg eax
sbb eax eax
neg eax
dec eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and eax 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
and edx 0x400
test edx edx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x200
sub_405470
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
retn
mov edx [ esp + 0x4 ]
push esi
push edi
mov esi edx
mov edi [ esp + 0x10 ]
or edx edi
and edx 0x3
je r-xdata
mov ecx eax
and eax 0x3
shr ecx 0x2
je r-xdata
test eax 0x1
je r-xdata
test eax eax
je r-xdata
[ esi ] [ edi ]
je r-xdata
mov cl [ esi ]
mov dl [ edi ]
cmp cl dl
jne r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edi
pop esi
mov edx [ esi ]
mov ecx [ edi ]
cmp dl cl
jne r-xdata
mov ecx [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
cmp cl dl
jne r-xdata
sbb eax eax
pop edi
sbb eax 0xffffffff
pop esi
retn
mov cl [ esi + 0x1 ]
mov dl [ edi + 0x1 ]
cmp cl dl
jne r-xdata
inc esi
inc edi
dec eax
je r-xdata
mov eax 0x0
dec eax
je r-xdata
cmp ch dh
jne r-xdata
add edi 0x2
add esi 0x2
sub eax 0x2
jne r-xdata
pop edi
pop esi
retn
cmp dh ch
jne r-xdata
shr ecx 0x10
shr edx 0x10
cmp cl dl
jne r-xdata
dec eax
je r-xdata
cmp ch dh
and ecx 0xff0000
and edx 0xff0000
cmp edx ecx
jne r-xdata
dec eax
sub_405520
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
inc edi
dec ecx
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
dec ebx
jne r-xdata
dec ebx
jne r-xdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne r-xdata
add edi 0x4
xor eax eax
dec ecx
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_405620
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0xc ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x20
jge r-xdata
mov eax [ ebp - 0x2c ]
xor ecx ecx
mov cl [ eax ]
mov edx ecx
sar edx 0x3
mov eax [ ebp - 0x2c ]
xor ecx ecx
mov cl [ eax ]
and ecx 0x7
mov eax 0x1
shl eax cl
mov cl [ ebp + edx - 0x28 ]
or cl al
mov edx [ ebp - 0x2c ]
xor eax eax
mov al [ edx ]
sar eax 0x3
mov [ ebp + eax - 0x28 ] cl
mov ecx [ ebp - 0x2c ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x2c ]
add eax 0x1
mov [ ebp - 0x2c ] eax
test edx edx
jne r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp + edx - 0x28 ] 0x0
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ rw-data ]
mov [ ebp - 0x4 ] edx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx ]
test edx edx
je r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax ]
sar ecx 0x3
xor edx edx
mov dl [ ebp + ecx - 0x28 ]
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax ]
and ecx 0x7
mov eax 0x1
shl eax cl
and edx eax
test edx edx
je r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ rw-data ] eax
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp - 0x4 ]
jne r-xdata
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx ]
sar eax 0x3
xor ecx ecx
mov cl [ ebp + eax - 0x28 ]
mov edx ecx
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax ]
and ecx 0x7
mov eax 0x1
shl eax cl
and edx eax
test edx edx
je r-xdata
mov eax [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x0
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
shr eax 0x8
and eax 0xff
mov [ rw-data ] eax
mov ecx [ rw-data ]
and ecx 0xff
mov [ rw-data ] ecx
mov edx [ rw-data ]
shl edx 0x8
add edx [ rw-data ]
mov [ rw-data ] edx
mov eax [ rw-data ]
shr eax 0x10
and eax 0xffff
mov [ rw-data ] eax
push 0x0
call sub_4070b0
add esp 0x4
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x0
call sub_40a680
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_40cb00
mov [ rw-data ] eax
call sub_40c5f0
call sub_40c4a0
call sub_4071a0
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov edx [ rw-data ]
push edx
mov eax [ rw-data ]
push eax
mov ecx [ rw-data ]
push ecx
call j_sub_4010a0
add esp 0xc
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x1c ]
push edx
call sub_4071e0
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
call sub_40c290
add esp 0x8
retn
push 0x1c
call sub_4058c0
sub_405890
push ebp
mov ebp esp
cmp [ rw-data ] 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40cf40
add esp 0x4
push 0xff
call [ rw-data ]
add esp 0x4
pop ebp
retn
call sub_40cef0
sub_4058f0
push ebp
mov ebp esp
push ecx
push esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx ecx [ eax + edx * 8 + 0x4 ]
and ecx 0x1
test ecx ecx
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_40d490
add esp 0x4
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40d3c0
add esp 0x4
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov [ ecx + eax * 8 + 0x4 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x1
call sub_40d490
add esp 0x4
mov esi eax
push 0x2
call sub_40d490
add esp 0x4
cmp esi eax
je r-xdata
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
xor eax eax
mov edx [ ebp - 0x4 ]
push edx
call sub_40d150
add esp 0x4
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40d490
add esp 0x4
push eax
call [ CloseHandle@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
sub_4059e0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x30
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0x83
test edx edx
je r-xdata
int3
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
and ecx 0x8
test ecx ecx
je r-xdata
push 0x2
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push eax
call sub_403110
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0xfffffbf7
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x0
sub_405a90
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebp + 0x8 ] 0x3
jl r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
mov ecx [ ebp + 0xc ]
and ecx 0xfffffff8
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax * 4 + rw-data ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx * 4 + rw-data ] edx
mov eax [ ebp - 0x4 ]
or eax 0xffffffff
jmp r-xdata
sub_405af0
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp + 0x8 ] 0x3
jl r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0xfffffffa
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx * 4 + rw-data ]
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0xc ] 0xfffffffc
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax * 4 + rw-data ]
jmp r-xdata
cmp [ ebp + 0xc ] 0xfffffffb
jne r-xdata
push 0xfffffff5
call [ GetStdHandle@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx * 4 + rw-data ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax * 4 + rw-data ] ecx
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov edx [ ebp + 0x8 ]
mov [ edx * 4 + rw-data ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
sub_405b90
push ebp
mov ebp esp
mov eax 0x302c
call sub_40dbc0
push edi
mov [ ebp - 0x3008 ] 0x0
mov ecx 0x3ff
xor eax eax
lea edi [ ebp - 0x3007 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x2008 ] 0x0
mov ecx 0x3ff
xor eax eax
lea edi [ ebp - 0x2007 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x1000 ] 0x0
mov ecx 0x3ff
xor eax eax
lea edi [ ebp - 0xfff ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp + 0x1c ]
mov [ ebp - 0x1004 ] eax
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebp + 0x8 ] 0x3
jl r-xdata
pop edi
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push rw-data
call [ InterlockedIncrement@IAT ]
test eax eax
jle r-xdata
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
mov eax [ ebp - 0x1004 ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
push 0xfed
lea edx [ ebp - 0x1000 ]
push edx
call sub_40dac0
add esp 0x10
test eax eax
jge r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x1000 ]
push eax
lea ecx [ ebp - 0x3008 ]
push ecx
call sub_40d9e0
add esp 0x8
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push r--data
lea eax [ ebp - 0x1000 ]
push eax
call sub_40d9d0
add esp 0x8
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
push r--data
lea ecx [ ebp - 0x2008 ]
push ecx
call [ rw-data ]
add esp 0x10
lea edx [ ebp - 0x2008 ]
push edx
call [ OutputDebugStringA@IAT ]
push rw-data
call [ InterlockedDecrement@IAT ]
call sub_405a80
or eax 0xffffffff
jmp r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x300c ] eax
cmp [ ebp - 0x300c ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx * 4 + rw-data ]
and eax 0x1
test eax eax
je r-xdata
mov [ ebp - 0x3028 ] r--data
mov [ ebp - 0x3028 ] r--data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
push r--data
mov ecx [ ebp - 0x300c ]
push ecx
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x3008 ]
push edx
lea eax [ ebp - 0x2008 ]
push eax
call sub_40d9d0
add esp 0x8
lea eax [ ebp - 0x3008 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
push r--data
push 0x1000
lea eax [ ebp - 0x2008 ]
push eax
call sub_40d8d0
add esp 0x18
test eax eax
jge r-xdata
push r--data
lea edx [ ebp - 0x3008 ]
push edx
call sub_40d9e0
add esp 0x8
push r--data
lea ecx [ ebp - 0x3008 ]
push ecx
call sub_40d9e0
add esp 0x8
mov ecx [ ebp - 0x3028 ]
push ecx
lea edx [ ebp - 0x3008 ]
push edx
call sub_40d9d0
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx * 4 + rw-data ]
and edx 0x1
test edx edx
je r-xdata
lea ecx [ ebp - 0x1008 ]
push ecx
lea edx [ ebp - 0x2008 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
add esp 0xc
test eax eax
je r-xdata
jmp r-xdata
push r--data
lea ecx [ ebp - 0x2008 ]
push ecx
call sub_40d9d0
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax * 4 + rw-data ]
and ecx 0x2
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax * 4 + rw-data ] 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax * 4 + rw-data ]
and ecx 0x4
test ecx ecx
je r-xdata
lea edx [ ebp - 0x2008 ]
push edx
call [ OutputDebugStringA@IAT ]
push 0x0
lea ecx [ ebp - 0x3010 ]
push ecx
lea edx [ ebp - 0x2008 ]
push edx
call sub_404a60
add esp 0x4
push eax
lea eax [ ebp - 0x2008 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx * 4 + rw-data ]
push edx
call [ WriteFile@IAT ]
mov eax [ ebp - 0x1008 ]
jmp r-xdata
push rw-data
call [ InterlockedDecrement@IAT ]
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
push rw-data
call [ InterlockedDecrement@IAT ]
mov [ ebp - 0x302c ] 0x0
push 0xa
lea edx [ ebp - 0x3024 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
call sub_40d5e0
add esp 0xc
mov [ ebp - 0x302c ] eax
jmp r-xdata
mov eax [ ebp - 0x1008 ]
jmp r-xdata
push rw-data
call [ InterlockedDecrement@IAT ]
lea ecx [ ebp - 0x1000 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp - 0x302c ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_405f20
add esp 0x14
mov [ ebp - 0x1008 ] eax
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
sub_405f20
push ebp
mov ebp esp
mov eax 0x1138
call sub_40dbc0
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x1da
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push 0x104
lea ecx [ ebp - 0x108 ]
push ecx
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
call sub_405a80
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_404a60
add esp 0x4
cmp eax 0x40
jbe r-xdata
push r--data
lea edx [ ebp - 0x108 ]
push edx
call sub_40d9d0
add esp 0x8
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x1110 ] ecx
cmp [ ebp - 0x1110 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_404a60
add esp 0x4
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + eax - 0x40 ]
mov [ ebp - 0x4 ] edx
push 0x3
push r--data
mov eax [ ebp - 0x4 ]
push eax
call sub_405520
add esp 0xc
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
mov edx [ ebp - 0x1110 ]
push edx
call sub_404a60
add esp 0x4
cmp eax 0x40
jbe r-xdata
mov [ ebp - 0x1114 ] r--data
mov [ ebp - 0x1114 ] r--data
jmp r-xdata
mov eax [ ebp - 0x1110 ]
push eax
call sub_404a60
add esp 0x4
mov ecx [ ebp - 0x1110 ]
lea edx [ ecx + eax - 0x40 ]
mov [ ebp - 0x1110 ] edx
push 0x3
push r--data
mov eax [ ebp - 0x1110 ]
push eax
call sub_405520
add esp 0xc
mov [ ebp - 0x1118 ] r--data
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1118 ] eax
jmp r-xdata
mov ecx [ ebp + 0x18 ]
movsx edx [ ecx ]
test edx edx
je r-xdata
mov [ ebp - 0x111c ] r--data
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
mov ecx [ ebp + 0x18 ]
movsx edx [ ecx ]
test edx edx
je r-xdata
mov [ ebp - 0x1120 ] r--data
mov [ ebp - 0x1120 ] r--data
jmp r-xdata
mov [ ebp - 0x111c ] r--data
jmp r-xdata
mov [ ebp - 0x1124 ] r--data
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x1124 ] edx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
movsx ecx [ eax ]
test ecx ecx
je r-xdata
mov [ ebp - 0x1128 ] r--data
mov [ ebp - 0x1128 ] r--data
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x112c ] r--data
mov eax [ ebp + 0xc ]
mov [ ebp - 0x112c ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1130 ] r--data
mov [ ebp - 0x1130 ] r--data
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1134 ] r--data
mov ecx [ ebp - 0x1110 ]
mov [ ebp - 0x1134 ] ecx
jmp r-xdata
cmp [ ebp - 0x1110 ] 0x0
je r-xdata
mov [ ebp - 0x1138 ] r--data
mov [ ebp - 0x1138 ] r--data
jmp r-xdata
cmp [ ebp - 0x1110 ] 0x0
je r-xdata
push 0x12012
push r--data
lea edx [ ebp - 0x110c ]
push edx
call sub_40e020
add esp 0xc
mov [ ebp - 0x10c ] eax
cmp [ ebp - 0x10c ] 0x3
jne r-xdata
push r--data
lea ecx [ ebp - 0x110c ]
push ecx
call sub_40d9d0
add esp 0x8
mov edx [ ebp - 0x1114 ]
push edx
mov eax [ ebp - 0x1118 ]
push eax
mov ecx [ ebp - 0x111c ]
push ecx
mov edx [ ebp - 0x1120 ]
push edx
mov eax [ ebp - 0x1124 ]
push eax
mov ecx [ ebp - 0x1128 ]
push ecx
mov edx [ ebp - 0x112c ]
push edx
mov eax [ ebp - 0x1130 ]
push eax
mov ecx [ ebp - 0x1134 ]
push ecx
mov edx [ ebp - 0x1138 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx * 4 + rw-data ]
push edx
push r--data
push 0x1000
lea eax [ ebp - 0x110c ]
push eax
call sub_40d8d0
add esp 0x3c
test eax eax
jge r-xdata
cmp [ ebp - 0x10c ] 0x4
jne r-xdata
push 0x16
call sub_40de00
add esp 0x4
push 0x3
call sub_407200
xor eax eax
mov eax 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_406230
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x69
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0x82
test edx edx
je r-xdata
int3
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0xc ]
or al 0x20
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
and ecx 0x40
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0xc ]
and eax 0x1
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
or edx 0x2
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0xffffffef
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
and ecx 0x10c
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0xc ]
and eax 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0x108
test edx edx
je r-xdata
cmp [ ebp - 0x8 ] rw-data
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
or edx 0x20
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x8 ]
mov [ ecx ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0xfffffffe
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
call sub_4064b0
add esp 0xc
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax ]
sub edx [ ecx + 0x8 ]
test edx edx
jge r-xdata
mov edx [ ebp - 0x10 ]
push edx
call sub_40e1b0
add esp 0x4
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xff
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
or edx 0x20
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
or eax 0xffffffff
jmp r-xdata
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0xa0
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_40e0e0
add esp 0x4
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx ]
sub eax [ edx + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
add edx 0x1
mov eax [ ebp - 0x8 ]
mov [ eax ] edx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x18 ]
sub edx 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
int3
cmp [ ebp - 0x10 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_4064b0
add esp 0xc
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0x14 ] rw-data
mov edx [ ebp - 0x10 ]
sar edx 0x5
mov eax [ ebp - 0x10 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
lea edx [ ecx + eax * 8 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x8 ]
mov dl [ ebp + 0x8 ]
mov [ ecx ] dl
jmp r-xdata
push 0x2
push 0x0
mov edx [ ebp - 0x10 ]
push edx
call sub_40c1a0
add esp 0xc
mov eax [ ebp - 0x14 ]
movsx ecx [ eax + 0x4 ]
and ecx 0x20
test ecx ecx
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
je r-xdata
sub_4064b0
push ebp
mov ebp esp
sub esp 0x420
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx ecx [ eax + edx * 8 + 0x4 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x420 ] edx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov edx [ eax * 4 + rw-data ]
movsx eax [ edx + ecx * 8 + 0x4 ]
and eax 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
movsx edx [ ecx + eax * 8 + 0x4 ]
and edx 0x80
test edx edx
je r-xdata
push 0x2
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c1a0
add esp 0xc
push 0x0
lea eax [ ebp - 0x418 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov edx [ eax * 4 + rw-data ]
mov eax [ edx + ecx * 8 ]
push eax
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp - 0x418 ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x414 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x420 ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push 0x0
lea ecx [ ebp - 0x418 ]
push ecx
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x414 ]
sub edx eax
push edx
lea ecx [ ebp - 0x414 ]
push ecx
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov edx [ ecx + eax * 8 ]
push edx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
sub edx [ ebp + 0xc ]
cmp edx [ ebp + 0x10 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx ecx [ eax + edx * 8 + 0x4 ]
and ecx 0x40
test ecx ecx
je r-xdata
cmp [ ebp - 0xc ] 0x5
jne r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x418 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x414 ]
sub ecx edx
cmp [ ebp - 0x418 ] ecx
jge r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ eax ]
mov [ ebp - 0x41c ] cl
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
movsx eax [ ebp - 0x41c ]
cmp eax 0xa
jne r-xdata
mov [ rw-data ] 0x1c
mov [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp + 0xc ]
movsx eax [ edx ]
cmp eax 0x1a
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
call sub_40d150
add esp 0x4
mov [ rw-data ] 0x9
mov edx [ ebp - 0xc ]
mov [ rw-data ] edx
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov dl [ ebp - 0x41c ]
mov [ ecx ] dl
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x420 ]
add ecx 0x1
mov [ ebp - 0x420 ] ecx
mov edx [ ebp - 0x8 ]
mov [ edx ] 0xd
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
xor eax eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
lea ecx [ ebp - 0x414 ]
sub eax ecx
cmp eax 0x400
jge r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
sub_406760
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x10 ] 0x0
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x47
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
int3
xor edx edx
test edx edx
jne r-xdata
push r--data
push 0x0
push 0x48
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
int3
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x49
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov ecx [ ebp + 0xc ]
mov dl [ ecx ]
mov [ ebp - 0x20 ] dl
cmp [ ebp - 0x20 ] 0x61
je r-xdata
int3
mov [ ebp - 0x14 ] 0x109
mov edx [ ebp - 0x1c ]
or edx 0x2
mov [ ebp - 0x1c ] edx
jmp r-xdata
cmp [ ebp - 0x20 ] 0x72
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x1c ]
or al 0x1
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x20 ] 0x77
je r-xdata
push 0x1a4
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40e220
add esp 0x10
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x301
mov ecx [ ebp - 0x1c ]
or ecx 0x2
mov [ ebp - 0x1c ] ecx
jmp r-xdata
jmp r-xdata
mov ecx [ rw-data ]
add ecx 0x1
mov [ rw-data ] ecx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x1c ]
mov [ eax + 0xc ] ecx
mov edx [ ebp - 0xc ]
mov [ edx + 0x4 ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp - 0xc ]
mov [ edx + 0x1c ] 0x0
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x10 ] ecx
mov eax [ ebp - 0xc ]
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx ecx [ eax ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x24 ]
sub edx 0x2b
mov [ ebp - 0x24 ] edx
cmp [ ebp - 0x24 ] 0x49
ja r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x24 ]
xor eax eax
mov al [ ecx + lookup_table_406aa5 ]
jmp [ eax * 4 + jump_table_406a7d ]
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0xc ]
movsx edx [ ecx ]
test edx edx
je r-xdata
mov edx [ ebp - 0x14 ]
and edx 0x2
test edx edx
je r-xdata
mov ecx [ ebp - 0x14 ]
and ecx 0xc000
test ecx ecx
je r-xdata
mov eax [ ebp - 0x14 ]
and eax 0xc000
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
and eax 0x1000
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
and edx 0x40
test edx edx
je r-xdata
mov eax [ ebp - 0x14 ]
or al 0x2
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
and ecx 0xfffffffe
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x1c ]
or dl 0x80
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
and al 0xfc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x14 ]
or dh 0x80
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x14 ]
or ch 0x40
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
mov edx [ ebp - 0x1c ]
or dh 0x40
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
mov eax [ ebp - 0x1c ]
and ah 0xbf
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
mov ecx [ ebp - 0x14 ]
or ecx 0x20
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
mov edx [ ebp - 0x14 ]
or edx 0x10
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x14 ]
or ch 0x10
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x14 ]
or al 0x40
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub_406aaf
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] eax
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ edx ] eax
add eax [ ecx + ecx ]
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
add eax 0x9090906
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ edi ] eax
or [ ecx ] ecx
or [ ecx ] ecx
or [ eax ] ecx
int3
sub_406af0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
cmp [ eax + edx * 4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] 0x0
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0x0
mov edx [ ebp - 0x8 ]
mov [ edx + 0x1c ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] 0xffffffff
push 0x55
push r--data
push 0x2
push 0x20
call sub_4026d0
add esp 0x10
mov edx [ ebp - 0x4 ]
mov ecx [ rw-data ]
mov [ ecx + edx * 4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
cmp [ eax + edx * 4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
mov ecx [ eax + 0xc ]
and ecx 0x83
test ecx ecx
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_406c10
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call [ ebp - 0x4 ]
add esp 0x4
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax 0x1
sub_406c40
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
inc edi
dec edx
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
sub_406cc0
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0xffffffe0
jbe r-xdata
cmp [ ebp + 0x8 ] 0xffffffe0
ja r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_406d20
add esp 0x4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_406c10
add esp 0x4
test eax eax
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
sub_406d20
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_407a90
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
add edx 0xf
and edx 0xfffffff0
mov [ ebp + 0x8 ] edx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
push ecx
call [ HeapAlloc@IAT ]
mov [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_406d90
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0xc ] 0xffffffe0
jbe r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_407400
add esp 0x4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
cmp ecx [ rw-data ]
ja r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
add eax 0xf
and al 0xf0
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push 0x10
mov eax [ rw-data ]
push eax
call [ HeapReAlloc@IAT ]
mov [ ebp + 0xc ] 0x1
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call sub_4082d0
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
sub_406e20
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_406ca0
add esp 0x4
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
cmp [ ebp + 0xc ] 0xffffffe0
ja r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_406ff0
add esp 0x4
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_407400
add esp 0x4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ rw-data ]
ja r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_406c10
add esp 0x4
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
add edx 0xf
and edx 0xfffffff0
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
mov edx [ rw-data ]
push edx
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x8 ] eax
mov [ ebp + 0xc ] 0x1
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call sub_4082d0
add esp 0xc
test eax eax
je r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
push edx
call sub_407a90
add esp 0x4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
add ecx 0xf
and ecx 0xfffffff0
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0xc ]
push edx
push 0x0
mov eax [ rw-data ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call sub_404ba0
add esp 0xc
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call sub_4074c0
add esp 0x8
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
call sub_404ba0
add esp 0xc
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
call sub_4074c0
add esp 0x8
sub_406ff0
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_407400
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
push ecx
call [ HeapFree@IAT ]
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_4074c0
add esp 0x8
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_407040
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4089f0
test eax eax
jge r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
call [ HeapValidate@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffc
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffc
mov [ rw-data ] 0x78
mov [ rw-data ] 0x28
jmp r-xdata
sub_4070b0
push ebp
mov ebp esp
push 0x0
push 0x1000
xor eax eax
cmp [ ebp + 0x8 ] 0x0
sete al
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
call sub_4073a0
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
mov ecx [ rw-data ]
push ecx
call [ HeapDestroy@IAT ]
xor eax eax
jmp r-xdata
pop ebp
retn
sub_407100
push ebp
mov ebp esp
sub esp 0x8
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ rw-data ]
jge r-xdata
mov edx [ rw-data ]
push edx
push 0x0
mov eax [ rw-data ]
push eax
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
push ecx
call [ HeapDestroy@IAT ]
mov esp ebp
pop ebp
retn
push 0x4000
push 0x100000
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
push ecx
call [ VirtualFree@IAT ]
push 0x8000
push 0x0
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0xc ]
push eax
call [ VirtualFree@IAT ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x10 ]
push edx
push 0x0
mov eax [ rw-data ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x8 ]
add ecx 0x14
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_4071a0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
push rw-data
call sub_407340
add esp 0x8
push rw-data
push rw-data
call sub_407340
add esp 0x8
pop ebp
retn
call [ rw-data ]
sub_407260
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] 0x1
mov cl [ ebp + 0x10 ]
mov [ rw-data ] cl
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rw-data
push rw-data
call sub_407340
add esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push 0xffffffff
call sub_403b30
add esp 0x4
and eax 0x20
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_407340
add esp 0x8
mov edx [ rw-data ]
mov [ ebp - 0x4 ] edx
mov [ rw-data ] 0x1
mov ecx [ ebp + 0x8 ]
push ecx
call [ ExitProcess@IAT ]
jmp r-xdata
mov [ rw-data ] 0x1
call sub_4043f0
mov edx [ ebp - 0x4 ]
cmp [ edx ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp - 0x4 ]
call [ eax ]
mov eax [ ebp - 0x4 ]
sub eax 0x4
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jb r-xdata
sub_407340
push ebp
mov ebp esp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x4
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
call [ edx ]
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
sub_4073a0
push ebp
mov ebp esp
push 0x140
push 0x0
mov eax [ rw-data ]
push eax
call [ HeapAlloc@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x10
mov eax 0x1
xor eax eax
jmp r-xdata
pop ebp
retn
sub_407400
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
imul eax eax 0x14
mov ecx [ rw-data ]
add ecx eax
mov [ ebp - 0xc ] ecx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
xor eax eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
sub edx [ ecx + 0xc ]
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x4 ] 0x100000
jae r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
mov esp ebp
pop ebp
retn
sub_407460
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
sub ecx [ eax + 0xc ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
shr edx 0xf
mov [ ebp - 0x4 ] edx
mov eax 0x80000000
mov ecx [ ebp - 0x4 ]
shr eax cl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
and edx eax
test edx edx
jne r-xdata
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x8 ]
and eax 0xf
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
and ecx 0xfff
test ecx ecx
je r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_4074c0
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x3c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
sub eax [ edx + 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
shr ecx 0xf
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
imul edx edx 0x204
mov eax [ ebp - 0x3c ]
lea ecx [ eax + edx + 0x144 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
sub edx 0x4
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
sub ecx 0x1
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x30 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x38 ]
mov ecx [ eax ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ edx - 0x4 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x14 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x30 ]
sar eax 0x4
sub eax 0x1
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x3f
jbe r-xdata
mov edx [ ebp - 0x14 ]
sar edx 0x4
sub edx 0x1
mov [ ebp - 0x24 ] edx
cmp [ ebp - 0x24 ] 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov [ ebp - 0x28 ] 0x3f
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x38 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ ebp - 0x24 ] 0x3f
mov ecx [ ebp - 0xc ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov edx [ ebp - 0x1c ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0xc ]
sar eax 0x4
sub eax 0x1
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x2c ] 0x3f
jbe r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp - 0x38 ]
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov edx [ ebp - 0x30 ]
add edx [ ebp - 0x14 ]
mov [ ebp - 0x30 ] edx
cmp [ ebp - 0x24 ] 0x20
jae r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x8 ]
lea edx [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x1c ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x1c ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov edx [ ebp - 0x2c ]
cmp edx [ ebp - 0x28 ]
je r-xdata
mov ecx [ ebp - 0x30 ]
add ecx [ ebp - 0xc ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x30 ]
sar edx 0x4
sub edx 0x1
mov [ ebp - 0x28 ] edx
cmp [ ebp - 0x28 ] 0x3f
jbe r-xdata
mov [ ebp - 0x2c ] 0x3f
mov ecx [ ebp - 0x24 ]
sub ecx 0x20
mov edx 0x80000000
shr edx cl
not edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x3c ]
mov eax [ ecx + eax * 4 + 0xc4 ]
and eax edx
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x3c ]
mov [ edx + ecx * 4 + 0xc4 ] eax
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x24 ]
mov cl [ eax + 0x4 ]
sub cl 0x1
mov edx [ ebp - 0x3c ]
add edx [ ebp - 0x24 ]
mov [ edx + 0x4 ] cl
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x24 ]
movsx ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
mov eax 0x80000000
mov ecx [ ebp - 0x24 ]
shr eax cl
not eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x3c ]
mov ecx [ edx + ecx * 4 + 0x44 ]
and ecx eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x3c ]
mov [ eax + edx * 4 + 0x44 ] ecx
mov ecx [ ebp - 0x3c ]
add ecx [ ebp - 0x24 ]
mov dl [ ecx + 0x4 ]
sub dl 0x1
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x24 ]
mov [ eax + 0x4 ] dl
mov ecx [ ebp - 0x3c ]
add ecx [ ebp - 0x24 ]
movsx edx [ ecx + 0x4 ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x30 ]
mov [ ecx ] edx
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x30 ]
mov [ eax - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
sub eax 0x1
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
mov edx [ ebp - 0x8 ]
cmp [ edx ] 0x0
jne r-xdata
cmp [ ebp - 0x28 ] 0x20
jae r-xdata
mov eax [ ebp - 0x2c ]
cmp eax [ ebp - 0x28 ]
je r-xdata
mov [ ebp - 0x28 ] 0x3f
mov ecx [ ebp - 0x24 ]
sub ecx 0x20
mov edx 0x80000000
shr edx cl
not edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
and ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] ecx
jmp r-xdata
mov eax 0x80000000
mov ecx [ ebp - 0x24 ]
shr eax cl
not eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
and edx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov esp ebp
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x3c ]
add ecx [ ebp - 0x28 ]
movsx edx [ ecx + 0x4 ]
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x28 ]
mov cl [ eax + 0x4 ]
add cl 0x1
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x28 ]
mov [ eax + 0x4 ] cl
test edx edx
jne r-xdata
mov ecx [ ebp - 0x3c ]
add ecx [ ebp - 0x28 ]
movsx edx [ ecx + 0x4 ]
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x28 ]
mov cl [ eax + 0x4 ]
add cl 0x1
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x28 ]
mov [ eax + 0x4 ] cl
test edx edx
jne r-xdata
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x34 ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ rw-data ] edx
mov eax [ ebp - 0x4 ]
mov [ rw-data ] eax
mov eax [ rw-data ]
shl eax 0xf
mov ecx [ rw-data ]
mov edx [ ecx + 0xc ]
add edx eax
mov [ ebp - 0x18 ] edx
push 0x4000
push 0x8000
mov eax [ ebp - 0x18 ]
push eax
call [ VirtualFree@IAT ]
mov edx 0x80000000
mov ecx [ rw-data ]
shr edx cl
mov eax [ rw-data ]
mov ecx [ eax + 0x8 ]
or ecx edx
mov edx [ rw-data ]
mov [ edx + 0x8 ] ecx
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
mov edx [ rw-data ]
mov [ ecx + edx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
mov dl [ ecx + 0x43 ]
sub dl 0x1
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
mov [ ecx + 0x43 ] dl
mov edx [ rw-data ]
mov eax [ edx + 0x10 ]
movsx ecx [ eax + 0x43 ]
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x28 ]
sub ecx 0x20
mov eax 0x80000000
shr eax cl
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x3c ]
mov ecx [ edx + ecx * 4 + 0xc4 ]
or ecx eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x3c ]
mov [ eax + edx * 4 + 0xc4 ] ecx
mov ecx [ ebp - 0x28 ]
sub ecx 0x20
mov edx 0x80000000
shr edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
or ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] ecx
mov eax 0x80000000
mov ecx [ ebp - 0x28 ]
shr eax cl
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x3c ]
mov ecx [ edx + ecx * 4 + 0x44 ]
or ecx eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x3c ]
mov [ eax + edx * 4 + 0x44 ] ecx
jmp r-xdata
mov edx 0x80000000
mov ecx [ ebp - 0x28 ]
shr edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
or ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
cmp [ ebp - 0x2c ] 0x20
jae r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x8 ] 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x4 ]
and al 0xfe
mov ecx [ rw-data ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x2c ]
sub ecx 0x20
mov eax 0x80000000
shr eax cl
not eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x3c ]
mov ecx [ edx + ecx * 4 + 0xc4 ]
and ecx eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x3c ]
mov [ eax + edx * 4 + 0xc4 ] ecx
mov ecx [ ebp - 0x3c ]
add ecx [ ebp - 0x2c ]
mov dl [ ecx + 0x4 ]
sub dl 0x1
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x2c ]
mov [ eax + 0x4 ] dl
mov ecx [ ebp - 0x3c ]
add ecx [ ebp - 0x2c ]
movsx edx [ ecx + 0x4 ]
test edx edx
jne r-xdata
mov edx 0x80000000
mov ecx [ ebp - 0x2c ]
shr edx cl
not edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x3c ]
mov eax [ ecx + eax * 4 + 0x44 ]
and eax edx
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x3c ]
mov [ edx + ecx * 4 + 0x44 ] eax
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x2c ]
mov cl [ eax + 0x4 ]
sub cl 0x1
mov edx [ ebp - 0x3c ]
add edx [ ebp - 0x2c ]
mov [ edx + 0x4 ] cl
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x2c ]
movsx ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
push 0x8000
push 0x0
mov eax [ rw-data ]
mov ecx [ eax + 0xc ]
push ecx
call [ VirtualFree@IAT ]
mov edx [ rw-data ]
mov eax [ edx + 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
push ecx
call [ HeapFree@IAT ]
mov edx [ rw-data ]
imul edx edx 0x14
mov eax [ rw-data ]
add eax edx
mov ecx [ rw-data ]
add ecx 0x14
sub eax ecx
push eax
mov edx [ rw-data ]
add edx 0x14
push edx
mov eax [ rw-data ]
push eax
call sub_40e710
add esp 0xc
mov ecx [ rw-data ]
sub ecx 0x1
mov [ rw-data ] ecx
mov edx [ ebp + 0x8 ]
cmp edx [ rw-data ]
jbe r-xdata
mov ecx [ ebp - 0x2c ]
sub ecx 0x20
mov eax 0x80000000
shr eax cl
not eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
and edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
jmp r-xdata
mov edx 0x80000000
mov ecx [ ebp - 0x2c ]
shr edx cl
not edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov eax [ ebp + 0x8 ]
sub eax 0x14
mov [ ebp + 0x8 ] eax
sub_407a90
push ebp
mov ebp esp
sub esp 0x38
push esi
mov eax [ rw-data ]
imul eax eax 0x14
mov ecx [ rw-data ]
add ecx eax
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0x8 ]
add edx 0x17
and edx 0xfffffff0
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x28 ]
sar eax 0x4
sub eax 0x1
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x20
jge r-xdata
mov [ ebp - 0x24 ] 0x0
mov ecx [ ebp - 0x20 ]
sub ecx 0x20
or eax 0xffffffff
shr eax cl
mov [ ebp - 0x34 ] eax
or edx 0xffffffff
mov ecx [ ebp - 0x20 ]
shr edx cl
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x34 ] 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x2c ]
jne r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x24 ]
and ecx [ eax ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x34 ]
and eax [ edx + 0x4 ]
or ecx eax
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
mov [ rw-data ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x38 ]
mov eax [ edx ]
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
add ecx 0x14
mov [ ebp - 0x18 ] ecx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x30 ] 0x0
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x24 ]
and eax [ edx + ecx * 4 + 0x44 ]
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x38 ]
mov esi [ ebp - 0x34 ]
and esi [ edx + ecx * 4 + 0xc4 ]
or eax esi
test eax eax
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ rw-data ]
jne r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
and eax [ edx ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x34 ]
and edx [ ecx + 0x4 ]
or eax edx
test eax eax
je r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x2c ]
jae r-xdata
mov eax [ ebp - 0x30 ]
imul eax eax 0x204
mov ecx [ ebp - 0x38 ]
lea edx [ ecx + eax + 0x144 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x24 ]
and edx [ ecx + eax * 4 + 0x44 ]
mov [ ebp - 0x1c ] edx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov edx [ ebp - 0x30 ]
add edx 0x1
mov [ ebp - 0x30 ] edx
jmp r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x2c ]
jae r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x14
mov [ ebp - 0x18 ] eax
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
jl r-xdata
mov [ ebp - 0x20 ] 0x20
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
and edx [ ecx + eax * 4 + 0xc4 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x24 ]
and edx [ ecx + eax * 4 + 0x44 ]
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x38 ]
mov esi [ ebp - 0x34 ]
and esi [ ecx + eax * 4 + 0xc4 ]
or edx esi
test edx edx
jne r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x2c ]
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ rw-data ]
jae r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 8 + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
sar ecx 0x4
sub ecx 0x1
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x14 ] 0x3f
jle r-xdata
mov eax [ ebp - 0x1c ]
shl eax 0x1
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov edx [ ebp - 0x18 ]
push edx
call sub_4080e0
add esp 0x4
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x10 ]
mov [ edx ] eax
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x10 ]
cmp [ ecx ] 0xffffffff
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
add ecx 0x14
mov [ ebp - 0x18 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x20 ]
je r-xdata
mov [ ebp - 0x14 ] 0x3f
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ rw-data ]
jne r-xdata
mov edx [ ebp - 0x18 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
call sub_407fd0
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x14
mov [ ebp - 0x18 ] eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x28 ]
add edx 0x1
mov eax [ ebp - 0x10 ]
mov [ eax ] edx
mov ecx [ ebp - 0x28 ]
add ecx 0x1
mov edx [ ebp - 0x10 ]
add edx [ ebp - 0x28 ]
mov [ edx - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
add eax 0x1
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x10 ]
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x20 ] 0x20
jge r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ rw-data ]
jae r-xdata
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x30 ]
mov [ edx ] eax
mov eax [ ebp - 0x10 ]
add eax 0x4
mov eax [ ebp - 0x18 ]
cmp eax [ rw-data ]
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx * 8 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov ecx [ ebp - 0x20 ]
sub ecx 0x20
mov edx 0x80000000
shr edx cl
not edx
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x38 ]
mov eax [ ecx + eax * 4 + 0xc4 ]
and eax edx
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x38 ]
mov [ edx + ecx * 4 + 0xc4 ] eax
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x20 ]
mov cl [ eax + 0x4 ]
sub cl 0x1
mov edx [ ebp - 0x38 ]
add edx [ ebp - 0x20 ]
mov [ edx + 0x4 ] cl
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x20 ]
movsx ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
mov eax 0x80000000
mov ecx [ ebp - 0x20 ]
shr eax cl
not eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x38 ]
mov ecx [ edx + ecx * 4 + 0x44 ]
and ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x38 ]
mov [ eax + edx * 4 + 0x44 ] ecx
mov ecx [ ebp - 0x38 ]
add ecx [ ebp - 0x20 ]
mov dl [ ecx + 0x4 ]
sub dl 0x1
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x20 ]
mov [ eax + 0x4 ] dl
mov ecx [ ebp - 0x38 ]
add ecx [ ebp - 0x20 ]
movsx edx [ ecx + 0x4 ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0x30 ]
cmp ecx [ rw-data ]
jne r-xdata
cmp [ ebp - 0x14 ] 0x20
jge r-xdata
mov ecx [ ebp - 0x20 ]
sub ecx 0x20
mov edx 0x80000000
shr edx cl
not edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x4 ]
and ecx edx
mov edx [ ebp - 0x18 ]
mov [ edx + 0x4 ] ecx
jmp r-xdata
mov eax 0x80000000
mov ecx [ ebp - 0x20 ]
shr eax cl
not eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
and edx eax
mov eax [ ebp - 0x18 ]
mov [ eax ] edx
mov [ rw-data ] 0x0
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x14 ]
movsx ecx [ eax + 0x4 ]
mov edx [ ebp - 0x38 ]
add edx [ ebp - 0x14 ]
mov al [ edx + 0x4 ]
add al 0x1
mov edx [ ebp - 0x38 ]
add edx [ ebp - 0x14 ]
mov [ edx + 0x4 ] al
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x14 ]
movsx ecx [ eax + 0x4 ]
mov edx [ ebp - 0x38 ]
add edx [ ebp - 0x14 ]
mov al [ edx + 0x4 ]
add al 0x1
mov edx [ ebp - 0x38 ]
add edx [ ebp - 0x14 ]
mov [ edx + 0x4 ] al
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x14 ]
sub ecx 0x20
mov edx 0x80000000
shr edx cl
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x38 ]
mov eax [ ecx + eax * 4 + 0xc4 ]
or eax edx
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x38 ]
mov [ edx + ecx * 4 + 0xc4 ] eax
mov ecx [ ebp - 0x14 ]
sub ecx 0x20
mov eax 0x80000000
shr eax cl
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x4 ]
or edx eax
mov eax [ ebp - 0x18 ]
mov [ eax + 0x4 ] edx
mov edx 0x80000000
mov ecx [ ebp - 0x14 ]
shr edx cl
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x38 ]
mov eax [ ecx + eax * 4 + 0x44 ]
or eax edx
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x38 ]
mov [ edx + ecx * 4 + 0x44 ] eax
jmp r-xdata
mov eax 0x80000000
mov ecx [ ebp - 0x14 ]
shr eax cl
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
or edx eax
mov eax [ ebp - 0x18 ]
mov [ eax ] edx
sub_407fd0
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
imul eax eax 0x14
mov ecx [ rw-data ]
add ecx eax
mov [ ebp - 0x4 ] ecx
push 0x41c4
push 0x8
mov edx [ rw-data ]
push edx
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov ecx [ rw-data ]
add ecx 0x10
imul ecx ecx 0x14
push ecx
mov edx [ rw-data ]
push edx
push 0x0
mov eax [ rw-data ]
push eax
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push 0x4
push 0x2000
push 0x100000
push 0x0
call [ VirtualAlloc@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xc ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ rw-data ] ecx
mov edx [ rw-data ]
add edx 0x10
mov [ rw-data ] edx
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0xffffffff
mov eax [ rw-data ]
add eax 0x1
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ edx ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
push 0x0
mov edx [ rw-data ]
push edx
call [ HeapFree@IAT ]
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4080e0
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x28 ] 0x0
mov eax [ ebp - 0x28 ]
imul eax eax 0x204
mov ecx [ ebp - 0x2c ]
lea edx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
shl ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x28 ] edx
jmp r-xdata
cmp [ ebp - 0x20 ] 0x3f
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
mov edx [ ebp - 0x28 ]
shl edx 0xf
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
add ecx edx
mov [ ebp - 0x10 ] ecx
push 0x4
push 0x1000
push 0x8000
mov edx [ ebp - 0x10 ]
push edx
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + ecx * 8 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x7000
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x1c ]
ja r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
add edx 0x1f8
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x10 ]
add eax 0xc
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x1c ]
add eax 0xc
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x8 ] eax
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x2c ]
mov [ ecx + eax * 4 + 0x44 ] 0x0
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
mov [ eax + edx * 4 + 0xc4 ] 0x1
mov ecx [ ebp - 0x2c ]
movsx edx [ ecx + 0x43 ]
mov eax [ ebp - 0x2c ]
mov cl [ eax + 0x43 ]
add cl 0x1
mov eax [ ebp - 0x2c ]
mov [ eax + 0x43 ] cl
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0xffffffff
mov edx [ ebp - 0x4 ]
mov [ edx + 0xffc ] 0xffffffff
mov eax [ ebp - 0x4 ]
add eax 0xc
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ecx ] 0xff0
mov edx [ ebp - 0x18 ]
add edx 0x1000
mov eax [ ebp - 0x18 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0x18 ]
sub ecx 0x1000
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0x18 ]
add eax 0xfec
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x24 ]
mov [ ecx ] 0xff0
jmp r-xdata
mov edx 0x80000000
mov ecx [ ebp - 0x28 ]
shr edx cl
not edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
and ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
or edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x4 ]
add edx 0x1000
mov [ ebp - 0x4 ] edx
sub_4082d0
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x10 ]
add eax 0x17
and al 0xf0
mov [ ebp - 0x1c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
sub ecx [ eax + 0xc ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
shr edx 0xf
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
imul eax eax 0x204
mov ecx [ ebp - 0x30 ]
lea edx [ ecx + eax + 0x144 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
sub eax 0x4
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
sub edx 0x1
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x14 ]
add eax [ ebp - 0x28 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
mov edx [ ecx ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x28 ]
jge r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov eax 0x1
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov edx [ ebp - 0x14 ]
mov [ edx ] ecx
mov eax [ ebp - 0x1c ]
add eax 0x1
mov ecx [ ebp - 0x14 ]
add ecx [ ebp - 0x1c ]
mov [ ecx - 0x4 ] eax
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x1c ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
sar ecx 0x4
sub ecx 0x1
mov [ ebp - 0x24 ] ecx
cmp [ ebp - 0x24 ] 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x28 ]
add edx [ ebp - 0x10 ]
cmp [ ebp - 0x1c ] edx
jle r-xdata
mov edx [ ebp - 0x10 ]
and edx 0x1
test edx edx
jne r-xdata
mov [ ebp - 0x24 ] 0x3f
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
sar eax 0x4
sub eax 0x1
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x3f
jbe r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x8 ]
lea ecx [ eax + edx * 8 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x14 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
sar eax 0x4
sub eax 0x1
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x3f
jbe r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x2c ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ ebp - 0x20 ] 0x3f
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x28 ]
mov [ eax ] ecx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x28 ]
mov eax [ ebp - 0x28 ]
mov [ edx - 0x4 ] eax
cmp [ ebp - 0x24 ] 0x20
jae r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x2c ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ ebp - 0x20 ] 0x3f
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x10 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
cmp [ ebp - 0x20 ] 0x20
jae r-xdata
mov eax [ ebp - 0x30 ]
add eax [ ebp - 0x24 ]
movsx ecx [ eax + 0x4 ]
mov edx [ ebp - 0x30 ]
add edx [ ebp - 0x24 ]
mov al [ edx + 0x4 ]
add al 0x1
mov edx [ ebp - 0x30 ]
add edx [ ebp - 0x24 ]
mov [ edx + 0x4 ] al
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x30 ]
add eax [ ebp - 0x24 ]
movsx ecx [ eax + 0x4 ]
mov edx [ ebp - 0x30 ]
add edx [ ebp - 0x24 ]
mov al [ edx + 0x4 ]
add al 0x1
mov edx [ ebp - 0x30 ]
add edx [ ebp - 0x24 ]
mov [ edx + 0x4 ] al
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
sar ecx 0x4
sub ecx 0x1
mov [ ebp - 0x24 ] ecx
cmp [ ebp - 0x24 ] 0x3f
jbe r-xdata
cmp [ ebp - 0x20 ] 0x20
jae r-xdata
mov edx [ ebp - 0x1c ]
add edx 0x1
mov eax [ ebp - 0x14 ]
mov [ eax ] edx
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x1c ]
mov [ edx - 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
add ecx [ ebp - 0x1c ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x10 ]
sar edx 0x4
sub edx 0x1
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x20 ] 0x3f
jbe r-xdata
mov ecx [ ebp - 0x20 ]
sub ecx 0x20
mov eax 0x80000000
shr eax cl
not eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x30 ]
mov ecx [ edx + ecx * 4 + 0xc4 ]
and ecx eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x30 ]
mov [ eax + edx * 4 + 0xc4 ] ecx
mov ecx [ ebp - 0x30 ]
add ecx [ ebp - 0x20 ]
mov dl [ ecx + 0x4 ]
sub dl 0x1
mov eax [ ebp - 0x30 ]
add eax [ ebp - 0x20 ]
mov [ eax + 0x4 ] dl
mov ecx [ ebp - 0x30 ]
add ecx [ ebp - 0x20 ]
movsx edx [ ecx + 0x4 ]
test edx edx
jne r-xdata
mov edx 0x80000000
mov ecx [ ebp - 0x20 ]
shr edx cl
not edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x30 ]
mov eax [ ecx + eax * 4 + 0x44 ]
and eax edx
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x30 ]
mov [ edx + ecx * 4 + 0x44 ] eax
mov eax [ ebp - 0x30 ]
add eax [ ebp - 0x20 ]
mov cl [ eax + 0x4 ]
sub cl 0x1
mov edx [ ebp - 0x30 ]
add edx [ ebp - 0x20 ]
mov [ edx + 0x4 ] cl
mov eax [ ebp - 0x30 ]
add eax [ ebp - 0x20 ]
movsx ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x24 ]
sub ecx 0x20
mov edx 0x80000000
shr edx cl
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x30 ]
mov eax [ ecx + eax * 4 + 0xc4 ]
or eax edx
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x30 ]
mov [ edx + ecx * 4 + 0xc4 ] eax
mov ecx [ ebp - 0x24 ]
sub ecx 0x20
mov eax 0x80000000
shr eax cl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
or edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx 0x80000000
mov ecx [ ebp - 0x24 ]
shr edx cl
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x30 ]
mov eax [ ecx + eax * 4 + 0x44 ]
or eax edx
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x30 ]
mov [ edx + ecx * 4 + 0x44 ] eax
jmp r-xdata
mov eax 0x80000000
mov ecx [ ebp - 0x24 ]
shr eax cl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
or edx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov [ ebp - 0x24 ] 0x3f
mov ecx [ ebp - 0x20 ]
sub ecx 0x20
mov eax 0x80000000
shr eax cl
not eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x30 ]
mov ecx [ edx + ecx * 4 + 0xc4 ]
and ecx eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x30 ]
mov [ eax + edx * 4 + 0xc4 ] ecx
mov ecx [ ebp - 0x30 ]
add ecx [ ebp - 0x20 ]
mov dl [ ecx + 0x4 ]
sub dl 0x1
mov eax [ ebp - 0x30 ]
add eax [ ebp - 0x20 ]
mov [ eax + 0x4 ] dl
mov ecx [ ebp - 0x30 ]
add ecx [ ebp - 0x20 ]
movsx edx [ ecx + 0x4 ]
test edx edx
jne r-xdata
mov edx 0x80000000
mov ecx [ ebp - 0x20 ]
shr edx cl
not edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x30 ]
mov eax [ ecx + eax * 4 + 0x44 ]
and eax edx
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x30 ]
mov [ edx + ecx * 4 + 0x44 ] eax
mov eax [ ebp - 0x30 ]
add eax [ ebp - 0x20 ]
mov cl [ eax + 0x4 ]
sub cl 0x1
mov edx [ ebp - 0x30 ]
add edx [ ebp - 0x20 ]
mov [ edx + 0x4 ] cl
mov eax [ ebp - 0x30 ]
add eax [ ebp - 0x20 ]
movsx ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x8 ]
lea edx [ ecx + eax * 8 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x2c ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x2c ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x2c ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ ebp - 0x20 ] 0x3f
mov ecx [ ebp - 0x20 ]
sub ecx 0x20
mov eax 0x80000000
shr eax cl
not eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
and edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
jmp r-xdata
mov edx 0x80000000
mov ecx [ ebp - 0x20 ]
shr edx cl
not edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov ecx [ ebp - 0x20 ]
sub ecx 0x20
mov eax 0x80000000
shr eax cl
not eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
and edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
jmp r-xdata
mov edx 0x80000000
mov ecx [ ebp - 0x20 ]
shr edx cl
not edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x10 ]
mov [ ecx ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov [ eax - 0x4 ] ecx
cmp [ ebp - 0x20 ] 0x20
jae r-xdata
mov ecx [ ebp - 0x30 ]
add ecx [ ebp - 0x20 ]
movsx edx [ ecx + 0x4 ]
mov eax [ ebp - 0x30 ]
add eax [ ebp - 0x20 ]
mov cl [ eax + 0x4 ]
add cl 0x1
mov eax [ ebp - 0x30 ]
add eax [ ebp - 0x20 ]
mov [ eax + 0x4 ] cl
test edx edx
jne r-xdata
mov ecx [ ebp - 0x30 ]
add ecx [ ebp - 0x20 ]
movsx edx [ ecx + 0x4 ]
mov eax [ ebp - 0x30 ]
add eax [ ebp - 0x20 ]
mov cl [ eax + 0x4 ]
add cl 0x1
mov eax [ ebp - 0x30 ]
add eax [ ebp - 0x20 ]
mov [ eax + 0x4 ] cl
test edx edx
jne r-xdata
mov ecx [ ebp - 0x20 ]
sub ecx 0x20
mov eax 0x80000000
shr eax cl
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x30 ]
mov ecx [ edx + ecx * 4 + 0xc4 ]
or ecx eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x30 ]
mov [ eax + edx * 4 + 0xc4 ] ecx
mov ecx [ ebp - 0x20 ]
sub ecx 0x20
mov edx 0x80000000
shr edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
or ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] ecx
mov eax 0x80000000
mov ecx [ ebp - 0x20 ]
shr eax cl
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x30 ]
mov ecx [ edx + ecx * 4 + 0x44 ]
or ecx eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x30 ]
mov [ eax + edx * 4 + 0x44 ] ecx
jmp r-xdata
mov edx 0x80000000
mov ecx [ ebp - 0x20 ]
shr edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
or ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
sub_4088c0
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
shl eax 0xf
mov ecx [ rw-data ]
mov edx [ ecx + 0xc ]
add edx eax
mov [ ebp - 0x4 ] edx
push 0x4000
push 0x8000
mov eax [ ebp - 0x4 ]
push eax
call [ VirtualFree@IAT ]
mov edx 0x80000000
mov ecx [ rw-data ]
shr edx cl
mov eax [ rw-data ]
mov ecx [ eax + 0x8 ]
or ecx edx
mov edx [ rw-data ]
mov [ edx + 0x8 ] ecx
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
mov edx [ rw-data ]
mov [ ecx + edx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
mov dl [ ecx + 0x43 ]
sub dl 0x1
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
mov [ ecx + 0x43 ] dl
mov edx [ rw-data ]
mov eax [ edx + 0x10 ]
movsx ecx [ eax + 0x43 ]
test ecx ecx
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x8 ] 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x4 ]
and al 0xfe
mov ecx [ rw-data ]
mov [ ecx + 0x4 ] eax
mov [ rw-data ] 0x0
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
push ecx
push 0x0
mov edx [ rw-data ]
push edx
call [ HeapFree@IAT ]
mov eax [ rw-data ]
imul eax eax 0x14
mov ecx [ rw-data ]
add ecx eax
mov edx [ rw-data ]
add edx 0x14
sub ecx edx
push ecx
mov eax [ rw-data ]
add eax 0x14
push eax
mov ecx [ rw-data ]
push ecx
call sub_40e710
add esp 0xc
mov edx [ rw-data ]
sub edx 0x1
mov [ rw-data ] edx
sub_4089f0
push ebp
mov ebp esp
sub esp 0x168
mov eax [ rw-data ]
imul eax eax 0x14
push eax
mov ecx [ rw-data ]
push ecx
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x13c ] edx
mov [ ebp - 0x120 ] 0x0
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x120 ]
cmp ecx [ rw-data ]
jge r-xdata
mov esp ebp
pop ebp
retn
xor eax eax
mov edx [ ebp - 0x13c ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x160 ] eax
push 0x41c4
mov ecx [ ebp - 0x160 ]
push ecx
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x13c ]
mov eax [ edx + 0xc ]
mov [ ebp - 0x128 ] eax
mov ecx [ ebp - 0x160 ]
add ecx 0x144
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x13c ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x144 ] 0x0
mov [ ebp - 0x158 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp - 0xc ] 0x20
jge r-xdata
mov edx [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
cmp eax [ edx ]
jne r-xdata
mov [ ebp - 0x11c ] 0x0
mov [ ebp - 0x150 ] 0x0
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x14c ] 0x0
jmp r-xdata
mov eax 0xffffffef
jmp r-xdata
mov ecx [ ebp - 0x13c ]
mov edx [ ebp - 0x158 ]
cmp edx [ ecx + 0x4 ]
je r-xdata
cmp [ ebp - 0x14c ] 0x40
jge r-xdata
mov eax [ ebp - 0x13c ]
add eax 0x14
mov [ ebp - 0x13c ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov eax [ ebp - 0x14c ]
mov [ ebp + eax * 4 - 0x118 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x120 ]
add eax 0x1
mov [ ebp - 0x120 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x160 ]
mov ecx [ ebp - 0x11c ]
cmp ecx [ eax + edx * 4 + 0x44 ]
jne r-xdata
push 0x8000
mov ecx [ ebp - 0x128 ]
push ecx
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x14c ]
add edx 0x1
mov [ ebp - 0x14c ] edx
mov eax 0xfffffff0
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x160 ]
mov ecx [ ebp - 0x150 ]
cmp ecx [ eax + edx * 4 + 0xc4 ]
je r-xdata
mov edx [ ebp - 0x128 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x140 ] 0x0
jmp r-xdata
mov eax 0xfffffffc
jmp r-xdata
mov edx [ ebp - 0x128 ]
add edx 0x8000
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x18 ]
add eax 0x204
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x4 ]
shl ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x140 ] 0x8
jge r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
cmp edx [ ebp - 0x12c ]
je r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0xc
mov [ ebp - 0x130 ] ecx
mov edx [ ebp - 0x130 ]
add edx 0xff0
mov [ ebp - 0x138 ] edx
mov eax [ ebp - 0x130 ]
cmp [ eax - 0x4 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x134 ] eax
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov eax 0xfffffff7
jmp r-xdata
mov eax 0xfffffffb
jmp r-xdata
mov ecx [ ebp - 0x138 ]
cmp [ ecx ] 0xffffffff
je r-xdata
cmp [ ebp - 0x14 ] 0x40
jge r-xdata
mov edx [ ebp - 0x130 ]
mov eax [ edx ]
mov [ ebp - 0x148 ] eax
mov ecx [ ebp - 0x148 ]
mov [ ebp - 0x154 ] ecx
mov edx [ ebp - 0x154 ]
and edx 0x1
test edx edx
je r-xdata
mov [ ebp - 0x168 ] 0x0
mov edx [ ebp - 0x134 ]
mov [ ebp - 0x130 ] edx
mov edx [ ebp - 0x148 ]
sar edx 0x4
sub edx 0x1
mov [ ebp - 0x14c ] edx
cmp [ ebp - 0x14c ] 0x3f
jle r-xdata
mov eax [ ebp - 0x148 ]
sub eax 0x1
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x400
jle r-xdata
cmp [ ebp - 0x168 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x168 ]
cmp ecx [ ebp + eax * 4 - 0x118 ]
je r-xdata
mov eax [ ebp - 0x14c ]
mov ecx [ ebp + eax * 4 - 0x118 ]
add ecx 0x1
mov edx [ ebp - 0x14c ]
mov [ ebp + edx * 4 - 0x118 ] ecx
mov [ ebp - 0x14c ] 0x3f
mov ecx [ ebp - 0x12c ]
add ecx 0x1
mov [ ebp - 0x12c ] ecx
jmp r-xdata
mov eax 0xfffffffa
jmp r-xdata
mov ecx [ ebp - 0x130 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ebp - 0x134 ]
jne r-xdata
cmp [ ebp - 0x14 ] 0x20
jge r-xdata
mov edx [ ebp - 0x15c ]
cmp edx [ ebp - 0x128 ]
jb r-xdata
mov eax 0xfffffff9
jmp r-xdata
mov eax [ ebp - 0x148 ]
and eax 0xf
test eax eax
jne r-xdata
cmp [ ebp - 0x148 ] 0x10
jl r-xdata
mov eax 0xfffffff2
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x168 ]
cmp ecx [ ebp + eax * 4 - 0x118 ]
je r-xdata
mov ecx [ ebp - 0x14 ]
sub ecx 0x20
mov edx 0x80000000
shr edx cl
mov eax [ ebp - 0x150 ]
or eax edx
mov [ ebp - 0x150 ] eax
mov ecx [ ebp - 0x14 ]
sub ecx 0x20
mov edx 0x80000000
shr edx cl
mov eax [ ebp - 0x158 ]
or eax edx
mov [ ebp - 0x158 ] eax
mov edx 0x80000000
mov ecx [ ebp - 0x14 ]
shr edx cl
mov eax [ ebp - 0x11c ]
or eax edx
mov [ ebp - 0x11c ] eax
mov edx 0x80000000
mov ecx [ ebp - 0x14 ]
shr edx cl
mov eax [ ebp - 0x144 ]
or eax edx
mov [ ebp - 0x144 ] eax
jmp r-xdata
mov eax 0xfffffff6
jmp r-xdata
mov eax [ ebp - 0x128 ]
add eax 0x8000
cmp [ ebp - 0x15c ] eax
jb r-xdata
cmp [ ebp - 0x148 ] 0xff0
jle r-xdata
mov edx [ ebp - 0x134 ]
mov eax [ edx + 0x8 ]
cmp eax [ ebp - 0x130 ]
je r-xdata
mov ecx [ ebp - 0x15c ]
and ecx 0xfffff000
mov [ ebp - 0x164 ] ecx
mov edx [ ebp - 0x164 ]
add edx 0xc
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
add eax 0xff0
mov [ ebp - 0x124 ] eax
mov ecx [ ebp - 0x130 ]
add ecx [ ebp - 0x148 ]
mov edx [ ecx - 0x4 ]
cmp edx [ ebp - 0x154 ]
je r-xdata
mov ecx [ ebp - 0x134 ]
add ecx 0x8
mov [ ebp - 0x134 ] ecx
jmp r-xdata
mov eax 0xfffffff1
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x124 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x15c ]
jne r-xdata
mov eax [ ebp - 0x130 ]
add eax [ ebp - 0x148 ]
mov [ ebp - 0x130 ] eax
mov ecx [ ebp - 0x130 ]
cmp ecx [ ebp - 0x138 ]
jb r-xdata
mov eax 0xfffffff8
jmp r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x15c ]
mov edx [ ecx ]
sar edx 0x4
sub edx 0x1
mov [ ebp - 0x14c ] edx
cmp [ ebp - 0x14c ] 0x3f
jle r-xdata
mov eax 0xfffffff5
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
and ecx 0xfffffffe
mov edx [ ebp - 0x10 ]
add edx ecx
mov [ ebp - 0x10 ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x130 ]
cmp edx [ ebp - 0x138 ]
je r-xdata
mov eax [ ebp - 0x14c ]
cmp eax [ ebp - 0x14 ]
je r-xdata
mov [ ebp - 0x14c ] 0x3f
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x124 ]
je r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1000
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax 0xfffffff8
jmp r-xdata
mov ecx [ ebp - 0x15c ]
mov edx [ ecx + 0x8 ]
cmp edx [ ebp - 0x130 ]
je r-xdata
mov eax 0xfffffff4
jmp r-xdata
mov eax [ ebp - 0x140 ]
add eax 0x1
mov [ ebp - 0x140 ] eax
mov eax [ ebp - 0x15c ]
mov [ ebp - 0x130 ] eax
mov ecx [ ebp - 0x168 ]
add ecx 0x1
mov [ ebp - 0x168 ] ecx
jmp r-xdata
mov eax 0xfffffff3
jmp r-xdata
mov eax [ ebp - 0x130 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x15c ] ecx
mov edx [ ebp - 0x15c ]
cmp edx [ ebp - 0x134 ]
je r-xdata
sub_409010
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
add eax 0x1
cmp eax 0x100
ja r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x8
and ecx 0xff
and ecx 0xff
mov edx [ rw-data ]
xor eax eax
mov ax [ edx + ecx * 2 ]
and eax 0x8000
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
xor eax eax
mov ax [ edx + ecx * 2 ]
and eax [ ebp + 0xc ]
jmp r-xdata
mov al [ ebp + 0x8 ]
mov [ ebp - 0xc ] al
mov [ ebp - 0xb ] 0x0
mov [ ebp - 0x8 ] 0x1
mov ecx [ ebp + 0x8 ]
sar ecx 0x8
and ecx 0xff
mov [ ebp - 0xc ] cl
mov dl [ ebp + 0x8 ]
mov [ ebp - 0xb ] dl
mov [ ebp - 0xa ] 0x0
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
and eax 0xffff
and eax [ ebp + 0xc ]
xor eax eax
jmp r-xdata
push 0x1
push 0x0
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0xc ]
push eax
push 0x1
call sub_40ea50
add esp 0x1c
test eax eax
jne r-xdata
sub_4090d0
push ebp
mov ebp esp
sub esp 0x224
push ebx
push esi
push edi
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x109
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
int3
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x10c
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x28 ] 0x0
movsx edx [ ebp - 0x28 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x34 ] eax
int3
cmp [ ebp - 0x1d8 ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx ]
mov ecx [ rw-data ]
xor edx edx
mov dx [ ecx + eax * 2 ]
and edx 0x8
mov [ ebp - 0x1f8 ] edx
push 0x8
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax ]
push ecx
call sub_409010
add esp 0x8
mov [ ebp - 0x1f8 ] eax
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x224 ] eax
movsx edx [ ebp - 0x28 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx ]
cmp edx 0x25
jne r-xdata
mov eax [ ebp - 0x20 ]
sub eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x20 ]
push eax
call sub_40a590
add esp 0x8
push eax
call sub_40a570
add esp 0x8
cmp [ ebp - 0x1f8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x224 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx ]
mov esi edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40a510
add esp 0x4
mov [ ebp - 0x1d8 ] eax
mov ecx [ ebp - 0x1d8 ]
mov edx [ ebp + 0xc ]
add edx 0x1
mov [ ebp + 0xc ] edx
cmp esi ecx
je r-xdata
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x6c ] 0x0
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x1e8 ] eax
mov ecx [ ebp - 0x1e8 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x10 ] 0x0
mov dl [ ebp - 0x10 ]
mov [ ebp - 0x68 ] dl
mov al [ ebp - 0x68 ]
mov [ ebp - 0x70 ] al
mov cl [ ebp - 0x70 ]
mov [ ebp - 0x18 ] cl
mov dl [ ebp - 0x18 ]
mov [ ebp - 0x64 ] dl
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x38 ] 0x1
mov [ ebp - 0x1dc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x224 ]
jmp r-xdata
mov eax [ ebp - 0x1d8 ]
and eax 0xff
mov ecx [ rw-data ]
xor edx edx
mov dx [ ecx + eax * 2 ]
and edx 0x8000
test edx edx
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x1d8 ]
push edx
call sub_40a570
add esp 0x8
jmp r-xdata
movsx ecx [ ebp - 0x70 ]
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0xc ] eax
cmp [ rw-data ] 0x1
jle r-xdata
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx ]
push eax
call sub_40eed0
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp - 0x1d8 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx ]
mov esi edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40a510
add esp 0x4
mov [ ebp - 0x1f4 ] eax
mov ecx [ ebp - 0x1f4 ]
mov edx [ ebp + 0xc ]
add edx 0x1
mov [ ebp + 0xc ] edx
cmp esi ecx
je r-xdata
mov [ ebp - 0x18 ] 0x0
movsx eax [ ebp - 0x14 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x1d4 ] edx
mov eax [ ebp + 0x10 ]
add eax 0x4
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx - 0x4 ]
mov [ ebp - 0x3c ] edx
mov edx [ ebp - 0xc ]
and edx 0xff
mov eax [ rw-data ]
xor ecx ecx
mov cx [ eax + edx * 2 ]
and ecx 0x4
mov [ ebp - 0x1fc ] ecx
push 0x4
mov ecx [ ebp - 0xc ]
and ecx 0xff
push ecx
call sub_409010
add esp 0x8
mov [ ebp - 0x1fc ] eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx ]
cmp edx 0x25
jne r-xdata
mov eax [ ebp - 0x20 ]
sub eax 0x1
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
sub eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x1f4 ]
push edx
call sub_40a570
add esp 0x8
mov eax [ ebp - 0x20 ]
sub eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x1d8 ]
push edx
call sub_40a570
add esp 0x8
jmp r-xdata
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx ]
or edx 0x20
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x6e
je r-xdata
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx ]
cmp edx 0x53
je r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x200 ] edx
mov eax [ ebp - 0x200 ]
sub eax 0x2a
mov [ ebp - 0x200 ] eax
cmp [ ebp - 0x200 ] 0x4d
ja r-xdata
mov edx [ ebp - 0x1e8 ]
add edx 0x1
mov [ ebp - 0x1e8 ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
lea edx [ ecx + eax * 4 ]
mov eax [ ebp - 0xc ]
lea ecx [ eax + edx * 2 - 0x30 ]
mov [ ebp - 0x1c ] ecx
jmp r-xdata
cmp [ ebp - 0x1fc ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx ]
test edx edx
je r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x1 ]
cmp ecx 0x6e
je r-xdata
cmp [ ebp - 0x1e8 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x63
je r-xdata
mov dl [ ebp - 0x14 ]
add dl 0x1
mov [ ebp - 0x14 ] dl
jmp r-xdata
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax ]
cmp ecx 0x43
jne r-xdata
mov al [ ebp - 0x18 ]
add al 0x1
mov [ ebp - 0x18 ] al
mov edx [ ebp - 0x200 ]
xor ecx ecx
mov cl [ edx + lookup_table_40a418 ]
jmp [ ecx * 4 + jump_table_40a3f8 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x204 ] ecx
mov edx [ ebp - 0x204 ]
sub edx 0x63
mov [ ebp - 0x204 ] edx
cmp [ ebp - 0x204 ] 0x18
ja r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40a510
add esp 0x4
mov [ ebp - 0x1d8 ] eax
cmp [ ebp - 0xc ] 0x7b
je r-xdata
mov al [ ebp - 0x14 ]
sub al 0x1
mov [ ebp - 0x14 ] al
movsx eax [ ebp - 0x18 ]
test eax eax
jne r-xdata
jmp r-xdata
mov al [ ebp - 0x38 ]
sub al 0x1
mov [ ebp - 0x38 ] al
mov cl [ ebp - 0x14 ]
sub cl 0x1
mov [ ebp - 0x14 ] cl
jmp r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0x1 ]
cmp eax 0x36
jne r-xdata
mov dl [ ebp - 0x38 ]
add dl 0x1
mov [ ebp - 0x38 ] dl
jmp r-xdata
mov al [ ebp - 0x38 ]
add al 0x1
mov [ ebp - 0x38 ] al
mov cl [ ebp - 0x14 ]
add cl 0x1
mov [ ebp - 0x14 ] cl
jmp r-xdata
mov dl [ ebp - 0x70 ]
add dl 0x1
mov [ ebp - 0x70 ] dl
jmp r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx ]
cmp eax [ ebp - 0x1d8 ]
je r-xdata
mov ecx [ ebp - 0x204 ]
xor eax eax
mov al [ ecx + lookup_table_40a48e ]
jmp [ eax * 4 + jump_table_40a466 ]
mov edx [ ebp - 0x20 ]
sub edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x1d8 ]
push ecx
call sub_40a570
add esp 0x8
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
call sub_40a590
add esp 0x8
mov [ ebp - 0x1d8 ] eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0x2 ]
cmp edx 0x34
jne r-xdata
mov cl [ ebp - 0x28 ]
sub cl 0x1
mov [ ebp - 0x28 ] cl
movsx edx [ ebp - 0x70 ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0x20 ]
sub ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x1d8 ]
push eax
call sub_40a570
add esp 0x8
jmp r-xdata
cmp [ ebp - 0x1e8 ] 0x0
jne r-xdata
movsx ecx [ ebp - 0x14 ]
test ecx ecx
jle r-xdata
movsx ecx [ ebp - 0x14 ]
test ecx ecx
jle r-xdata
mov [ ebp - 0xc ] 0x64
cmp [ ebp - 0x1d8 ] 0x2d
jne r-xdata
mov [ ebp - 0x38 ] 0x1
cmp [ ebp - 0x1d8 ] 0x2d
jne r-xdata
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x40 ] edx
movsx eax [ ebp - 0x70 ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x1d0 ]
mov [ ebp - 0x1e0 ] ecx
cmp [ ebp - 0x1d8 ] 0x2d
jne r-xdata
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
mov ecx [ ebp - 0x1dc ]
add ecx 0x1
mov [ ebp - 0x1dc ] ecx
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x2c ] 0x0
jmp r-xdata
mov cl [ ebp - 0x28 ]
add cl 0x1
mov [ ebp - 0x28 ] cl
jmp r-xdata
mov eax [ ebp - 0x1d4 ]
mov [ ebp + 0x10 ] eax
movsx ecx [ ebp - 0x14 ]
test ecx ecx
jle r-xdata
mov edx [ ebp - 0x1e8 ]
add edx 0x1
mov [ ebp - 0x1e8 ] edx
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1e0 ] rw-data
mov al [ ebp - 0x10 ]
sub al 0x1
mov [ ebp - 0x10 ] al
jmp r-xdata
mov dl [ ebp - 0x64 ]
add dl 0x1
mov [ ebp - 0x64 ] dl
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x1e0 ] ecx
mov edx [ ebp - 0x1e0 ]
xor eax eax
mov al [ edx ]
cmp eax 0x5e
jne r-xdata
mov dl [ ebp - 0x64 ]
add dl 0x1
mov [ ebp - 0x64 ] dl
cmp [ ebp - 0x1d8 ] 0x2b
jne r-xdata
mov cl [ ebp - 0x68 ]
add cl 0x1
mov [ ebp - 0x68 ] cl
jmp r-xdata
cmp [ ebp - 0x1d8 ] 0x2b
jne r-xdata
mov cl [ ebp - 0x68 ]
add cl 0x1
mov [ ebp - 0x68 ] cl
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x1d8 ] 0x2b
jne r-xdata
mov edx [ ebp - 0x1e0 ]
mov [ edx ] 0x2d
mov eax [ ebp - 0x1e0 ]
add eax 0x1
mov [ ebp - 0x1e0 ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
add edx 0x1
mov [ ebp + 0xc ] edx
jmp r-xdata
mov [ ebp - 0x1e0 ] rw-data
mov al [ ebp - 0x10 ]
sub al 0x1
mov [ ebp - 0x10 ] al
jmp r-xdata
mov dl [ ebp - 0x64 ]
add dl 0x1
mov [ ebp - 0x64 ] dl
push 0x20
push 0x0
lea eax [ ebp - 0x60 ]
push eax
call sub_406c40
add esp 0xc
cmp [ ebp - 0xc ] 0x7b
jne r-xdata
mov ecx [ ebp - 0x1e0 ]
add ecx 0x1
mov [ ebp - 0x1e0 ] ecx
mov dl [ ebp - 0x10 ]
sub dl 0x1
mov [ ebp - 0x10 ] dl
cmp [ ebp - 0x1d8 ] 0x30
jne r-xdata
mov edx [ ebp - 0x1c ]
sub edx 0x1
mov [ ebp - 0x1c ] edx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
cmp [ ebp - 0x1dc ] 0x0
je r-xdata
mov edx [ ebp - 0x1c ]
sub edx 0x1
mov [ ebp - 0x1c ] edx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
cmp [ ebp - 0x1dc ] 0x0
je r-xdata
cmp [ ebp - 0x1e8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40a510
add esp 0x4
mov [ ebp - 0x1d8 ] eax
mov ecx [ ebp - 0x1e0 ]
xor edx edx
mov dl [ ecx ]
cmp edx 0x5d
je r-xdata
mov ecx [ ebp - 0x1e0 ]
xor edx edx
mov dl [ ecx ]
cmp edx 0x5d
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40a510
add esp 0x4
mov [ ebp - 0x1d8 ] eax
movsx edx [ ebp - 0x1d8 ]
cmp edx 0x78
je r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40a510
add esp 0x4
mov [ ebp - 0x1d8 ] eax
cmp [ ebp - 0x1e8 ] 0x0
je r-xdata
movsx edx [ ebp - 0x18 ]
test edx edx
jne r-xdata
movsx eax [ ebp - 0x18 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40a510
add esp 0x4
mov [ ebp - 0x1d8 ] eax
cmp [ ebp - 0x1e8 ] 0x0
je r-xdata
movsx eax [ ebp - 0x38 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ ebp - 0x30 ]
mov [ eax ] ecx
mov edx [ ebp - 0x2c ]
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ ebp - 0x1c ] 0x15d
cmp [ ebp - 0x1c ] 0x15d
jle r-xdata
mov edx [ ebp - 0x1e0 ]
xor eax eax
mov al [ edx ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x1e0 ]
mov cl [ eax ]
mov [ ebp - 0x1ec ] cl
mov edx [ ebp - 0x1e0 ]
add edx 0x1
mov [ ebp - 0x1e0 ] edx
mov eax [ ebp - 0x1ec ]
and eax 0xff
cmp eax 0x2d
jne r-xdata
mov [ ebp - 0x8 ] 0x5d
mov eax [ ebp - 0x1e0 ]
add eax 0x1
mov [ ebp - 0x1e0 ] eax
mov [ ebp - 0x55 ] 0x20
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40a510
add esp 0x4
mov [ ebp - 0x1d8 ] eax
mov [ ebp - 0xc ] 0x78
jmp r-xdata
movsx eax [ ebp - 0x1d8 ]
cmp eax 0x58
jne r-xdata
mov al [ ebp - 0x18 ]
add al 0x1
mov [ ebp - 0x18 ] al
jmp r-xdata
movsx edx [ ebp - 0x68 ]
test edx edx
je r-xdata
cmp [ ebp - 0xc ] 0x78
je r-xdata
movsx edx [ ebp - 0x68 ]
test edx edx
je r-xdata
cmp [ ebp - 0xc ] 0x78
jne r-xdata
mov al [ ebp - 0x18 ]
add al 0x1
mov [ ebp - 0x18 ] al
jmp r-xdata
mov eax [ ebp - 0x3c ]
mov cx [ ebp - 0x40 ]
mov [ eax ] cx
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x40 ]
mov [ ecx ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x1d8 ]
mov eax [ rw-data ]
xor ecx ecx
mov cx [ eax + edx * 2 ]
and ecx 0x4
mov [ ebp - 0x218 ] ecx
push 0x4
mov ecx [ ebp - 0x1d8 ]
push ecx
call sub_409010
add esp 0x8
mov [ ebp - 0x218 ] eax
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp - 0xc ] 0x7b
jne r-xdata
jmp r-xdata
mov cl [ ebp - 0x1ec ]
mov [ ebp - 0x8 ] cl
mov edx [ ebp - 0x8 ]
and edx 0xff
sar edx 0x3
mov ecx [ ebp - 0x1ec ]
and ecx 0xff
and ecx 0x7
mov eax 0x1
shl eax cl
mov cl [ ebp + edx - 0x60 ]
or cl al
mov edx [ ebp - 0x8 ]
and edx 0xff
sar edx 0x3
mov [ ebp + edx - 0x60 ] cl
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and ecx 0xff
test ecx ecx
je r-xdata
mov eax [ ebp - 0x6c ]
add eax 0x1
mov [ ebp - 0x6c ] eax
cmp [ ebp - 0xc ] 0x78
je r-xdata
cmp [ ebp - 0xc ] 0x46
jne r-xdata
mov eax [ ebp - 0x40 ]
neg eax
mov [ ebp - 0x40 ] eax
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp - 0xc ] 0x70
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x30 ]
neg eax
mov ecx [ ebp - 0x2c ]
adc ecx 0x0
neg ecx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] ecx
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
jmp r-xdata
movsx ecx [ rw-data ]
movsx edx [ ebp - 0x1d8 ]
cmp ecx edx
jne r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
sub eax 0x1
mov [ ebp - 0x1c ] eax
test edx edx
je r-xdata
cmp [ ebp - 0x218 ] 0x0
je r-xdata
mov edx [ ebp - 0x3c ]
mov [ ebp - 0x1e4 ] edx
mov eax [ ebp - 0x20 ]
sub eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x1d8 ]
push edx
call sub_40a570
add esp 0x8
mov ecx [ ebp - 0x1e0 ]
mov [ ebp + 0xc ] ecx
jmp r-xdata
mov edx [ ebp - 0x1e0 ]
xor eax eax
mov al [ edx ]
cmp eax 0x5d
jne r-xdata
mov ecx [ ebp - 0x20 ]
sub ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x1d8 ]
push eax
call sub_40a570
add esp 0x8
mov [ ebp - 0x1d8 ] 0x30
mov [ ebp - 0xc ] 0x6f
jmp r-xdata
cmp [ ebp - 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x6c ] 0x0
mov ecx [ ebp - 0x1d8 ]
mov edx [ rw-data ]
xor eax eax
mov ax [ edx + ecx * 2 ]
and eax 0x80
mov [ ebp - 0x210 ] eax
push 0x80
mov eax [ ebp - 0x1d8 ]
push eax
call sub_409010
add esp 0x8
mov [ ebp - 0x210 ] eax
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov edx [ ebp - 0x1d8 ]
mov eax [ rw-data ]
xor ecx ecx
mov cx [ eax + edx * 2 ]
and ecx 0x4
mov [ ebp - 0x20c ] ecx
push 0x4
mov ecx [ ebp - 0x1d8 ]
push ecx
call sub_409010
add esp 0x8
mov [ ebp - 0x20c ] eax
jmp r-xdata
mov edx [ ebp - 0x1d8 ]
mov eax [ rw-data ]
xor ecx ecx
mov cx [ eax + edx * 2 ]
and ecx 0x80
mov [ ebp - 0x208 ] ecx
push 0x80
mov ecx [ ebp - 0x1d8 ]
push ecx
call sub_409010
add esp 0x8
mov [ ebp - 0x208 ] eax
jmp r-xdata
cmp [ ebp - 0x6c ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
mov [ ebp - 0x1c ] ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x6c ]
add ecx 0x1
mov [ ebp - 0x6c ] ecx
mov edx [ ebp - 0x1e0 ]
mov al [ ebp - 0x1d8 ]
mov [ edx ] al
mov ecx [ ebp - 0x1e0 ]
add ecx 0x1
mov [ ebp - 0x1e0 ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40a510
add esp 0x4
mov [ ebp - 0x1d8 ] eax
jmp r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40a510
add esp 0x4
mov [ ebp - 0x1d8 ] eax
cmp [ ebp - 0x1d8 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
mov [ ebp - 0x1c ] ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1e0 ]
mov cl [ eax ]
mov [ ebp - 0x1ec ] cl
mov edx [ ebp - 0x1e0 ]
add edx 0x1
mov [ ebp - 0x1e0 ] edx
mov eax [ ebp - 0x8 ]
and eax 0xff
mov ecx [ ebp - 0x1ec ]
and ecx 0xff
cmp eax ecx
jge r-xdata
jmp r-xdata
movsx ecx [ ebp - 0x70 ]
test ecx ecx
jne r-xdata
mov al [ ebp - 0x18 ]
add al 0x1
mov [ ebp - 0x18 ] al
mov ecx [ ebp - 0x40 ]
shl ecx 0x4
mov [ ebp - 0x40 ] ecx
mov edx [ ebp - 0x1d8 ]
push edx
call sub_40a4b0
add esp 0x4
mov [ ebp - 0x1d8 ] eax
jmp r-xdata
cmp [ ebp - 0x210 ] 0x0
je r-xdata
mov edx [ ebp - 0x1d8 ]
mov eax [ rw-data ]
xor ecx ecx
mov cx [ eax + edx * 2 ]
and ecx 0x4
mov [ ebp - 0x214 ] ecx
push 0x4
mov ecx [ ebp - 0x1d8 ]
push ecx
call sub_409010
add esp 0x8
mov [ ebp - 0x214 ] eax
jmp r-xdata
mov al [ ebp - 0x18 ]
add al 0x1
mov [ ebp - 0x18 ] al
cmp [ ebp - 0xc ] 0x6f
jne r-xdata
cmp [ ebp - 0x20c ] 0x0
je r-xdata
mov al [ ebp - 0x18 ]
add al 0x1
mov [ ebp - 0x18 ] al
mov ecx 0x4
mov eax [ ebp - 0x30 ]
mov edx [ ebp - 0x2c ]
call sub_40f160
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] edx
mov edx [ ebp - 0x1d8 ]
push edx
call sub_40a4b0
add esp 0x4
mov [ ebp - 0x1d8 ] eax
jmp r-xdata
cmp [ ebp - 0x208 ] 0x0
je r-xdata
mov edx [ ebp - 0x20 ]
sub edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x1d8 ]
push ecx
call sub_40a570
add esp 0x8
cmp [ ebp - 0x6c ] 0x0
je r-xdata
cmp [ ebp - 0x1d8 ] 0x65
je r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40a510
add esp 0x4
mov [ ebp - 0x1d8 ] eax
mov ecx [ ebp - 0x1e0 ]
mov dl [ rw-data ]
mov [ ecx ] dl
mov eax [ ebp - 0x1e0 ]
add eax 0x1
mov [ ebp - 0x1e0 ] eax
mov ecx [ ebp - 0x20 ]
sub ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x1d8 ]
push eax
call sub_40a570
add esp 0x8
jmp r-xdata
mov ecx [ ebp - 0x1d8 ]
sar ecx 0x3
movsx edx [ ebp + ecx - 0x60 ]
movsx eax [ ebp - 0x10 ]
xor edx eax
mov ecx [ ebp - 0x1d8 ]
and ecx 0x7
mov eax 0x1
shl eax cl
and edx eax
test edx edx
je r-xdata
mov ecx [ ebp - 0x1e4 ]
cmp ecx [ ebp - 0x3c ]
je r-xdata
mov al [ ebp - 0x8 ]
mov [ ebp - 0x24 ] al
mov cl [ ebp - 0x1ec ]
mov [ ebp - 0x8 ] cl
mov dl [ ebp - 0x1ec ]
mov [ ebp - 0x24 ] dl
jmp r-xdata
mov edx [ ebp - 0x34 ]
add edx 0x1
mov [ ebp - 0x34 ] edx
movsx edx [ ebp - 0x18 ]
test edx edx
jne r-xdata
jmp r-xdata
mov cl [ ebp - 0x18 ]
add cl 0x1
mov [ ebp - 0x18 ] cl
cmp [ ebp - 0xc ] 0x6f
jne r-xdata
cmp [ ebp - 0x214 ] 0x0
je r-xdata
mov edx [ ebp - 0x20 ]
sub edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x1d8 ]
push ecx
call sub_40a570
add esp 0x8
mov edx [ ebp - 0x6c ]
add edx 0x1
mov [ ebp - 0x6c ] edx
mov eax [ ebp - 0x1d8 ]
sub eax 0x30
cdq
mov ecx [ ebp - 0x30 ]
add ecx eax
mov eax [ ebp - 0x2c ]
adc eax edx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x1e8 ] 0x0
je r-xdata
mov ecx 0x2
mov eax [ ebp - 0x30 ]
mov edx [ ebp - 0x2c ]
call sub_40f160
add eax [ ebp - 0x30 ]
adc edx [ ebp - 0x2c ]
mov ecx 0x1
call sub_40f160
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] edx
cmp [ ebp - 0x1d8 ] 0x38
jge r-xdata
movsx ecx [ ebp - 0x18 ]
test ecx ecx
jne r-xdata
jmp r-xdata
jmp r-xdata
movsx edx [ ebp - 0x70 ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x1c ]
sub edx 0x1
mov [ ebp - 0x1c ] edx
test ecx ecx
je r-xdata
cmp [ ebp - 0x1d8 ] 0x45
jne r-xdata
mov edx [ ebp - 0x1d8 ]
mov eax [ rw-data ]
xor ecx ecx
mov cx [ eax + edx * 2 ]
and ecx 0x4
mov [ ebp - 0x21c ] ecx
push 0x4
mov ecx [ ebp - 0x1d8 ]
push ecx
call sub_409010
add esp 0x8
mov [ ebp - 0x21c ] eax
jmp r-xdata
movsx ecx [ ebp - 0x70 ]
test ecx ecx
jne r-xdata
jmp r-xdata
movsx edx [ ebp - 0x70 ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0x1ec ]
and ecx 0xff
mov edx [ ebp - 0x24 ]
and edx 0xff
cmp ecx edx
jg r-xdata
mov dl [ ebp - 0x8 ]
mov [ ebp - 0x1ec ] dl
jmp r-xdata
mov edx [ ebp - 0x20 ]
sub edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x1d8 ]
push ecx
call sub_40a570
add esp 0x8
mov eax [ ebp - 0x6c ]
add eax 0x1
mov [ ebp - 0x6c ] eax
mov ecx [ ebp - 0x1d8 ]
mov edx [ ebp - 0x40 ]
lea eax [ edx + ecx - 0x30 ]
mov [ ebp - 0x40 ] eax
cmp [ ebp - 0x1e8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x40 ]
lea eax [ edx + ecx * 4 ]
shl eax 0x1
mov [ ebp - 0x40 ] eax
cmp [ ebp - 0x1d8 ] 0x38
jge r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40a510
add esp 0x4
mov [ ebp - 0x1d8 ] eax
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
mov [ ebp - 0x1c ] ecx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov dl [ ebp - 0x18 ]
add dl 0x1
mov [ ebp - 0x18 ] dl
mov ecx 0x3
mov eax [ ebp - 0x30 ]
mov edx [ ebp - 0x2c ]
call sub_40f160
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] edx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x34 ]
add eax 0x1
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x1e0 ]
mov [ ecx ] 0x0
lea edx [ ebp - 0x1d0 ]
push edx
mov eax [ ebp - 0x3c ]
push eax
movsx ecx [ ebp - 0x38 ]
sub ecx 0x1
push ecx
call [ rw-data ]
add esp 0xc
mov eax [ ebp - 0x1e0 ]
mov [ eax ] 0x65
mov ecx [ ebp - 0x1e0 ]
add ecx 0x1
mov [ ebp - 0x1e0 ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40a510
add esp 0x4
mov [ ebp - 0x1d8 ] eax
cmp [ ebp - 0x1d8 ] 0x2d
jne r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
sub eax 0x1
mov [ ebp - 0x1c ] eax
test edx edx
je r-xdata
cmp [ ebp - 0x21c ] 0x0
je r-xdata
mov eax [ ebp - 0x1e4 ]
add eax 0x1
mov [ ebp - 0x1e4 ] eax
movsx edx [ ebp - 0x64 ]
test edx edx
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x34 ]
add eax 0x1
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0xc ] 0x63
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x1ec ]
and eax 0xff
sar eax 0x3
mov ecx [ ebp - 0x1ec ]
and ecx 0xff
and ecx 0x7
mov edx 0x1
shl edx cl
mov al [ ebp + eax - 0x60 ]
or al dl
mov ecx [ ebp - 0x1ec ]
and ecx 0xff
sar ecx 0x3
mov [ ebp + ecx - 0x60 ] al
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40a510
add esp 0x4
mov [ ebp - 0x1d8 ] eax
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
mov [ ebp - 0x1c ] ecx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov al [ ebp - 0x18 ]
add al 0x1
mov [ ebp - 0x18 ] al
mov edx [ ebp - 0x40 ]
shl edx 0x3
mov [ ebp - 0x40 ] edx
jmp r-xdata
jmp r-xdata
mov dl [ ebp - 0x18 ]
add dl 0x1
mov [ ebp - 0x18 ] dl
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x1d8 ] 0x2b
jne r-xdata
mov ecx [ ebp - 0x1e0 ]
mov [ ecx ] 0x2d
mov edx [ ebp - 0x1e0 ]
add edx 0x1
mov [ ebp - 0x1e0 ] edx
jmp r-xdata
mov ecx [ ebp - 0x6c ]
add ecx 0x1
mov [ ebp - 0x6c ] ecx
mov edx [ ebp - 0x1e0 ]
mov al [ ebp - 0x1d8 ]
mov [ edx ] al
mov ecx [ ebp - 0x1e0 ]
add ecx 0x1
mov [ ebp - 0x1e0 ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40a510
add esp 0x4
mov [ ebp - 0x1d8 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x3c ]
mov cl [ ebp - 0x1d8 ]
mov [ eax ] cl
mov edx [ ebp - 0x3c ]
add edx 0x1
mov [ ebp - 0x3c ] edx
mov al [ ebp - 0x1d8 ]
mov [ ebp - 0x1f0 ] al
mov ecx [ ebp - 0x1d8 ]
and ecx 0xff
mov edx [ rw-data ]
xor eax eax
mov ax [ edx + ecx * 2 ]
and eax 0x8000
test eax eax
je r-xdata
jmp r-xdata
movsx ecx [ ebp - 0x64 ]
test ecx ecx
je r-xdata
mov al [ ebp - 0x1ec ]
add al 0x1
mov [ ebp - 0x1ec ] al
jmp r-xdata
mov dl [ ebp - 0x18 ]
add dl 0x1
mov [ ebp - 0x18 ] dl
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
mov [ ebp - 0x1c ] ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp - 0x1e8 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
push eax
lea ecx [ ebp - 0x1f0 ]
push ecx
lea edx [ ebp - 0x4 ]
push edx
call sub_40ec10
add esp 0xc
mov eax [ ebp - 0x3c ]
mov cx [ ebp - 0x4 ]
mov [ eax ] cx
mov edx [ ebp - 0x3c ]
add edx 0x2
mov [ ebp - 0x3c ] edx
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40a510
add esp 0x4
mov [ ebp - 0x1ef ] al
mov eax [ ebp - 0x3c ]
mov [ eax ] 0x0
mov edx [ ebp - 0x3c ]
mov [ edx ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x1d8 ]
mov ecx [ rw-data ]
xor edx edx
mov dx [ ecx + eax * 2 ]
and edx 0x4
mov [ ebp - 0x220 ] edx
push 0x4
mov edx [ ebp - 0x1d8 ]
push edx
call sub_409010
add esp 0x8
mov [ ebp - 0x220 ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40a510
add esp 0x4
mov [ ebp - 0x1d8 ] eax
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
mov [ ebp - 0x1c ] ecx
test eax eax
je r-xdata
cmp [ ebp - 0x220 ] 0x0
je r-xdata
mov edx [ ebp - 0x6c ]
add edx 0x1
mov [ ebp - 0x6c ] edx
mov eax [ ebp - 0x1e0 ]
mov cl [ ebp - 0x1d8 ]
mov [ eax ] cl
mov edx [ ebp - 0x1e0 ]
add edx 0x1
mov [ ebp - 0x1e0 ] edx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40a510
add esp 0x4
mov [ ebp - 0x1d8 ] eax
jmp r-xdata
sub_40a4b0
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x1
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
xor eax eax
mov ax [ edx + ecx * 2 ]
and eax 0x4
mov [ ebp - 0x4 ] eax
push 0x4
mov eax [ ebp + 0x8 ]
push eax
call sub_409010
add esp 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
and edx 0xffffffdf
sub edx 0x7
mov [ ebp - 0x8 ] edx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40a510
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jl r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40bb60
add esp 0x4
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
movsx eax [ edx ]
and eax 0xff
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40a590
push ebp
mov ebp esp
push ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov eax [ ebp + 0xc ]
push eax
call sub_40a510
add esp 0x4
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_40eed0
add esp 0x4
test eax eax
je r-xdata
sub_40a5d0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx ecx [ eax + edx * 8 + 0x4 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
movsx edx [ ecx + eax * 8 + 0x4 ]
and edx 0x1
test edx edx
je r-xdata
mov [ rw-data ] 0x9
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
push eax
call sub_40d490
add esp 0x4
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ rw-data ] ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
sub_40a680
push ebp
mov ebp esp
sub esp 0x6c
push 0x81
push r--data
push 0x2
push 0x100
call sub_4026d0
add esp 0x10
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ rw-data ] eax
mov [ rw-data ] 0x20
jmp r-xdata
push 0x1b
call sub_405890
add esp 0x4
mov edx [ rw-data ]
add edx 0x100
cmp [ ebp - 0x50 ] edx
jae r-xdata
lea eax [ ebp - 0x48 ]
push eax
call [ GetStartupInfoA@IAT ]
mov ecx [ ebp - 0x16 ]
and ecx 0xffff
test ecx ecx
je r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp - 0x50 ]
mov [ ecx ] 0xffffffff
mov edx [ ebp - 0x50 ]
mov [ edx + 0x5 ] 0xa
jmp r-xdata
mov [ ebp - 0x58 ] 0x0
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x50 ]
add ecx 0x8
mov [ ebp - 0x50 ] ecx
cmp [ ebp - 0x58 ] 0x3
jge r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov [ ebp - 0x64 ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x4
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x64 ]
mov [ ebp - 0x60 ] edx
cmp [ ebp - 0x64 ] 0x800
jge r-xdata
mov eax [ rw-data ]
push eax
call [ SetHandleCount@IAT ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x58 ]
mov ecx [ rw-data ]
lea edx [ ecx + eax * 8 ]
mov [ ebp - 0x50 ] edx
mov eax [ ebp - 0x50 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov [ ebp - 0x68 ] 0x800
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] eax
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov cl [ eax + 0x4 ]
or cl 0x80
mov edx [ ebp - 0x50 ]
mov [ edx + 0x4 ] cl
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0x4 ] 0x81
cmp [ ebp - 0x58 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x64 ]
jge r-xdata
mov ecx [ ebp - 0x68 ]
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x5c ] 0x1
jmp r-xdata
mov edx [ ebp - 0x58 ]
add edx 0x1
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x58 ]
sub edx 0x1
neg edx
sbb edx edx
add edx 0xfffffff5
mov [ ebp - 0x6c ] edx
mov [ ebp - 0x6c ] 0xfffffff6
jmp r-xdata
mov [ ebp - 0x58 ] 0x0
jmp r-xdata
push 0xb6
push r--data
push 0x2
push 0x100
call sub_4026d0
add esp 0x10
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
mov cl [ eax + 0x4 ]
or cl 0x40
mov edx [ ebp - 0x50 ]
mov [ edx + 0x4 ] cl
mov ecx [ ebp - 0x4c ]
push ecx
call [ GetFileType@IAT ]
mov [ ebp - 0x54 ] eax
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov eax [ ebp - 0x6c ]
push eax
call [ GetStdHandle@IAT ]
mov [ ebp - 0x4c ] eax
cmp [ ebp - 0x4c ] 0xffffffff
je r-xdata
mov edx [ ebp - 0x58 ]
cmp edx [ ebp - 0x64 ]
jge r-xdata
mov edx [ ebp - 0x5c ]
mov eax [ ebp - 0x50 ]
mov [ edx * 4 + rw-data ] eax
mov ecx [ rw-data ]
add ecx 0x20
mov [ rw-data ] ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x64 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x4c ]
mov [ edx ] eax
mov ecx [ ebp - 0x54 ]
and ecx 0xff
cmp ecx 0x2
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x5c ]
mov ecx [ eax * 4 + rw-data ]
add ecx 0x100
cmp [ ebp - 0x50 ] ecx
jae r-xdata
mov edx [ ebp - 0x54 ]
and edx 0xff
cmp edx 0x3
jne r-xdata
mov edx [ ebp - 0x50 ]
mov al [ edx + 0x4 ]
or al 0x40
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0x4 ] al
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
and edx 0x1
test edx edx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x50 ]
mov [ edx + 0x4 ] 0x0
mov eax [ ebp - 0x50 ]
mov [ eax ] 0xffffffff
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0x5 ] 0xa
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov cl [ eax + 0x4 ]
or cl 0x8
mov edx [ ebp - 0x50 ]
mov [ edx + 0x4 ] cl
mov edx [ ebp - 0x58 ]
add edx 0x1
mov [ ebp - 0x58 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x60 ]
add ecx 0x4
mov [ ebp - 0x60 ] ecx
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
and ecx 0x8
test ecx ecx
jne r-xdata
mov edx [ ebp - 0x5c ]
add edx 0x1
mov [ ebp - 0x5c ] edx
mov edx [ ebp - 0x50 ]
add edx 0x8
mov [ ebp - 0x50 ] edx
jmp r-xdata
mov ecx [ ebp - 0x58 ]
sar ecx 0x5
mov edx [ ebp - 0x58 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
lea ecx [ eax + edx * 8 ]
mov [ ebp - 0x50 ] ecx
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x60 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x4 ]
mov cl [ eax ]
mov [ edx + 0x4 ] cl
mov edx [ ebp - 0x60 ]
mov eax [ edx ]
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
sub_40a990
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x40
jge r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
cmp [ ecx * 4 + rw-data ] 0x0
je r-xdata
jmp r-xdata
push 0x2
mov edx [ ebp - 0x4 ]
mov eax [ edx * 4 + rw-data ]
push eax
call sub_403110
add esp 0x8
mov ecx [ ebp - 0x4 ]
mov [ ecx * 4 + rw-data ] 0x0
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_40a9f0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x3
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ rw-data ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
cmp [ eax + edx * 4 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
mov ecx [ eax + 0xc ]
and ecx 0x83
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x14
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax + edx * 4 ]
push ecx
call sub_4022a0
add esp 0x4
cmp eax 0xffffffff
je r-xdata
push 0x2
mov eax [ ebp - 0x8 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
push edx
call sub_403110
add esp 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ rw-data ]
mov [ ecx + eax * 4 ] 0x0
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
sub_40aaa0
push ebp
mov ebp esp
sub esp 0x2a8
push ebx
push esi
push edi
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x22c ] 0x0
mov [ ebp - 0x18 ] 0x0
mov eax [ ebp - 0x22c ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x22c ] 0x0
jl r-xdata
movsx ecx [ ebp - 0x28 ]
cmp ecx 0x20
jl r-xdata
mov [ ebp - 0x290 ] 0x0
movsx edx [ ebp - 0x28 ]
cmp edx 0x78
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x294 ]
jmp [ ecx * 4 + jump_table_40b6c4 ]
movsx eax [ ebp - 0x28 ]
movsx ecx [ eax + r--data ]
and ecx 0xf
mov [ ebp - 0x290 ] ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov cl [ eax ]
mov [ ebp - 0x28 ] cl
movsx edx [ ebp - 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
test edx edx
je r-xdata
mov [ ebp - 0x1c ] 0x0
mov edx [ ebp - 0x28 ]
and edx 0xff
mov eax [ rw-data ]
xor ecx ecx
mov cx [ eax + edx * 2 ]
and ecx 0x8000
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x23c ] ecx
mov edx [ ebp - 0x23c ]
mov [ ebp - 0x244 ] edx
mov eax [ ebp - 0x244 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x234 ] 0xffffffff
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
movsx ecx [ ebp - 0x28 ]
mov [ ebp - 0x298 ] ecx
mov edx [ ebp - 0x298 ]
sub edx 0x20
mov [ ebp - 0x298 ] edx
cmp [ ebp - 0x298 ] 0x10
ja r-xdata
movsx ecx [ ebp - 0x28 ]
cmp ecx 0x2a
jne r-xdata
mov [ ebp - 0x234 ] 0x0
jmp r-xdata
movsx edx [ ebp - 0x28 ]
cmp edx 0x2a
jne r-xdata
movsx ecx [ ebp - 0x28 ]
mov [ ebp - 0x29c ] ecx
mov edx [ ebp - 0x29c ]
sub edx 0x49
mov [ ebp - 0x29c ] edx
cmp [ ebp - 0x29c ] 0x2e
ja r-xdata
movsx edx [ ebp - 0x28 ]
mov [ ebp - 0x2a0 ] edx
mov eax [ ebp - 0x2a0 ]
sub eax 0x43
mov [ ebp - 0x2a0 ] eax
cmp [ ebp - 0x2a0 ] 0x35
ja r-xdata
mov edx [ ebp - 0x290 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x18 ]
movsx edx [ ecx + eax * 8 + r--data ]
sar edx 0x4
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x7
ja r-xdata
lea ecx [ ebp - 0x22c ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
movsx eax [ ebp - 0x28 ]
push eax
call sub_40b7d0
add esp 0xc
jmp r-xdata
lea edx [ ebp - 0x22c ]
push edx
mov eax [ ebp + 0x8 ]
push eax
movsx ecx [ ebp - 0x28 ]
push ecx
call sub_40b7d0
add esp 0xc
mov edx [ ebp + 0xc ]
mov al [ edx ]
mov [ ebp - 0x28 ] al
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
jmp r-xdata
mov ecx [ ebp - 0x298 ]
xor eax eax
mov al [ ecx + lookup_table_40b6fc ]
jmp [ eax * 4 + jump_table_40b6e4 ]
mov edx [ ebp - 0x244 ]
imul edx edx 0xa
movsx eax [ ebp - 0x28 ]
lea ecx [ edx + eax - 0x30 ]
mov [ ebp - 0x244 ] ecx
lea edx [ ebp + 0x10 ]
push edx
call sub_40b8e0
add esp 0x4
mov [ ebp - 0x244 ] eax
cmp [ ebp - 0x244 ] 0x0
jge r-xdata
mov ecx [ ebp - 0x234 ]
imul ecx ecx 0xa
movsx edx [ ebp - 0x28 ]
lea eax [ ecx + edx - 0x30 ]
mov [ ebp - 0x234 ] eax
lea eax [ ebp + 0x10 ]
push eax
call sub_40b8e0
add esp 0x4
mov [ ebp - 0x234 ] eax
cmp [ ebp - 0x234 ] 0x0
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x29c ]
xor eax eax
mov al [ ecx + lookup_table_40b721 ]
jmp [ eax * 4 + jump_table_40b70d ]
cmp [ ebp - 0x23c ] 0x0
jne r-xdata
mov edx [ ebp - 0x2a0 ]
xor ecx ecx
mov cl [ edx + lookup_table_40b78c ]
jmp [ ecx * 4 + jump_table_40b750 ]
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x186
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
or edx 0x4
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
or al 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
or ecx 0x2
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
or dl 0x80
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
or al 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
or al 0x4
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x244 ]
neg ecx
mov [ ebp - 0x244 ] ecx
jmp r-xdata
mov [ ebp - 0x234 ] 0xffffffff
mov edx [ ebp - 0x4 ]
or edx 0x10
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx ecx [ eax ]
cmp ecx 0x36
jne r-xdata
mov eax [ ebp - 0x4 ]
or al 0x20
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
or ch 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
and eax 0x40
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x830
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
and edx 0x810
test edx edx
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40b8e0
add esp 0x4
mov [ ebp - 0x24c ] eax
cmp [ ebp - 0x24c ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x830
test ecx ecx
jne r-xdata
cmp [ ebp - 0x234 ] 0xffffffff
jne r-xdata
lea edx [ ebp + 0x10 ]
push edx
call sub_40b8e0
add esp 0x4
mov [ ebp - 0x25c ] eax
mov eax [ ebp - 0x4 ]
and eax 0x20
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov dl [ ebp - 0x28 ]
add dl 0x20
mov [ ebp - 0x28 ] dl
mov eax [ ebp - 0x4 ]
or al 0x40
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x228 ]
mov [ ebp - 0x20 ] ecx
cmp [ ebp - 0x234 ] 0x0
jge r-xdata
mov ecx [ ebp - 0x4 ]
or ecx 0x40
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x238 ] 0xa
jmp r-xdata
mov [ ebp - 0x238 ] 0xa
jmp r-xdata
mov [ ebp - 0x234 ] 0x8
mov [ ebp - 0x230 ] 0x7
jmp r-xdata
mov [ ebp - 0x230 ] 0x27
mov [ ebp - 0x238 ] 0x8
mov ecx [ ebp - 0x4 ]
and ecx 0x80
test ecx ecx
je r-xdata
movsx edx [ ebp - 0x28 ]
test edx edx
jne r-xdata
int3
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov edx [ ebp + 0xc ]
movsx eax [ edx + 0x1 ]
cmp eax 0x34
jne r-xdata
mov ecx [ ebp - 0x244 ]
sub ecx [ ebp - 0x24 ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0x27c ] ecx
mov edx [ ebp - 0x4 ]
and edx 0xc
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x100
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
or ch 0x8
mov [ ebp - 0x4 ] ecx
lea eax [ ebp + 0x10 ]
push eax
call sub_40b8e0
add esp 0x4
mov [ ebp - 0x248 ] ax
mov cl [ ebp - 0x248 ]
mov [ ebp - 0x228 ] cl
mov [ ebp - 0x24 ] 0x1
lea eax [ ebp + 0x10 ]
push eax
call sub_40b920
add esp 0x4
mov [ ebp - 0x14 ] ax
mov cx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x228 ]
push edx
call sub_40f2c0
add esp 0x8
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
jge r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
push eax
call sub_404a60
add esp 0x4
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov ecx [ ebp - 0x24c ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
or dh 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x234 ]
mov [ ebp - 0x2a4 ] eax
mov [ ebp - 0x2a4 ] 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x25c ]
mov ecx [ ebp - 0x22c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x25c ]
mov dx [ ebp - 0x22c ]
mov [ ecx ] dx
jmp r-xdata
cmp [ ebp - 0x234 ] 0x0
jne r-xdata
mov [ ebp - 0x234 ] 0x6
jmp r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x8000
test eax eax
je r-xdata
mov [ ebp - 0x238 ] 0x10
mov edx [ ebp - 0x4 ]
and edx 0x80
test edx edx
je r-xdata
jmp r-xdata
mov [ ebp - 0x240 ] 0x30
mov eax [ ebp - 0x230 ]
add eax 0x51
mov [ ebp - 0x23f ] al
mov [ ebp - 0x10 ] 0x2
mov edx [ ebp - 0x4 ]
or dh 0x2
mov [ ebp - 0x4 ] edx
mov ecx [ ebp + 0xc ]
add ecx 0x2
mov [ ebp + 0xc ] ecx
mov edx [ ebp - 0x4 ]
or dh 0x80
mov [ ebp - 0x4 ] edx
jmp r-xdata
lea eax [ ebp - 0x22c ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
lea eax [ ebp - 0x240 ]
push eax
call sub_40b890
add esp 0x10
mov ecx [ ebp - 0x4 ]
and ecx 0x8
test ecx ecx
je r-xdata
lea eax [ ebp - 0x22c ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x27c ]
push edx
push 0x20
call sub_40b850
add esp 0x10
mov edx [ ebp - 0x4 ]
and edx 0x1
test edx edx
je r-xdata
mov [ ebp - 0x240 ] 0x2d
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x23c ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x800
test ecx ecx
je r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x2a4 ]
mov [ ebp - 0x258 ] ecx
lea edx [ ebp + 0x10 ]
push edx
call sub_40b8e0
add esp 0x4
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
and eax 0x810
test eax eax
je r-xdata
mov [ ebp - 0x23c ] 0x1
jmp r-xdata
mov eax [ ebp + 0x10 ]
add eax 0x8
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x10 ]
sub ecx 0x8
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x264 ] edx
mov [ ebp - 0x260 ] eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0x234 ]
push edx
movsx eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
lea edx [ ebp - 0x264 ]
push edx
call [ rw-data ]
add esp 0x14
mov eax [ ebp - 0x4 ]
and eax 0x80
test eax eax
je r-xdata
movsx edx [ ebp - 0x28 ]
cmp edx 0x67
jne r-xdata
mov edx [ ebp - 0x4 ]
and edx 0x20
test edx edx
je r-xdata
lea ecx [ ebp + 0x10 ]
push ecx
call sub_40b900
add esp 0x4
mov [ ebp - 0x278 ] eax
mov [ ebp - 0x274 ] edx
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
and edx 0x4
test edx edx
jne r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x2
test eax eax
je r-xdata
mov [ ebp - 0x240 ] 0x2b
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
lea edx [ ebp - 0x228 ]
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x24c ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x24c ]
movsx eax [ edx ]
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x24c ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x24c ]
movsx edx [ ecx ]
shr edx 0x1
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x250 ] ecx
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x1
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x254 ] edx
mov ecx [ rw-data ]
mov [ ebp - 0x20 ] ecx
movsx edx [ ebp - 0x28 ]
cmp edx 0x67
jne r-xdata
cmp [ ebp - 0x234 ] 0x0
jne r-xdata
mov [ ebp - 0x234 ] 0x1
mov eax [ ebp - 0x4 ]
and eax 0x40
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x40
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
and edx 0x40
test edx edx
je r-xdata
lea ecx [ ebp - 0x22c ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
call sub_40b890
add esp 0x10
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
lea eax [ ebp - 0x22c ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x27c ]
push edx
push 0x30
call sub_40b850
add esp 0x10
mov [ ebp - 0x240 ] 0x20
mov [ ebp - 0x10 ] 0x1
mov ecx [ ebp - 0x250 ]
sub ecx [ ebp - 0x20 ]
mov [ ebp - 0x24 ] ecx
mov ecx [ ebp - 0x250 ]
movsx edx [ ecx ]
test edx edx
je r-xdata
mov edx [ ebp - 0x254 ]
sub edx [ ebp - 0x20 ]
sar edx 0x1
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov edx [ ebp - 0x254 ]
xor eax eax
mov ax [ edx ]
test eax eax
je r-xdata
mov edx [ ebp - 0x20 ]
movsx eax [ edx ]
cmp eax 0x2d
jne r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x80
test eax eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
push ecx
call [ rw-data ]
add esp 0x4
lea edx [ ebp + 0x10 ]
push edx
call sub_40b8e0
add esp 0x4
xor ecx ecx
mov [ ebp - 0x278 ] eax
mov [ ebp - 0x274 ] ecx
lea ecx [ ebp + 0x10 ]
push ecx
call sub_40b8e0
add esp 0x4
cdq
mov [ ebp - 0x278 ] eax
mov [ ebp - 0x274 ] edx
jmp r-xdata
lea edx [ ebp + 0x10 ]
push edx
call sub_40b8e0
add esp 0x4
and eax 0xffff
cdq
mov [ ebp - 0x278 ] eax
mov [ ebp - 0x274 ] edx
lea ecx [ ebp + 0x10 ]
push ecx
call sub_40b8e0
add esp 0x4
movsx eax ax
cdq
mov [ ebp - 0x278 ] eax
mov [ ebp - 0x274 ] edx
jmp r-xdata
mov eax [ ebp - 0x278 ]
mov [ ebp - 0x26c ] eax
mov ecx [ ebp - 0x274 ]
mov [ ebp - 0x268 ] ecx
cmp [ ebp - 0x274 ] 0x0
jg r-xdata
lea eax [ ebp - 0x22c ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x27c ]
push edx
push 0x20
call sub_40b850
add esp 0x10
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x280 ] eax
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x284 ] ecx
mov eax [ ebp - 0x250 ]
add eax 0x1
mov [ ebp - 0x250 ] eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x254 ]
add ecx 0x2
mov [ ebp - 0x254 ] ecx
jmp r-xdata
mov eax [ ebp - 0x20 ]
push eax
call sub_404a60
add esp 0x4
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
or ch 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x20 ]
push ecx
call [ rw-data ]
add esp 0x4
jmp r-xdata
cmp [ ebp - 0x234 ] 0x0
jge r-xdata
mov eax [ ebp - 0x26c ]
mov ecx [ ebp - 0x268 ]
and ecx 0x0
mov [ ebp - 0x26c ] eax
mov [ ebp - 0x268 ] ecx
jl r-xdata
jmp r-xdata
mov ecx [ ebp - 0x280 ]
mov dx [ ecx ]
mov [ ebp - 0x2a6 ] dx
mov ax [ ebp - 0x2a6 ]
push eax
lea ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x280 ]
add edx 0x2
mov [ ebp - 0x280 ] edx
call sub_40f2c0
add esp 0x8
mov [ ebp - 0x28c ] eax
cmp [ ebp - 0x28c ] 0x0
jg r-xdata
mov edx [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
sub eax 0x1
mov [ ebp - 0x258 ] eax
test edx edx
je r-xdata
mov eax [ ebp - 0x258 ]
mov ecx [ ebp - 0x258 ]
sub ecx 0x1
mov [ ebp - 0x258 ] ecx
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
and edx 0xfffffff7
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x234 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x278 ]
neg eax
mov ecx [ ebp - 0x274 ]
adc ecx 0x0
neg ecx
mov [ ebp - 0x26c ] eax
mov [ ebp - 0x268 ] ecx
mov edx [ ebp - 0x4 ]
or dh 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp [ ebp - 0x278 ] 0x0
jae r-xdata
mov edx [ ebp - 0x4 ]
and edx 0x4
test edx edx
je r-xdata
lea eax [ ebp - 0x22c ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x28c ]
push edx
lea eax [ ebp - 0x288 ]
push eax
call sub_40b890
add esp 0x10
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x29 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x26c ]
or eax [ ebp - 0x268 ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
and edx 0x8000
test edx edx
jne r-xdata
mov edx [ ebp - 0x284 ]
mov eax [ ebp - 0x284 ]
sub eax 0x1
mov [ ebp - 0x284 ] eax
test edx edx
je r-xdata
mov eax [ ebp - 0x238 ]
cdq
push edx
push eax
mov edx [ ebp - 0x268 ]
push edx
mov eax [ ebp - 0x26c ]
push eax
call sub_40f3d0
add eax 0x30
mov [ ebp - 0x270 ] eax
mov eax [ ebp - 0x238 ]
cdq
push edx
push eax
mov ecx [ ebp - 0x268 ]
push ecx
mov edx [ ebp - 0x26c ]
push edx
call sub_40f360
mov [ ebp - 0x26c ] eax
mov [ ebp - 0x268 ] edx
cmp [ ebp - 0x270 ] 0x39
jle r-xdata
mov ecx [ ebp - 0x26c ]
or ecx [ ebp - 0x268 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x20 ]
mov dl [ ebp - 0x270 ]
mov [ ecx ] dl
mov eax [ ebp - 0x20 ]
sub eax 0x1
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov eax [ ebp - 0x270 ]
add eax [ ebp - 0x230 ]
mov [ ebp - 0x270 ] eax
lea ecx [ ebp - 0x29 ]
sub ecx [ ebp - 0x20 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x4 ]
and eax 0x200
test eax eax
je r-xdata
mov edx [ ebp - 0x234 ]
mov eax [ ebp - 0x234 ]
sub eax 0x1
mov [ ebp - 0x234 ] eax
test edx edx
jg r-xdata
mov ecx [ ebp - 0x20 ]
movsx edx [ ecx ]
cmp edx 0x30
jne r-xdata
mov eax [ ebp - 0x20 ]
sub eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
mov [ ecx ] 0x30
mov edx [ ebp - 0x24 ]
add edx 0x1
mov [ ebp - 0x24 ] edx
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
sub_40b79b
push cs
add cl [ esi ]
push cs
push cs
push cs
add ecx [ esi ]
add al 0xe
push cs
push cs
push cs
push cs
push cs
push cs
push cs
add eax 0x7070706
push cs
push es
push cs
push cs
push cs
push cs
or [ ecx ] cl
or cl [ esi ]
push cs
or ecx [ esi ]
or al 0xe
push cs
or eax 0xcccccccc
int3
sub_40b7d0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
sub ecx 0x1
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jl r-xdata
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_406230
add esp 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov al [ ebp + 0x8 ]
mov [ edx ] al
movsx ecx [ ebp + 0x8 ]
and ecx 0xff
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov ecx [ ebp + 0x10 ]
mov [ ecx ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov esp ebp
pop ebp
retn
sub_40b850
push ebp
mov ebp esp
pop ebp
retn
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40b7d0
add esp 0xc
mov edx [ ebp + 0x14 ]
cmp [ edx ] 0xffffffff
jne r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0xc ]
sub ecx 0x1
mov [ ebp + 0xc ] ecx
test eax eax
jle r-xdata
sub_40b890
push ebp
mov ebp esp
push ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
movsx edx [ ecx ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x1
mov [ ebp + 0x8 ] ecx
call sub_40b7d0
add esp 0xc
mov edx [ ebp + 0x14 ]
cmp [ edx ] 0xffffffff
jne r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0xc ]
sub ecx 0x1
mov [ ebp + 0xc ] ecx
test eax eax
jle r-xdata
sub_40b900
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add ecx 0x8
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
sub ecx 0x8
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
pop ebp
retn
sub_40b940
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x41
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
call sub_40e1b0
add esp 0x4
test eax eax
jne r-xdata
int3
cmp [ ebp - 0x4 ] rw-data
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x4 ] rw-data
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov ecx [ rw-data ]
add ecx 0x1
mov [ rw-data ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and eax 0x10c
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx * 4 + rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax * 4 + rw-data ]
mov [ edx + 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] 0x1000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x1000
push 0x5e
push r--data
push 0x2
push 0x1000
call sub_4026d0
add esp 0x10
mov edx [ ebp - 0x8 ]
mov [ edx * 4 + rw-data ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax * 4 + rw-data ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x14
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x2
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
or edx 0x1102
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov eax 0x1
sub_40baa0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor eax eax
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x1
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push r--data
push 0x0
push 0xa1
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and eax 0x1000
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and eax 0x1000
test eax eax
je r-xdata
int3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
call sub_404660
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_404660
add esp 0x4
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and ah 0xee
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x0
sub_40bb60
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x69
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and eax 0x83
test eax eax
je r-xdata
int3
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
and edx 0x40
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
and ecx 0x2
test ecx ecx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
or al 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and eax 0x10c
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
or al 0x20
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov [ edx ] ecx
mov ecx [ ebp - 0x4 ]
push ecx
call sub_40e0e0
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
or edx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x4 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
call sub_40bd40
add esp 0xc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and eax 0x82
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x18 ] 0x200
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x10 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
movsx eax [ edx ]
and eax 0xff
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
add edx 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx ] edx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and eax 0x8
test eax eax
je r-xdata
mov [ ebp - 0x8 ] rw-data
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
sar eax 0x5
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
and edx 0x1f
mov eax [ eax * 4 + rw-data ]
lea ecx [ eax + edx * 8 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
and edx 0x400
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
or dh 0x20
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x8 ]
movsx eax [ edx + 0x4 ]
and eax 0x82
cmp eax 0x82
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1000
sub_40bd40
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx ecx [ eax + edx * 8 + 0x4 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp + 0xc ]
mov [ ebp - 0x14 ] edx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov edx [ eax * 4 + rw-data ]
movsx eax [ edx + ecx * 8 + 0x4 ]
and eax 0x2
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx ecx [ eax + edx * 8 + 0x4 ]
and ecx 0x48
test ecx ecx
je r-xdata
push 0x0
lea edx [ ebp - 0x10 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov edx [ ecx + eax * 8 ]
push edx
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
movsx edx [ ecx + eax * 8 + 0x5 ]
cmp edx 0xa
je r-xdata
mov edx [ ebp - 0x18 ]
add edx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov edx [ eax * 4 + rw-data ]
movsx eax [ edx + ecx * 8 + 0x4 ]
and eax 0x80
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x5
jne r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov edx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
mov cl [ edx + ecx * 8 + 0x5 ]
mov [ eax ] cl
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0x10 ]
sub ecx 0x1
mov [ ebp + 0x10 ] ecx
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov [ ecx + eax * 8 + 0x5 ] 0xa
mov eax [ ebp - 0x18 ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x6d
jne r-xdata
mov [ rw-data ] 0x9
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov dl [ ecx + eax * 8 + 0x4 ]
and dl 0xfb
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx * 8 + 0x4 ] dl
mov ecx [ ebp + 0xc ]
movsx edx [ ecx ]
cmp edx 0xa
jne r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
call sub_40d150
add esp 0x4
or eax 0xffffffff
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp + 0xc ]
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
cmp edx 0x1a
jne r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov edx [ eax * 4 + rw-data ]
mov al [ edx + ecx * 8 + 0x4 ]
or al 0x4
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edx * 8 + 0x4 ] al
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0xd
je r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov edx [ eax * 4 + rw-data ]
movsx eax [ edx + ecx * 8 + 0x4 ]
and eax 0x40
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0xc ]
lea eax [ edx + ecx - 0x1 ]
cmp [ ebp - 0x4 ] eax
jae r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov cl [ eax ]
mov [ edx ] cl
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
mov cl [ eax + edx * 8 + 0x4 ]
or cl 0x2
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov edx [ edx * 4 + rw-data ]
mov [ edx + eax * 8 + 0x4 ] cl
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov edx [ ecx + eax * 8 ]
push edx
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx + 0x1 ]
cmp edx 0xa
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx ]
mov [ eax ] dl
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x2
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] 0xa
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x18 ]
cmp [ ebp - 0x4 ] eax
jae r-xdata
mov eax [ ebp - 0xc ]
mov [ eax ] 0xd
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
movsx edx [ ecx + eax * 8 + 0x4 ]
and edx 0x48
test edx edx
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
jne r-xdata
movsx eax [ ebp - 0x1c ]
cmp eax 0xa
jne r-xdata
push 0x1
push 0xffffffff
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c1a0
add esp 0xc
mov [ ebp - 0x20 ] eax
movsx edx [ ebp - 0x1c ]
cmp edx 0xa
je r-xdata
movsx ecx [ ebp - 0x1c ]
cmp ecx 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ eax ] 0xd
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov dl [ ebp - 0x1c ]
mov [ ecx + eax * 8 + 0x5 ] dl
mov ecx [ ebp - 0xc ]
mov [ ecx ] 0xa
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ eax ] 0xd
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
mov [ edx ] 0xa
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
jmp r-xdata
sub_40c1a0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx ecx [ eax + edx * 8 + 0x4 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_40d490
add esp 0x4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
push 0x0
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0xc ]
push edx
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov [ rw-data ] 0x9
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
mov cl [ eax + edx * 8 + 0x4 ]
and cl 0xfd
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov edx [ edx * 4 + rw-data ]
mov [ edx + eax * 8 + 0x4 ] cl
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
push eax
call sub_40d150
add esp 0x4
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40c290
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push eax
call sub_40c440
add esp 0x4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
push edx
call [ UnhandledExceptionFilter@IAT ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x5
jne r-xdata
mov edx [ ebp - 0xc ]
cmp [ edx + 0x8 ] 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x8 ] 0x0
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ rw-data ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0xc ]
mov [ rw-data ] eax
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x4 ] 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4 ]
push eax
call [ ebp - 0x4 ]
add esp 0x4
mov edx [ rw-data ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
add ecx [ rw-data ]
cmp [ ebp - 0x10 ] ecx
jge r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xc000008e
jne r-xdata
mov edx [ ebp - 0x10 ]
imul edx edx 0xc
mov [ edx + rw-data ] 0x0
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp [ edx ] 0xc0000090
jne r-xdata
mov [ rw-data ] 0x83
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
cmp [ eax ] 0xc0000091
jne r-xdata
mov [ rw-data ] 0x81
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0x8
call [ ebp - 0x4 ]
add esp 0x8
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xc0000093
jne r-xdata
mov [ rw-data ] 0x84
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ rw-data ] ecx
or eax 0xffffffff
mov edx [ ebp - 0xc ]
cmp [ edx ] 0xc000008d
jne r-xdata
mov [ rw-data ] 0x85
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax ] 0xc000008f
jne r-xdata
mov [ rw-data ] 0x82
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xc0000092
jne r-xdata
mov [ rw-data ] 0x86
jmp r-xdata
mov [ rw-data ] 0x8a
sub_40c440
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] rw-data
mov ecx [ rw-data ]
imul ecx ecx 0xc
add ecx rw-data
cmp [ ebp - 0x4 ] ecx
jae r-xdata
mov edx [ ebp - 0x4 ]
add edx 0xc
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
imul eax eax 0xc
add eax rw-data
cmp [ ebp - 0x4 ] eax
jae r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
cmp eax [ ebp + 0x8 ]
je r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
sub_40c4a0
push ebp
mov ebp esp
sub esp 0x10
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
call sub_40fbe0
push 0x6d
push r--data
push 0x2
mov eax [ ebp - 0x8 ]
lea ecx [ eax * 4 + 0x4 ]
push ecx
call sub_4026d0
add esp 0x10
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ rw-data ] edx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x3d
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0x9
call sub_405890
add esp 0x4
mov eax [ ebp - 0x4 ]
push eax
call sub_404a60
add esp 0x4
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x4 ]
movsx eax [ edx ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je r-xdata
push 0x2
mov edx [ rw-data ]
push edx
call sub_403110
add esp 0x8
mov [ rw-data ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ rw-data ] 0x1
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
call sub_404a60
add esp 0x4
add eax 0x1
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x4 ]
movsx eax [ edx ]
cmp eax 0x3d
je r-xdata
jmp r-xdata
push 0x79
push r--data
push 0x2
mov ecx [ ebp - 0x10 ]
push ecx
call sub_4026d0
add esp 0x10
mov edx [ ebp - 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0xc ]
mov eax [ edx ]
push eax
call sub_40d9d0
add esp 0x8
mov ecx [ ebp - 0xc ]
add ecx 0x4
mov [ ebp - 0xc ] ecx
push 0x9
call sub_405890
add esp 0x4
sub_40c5f0
push ebp
mov ebp esp
sub esp 0x14
cmp [ rw-data ] 0x0
jne r-xdata
push 0x104
push rw-data
push 0x0
call [ GetModuleFileNameA@IAT ]
mov [ rw-data ] rw-data
mov eax [ rw-data ]
movsx ecx [ eax ]
test ecx ecx
jne r-xdata
call sub_40fbe0
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
mov edx [ rw-data ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
lea edx [ ebp - 0x4 ]
push edx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
lea eax [ edx + ecx * 4 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
call sub_40c6d0
add esp 0x14
mov eax [ ebp - 0xc ]
sub eax 0x1
mov [ rw-data ] eax
mov ecx [ ebp - 0x8 ]
mov [ rw-data ] ecx
mov esp ebp
pop ebp
retn
push 0x8
call sub_405890
add esp 0x4
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ecx
lea edx [ ebp - 0x4 ]
push edx
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x10 ]
push ecx
call sub_40c6d0
add esp 0x14
push 0x80
push r--data
push 0x2
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx * 4 ]
push ecx
call sub_4026d0
add esp 0x10
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_40c6d0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x0
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x1
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x22
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov [ eax ] ecx
mov edx [ ebp + 0xc ]
add edx 0x4
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x18 ]
mov [ edx ] ecx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x22
je r-xdata
mov ecx [ ebp - 0x4 ]
mov dl [ ecx ]
mov [ ebp - 0xc ] dl
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
and ecx 0xff
xor edx edx
mov dl [ ecx + rw-data ]
and edx 0x4
test edx edx
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx ]
mov [ eax ] dl
mov eax [ ebp + 0x10 ]
add eax 0x1
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x18 ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp + 0x18 ]
mov [ eax ] edx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
movsx eax [ edx ]
test eax eax
je r-xdata
mov edx [ ebp - 0xc ]
and edx 0xff
cmp edx 0x20
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x18 ]
mov [ edx ] ecx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x22
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] 0x0
mov edx [ ebp + 0x10 ]
add edx 0x1
mov [ ebp + 0x10 ] edx
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx ]
xor eax eax
mov al [ edx + rw-data ]
and eax 0x4
test eax eax
je r-xdata
mov edx [ ebp - 0xc ]
and edx 0xff
test edx edx
jne r-xdata
mov eax [ ebp - 0xc ]
and eax 0xff
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx ]
mov [ eax ] dl
mov eax [ ebp + 0x10 ]
add eax 0x1
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x18 ]
mov [ edx ] ecx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp + 0x18 ]
mov [ eax ] edx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
and ecx 0xff
cmp ecx 0x9
jne r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx ]
mov [ eax ] dl
mov eax [ ebp + 0x10 ]
add eax 0x1
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
mov al [ edx ]
mov [ ecx ] al
mov ecx [ ebp + 0x10 ]
add ecx 0x1
mov [ ebp + 0x10 ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov ecx [ ebp + 0x10 ]
mov [ ecx - 0x1 ] 0x0
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
cmp edx 0x20
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x9
jne r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov [ edx ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x4
mov [ ebp + 0xc ] ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x22
jne r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
mov ecx [ ebp + 0xc ]
add ecx 0x4
mov [ ebp + 0xc ] ecx
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
sub edx 0x1
mov [ ebp - 0x10 ] edx
test ecx ecx
je r-xdata
mov eax [ ebp - 0x10 ]
xor edx edx
mov ecx 0x2
div ecx
test edx edx
jne r-xdata
mov edx [ ebp - 0x4 ]
movsx eax [ edx ]
cmp eax 0x5c
jne r-xdata
mov edx [ ebp - 0x4 ]
movsx eax [ edx ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x5c
mov ecx [ ebp + 0x10 ]
add ecx 0x1
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x22
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
cmp edx 0x20
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x18 ]
mov [ edx ] ecx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] 0x0
mov edx [ ebp + 0x10 ]
add edx 0x1
mov [ ebp + 0x10 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x9
jne r-xdata
xor edx edx
cmp [ ebp - 0x14 ] 0x0
sete dl
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
movsx eax [ edx ]
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x10 ] 0x0
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx ]
xor ecx ecx
mov cl [ eax + rw-data ]
and ecx 0x4
test ecx ecx
je r-xdata
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx ]
xor ecx ecx
mov cl [ eax + rw-data ]
and ecx 0x4
test ecx ecx
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x18 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x18 ]
mov [ edx ] ecx
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
mov al [ edx ]
mov [ ecx ] al
mov ecx [ ebp + 0x10 ]
add ecx 0x1
mov [ ebp + 0x10 ] ecx
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
mov cl [ eax ]
mov [ edx ] cl
mov edx [ ebp + 0x10 ]
add edx 0x1
mov [ ebp + 0x10 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x18 ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp + 0x18 ]
mov [ eax ] edx
sub_40cb00
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
call [ GetEnvironmentStringsW@IAT ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
call [ GetEnvironmentStrings@IAT ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
call [ GetEnvironmentStringsW@IAT ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
call [ GetEnvironmentStrings@IAT ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x14 ]
sar ecx 0x1
add ecx 0x1
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x2
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dx [ ecx ]
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
push 0x8f
push r--data
push 0x2
mov edx [ ebp - 0x10 ]
push edx
call sub_4026d0
add esp 0x10
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
movsx edx [ ecx ]
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
push edx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
jmp r-xdata
push 0x64
push r--data
push 0x2
mov ecx [ ebp - 0x10 ]
push ecx
call sub_4026d0
add esp 0x10
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x2
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call sub_404ba0
add esp 0xc
mov ecx [ ebp - 0x18 ]
push ecx
call [ FreeEnvironmentStringsA@IAT ]
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
call [ FreeEnvironmentStringsA@IAT ]
xor eax eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dx [ ecx ]
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
movsx edx [ ecx ]
test edx edx
je r-xdata
mov edx [ ebp - 0x14 ]
push edx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
push 0x2
mov ecx [ ebp - 0x18 ]
push ecx
call sub_403110
add esp 0x8
mov [ ebp - 0x18 ] 0x0
sub_40cd1c
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40cd5e
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_40cd3c
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40cdf2
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_40ce0c
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_40cd5e
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_40cd1c
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_40cd5e
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_40cdf2
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_40cef0
push ebp
mov ebp esp
cmp [ rw-data ] 0x1
je r-xdata
push 0xfc
call sub_40cf40
add esp 0x4
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0xff
call sub_40cf40
add esp 0x4
call [ rw-data ]
pop ebp
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_40cf40
push ebp
mov ebp esp
sub esp 0x1b0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x12
jae r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
cmp edx [ ecx * 8 + rw-data ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x8 ] 0xfc
je r-xdata
jmp r-xdata
jmp r-xdata
cmp [ rw-data ] 0x1
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx * 8 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x1
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx * 8 + rw-data ]
push eax
call sub_404a60
add esp 0x4
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx * 8 + rw-data ]
push edx
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
int3
cmp [ ebp + 0x8 ] 0xfc
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
push 0x104
lea eax [ ebp - 0x110 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x110 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
push eax
call sub_404a60
add esp 0x4
add eax 0x1
cmp eax 0x3c
jbe r-xdata
push r--data
lea ecx [ ebp - 0x110 ]
push ecx
call sub_40d9d0
add esp 0x8
push r--data
lea edx [ ebp - 0x1b0 ]
push edx
call sub_40d9d0
add esp 0x8
mov eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x1b0 ]
push ecx
call sub_40d9e0
add esp 0x8
push r--data
lea edx [ ebp - 0x1b0 ]
push edx
call sub_40d9e0
add esp 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax * 8 + rw-data ]
push ecx
lea edx [ ebp - 0x1b0 ]
push edx
call sub_40d9e0
add esp 0x8
push 0x12010
push r--data
lea eax [ ebp - 0x1b0 ]
push eax
call sub_40e020
add esp 0xc
lea ecx [ ebp - 0x110 ]
push ecx
call sub_404a60
add esp 0x4
mov edx [ ebp - 0xc ]
lea eax [ edx + eax - 0x3b ]
mov [ ebp - 0xc ] eax
push 0x3
push r--data
mov ecx [ ebp - 0xc ]
push ecx
call sub_405520
add esp 0xc
sub_40d100
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x12
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + rw-data ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
cmp edx [ ecx * 8 + rw-data ]
jne r-xdata
xor eax eax
mov edx [ ebp - 0x4 ]
mov eax [ edx * 8 + rw-data ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_40d150
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x2d
jae r-xdata
cmp [ ebp + 0x8 ] 0x13
jb r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
cmp eax [ edx * 8 + rw-data ]
jne r-xdata
cmp [ ebp + 0x8 ] 0xbc
jb r-xdata
cmp [ ebp + 0x8 ] 0x24
ja r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx * 8 + rw-data ]
mov [ rw-data ] edx
jmp r-xdata
mov [ rw-data ] 0x16
cmp [ ebp + 0x8 ] 0xca
ja r-xdata
mov [ rw-data ] 0xd
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn
mov [ rw-data ] 0x8
jmp r-xdata
sub_40d1e0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ ebp - 0xc ] 0x40
jge r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
cmp [ ecx * 4 + rw-data ] 0x0
je r-xdata
push 0x79
push r--data
push 0x2
push 0x100
call sub_4026d0
add esp 0x10
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ ecx * 4 + rw-data ] edx
mov eax [ rw-data ]
add eax 0x20
mov [ rw-data ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
add eax 0x100
cmp [ ebp - 0x4 ] eax
jae r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
add eax 0x100
cmp [ ebp - 0x4 ] eax
jae r-xdata
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx + 0x4 ]
and edx 0x1
test edx edx
jne r-xdata
mov ecx [ ebp - 0xc ]
shl ecx 0x5
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov [ eax + 0x5 ] 0xa
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xffffffff
mov ecx [ ebp - 0xc ]
shl ecx 0x5
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
sub eax [ edx * 4 + rw-data ]
sar eax 0x3
add ecx eax
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x8
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
sub_40d310
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] 0x0
or eax 0xffffffff
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
cmp [ eax + edx * 8 ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov edx [ ebp + 0xc ]
mov [ ecx + eax * 8 ] edx
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
push edx
push 0xfffffff6
call [ SetStdHandle@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
mov eax [ ebp + 0xc ]
push eax
push 0xfffffff5
call [ SetStdHandle@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x2
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
push 0xfffffff4
call [ SetStdHandle@IAT ]
jmp r-xdata
sub_40d3c0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] 0x0
or eax 0xffffffff
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx ecx [ eax + edx * 8 + 0x4 ]
and ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
cmp [ ecx + eax * 8 ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov edx [ eax * 4 + rw-data ]
mov [ edx + ecx * 8 ] 0xffffffff
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
push 0x0
push 0xfffffff6
call [ SetStdHandle@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
push 0x0
push 0xfffffff5
call [ SetStdHandle@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x2
je r-xdata
push 0x0
push 0xfffffff4
call [ SetStdHandle@IAT ]
jmp r-xdata
sub_40d490
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] 0x0
or eax 0xffffffff
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx ecx [ eax + edx * 8 + 0x4 ]
and ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov eax [ ecx + eax * 8 ]
jmp r-xdata
pop ebp
retn
sub_40d4f0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0xc ]
and eax 0x8
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
and edx 0x4000
test edx edx
je r-xdata
mov cl [ ebp - 0xc ]
or cl 0x20
mov [ ebp - 0xc ] cl
mov ecx [ ebp + 0xc ]
and ecx 0x80
test ecx ecx
je r-xdata
mov al [ ebp - 0xc ]
or al 0x80
mov [ ebp - 0xc ] al
mov eax [ ebp + 0x8 ]
push eax
call [ GetFileType@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov dl [ ebp - 0xc ]
or dl 0x10
mov [ ebp - 0xc ] dl
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_40d150
add esp 0x4
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
mov cl [ ebp - 0xc ]
or cl 0x40
mov [ ebp - 0xc ] cl
jmp r-xdata
mov esp ebp
pop ebp
retn
call sub_40d1e0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov dl [ ebp - 0xc ]
or dl 0x8
mov [ ebp - 0xc ] dl
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call sub_40d310
add esp 0x8
mov dl [ ebp - 0xc ]
or dl 0x1
mov [ ebp - 0xc ] dl
mov eax [ ebp - 0x8 ]
sar eax 0x5
mov ecx [ ebp - 0x8 ]
and ecx 0x1f
mov edx [ eax * 4 + rw-data ]
mov al [ ebp - 0xc ]
mov [ edx + ecx * 8 + 0x4 ] al
mov eax [ ebp - 0x8 ]
mov [ rw-data ] 0x18
mov [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
sub_40d5e0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40d630
add esp 0x10
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
push 0x1
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40d630
add esp 0x10
jmp r-xdata
mov eax [ ebp + 0xc ]
pop ebp
retn
sub_40d630
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x2d
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
neg eax
mov [ ebp + 0x8 ] eax
mov edx [ ebp - 0xc ]
add edx 0x30
mov eax [ ebp - 0x4 ]
mov [ eax ] dl
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x57
mov eax [ ebp - 0x4 ]
mov [ eax ] dl
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
cmp [ ebp - 0xc ] 0x9
jbe r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x0
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0x0
ja r-xdata
mov ecx [ ebp - 0x4 ]
mov dl [ ecx ]
mov [ ebp - 0x10 ] dl
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov dl [ ecx ]
mov [ eax ] dl
mov eax [ ebp - 0x8 ]
mov cl [ ebp - 0x10 ]
mov [ eax ] cl
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x4 ]
jb r-xdata
mov esp ebp
pop ebp
retn
sub_40d700
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40d630
add esp 0x10
mov eax [ ebp + 0xc ]
mov esp ebp
pop ebp
retn
sub_40d740
push ebp
mov ebp esp
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40d630
add esp 0x10
mov eax [ ebp + 0xc ]
pop ebp
retn
sub_40d760
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
jg r-xdata
jl r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jae r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40d7b0
mov eax [ ebp + 0x10 ]
mov esp ebp
pop ebp
retn
sub_40d7b0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x2d
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
neg eax
mov ecx [ ebp + 0xc ]
adc ecx 0x0
neg ecx
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] ecx
mov edx [ ebp - 0xc ]
add edx 0x30
mov eax [ ebp - 0x4 ]
mov [ eax ] dl
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x57
mov eax [ ebp - 0x4 ]
mov [ eax ] dl
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0x14 ]
xor ecx ecx
push ecx
push eax
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40f3d0
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x14 ]
xor edx edx
push edx
push ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40f360
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
cmp [ ebp - 0xc ] 0x9
jbe r-xdata
jb r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x0
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0x0
ja r-xdata
mov ecx [ ebp - 0x4 ]
mov dl [ ecx ]
mov [ ebp - 0x10 ] dl
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov dl [ ecx ]
mov [ eax ] dl
mov eax [ ebp - 0x8 ]
mov cl [ ebp - 0x10 ]
mov [ eax ] cl
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x4 ]
jb r-xdata
mov esp ebp
pop ebp
retn 0x14
sub_40d8b0
push ebp
mov ebp esp
push 0x0
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40d7b0
mov eax [ ebp + 0x10 ]
pop ebp
retn
sub_40d8d0
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x24 ] eax
lea ecx [ ebp + 0x14 ]
mov [ ebp - 0x2c ] ecx
xor edx edx
test edx edx
jne r-xdata
push r--data
push 0x0
push 0x5d
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
int3
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x5e
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0xc ] 0x42
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp - 0x2c ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
call sub_40aaa0
add esp 0xc
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x4 ]
sub eax 0x1
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x24 ]
cmp [ edx + 0x4 ] 0x0
jl r-xdata
int3
mov eax [ ebp - 0x24 ]
push eax
push 0x0
call sub_406230
add esp 0x8
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
mov [ ecx ] 0x0
xor edx edx
and edx 0xff
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp - 0x24 ]
mov [ edx ] ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40d9d0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_40d9e0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_40dac0
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x24 ] eax
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x5a
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
int3
xor edx edx
test edx edx
jne r-xdata
push r--data
push 0x0
push 0x5b
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
mov [ eax + 0xc ] 0x42
mov ecx [ ebp - 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
call sub_40aaa0
add esp 0xc
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp - 0x24 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0x24 ]
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
int3
mov edx [ ebp - 0x24 ]
push edx
push 0x0
call sub_406230
add esp 0x8
mov [ ebp - 0x2c ] eax
mov edx [ ebp - 0x24 ]
mov eax [ edx ]
mov [ eax ] 0x0
xor ecx ecx
and ecx 0xff
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp - 0x24 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40dbc0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_40dbf0
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0xc ] 0x4
je r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x3
jne r-xdata
mov [ rw-data ] 0x16
or eax 0xffffffff
cmp [ ebp + 0x8 ] 0x2
je r-xdata
cmp [ ebp + 0x8 ] 0x2
je r-xdata
cmp [ ebp + 0x8 ] 0x15
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x15
jne r-xdata
cmp [ ebp + 0x8 ] 0x16
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
sub ecx 0x2
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x14
ja r-xdata
push 0x1
push sub_40dd90
call [ SetConsoleCtrlHandler@IAT ]
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0xf
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov dl [ eax + lookup_table_40dd6e ]
jmp [ edx * 4 + jump_table_40dd5a ]
call [ GetLastError@IAT ]
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp + 0x8 ] 0x8
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
mov [ rw-data ] edx
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
mov [ rw-data ] ecx
jmp r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
mov [ rw-data ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
mov [ rw-data ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40dfc0
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x4
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
cmp [ ebp + 0x8 ] 0xb
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x4 ]
add ecx 0xc
mov [ ebp - 0x4 ] ecx
mov edx [ rw-data ]
imul edx edx 0xc
add edx rw-data
cmp [ ebp - 0x4 ] edx
jb r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
cmp ecx [ ebp + 0x8 ]
jne r-xdata
sub_40dd90
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] rw-data
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x15
mov [ ebp - 0x8 ] rw-data
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax 0x1
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0x0
mov edx [ ebp - 0x4 ]
push edx
call [ ebp - 0xc ]
add esp 0x4
mov esp ebp
pop ebp
retn 0x4
sub_40de00
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
sub ecx 0x2
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0x18 ] 0x14
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x18 ]
xor edx edx
mov dl [ eax + lookup_table_40df9c ]
jmp [ edx * 4 + jump_table_40df84 ]
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] rw-data
mov ecx [ ebp - 0x10 ]
mov edx [ ecx ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov [ ebp - 0x10 ] rw-data
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov [ ebp - 0x10 ] rw-data
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] rw-data
mov ecx [ ebp - 0x10 ]
mov edx [ ecx ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40dfc0
add esp 0x4
add eax 0x8
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x1
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x8
je r-xdata
push 0x3
call sub_407200
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov [ rw-data ] 0x0
cmp [ ebp + 0x8 ] 0x8
jne r-xdata
cmp [ ebp + 0x8 ] 0xb
je r-xdata
cmp [ ebp + 0x8 ] 0x8
jne r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] ecx
mov [ rw-data ] 0x8c
cmp [ ebp + 0x8 ] 0x4
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax ] 0x0
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call [ ebp - 0x14 ]
add esp 0x4
mov ecx [ rw-data ]
push ecx
push 0x8
call [ ebp - 0x14 ]
add esp 0x8
jmp r-xdata
mov ecx [ rw-data ]
add ecx [ rw-data ]
cmp [ ebp - 0x8 ] ecx
jge r-xdata
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
cmp [ ebp + 0x8 ] 0x8
jne r-xdata
cmp [ ebp + 0x8 ] 0xb
je r-xdata
cmp [ ebp + 0x8 ] 0x8
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
imul edx edx 0xc
mov [ edx + rw-data ] 0x0
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
mov [ rw-data ] ecx
cmp [ ebp + 0x8 ] 0x4
jne r-xdata
cmp [ ebp + 0x8 ] 0x8
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_40dfc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] rw-data
mov ecx [ rw-data ]
imul ecx ecx 0xc
add ecx rw-data
cmp [ ebp - 0x4 ] ecx
jae r-xdata
mov edx [ ebp - 0x4 ]
add edx 0xc
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
imul eax eax 0xc
add eax rw-data
cmp [ ebp - 0x4 ] eax
jae r-xdata
xor eax eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
mov esp ebp
pop ebp
retn
sub_40e020
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
push r--data
mov eax [ ebp - 0x8 ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call [ rw-data ]
cmp [ rw-data ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
push r--data
mov ecx [ ebp - 0x8 ]
push ecx
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push r--data
mov edx [ ebp - 0x8 ]
push edx
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
push eax
call [ rw-data ]
mov [ ebp - 0x4 ] eax
sub_40e0e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x2e
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ rw-data ]
add ecx 0x1
mov [ rw-data ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
push 0x3b
push r--data
push 0x2
push 0x1000
call sub_4026d0
add esp 0x10
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
int3
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
or edx 0x4
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp - 0x4 ]
add ecx 0x14
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
or ecx 0x8
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1000
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
mov [ ecx ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e1b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jb r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx eax [ eax + edx * 8 + 0x4 ]
and eax 0x40
xor eax eax
jmp r-xdata
pop ebp
retn
sub_40e1e0
push ebp
mov ebp esp
sub esp 0x8
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x4
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx - 0x4 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp - 0x4 ]
push ecx
push 0x40
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40e220
add esp 0x10
mov esp ebp
pop ebp
retn
sub_40e220
push ebp
mov ebp esp
sub esp 0x48
mov [ ebp - 0x24 ] 0xc
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp + 0xc ]
and eax 0x80
test eax eax
je r-xdata
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x38 ] 0x10
jmp r-xdata
mov edx [ ebp + 0xc ]
and edx 0x3
mov [ ebp - 0x40 ] edx
cmp [ ebp - 0x40 ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
and edx 0x4000
test edx edx
je r-xdata
mov ecx [ ebp + 0xc ]
and ecx 0x8000
test ecx ecx
jne r-xdata
mov [ ebp - 0x34 ] 0x80000000
jmp r-xdata
cmp [ ebp - 0x40 ] 0x1
je r-xdata
cmp [ rw-data ] 0x8000
je r-xdata
mov al [ ebp - 0x38 ]
or al 0x80
mov [ ebp - 0x38 ] al
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x44 ]
sub ecx 0x10
mov [ ebp - 0x44 ] ecx
cmp [ ebp - 0x44 ] 0x30
ja r-xdata
mov [ ebp - 0x34 ] 0x40000000
jmp r-xdata
cmp [ ebp - 0x40 ] 0x2
je r-xdata
mov cl [ ebp - 0x38 ]
or cl 0x80
mov [ ebp - 0x38 ] cl
mov [ rw-data ] 0x16
mov [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x44 ]
xor edx edx
mov dl [ eax + lookup_table_40e6df ]
jmp [ edx * 4 + jump_table_40e6cb ]
mov [ ebp - 0x34 ] 0xc0000000
jmp r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
mov [ ebp - 0x8 ] 0x3
jmp r-xdata
mov [ rw-data ] 0x16
mov [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
and ecx 0x700
mov [ ebp - 0x48 ] ecx
cmp [ ebp - 0x48 ] 0x400
jg r-xdata
cmp [ ebp - 0x48 ] 0x500
je r-xdata
cmp [ ebp - 0x48 ] 0x400
je r-xdata
mov [ ebp - 0x18 ] 0x1
jmp r-xdata
cmp [ ebp - 0x48 ] 0x600
je r-xdata
mov [ ebp - 0x18 ] 0x3
jmp r-xdata
cmp [ ebp - 0x48 ] 0x200
jg r-xdata
mov [ ebp - 0x28 ] 0x80
mov edx [ ebp + 0xc ]
and edx 0x100
test edx edx
je r-xdata
mov [ ebp - 0x18 ] 0x5
jmp r-xdata
cmp [ ebp - 0x48 ] 0x700
je r-xdata
cmp [ ebp - 0x48 ] 0x300
je r-xdata
cmp [ ebp - 0x48 ] 0x200
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0x40
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
add ecx 0x4
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x2c ]
mov eax [ edx - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x2c ] 0x0
mov ecx [ rw-data ]
not ecx
mov edx [ ebp - 0x10 ]
and edx ecx
and edx 0x80
test edx edx
jne r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x48 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0x1000
test eax eax
je r-xdata
mov ecx [ ebp - 0x28 ]
or ecx 0x4000000
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x34 ]
or edx 0x10000
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x28 ] 0x1
mov [ rw-data ] 0x16
mov [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x48 ] 0x100
je r-xdata
mov edx [ ebp + 0xc ]
and edx 0x20
test edx edx
je r-xdata
mov ecx [ ebp - 0x28 ]
or ch 0x1
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
and ecx 0x10
test ecx ecx
je r-xdata
mov eax [ ebp - 0x28 ]
or eax 0x8000000
mov [ ebp - 0x28 ] eax
jmp r-xdata
call sub_40d1e0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x28 ]
or edx 0x10000000
mov [ ebp - 0x28 ] edx
push 0x0
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ CreateFileA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov [ rw-data ] 0x18
mov [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
call [ GetFileType@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_40d150
add esp 0x4
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jne r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call [ CloseHandle@IAT ]
call [ GetLastError@IAT ]
push eax
call sub_40d150
add esp 0x4
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0xc ] 0x3
jne r-xdata
mov dl [ ebp - 0x38 ]
or dl 0x40
mov [ ebp - 0x38 ] dl
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
call sub_40d310
add esp 0x8
mov al [ ebp - 0x38 ]
or al 0x1
mov [ ebp - 0x38 ] al
mov ecx [ ebp - 0x14 ]
sar ecx 0x5
mov edx [ ebp - 0x14 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
mov cl [ ebp - 0x38 ]
mov [ eax + edx * 8 + 0x4 ] cl
movsx edx [ ebp - 0x38 ]
and edx 0x48
test edx edx
jne r-xdata
mov al [ ebp - 0x38 ]
or al 0x8
mov [ ebp - 0x38 ] al
movsx eax [ ebp - 0x38 ]
and eax 0x48
test eax eax
jne r-xdata
movsx eax [ ebp - 0x38 ]
and eax 0x80
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0xc ]
and ecx 0x8
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
and ecx 0x2
test ecx ecx
je r-xdata
mov edx [ ebp - 0x14 ]
sar edx 0x5
mov eax [ ebp - 0x14 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov dl [ ecx + eax * 8 + 0x4 ]
or dl 0x20
mov eax [ ebp - 0x14 ]
sar eax 0x5
mov ecx [ ebp - 0x14 ]
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx * 8 + 0x4 ] dl
push 0x2
push 0xffffffff
mov edx [ ebp - 0x14 ]
push edx
call sub_40c1a0
add esp 0xc
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0x3c ] 0xffffffff
jne r-xdata
mov [ ebp - 0x30 ] 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
call sub_40bd40
add esp 0xc
test eax eax
jne r-xdata
cmp [ rw-data ] 0x83
je r-xdata
push 0x0
push 0x0
mov ecx [ ebp - 0x14 ]
push ecx
call sub_40c1a0
add esp 0xc
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0x3c ] 0xffffffff
jne r-xdata
movsx eax [ ebp - 0x30 ]
cmp eax 0x1a
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
push eax
call sub_4058f0
add esp 0x4
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x14 ]
push edx
call sub_4058f0
add esp 0x4
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x3c ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
call sub_40fc10
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call sub_4058f0
add esp 0x4
or eax 0xffffffff
jmp r-xdata
sub_40e710
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40e770 ]
jmp [ ecx * 4 + jump_table_40e7ec ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40e858 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40e858 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_40e9f0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40e8f8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e9f0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40e858 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40e858 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40e858 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40e9f0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e9f0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e9f0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e9f0 ]
sub_40ea50
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
push r--data
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
push 0x1
push r--data
push 0x1
push 0x0
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x1c ]
push ecx
call [ GetStringTypeA@IAT ]
jmp r-xdata
mov edx [ rw-data ]
mov [ ebp + 0x1c ] edx
xor eax eax
jmp r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x20 ]
neg edx
sbb edx edx
and edx 0x8
add edx 0x1
push edx
mov eax [ ebp + 0x18 ]
push eax
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov edx [ rw-data ]
mov [ ebp + 0x18 ] edx
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x20 ]
shl eax 0x1
add eax 0x3
and al 0xfc
call sub_40dbc0
mov [ ebp - 0x2c ] esp
mov [ ebp - 0x18 ] esp
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x20 ]
shl edx 0x1
push edx
push 0x0
mov eax [ ebp - 0x24 ]
push eax
call sub_406c40
add esp 0xc
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
push 0x1
mov edx [ ebp + 0x18 ]
push edx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ GetStringTypeW@IAT ]
jmp r-xdata
xor eax eax
jmp r-xdata
sub_40ec10
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
test eax eax
jne r-xdata
cmp [ rw-data ] 0x2
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push r--data
push 0x0
push 0x4f
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
int3
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx [ ebp + 0xc ]
movsx edx [ ecx ]
test edx edx
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx ]
mov eax [ rw-data ]
xor ecx ecx
mov cx [ eax + edx * 2 ]
and ecx 0x8000
test ecx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
xor edx edx
cmp [ ebp + 0x8 ] 0x0
setne dl
push edx
mov eax [ ebp + 0x8 ]
push eax
push 0x1
mov ecx [ ebp + 0xc ]
push ecx
push 0x9
mov edx [ rw-data ]
push edx
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp + 0xc ]
movzx dx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] dx
mov eax 0x1
mov [ rw-data ] 0x2a
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x10 ]
cmp edx [ rw-data ]
jb r-xdata
mov edx [ ebp + 0x10 ]
cmp edx [ rw-data ]
jl r-xdata
mov [ rw-data ] 0x2a
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx ecx [ eax + 0x1 ]
test ecx ecx
jne r-xdata
xor eax eax
cmp [ ebp + 0x8 ] 0x0
setne al
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ rw-data ]
push edx
mov eax [ ebp + 0xc ]
push eax
push 0x9
mov ecx [ rw-data ]
push ecx
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
jmp r-xdata
sub_40ed70
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
xor eax eax
mov ax [ edx + ecx * 2 ]
and eax 0x103
mov [ ebp - 0x4 ] eax
push 0x103
mov eax [ ebp + 0x8 ]
push eax
call sub_409010
add esp 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40edc0
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
xor eax eax
mov ax [ edx + ecx * 2 ]
and eax 0x1
mov [ ebp - 0x4 ] eax
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_409010
add esp 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40ee00
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
xor eax eax
mov ax [ edx + ecx * 2 ]
and eax 0x2
mov [ ebp - 0x4 ] eax
push 0x2
mov eax [ ebp + 0x8 ]
push eax
call sub_409010
add esp 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40ee40
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
xor eax eax
mov ax [ edx + ecx * 2 ]
and eax 0x4
mov [ ebp - 0x4 ] eax
push 0x4
mov eax [ ebp + 0x8 ]
push eax
call sub_409010
add esp 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40ee80
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
xor eax eax
mov ax [ edx + ecx * 2 ]
and eax 0x80
mov [ ebp - 0x4 ] eax
push 0x80
mov eax [ ebp + 0x8 ]
push eax
call sub_409010
add esp 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40eed0
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
xor eax eax
mov ax [ edx + ecx * 2 ]
and eax 0x8
mov [ ebp - 0x4 ] eax
push 0x8
mov eax [ ebp + 0x8 ]
push eax
call sub_409010
add esp 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40ef10
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
xor eax eax
mov ax [ edx + ecx * 2 ]
and eax 0x10
mov [ ebp - 0x4 ] eax
push 0x10
mov eax [ ebp + 0x8 ]
push eax
call sub_409010
add esp 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40ef50
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
xor eax eax
mov ax [ edx + ecx * 2 ]
and eax 0x107
mov [ ebp - 0x4 ] eax
push 0x107
mov eax [ ebp + 0x8 ]
push eax
call sub_409010
add esp 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40efa0
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
xor eax eax
mov ax [ edx + ecx * 2 ]
and eax 0x157
mov [ ebp - 0x4 ] eax
push 0x157
mov eax [ ebp + 0x8 ]
push eax
call sub_409010
add esp 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40eff0
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
xor eax eax
mov ax [ edx + ecx * 2 ]
and eax 0x117
mov [ ebp - 0x4 ] eax
push 0x117
mov eax [ ebp + 0x8 ]
push eax
call sub_409010
add esp 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40f040
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
xor eax eax
mov ax [ edx + ecx * 2 ]
and eax 0x20
mov [ ebp - 0x4 ] eax
push 0x20
mov eax [ ebp + 0x8 ]
push eax
call sub_409010
add esp 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40f0a0
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x1
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
xor eax eax
mov ax [ edx + ecx * 2 ]
and eax 0x103
mov [ ebp - 0x4 ] eax
push 0x103
mov eax [ ebp + 0x8 ]
push eax
call sub_409010
add esp 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40f100
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x1
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
xor eax eax
mov ax [ edx + ecx * 2 ]
and eax 0x107
mov [ ebp - 0x4 ] eax
push 0x107
mov eax [ ebp + 0x8 ]
push eax
call sub_409010
add esp 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40f160
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_40f180
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x60
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
int3
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and eax 0x1
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
and edx 0x80
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_40e0e0
add esp 0x4
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
and ecx 0x2
test ecx ecx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and eax 0x40
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
sub eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
sub edx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
movsx eax [ edx ]
movsx ecx [ ebp + 0x8 ]
cmp eax ecx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
or eax 0xffffffff
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
add eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and al 0xef
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
or al 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0x8 ]
and eax 0xff
sub_40f2c0
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push 0x1
lea eax [ ebp + 0xc ]
push eax
push 0x220
mov ecx [ rw-data ]
push ecx
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0xffff
cmp eax 0xff
jle r-xdata
mov esp ebp
pop ebp
retn
mov [ rw-data ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov dl [ ebp + 0xc ]
mov [ ecx ] dl
mov eax 0x1
jmp r-xdata
mov [ rw-data ] 0x2a
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
sub_40f360
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_40f3d0
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_40f450
push ebp
mov ebp esp
sub esp 0x28
mov eax [ ebp + 0x8 ]
push eax
call sub_40f750
add esp 0x4
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
cmp ecx [ rw-data ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
call sub_40f830
call sub_40f8b0
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x5
jae r-xdata
lea edx [ ebp - 0x20 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0x30
mov ecx [ eax + rw-data ]
cmp ecx [ ebp + 0x8 ]
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
or eax 0xffffffff
call sub_40f830
call sub_40f8b0
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x101
jae r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x24 ] 0x101
jae r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] 0x0
cmp [ ebp - 0x20 ] 0x1
jbe r-xdata
mov edx [ ebp - 0x24 ]
mov [ edx + rw-data ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ eax + rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x0
lea ecx [ ebp - 0x1a ]
mov [ ebp - 0x28 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x24 ]
add ecx 0x1
mov [ ebp - 0x24 ] ecx
cmp [ ebp - 0xc ] 0x4
jae r-xdata
mov edx [ ebp - 0x24 ]
add edx 0x1
mov [ ebp - 0x24 ] edx
cmp [ ebp - 0xc ] 0x6
jae r-xdata
mov eax [ ebp - 0x28 ]
xor ecx ecx
mov cl [ eax ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ rw-data ] ecx
mov [ rw-data ] 0x1
mov edx [ rw-data ]
push edx
call sub_40f7b0
add esp 0x4
mov [ rw-data ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
imul edx edx 0x30
mov eax [ ebp - 0xc ]
lea ecx [ edx + eax * 8 + rw-data ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
call sub_40f8b0
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ eax * 2 + rw-data ] 0x0
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x28 ]
xor eax eax
mov al [ edx + 0x1 ]
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x6
jae r-xdata
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov cl [ eax ]
test ecx ecx
je r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
cmp [ ebp - 0x24 ] 0xff
jae r-xdata
mov ecx [ ebp - 0x28 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
call sub_40f8b0
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
imul ecx ecx 0x30
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
mov cx [ ecx + eax * 2 + rw-data ]
mov [ edx * 2 + rw-data ] cx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
xor eax eax
mov al [ edx + 0x1 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push ecx
call sub_40f7b0
add esp 0x4
mov [ rw-data ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov dl [ ecx + rw-data ]
or dl 0x8
mov eax [ ebp - 0x24 ]
mov [ eax + rw-data ] dl
jmp r-xdata
mov ecx [ ebp - 0x28 ]
xor edx edx
mov dl [ ecx + 0x1 ]
cmp [ ebp - 0x24 ] edx
ja r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + rw-data ]
or cl 0x4
mov edx [ ebp - 0x24 ]
mov [ edx + rw-data ] cl
jmp r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dl [ ecx + 0x1 ]
cmp [ ebp - 0x24 ] edx
ja r-xdata
mov edx [ ebp - 0x28 ]
add edx 0x2
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0xc ]
mov dl [ eax + rw-data ]
or dl [ ecx + rw-data ]
mov eax [ ebp - 0x24 ]
mov [ eax + rw-data ] dl
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x2
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
sub_40f750
push ebp
mov ebp esp
mov [ rw-data ] 0x0
cmp [ ebp + 0x8 ] 0xfffffffe
jne r-xdata
cmp [ ebp + 0x8 ] 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp [ ebp + 0x8 ] 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x1
mov eax [ rw-data ]
jmp r-xdata
sub_40f7b0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x3a4
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x12
ja r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov dl [ eax + lookup_table_40f814 ]
jmp [ edx * 4 + jump_table_40f800 ]
mov eax 0x411
jmp r-xdata
mov eax 0x804
jmp r-xdata
mov eax 0x412
jmp r-xdata
mov eax 0x404
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_40f830
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x101
jge r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + rw-data ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x6
jge r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax * 2 + rw-data ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
sub_40f8b0
push ebp
mov ebp esp
sub esp 0x51c
lea eax [ ebp - 0x318 ]
push eax
mov ecx [ rw-data ]
push ecx
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x51c ] 0x0
jmp r-xdata
mov [ ebp - 0x51c ] 0x0
jmp r-xdata
cmp [ ebp - 0x51c ] 0x100
jae r-xdata
cmp [ ebp - 0x51c ] 0x100
jae r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x51c ] 0x41
jb r-xdata
mov [ ebp - 0x304 ] 0x20
lea edx [ ebp - 0x312 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x51c ]
mov cl [ ebp - 0x51c ]
mov [ ebp + eax - 0x304 ] cl
jmp r-xdata
cmp [ ebp - 0x51c ] 0x61
jb r-xdata
cmp [ ebp - 0x51c ] 0x5a
ja r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx ]
test edx edx
je r-xdata
mov edx [ ebp - 0x51c ]
add edx 0x1
mov [ ebp - 0x51c ] edx
mov edx [ ebp - 0x51c ]
mov [ edx + rw-data ] 0x0
cmp [ ebp - 0x51c ] 0x7a
ja r-xdata
mov ecx [ ebp - 0x51c ]
mov dl [ ecx + rw-data ]
or dl 0x10
mov eax [ ebp - 0x51c ]
mov [ eax + rw-data ] dl
mov ecx [ ebp - 0x51c ]
add ecx 0x20
mov edx [ ebp - 0x51c ]
mov [ edx + rw-data ] cl
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
mov ecx [ rw-data ]
push ecx
lea edx [ ebp - 0x204 ]
push edx
push 0x100
lea eax [ ebp - 0x304 ]
push eax
push 0x1
call sub_40ea50
add esp 0x1c
push 0x0
mov ecx [ rw-data ]
push ecx
push 0x100
lea edx [ ebp - 0x418 ]
push edx
push 0x100
lea eax [ ebp - 0x304 ]
push eax
push 0x100
mov ecx [ rw-data ]
push ecx
call sub_40fe90
add esp 0x20
push 0x0
mov edx [ rw-data ]
push edx
push 0x100
lea eax [ ebp - 0x518 ]
push eax
push 0x100
lea ecx [ ebp - 0x304 ]
push ecx
push 0x200
mov edx [ rw-data ]
push edx
call sub_40fe90
add esp 0x20
mov [ ebp - 0x51c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax ]
mov [ ebp - 0x51c ] ecx
jmp r-xdata
mov eax [ ebp - 0x51c ]
add eax 0x1
mov [ ebp - 0x51c ] eax
mov eax [ ebp - 0x51c ]
mov cl [ eax + rw-data ]
or cl 0x20
mov edx [ ebp - 0x51c ]
mov [ edx + rw-data ] cl
mov eax [ ebp - 0x51c ]
sub eax 0x20
mov ecx [ ebp - 0x51c ]
mov [ ecx + rw-data ] al
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x51c ] 0x100
jae r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax + 0x1 ]
cmp [ ebp - 0x51c ] ecx
ja r-xdata
jmp r-xdata
mov ecx [ ebp - 0x51c ]
xor edx edx
mov dx [ ebp + ecx * 2 - 0x204 ]
and edx 0x1
test edx edx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x51c ]
mov [ ebp + edx - 0x304 ] 0x20
jmp r-xdata
mov eax [ ebp - 0x51c ]
xor ecx ecx
mov cx [ ebp + eax * 2 - 0x204 ]
and ecx 0x2
test ecx ecx
je r-xdata
mov eax [ ebp - 0x51c ]
mov cl [ eax + rw-data ]
or cl 0x10
mov edx [ ebp - 0x51c ]
mov [ edx + rw-data ] cl
mov eax [ ebp - 0x51c ]
mov ecx [ ebp - 0x51c ]
mov dl [ ebp + ecx - 0x418 ]
mov [ eax + rw-data ] dl
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x2
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x51c ]
add edx 0x1
mov [ ebp - 0x51c ] edx
mov edx [ ebp - 0x51c ]
mov [ edx + rw-data ] 0x0
mov edx [ ebp - 0x51c ]
mov al [ edx + rw-data ]
or al 0x20
mov ecx [ ebp - 0x51c ]
mov [ ecx + rw-data ] al
mov edx [ ebp - 0x51c ]
mov eax [ ebp - 0x51c ]
mov cl [ ebp + eax - 0x518 ]
mov [ edx + rw-data ] cl
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x51c ]
add eax 0x1
mov [ ebp - 0x51c ] eax
sub_40fc10
push ebp
mov ebp esp
mov eax 0x1024
call sub_40dbc0
push ebx
push esi
push edi
lea eax [ ebp - 0x1004 ]
mov [ ebp - 0x1014 ] eax
mov [ ebp - 0x101c ] 0x0
mov ecx [ ebp + 0x8 ]
cmp ecx [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
movsx edx [ ecx + eax * 8 + 0x4 ]
and edx 0x1
test edx edx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x81
push r--data
push 0x2
call sub_405b90
add esp 0x14
cmp eax 0x1
jne r-xdata
push 0x1
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c1a0
add esp 0xc
mov [ ebp - 0x100c ] eax
cmp [ ebp - 0x100c ] 0xffffffff
je r-xdata
int3
or eax 0xffffffff
jmp r-xdata
push 0x2
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_40c1a0
add esp 0xc
mov [ ebp - 0x1010 ] eax
cmp [ ebp - 0x1010 ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
sub eax [ ebp - 0x1010 ]
mov [ ebp - 0x1018 ] eax
cmp [ ebp - 0x1018 ] 0x0
jle r-xdata
cmp [ ebp - 0x1018 ] 0x0
jge r-xdata
push 0x1000
push 0x0
mov ecx [ ebp - 0x1014 ]
push ecx
call sub_406c40
add esp 0xc
push 0x8000
mov edx [ ebp + 0x8 ]
push edx
call sub_4101f0
add esp 0x8
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x100c ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c1a0
add esp 0xc
mov eax [ ebp - 0x101c ]
push 0x0
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c1a0
add esp 0xc
mov eax [ ebp + 0x8 ]
push eax
call sub_40d490
add esp 0x4
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
mov [ ebp - 0x101c ] eax
cmp [ ebp - 0x101c ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x1018 ]
mov [ ebp - 0x1020 ] eax
mov [ ebp - 0x1020 ] 0x1000
jmp r-xdata
mov [ rw-data ] 0xd
call [ GetLastError@IAT ]
mov [ rw-data ] eax
mov edx [ ebp - 0x1018 ]
mov [ ebp - 0x1024 ] edx
mov [ ebp - 0x1024 ] 0x1000
jmp r-xdata
mov ecx [ ebp - 0x1020 ]
mov [ ebp - 0x1008 ] ecx
cmp [ ebp - 0x1018 ] 0x1000
jl r-xdata
mov ecx [ ebp - 0x1018 ]
sub ecx [ ebp - 0x1008 ]
mov [ ebp - 0x1018 ] ecx
cmp [ ebp - 0x1018 ] 0x0
jg r-xdata
cmp [ rw-data ] 0x5
jne r-xdata
mov eax [ ebp - 0x1024 ]
push eax
mov ecx [ ebp - 0x1014 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4064b0
add esp 0xc
mov [ ebp - 0x1008 ] eax
cmp [ ebp - 0x1008 ] 0xffffffff
jne r-xdata
cmp [ ebp - 0x1018 ] 0x1000
jl r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4101f0
add esp 0x8
jmp r-xdata
mov eax [ ebp - 0x1008 ]
mov [ ebp - 0x101c ] eax
jmp r-xdata
mov [ rw-data ] 0xd
sub_40fe90
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
push 0x0
push 0x0
push 0x1
push r--data
push 0x100
push 0x0
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
call sub_4101a0
add esp 0x8
mov [ ebp + 0x14 ] eax
push 0x0
push 0x0
push 0x1
push r--data
push 0x100
push 0x0
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov edx [ ebp + 0x1c ]
push edx
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ LCMapStringA@IAT ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
xor eax eax
cmp [ ebp + 0x20 ] 0x0
jne r-xdata
lea esp [ ebp - 0x40 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x24 ]
neg edx
sbb edx edx
and edx 0x8
add edx 0x1
push edx
mov eax [ ebp + 0x20 ]
push eax
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov edx [ rw-data ]
mov [ ebp + 0x20 ] edx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
shl eax 0x1
add eax 0x3
and al 0xfc
call sub_40dbc0
mov [ ebp - 0x30 ] esp
mov [ ebp - 0x18 ] esp
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
push 0x1
mov eax [ ebp + 0x20 ]
push eax
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push 0x0
push 0x0
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ LCMapStringW@IAT ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0xc ]
and edx 0x400
test edx edx
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x2c ]
shl eax 0x1
add eax 0x3
and al 0xfc
call sub_40dbc0
mov [ ebp - 0x34 ] esp
mov [ ebp - 0x18 ] esp
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ ebp + 0x1c ]
jle r-xdata
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
jmp r-xdata
mov ecx [ ebp + 0x1c ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp - 0x2c ]
push edx
mov eax [ ebp - 0x20 ]
push eax
push 0x220
mov ecx [ ebp + 0x20 ]
push ecx
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
push 0x220
mov edx [ ebp + 0x20 ]
push edx
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
sub_4101a0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
sub eax 0x1
mov [ ebp - 0x8 ] eax
test edx edx
je r-xdata
sub_4101f0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx ecx [ eax + edx * 8 + 0x4 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
movsx edx [ ecx + eax * 8 + 0x4 ]
and edx 0x80
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0xc ] 0x8000
jne r-xdata
cmp [ ebp + 0xc ] 0x4000
jne r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov edx [ eax * 4 + rw-data ]
mov al [ edx + ecx * 8 + 0x4 ]
and al 0x7f
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edx * 8 + 0x4 ] al
jmp r-xdata
mov [ rw-data ] 0x16
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov dl [ ecx + eax * 8 + 0x4 ]
or dl 0x80
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx * 8 + 0x4 ] dl
jmp r-xdata
mov eax [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax 0xffffc000
add eax 0x8000
sub_410430
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_404a60
add esp 0x4
add eax 0x1
push eax
call sub_4026b0
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_40d9d0
add esp 0x8
jmp r-xdata
mov esp ebp
pop ebp
retn
j_sub_401880
jmp sub_401880
j_sub_401950
jmp sub_401950
j_sub_4016d0
jmp sub_4016d0
j_sub_401820
jmp sub_401820
j_sub_401740
jmp sub_401740
j_sub_401a60
jmp sub_401a60
j_sub_4010a0
jmp sub_4010a0
j_sub_401910
jmp sub_401910
j_sub_4020e0
jmp sub_4020e0
j_sub_4017b0
jmp sub_4017b0
j_sub_401ec0
jmp sub_401ec0
j_sub_401bf0
jmp sub_401bf0
sub_402690
push ebp
mov ebp esp
push 0x40
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4025a0
add esp 0xc
pop ebp
retn
sub_402770
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_402790
add esp 0x10
pop ebp
retn
sub_4030f0
push ebp
mov ebp esp
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_403110
add esp 0x8
pop ebp
retn
sub_403500
push ebp
mov ebp esp
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_403520
add esp 0x8
pop ebp
retn
sub_403670
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ rw-data ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_403720
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ rw-data ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_403d70
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ rw-data ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_404720
push ebp
mov ebp esp
push 0x1
call sub_404730
add esp 0x4
pop ebp
retn
sub_404940
push ebp
mov ebp esp
call sub_404720
movsx eax [ rw-data ]
test eax eax
je r-xdata
pop ebp
retn
call sub_40a9f0
sub_405873
mov esp [ ebp - 0x18 ]
mov edx [ ebp - 0x20 ]
push edx
call sub_407200
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4058c0
push ebp
mov ebp esp
cmp [ rw-data ] 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40cf40
add esp 0x4
push 0xff
call [ ExitProcess@IAT ]
call sub_40cef0
sub_405a80
push ebp
mov ebp esp
call [ DebugBreak@IAT ]
pop ebp
retn
sub_405b70
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ rw-data ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_406be0
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ rw-data ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_406c00
push ebp
mov ebp esp
mov eax [ rw-data ]
pop ebp
retn
sub_406ca0
push ebp
mov ebp esp
mov eax [ rw-data ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_406cc0
add esp 0x8
pop ebp
retn
sub_406d80
push ebp
mov ebp esp
mov eax 0x1
pop ebp
retn
sub_4070a0
push ebp
mov ebp esp
call sub_407040
pop ebp
retn
sub_4071e0
push ebp
mov ebp esp
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_407260
add esp 0xc
pop ebp
retn
sub_407200
push ebp
mov ebp esp
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_407260
add esp 0xc
pop ebp
retn
sub_407220
push ebp
mov ebp esp
push 0x1
push 0x0
push 0x0
call sub_407260
add esp 0xc
pop ebp
retn
sub_407240
push ebp
mov ebp esp
push 0x1
push 0x1
push 0x0
call sub_407260
add esp 0xc
pop ebp
retn
sub_407370
push ebp
mov ebp esp
mov eax [ rw-data ]
pop ebp
retn
sub_407380
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x3f8
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax 0x1
xor eax eax
jmp r-xdata
pop ebp
retn
sub_40a498
or [ ecx + eax ] eax
add eax 0x9060909
add [ ecx ] ecx
or [ edi ] eax
or [ ecx ] ecx
or ah cl
int3
sub_40a570
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
pop ebp
retn
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40f180
add esp 0x8
sub_40b8e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx - 0x4 ]
pop ebp
retn
sub_40b920
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ax [ ecx - 0x4 ]
pop ebp
retn
sub_40cd3c
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40cdc6
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_40cd3c
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_40cdf2
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_40ced1
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_40cd5e
add esp 0x8
pop ebp
retn 0x4
sub_40dd73
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add [ esp + eax ] eax
add al 0x4
add al 0x2
add ecx esp
int3
sub_40dfa2
add [ 0x5050105 ] eax
add eax 0x5050502
add eax 0xcc040305
int3
sub_40eb94
mov eax 0x1
retn
sub_40f080
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x80
sbb eax eax
neg eax
pop ebp
retn
sub_40f090
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x7f
pop ebp
retn
sub_40f819
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ ebx ]
int3
sub_40fbc0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov eax [ rw-data ]
jmp r-xdata
pop ebp
retn
sub_40fbe0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
retn
push 0xfffffffd
call sub_40f450
add esp 0x4
mov [ rw-data ] 0x1
sub_40fe80
push ebp
mov ebp esp
push 0x2
call sub_405890
add esp 0x4
pop ebp
retn
sub_40ffd6
mov eax 0x1
retn
sub_4100cc
mov eax 0x1
retn
IsBadWritePtr
jmp [ IsBadWritePtr@IAT ]
IsBadReadPtr
jmp [ IsBadReadPtr@IAT ]
HeapValidate
jmp [ HeapValidate@IAT ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
GetVersion
jmp [ GetVersion@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
GetLastError
jmp [ GetLastError@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
DebugBreak
jmp [ DebugBreak@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
OutputDebugStringA
jmp [ OutputDebugStringA@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
HeapReAlloc
jmp [ HeapReAlloc@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
HeapDestroy
jmp [ HeapDestroy@IAT ]
HeapCreate
jmp [ HeapCreate@IAT ]
VirtualFree
jmp [ VirtualFree@IAT ]
TerminateProcess
jmp [ TerminateProcess@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
FlushFileBuffers
jmp [ FlushFileBuffers@IAT ]
SetHandleCount
jmp [ SetHandleCount@IAT ]
GetFileType
jmp [ GetFileType@IAT ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
UnhandledExceptionFilter
jmp [ UnhandledExceptionFilter@IAT ]
FreeEnvironmentStringsA
jmp [ FreeEnvironmentStringsA@IAT ]
FreeEnvironmentStringsW
jmp [ FreeEnvironmentStringsW@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
GetEnvironmentStrings
jmp [ GetEnvironmentStrings@IAT ]
GetEnvironmentStringsW
jmp [ GetEnvironmentStringsW@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
SetStdHandle
jmp [ SetStdHandle@IAT ]
SetConsoleCtrlHandler
jmp [ SetConsoleCtrlHandler@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
GetStringTypeA
jmp [ GetStringTypeA@IAT ]
GetStringTypeW
jmp [ GetStringTypeW@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetOEMCP
jmp [ GetOEMCP@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
LCMapStringA
jmp [ LCMapStringA@IAT ]
LCMapStringW
jmp [ LCMapStringW@IAT ]
